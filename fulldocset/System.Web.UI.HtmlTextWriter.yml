### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlTextWriter
  id: HtmlTextWriter
  children:
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.BeginRender
  - System.Web.UI.HtmlTextWriter.Close
  - System.Web.UI.HtmlTextWriter.DefaultTabString
  - System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  - System.Web.UI.HtmlTextWriter.Encoding
  - System.Web.UI.HtmlTextWriter.EndRender
  - System.Web.UI.HtmlTextWriter.EndTagLeftChars
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.EqualsChar
  - System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.FilterAttributes
  - System.Web.UI.HtmlTextWriter.Flush
  - System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.Indent
  - System.Web.UI.HtmlTextWriter.InnerWriter
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  - System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  - System.Web.UI.HtmlTextWriter.NewLine
  - System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.OutputTabs
  - System.Web.UI.HtmlTextWriter.PopEndTag
  - System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderAfterContent
  - System.Web.UI.HtmlTextWriter.RenderAfterTag
  - System.Web.UI.HtmlTextWriter.RenderBeforeContent
  - System.Web.UI.HtmlTextWriter.RenderBeforeTag
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderEndTag
  - System.Web.UI.HtmlTextWriter.SelfClosingChars
  - System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  - System.Web.UI.HtmlTextWriter.SemicolonChar
  - System.Web.UI.HtmlTextWriter.SingleQuoteChar
  - System.Web.UI.HtmlTextWriter.SlashChar
  - System.Web.UI.HtmlTextWriter.SpaceChar
  - System.Web.UI.HtmlTextWriter.StyleEqualsChar
  - System.Web.UI.HtmlTextWriter.TagKey
  - System.Web.UI.HtmlTextWriter.TagLeftChar
  - System.Web.UI.HtmlTextWriter.TagName
  - System.Web.UI.HtmlTextWriter.TagRightChar
  - System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  - System.Web.UI.HtmlTextWriter.Write(System.Char)
  - System.Web.UI.HtmlTextWriter.Write(System.Char[])
  - System.Web.UI.HtmlTextWriter.Write(System.Double)
  - System.Web.UI.HtmlTextWriter.Write(System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.Int64)
  - System.Web.UI.HtmlTextWriter.Write(System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.Single)
  - System.Web.UI.HtmlTextWriter.Write(System.String)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteBreak
  - System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
  type: Class
  summary: "Zapisuje znaki znaczników i tekst w strumieniu wyjściowym kontroli serwera ASP.NET. Ta klasa udostępnia możliwości formatowania kontrolek serwera ASP.NET używany do renderowania kodu znaczników do klientów."
  remarks: "Klasa HtmlTextWriter jest używany do renderowania kodu HTML 4.0 dla przeglądarek komputerowych. HtmlTextWriter jest również klasę podstawową dla wszystkich autorów znaczników w <xref:System.Web.UI>przestrzeni nazw, w tym <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, i <xref:System.Web.UI.XhtmlTextWriter>klasy.</xref:System.Web.UI.XhtmlTextWriter> </xref:System.Web.UI.Html32TextWriter> </xref:System.Web.UI.ChtmlTextWriter> </xref:System.Web.UI> Te klasy służą do zapisu elementy, atrybuty i informacje o różnych typów znaczników styl i układu. Ponadto te klasy są używane przez klasy karty strony i kontrolki, które są skojarzone z każdym języka znaczników.       W większości przypadków ASP.NET automatycznie używa twórcę odpowiedniego dla urządzenia wysyłającego żądanie. Jednak w przypadku utworzenia składnik zapisywania tekstu niestandardowego lub jeśli chcesz określić określonego składnika zapisywania do renderowania strony dla określonego urządzenia należy zamapować twórcę do strony `controlAdapters` sekcji pliku .browser aplikacji."
  example:
  - "The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class. The code example illustrates how to use various HtmlTextWriter methods, properties, and fields.  \n  \n [!code-cs[MarkupTextWriter_Samples1#1](~/add/codesnippet/csharp/t-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: 'public class HtmlTextWriter : System.IO.TextWriter'
  inheritance:
  - System.IO.TextWriter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> klasy, która korzysta z domyślnego ciągu kartę."
  remarks: "Przeciążenia HtmlTextWriter HtmlTextWriter Konstruktor korzysta <xref:System.Web.UI.HtmlTextWriter.DefaultTabString>Stała, gdy konieczne jest wcięcie linii.</xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Wywołuje <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>przeciążenia zainicjować nowego wystąpienia.</xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>"
  example:
  - "The following code example demonstrates how to use the HtmlTextWriter constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_26_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_26_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_26_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Wystąpienia, który renderuje zawartość znacznika.</xref:System.IO.TextWriter>"
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> klasy z znak tabulacji określonego ciągu."
  remarks: "Przeciążenia HtmlTextWriter HtmlTextWriter Konstruktor korzysta `tabString` gdy konieczne jest wcięcie linii. Wywołuje <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName>konstruktora podstawowego można zainicjować nowego wystąpienia.</xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_31_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_31_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_31_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer, string tabString);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Która renderuje zawartość znacznika.</xref:System.IO.TextWriter>"
    - id: tabString
      type: System.String
      description: "Ciąg używany do renderowania wcięcie linii."
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  id: AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut określonego znacznika i wartość do otwierający tag elementu który <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> tworzy obiekt z kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Użyj AddAttribute przeciążenia metody AddAttribute, jeśli ten atrybut nie jest jednym z <xref:System.Web.UI.HtmlTextWriterAttribute>wartości, lub jeśli ten atrybut nie jest znany do czasu wykonywania.</xref:System.Web.UI.HtmlTextWriterAttribute>       Dla wystąpienia elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter>klasy przechowuje listę atrybutów dla tego elementu.</xref:System.Web.UI.HtmlTextWriter> Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda jest wywoływana, wszystkie atrybuty dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metody mają być renderowane otwierający tag elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Lista atrybutów jest następnie usuwane z <xref:System.Web.UI.HtmlTextWriter>obiektu.</xref:System.Web.UI.HtmlTextWriter>       Kodowania wzorzec do renderowania elementów kodu znaczników jest następująca:-Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metodę, aby dodać atrybuty do elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Użyj innych metod w razie potrzeby do renderowania zawartości pomiędzy otwierającym, a zamykającym tagiem elementu.      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream. The AddAttribute method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_42_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_42_1.vb)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu, aby dodać."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut znaczników i wartość atrybutu do otwierający tag elementu który <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> tworzy obiekt z kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Użyj AddAttribute przeciążenia metody AddAttribute do renderowania atrybutów standardowych znaczników.       Dla wystąpienia elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter>klasy przechowuje listę atrybutów dla tego elementu.</xref:System.Web.UI.HtmlTextWriter> Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda jest wywoływana, wszelkie atrybuty, które są dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metody mają być renderowane otwierający tag elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Lista atrybutów jest następnie wyczyszczone z <xref:System.Web.UI.HtmlTextWriter>.</xref:System.Web.UI.HtmlTextWriter>       Kodowania wzorzec do renderowania elementów kodu znaczników jest następująca:-Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metodę, aby dodać atrybuty do elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Użyj innych metod w razie potrzeby do renderowania zawartości pomiędzy otwierającym, a zamykającym tagiem elementu.      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:  \n  \n```  \nalert('Hello');  \n```  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/visualbasic/f7056fa3-ef89-45d7-9cdd-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/csharp/f7056fa3-ef89-45d7-9cdd-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/cpp/f7056fa3-ef89-45d7-9cdd-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Reprezentujący atrybut znaczników do dodania do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  id: AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut określonego znacznika i wartość do otwierający tag elementu który <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> tworzy obiekt z kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody z kodowaniem opcjonalne.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Użyj AddAttribute przeciążenia metody AddAttribute, jeśli ten atrybut nie jest jednym z <xref:System.Web.UI.HtmlTextWriterAttribute>wartości lub jest potrzebna, jeśli ten atrybut nie jest znany do kodowania i czas wykonywania.</xref:System.Web.UI.HtmlTextWriterAttribute>       Dla wystąpienia elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter>klasy przechowuje listę atrybutów dla tego elementu.</xref:System.Web.UI.HtmlTextWriter> Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda jest wywoływana, wszystkie atrybuty dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metody mają być renderowane otwierający tag elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Lista atrybutów jest następnie usuwane z <xref:System.Web.UI.HtmlTextWriter>obiektu.</xref:System.Web.UI.HtmlTextWriter>       Użyj metody AddAttribute z `fEncode` ustawioną `true`, jeśli atrybut może zawierać znaku cudzysłowu (&quot;), znak mniejszości (<), or an ampersand (&). or=&quot;&quot; an=&quot;&quot; ampersand=&quot;&quot;></), or an ampersand (&).> Wywołanie metody zostanie kodowanie atrybutu, aby spełnić wymagania dotyczące urządzenia wysyłającego żądanie. Można ustawić `fEncode` do `false`, jeśli wiadomo, że żaden z tych znaków zostanie wygenerowane, lub jeśli wiadomo, że ten atrybut jest już zaszyfrowana.       Kodowania wzorzec do renderowania elementów kodu znaczników jest następująca:-Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metodę, aby dodać atrybuty do elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Użyj innych metod w razie potrzeby do renderowania zawartości pomiędzy otwierającym, a zamykającym tagiem elementu.      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/42cbe4de-f3a3-40dc-8e06-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/42cbe4de-f3a3-40dc-8e06-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/42cbe4de-f3a3-40dc-8e06-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value, bool fEndode);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu, aby dodać."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
    - id: fEndode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>kodowanie atrybutu i jego wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut określonego znacznika i wartość, wraz z <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> wartość wyliczenia do otwierający tag elementu który <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> tworzy obiekt z kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>— Metoda.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Użyj AddAttribute przeciążenia metody AddAttribute tylko w przypadku dziedziczenia z <xref:System.Web.UI.HtmlTextWriter>klasy.</xref:System.Web.UI.HtmlTextWriter> Umożliwia tworzenie nowych `name` i `key` pary dla atrybutów."
  syntax:
    content: protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu, aby dodać."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Reprezentujący atrybutu."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut znaczników i wartość atrybutu do otwierający tag elementu który <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> tworzy obiekt z kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody z kodowaniem opcjonalne.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Użyj AddAttribute przeciążenia metody AddAttribute do renderowania atrybutem standardowych znaczników z kodowaniem opcjonalne.       Dla wystąpienia elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter>klasy przechowuje listę atrybutów dla tego elementu.</xref:System.Web.UI.HtmlTextWriter> Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda jest wywoływana, wszystkie atrybuty dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>mają być renderowane otwierający tag elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Lista atrybutów jest następnie usuwane z <xref:System.Web.UI.HtmlTextWriter>obiektu.</xref:System.Web.UI.HtmlTextWriter>       Użyj metody AddAttribute z `fEncode` ustawioną `true`, jeśli atrybut może zawierać znaku cudzysłowu (&quot;), znak mniejszości (<), or an ampersand (&). or=&quot;&quot; an=&quot;&quot; ampersand=&quot;&quot;></), or an ampersand (&).> Wywołanie metody zostanie kodowanie atrybutu, aby spełnić wymagania dotyczące urządzenia wysyłającego żądanie. Można ustawić `fEncode` do `false`, jeśli wiadomo, że żaden z tych znaków zostanie wygenerowane, lub jeśli wiadomo, że ten atrybut jest już zaszyfrowana.       Kodowania wzorzec do renderowania elementów kodu znaczników jest następująca:-Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metodę, aby dodać atrybuty do elementu.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Użyj innych metod w razie potrzeby do renderowania zawartości pomiędzy otwierającym, a zamykającym tagiem elementu.      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to use the AddAttribute method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/5fc4f314-c4b1-473d-abfa-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/5fc4f314-c4b1-473d-abfa-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/5fc4f314-c4b1-473d-abfa-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Reprezentujący atrybut znaczników do dodania do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>kodowanie atrybutu i jego wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  id: AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut styl znaczników określonego i wartość atrybutu do znacznika otwierającego tag utworzone przez kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Używanie AddStyleAttribute przeciążenia metody AddStyleAttribute, gdy styl nie jest elementem członkowskim <xref:System.Web.UI.HtmlTextWriterStyle>wyliczenia lub nie jest znany do czasu wykonywania.</xref:System.Web.UI.HtmlTextWriterStyle>       <xref:System.Web.UI.HtmlTextWriter>Klasy przechowuje listę style dla elementów znaczników renderowania.</xref:System.Web.UI.HtmlTextWriter> Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda jest wywoływana, wszystkie style, które są dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metody mają być renderowane otwierający tag elementu.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Na liście stylów następnie jest wyczyszczone.       Kodowania wzorzec do renderowania elementów kodu znaczników jest następująca:-Użyj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metody, aby dodać wszystkie atrybuty do elementu.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Użyj innych metod w razie potrzeby do renderowania zawartości między element otwierające i zamykające znaczniki.      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the AddStyleAttribute method to render `font-size` and `color` style attributes on a `<p>` element. This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.  \n  \n [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_13_1.cpp)]\n [!code-cs[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_13_1.cs)]\n [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_13_1.vb)]"
  syntax:
    content: public virtual void AddStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg, który zawiera atrybut stylu, aby dodać."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  id: AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut styl znacznika skojarzonego z określonym <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> wartość i wartość atrybutu do znacznika otwierającego tag utworzone przez kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Używanie AddStyleAttribute przeciążenia metody AddStyleAttribute, gdy styl jest członkiem <xref:System.Web.UI.HtmlTextWriterStyle>wyliczenia, wiadomo, że przed w czasie wykonywania.</xref:System.Web.UI.HtmlTextWriterStyle>       <xref:System.Web.UI.HtmlTextWriter>Klasy przechowuje listę style dla elementów znaczników renderowania.</xref:System.Web.UI.HtmlTextWriter> Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda jest wywoływana, wszystkie style dodane przez <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metody mają być renderowane otwierający tag elementu.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Na liście stylów następnie jest wyczyszczone.       Kodowania wzorzec do renderowania elementów kodu znaczników jest następująca:-Użyj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metody, aby dodać wszystkie atrybuty do elementu.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Użyj innych metod w razie potrzeby do renderowania zawartości między element otwierające i zamykające znaczniki.      -Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The code checks whether a `<Label>` element is being rendered. If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element. If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/da7f284f-e06a-4e07-bda6-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/da7f284f-e06a-4e07-bda6-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/da7f284f-e06a-4e07-bda6-_1.cs)]"
  syntax:
    content: public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> Reprezentujący atrybutu style do dodania do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje atrybut stylu określonego znacznika i wartość atrybutu wraz z <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> wartość wyliczenia znaczników otwierający tag utworzone przez kolejne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>— Metoda.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Użyj AddStyleAttribute przeciążenia metody AddStyleAttribute tylko w przypadku dziedziczenia z <xref:System.Web.UI.HtmlTextWriter>klasy.</xref:System.Web.UI.HtmlTextWriter> Umożliwia tworzenie nowych `name` i `value` pary dla <xref:System.Web.UI.HtmlTextWriterStyle>atrybuty.</xref:System.Web.UI.HtmlTextWriterStyle>"
  syntax:
    content: protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg, który zawiera atrybut style ma zostać dodana."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość do przypisania do atrybutu."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> Reprezentujący atrybutu style do dodania."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  id: BeginRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Powiadamia <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiekt lub obiekt klasy pochodnej, która ma być renderowany formantu."
  remarks: "<xref:System.Web.UI.HtmlTextWriter>Klasa implementacji metody BeginRender nie ma żadnych funkcji.</xref:System.Web.UI.HtmlTextWriter> Konieczne jest przesłonięcie metody BeginRender w klasie pochodnej z <xref:System.Web.UI.HtmlTextWriter>umożliwiają korzystanie z własnych funkcji renderowania.</xref:System.Web.UI.HtmlTextWriter> Na przykład w języku znaczników, który może wymagać `<p>` elementy, które mają być odwzorowane natychmiast wcześniejsze formantu, ale gdzie potrzebę `<p>` wcześniej ustalona elementu, można użyć zastąpienie BeginRender."
  syntax:
    content: public virtual void BeginRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Close
  id: Close
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zamyka <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiektu i zwalnia wszystkie zasoby systemu skojarzonych z nim."
  remarks: "Ta implementacja wywołuje metody Close <xref:System.IO.TextWriter.Close%2A?displayProperty=fullName>Podstawowa metoda.</xref:System.IO.TextWriter.Close%2A?displayProperty=fullName>       Po wywołaniu metody Close żadnych operacji na <xref:System.Web.UI.HtmlTextWriter>obiektu może zgłaszają wyjątki, ponieważ wszystkie jej zasoby zostały zwolnione.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  id: DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje pojedynczy znak tabulacji."
  remarks: "Pojedynczej karcie jest reprezentowana przez znaków ASCII 9."
  example:
  - "The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the DefaultTabString field as a parameter argument to a second version of the constructor. When this constructor is called from code, the DefaultTabString field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.  \n  \n [!code-cs[MarkupTextWriter_Methods3#1](~/add/codesnippet/csharp/f-system.web.ui.htmltext_8_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#1](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_8_1.vb)]"
  syntax:
    content: public const string DefaultTabString;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  id: DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje znak cudzysłowu (&quot;)."
  remarks: "Pole DoubleQuoteChar jest używane przez <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>metody, aby zamknąć atrybutu.</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>"
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and DoubleQuoteChar fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_7_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_7_1.cs)]"
  syntax:
    content: public const char DoubleQuoteChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  id: EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Koduje wartość atrybutu określonego znacznika na podstawie wymagań z <xref href=&quot;System.Web.HttpRequest&quot;> </xref> obiektu bieżącego kontekstu."
  remarks: "Użyj przeciążenia EncodeAttributeValue <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>metodę, jeśli nie jest atrybutem <xref:System.Web.UI.HtmlTextWriterAttribute>wartość wyliczenia lub nie jest znany do czasu wykonywania.</xref:System.Web.UI.HtmlTextWriterAttribute> </xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>       <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>Metoda usuwa podwójny cudzysłów (&quot;), ampersandu (&) i mniejsza niż znaków (<) so that invalid tags are not generated, regardless of the input. so=&quot;&quot; that=&quot;&quot; invalid=&quot;&quot; tags=&quot;&quot; are=&quot;&quot; not=&quot;&quot; generated,=&quot;&quot; regardless=&quot;&quot; of=&quot;&quot; the=&quot;&quot;> </) so that invalid tags are not generated, regardless of the input.> </xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Rzeczywistym kodowaniem jest wykonywane przez <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metody.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  example:
  - "The following code example shows how to call the EncodeAttributeValue method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.  \n  \n [!code-cs[HtmlTextWriter_Methods#5](~/add/codesnippet/csharp/ca3d7869-90f7-46e1-a9f1-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#5](~/add/codesnippet/visualbasic/ca3d7869-90f7-46e1-a9f1-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#5](~/add/codesnippet/cpp/ca3d7869-90f7-46e1-a9f1-_1.cpp)]"
  syntax:
    content: protected string EncodeAttributeValue (string value, bool fEncode);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość atrybutu do zakodowania."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zakodować wartość atrybutu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Ciąg zawierający wartość atrybutu zakodowanego <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <code> value </code> jest pusta lub wartość atrybutu niekodowany, jeśli <code> fEncode </code> jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Koduje wartość atrybutu określonego znacznika na podstawie wymagań z <xref href=&quot;System.Web.HttpRequest&quot;> </xref> obiektu bieżącego kontekstu."
  remarks: "Metoda EncodeAttributeValue usuwa podwójny cudzysłów (&quot;), ampersandu (&) i mniejszości (znaki<) so that invalid tags are not generated, regardless of the input. so=&quot;&quot; that=&quot;&quot; invalid=&quot;&quot; tags=&quot;&quot; are=&quot;&quot; not=&quot;&quot; generated,=&quot;&quot; regardless=&quot;&quot; of=&quot;&quot; the=&quot;&quot;></) so that invalid tags are not generated, regardless of the input.> Rzeczywistym kodowaniem jest wykonywane przez <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metody.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  syntax:
    content: protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Reprezentujący atrybut znacznika."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość atrybutu do zakodowania."
    return:
      type: System.String
      description: "Ciąg zawierający wartość atrybutu zakodowany."
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  id: EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Wykonuje minimalnego kodowania adresu URL, konwertując spacje w adresie URL określonego ciągu &quot;%&20;&quot;."
  remarks: "Adres URL kodowanie znaku składa się z symbolem procentu (%), następuje dwucyfrowe szesnastkową reprezentację (bez uwzględniania wielkości liter) punktu kod ISO-Latin znaku. Szesnastkową reprezentację miejsce wynosi 20."
  example:
  - "The following code example demonstrates how to call the EncodeUrl method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.  \n  \n [!code-cs[HtmlTextWriter_Methods#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_41_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_41_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#6](~/add/codesnippet/cpp/m-system.web.ui.htmltext_41_1.cpp)]"
  syntax:
    content: protected string EncodeUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "Ciąg zawierający adres URL do kodowania."
    return:
      type: System.String
      description: "Ciąg zawierający adres URL zakodowanym."
  overload: System.Web.UI.HtmlTextWriter.EncodeUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Encoding
  id: Encoding
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera kodowanie <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiekt używa do zapisu zawartości strony."
  remarks: "Właściwość kodowanie uzyskuje wartość od podstawy <xref:System.IO.TextWriter>obiektu.</xref:System.IO.TextWriter>"
  example:
  - "The following code example shows how to use the Encoding property to write the type of encoding that a custom control uses to render text to the page that contains it.  \n  \n [!code-cpp[HtmlTextWriter_Properties#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_3_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override System.Text.Encoding Encoding { get; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, W której zapisany jest kod znaczników do strony.</xref:System.Text.Encoding>"
  overload: System.Web.UI.HtmlTextWriter.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndRender
  id: EndRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Powiadamia <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiekt lub obiekt klasy pochodnej, że formant zakończył renderowania. Ta metoda umożliwia Zamknij wszelkie elementy znaczników otwarty w <xref:System.Web.UI.HtmlTextWriter.BeginRender*>metody.</xref:System.Web.UI.HtmlTextWriter.BeginRender*>"
  remarks: "<xref:System.Web.UI.HtmlTextWriter>Klasa implementacji metody EndRender nie ma żadnych funkcji.</xref:System.Web.UI.HtmlTextWriter> Konieczne jest przesłonięcie EndRender w klasie pochodnej z <xref:System.Web.UI.HtmlTextWriter>klasę, aby umożliwić korzystanie z własnych funkcji renderowania.</xref:System.Web.UI.HtmlTextWriter>       Metoda EndRender umożliwia Zamknij wszelkie elementy znaczników otwarty w <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>metody.</xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>"
  syntax:
    content: public virtual void EndRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  id: EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje lewy kąt znak nawiasu i ukośnika (&lt;/) tagu zamykającego elementu znaczników."
  remarks: "Pole EndTagLeftChars jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody do skonstruowania zakończenia elementu znaczników.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the closing tag of a `<table>` markup element by using the EndTagLeftChars and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_10_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_10_1.cs)]"
  syntax:
    content: public const string EndTagLeftChars;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  id: EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje otwierający tag z <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;> </xref> element, który zawiera atrybuty, które implementują układ i formatowanie znaków określony styl."
  remarks: "Metoda EnterStyle umożliwia Zastosuj style, takie jak kolor tła lub obramowanie szerokość, do bloku kodu znaczników.       EnterStyle i <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metody umożliwiają adapterem urządzenia lub formant utworzyć kod znaczników, który używa formatowanie znaków określony styl.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Użyj tej samej wartości dla `style` w używanej w odpowiedniej metody EnterStyle <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metody.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>       EnterStyle przeciążenia metody EnterStyle renderowania tagu otwierającego `<span>` elementu. Ta metoda następnie dodaje niezbędne atrybuty oraz atrybuty stylu do tagu otwierającego `<span>` element, aby wyświetlić ustawienia określone przez <xref:System.Web.UI.WebControls.Style>obiektu.</xref:System.Web.UI.WebControls.Style> Aby renderować element różnych znaczników zawierają atrybuty oraz atrybuty stylu, należy użyć <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>przeciążenia.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the EnterStyle method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The EnterStyle method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_43_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> , który określa układ i formatowanie, aby rozpocząć stosowanie do bloku kodu znaczników."
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje otwierający tag elementu znaczników, który zawiera atrybuty, które implementują układ i formatowanie znaków określony styl."
  remarks: "Metoda EnterStyle umożliwia Zastosuj style, takie jak kolor tła lub obramowanie szerokość, do bloku kodu znaczników.       EnterStyle i <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metody umożliwiają adapterem urządzenia lub formant utworzyć kod znaczników, który używa formatowanie znaków określony styl.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Użyj tej samej wartości dla `style` w używanej w odpowiedniej metody EnterStyle <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metody.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>       <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>Przeciążenia metody EnterStyle renderowania tagu otwierającego określony przez element `tag` parametru.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Metoda EnterStyle następnie dodaje niezbędne atrybuty oraz atrybuty stylu do otwierający tag elementu, aby wyświetlić ustawienia określone przez <xref:System.Web.UI.WebControls.Style>obiektu.</xref:System.Web.UI.WebControls.Style> Użyj <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>przeciążenia do renderowania tagu otwierającego `<span>` elementu.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/92807ec1-50d1-4344-bc65-_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> , który określa układ i formatowanie, aby rozpocząć stosowanie do bloku kodu znaczników."
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> , Który określa elementu znaczników, który będzie zawierać style obiektu określonego w tagu otwierającym `style`."
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  id: EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje znak równości (<xref uid=&quot;langword_csharp_=&quot; name=&quot;=&quot; href=&quot;&quot;></xref>)."
  remarks: "Możesz chcieć użyć <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>pole zamiast pola EqualsChar podczas konstruowania ogranicznik otwarcia wartości atrybutu.</xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>"
  example:
  - "The following code example shows how to render the `src` attribute and part of its value for an `<img>` element. The code uses the EqualsChar field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public const char EqualsChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  id: EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje znakiem równości (=) i podwójny cudzysłów (&quot;) w ciągu (=&quot;)."
  remarks: "Pole EqualsDoubleQuoteString jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>i <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>metody do skonstruowania ogranicznik otwarcia wartości atrybutów.</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the EqualsDoubleQuoteString and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_5_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_5_1.cs)]"
  syntax:
    content: public const string EqualsDoubleQuoteString;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  id: ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje tagu zamykającego <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;> </xref> elementu, aby zakończyć wybranego układu i formatowanie znaków."
  remarks: "ExitStyle przeciążenia metody ExitStyle renderuje tag zamykający `<span>` elementu po tagu zamykającego formantu, zamykanie elementu otwarty przez odpowiednie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>wywołań.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>       ExitStyle i <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>metody umożliwiają adapterem urządzenia lub formantu utworzyć kod znaczników rozpoczęcia i zakończenia bloku przy użyciu formatowanie znaków określony styl.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Użyj tej samej wartości dla `style` w <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>używanej w odpowiedniej metody ExitStyle metody.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The ExitStyle method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_32_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> , który określa układ i formatowanie, aby zamknąć."
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje tagu zamykającego elementu określonego znacznika do końca określonego układ i formatowanie znaków."
  remarks: "ExitStyle przeciążenia metody ExitStyle renderowania tagu zamykającego elementu, który jest określony przez `tag` po tagu zamykającego formantu, zamykanie elementu, która została otwarta przez odpowiednie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>wywołania metody.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>       ExitStyle i <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>metody umożliwiają adapterem urządzenia lub formantu utworzyć kod znaczników rozpoczęcia i zakończenia bloku przy użyciu formatowanie znaków określony styl.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Użyj tej samej wartości dla `style` w <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>używanej w odpowiedniej metody ExitStyle metody.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/5d790280-f115-4c9e-8ee8-_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> , który określa układ i formatowanie do zaprzestanie stosowania do tekstu wyjściowego."
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> , Który określa tagu zamykającego elementu znaczników, który zawiera atrybuty, które zastosowano określony styl. Klucz przekazany w polu musi odpowiadać <xref:System.Web.UI.HtmlTextWriter.EnterStyle*>wywołań.</xref:System.Web.UI.HtmlTextWriter.EnterStyle*>"
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  id: FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Usuwa wszystkie atrybuty znacznika i stylu dla wszystkich właściwości strony i kontrolki serwera sieci Web."
  remarks: "Przed renderowaniem atrybuty w elemencie znaczników, wywoływana jest metoda FilterAttributes. Z kolei wywołuje metodę FilterAttributes <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>i <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>metody dla każdego atrybutu i styl do renderowania.</xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> </xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>"
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the FilterAttributes method. When called, the FilterAttributes override checks whether the text writer renders any `<label>` or `<a>` elements:  \n  \n-   If a `<label>` element is being rendered, the FilterAttributes method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.  \n  \n-   If an `<a>` element is being rendered, the FilterAttributes method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_16_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_16_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_16_1.cpp)]"
  syntax:
    content: protected virtual void FilterAttributes ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Flush
  id: Flush
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Czyści wszystkie bufory dla bieżącego <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiektu i powoduje, że wszelkie buforowane dane są zapisywane do strumienia wyjściowego."
  remarks: "<xref:System.Web.UI.HtmlTextWriter>Klasa implementacji metody Flush po prostu wywołuje <xref:System.IO.TextWriter.Flush%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Flush%2A> </xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  id: GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Uzyskuje odpowiednie <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> wartość wyliczenia dla określonego atrybutu."
  remarks: "Jeśli `attrName` jest `null` lub ciąg pusty (&quot;&quot;), lub nie można znaleźć w tabeli nazw atrybutu, wartość -1, wpisany do <xref:System.Web.UI.HtmlTextWriterAttribute>obiektu, jest zwracana.</xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag> field, which indicates that a `<font>` markup element will be rendered. If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the GetAttributeKey method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_9_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_9_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_9_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);
    parameters:
    - id: attrName
      type: System.String
      description: "Ciąg, który zawiera ten atrybut, do których chcesz uzyskać <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>."
    return:
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Wartość wyliczenia dla określonego atrybutu; w przeciwnym razie nieprawidłową <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> wartość, gdy atrybut nie jest elementem członkowskim wyliczenia."
  overload: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  id: GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Uzyskuje nazwę atrybutu znaczników skojarzonego z określonym <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> wartości."
  remarks: "Metoda GetAttributeName zwraca ciąg pusty (&quot;&quot;), jeśli `attrKey` nie jest prawidłową <xref:System.Web.UI.HtmlTextWriterAttribute>wartość.</xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example shows how to use the GetAttributeName method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value to its string name.  \n  \n [!code-vb[HtmlTextWriter_Methods3#6](~/add/codesnippet/visualbasic/fd0863d4-1999-4326-849f-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#6](~/add/codesnippet/cpp/fd0863d4-1999-4326-849f-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#6](~/add/codesnippet/csharp/fd0863d4-1999-4326-849f-_1.cs)]"
  syntax:
    content: protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Uzyskać nazwę atrybutu znaczników."
    return:
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu znaczników."
  overload: System.Web.UI.HtmlTextWriter.GetAttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  id: GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Uzyskuje <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> wartość wyliczenia dla określonego stylu."
  remarks: "Metoda GetStyleKey zwraca wartość -1 jako wpisana <xref:System.Web.UI.HtmlTextWriterStyle>wartość, jeśli `styleName` nie odpowiada żadnemu <xref:System.Web.UI.HtmlTextWriterStyle>wartość wyliczenia.</xref:System.Web.UI.HtmlTextWriterStyle> </xref:System.Web.UI.HtmlTextWriterStyle>"
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle> attribute. If a <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the GetStyleKey method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `red`.  \n  \n [!code-cs[HtmlTextWriter_Methods#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_14_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_14_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_14_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);
    parameters:
    - id: styleName
      type: System.String
      description: "Atrybut stylu, dla którego będzie można uzyskać <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>."
    return:
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> Wyliczenia wartości odpowiadających <code> styleName </code>."
  overload: System.Web.UI.HtmlTextWriter.GetStyleKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  id: GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Uzyskuje nazwę atrybutu styl znacznika skojarzonego z określonym <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> wartości wyliczenia."
  remarks: "Jeśli `styleKey` nie jest prawidłową <xref:System.Web.UI.HtmlTextWriterStyle>obiektów, metoda GetStyleName zwraca ciąg pusty (&quot;&quot;).</xref:System.Web.UI.HtmlTextWriterStyle>"
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the GetStyleName method converts the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_29_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_29_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_29_1.cs)]"
  syntax:
    content: protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);
    parameters:
    - id: styleKey
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> Można uzyskać nazwy atrybutu style dla."
    return:
      type: System.String
      description: "Nazwa atrybutu styl skojarzony z <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> określony w wartości wyliczenia <code> styleKey </code>."
  overload: System.Web.UI.HtmlTextWriter.GetStyleName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  id: GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Uzyskuje <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> skojarzone z elementem znaczników określona wartość wyliczenia."
  remarks: "Jeśli `tagName` jest `null`, ciąg pusty (&quot;&quot;), lub nie można znaleźć w tabeli nazw tagów znaczników metoda GetTagKey zwraca <xref:System.Web.UI.HtmlTextWriterTag>pola.</xref:System.Web.UI.HtmlTextWriterTag>"
  example:
  - "The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter. The string is passed to the GetTagKey method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.  \n  \n [!code-vb[HtmlTextWriter_Methods3#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_17_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#8](~/add/codesnippet/cpp/m-system.web.ui.htmltext_17_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_17_1.cs)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Element znaczników, dla którego będzie można uzyskać <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>."
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> Wartość wyliczenia; w przeciwnym razie, jeśli <code> tagName </code> nie jest skojarzony z określonym <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> wartość <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.GetTagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  id: GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera element znaczników skojarzonego z określonym <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> wartości wyliczenia."
  remarks: "Jeśli `tagKey` nie jest prawidłową <xref:System.Web.UI.HtmlTextWriterTag>wartość, metoda GetTagName zwraca ciąg pusty (&quot;&quot;).</xref:System.Web.UI.HtmlTextWriterTag>"
  example:
  - "The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method. The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the GetTagName method to convert the <xref:System.Web.UI.HtmlTextWriterTag> value to a string.  \n  \n [!code-vb[HtmlTextWriter_Methods3#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_40_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_40_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_40_1.cs)]"
  syntax:
    content: protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> Można uzyskać elementu znaczników."
    return:
      type: System.String
      description: "Ciąg reprezentujący element znaczników."
  overload: System.Web.UI.HtmlTextWriter.GetTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Indent
  id: Indent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia liczbę pozycji tabulatorów wcięcia początku każdej linii znacznika."
  remarks: "Wcięcie jest wykonywane przez ciąg, który jest określony przez zapisywanie `tabString` parametr <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>Konstruktor liczbę razy, które są określone przez właściwość wcięcie.</xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>       Jeśli właściwość wcięcie ma ustawioną wartość ujemną, przed zapisaniem zostanie zmieniona na 0."
  example:
  - "The following code example demonstrates how to increment the value that is assigned to the Indent property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called. This increases the indentation for any markup that is rendered inside the `<span>` element.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: public int Indent { get; set; }
    return:
      type: System.Int32
      description: "Liczba pozycji tabulatorów zwiększyć wcięcie każdego wiersza."
  overload: System.Web.UI.HtmlTextWriter.Indent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  id: InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia Edytor tekstu, który zapisuje zawartość elementu znaczników."
  remarks: "Wewnętrzny markup zawartość jest tekst pomiędzy otwierającym, a zamykającym tagiem elementu języka znaczników.       Jeśli ustawiono właściwość InnerWriter <xref:System.IO.TextWriter>obiekt, który jest wystąpieniem <xref:System.Web.HttpWriter>klasy, fakt ten jest odnotowany i oddzielne odwołanie jest zapisywany.</xref:System.Web.HttpWriter> </xref:System.IO.TextWriter>"
  example:
  - "The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method. It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element. After it writes the opening tag of the element, it uses the InnerWriter property to write the string `\"<br> The time on the server:\"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[HtmlTextWriter_Properties#3](~/add/codesnippet/cpp/p-system.web.ui.htmltext_0_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#3](~/add/codesnippet/csharp/p-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#3](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_0_1.vb)]"
  syntax:
    content: public System.IO.TextWriter InnerWriter { get; set; }
    return:
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>który zapisuje zawartość wewnętrzny markup.</xref:System.IO.TextWriter>"
  overload: System.Web.UI.HtmlTextWriter.InnerWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy atrybut określonego znacznika i jego wartość jest renderowany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Aby uzyskać wartość do przypisania do <xref:System.Web.UI.HtmlTextWriterAttribute>obiektów, użyj <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>przeciążenia zamiast tego.</xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> </xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered. If so, the override calls the IsAttributeDefined method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/cbdca703-4aa0-4111-9334-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/cbdca703-4aa0-4111-9334-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/cbdca703-4aa0-4111-9334-_1.cpp)]"
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Skojarzony z atrybutem znaczników."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten atrybut jest renderowany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy atrybut określonego znacznika i jego wartość jest renderowany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Jeśli metoda IsAttributeDefined zwraca `true`, wartość do przypisania do <xref:System.Web.UI.HtmlTextWriterAttribute>obiekt jest zwracany w `value` parametru.</xref:System.Web.UI.HtmlTextWriterAttribute>"
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Skojarzony z atrybutem znaczników."
    - id: value
      type: System.String
      description: "Wartość atrybutu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten atrybut jest renderowany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy atrybut styl znacznika określony jest renderowany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Aby uzyskać wartość, która będzie renderowany z atrybutem określonego stylu, należy użyć <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>przeciążenia metody IsStyleAttributeDefined.</xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>"
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, the IsStyleAttributeDefined method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle> attribute and sets its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/47188de5-abf6-4bc4-9c12-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/47188de5-abf6-4bc4-9c12-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/47188de5-abf6-4bc4-9c12-_1.cs)]"
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> Skojarzony z atrybutem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten atrybut będzie odtwarzany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy atrybut stylu określonego znacznika i jej wartość jest renderowany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Jeśli metoda IsStyleAttributeDefined zwraca `true`, wartość do przypisania do <xref:System.Web.UI.HtmlTextWriterStyle>atrybutu jest zwracany w `value` parametru.</xref:System.Web.UI.HtmlTextWriterStyle>"
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> Skojarzony z atrybutem."
    - id: value
      type: System.String
      description: "Wartość atrybutu style."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten atrybut i jej wartość będzie odtwarzany podczas następnego wywołania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metody; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  id: IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sprawdza atrybutu, aby upewnić się, że mogą być renderowane w tagu otwierającym <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> element znaczników."
  remarks: "<xref:System.Web.UI.HtmlTextWriter>Zwraca klasa implementacji metody IsValidFormAttribute `true` dla wszystkich atrybutów.</xref:System.Web.UI.HtmlTextWriter> Zastąpienie IsValidFormAttribute, aby ograniczyć liczbę atrybutów, które mogą być renderowane w tagu otwierającym `<form>` elementu."
  syntax:
    content: public virtual bool IsValidFormAttribute (string attribute);
    parameters:
    - id: attribute
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu, aby sprawdzić."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.NewLine
  id: NewLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia ciąg terminator wiersza, które są używane przez <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiektu."
  remarks: "The default line terminator string is a carriage return, followed by a line feed (\"\\r\\n\").  \n  \n The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called. If the NewLine property is set to `null`, the default new line character is used."
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method. When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements. If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label. If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue. The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the NewLine property to insert a line break in the markup tag and writes any other defined attributes.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/p-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_2_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/p-system.web.ui.htmltext_2_1.cpp)]"
  syntax:
    content: public override string NewLine { get; set; }
    return:
      type: System.String
      description: "Ciąg terminator wiersza używanego przez bieżących <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.NewLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy atrybut określony znaczników i jej wartość może być renderowana do bieżącego elementu znaczników."
  remarks: "<xref:System.Web.UI.HtmlTextWriter>Klasa implementacji metody OnAttributeRender zawsze zwraca `true`.</xref:System.Web.UI.HtmlTextWriter> Zastąpienia OnAttributeRender można określić, czy atrybut będzie odtwarzany na stronę."
  example:
  - "The following code example shows how to override the OnAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute> value is not `30pt`, the OnAttributeRender override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `30pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#5](~/add/codesnippet/csharp/d0e562f6-9a39-4246-a984-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#5](~/add/codesnippet/visualbasic/d0e562f6-9a39-4246-a984-_1.vb)]"
  syntax:
    content: protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu do renderowania."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość, która jest przypisana do atrybutu."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> Skojarzony z atrybutem znaczników."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy atrybut stylu określonego znacznika i jej wartość może być renderowana do bieżącego elementu znaczników."
  remarks: "<xref:System.Web.UI.HtmlTextWriter>Klasa implementacji metody OnStyleAttributeRender zawsze zwraca `true`.</xref:System.Web.UI.HtmlTextWriter> Zastąpienia OnStyleAttributeRender można określić, czy atrybut stylu są wyświetlane na stronie."
  example:
  - "The following code example shows how to override the OnStyleAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle> value is not `purple`, the OnStyleAttributeRender override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `purple`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#6](~/add/codesnippet/csharp/d9590f65-fa57-44a8-99c7-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#6](~/add/codesnippet/visualbasic/d9590f65-fa57-44a8-99c7-_1.vb)]"
  syntax:
    content: protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu style do renderowania."
    - id: value
      type: System.String
      description: "Ciąg zawierający wartość, która jest przypisana do atrybutu style."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> Skojarzony z atrybutem style."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  id: OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy element określony znaczników będzie renderowany do żądania strony."
  remarks: "<xref:System.Web.UI.HtmlTextWriter>Klasa implementacji metody OnTagRender zawsze zwraca `true`.</xref:System.Web.UI.HtmlTextWriter> Zastąpienia OnTagRender można określić, czy element będzie odtwarzany na stronę."
  example:
  - "The following code example shows how to override the OnTagRender method. If a <xref:System.Web.UI.HtmlTextWriterTag> element is being rendered, the OnTagRender override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is being rendered. If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `20pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#4](~/add/codesnippet/csharp/e717512e-2198-4ad0-a7c8-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#4](~/add/codesnippet/visualbasic/e717512e-2198-4ad0-a7c8-_1.vb)]"
  syntax:
    content: protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę elementu do renderowania."
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> Skojarzone z elementem."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnTagRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  id: OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje szereg kartę ciągów, które reprezentują poziom wcięcia linii znacznika znaków."
  remarks: "The OutputTabs method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.  \n  \n The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor. If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\\t`) is used."
  example:
  - "The following code example shows how to override the OutputTabs method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class. The OutputTabs override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.  \n  \n [!code-cs[HtmlTextWriter_Methods#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_34_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_34_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_34_1.cpp)]"
  syntax:
    content: protected virtual void OutputTabs ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.OutputTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  id: PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Usuwa element ostatnio zapisanych znaczników z listy elementów renderowanych."
  remarks: "Elementy są dodawane do listy elementów renderowanego kodu znaczników przy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>Metoda usuwa z listy elementów kodu znaczników, wywołując metodę PopEndTag.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  syntax:
    content: protected string PopEndTag ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>zawierający ostatnio renderowany element znacznika.</xref:System.String>"
  overload: System.Web.UI.HtmlTextWriter.PopEndTag*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Lista elementów renderowanych jest pusta."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  id: PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje element określony znaczników do późniejszego użycia podczas generowania tagu końcowego dla elementu znaczników."
  remarks: "Elementy są dodawane do listy elementów renderowanego kodu znaczników przy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda wywołuje metodę mu elementu PushEndTag.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>— Metoda usuwa znaczników elementy z listy po renderowaniu tagu końcowego dla elementu.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  syntax:
    content: protected void PushEndTag (string endTag);
    parameters:
    - id: endTag
      type: System.String
      description: "Tagu zamykającego elementu znaczników."
  overload: System.Web.UI.HtmlTextWriter.PushEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje atrybutów znacznika czy literały lub dynamicznie generowane ze źródłowego pliku, dzięki czemu mogą być poprawnie odwzorowywany na klienta."
  remarks: "Wstępnie zdefiniowanych atrybutów języka znaczników HTML są zarejestrowane w wyniku wywołania metody RegisterAttribute po pierwszym <xref:System.Web.UI.HtmlTextWriter>obiekt jest tworzony.</xref:System.Web.UI.HtmlTextWriter> Dynamiczne atrybuty mogą być rejestrowane za pomocą metody RegisterAttribute w innym czasie.       Jest używany przez metodę RegisterAttribute tabeli rejestracji `static`, więc rejestracja atrybutów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter>obiektów na komputerze hosta.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę atrybutu znaczników do zarejestrowania."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> o nazwie atrybutu, który odpowiada."
  overload: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  id: RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje właściwości Styl znaczników, czy literały lub dynamicznie generowane ze źródłowego pliku, dzięki czemu mogą być poprawnie odwzorowywany na klienta."
  remarks: "Wstępnie zdefiniowane kaskadowy arkusz (CSS) atrybuty stylu języka znaczników HTML są zarejestrowane w wyniku wywołania metody RegisterStyle po pierwszym <xref:System.Web.UI.HtmlTextWriter>obiekt jest tworzony.</xref:System.Web.UI.HtmlTextWriter> Atrybuty stylu dynamicznej można zarejestrować za pomocą metody RegisterStyle w innym czasie.       Jest używany przez metodę RegisterStyle tabeli rejestracji `static`, więc rejestracja atrybutów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter>obiektów na komputerze hosta.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg przekazany z pliku źródłowego, określając nazwę stylu."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> , Który odpowiada przy użyciu określonego stylu."
  overload: System.Web.UI.HtmlTextWriter.RegisterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  id: RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje znaczników, czy literały lub dynamicznie generowane ze źródłowego pliku, dzięki czemu mogą być poprawnie odwzorowywany na klienta."
  remarks: "Wstępnie zdefiniowane znaczników języka HTML są zarejestrowane w wyniku wywołania metody RegisterTag po pierwszym <xref:System.Web.UI.HtmlTextWriter>obiekt jest tworzony.</xref:System.Web.UI.HtmlTextWriter> Znaczniki dynamicznej można zarejestrować za pomocą metody RegisterTag w innym czasie.       Jest używany przez metodę RegisterTag tabeli rejestracji `static`, więc rejestracja tagów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter>obiektów na komputerze hosta.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg, który zawiera znacznik HTML."
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> Określa, który element do renderowania."
  overload: System.Web.UI.HtmlTextWriter.RegisterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  id: RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje tekst lub odstępy występujący po zawartości i przed tagu zamykającego elementu znaczników do strumienia wyjściowego znaczników."
  remarks: "Metoda RenderAfterContent może być przydatna, jeśli chcesz wstawić elementów podrzędnych do bieżącego elementu znaczników."
  example:
  - "The following code example shows how to override the RenderAfterContent method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered. If so, the RenderAfterContent override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element. If an element other than `<label>` is being rendered, the RenderAfterContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_6_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_6_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterContent ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg, który zawiera odstępy lub tekst można zapisać po zawartości elementu."
  overload: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  id: RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje odstępów ani tekstu występujący po tag zamykający dla elementu znaczników."
  remarks: "Metoda RenderAfterTag może być przydatna, jeśli ma być renderowany dodatkowe zamykającym tagiem po znaczniku elementu."
  example:
  - "The following code example shows how to override the RenderAfterTag method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element. If so, the RenderAfterTag override inserts the closing tag of a `<font>` element immediately after the `<label>` element. If it is not a `<label>` element, the RenderAfterTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_7_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_7_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_7_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterTag ();
    parameters: []
    return:
      type: System.String
      description: "Odstępy lub tekst można zapisać po tagu zamykającego elementu."
  overload: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  id: RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje tekst i odstępy przed zawartością i po otwierający tag elementu znaczników."
  remarks: "Metoda RenderBeforeContent może być przydatna, jeśli chcesz wstawić elementów podrzędnych do bieżącego elementu znaczników przed wewnętrzny znaczników."
  example:
  - "The following code example shows how to override the RenderBeforeContent method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeContent override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element. If it is not a `<label>` element, the RenderBeforeContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_0_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_0_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_0_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeContent ();
    parameters: []
    return:
      type: System.String
      description: "Tekst lub odstępy zapisać przed zawartością elementu. Jeśli nie została zastąpiona, zwraca RenderBeforeContent <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  id: RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje tekst lub odstęp, który występuje przed otwierający tag elementu znaczników."
  remarks: "Metoda RenderBeforeTag może być przydatne w przypadku renderowania tagów dodatkowe otwierania przed otwierający tag danego elementu."
  example:
  - "The following code example shows how to override the RenderBeforeTag method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeTag override inserts the opening tag of a `<font>` element immediately before the `<label>` element. If it is not rendering a `<label>` element, the RenderBeforeTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_20_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_20_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_20_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeTag ();
    parameters: []
    return:
      type: System.String
      description: "Tekst lub odstępy zapisać przed elementem znaczników tagu początkowego. Jeśli nie została zastąpiona, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  id: RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje otwierający tag elementu określonego znacznika do strumienia wyjściowego."
  remarks: "Użyj RenderBeginTag zastąpienie metody RenderBeginTag, jeśli element znacznika nie jest jednym z <xref:System.Web.UI.HtmlTextWriterTag>wartości wyliczenia.</xref:System.Web.UI.HtmlTextWriterTag>       Aby wygenerować element kodu znaczników przy użyciu metody RenderBeginTag, należy najpierw wywołać <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>i <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metod, w razie potrzeby, aby określić atrybuty elementu ani atrybuty stylu, które mają znaleźć się w tagu otwierającym elementu.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Po wygenerowaniu wewnętrzny markup, wywołaj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metodę, aby wygenerować tagu zamykającego.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to call the RenderBeginTag method in a custom control to render the opening tag of a non-standard `MyTag` element. The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_35_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_35_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_35_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Ciąg zawierający nazwę elementu znaczników, dla której do renderowania tagu otwierającego."
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje otwierający tag znacznika elementu skojarzonego z określonym <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> wartość wyliczenia do strumienia wyjściowego."
  remarks: "Użyj RenderBeginTag przeciążenia metody RenderBeginTag, jeśli element znaczników jest znanym typem, który jest jednym z <xref:System.Web.UI.HtmlTextWriterTag>wartości wyliczenia.</xref:System.Web.UI.HtmlTextWriterTag>       Aby wygenerować element kodu znaczników przy użyciu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>Metoda, pierwsze wywołanie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>i <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metod, w razie potrzeby, aby określić atrybuty elementu ani atrybuty stylu, które mają znaleźć się w tagu otwierającym elementu.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Po wygenerowaniu wewnętrzny markup, wywołaj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metodę, aby wygenerować tagu zamykającego.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the RenderBeginTag method to output the opening tag of an `<img>` element. The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag. The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"Encoding \"Required\"\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_36_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_36_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_36_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "Jeden z <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> wartości, które definiuje otwierający tag elementu znaczników do renderowania."
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  id: RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje do tagu końcowego elementu znaczników do strumienia wyjściowego."
  remarks: "Wywołaj metodę RenderEndTag po <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>wywołać przeciążenia i Po wyrenderowaniu całą zawartość pomiędzy otwierającym, a zamykającym tagiem (wewnętrzny markup) elementu.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates how to call the RenderEndTag method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_1_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_1_1.cpp)]"
  syntax:
    content: public virtual void RenderEndTag ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  id: SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje spację i samozamykającego znaku ukośnika (/) tagu znaczników."
  remarks: "Pole SelfClosingChars jest używane w elementy znaczników, które są automatycznie zamknięte. Na przykład:`<input type=&quot;submit&quot; value=&quot;go&quot;  />`"
  syntax:
    content: public const string SelfClosingChars;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  id: SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje zamknięcie ukośnika znaku i prawego nawiasu (/&gt;) elementu samozamykającego znaczników."
  remarks: "Pole SelfClosingTagEnd jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody podczas konstruowania samozamykającego elementów kodu znaczników.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the SelfClosingTagEnd field. The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the SelfClosingTagEnd field as the parameter argument to close the element.  \n  \n This code example renders the `FileName` property value, and then the following markup:  \n  \n `\" />`  \n  \n [!code-cs[MarkupTextWriter_Constants#11](~/add/codesnippet/csharp/f-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#11](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public const string SelfClosingTagEnd;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  id: SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje średnika (;)."
  remarks: "Przekaż pole SemicolonChar jako argument parametru w <xref:System.Web.UI.HtmlTextWriter.Write%2A>wywołania metody, gdy ma być renderowany średnikiem z kontrolki niestandardowej lub karty.</xref:System.Web.UI.HtmlTextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to manually render a series of styles on a markup element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes. The SemicolonChar field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.  \n  \n This code example renders the following markup:  \n  \n `style=\"font-size:12pt;border-style:ridge\"`  \n  \n [!code-cs[MarkupTextWriter_Constants#7](~/add/codesnippet/csharp/f-system.web.ui.htmltext_4_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#7](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_4_1.vb)]"
  syntax:
    content: public const char SemicolonChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  id: SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje apostrof (&quot;)."
  remarks: "Użyj pola SingleQuoteChar, gdy jest to niezbędne do renderowania apostrof."
  syntax:
    content: public const char SingleQuoteChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  id: SlashChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje znaku ukośnika (/)."
  remarks: "Pole SlashChar używane do renderowania ukośnikami podczas pisania adresu URL. <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>Metoda używa pola SlashChar podczas zapisywania tagu zamykającego elementu znacznika.</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>"
  example:
  - "The following code example demonstrates how to manually render the `src` attribute of an `<img>` element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the SlashChar field as its parameter to render slash marks in the path that is applied to the `src` attribute.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public const char SlashChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  id: SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje znak spacji ()."
  remarks: "Pole SpaceChar jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>i <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>metody podczas zapisywania separatory między elementów i atrybutów.</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create a <xref:System.Char> array that contains the SpaceChar field.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_1.vb)]  \n  \n The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_2.vb)]"
  syntax:
    content: public const char SpaceChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  id: StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje styl equals (<xref uid=&quot;langword_csharp_:&quot; name=&quot;:&quot; href=&quot;&quot;></xref>) służy do określania stylu znak atrybutów równa wartości."
  remarks: "Pole StyleEqualsChar jest używane przez <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>metody, aby ograniczyć styl nazwy i wartości.</xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>"
  example:
  - "The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the StyleEqualsChar field as the parameter to render the character that sets the value of each style attribute.  \n  \n This code example renders the following markup:  \n  \n `FontWeight:\"bold\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#5](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#5](~/add/codesnippet/csharp/f-system.web.ui.htmltext_1_1.cs)]"
  syntax:
    content: public const char StyleEqualsChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagKey
  id: TagKey
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> wartość elementu określonego znacznika."
  remarks: "Właściwość TagKey jest używany tylko do klasy, które dziedziczą z <xref:System.Web.UI.HtmlTextWriter>klasy.</xref:System.Web.UI.HtmlTextWriter> Należy odczytać lub ustaw właściwość TagKey tylko w wywołaniu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metody; tylko raz ma ustawioną wartość spójne.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. It uses the value of the TagKey property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element. If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Element znaczników, który ma tagu otwierającego renderowane."
  overload: System.Web.UI.HtmlTextWriter.TagKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Nie można ustawić wartości właściwości."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  id: TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje otwierającego nawiasu ostrego (&lt;) tagu znaczników."
  remarks: "Pole TagLeftChar jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, i <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>metody podczas zapisywania znaczników.</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example renders the first character of the opening tag of a `<table>` element with the element name. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagLeftChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `<table`  \n  \n [!code-vb[MarkupTextWriter_Constants#9](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_9_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#9](~/add/codesnippet/csharp/f-system.web.ui.htmltext_9_1.cs)]"
  syntax:
    content: public const char TagLeftChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagName
  id: TagName
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia nazwę tagu renderowanego elementu znaczników."
  remarks: "Właściwość TagName jest używany tylko do klasy, które dziedziczą z <xref:System.Web.UI.HtmlTextWriter>klasy.</xref:System.Web.UI.HtmlTextWriter> Należy odczytać lub ustaw właściwość TagName tylko w <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>wywołań metod; tylko raz ma ustawioną wartość spójne.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=fullName> method, and then passing the TagName property value and a string, `\"label\"`, as the parameter arguments. If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag. If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/p-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_5_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/p-system.web.ui.htmltext_5_1.cpp)]"
  syntax:
    content: protected string TagName { get; set; }
    return:
      type: System.String
      description: "Nazwa tagu renderowanego elementu znaczników."
  overload: System.Web.UI.HtmlTextWriter.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  id: TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reprezentuje zamykającego nawiasu ostrego (&gt;) tagu znaczników."
  remarks: "Pole TagRightChar jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, i <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>metody podczas zapisywania znaczników.</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method. To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagRightChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_6_1.cs)]"
  syntax:
    content: public const char TagRightChar;
    return:
      type: System.Char
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa typu wartość logiczna do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref:System.Boolean>Można zapisać do strumienia wyjściowego.</xref:System.Boolean>"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje reprezentację tekstu znaku Unicode do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates using the Write method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.  \n  \n This code example renders the following markup:  \n  \n `<img alt=\"A custom image\">`  \n  \n `</img>`  \n  \n [!code-cs[MarkupTextWriter_Samples1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_21_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_21_1.vb)]"
  syntax:
    content: public override void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Znak Unicode do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa typu tablicy znaków Unicode do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array of characters. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_1.vb)]  \n  \n The following code example demonstrates how to use the Write method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków Unicode do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa liczby zmiennoprzecinkowej podwójnej precyzji do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_10_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_10_1.vb)]"
  syntax:
    content: public override void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Liczbie zmiennoprzecinkowej podwójnej precyzji można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa typu całkowita 32 bajtów do strumienia wyjściowego, oraz wszelkie oczekujące odstępy kartę."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "32-bajtowych całkowita można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa typu całkowita 64 bajtów do strumienia wyjściowego, oraz wszelkie oczekujące odstępy kartę."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "64-bajtowych całkowita można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa typu obiektu do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property.  \n  \n This code example generates the following markup:  \n  \n `This is a rendered CultureInfo object.`  \n  \n `<bold>`  \n  \n The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:  \n  \n `</bold>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_19_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_19_1.vb)]"
  syntax:
    content: public override void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa liczby zmiennoprzecinkowej pojedynczej precyzji do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to use the Write method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_28_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_28_1.vb)]"
  syntax:
    content: public override void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Liczba zmiennoprzecinkowych pojedynczej precyzji do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  id: Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje określony ciąg do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to use the Write method to render a string between the opening and closing tags of a custom markup element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_25_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_25_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_25_1.cpp)]"
  syntax:
    content: public override void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje ciąg kartę i ciąg formatowania do strumienia wyjściowego przy użyciu tej samej semantyki jako &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; metody oraz wszelkie oczekujące odstępy kartę."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_18_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_18_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg zawierający zero lub więcej elementów formatu."
    - id: arg0
      type: System.Object
      description: "Obiekt do formatu."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje sformatowany ciąg, który zawiera Reprezentacja tekstowa typu tablicy obiektów do strumienia wyjściowego, wraz z odstępy kartę oczekujące. Ta metoda używa tej samej semantyki jako &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; metody."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to render a formatted string and the contents of an array. The second one demonstrates how to declare the array.  \n  \n The following code example shows how to use the Write method to render a formatted string and the contents of an object array, named `curPriceTime`. The method call renders the second member of the array before it renders the first member.  \n  \n [!code-cs[MarkupTextWriter_Methods2#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_1.vb)]  \n  \n The following code example demonstrates declaring the `curPriceTime` object array.  \n  \n [!code-cs[MarkupTextWriter_Methods2#14](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#14](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_2.vb)]"
  syntax:
    content: public override void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg zawierający zero lub więcej elementów formatu."
    - id: arg
      type: System.Object[]
      description: "Tablica obiektów do formatowania."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje Reprezentacja tekstowa typu subarray znaków Unicode do strumienia wyjściowego, wraz z odstępy kartę oczekujące."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_1.vb)]  \n  \n The following portion of the code example uses the `index` and `count` parameters of the Write method to render the first five characters of the array created in the preceding example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#11](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#11](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków, z którego ma zostać zapisywanie tekstu do strumienia wyjściowego."
    - id: index
      type: System.Int32
      description: "Lokalizacja indeksu w tablicy, którym rozpoczyna się zapisu."
    - id: count
      type: System.Int32
      description: "Liczba znaków do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje sformatowany ciąg, który zawiera Reprezentacja tekstowa dwóch obiektów do strumienia wyjściowego, wraz z odstępy kartę oczekujące. Ta metoda używa tej samej semantyki jako &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; metody."
  remarks: "Metoda Write generuje żadnych kart, które oczekują, a następnie wywołania <xref:System.IO.TextWriter.Write%2A>Podstawowa metoda.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.  \n  \n [!code-cs[MarkupTextWriter_Methods1#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_39_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_39_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg zawierający zero lub więcej elementów formatu."
    - id: arg0
      type: System.Object
      description: "Obiekt do formatu."
    - id: arg1
      type: System.Object
      description: "Obiekt do formatu."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  id: WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje określony znaczników atrybut i wartość do strumienia wyjściowego."
  remarks: "Metoda WriteAttribute można zapisać znacznika atrybutów i ich wartości bez kodowania. Metoda WriteAttribute zapisuje wartość atrybutu ujęta w znaki cudzysłowu (&quot;). Jeśli `value` jest `null`, metoda WriteAttribute zapisuje nazwy atrybutu."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the WriteAttribute overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_8_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_8_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_8_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Ten atrybut można zapisać do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Wartość atrybutu."
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  id: WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje atrybut określonego znacznika i wartość do strumienia wyjściowego i, jeśli jest określony, zapisuje wartość zakodowany."
  remarks: "Metoda WriteAttribute można zapisać znacznika atrybutów i ich wartości, z lub bez kodowania. W metodzie WriteAttribute <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metody w celu kodowania.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>       Metoda WriteAttribute zapisuje wartość atrybutu ujęta w znaki cudzysłowu (&quot;). Jeśli `value` jest `null`, metoda WriteAttribute zapisuje nazwy atrybutu."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the WriteAttribute overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/be7115c4-7933-43ab-93e3-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/be7115c4-7933-43ab-93e3-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/be7115c4-7933-43ab-93e3-_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "Atrybut znaczników do zapisu do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Wartość atrybutu."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>kodowanie atrybutu i jego przypisanej wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  id: WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje odstępy kartę i otwierający tag elementu określonego znacznika do strumienia wyjściowego."
  remarks: "Metoda WriteBeginTag nie zapisuje zamykającego nawiasu ostrego (>) tagu otwierającego element znaczników. Dzięki temu zapisywania atrybutów znacznika otwierający tag elementu. Użyj <xref:System.Web.UI.HtmlTextWriter.TagRightChar>Stała, aby zamknąć otwierający tag podczas wywoływania metody WriteBeginTag.</xref:System.Web.UI.HtmlTextWriter.TagRightChar> Użyj metody WriteBeginTag z <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>Stała podczas pisania elementów kodu znaczników, które są samozamykającego.</xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>       Metoda WriteBeginTag jest używana przez formanty niestandardowego serwera, które nie zezwalaj na tag lub mapowanie atrybutu i renderowania elementów kodu znaczników w taki sam sposób dla każdego żądania."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the WriteBeginTag method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_15_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_15_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_15_1.cpp)]"
  syntax:
    content: public virtual void WriteBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Element znaczników którego można zapisać znacznika otwierającego."
  overload: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  id: WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje <xref uid=&quot;langword_csharp_&lt;br /&gt;&quot; name=&quot;&lt;br /&gt;&quot; href=&quot;&quot;> </xref> element znaczników do strumienia wyjściowego."
  remarks: "Metoda WriteBreak do renderowania podziały wierszy w kontrolki niestandardowej lub znacznik karty. Metoda WriteBreak zapisuje odstęp między `br` i `/` lepszą zgodność HTML."
  example:
  - "The following code example shows how to call the WriteBreak method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `<custID> & <invoice#>` markup.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_38_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_38_1.vb)]"
  syntax:
    content: public virtual void WriteBreak ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  id: WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Koduje tekst określony dla urządzenia wysyłającego żądanie, a następnie zapisuje do strumienia wyjściowego."
  remarks: "Use the WriteEncodedText method when a string contains angle brackets (\\< or >) or an ampersand (&).  \n  \n The WriteEncodedText method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to ` `."
  example:
  - "The following code example shows how to use the WriteEncodedText method to write the encoded markup `<custID> & \\<invoice#>` to the output stream. The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_44_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_44_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedText (string text);
    parameters:
    - id: text
      type: System.String
      description: "Ciąg tekstowy do zakodowania i zapisania w strumieniu wyjściowym."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  id: WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Koduje określony adres URL, a następnie zapisuje do strumienia wyjściowego. Adres URL może zawierać parametrów."
  remarks: "Ciąg w kodowaniu metody WriteEncodedUrl `url` parametru zgodnie ze specyfikacją kodowania adresów URL. Parametry, które należy wykonać ogranicznik znak zapytania (?) nie jest zaszyfrowana."
  example:
  - "The following code example shows how to use the WriteEncodedUrl method, which generates the following output:  \n  \n `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_30_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_30_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "Adres URL ciąg do zakodowania i zapisania w strumieniu wyjściowym."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  id: WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Koduje określony parametr adresu URL dla urządzenia wysyłającego żądanie, a następnie zapisuje do strumienia wyjściowego."
  remarks: "Spacje w parametru część adresu URL są zakodowane jako znak plus (+), a następnie znaku równości (=) są kodowane jako `%3d`."
  example:
  - "The following code example shows how to use the WriteEncodedUrlParameter method, which generates the following output:  \n  \n `ID%3dCity+State`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrlParameter (string urlText);
    parameters:
    - id: urlText
      type: System.String
      description: "Parametr adresu URL ciąg do zakodowania i zapisania w strumieniu wyjściowym."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  id: WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje odstępy kartę i tagu zamykającego znacznika określonego elementu."
  remarks: "W odróżnieniu od <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metody, metoda WriteEndTag ma nie logiki, aby tagu końcowym elementu odpowiada odpowiadających tagu początkowego.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates rendering an `<img>` element. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.  \n  \n-   Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.  \n  \n-   Calls the WriteEndTag method to close the `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: public virtual void WriteEndTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Element, aby zapisać tagu zamykającego."
  overload: System.Web.UI.HtmlTextWriter.WriteEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  id: WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje odstępy kartę i otwierający tag elementu określonego znacznika do strumienia wyjściowego."
  remarks: "Metoda WriteFullBeginTag automatycznie zapisuje zamykającego nawiasu ostrego (>) znacznika otwierającego elementu, w odróżnieniu od <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>metodę, która nie zapisuje zamykającego nawiasu ostrego.</xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Użyj WriteFullBeginTag dla znaczników elementów, które mają żadnych atrybutów."
  syntax:
    content: public virtual void WriteFullBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Element do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  id: WriteLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). Aby uzyskać więcej informacji zobacz <xref:System.IO.TextWriter.WriteLine%2A>.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example demonstrates how to use the WriteLine method to insert a line after an `<img>` element is rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_27_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_27_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_27_1.cpp)]"
  syntax:
    content: public override void WriteLine ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i reprezentacja tekstowa typu wartość logiczna, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Wartość logiczna, można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i znaku Unicode, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Znak do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i tablicy znaków Unicode, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array. The second one demonstrates how to use that array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_1.vb)]  \n  \n The following code example renders the `hello world` character array that was created in the preceding example by using the WriteLine method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i reprezentacja tekstowa typu liczbą zmiennoprzecinkowe podwójnej precyzji, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_33_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_33_1.vb)]"
  syntax:
    content: public override void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Liczbie zmiennoprzecinkowej podwójnej precyzji można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i reprezentacja tekstowa typu całkowita 32-bajtowych, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "32-bajtowych całkowita można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i reprezentacja tekstowa typu całkowita 64-bajtowych, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "64-bajtowych całkowita można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i reprezentacja tekstowa typu obiektu, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property to a control.  \n  \n [!code-cs[MarkupTextWriter_Methods1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i reprezentacja tekstowa typu liczbą zmiennoprzecinkowych pojedynczej precyzji, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public override void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Pojedynczej precyzji liczba zmiennoprzecinkowa można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i ciąg tekstowy, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (string s);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i reprezentacja tekstowa 4-bajtowych wartości całkowitej bez znaku, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "4-bajtowych całkowitą bez znaku można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i sformatowany ciąg zawierający Reprezentacja tekstowa typu obiektu, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). Metoda WriteLine używa tej samej semantyki jako <xref:System.String.Format%28System.String%2CSystem.Object%29>metody.</xref:System.String.Format%28System.String%2CSystem.Object%29> <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_23_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_23_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg zawierający zero lub więcej elementów formatu."
    - id: arg0
      type: System.Object
      description: "Obiekt do formatu."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i sformatowany ciąg, który zawiera Reprezentacja tekstowa typu tablicy obiektów, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). Metoda WriteLine używa tej samej semantyki jako [formatu (String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) metody. <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` metody.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to render a string and an array to the output stream. The second one shows how to declare the array.  \n  \n The following code example demonstrates how to use the WriteLine method to render a formatted string and the contents of an object array to the output stream.  \n  \n [!code-cs[MarkupTextWriter_Methods2#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_1.vb)]  \n  \n The following code example shows how to declare the object array that was rendered in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_2.vb)]"
  syntax:
    content: public override void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg zawierający zero lub więcej elementów formatu."
    - id: arg
      type: System.Object[]
      description: "Tablica obiektów do formatowania."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i subarray znaków Unicode, następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_1.vb)]  \n  \n The following code example uses the `index` and `count` parameters of the WriteLine method to render the first five characters of the array created in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#4](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#4](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablicy znaków, z którego ma zostać zapisywanie tekstu do strumienia wyjściowego."
    - id: index
      type: System.Int32
      description: "Lokalizacja tablicy znaków, w którym rozpoczyna się zapisu."
    - id: count
      type: System.Int32
      description: "Liczba znaków w tablicy można zapisać do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje wszystkie oczekujące kartę odstępy i sformatowany ciąg, który zawiera Reprezentacja tekstowa typu dwa obiekty następuje ciąg terminator wiersza do strumienia wyjściowego."
  remarks: "Domyślny ciąg terminator wiersza jest znak powrotu karetki następują wiersz (&quot;\\r&quot;). Metoda WriteLine używa tej samej semantyki jako <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>metody.</xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> <xref:System.IO.TextWriter.WriteLine%2A>Metoda podstawowa jest używana podczas zapisu `value` parametru.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example demonstrates how to use the WriteLine method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#2](~/add/codesnippet/csharp/efeeb384-c97a-43fc-baf0-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#2](~/add/codesnippet/visualbasic/efeeb384-c97a-43fc-baf0-_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg zawierający zero lub więcej elementów formatu."
    - id: arg0
      type: System.Object
      description: "Obiekt do formatu."
    - id: arg1
      type: System.Object
      description: "Obiekt do formatu."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  id: WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje ciąg, następuje ciąg terminator wiersza do strumienia wyjściowego. Ta metoda powoduje ignorowanie odstępy określonej karty."
  remarks: "Use the WriteLineNoTabs method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.  \n  \n The default line terminator string is a carriage return followed by a line feed (\"\\r\\n\"). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public void WriteLineNoTabs (string s);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg do zapisu do strumienia wyjściowego."
  overload: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  id: WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje określony styl atrybutu do strumienia wyjściowego."
  remarks: "Metoda WriteStyleAttribute zapisuje atrybut stylu w następującym formacie: `name` `=` `value``;`"
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Atrybut stylu można zapisać do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Wartość atrybutu style."
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  id: WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje określony styl atrybut i wartość strumienia wyjściowego i koduje wartość, jeśli określony."
  remarks: "Metoda WriteStyleAttribute zapisuje atrybut stylu w następującym formacie: `name` `=` `value` `;` <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metody jest używany do kodowania `value` parametru.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "Atrybut stylu można zapisać do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Wartość atrybutu style."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>kodowanie atrybutu style i jej wartość przypisaną; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  id: WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje określony ciąg kodowania go zgodnie z wymaganiami adresu URL."
  remarks: "Metoda WriteUrlEncodedString koduje znaki, które można uwzględnić ograniczniki adresu URL (zależy od ustawienia `argument`) do ciągów w postaci `%``xx`, jeśli kod ASCII jest mniejsza niż 128; w przeciwnym razie `%u``xxxx`, gdzie `x` jest cyfrą szesnastkową.       <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>i <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>metody należy użyć metody WriteUrlEncodedString metodą narzędzia.</xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> </xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>"
  syntax:
    content: protected void WriteUrlEncodedString (string text, bool argument);
    parameters:
    - id: text
      type: System.String
      description: "Ciąg do zakodowania i zapisania w strumieniu wyjściowym."
    - id: argument
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zakodować ciąg w ramach sekcji parametr adresu URL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Aby zakodować ciąg jako części sekcji ścieżki adresu URL."
  overload: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.TextWriter
  isExternal: false
  name: System.IO.TextWriter
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriterAttribute
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterAttribute
  nameWithType: HtmlTextWriterAttribute
  fullName: System.Web.UI.HtmlTextWriterAttribute
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriterStyle
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterStyle
  nameWithType: HtmlTextWriterStyle
  fullName: System.Web.UI.HtmlTextWriterStyle
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
- uid: System.Web.UI.HtmlTextWriter.Close
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
- uid: System.Web.UI.HtmlTextWriter.Encoding
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
- uid: System.Web.UI.HtmlTextWriter.Flush
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.Indent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
- uid: System.Web.UI.HtmlTextWriter.NewLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
- uid: System.Web.UI.HtmlTextWriter.TagKey
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
- uid: System.Web.UI.HtmlTextWriter.TagName
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.#ctor*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter.HtmlTextWriter
- uid: System.Web.UI.HtmlTextWriter.AddAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute
  nameWithType: HtmlTextWriter.AddAttribute
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute
  nameWithType: HtmlTextWriter.AddStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.BeginRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender
  nameWithType: HtmlTextWriter.BeginRender
- uid: System.Web.UI.HtmlTextWriter.Close*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close
  nameWithType: HtmlTextWriter.Close
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue
  nameWithType: HtmlTextWriter.EncodeAttributeValue
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl
  nameWithType: HtmlTextWriter.EncodeUrl
- uid: System.Web.UI.HtmlTextWriter.Encoding*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender
  nameWithType: HtmlTextWriter.EndRender
- uid: System.Web.UI.HtmlTextWriter.EnterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle
  nameWithType: HtmlTextWriter.EnterStyle
- uid: System.Web.UI.HtmlTextWriter.ExitStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle
  nameWithType: HtmlTextWriter.ExitStyle
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes
  nameWithType: HtmlTextWriter.FilterAttributes
- uid: System.Web.UI.HtmlTextWriter.Flush*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush
  nameWithType: HtmlTextWriter.Flush
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey
  nameWithType: HtmlTextWriter.GetAttributeKey
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName
  nameWithType: HtmlTextWriter.GetAttributeName
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey
  nameWithType: HtmlTextWriter.GetStyleKey
- uid: System.Web.UI.HtmlTextWriter.GetStyleName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName
  nameWithType: HtmlTextWriter.GetStyleName
- uid: System.Web.UI.HtmlTextWriter.GetTagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey
  nameWithType: HtmlTextWriter.GetTagKey
- uid: System.Web.UI.HtmlTextWriter.GetTagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName
  nameWithType: HtmlTextWriter.GetTagName
- uid: System.Web.UI.HtmlTextWriter.Indent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
- uid: System.Web.UI.HtmlTextWriter.InnerWriter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined
  nameWithType: HtmlTextWriter.IsAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute
  nameWithType: HtmlTextWriter.IsValidFormAttribute
- uid: System.Web.UI.HtmlTextWriter.NewLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender
  nameWithType: HtmlTextWriter.OnAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender
  nameWithType: HtmlTextWriter.OnStyleAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnTagRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender
  nameWithType: HtmlTextWriter.OnTagRender
- uid: System.Web.UI.HtmlTextWriter.OutputTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs
  nameWithType: HtmlTextWriter.OutputTabs
- uid: System.Web.UI.HtmlTextWriter.PopEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag
  nameWithType: HtmlTextWriter.PopEndTag
- uid: System.Web.UI.HtmlTextWriter.PushEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag
  nameWithType: HtmlTextWriter.PushEndTag
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute
  nameWithType: HtmlTextWriter.RegisterAttribute
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle
  nameWithType: HtmlTextWriter.RegisterStyle
- uid: System.Web.UI.HtmlTextWriter.RegisterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag
  nameWithType: HtmlTextWriter.RegisterTag
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent
  nameWithType: HtmlTextWriter.RenderAfterContent
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag
  nameWithType: HtmlTextWriter.RenderAfterTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent
  nameWithType: HtmlTextWriter.RenderBeforeContent
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag
  nameWithType: HtmlTextWriter.RenderBeforeTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag
  nameWithType: HtmlTextWriter.RenderBeginTag
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag
  nameWithType: HtmlTextWriter.RenderEndTag
- uid: System.Web.UI.HtmlTextWriter.TagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.Write*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write
  nameWithType: HtmlTextWriter.Write
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute
  nameWithType: HtmlTextWriter.WriteAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag
  nameWithType: HtmlTextWriter.WriteBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteBreak*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak
  nameWithType: HtmlTextWriter.WriteBreak
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText
  nameWithType: HtmlTextWriter.WriteEncodedText
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl
  nameWithType: HtmlTextWriter.WriteEncodedUrl
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag
  nameWithType: HtmlTextWriter.WriteEndTag
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag
  nameWithType: HtmlTextWriter.WriteFullBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine
  nameWithType: HtmlTextWriter.WriteLine
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs
  nameWithType: HtmlTextWriter.WriteLineNoTabs
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute
  nameWithType: HtmlTextWriter.WriteStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString
  nameWithType: HtmlTextWriter.WriteUrlEncodedString
