### YamlMime:ManagedReference
items:
- uid: System.MarshalByRefObject
  id: MarshalByRefObject
  children:
  - System.MarshalByRefObject.#ctor
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  langs:
  - csharp
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
  type: Class
  summary: "Umożliwia dostęp do obiektów poza granice domeny aplikacji w aplikacjach tej komunikacji zdalnej pomocy technicznej."
  remarks: "Domeny aplikacji jest partycją w procesu systemu operacyjnego, w którym znajdują się co najmniej jednej aplikacji. Obiekty w tej samej domenie aplikacji komunikują się bezpośrednio. Obiekty w różnych domenach aplikacji komunikują się przez transport kopie obiektów poza granice domeny aplikacji lub przy użyciu serwera proxy do wymiany wiadomości.       MarshalByRefObject jest klasa podstawowa dla obiektów, które komunikują się poza granice domeny aplikacji poprzez wymianę wiadomości przy użyciu serwera proxy. Obiekty, które dziedziczą z elementu MarshalByRefObject są niejawnie organizowany przez wartość. Jeśli zdalna aplikacja odwołuje się obiekt organizowany przez obiekt wartości, kopię obiektu jest przekazywany poza granice domeny aplikacji.       Obiekty MarshalByRefObject są dostępne bezpośrednio z poziomu granice domeny aplikacji lokalnej. Przy pierwszym dostępie typu MarshalByRefObject aplikacji w domenie aplikacji zdalnego serwera proxy są przekazywane do aplikacji zdalnej. Kolejne wywołania na serwerze proxy są przekazywane do obiektów znajdujących się w domenie lokalnej aplikacji.       Typy musi dziedziczyć po elemencie MarshalByRefObject, gdy typ jest używany przez granice domeny aplikacji i stan obiektu nie należy kopiować ponieważ elementach członkowskich obiektu nie są użyteczne spoza domeny aplikacji, w której zostały utworzone.       Gdy można dziedziczyć obiektu MarshalByRefObject do użytku poza granice domeny aplikacji, nie powinny zastępować któregokolwiek z członków ani powinny można wywoływać metod bezpośrednio. Środowisko uruchomieniowe rozpoznaje, że klasy pochodzące od elementu MarshalByRefObject powinny być przekazywane poza granice domeny aplikacji."
  example:
  - "This section contains two code examples. The first code example shows how to create an instance of a class in another application domain. The second code example shows a simple class that can be used for remoting.  \n  \n **Example 1**  \n  \n The following code example shows the simplest way to execute code in another application domain. The example defines a class named `Worker` that inherits MarshalByRefObject, with a method that displays the name of the application domain in which it is executing. The example creates instances of `Worker` in the default application domain and in a new application domain.  \n  \n> [!NOTE]\n>  The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.  \n  \n [!code-cpp[CreateInstanceAndUnwrap2#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_1.cpp)]\n [!code-cs[CreateInstanceAndUnwrap2#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_1.cs)]\n [!code-vb[CreateInstanceAndUnwrap2#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_1.vb)]  \n  \n **Example 2**  \n  \n The following example demonstrates a class derived from MarshalByRefObject that is used later in remoting.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_2.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_2.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MarshalByRefObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.MarshalByRefObject.#ctor
  id: '#ctor'
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.MarshalByRefObject&quot;> </xref> klasy."
  syntax:
    content: protected MarshalByRefObject ();
    parameters: []
  overload: System.MarshalByRefObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Tworzy obiekt, który zawiera wszystkie informacje wymagane do wygenerowania serwera proxy użyte do komunikowania się z obiektu zdalnego."
  remarks: "TheCreateObjRef metoda jest wywoływana przez metody tworzenia obiektu zdalnego, takich jak <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName>i <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>.</xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> </xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> W większości przypadków nie ma konieczności przesłonić tę metodę."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);
    parameters:
    - id: requestedType
      type: System.Type
      description: "<xref:System.Type>Obiektu, który nowy <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> będzie odwoływać.</xref:System.Type>"
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Informacje o wymaganych do utworzenia serwera proxy."
  overload: System.MarshalByRefObject.CreateObjRef*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "To wystąpienie nie jest obiektem prawidłową komunikację zdalną."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.MarshalByRefObject.GetLifetimeService
  id: GetLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera obiekt usługi bieżącego okresu istnienia, który określa okres istnienia zasad dla tego wystąpienia."
  remarks: "Aby uzyskać więcej informacji o usługach okres istnienia zobacz <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>klasy.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  syntax:
    content: public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt typu <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> użyć do kontrolowania zasad okres istnienia dla tego wystąpienia."
  overload: System.MarshalByRefObject.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.MarshalByRefObject.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera obiekt usługi okres istnienia do kontrolowania zasad okres istnienia dla tego wystąpienia."
  remarks: "Aby uzyskać więcej informacji o usługach okres istnienia zobacz <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>klasy.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  example:
  - "The following code example demonstrates creating a lease.  \n  \n [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/cpp/m-system.marshalbyrefobj_1.cpp)]\n [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/visualbasic/m-system.marshalbyrefobj_1.vb)]\n [!code-cs[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/csharp/m-system.marshalbyrefobj_1.cs)]"
  syntax:
    content: public virtual object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt typu <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> użyć do kontrolowania zasad okres istnienia dla tego wystąpienia. Jest to bieżąca okres istnienia obiektu usługi dla tego wystąpienia, jeśli istnieje; w przeciwnym razie nowy okres istnienia obiektu usługi zainicjowany z wartością &lt;xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A?displayProperty=fullName&gt; właściwości."
  overload: System.MarshalByRefObject.InitializeLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  id: MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Tworzy kopię pobieżną bieżącego <xref href=&quot;System.MarshalByRefObject&quot;> </xref> obiektu."
  remarks: "Metoda MemberwiseClone tworzy kopię pobieżną przez utworzenie nowej <xref:System.MarshalByRefObject>obiekt, a następnie skopiować niestatycznego pola bieżącej <xref:System.MarshalByRefObject>obiektu do nowego obiektu.</xref:System.MarshalByRefObject> </xref:System.MarshalByRefObject> Jeśli pole jest typu wartości, jest wykonywane kopii bitowej przez bitowej pola. Jeśli pole jest typem referencyjnym, odwołanie jest kopiowana, ale określony obiekt jest; w związku z tym oryginalny obiekt i jego klon odwoływać się do tego samego obiektu.       Rozważmy na przykład <xref:System.MarshalByRefObject>obiekt o nazwie X, który z kolei odwołuje się obiekty A i B. obiektu B, obiekt odwołania C. Kopia pobieżna wartości X tworzy nowy obiekt X2 również odwołujących się do obiektów, A i B. Z kolei głęboką kopię X tworzy nowy obiekt X2, który odwołuje się do nowych obiektów A2 i B2, które są kopiami A i B. B2, z kolei odwołuje się nowy obiekt C2, który jest kopią C. Użyj klasy, która implementuje <xref:System.ICloneable>interfejsu, aby wykonać kopię obiektu bezpośrednich lub skrócona.</xref:System.ICloneable> </xref:System.MarshalByRefObject>       Tożsamość <xref:System.MarshalByRefObject>obiektu jest zdefiniowana jako obiekt serwera zdalnego, który jest elementem docelowym wywołania klienta usług zdalnych.</xref:System.MarshalByRefObject> Domyślnie memberwise klonu <xref:System.MarshalByRefObject>obiekt ma inną tożsamość niż oryginalny obiekt, który zwykle nie jest poprawne zachowanie klony obiektów po stronie serwera, które są przekazywane granicy komunikacji zdalnej na komputerach klienckich.</xref:System.MarshalByRefObject> Określ `false`, która jest zazwyczaj odpowiednie do usunięcia tożsamości klonu i spowodować nową tożsamość ma być przypisany podczas klonu jest przekazywane granicy remoting, lub `true` spowodować klonu, aby zachować tożsamość oryginalnej <xref:System.MarshalByRefObject>obiektu.</xref:System.MarshalByRefObject> Metoda MemberwiseClone jest przeznaczona do użycia przez deweloperów implementowania obiektów serwera zdalnego."
  syntax:
    content: protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);
    parameters:
    - id: cloneIdentity
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Aby usunąć bieżący <xref href=&quot;System.MarshalByRefObject&quot;> </xref> tożsamości obiektu, co spowoduje, że obiekt, aby można przypisać nowej tożsamości, gdy jest on zorganizować granicy komunikacji zdalnej. Wartość <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> jest zwykle. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby skopiować bieżące <xref href=&quot;System.MarshalByRefObject&quot;> </xref> tożsamości obiektu do jego klonowania, co spowoduje zdalnych wywołań klienta przesłana do obiektu zdalnego serwera."
    return:
      type: System.MarshalByRefObject
      description: "Skrócona kopię bieżącego <xref href=&quot;System.MarshalByRefObject&quot;> </xref> obiektu."
  overload: System.MarshalByRefObject.MemberwiseClone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.MarshalByRefObject.#ctor
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject.#ctor*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject.MarshalByRefObject
- uid: System.MarshalByRefObject.CreateObjRef*
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef
  nameWithType: MarshalByRefObject.CreateObjRef
- uid: System.MarshalByRefObject.GetLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService
  nameWithType: MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.MemberwiseClone*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone
  nameWithType: MarshalByRefObject.MemberwiseClone
