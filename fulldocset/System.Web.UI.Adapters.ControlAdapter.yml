### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Adapters.ControlAdapter
  id: ControlAdapter
  children:
  - System.Web.UI.Adapters.ControlAdapter.#ctor
  - System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.Browser
  - System.Web.UI.Adapters.ControlAdapter.Control
  - System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  - System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.Page
  - System.Web.UI.Adapters.ControlAdapter.PageAdapter
  - System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  langs:
  - csharp
  name: ControlAdapter
  nameWithType: ControlAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter
  type: Class
  summary: "Dostosowuje renderowania dla formantu pochodnej, do której jest dołączona karty, aby zmodyfikować domyślne znaczników lub zachowanie dla przeglądarki, a jest klasy podstawowej, z których wszystkie kontrolki dziedziczą kart."
  remarks: "Formant karty są składniki, które zastępują niektórych <xref:System.Web.UI.Control>klas, metod i zdarzeń w jego cyklu życia wykonywania przeglądarki lub obsługa specyficzne dla znacznika.</xref:System.Web.UI.Control> .NET Framework mapuje pojedynczego pochodnej formantu karty <xref:System.Web.UI.Control>obiekt dla każdego żądania klienta.</xref:System.Web.UI.Control>       Karta modyfikuje kontroli dla konkretnej przeglądarki lub klasy przeglądarki lub działa jako filtr dowolnego na niektóre możliwości. Zazwyczaj karty jest definiowane przez język znaczników, który korzysta z przeglądarki (na przykład XHTML lub HTML 3.2). Większość przystosowanie w sposób renderowania są umieszczane specjalne klas pochodzących od <xref:System.Web.UI.HtmlTextWriter>klasy.</xref:System.Web.UI.HtmlTextWriter> W związku z tym istnieje duże prawdopodobieństwo, że jedna karta może służyć do liczba zachowania klasy przeglądarki lub że włączenia przystosowanie w <xref:System.Web.UI.HtmlTextWriter>klasy można wykorzystać formantu karty niepotrzebne.</xref:System.Web.UI.HtmlTextWriter>       Adaptera dla klasy formantu ma zastosowanie do wszystkich kontrolek, które dziedziczą z tej klasy, chyba że nie występują więcej specjalistyczne karty. Na przykład karta <xref:System.Web.UI.WebControls.BaseValidator>Klasa może być używana dla wszystkich `Validator` obiektów.</xref:System.Web.UI.WebControls.BaseValidator>       Kart zwykle nie dziedziczą bezpośrednio z klasy ControlAdapter, ale z jednej z klas podstawowych karty specyficznych dla obiektu docelowego, udostępniające funkcje dodatkowe, które są specyficzne dla typu formantu i docelowej przeglądarki lub konkretnej renderowanie wymagane.       Formanty się nie wymaga karty. Jeśli formanty zostały rozszerzone za pośrednictwem kompozycji, zazwyczaj kart kontrolki podrzędne są wystarczające.       Każdy formant ma jawnego mapowania do kart za pomocą .browser plików definicji. W związku z tym wszelkie dostęp do <xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>używa właściwości <xref:System.Web.HttpBrowserCapabilities>obiektu wyodrębniony z plików definicji przeglądarki do wyszukiwania mapowania kart do formantu.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>       Podczas przetwarzania, .NET Framework przechwytuje wywołania nadpisywalnych metod formantu, który może być specyficznych dla obiektu docelowego. Jeśli karta kontroli jest dołączony, .NET Framework wywołuje metody skojarzonej karty.       Karta wykonywane jest renderowanie formantu za pośrednictwem <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>metody.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Jeśli została zastąpiona, <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>potencjalnie nie powinny wywoływać implementację klasy podstawowej, ponieważ który wykonuje wywołanie do <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>metody.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Może to spowodować renderowania występuje dwa razy, raz przez kartę i raz przez formant.       <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>Podstawy wywołania metody <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>metody formantu.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> W związku z tym jeśli można zastąpić <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>, nie powinny wywoływać implementację klasy podstawowej, chyba że renderowania zaimplementowaniem oprócz są dostarczane przez <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>formantu.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Należy się upewnić, że programu .NET Framework wykonuje przechwytywaniu kart formantów podrzędnych. Można to zrobić przez wywołanie metody <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>Podstawowa metoda, która wywołuje <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName>metody formantu, z Twojego <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>przesłonić.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>       <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>i <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>metody są wywoływane przez kontrolkę, bezpośrednio przed i po (odpowiednio) wywołań kontroli <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>metody.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> Jeśli przed i po renderowania są tylko przeglądarki dotyczące przetwarzania zadań wymaganych w użyciu <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>i <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>może być konieczne zastąpienie <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> Domyślne zachowanie <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>i <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>metod jest wywołanie odpowiednich metod <xref:System.Web.UI.HtmlTextWriter>.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>       Aby zachować informacje stanu, można zastąpić karty kontroli <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, i <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>metody.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, i <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>są wywoływane podczas zapisywania i załadować odpowiednio prywatnej stanów widoku i kontroli.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A></xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>, I <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A>Podstawowa do odpowiedniego wywołania metody <xref:System.Web.UI.Control>metody klasy.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> W związku z tym jednej z tych metod ControlAdapter, które są zastępowane należy wywołać ich metod bazowych; w przeciwnym razie zdarzenie skojarzone z <xref:System.Web.UI.Control>metody klasy nie zostanie wygenerowany.</xref:System.Web.UI.Control>       Formanty i kart opcjonalnie stosować <xref:System.Web.UI.IPostBackDataHandler>i <xref:System.Web.UI.IPostBackEventHandler>interfejsów.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.IPostBackDataHandler> .NET Framework Określa, czy karta istnieje i czy adapter implementuje tych interfejsów. Jeśli tak, karta powinny zastępować <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>, i <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>metod, w razie potrzeby.</xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A> Jeśli nie rozpoznano danych odświeżania strony na karcie, musi ona wywołania zwrotnego w formancie go przetworzyć. Programy obsługi zdarzeń kolejnych również musi wywołania zwrotnego w formancie."
  syntax:
    content: public abstract class ControlAdapter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> klasy."
  remarks: "Podczas tworzenia odpowiedniego środowiska .NET Framework wewnętrznie tworzy tej karty <xref:System.Web.UI.Control>obiektu.</xref:System.Web.UI.Control>"
  syntax:
    content: protected ControlAdapter ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  id: BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Wywoływane przed renderowanie formantu. W klasie pochodnej karty generuje otwarcia tagów, które są wymagane przez określony element docelowy, ale nie jest wymagane przez przeglądarki HTML."
  remarks: "Metoda BeginRender jest wywoływana tuż przed <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>metody i jest używany do wykonania przed renderowanie formantu przetwarzania wstępnego specyficznych dla obiektu docelowego.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Użyj metody BeginRender w połączeniu z <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>metodę, aby zapewnić otwierający i zamykający tag spójności.</xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>"
  syntax:
    content: protected virtual void BeginRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Zawierający metody do danych wyjściowych specyficznych dla obiektu docelowego renderowania."
  overload: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  id: Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Pobiera odwołanie do funkcji przeglądarki klienta wprowadzania bieżącego żądania HTTP."
  remarks: "A <xref:System.Web.UI.Adapters.ControlAdapter>obiektu określa możliwości przeglądarki klienta z <xref:System.Web.HttpBrowserCapabilities>obiekt, który jest zwracany przez właściwość przeglądarki.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Adapters.ControlAdapter> Dzięki temu <xref:System.Web.UI.Adapters.ControlAdapter>obiektu do renderowania kodu znaczników specyficznych dla przeglądarki lub w przeciwnym razie modyfikowanie <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter>"
  example:
  - "The following code example shows how to use the Browser property to access the details of the requesting browser. In this example, the code checks to determine whether the browser is compatible with JavaScript, and then allows the developer to render customized output in that case.  \n  \n [!code-cpp[ControlAdapter_Browser#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_1_1.cpp)]\n [!code-vb[ControlAdapter_Browser#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_1_1.vb)]\n [!code-cs[ControlAdapter_Browser#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_1_1.cs)]"
  syntax:
    content: protected System.Web.HttpBrowserCapabilities Browser { get; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref> Określenie możliwości przeglądarki i znaczników klienta."
  overload: System.Web.UI.Adapters.ControlAdapter.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  id: Control
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Pobiera odwołanie do formantu, do której jest dołączona ta karta formantu."
  remarks: "Gdy karty pochodnej kontroli jest dołączony do formantu, .NET Framework wywołuje określone elementy karty zamiast członków kontroli."
  example:
  - "The following code example shows how to derive a custom control from the <xref:System.Web.UI.Control> class, and then create a corresponding adapter that inherits from the <xref:System.Web.UI.Adapters.ControlAdapter> class. The adapter overrides the Control property and returns a strongly-typed reference to the control.  \n  \n [!code-cs[ControlAdapter.Control#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_0_1.cs)]\n [!code-vb[ControlAdapter.Control#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_0_1.vb)]\n [!code-cpp[ControlAdapter.Control#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_0_1.cpp)]"
  syntax:
    content: protected System.Web.UI.Control Control { get; }
    return:
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> Do której należy <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> jest dołączony."
  overload: System.Web.UI.Adapters.ControlAdapter.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Tworzy formantów dla formantu złożonego za elementem podrzędnym specyficznych dla obiektu docelowego."
  remarks: "W przypadku karty pochodnej kontroli dołączony do <xref:System.Web.UI.Control>object i elementu CreateChildControls, gdy metoda zostanie przesłonięta zastąpienie jest wywoływana zamiast <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>metody.</xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> </xref:System.Web.UI.Control> W związku z tym elementu CreateChildControls może służyć do utworzenia zestawu formant podrzędny specyficznych dla obiektu docelowego.       Aby uzyskać więcej informacji o łączeniu kontroli w celu utworzenia nowego formantu, zobacz [formanty złożone](http://msdn.microsoft.com/en-us/fb174677-d845-467c-8bf3-cc096b2490b0)."
  syntax:
    content: protected virtual void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  id: EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Wywoływana po wykonaniu renderowania formantu. W klasie pochodnej karty generuje zamykające znaczniki, które są wymagane przez określony element docelowy, ale nie jest wymagane przez przeglądarki HTML."
  remarks: "Zaraz po wywoływana jest metoda EndRender <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>metody i jest używany do wykonania po renderowania formantu postprocessing specyficznych dla obiektu docelowego.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Użyj metody EndRender w połączeniu z <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>metodę, aby zapewnić otwierający i zamykający tag spójności.</xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>"
  syntax:
    content: protected virtual void EndRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Zawierający metody do danych wyjściowych specyficznych dla obiektu docelowego renderowania."
  overload: System.Web.UI.Adapters.ControlAdapter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  id: LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Ładuje karty kontroli informacji o stanie zapisanych przez <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>podczas poprzedniego żądania do strony, gdzie znajduje się formantu skojarzony z tą kartą kontroli.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>"
  remarks: "Stan kontrolki jest informacje o stanie niezbędne potrzebne, nawet jeśli stan widoku jest wyłączone. Jeśli karta musi zachować informacje kontroli stanu, można zastąpić LoadAdapterControlState i <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>metody.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       Karta może być konieczne przechowuje informacji o stanie kontroli, gdy są funkcje, które muszą mieć stan przechowywanych w wielu żądań, niezależnie od stanu skojarzonym formancie. Na przykład formantu złożonego składające się z dużych wyświetlania tekstową i grupy <xref:System.Web.UI.WebControls.RadioButton>formanty może spowodować, że jako pojedynczy w przeglądarkach, komputer stacjonarny.</xref:System.Web.UI.WebControls.RadioButton> W innych przeglądarkach mogą podzielić renderowania — jeden widok dla tekstową wyświetlania, a druga w grupie przycisków radiowych. Karta potrzebny do obsługi własnych informacji specyficznych dla obiektu docelowego o aktualnie aktywny widok.       Metoda LoadAdapterControlState jest wywoływana bezpośrednio po <xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName>metody w `LoadState` etap cyklu życia.</xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName> Stan formantu karty jest oddzielne i oprócz stan formantu formantu."
  syntax:
    content: protected virtual void LoadAdapterControlState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>Zawierający informacje o stanie formantu karty jako <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  id: LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Ładuje karty Wyświetl informacje o stanie zapisanych przez <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>podczas poprzedniego żądania do strony, gdzie znajduje się formantu skojarzony z tą kartą kontroli.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>"
  remarks: "Gdy adaptera musi zachować informacje widok stanu, można zastąpić LoadAdapterViewState i <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>metody.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>       Karta musi zachować informacje o stanie widoku po dane, które muszą zostać zachowane żądań, niezależnie od stan widoku formantu skojarzony. Na przykład formantu siatki w przeglądarkach, komputerów stacjonarnych może spowodować, że jako pojedynczego widoku wierszy i kolumn wartości. W innych przeglądarkach może ją podzielić renderowania do wielu oddzielnych widoków, takich jak lista wierszy i szczegółowe informacje o jeden wiersz. Karta potrzebny do przechowywania danych dla widoków, które nie są aktualnie aktywne w widoku stanu.       Metoda LoadAdapterViewState jest wywoływana bezpośrednio przed <xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName>Metoda `LoadState` etap cyklu życia.</xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName> Karta stan widoku jest oddzielny oraz stan widoku formantu."
  syntax:
    content: protected virtual void LoadAdapterViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>Zawierający informacje o stanie widoku karty jako <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Zastępuje <xref:System.Web.UI.Control.OnInit*>metodę skojarzony formant.</xref:System.Web.UI.Control.OnInit*>"
  remarks: "W przypadku karta jest podłączona do <xref:System.Web.UI.Control>obiekt i OnInit metoda zostanie przesłonięta zamiast jest wywoływana metoda przesłaniająca <xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName>metody.</xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Zastąpienie metody OnInit do przetwarzania specyficznych dla obiektu docelowego w `Initialize` etap cyklu kontrolki. Zazwyczaj są funkcje, które są wykonywane, gdy formant zostanie utworzony."
  example:
  - "The following code sample derives a custom control adapter from the <xref:System.Web.UI.Adapters.ControlAdapter> class. It then overrides the OnInit method to set a property on the associated control and call the base method to complete the control initialization.  \n  \n [!code-cs[ControlAdapter_OnInit#1](~/add/codesnippet/csharp/m-system.web.ui.adapters_1.cs)]\n [!code-vb[ControlAdapter_OnInit#1](~/add/codesnippet/visualbasic/m-system.web.ui.adapters_1.vb)]\n [!code-cpp[ControlAdapter_OnInit#1](~/add/codesnippet/cpp/m-system.web.ui.adapters_1.cpp)]"
  syntax:
    content: protected virtual void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Zastępuje <xref:System.Web.UI.Control.OnLoad*>metodę skojarzony formant.</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "W przypadku karty dołączony do <xref:System.Web.UI.Control>obiekt i OnLoad metoda zostanie przesłonięta zamiast wywoływana jest metoda zastąpienie <xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName>metody.</xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Zastąp metodę OnLoad w celu przetwarzania specyficznych dla obiektu docelowego w `Load` etap cyklu kontrolki. Zazwyczaj są funkcje, które powinny być wykonywane dla każdego żądania klienta."
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Zastępuje <xref:System.Web.UI.Control.OnPreRender*>metodę skojarzony formant.</xref:System.Web.UI.Control.OnPreRender*>"
  remarks: "W przypadku karta jest podłączona do <xref:System.Web.UI.Control>obiekt i OnPreRender metoda zostanie przesłonięta zamiast jest wywoływana metoda przesłaniająca <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName>metody.</xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Zastąp metodę OnPreRender w celu przetwarzania specyficznych dla obiektu docelowego w `PreRender` etap cyklu kontrolki. Zazwyczaj są funkcje, które bezpośrednio poprzedzać renderowania formantu danych wyjściowych."
  syntax:
    content: protected virtual void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Zastępuje <xref:System.Web.UI.Control.OnUnload*>metodę skojarzony formant.</xref:System.Web.UI.Control.OnUnload*>"
  remarks: "W przypadku karta jest podłączona do <xref:System.Web.UI.Control>obiekt i OnUnload metoda zostanie przesłonięta zamiast jest wywoływana metoda przesłaniająca <xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName>metody.</xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Zastąp metodę OnUnload w przetwarzania specyficznych dla obiektu docelowego w `Unload` etap cyklu kontrolki. Zazwyczaj są to funkcje oczyszczania, które należy poprzedzić dyspozycji formantu."
  syntax:
    content: protected virtual void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  id: Page
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Pobiera odwołanie do strony, na którym znajduje się formantu skojarzony z tą kartą."
  remarks: "Właściwości strony zapewnia dostęp do <xref:System.Web.UI.Page?displayProperty=fullName>obiektu, w którym znajduje się kontrolka.</xref:System.Web.UI.Page?displayProperty=fullName>"
  syntax:
    content: protected System.Web.UI.Page Page { get; }
    return:
      type: System.Web.UI.Page
      description: "A <xref href=&quot;System.Web.UI.Page&quot;> </xref> , który zapewnia dostęp do wystąpienia page, w którym znajduje się skojarzony formant."
  overload: System.Web.UI.Adapters.ControlAdapter.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Pobiera odwołanie do karty strony dla strony, gdzie znajduje się skojarzony formant."
  remarks: "Właściwość PageAdapter zapewnia dostęp do <xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>obiekt do <xref:System.Web.UI.Page>obiektu gdzie <xref:System.Web.UI.Control>obiekt skojarzony z bieżącym <xref:System.Web.UI.Adapters.ControlAdapter>znajduje się obiekt.</xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control> </xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>       Właściwość PageAdapter umożliwia dostęp do innych elementów na poziomie strony karty, takie jak typowych funkcji specyficznych dla obiektu docelowego, które można zastosować do kilku typów kontrolki na stronie."
  syntax:
    content: protected System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "A <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> dla strony, gdzie formantu skojarzony z bieżącym <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> znajduje się."
  overload: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Generuje kod znaczników specyficznych dla obiektu docelowego dla formantu, do której jest dołączona karty formantu."
  remarks: "Zastąp metodę renderowania do generowania znaczników specyficznych dla obiektu docelowego do wysłania do przeglądarki klienta. Metoda renderowania jest wywoływana zamiast <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>metody Jeśli <xref:System.Web.UI.Adapters.ControlAdapter>obiekt jest dołączony do <xref:System.Web.UI.Control>obiektu.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Na potrzeby danych wyjściowych specyficznych dla obiektu docelowego renderowania."
  overload: System.Web.UI.Adapters.ControlAdapter.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Generuje kod znaczników specyficznych dla obiektu docelowego dla formantów podrzędnych w formancie złożonego, do której jest dołączona formantu karty."
  remarks: "Zastąp metodę RenderChildren, gdy jest to niezbędne wygenerować kod znaczników specyficznych dla obiektu docelowego dla formantu podrzędnego zbiór formantu złożonego, oprócz kod znaczników dla formantów podrzędnych poszczególnych."
  syntax:
    content: protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Na potrzeby danych wyjściowych specyficznych dla obiektu docelowego renderowania."
  overload: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  id: SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Zapisuje kontrolować informacje o stanie dla formantu karty."
  remarks: "Stan kontrolki jest informacje o stanie niezbędne potrzebne, nawet jeśli stan widoku jest wyłączone. Jeśli karta musi zachować informacje kontroli stanu, można zastąpić SaveAdapterControlState i <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>metody.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>       Karta może być konieczne przechowuje informacji o stanie kontroli, gdy są funkcje, które muszą mieć stan przechowywanych w wielu żądań, niezależnie od stanu skojarzonym formancie. Na przykład formantu złożonego składające się z dużych wyświetlania tekstową i grupy <xref:System.Web.UI.WebControls.RadioButton>formanty może spowodować, że jako pojedynczy w przeglądarkach, komputer stacjonarny.</xref:System.Web.UI.WebControls.RadioButton> W innych przeglądarkach mogą podzielić renderowania — jeden widok dla tekstową wyświetlania, a druga w grupie przycisków radiowych. Karta potrzebny do obsługi własnych informacji specyficznych dla obiektu docelowego o aktualnie aktywny widok.       Metoda SaveAdapterControlState jest wywoływana bezpośrednio po <xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName>Metoda `SaveState` etap cyklu życia.</xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName> Stan formantu karty jest oddzielne i oprócz stan formantu formantu."
  syntax:
    content: protected virtual object SaveAdapterControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający informacje o stanie formantu karty jako <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  id: SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Zapisuje Wyświetl informacje o stanie dla formantu karty."
  remarks: "Jeśli karta musi zachować informacje widok stanu, można zastąpić SaveAdapterViewState i <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>metody.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>       Karta musi zachować informacje o stanie widoku po dane, które muszą zostać zachowane żądań, niezależnie od stan widoku skojarzonego formantu. Na przykład formantu siatki w przeglądarkach, komputerów stacjonarnych może spowodować, że jako pojedynczego widoku wierszy i kolumn wartości. W innych przeglądarkach może ją podzielić renderowania do wielu oddzielnych widoków, takich jak lista wierszy i szczegółowe informacje o jeden wiersz. Karta potrzebny do przechowywania danych dla widoków, które nie są aktualnie aktywne w widoku stanu.       Metoda SaveAdapterViewState jest wywoływana bezpośrednio przed <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName>Metoda `SaveState` etap cyklu życia.</xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName> Karta stan widoku jest oddzielny oraz stan widoku formantu."
  syntax:
    content: protected virtual object SaveAdapterViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający informacje o stanie widoku karty jako <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter
  nameWithType: ControlAdapter.ControlAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender
  nameWithType: ControlAdapter.BeginRender
- uid: System.Web.UI.Adapters.ControlAdapter.Browser*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
- uid: System.Web.UI.Adapters.ControlAdapter.Control*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls
  nameWithType: ControlAdapter.CreateChildControls
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender
  nameWithType: ControlAdapter.EndRender
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState
  nameWithType: ControlAdapter.LoadAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState
  nameWithType: ControlAdapter.LoadAdapterViewState
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit
  nameWithType: ControlAdapter.OnInit
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad
  nameWithType: ControlAdapter.OnLoad
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender
  nameWithType: ControlAdapter.OnPreRender
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload
  nameWithType: ControlAdapter.OnUnload
- uid: System.Web.UI.Adapters.ControlAdapter.Page*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render
  nameWithType: ControlAdapter.Render
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren
  nameWithType: ControlAdapter.RenderChildren
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState
  nameWithType: ControlAdapter.SaveAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState
  nameWithType: ControlAdapter.SaveAdapterViewState
