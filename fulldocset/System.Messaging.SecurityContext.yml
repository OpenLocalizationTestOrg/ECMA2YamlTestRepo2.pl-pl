### YamlMime:ManagedReference
items:
- uid: System.Messaging.SecurityContext
  id: SecurityContext
  children:
  - System.Messaging.SecurityContext.Dispose
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Messaging.SecurityContext
  type: Class
  summary: "Reprezentuje kontekst zabezpieczeń dla wiadomości w kolejce."
  remarks: "Kontekst zabezpieczeń zawiera informacje buforowane zabezpieczeń, takie jak certyfikatu wewnętrznego, odpowiedni klucz prywatny, identyfikator SID użytkownika, potrzebne do dołączenia certyfikatu i identyfikator nadawcy wiadomości podczas żądania uwierzytelniania.       Jeśli klient, np. aplikację ASP.NET personifikuje użytkownika, aby wysłać wiadomość do kolejki, tożsamość użytkownika służy do dostępu do kolejki. Jeśli kolejka jest zdalny, te poświadczenia są buforowane i używane do wiadomości, które następnie są wysyłane do kolejki. W związku z tym identyfikator SID w kolejnych komunikatów, będzie buforowana tożsamość pierwszy użytkownik, który wysłał wiadomość do kolejki. Umożliwi to buforowana tożsamość pierwszy użytkownik, który wysłał wiadomość do kolejki kolejnych użytkowników.       Aby rozwiązać ten problem, należy ustawić przy użyciu kontekstu zabezpieczeń <xref:System.Messaging.Message.SecurityContext%2A>przed wysłaniem wiadomości do kolejki zdalnej, aby upewnić się, że poświadczenia bieżącego użytkownika są używane do uzyskania dostępu do kolejki.</xref:System.Messaging.Message.SecurityContext%2A> Jednak sugerowane najlepszym rozwiązaniem jest: 1.  Należy uwierzytelnieni kolejki kolejki.      2.  Uruchom aplikację ASP.NET jako tożsamość domeny i zezwolić tej aplikacji można zapisać do kolejki.      3.  Nie Personifikuj użytkownika, korzystając z kolejki. Zamiast tego Pobierz tożsamości obiektu wywołującego i przeprowadzić autoryzacji sprawdzanie w aplikacji ASP.NET lub zawierać tożsamości obiektu wywołującego jako część komunikatu i wykonaj sprawdzanie w aplikacji odbiornika autoryzacji."
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.SecurityContext.Dispose
  id: Dispose
  parent: System.Messaging.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.Messaging.SecurityContext&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.SecurityContext.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.SecurityContext.Dispose
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
- uid: System.Messaging.SecurityContext.Dispose*
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
