### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.NameValueCollection
  id: NameValueCollection
  children:
  - System.Collections.Specialized.NameValueCollection.#ctor
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  - System.Collections.Specialized.NameValueCollection.AllKeys
  - System.Collections.Specialized.NameValueCollection.Clear
  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.String)
  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - System.Collections.Specialized.NameValueCollection.HasKeys
  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Item(System.String)
  - System.Collections.Specialized.NameValueCollection.Remove(System.String)
  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  langs:
  - csharp
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
  type: Class
  summary: "Reprezentuje kolekcję skojarzone <xref:System.String>kluczy i <xref:System.String>wartości, które można uzyskać dostępu do klucza lub indeksu.</xref:System.String> </xref:System.String>"
  remarks: "Ta kolekcja jest oparta na <xref:System.Collections.Specialized.NameObjectCollectionBase>klasy.</xref:System.Collections.Specialized.NameObjectCollectionBase> Jednak w przeciwieństwie do <xref:System.Collections.Specialized.NameObjectCollectionBase>, ta klasa przechowuje wielu wartości ciągów w kluczu pojedynczego.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Ta klasa może służyć dla nagłówków, ciągów zapytania i dane formularza.       Każdy element jest para klucza i wartości.       Kolekcje tego typu nie zachowuj kolejność elementów, a konkretnego kolejność nie jest gwarantowana podczas wyliczania kolekcji.       Pojemność elementu NameValueCollection jest liczba elementów, które może przechowywać obiektu NameValueCollection. Gdy elementy są dodawane do elementu NameValueCollection, pojemność jest automatycznie zwiększana co jest wymagane przez; Ponowna alokacja.       Dostawca kodu skrótu zrezygnuje skrótu kluczy w kolekcji NameValueCollection. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       W .NET Framework w wersji 1.0 klasa ta używa porównywania ciągów z uwzględnieniem kultury. Jednak w .NET Framework w wersji 1.1 lub nowszej, ta klasa korzysta z <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>podczas porównywania ciągów.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Aby uzyskać więcej informacji na temat wpływ kultury porównań i sortowanie, zobacz [wykonywanie niezależnych od kultury operacje na ciągach](~/add/includes/ajax-current-ext-md.md).       `null`jest dozwolona jako klucz lub wartość.      > [!CAUTION] > <xref:System.Collections.Specialized.NameValueCollection.Get%2A>— Metoda nie rozróżnia `null` który jest zwracany, ponieważ nie odnaleziono określonego klucza i `null` który jest zwracany, ponieważ wartość skojarzoną z kluczem jest `null`.</xref:System.Collections.Specialized.NameValueCollection.Get%2A>"
  example:
  - >-
    [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/cpp/t-system.collections.spe_6_1.cpp)]
     [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_6_1.vb)]
     [!code-cs[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/csharp/t-system.collections.spe_6_1.cs)]
  syntax:
    content: 'public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.Specialized.NameObjectCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> klasy, która jest pusta, ma domyślne początkowa pojemność i korzysta z domyślnego dostawcę kodu bez uwzględniania wielkości liter wyznaczania wartości skrótu i domyślna funkcja porównująca bez uwzględniania wielkości liter."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest operacją O(1)."
  syntax:
    content: public NameValueCollection ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> klasy, która jest pusta, ma domyślne początkowa pojemność i używa określonego <xref:System.Collections.IEqualityComparer>obiektu.</xref:System.Collections.IEqualityComparer>"
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>obiekt jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       <xref:System.Collections.IEqualityComparer>Obiektu łączy modułu porównującego i dostawcy kodu wyznaczania wartości skrótu.</xref:System.Collections.IEqualityComparer>  Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu  Moduł porównujący Określa, czy dwa klucze są takie same.       Ten konstruktor jest operacją O(1)."
  syntax:
    content: public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IEqualityComparer>Obiekt ma być używany do określenia, czy dwa klucze są takie same i generowania skrótu kluczy w kolekcji.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(NameValueCollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje dane z określonego <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> na nowy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> z tej samej początkowej pojemności jako liczbę wpisów skopiowane i użycie takie same wyznaczania wartości skrótu dostawcy kodu i tego samego modułu porównującego jako kolekcji źródłowej."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Elementy nowego <xref:System.Collections.Specialized.NameValueCollection>są sortowane w takiej samej kolejności jak źródło <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection>       Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `col`."
  syntax:
    content: public NameValueCollection (System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> Można skopiować do nowego <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> wystąpienia."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>col</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> klasy, która jest pusta, ma określony początkowa pojemność i korzysta z domyślnego dostawcę kodu bez uwzględniania wielkości liter wyznaczania wartości skrótu i domyślna funkcja porównująca bez uwzględniania wielkości liter."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`."
  syntax:
    content: public NameValueCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Początkowa liczba wpisów który <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> może zawierać."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> klasy, która jest pusta, ma domyślne początkowa pojemność i używa dostawcy kodu określonego wyznaczania wartości skrótu i określona funkcja porównująca."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest operacją O(1)."
  syntax:
    content: public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "<xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> Który będzie dostarczać skrótu dla wszystkich kluczy w <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>Do użycia w celu ustalenia, czy dwa klucze są takie same.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> klasy, która jest pusta, ma określony początkowa pojemność i używa określonego <xref:System.Collections.IEqualityComparer>obiektu.</xref:System.Collections.IEqualityComparer>"
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>obiekt jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       <xref:System.Collections.IEqualityComparer>Obiektu łączy modułu porównującego i dostawcy kodu wyznaczania wartości skrótu.</xref:System.Collections.IEqualityComparer>  Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu  Moduł porównujący Określa, czy dwa klucze są takie same.       Ten konstruktor jest O (`n`) operację, której `n` jest `capacity` parametru."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Początkowa liczba wpisów który <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> obiekt może zawierać."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IEqualityComparer>Obiekt ma być używany do określenia, czy dwa klucze są takie same i generowania skrótu kluczy w kolekcji.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje dane z określonego <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> na nowy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> o określonej pojemności początkowej lub tego samego początkowego pojemność liczbę wpisów skopiowane, w zależności od jest większa i przy użyciu domyślnego dostawcę kodu bez uwzględniania wielkości liter wyznaczania wartości skrótu i domyślna funkcja porównująca bez uwzględniania wielkości liter."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`.  Jeśli liczba elementów w `col` jest większa niż `capacity`, ten konstruktor staje się O (`n` + `m`) operację, której `n` jest `capacity` i `m` jest liczba elementów w `col`."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Początkowa liczba wpisów który <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> może zawierać."
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> Można skopiować do nowego <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> wystąpienia."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>col</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(SerializationInfo,StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> klasy, który jest możliwy do serializacji i używa określonego <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> i &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;."
  remarks: "Ten konstruktor jest operacją O(1)."
  syntax:
    content: protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> obiekt, który zawiera informacje wymagane do serializacji nowej <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> wystąpienia."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; obiekt, który zawiera źródłowego i docelowego serializowanym strumieniu skojarzone z nowym <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> wystąpienia."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> klasy, która jest pusta, ma określony początkowa pojemność i używa dostawcy kodu określonego wyznaczania wartości skrótu i określona funkcja porównująca."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameValueCollection>jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection>może pomieścić.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>       Kody skrótów kluczy w <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> zrezygnuje dostawcy kodu wyznaczania wartości skrótu Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Początkowa liczba wpisów który <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> może zawierać."
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "<xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> Który będzie dostarczać skrótu dla wszystkich kluczy w <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>Do użycia w celu ustalenia, czy dwa klucze są takie same.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  id: Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.Add(NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje wpisy w określonym <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> do bieżącego <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Jeśli klucz w `c` już istnieje w miejscu docelowym <xref:System.Collections.Specialized.NameValueCollection>wystąpienie skojarzona wartość w `c` jest dodawany do istniejącej listy rozdzielanej przecinkami wartości skojarzone z tym samym kluczem, w celu <xref:System.Collections.Specialized.NameValueCollection>wystąpienia.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection>       Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>jest już równa pojemności pojemność <xref:System.Collections.Specialized.NameValueCollection>zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>jest mniejsza niż pojemność, ta metoda jest operacją O(1).</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public void Add (System.Collections.Specialized.NameValueCollection c);
    parameters:
    - id: c
      type: System.Collections.Specialized.NameValueCollection
      description: "<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> Można skopiować do bieżącego <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>c</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: NameValueCollection.Add(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Add(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Dodaje wpis o określonej nazwie i wartości do <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Jeśli określony klucz już istnieje w miejscu docelowym <xref:System.Collections.Specialized.NameValueCollection>wystąpienia, określona wartość jest dodawana do istniejącej listy rozdzielanej przecinkami wartości w formularzu `&quot;value1,value2,value3&quot;`.</xref:System.Collections.Specialized.NameValueCollection> Wartości są skojarzone z tym samym kluczem, w celu <xref:System.Collections.Specialized.NameValueCollection>wystąpienia.</xref:System.Collections.Specialized.NameValueCollection>       Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>jest już równa pojemności pojemność <xref:System.Collections.Specialized.NameValueCollection>zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>jest mniejsza niż pojemność, ta metoda jest operacją O(1).</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void Add (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucz wpisu do dodania.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.String
      description: "<xref:System.String>Wartość wpisu do dodania.</xref:System.String> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  id: AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wszystkie klucze w <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Jeśli kolekcja jest pusta, ta metoda zwraca pustą <xref:System.String>tablicy nie `null`.</xref:System.String>       Tablice zwrócony przez AllKeys są buforowane w celu poprawy wydajności i są automatycznie odświeżane po dokonaniu zmiany w kolekcji. Klasa pochodna może unieważnić wersja buforowana przez wywołanie metody <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, a tym samym wymuszania tablic do odtworzenia.</xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual string[] AllKeys { get; }
    return:
      type: System.String[]
      description: "A <xref:System.String>Tablica, która zawiera wszystkie klucze <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.AllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Unieważnia tablice pamięci podręcznej i usuwa wszystkie wpisy z <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Ta metoda jest operacją O(1)."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: NameValueCollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje całą <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> do jednowymiarowego zgodnego <xref:System.Array>, rozpoczynając od określonego indeksu tablicy docelowej.</xref:System.Array>"
  remarks: "Określona tablica musi być zgodne z typem.       Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=fullName>można skopiować elementów.</xref:System.Array.Copy%2A?displayProperty=fullName>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: "Jednowymiarowa <xref:System.Array>który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `dest` od rozpoczyna się kopiowanie które."
  overload: System.Collections.Specialized.NameValueCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dest</code>jest wielowymiarowy.       - lub - liczba elementów w źródle <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> jest większa niż dostępne miejsce od <code>index</code> do końca tablicy docelowej <code>dest</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ źródła <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> nie można automatycznie rzutować na typ docelowy <code> dest </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  id: Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Get(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartości w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> połączone w jedną listę rozdzielaną przecinkami."
  remarks: "Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości w określonym indeksie."
  syntax:
    content: public virtual string Get (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks wpis zawierający wartości do pobrania z kolekcji."
    return:
      type: System.String
      description: "A <xref:System.String>zawierający rozdzielaną przecinkami listę wartości w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  id: Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: System.Collections.Specialized.NameValueCollection.Get(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartości skojarzone z określonym kluczem z <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> połączone w jedną listę rozdzielaną przecinkami."
  remarks: "> [!CAUTION]> Ta metoda zwraca `null` w następujących przypadkach: 1) Jeśli określony klucz nie zostanie odnaleziony; i 2) Jeśli określony klucz zostanie znaleziony i jej powiązaną wartość jest `null`. Ta metoda nie rozróżnia dwóch przypadków.       Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości skojarzone z określonym kluczem."
  syntax:
    content: public virtual string Get (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucza wpisu, który zawiera wartości do pobrania.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A <xref:System.String>zawiera rozdzielaną przecinkami listę wartości skojarzone z określonym kluczem z <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  id: GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera klucz w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Ta metoda jest operacją O(1)."
  syntax:
    content: public virtual string GetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks klucz do uzyskania z kolekcji."
    return:
      type: System.String
      description: "A <xref:System.String>zawierający klucz w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  id: GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartości w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości w określonym indeksie."
  syntax:
    content: public virtual string[] GetValues (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks wpis zawierający wartości do pobrania z kolekcji."
    return:
      type: System.String[]
      description: "A <xref:System.String>Tablica, która zawiera wartości w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartości skojarzone z określonym kluczem z <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "> [!CAUTION]> Ta metoda zwraca `null` w następujących przypadkach: 1) Jeśli określony klucz nie zostanie odnaleziony; i 2) Jeśli określony klucz zostanie znaleziony i jej powiązaną wartość jest `null`. Ta metoda nie rozróżnia dwóch przypadków.       Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości skojarzone z określonym kluczem."
  syntax:
    content: public virtual string[] GetValues (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucza wpisu, który zawiera wartości do pobrania.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String[]
      description: "A <xref:System.String>tablicy, która zawiera wartości skojarzone z określonym kluczem z <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  id: HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> zawiera klucze, które nie są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Ta metoda jest operacją O(1)."
  syntax:
    content: public bool HasKeys ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> zawiera klucze, które nie są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.HasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  id: InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Resetuje buforowane tablic kolekcji do <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Tablice zwrócony przez <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A>są buforowane w celu poprawy wydajności i są automatycznie odświeżane po dokonaniu zmiany w kolekcji.</xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> Klasy pochodne mogą nie spełniać wersja buforowana przez wywołanie metody InvalidateCachedArrays, w tym samym wymuszania tablic do odtworzenia.       Ta metoda jest operacją O(1)."
  syntax:
    content: protected void InvalidateCachedArrays ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera zapis w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.       Nie można ustawić tej właściwości. Aby ustawić wartość od określonego indeksu, należy użyć `Item[GetKey(index)]`.       W języku C# używa słowa kluczowego do definiowania indeksatory zamiast Implementowanie właściwości elementu. Visual Basic implementuje element jako domyślna właściwość, która zapewnia te same funkcje indeksowania.       Pobieranie wartości w określonym indeksie jest O (`n`) operację, której `n` jest to liczba wartości."
  syntax:
    content: public string this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks wpisu do zlokalizowania w kolekcji."
    return:
      type: System.String
      description: "A <xref:System.String>zawierający rozdzielaną przecinkami listę wartości w określonym indeksie kolekcji.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: System.Collections.Specialized.NameValueCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera lub ustawia wpis z określonym kluczem w <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[name]`.       Jeśli określony klucz już istnieje w kolekcji, ustawienie dla tej właściwości spowoduje zastąpienie istniejącej listy wartości z określoną wartością. Aby dołączyć nową wartość do istniejącej listy wartości, należy użyć <xref:System.Collections.Specialized.NameValueCollection.Add%2A>metody.</xref:System.Collections.Specialized.NameValueCollection.Add%2A>       Jeśli określony klucz nie istnieje w kolekcji, ustawienie dla tej właściwości tworzy nowy wpis przy użyciu określonego klucza i określoną wartość.      > [!CAUTION] > Ta właściwość zwraca `null` w następujących przypadkach: 1) Jeśli określony klucz nie zostanie odnaleziony; i 2) Jeśli określony klucz zostanie znaleziony i jej powiązaną wartość jest `null`. Ta właściwość nie rozróżnia dwóch przypadków.       W języku C# używa słowa kluczowego do definiowania indeksatory zamiast Implementowanie właściwości elementu. Visual Basic implementuje element jako domyślna właściwość, która zapewnia te same funkcje indeksowania.       Podczas pobierania lub ustawiania wartości skojarzone z określonym kluczem jest O (`n`) operację, której `n` jest to liczba wartości."
  syntax:
    content: public string this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucza wpisu do zlokalizowania.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A <xref:System.String>zawierający rozdzielaną przecinkami listę wartości skojarzone z określonym kluczem, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu i operacji próbuje zmodyfikować kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: System.Collections.Specialized.NameValueCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa wpisy z określonym kluczem z <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Jeśli <xref:System.Collections.Specialized.NameValueCollection>nie zawiera element z określonym kluczem <xref:System.Collections.Specialized.NameValueCollection>pozostaje niezmieniona.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> Nie wyjątek.       W kolekcji sąsiadujących elementów, takich jak listy elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucza wpisu do usunięcia.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Set(String,String)
  nameWithType: NameValueCollection.Set(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Set(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ustawia wartość wpisu w <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>."
  remarks: "Jeśli określony klucz już istnieje w kolekcji, ta metoda zastępuje istniejące listy wartości z określoną wartością. Aby dołączyć nową wartość do istniejącej listy wartości, należy użyć <xref:System.Collections.Specialized.NameValueCollection.Add%2A>metody.</xref:System.Collections.Specialized.NameValueCollection.Add%2A>       Jeśli określony klucz nie istnieje w kolekcji, ta metoda tworzy nowy wpis przy użyciu określonego klucza i określoną wartość.       Ta metoda jest operacją O(1)."
  syntax:
    content: public virtual void Set (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Wpisu, aby dodać nową wartość do klucza.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.String
      description: "<xref:System.Object>Reprezentujący nową wartość do dodania do określonego wpisu.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameValueCollection.Set*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
references:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.Specialized.NameObjectCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(SerializationInfo,StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.Add(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: NameValueCollection.Add(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameValueCollection.Clear
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: NameValueCollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Get(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: System.Collections.Specialized.NameValueCollection.Get(String)
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(String)
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Item(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: System.Collections.Specialized.NameValueCollection.Item(String)
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: System.Collections.Specialized.NameValueCollection.Remove(String)
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set(String,String)
  nameWithType: NameValueCollection.Set(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Set(String,String)
- uid: System.Collections.Specialized.NameValueCollection.#ctor*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection.NameValueCollection
- uid: System.Collections.Specialized.NameValueCollection.Add*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add
  nameWithType: NameValueCollection.Add
- uid: System.Collections.Specialized.NameValueCollection.AllKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
- uid: System.Collections.Specialized.NameValueCollection.Clear*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear
  nameWithType: NameValueCollection.Clear
- uid: System.Collections.Specialized.NameValueCollection.CopyTo*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: NameValueCollection.CopyTo
- uid: System.Collections.Specialized.NameValueCollection.Get*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get
  nameWithType: NameValueCollection.Get
- uid: System.Collections.Specialized.NameValueCollection.GetKey*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey
  nameWithType: NameValueCollection.GetKey
- uid: System.Collections.Specialized.NameValueCollection.GetValues*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues
  nameWithType: NameValueCollection.GetValues
- uid: System.Collections.Specialized.NameValueCollection.HasKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys
  nameWithType: NameValueCollection.HasKeys
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays
  nameWithType: NameValueCollection.InvalidateCachedArrays
- uid: System.Collections.Specialized.NameValueCollection.Item*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item
  nameWithType: NameValueCollection.Item
- uid: System.Collections.Specialized.NameValueCollection.Remove*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove
  nameWithType: NameValueCollection.Remove
- uid: System.Collections.Specialized.NameValueCollection.Set*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set
  nameWithType: NameValueCollection.Set
