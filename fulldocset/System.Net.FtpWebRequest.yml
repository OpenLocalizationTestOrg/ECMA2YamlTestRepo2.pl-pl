### YamlMime:ManagedReference
items:
- uid: System.Net.FtpWebRequest
  id: FtpWebRequest
  children:
  - System.Net.FtpWebRequest.Abort
  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.ClientCertificates
  - System.Net.FtpWebRequest.ConnectionGroupName
  - System.Net.FtpWebRequest.ContentLength
  - System.Net.FtpWebRequest.ContentOffset
  - System.Net.FtpWebRequest.ContentType
  - System.Net.FtpWebRequest.Credentials
  - System.Net.FtpWebRequest.DefaultCachePolicy
  - System.Net.FtpWebRequest.EnableSsl
  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FtpWebRequest.GetRequestStream
  - System.Net.FtpWebRequest.GetResponse
  - System.Net.FtpWebRequest.Headers
  - System.Net.FtpWebRequest.KeepAlive
  - System.Net.FtpWebRequest.Method
  - System.Net.FtpWebRequest.PreAuthenticate
  - System.Net.FtpWebRequest.Proxy
  - System.Net.FtpWebRequest.ReadWriteTimeout
  - System.Net.FtpWebRequest.RenameTo
  - System.Net.FtpWebRequest.RequestUri
  - System.Net.FtpWebRequest.ServicePoint
  - System.Net.FtpWebRequest.Timeout
  - System.Net.FtpWebRequest.UseBinary
  - System.Net.FtpWebRequest.UseDefaultCredentials
  - System.Net.FtpWebRequest.UsePassive
  langs:
  - csharp
  name: FtpWebRequest
  nameWithType: FtpWebRequest
  fullName: System.Net.FtpWebRequest
  type: Class
  summary: "Implementuje klienta protokołu transferu plików (FTP)."
  remarks: "Aby uzyskać wystąpienia FtpWebRequest, użyj <xref:System.Net.WebRequest.Create%2A>metody.</xref:System.Net.WebRequest.Create%2A> Można również użyć <xref:System.Net.WebClient>klasy przekazywania i pobierania informacji z serwera FTP.</xref:System.Net.WebClient> Przy użyciu jednej z tych metod, po określeniu zasobu sieciowego, który wykorzystuje schemat FTP (na przykład `&quot;ftp://contoso.com&quot;`) klasy FtpWebRequest zapewnia możliwość programowo interakcji z serwerami FTP.       Identyfikator URI może być względna lub bezwzględna. Jeśli identyfikator URI ma postać `&quot;ftp://contoso.com/%2fpath&quot;` (%&2;f jest zmienionym znaczeniu &quot;/&quot;), następnie jest bezwzględny identyfikator URI i bieżący katalog jest `/path`. Jeśli identyfikator URI jest jednak formularza `&quot;ftp://contoso.com/path&quot;`, najpierw .NET Framework loguje się do serwera FTP (przy użyciu nazwy użytkownika i hasło ustawione przez <xref:System.Net.FtpWebRequest.Credentials%2A>Właściwości), bieżący katalog przybiera wartość `<UserLoginDirectory>/path`.</xref:System.Net.FtpWebRequest.Credentials%2A>       Musi mieć prawidłową nazwę użytkownika i hasło dla serwera lub serwer musi zezwalać na logowanie anonimowe. Możesz określić poświadczenia używane do łączenia się z serwerem przez ustawienie <xref:System.Net.FtpWebRequest.Credentials%2A>Właściwości lub można je uwzględnić w <xref:System.Uri.UserInfo%2A>część identyfikatora URI przekazane do <xref:System.Net.WebRequest.Create%2A>metody.</xref:System.Net.WebRequest.Create%2A> </xref:System.Uri.UserInfo%2A> </xref:System.Net.FtpWebRequest.Credentials%2A> Jeśli dołączysz <xref:System.Uri.UserInfo%2A>informacji w identyfikatorze URI, <xref:System.Net.FtpWebRequest.Credentials%2A>właściwość jest ustawiona na nowe poświadczenie sieci z informacjami o nazwę i hasło określonego użytkownika.</xref:System.Net.FtpWebRequest.Credentials%2A> </xref:System.Uri.UserInfo%2A>      > [!CAUTION] > Chyba że <xref:System.Net.FtpWebRequest.EnableSsl%2A>właściwość jest `true`, wszystkie dane i poleceń, w tym nazwę i hasło, informacje o użytkowniku, są wysyłane do serwera w postaci zwykłego tekstu.</xref:System.Net.FtpWebRequest.EnableSsl%2A> Każda osoba, która monitorowanie ruchu w sieci można wyświetlać swoje poświadczenia i ich używać do łączenia się z serwerem. Jeśli łączysz się z serwerem FTP, który wymaga poświadczeń i obsługuje Secure Sockets Layer (SSL), należy ustawić <xref:System.Net.FtpWebRequest.EnableSsl%2A>do `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Musi mieć <xref:System.Net.WebPermission>dostępu do zasobu FTP; w przeciwnym razie <xref:System.Security.SecurityException>wyjątku.</xref:System.Security.SecurityException> </xref:System.Net.WebPermission>       Określ polecenie FTP do wysyłania do serwera przez ustawienie <xref:System.Net.FtpWebRequest.Method%2A>Właściwości na wartość zdefiniowana w <xref:System.Net.WebRequestMethods.Ftp>struktury.</xref:System.Net.WebRequestMethods.Ftp> </xref:System.Net.FtpWebRequest.Method%2A> Aby przesyłać dane tekstowe, zmień <xref:System.Net.FtpWebRequest.UseBinary%2A>Właściwości ze swojej wartości domyślnej (`true`) do `false`.</xref:System.Net.FtpWebRequest.UseBinary%2A> Ograniczenia i uzyskać szczegółowe informacje zobacz <xref:System.Net.FtpWebRequest.Method%2A>.</xref:System.Net.FtpWebRequest.Method%2A>       Korzystając z obiektu FtpWebRequest do przekazania pliku do serwera, należy napisać zawartość pliku do strumienia żądania można uzyskać przez wywołanie <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metody lub jego odpowiedników asynchroniczne, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>i <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>metody.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A> Musisz zapisać do strumienia i zamykać strumień przed wysłaniem żądania.       Żądania wysyłane do serwera przez wywołanie metody <xref:System.Net.FtpWebRequest.GetResponse%2A>metody lub jego odpowiedników asynchroniczne, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>i <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metody.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Po zakończeniu wykonywania żądanej operacji <xref:System.Net.FtpWebResponse>obiekt jest zwracany.</xref:System.Net.FtpWebResponse> <xref:System.Net.FtpWebResponse>Obiektu zawiera informacje o stanie operacji oraz wszystkie dane pobrane z serwera.</xref:System.Net.FtpWebResponse>       Można ustawić wartość limitu czasu dla odczytu lub zapisu do serwera przy użyciu <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>Właściwości.</xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Po przekroczeniu limitu czasu wywołania metody zgłasza <xref:System.Net.WebException>z <xref:System.Net.WebExceptionStatus>ustawioną <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Podczas pobierania pliku z serwera FTP, jeśli polecenie zostało zakończone pomyślnie, zawartość żądany plik jest dostępna w strumieniu obiekt odpowiedzi. Dostęp do tego strumienia przez wywołanie metody <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metody.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> Aby uzyskać więcej informacji zobacz <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse>       Jeśli <xref:System.Net.FtpWebRequest.Proxy%2A>właściwość jest ustawiona, albo bezpośrednio lub w pliku konfiguracji komunikacji z serwerem FTP są nawiązywane przy użyciu określonego serwera proxy.</xref:System.Net.FtpWebRequest.Proxy%2A> Jeśli serwer proxy określony jest serwer proxy HTTP tylko <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, i <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>polecenia są obsługiwane.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Tylko zawartość binarną pobierane są buforowane; oznacza to, że zawartość odbierane przy użyciu <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>z <xref:System.Net.FtpWebRequest.UseBinary%2A>ustawioną właściwość `true`.</xref:System.Net.FtpWebRequest.UseBinary%2A> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Wiele FtpWebRequests ponowne użycie istniejących połączeń, jeśli to możliwe.       Aby uzyskać więcej informacji na temat protokołu FTP, zobacz RFC 959, &quot;File Transfer Protocol&quot; dostępne pod adresem [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."
  example:
  - "The following code example demonstrates deleting a file from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_1.cs)]  \n  \n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \n  \n [!code-cpp[NCLFtpClient#5](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_2.cpp)]\n [!code-cs[NCLFtpClient#5](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_2.cs)]  \n  \n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \n  \n [!code-cs[NCLFtpAsync#1](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_3.cs)]\n [!code-cpp[NCLFtpAsync#1](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_3.cpp)]"
  syntax:
    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'
  inheritance:
  - System.Net.WebRequest
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Abort
  id: Abort
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Kończy operację asynchroniczną FTP."
  remarks: "Jeśli nie żadna operacja w toku, ta metoda nie działa. Jeśli transfer plików jest w toku, ta metoda kończy transferu.      > [!NOTE] > Ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \n  \n [!code-cpp[NCLFtpClient#10](~/add/codesnippet/cpp/m-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#10](~/add/codesnippet/csharp/m-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FtpWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rozpoczyna asynchronicznie otwierania strumień zawartości żądań zapisu."
  remarks: "Wykonaj operację asynchroniczną, wywołując <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>metody.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Zazwyczaj <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>jest wywoływana przez metodę odwołuje się `callback`.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Aby określić stan operacji, sprawdź właściwości w <xref:System.IAsyncResult>obiektu zwróconego przez tę metodę.</xref:System.IAsyncResult>       Ta metoda nie są blokowane podczas oczekiwania na strumienia. Aby zablokować, należy wywołać <xref:System.Net.FtpWebRequest.GetRequestStream%2A>zamiast tej metody.</xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#4](~/add/codesnippet/csharp/7dded3fc-ce2a-466f-b201-_1.cs)]\n [!code-cpp[NCLFtpAsync#4](~/add/codesnippet/cpp/7dded3fc-ce2a-466f-b201-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do `callback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Wystąpienia, które wskazuje stan operacji.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Poprzednie wywołanie tej metody lub <xref:System.Net.FtpWebRequest.GetRequestStream*>nie zostało jeszcze zakończone.</xref:System.Net.FtpWebRequest.GetRequestStream*>"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Nie można nawiązać połączenia z serwerem FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "<xref:System.Net.FtpWebRequest.Method*>Nie ustawiono właściwości do <xref:System.Net.WebRequestMethods.Ftp.UploadFile>.</xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rozpoczyna wysyłanie żądania i asynchronicznie odbierania odpowiedzi z serwera FTP."
  remarks: "Wykonaj operację asynchroniczną, wywołując <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metody.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Zazwyczaj <xref:System.Net.FtpWebRequest.EndGetResponse%2A>jest wywoływana przez metodę odwołuje się `callback`.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Aby określić stan operacji, sprawdź właściwości w <xref:System.IAsyncResult>obiektu zwróconego przez metodę BeginGetResponse w czasie.</xref:System.IAsyncResult>       Jeśli <xref:System.Net.FtpWebRequest.Proxy%2A>właściwość jest ustawiona, albo bezpośrednio lub w pliku konfiguracji komunikacji z serwerem FTP są nawiązywane przy użyciu określonego serwera proxy.</xref:System.Net.FtpWebRequest.Proxy%2A>       BeginGetResponse w czasie nie są blokowane podczas oczekiwania na odpowiedź z serwera. Aby zablokować, należy wywołać <xref:System.Net.FtpWebRequest.GetResponse%2A>metody zamiast BeginGetResponse w czasie.</xref:System.Net.FtpWebRequest.GetResponse%2A>       Aby uzyskać więcej informacji o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/add/includes/ajax-current-ext-md.md).       Ten element członkowski generuje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Jeśli <xref:System.Net.WebException>jest zgłoszone, użyj <xref:System.Net.WebException.Response%2A>i <xref:System.Net.WebException.Status%2A>Właściwości wyjątku, aby określić odpowiedzi z serwera.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_0_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_0_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do `callback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Wystąpienia, które wskazuje stan operacji.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.GetResponse*>lub BeginGetResponse w czasie została już wywołana dla tego wystąpienia.</xref:System.Net.FtpWebRequest.GetResponse*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ClientCertificates
  id: ClientCertificates
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia certyfikaty używane do nawiązywania zaszyfrowanego połączenia z serwerem FTP."
  remarks: "Certyfikaty klienta są używane do uwierzytelniania klienta podczas początkowego negocjowania połączenia SSL. Aby uzyskać więcej informacji zobacz <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</xref:System.Net.FtpWebRequest.EnableSsl%2A>      > [!NOTE] >.NET Framework buforuje sesji SSL, tworzonych i podejmie próbę ponownego użycia pamięci podręcznej sesji dla nowego żądania, jeśli to możliwe. Podczas próby ponownego użycia sesji SSL, .NET Framework używa pierwszego elementu obiektu <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(jeśli istnieje), lub spróbuje ponownie użyć sesji anonimowe, jeśli <xref:System.Net.HttpWebRequest.ClientCertificates%2A>jest pusta.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> Obiekt, który zawiera certyfikaty klienta."
  overload: System.Net.FtpWebRequest.ClientCertificates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość określona dla operacji set jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia nazwę grupy połączeń, która zawiera punkt usługi używane do wysyłania bieżącego żądania."
  remarks: "Grupy połączeń skojarzyć zbiór żądań z danego połączenia lub zestawu połączeń. Połączenia w grupie połączenia mogą być ponownie używane tylko przez żądań pochodzących z tej samej domenie aplikacji, gdy poświadczenia na żądanie są takie same i żądania określa nazwę grupy połączeń. Gdy żądanie nie określa nazwę grupy, można każde istniejące połączenie z żądanego serwera, który nie jest skojarzony z grupą połączenia. Jeśli poświadczenia nie są takie same, istniejące połączenie zostanie zamknięte, a nowe żądanie musi zostać ponownie uwierzytelnić.       Przy użyciu grup połączeń może zwiększyć wydajność, ponieważ dzięki temu wszystkie żądania dla użytkownika do ponownego użycia połączenia uwierzytelniony przy użyciu poświadczeń użytkownika.       Zmiana właściwości ConnectionGroupName po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_8_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_8_1.cs)]"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>wartości, która zawiera nazwę grupy połączeń.</xref:System.String>"
  overload: System.Net.FtpWebRequest.ConnectionGroupName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia wartość, która jest ignorowana przez <xref href=&quot;System.Net.FtpWebRequest&quot;> </xref> klasy."
  remarks: "Właściwość ContentLength jest udostępniany tylko dla zgodności z innych implementacji <xref:System.Net.WebRequest>i <xref:System.Net.WebResponse>klasy.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Nie istnieje przyczyna do użycia ContentLength."
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>Wartość, którą należy ją ignorować.</xref:System.Int64>"
  overload: System.Net.FtpWebRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentOffset
  id: ContentOffset
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia Przesunięcie bajtów do pliku pobieranych przez to żądanie."
  remarks: "Ustaw właściwość ContentOffset podczas pobierania pliku z serwera FTP. To przesunięcie wskazuje położenie w pliku serwera, który oznacza początek danych do pobrania. Przesunięcie jest określony jako liczba bajtów na początku pliku. przesunięcie pierwszego bajtu wynosi zero.       Ustawienie przyczyny ContentOffset <xref:System.Net.FtpWebRequest>do wysyłania ponownego uruchomienia (`REST`) polecenia na serwerze.</xref:System.Net.FtpWebRequest> To polecenie jest ignorowane przez większość implementacje serwer FTP podczas przekazywania danych do serwera.       Zmiana ContentOffset po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \n  \n [!code-cpp[NclFtpClient#7](~/add/codesnippet/cpp/p-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NclFtpClient#7](~/add/codesnippet/csharp/p-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public long ContentOffset { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>Wystąpienia, która określa przesunięcie w pliku w bajtach.</xref:System.Int64> Wartość domyślna wynosi zero."
  overload: System.Net.FtpWebRequest.ContentOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określona dla tej właściwości jest mniejsza od zera."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentType
  id: ContentType
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Zawsze zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Właściwość ContentType jest dostępne tylko w celu zgodności z innych implementacji <xref:System.Net.WebRequest>i <xref:System.Net.WebResponse>klasy.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Nie istnieje przyczyna do użycia ContentType."
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "Zawsze zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.ContentType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Informacje o typie zawartości nie jest obsługiwana w przypadku usługi FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Credentials
  id: Credentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia poświadczenia używane do komunikacji z serwerem FTP."
  remarks: "Nie należy określić poświadczenia podczas nawiązywania połączenia przy użyciu anonimowego logowania. Należy ustawić właściwość poświadczeń przy użyciu poświadczeń typu <xref:System.Net.NetworkCredential>; dzięki temu, nazwę użytkownika i hasło może być do odczytu i wysłane do serwera.</xref:System.Net.NetworkCredential>      > [!CAUTION] > Informacje poświadczenia nie są szyfrowane podczas przesyłania do serwera, chyba że <xref:System.Net.FtpWebRequest.EnableSsl%2A>ma ustawioną właściwość `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Zmiana poświadczeń po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property and uses it to display the user name.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_6_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_6_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>Wystąpienia; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli właściwość nie została ustawiona.</xref:System.Net.ICredentials>"
  overload: System.Net.FtpWebRequest.Credentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość określona dla operacji set jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Net.ICredentials>Typu innego niż <xref:System.Net.NetworkCredential>został określony dla operacji set.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  id: DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Określa domyślne zasady pamięci podręcznej dla wszystkich żądań FTP."
  remarks: "Tylko zawartość odbierane przy użyciu <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>polecenia są buforowane.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       W poniższej tabeli opisano efekty buforowania zasad na <xref:System.Net.FtpWebRequest>.</xref:System.Net.FtpWebRequest> FTP      | Zasady | Efekt |   |------------|------------|   | <xref:System.Net.Cache.RequestCacheLevel>| Zwraca buforowane zasobu, jeśli zasób jest nowa, długość zawartości jest dokładna i wygaśnięcia, modyfikowanie i atrybuty długość zawartości znajdują się. |   | <xref:System.Net.Cache.RequestCacheLevel>| Zwraca zasobu z serwera. |   | <xref:System.Net.Cache.RequestCacheLevel>| Zwraca buforowane zasobu, jeśli długość zawartości jest obecny i dopasowuje rozmiar wpisu; w przeciwnym razie zwraca <xref:System.Net.WebException>. |   | <xref:System.Net.Cache.RequestCacheLevel>| Zwraca buforowane zasobów, jeśli zostanie podana długość zawartości dopasowuje rozmiar wpisu; w przeciwnym razie zasób jest pobierane z serwera i jest zwracany do obiektu wywołującego. |   | <xref:System.Net.Cache.RequestCacheLevel>| Zwraca buforowane zasobu, jeśli sygnatury czasowej buforowanych zasobów jest taka sama jak sygnaturę czasową zasobu na serwerze; w przeciwnym razie zasób jest pobrane z serwera, przechowywane w pamięci podręcznej i zwracany do obiektu wywołującego. |   | <xref:System.Net.Cache.RequestCacheLevel>| Pobiera zasób z serwera, jest on przechowywany w pamięci podręcznej i zwraca zasobu do obiektu wywołującego. |   | <xref:System.Net.Cache.RequestCacheLevel>| Jeśli istnieje zasób pamięci podręcznej, jest usuwany.</xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.WebException> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> Zasób jest pobierane z serwera i jest zwracany do obiektu wywołującego. |      > [!NOTE] > DefaultCachePolicy ustawienie przesłania wszelkie ustawienia konfiguracji."
  syntax:
    content: public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "A <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> definiuje zasady dla żądań FTP w pamięci podręcznej."
  overload: System.Net.FtpWebRequest.DefaultCachePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Obiekt wywołujący próbował ustawić tę właściwość na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EnableSsl
  id: EnableSsl
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia <xref:System.Boolean>Określa, czy można użyć połączenia SSL.</xref:System.Boolean>"
  remarks: "> [!CAUTION]> Chyba że właściwość EnableSsl jest `true`, wszystkie dane i poleceń, w tym nazwę i hasło, informacje o użytkowniku, są wysyłane do serwera w postaci zwykłego tekstu. Każda osoba, która monitorowanie ruchu w sieci można wyświetlać swoje poświadczenia i ich używać do łączenia się z serwerem. Jeśli łączysz się z serwerem FTP, który wymaga poświadczeń i obsługuje protokół SSL, należy ustawić EnableSsl `true`.       `&quot;AUTH TLS&quot;` Polecenia są wysyłane do serwera żądanie sesji zaszyfrowanej. Jeśli serwer nie rozpoznaje tego polecenia, zostanie wyświetlony <xref:System.Net.WebException>wyjątek.</xref:System.Net.WebException>"
  example:
  - "The following code example uses an encrypted connection to download the directory listing from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#8](~/add/codesnippet/cpp/p-system.net.ftpwebreque_11_1.cpp)]\n [!code-cs[NCLFtpClient#8](~/add/codesnippet/csharp/p-system.net.ftpwebreque_11_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli są zaszyfrowane transmisji danych i kontroli; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.EnableSsl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nawiązano już połączenie z serwerem FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Istnieje oczekująca operacja asynchroniczna wprowadzenie <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>.</xref:System.Net.FtpWebRequest.BeginGetRequestStream*> kończy się"
  remarks: "Jeśli działanie nie zostało ukończone, bloki metody EndGetRequestStream przed zakończeniem operacji. Aby ustalić, czy działanie zostało zakończone, sprawdź <xref:System.IAsyncResult.IsCompleted%2A>Właściwość przed wywołaniem EndGetRequestStream.</xref:System.IAsyncResult.IsCompleted%2A>       Oprócz wyjątków w &quot;Wyjątki&quot; EndGetRequestStream ponownie zgłasza wyjątki, które zostały zgłoszone podczas otwierania strumienia do zapisu.      > [!NOTE] > Ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_1_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_1_1.cpp)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt, który został zwrócony podczas uruchamiania operacji.</xref:System.IAsyncResult>"
    return:
      type: System.IO.Stream
      description: "Z możliwością zapisu <xref:System.IO.Stream>wystąpienie skojarzone z tym wystąpieniem.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie uzyskano przez wywołanie metody <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ta metoda już wywołano dla operacji identyfikowanych <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Istnieje oczekująca operacja asynchroniczna wprowadzenie <xref:System.Net.FtpWebRequest.BeginGetResponse*>.</xref:System.Net.FtpWebRequest.BeginGetResponse*> kończy się"
  remarks: "Jeśli działanie nie zostało ukończone w czasie EndGetResponse metoda jest wywoływana, EndGetResponse bloki przed zakończeniem operacji. Aby zapobiec, blokowanie, sprawdź <xref:System.IAsyncResult.IsCompleted%2A>Właściwość przed wywołaniem EndGetResponse.</xref:System.IAsyncResult.IsCompleted%2A>       Oprócz wyjątków w &quot;Wyjątki&quot; EndGetResponse ponownie zgłasza wyjątki, które zostały zgłoszone podczas komunikacji z serwerem.      > [!NOTE] > Ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#6](~/add/codesnippet/csharp/m-system.net.ftpwebreque_5_1.cs)]\n [!code-cpp[NCLFtpAsync#6](~/add/codesnippet/cpp/m-system.net.ftpwebreque_5_1.cpp)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Zwrócił podczas uruchamiania operacji.</xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "A <xref:System.Net.WebResponse>odwołania, który zawiera <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> wystąpienia.</xref:System.Net.WebResponse> Ten obiekt zawiera odpowiedzi na żądanie serwera FTP."
  overload: System.Net.FtpWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie uzyskano przez wywołanie metody <xref:System.Net.FtpWebRequest.BeginGetResponse*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ta metoda już wywołano dla operacji identyfikowanych <code> asyncResult </code>."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Wystąpił błąd przy użyciu serwera proxy HTTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera strumień używany do przekazywania danych do serwera FTP."
  remarks: "Przed wywołaniem metody GetRequestStream, należy ustawić właściwości żądania. Po zapisaniu danych w strumieniu, można zamknąć strumienia przed wysłaniem żądania.       Jeśli nie ustawiono <xref:System.Net.FtpWebRequest.Method%2A>właściwości <xref:System.Net.WebRequestMethods.Ftp.UploadFile>lub <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, nie można uzyskać strumienia.</xref:System.Net.WebRequestMethods.Ftp.AppendFile> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method%2A>       Bloki GetRequestStream podczas oczekiwania na strumienia. Aby tego uniknąć, należy wywołać <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>metody zamiast GetRequestStream.</xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>      > [!NOTE] > Ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Z możliwością zapisu <xref:System.IO.Stream>wystąpienie używane do przechowywania danych, które zostanie wysłane do serwera przez bieżącego żądania.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.GetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.BeginGetRequestStream*> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Nie można nawiązać połączenia z serwerem FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "<xref:System.Net.FtpWebRequest.Method*>Nie ustawiono właściwości &lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile?displayProperty=fullName&gt; lub &lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile?displayProperty=fullName&gt;.</xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zwraca odpowiedź serwera FTP."
  remarks: "Aby uzyskać dostęp do właściwości specyficzne dla FTP, należy rzutować <xref:System.Net.WebResponse>obiekt zwracany przez tę metodę w celu <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse> </xref:System.Net.WebResponse>       GetResponse powoduje, że można nawiązać połączenia kontroli i może również utworzyć połączenie danych. Bloki GetResponse do momentu otrzymania odpowiedzi. Aby tego uniknąć, można wykonać tej operacji asynchronicznie przez wywołanie metody <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>i <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metody zamiast GetResponse.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A>       Jeśli <xref:System.Net.FtpWebRequest.Proxy%2A>właściwość jest ustawiona, albo bezpośrednio lub w pliku konfiguracji komunikacji z serwerem FTP są nawiązywane przy użyciu serwera proxy.</xref:System.Net.FtpWebRequest.Proxy%2A>       Jeśli <xref:System.Net.WebException>jest zgłoszone, użyj <xref:System.Net.WebException.Response%2A>i <xref:System.Net.WebException.Status%2A>Właściwości wyjątku, aby określić odpowiedzi z serwera.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>       Ten element członkowski generuje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Wielu wywołań GetResponse powrócić do tego samego obiektu odpowiedzi; żądanie nie jest ponownie."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls GetResponse to send the request and block until the response is returned by the server.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "A <xref:System.Net.WebResponse>odwołania, który zawiera <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> wystąpienia.</xref:System.Net.WebResponse> Ten obiekt zawiera odpowiedzi na żądanie serwera FTP."
  overload: System.Net.FtpWebRequest.GetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GetResponse or <xref:System.Net.FtpWebRequest.BeginGetResponse*> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref:System.Net.FtpWebRequest.EnableSsl*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref:System.Net.FtpWebRequest.Timeout*> was specified and the timeout has expired."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Headers
  id: Headers
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera pustą <xref:System.Net.WebHeaderCollection>obiektu.</xref:System.Net.WebHeaderCollection>"
  remarks: "Właściwość nagłówki jest udostępniany tylko dla zgodności z innych implementacji <xref:System.Net.WebRequest>i <xref:System.Net.WebResponse>klasy.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Nie istnieje przyczyna do użycia nagłówków."
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "Pusta <xref:System.Net.WebHeaderCollection>obiektu.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.FtpWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia <xref:System.Boolean>wartość, która określa, czy połączenie kontroli do serwera FTP jest zamknięte po zakończeniu żądania.</xref:System.Boolean>"
  remarks: "Gdy właściwość KeepAlive ma wartość `false`, połączenie kontroli jest zamknięty podczas wywoływania <xref:System.Net.FtpWebResponse.Close%2A>metody.</xref:System.Net.FtpWebResponse.Close%2A>       Zmiana KeepAlive po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_0_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_0_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli połączenie z serwerem nie powinien zostać zniszczone; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.KeepAlive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Method
  id: Method
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia polecenie do wysyłania do serwera FTP."
  remarks: "Właściwość metoda określa, które polecenia są wysyłane do serwera. Ustawia metodę przy użyciu parametrów zdefiniowanych w pole publiczne elementy członkowskie <xref:System.Net.WebRequestMethods.Ftp>klasy.</xref:System.Net.WebRequestMethods.Ftp> Należy pamiętać, że parametry zdefiniowane w <xref:System.Net.WebRequestMethods.Ftp>klasy są tylko opcje obsługiwane dla właściwości metody.</xref:System.Net.WebRequestMethods.Ftp> Ustawienie właściwości metody wszelkie inne wartości spowoduje <xref:System.ArgumentException>wyjątek.</xref:System.ArgumentException>       Gdy ustawienie metody <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, należy to zrobić przed wywołaniem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metody.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> Nie można wywołać tych elementów członkowskich w odpowiedniej kolejności przyczyny <xref:System.Net.ProtocolViolationException>wyjątek podczas próby pobrania strumienia żądania.</xref:System.Net.ProtocolViolationException>       Poświadczenia podane dla <xref:System.Net.FtpWebRequest>obiekt musi mieć uprawnienia do wykonywania określonej metody.</xref:System.Net.FtpWebRequest> W przeciwnym razie polecenie FTP nie powiedzie się.       Aby sprawdzić, powodzenia lub niepowodzenia polecenia, sprawdź <xref:System.Net.FtpWebResponse.StatusCode%2A>i <xref:System.Net.FtpWebResponse.StatusDescription%2A>Właściwości.</xref:System.Net.FtpWebResponse.StatusDescription%2A> </xref:System.Net.FtpWebResponse.StatusCode%2A>"
  example:
  - "The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/p-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/p-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>wartości, która zawiera polecenia FTP do wysyłania do serwera.</xref:System.String> Wartość domyślna to <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  overload: System.Net.FtpWebRequest.Method*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Zawsze zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Właściwość PreAuthenticate jest udostępniany tylko dla zgodności z innych implementacji <xref:System.Net.WebRequest>i <xref:System.Net.WebResponse>klasy.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest>"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "Zawsze zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.PreAuthenticate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wstępnego uwierzytelniania nie jest obsługiwana w przypadku usługi FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Proxy
  id: Proxy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia serwera proxy użyte do komunikowania się z serwerem FTP."
  remarks: "Właściwość Proxy identyfikuje <xref:System.Net.IWebProxy>wystąpienia, który komunikuje się z serwerem FTP.</xref:System.Net.IWebProxy> Serwer proxy jest ustawiony przez system za pomocą plików konfiguracji i ustawień sieci lokalnej Internet Explorer. Aby określić, że należy używać żadnego serwera proxy, należy ustawić serwera Proxy do wystąpienia serwera proxy zwrócony przez <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName>metody.</xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> Aby uzyskać więcej informacji na temat wykrywania automatyczną serwera proxy, zobacz [automatycznego wykrywania Proxy](~/add/includes/ajax-current-ext-md.md).       Należy ustawić serwera Proxy przed zapisywania danych do strumienia żądania lub uzyskiwania odpowiedzi. Zmienianie serwera Proxy po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       <xref:System.Net.FtpWebRequest>Klasa obsługuje serwerów proxy HTTP i klient zapory ISA.</xref:System.Net.FtpWebRequest>       Jeśli serwer proxy określony jest serwer proxy HTTP tylko <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, i <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>polecenia są obsługiwane.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_1_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_1_1.cs)]"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "<xref:System.Net.IWebProxy>Wystąpienia odpowiedzialnej za komunikację z serwerem FTP.</xref:System.Net.IWebProxy>"
  overload: System.Net.FtpWebRequest.Proxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Nie można ustawić tej właściwości <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia limit czasu podczas Odczyt lub zapis w strumieniu."
  remarks: "ReadWriteTimeout jest używana podczas zapisywania do strumienia zwrócone przez <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metody lub Odczyt ze strumienia zwrócone przez <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metody.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       W szczególności właściwość ReadWriteTimeout określa limit czasu dla <xref:System.IO.Stream.Read%2A>metodę, która jest używana do odczytu Strumień zwrócony przez <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metody oraz <xref:System.IO.Stream.Write%2A>metodę, która jest używana podczas zapisu do strumienia zwrócone przez <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metody.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.IO.Stream.Write%2A> </xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.IO.Stream.Read%2A> Po przekroczeniu limitu czasu wywołania metody zgłasza <xref:System.Net.WebException>z <xref:System.Net.WebExceptionStatus>ustawioną <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Aby określić ilość czasu oczekiwania na zakończenie żądania, użyj <xref:System.Net.FtpWebRequest.Timeout%2A>Właściwości.</xref:System.Net.FtpWebRequest.Timeout%2A>"
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Liczba milisekund przed Odczyt lub zapis razy. Wartość domyślna to 300 000 milisekund (5 minut)."
  overload: System.Net.FtpWebRequest.ReadWriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żądanie zostało wysłane."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określona dla operacji ustawienia jest mniejsza niż lub równa zero i nie jest równa &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RenameTo
  id: RenameTo
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia nazwę nowego pliku zostanie zmieniona."
  syntax:
    content: public string RenameTo { get; set; }
    return:
      type: System.String
      description: "Nowa nazwa pliku zostanie zmieniona."
  overload: System.Net.FtpWebRequest.RenameTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość określona dla operacji set jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera identyfikator URI żądanego przez to wystąpienie."
  remarks: "Wartość właściwości RequestUri jest identyfikator URI określony podczas <xref:System.Net.WebRequest.Create%2A>Metoda została wywołana w celu uzyskania tego wystąpienia.</xref:System.Net.WebRequest.Create%2A>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_5_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_5_1.cs)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>wystąpienia identyfikujący zasób, do których uzyskuje się dostęp przy użyciu protokołu transferu plików.</xref:System.Uri>"
  overload: System.Net.FtpWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ServicePoint
  id: ServicePoint
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiekt używany do łączenia się z serwerem FTP."
  remarks: "Jeśli nie <xref:System.Net.ServicePoint>obiekt istnieje, utworzony dla serwera FTP.</xref:System.Net.ServicePoint> Aby ustawić maksymalną liczbę połączeń, które mogą być otwarte dla serwera FTP, należy ustawić <xref:System.Net.ServicePoint.ConnectionLimit%2A>Właściwość <xref:System.Net.ServicePoint>wystąpienia zwracane przez tę właściwość.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \n  \n [!code-cpp[NCLFtpClient#1](~/add/codesnippet/cpp/p-system.net.ftpwebreque_9_1.cpp)]\n [!code-cs[NCLFtpClient#1](~/add/codesnippet/csharp/p-system.net.ftpwebreque_9_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiekt, który można dostosować zachowanie połączenia."
  overload: System.Net.FtpWebRequest.ServicePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Timeout
  id: Timeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia liczbę milisekund oczekiwania na żądanie."
  remarks: "Aby określić nieskończony wartość, ustaw właściwości Timeout <xref:System.Threading.Timeout.Infinite>(-1).</xref:System.Threading.Timeout.Infinite> Jest to wartość domyślna.       Limit czasu to liczba żądań synchronicznych wprowadzone w milisekundach <xref:System.Net.FtpWebRequest.GetResponse%2A>metody czeka na odpowiedź, a <xref:System.Net.FtpWebRequest.GetRequestStream%2A>Metoda oczekuje dla strumienia.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Jeśli zasób nie odpowie w tym czasie, żądanie zgłasza <xref:System.Net.WebException>z <xref:System.Net.WebException.Status%2A>właściwości ustawiono <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException>       Zmiana limitu czasu po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Zapytanie systemu nazw domen (DNS, Domain Name System) może potrwać do 15 sekund do zwrócenia lub upłynął limit czasu. Jeśli żądanie zawiera nazwę hosta, która wymaga rozpoznawania i można ustawić limitu czasu na wartość mniej niż 15 sekund, może to zająć 15 sekund lub więcej przed <xref:System.Net.WebException>jest generowany, aby wskazać, limit czasu oczekiwania na żądanie.</xref:System.Net.WebException>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[NCLFtpClient#23](~/add/codesnippet/cpp/p-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#23](~/add/codesnippet/csharp/p-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która zawiera wyrażony w milisekundach czas oczekiwania, zanim upłynie limit czasu żądania.</xref:System.Int32> Wartość domyślna to <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  overload: System.Net.FtpWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określona wartość jest mniejsza od zera i nie jest <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseBinary
  id: UseBinary
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia <xref:System.Boolean>wartość, która określa typ danych do transferowania plików.</xref:System.Boolean>"
  remarks: "W przypadku wysyłania binarne dane, takie jak obraz, ustawić tę właściwość na `true`. Jeśli tekst jest wysyłany, ustaw dla właściwości `false`. Określanie `true` powoduje, że <xref:System.Net.FtpWebRequest>do wysyłania `&quot;TYPE I&quot;` polecenia na serwerze.</xref:System.Net.FtpWebRequest> Określanie `false` powoduje, że <xref:System.Net.FtpWebRequest>do wysyłania `&quot;Type A&quot;` polecenia na serwerze.</xref:System.Net.FtpWebRequest> Te polecenia, można zignorować serwerami FTP.       Zmiana UseBinary po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_7_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_7_1.cs)]"
  syntax:
    content: public bool UseBinary { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do wskazywania serwerowi przekazywanych danych binarnych; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby wskazać, że dane są tekstu. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UseBinary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Zawsze zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Właściwość UseDefaultCredentials jest udostępniany tylko dla zgodności z innych implementacji <xref:System.Net.WebRequest>i <xref:System.Net.WebResponse>klasy.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Nie istnieje przyczyna do użycia UseDefaultCredentials."
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "Zawsze zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Poświadczenia domyślne nie są obsługiwane w przypadku usługi FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UsePassive
  id: UsePassive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia zachowanie procesu transferu danych aplikacji klienckiej."
  remarks: "Ustawienie właściwości UsePassive `true` wysyła &quot;`PASV&quot;` polecenia na serwerze. To polecenie żąda od serwera do nasłuchiwania na porcie danych i do oczekiwania na połączenie, a nie zainicjować jeden po otrzymaniu polecenia transferu.       Opis zachowania, które są określone za pomocą UsePassive sekcji 959 RFC, &quot;File Transfer Protocol&quot; 3.2, &quot;Ustanawianie połączeń danych&quot; i sekcja 4.1.2, &quot;Transfer parametru polecenia&quot; dostępne pod adresem [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).       Zmiana UsePassive po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metody powoduje, że <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Jeśli ustawiono UsePassive `true`, serwer FTP nie może wysłać rozmiar pliku i postęp pobierania można zawsze miały wartość zero. Jeśli ustawiono UsePassive `false`, Zapora może Zgłoś alert i blokowanie pobierania pliku."
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#6](~/add/codesnippet/cpp/p-system.net.ftpwebreque_10_1.cpp)]\n [!code-cs[NCLFtpClient#6](~/add/codesnippet/csharp/p-system.net.ftpwebreque_10_1.cs)]"
  syntax:
    content: public bool UsePassive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Jeśli transferu danych aplikacji klienckiej procesu nasłuchuje połączeń na porcie danych; w przeciwnym razie <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli klient powinien nawiązania połączenia na porcie danych. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UsePassive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku."
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.FtpWebRequest.Abort
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FtpWebRequest.ClientCertificates
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FtpWebRequest.ContentLength
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FtpWebRequest.ContentOffset
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FtpWebRequest.GetRequestStream
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
- uid: System.Net.FtpWebRequest.GetResponse
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
- uid: System.Net.FtpWebRequest.Headers
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FtpWebRequest.KeepAlive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FtpWebRequest.RenameTo
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FtpWebRequest.ServicePoint
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
- uid: System.Net.FtpWebRequest.Abort*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort
  nameWithType: FtpWebRequest.Abort
- uid: System.Net.FtpWebRequest.BeginGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FtpWebRequest.BeginGetRequestStream
- uid: System.Net.FtpWebRequest.BeginGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FtpWebRequest.BeginGetResponse
- uid: System.Net.FtpWebRequest.ClientCertificates*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
- uid: System.Net.FtpWebRequest.ConnectionGroupName*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
- uid: System.Net.FtpWebRequest.ContentLength*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
- uid: System.Net.FtpWebRequest.ContentOffset*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
- uid: System.Net.FtpWebRequest.EndGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FtpWebRequest.EndGetRequestStream
- uid: System.Net.FtpWebRequest.EndGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FtpWebRequest.EndGetResponse
- uid: System.Net.FtpWebRequest.GetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FtpWebRequest.GetRequestStream
- uid: System.Net.FtpWebRequest.GetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FtpWebRequest.GetResponse
- uid: System.Net.FtpWebRequest.Headers*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
- uid: System.Net.FtpWebRequest.KeepAlive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
- uid: System.Net.FtpWebRequest.RenameTo*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
- uid: System.Net.FtpWebRequest.ServicePoint*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
