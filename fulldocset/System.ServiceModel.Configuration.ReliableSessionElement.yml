### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ReliableSessionElement
  id: ReliableSessionElement
  children:
  - System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  - System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  - System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  - System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  - System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  - System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  - System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  - System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  - System.ServiceModel.Configuration.ReliableSessionElement.Properties
  - System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  langs:
  - csharp
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement
  fullName: System.ServiceModel.Configuration.ReliableSessionElement
  type: Class
  summary: "Reprezentuje ustawienia konfiguracji WS-Reliable Messaging."
  remarks: "Gdy ten element jest dodawany do niestandardowego powiązania, wynikowy kanał obsługuje dokładnie — raz gwarancje dostarczenia."
  syntax:
    content: 'public sealed class ReliableSessionElement : System.ServiceModel.Configuration.BindingElementExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Configuration.ReliableSessionElement&quot;> </xref> klasy."
  syntax:
    content: public ReliableSessionElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia przedział czasu, miejsce docelowe oczekiwania przed wysłaniem potwierdzenia do źródła komunikatu za pośrednictwem niezawodnych kanałów tworzonych przez fabrykę."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa przedział czasu oczekiwania przez usługę do wysyłania do źródła komunikatu potwierdzenia.</xref:System.TimeSpan> Wartość domyślna to 2 sekundy."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Dotyczy zawartości elementu określone powiązanie tej sekcji konfiguracji powiązania."
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "Element powiązania."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera typ tego elementu powiązania."
  syntax:
    content: public override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "Typ tego elementu powiązania."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Kopiuje zawartość sekcji konfiguracyjnej do tej sekcji konfiguracji."
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "Sekcja konfiguracyjna do skopiowania."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  id: CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.ServiceModel.Channels.BindingElement CreateBindingElement ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "Do dodania."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy Zaawansowane sterowanie przepływem, implementacja specyficzna dla Microsoft kontroli przepływu dla obsługi wiadomości WS-Reliable, jest aktywowana."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>czy Zaawansowane sterowanie przepływem, implementacja specyficzna dla Microsoft kontroli przepływu dla obsługi wiadomości WS-Reliable został aktywowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia <xref:System.TimeSpan>wartość, która określa maksymalny czas trwania kanału umożliwia komunikujące się Strona nie na niewysyłanie komunikatów przed spowodowaniem błędu kanału.</xref:System.TimeSpan>"
  remarks: "Działań w kanale jest zdefiniowany jako odbierania komunikatu aplikacji lub infrastruktury. Ta właściwość kontroluje maksymalną ilość czasu do podtrzymywania nieaktywnych sesji. W przypadku dłużej bez żadnych działań, sesja został przerwany przez infrastrukturę i usterek kanału."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>wartość, która określa maksymalny czas trwania kanału umożliwia komunikujące się Strona nie na niewysyłanie komunikatów przed spowodowaniem błędu kanału.</xref:System.TimeSpan> Wartość domyślna to 00:10:00."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "Do dodania."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia maksymalną liczbę kanałów oczekujących na akceptację na odbiornika."
  remarks: "Ta wartość powinna być liczbą całkowitą z zakresu od 1 do 16384 włącznie.       Kanały oczekują na kiedy są oczekuje na zatwierdzenie. Po osiągnięciu tego limitu tworzone są Brak kanałów. Zamiast wprowadzeniem oczekujących tryb dopóki liczba osiąga w dół (akceptując oczekujących kanałów). Jest to ograniczenie dla każdej fabryki.       Po osiągnięciu progu i aplikacji zdalnej próbuje utworzyć nowe niezawodnej sesji, żądanie zostanie odrzucone i otwórz operację, która zostanie wyświetlony monit tej usterki. To ograniczenie nie dotyczy liczby oczekujących kanałów wychodzących."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba kanałów oczekujących na akceptację na odbiornika. Wartość domyślna to 128."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia maksymalną liczbę prób niezawodny kanał ponownego przesłania wiadomości nie otrzymano potwierdzenia, poprzez wywoływanie metody Send kanału źródłowego."
  remarks: "Ta wartość powinna być liczbą całkowitą większą niż zero. Jeśli potwierdzenie nie zostanie odebrana po ostatnim retransmisji, błędów kanału.       Komunikat jest uznawany za do przeniesienia, jeśli jego dostarczania po stronie odbiorcy zostaje potwierdzony przez odbiorcę.       Jeśli nie otrzymano potwierdzenia w ciągu pewnego czasu dla wiadomości, które zostały przesłane, infrastruktury automatycznie ponownie wysyła komunikat. Infrastruktura spróbuje ponownie wysłać wiadomość dla maksymalnie, ile razy określonej przez tę właściwość. Jeśli potwierdzenie nie zostanie odebrana po ostatnim retransmisji, błędów kanału.       Infrastruktura używa algorytm wykładnicze wycofania do określenia, kiedy ponownego przesłania, oparte na obliczona średnia czasu rundy. Czas początkowo rozpoczyna się od 1 sekundy przed retransmisji i podwajając opóźnienie co nieudanej próby podania, co prowadzi do przekazywania między przy pierwszej próbie transmisji i ostatnią próbę retransmisji około 8,5 minut. Podczas pierwszej próby retransmisji jest dostosowane według czasu Rundy obliczeniowej i odcinek wynikowy czas trwania tymi próbami różni odpowiednio. Dzięki temu czas retransmisji dynamicznie dostosowywana w zmiennych warunkach sieciowych."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "Maksymalną liczbę prób niezawodny kanał ponownego przesłania wiadomości nie otrzymano potwierdzenia, poprzez wywoływanie metody wysyłania kanału źródłowego. Minimalna wartość to 1; maksymalna 20; a wartość domyślna to 8."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia maksymalny rozmiar buforu."
  remarks: "Na kliencie ta właściwość określa maksymalny rozmiar bufora używanego przez kanał niezawodny do przechowywania komunikatów potwierdzonych nie została jeszcze przez odbiornik. Jednostki przydziału jest komunikat. Jeśli bufor jest pełna, dodatkowe operacje wysyłania są zablokowane.       Odbiornika ta właściwość określa maksymalny rozmiar bufora używanego przez kanał do przechowywania wiadomości przychodzących, które nie zostały jeszcze wysłane do aplikacji. Jeśli bufor jest pełna, dalsze komunikaty dyskretnie są usuwane przez odbiornik i wymagają retransmisji przez klienta."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "Maksymalny rozmiar buforu. Prawidłowe są wartości z zakresu od 1 do 4096 włącznie."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia wartość określającą, czy komunikaty dotrą do celu w kolejności wysłania."
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli komunikaty dotrą do celu w kolejności wysłania; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli można odebraniu komunikatów poza kolejnością. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Do dodania."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Pobiera lub ustawia wersję WS-ReliableMessaging określone przez element konfiguracji."
  remarks: 'Obecnie nie istnieją dwie wersje obsługiwane przez protokół WS-ReliableMessaging [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 i WS ReliableMessagingFebruary2005. Domyślna wersja jest WS ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "Wystąpienia pochodzące z <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;> </xref> reprezentujący wersji protokołu WS-ReliableMessaging używanego przez element konfiguracji."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BindingElementExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BindingElementExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement.ReliableSessionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ReliableSessionElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom
  nameWithType: ReliableSessionElement.CopyFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement
  nameWithType: ReliableSessionElement.CreateBindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom
  nameWithType: ReliableSessionElement.InitializeFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
