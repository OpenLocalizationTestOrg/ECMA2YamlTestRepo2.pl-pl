### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IContractBehaviorAttribute
  id: IContractBehaviorAttribute
  children:
  - System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  langs:
  - csharp
  name: IContractBehaviorAttribute
  nameWithType: IContractBehaviorAttribute
  fullName: System.ServiceModel.Description.IContractBehaviorAttribute
  type: Interface
  summary: "Określa kontrakt, dla których atrybut, który implementuje &lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt; interfejs jest aktywny."
  remarks: "Implementowanie interfejsu IContractBehaviorAttribute na atrybut, który jest również <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>obiektu na korzystanie z tego atrybutu zachowanie kontraktu na typ usługi, ograniczając jego stosowanie kontrakt określony w <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A>Właściwości.</xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> </xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>       Nie jest wymagane zaimplementować IContractBehaviorAttribute kontraktu niestandardowych atrybutów zachowania, a jeśli atrybut jest stosowany do interfejsu kontraktu lub dwustronnego wywołania zwrotnego w klasie wartości <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A>właściwość jest ignorowana.</xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A>       Aby uzyskać więcej informacji zobacz <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>.</xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>"
  example:
  - "The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=fullName> implementation called `ObjectProviderBehavior` that provides a \"singleton\" behavior; it always returns the same service instance and does not recycle it.  \n  \n To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> to insert the custom service instance provider. It also implements IContractBehaviorAttribute, which binds its application to the `ISampleService` contract.  \n  \n [!code-cs[IContractBehavior#2](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#2)]\n [!code-vb[IContractBehavior#2](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#2)]"
  syntax:
    content: public interface IContractBehaviorAttribute
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  id: TargetContract
  parent: System.ServiceModel.Description.IContractBehaviorAttribute
  langs:
  - csharp
  name: TargetContract
  nameWithType: IContractBehaviorAttribute.TargetContract
  fullName: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Pobiera typ kontraktu zachowanie kontraktu jest stosowana."
  remarks: "Implementuje właściwości TargetContract w celu określenia kontraktu, do którego zachowanie kontrakt jest stosowane, gdy implementującej <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>atrybut jest stosowany do klasy usługi.</xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>"
  example:
  - "The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=fullName> implementation called `ObjectProviderBehavior` that provides a \"singleton\" behavior; it always returns the same service instance and does not recycle it.  \n  \n To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its application to the `ISampleService` contract.  \n  \n [!code-cs[IContractBehavior#2](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#2)]\n [!code-vb[IContractBehavior#2](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#2)]"
  syntax:
    content: public Type TargetContract { get; }
    return:
      type: System.Type
      description: "Kontrakt zachowanie kontraktu jest stosowana."
  overload: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  parent: System.ServiceModel.Description.IContractBehaviorAttribute
  isExternal: false
  name: TargetContract
  nameWithType: IContractBehaviorAttribute.TargetContract
  fullName: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract*
  parent: System.ServiceModel.Description.IContractBehaviorAttribute
  isExternal: false
  name: TargetContract
  nameWithType: IContractBehaviorAttribute.TargetContract
