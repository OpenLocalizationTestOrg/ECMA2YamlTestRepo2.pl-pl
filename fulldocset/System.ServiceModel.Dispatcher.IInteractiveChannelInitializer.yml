### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  id: IInteractiveChannelInitializer
  children:
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  langs:
  - csharp
  name: IInteractiveChannelInitializer
  nameWithType: IInteractiveChannelInitializer
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  type: Interface
  summary: "Definiuje metody, które umożliwiają aplikacji klienckiej wyświetlić interfejs użytkownika, aby zebrać informacje o tożsamości przed utworzeniem kanału."
  remarks: "Implementuje interfejs IInteractiveChannelInitializer, aby umożliwić aplikacji klienckiej wyświetlić interfejs użytkownika, który umożliwia użytkownikowi aplikacji do tworzenia lub Wybierz poświadczenia przed otwarciem kanału.       Aby zaimplementować IInteractiveChannelInitializer, wykonaj następujące kroki w <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>  Monituj użytkownika i uzyskać odpowiednie <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName>      2.  Dodaj obiekt parameter niestandardowy kanał do kolekcji zwracany przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>metodę dla <xref:System.ServiceModel.IClientChannel>obiekt z parametrem typu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Ten obiekt parametru kanał jest używany przez niestandardowe <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>ustanowienie tokeny zabezpieczające dla kanału.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Zwraca.       Aby wstawić IInteractiveChannelInitializer: 1.  Zastępowanie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>metody w <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName>klasie.</xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> </xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>      2.  W tej metodzie ustalić, czy punkt końcowy wymaga IInteractiveChannelInitializer oraz Dodaj IInteractiveChannelInitializer do <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>kolekcji.</xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>       Istnieją dwa sposoby, którą deweloperzy aplikacji można wykorzystać wstawionego IInteractiveChannelInitializer. Aplikacja kliencka można wywołać albo <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>lub <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(lub asynchroniczną wersję) przed otwarciem kanał ( *jawne* podejście) lub po prostu wywołaj operację pierwszy ( *niejawne* podejście).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>       Jeśli w sposób niejawny, aplikacja musi wywołać pierwszą operacją na <xref:System.ServiceModel.ClientBase%601>lub <xref:System.ServiceModel.IClientChannel>rozszerzenia.</xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ClientBase%601> Jeśli wywołuje inny niż pierwsza operacja, jest zwracany wyjątek.       Jeśli używa jawnego podejście, aplikacji, należy wykonać następujące kroki w kolejności: 1.  Wywołaj albo <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>lub <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(lub asynchroniczną wersję).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>      2.  Zwracanie inicjatory ma wywoływać albo <xref:System.ServiceModel.ICommunicationObject.Open%2A>Metoda <xref:System.ServiceModel.IClientChannel>obiektu lub na <xref:System.ServiceModel.IClientChannel>obiektu zwróconego z <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName>Właściwości.</xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ICommunicationObject.Open%2A>      3.  Wywoływanie operacji.       Przez przyjęcie podejścia jawne, zaleca się tego formantu wysokiej jakości aplikacji procesu interfejsu użytkownika.       Aplikacje używające niejawnego metody invoke inicjatory interfejsu użytkownika, ale jeśli użytkownik aplikacji nie odpowiada przed upływem limitu czasu wysyłania w powiązania, jest zwracany wyjątek, po powrocie z interfejsu użytkownika."
  syntax:
    content: public interface IInteractiveChannelInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Wywołanie asynchroniczne, aby rozpocząć korzystanie z interfejsu użytkownika można uzyskać informacji o poświadczeniach."
  remarks: "Aby zaimplementować <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, wykonaj następujące kroki w BeginDisplayInitializationUI: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>  Monituj użytkownika, w jaki sposób potrzeb i uzyskać odpowiednie <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName>      2.  Dodaj obiekt parameter niestandardowy kanał do kolekcji zwracany przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>metodę dla <xref:System.ServiceModel.IClientChannel>obiekt z parametrem typu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Ten obiekt parametru kanał jest używany przez niestandardowe <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>ustanowienie tokeny zabezpieczające dla kanału.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Zwraca."
  syntax:
    content: public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);
    parameters:
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "Kanał klienta."
    - id: callback
      type: System.AsyncCallback
      description: "Obiektu wywołania zwrotnego."
    - id: state
      type: System.Object
      description: "Wszystkie dane o stanie."
    return:
      type: System.IAsyncResult
      description: "&lt;Xref:System.IAsyncResult?displayProperty=fullName&gt; można użyć do wywołania po zakończeniu przetwarzania."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Wywoływane, gdy <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>zostało zakończone.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>"
  syntax:
    content: public void EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "&lt;Xref:System.IAsyncResult?displayProperty=fullName&gt;."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI
