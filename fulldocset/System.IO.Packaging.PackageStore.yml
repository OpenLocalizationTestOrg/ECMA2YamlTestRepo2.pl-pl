### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageStore
  id: PackageStore
  children:
  - System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  - System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  - System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  langs:
  - csharp
  name: PackageStore
  nameWithType: PackageStore
  fullName: System.IO.Packaging.PackageStore
  type: Class
  summary: "Reprezentuje kolekcję specyficzne dla aplikacji <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> wystąpień w połączeniu z <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
  remarks: "PackageStore definiuje kolekcje odwołania pakietu, które są otwarte i aktywne w aplikacji.  Dodane do PackageStore pakiety są dostępne jest ich wartość klucza identyfikatora URI.  PackageStore obsługuje trzy typowych zastosowań: 1.  Uzyskiwanie dostępu do <xref:System.IO.Packaging.PackagePart>danych za pośrednictwem <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart>      2.  Uzyskiwanie wystąpienia aplikacji <xref:System.IO.Packaging.Package>podany identyfikator URI pakietu.</xref:System.IO.Packaging.Package>      3.  Uzyskiwanie dostępu do pakietów, które są tworzone i przechowywane w <xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream>       Aby zwiększyć wydajność i zminimalizować koszty operacji na plikach powtarzane otwarcie i zamknięcie, PackageStore służy do zarządzania wystąpień pakietów używane przez <xref:System.IO.Packaging.PackWebRequest>i bezpośrednio przez aplikację.</xref:System.IO.Packaging.PackWebRequest>  Podczas uzyskiwania dostępu do danych w pakiecie, <xref:System.IO.Packaging.Package>żądany adres <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A>jest najpierw sprawdzić, czy pakiet jest już zdefiniowany i Otwórz w PackageStore.</xref:System.IO.Packaging.PackagePart.Uri%2A> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.Package>  Jeśli pakiet został zdefiniowany jako otwarte w PackageStore, żądana dostępne bezpośrednio, bez wielokrotnie otwierające i zamykające pakietu dla każdego żądania.       Jeśli aplikacja zostanie otwarty pakiet o <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A>można wywołać, aby dodać pakiet do PackageStore.</xref:System.IO.Packaging.PackageStore.AddPackage%2A> </xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>Aby usunąć pakiet z PackageStore przed wywołaniem <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>.</xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName> później należy wywołać</xref:System.IO.Packaging.PackageStore.RemovePackage%2A>       Pakiety XPS została otwarta z <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>konstruktora automatycznie są dodawane i usuwane z PackageStore, gdy dokument jest tworzony i usunięty.</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>  (Nie należy wywołać <xref:System.IO.Packaging.PackageStore.AddPackage%2A>lub <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>oddzielnie dla pakietów XPS została otwarta z <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>konstruktorów.)</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> </xref:System.IO.Packaging.PackageStore.RemovePackage%2A> </xref:System.IO.Packaging.PackageStore.AddPackage%2A>       Uprawnienia we/wy pliku pakietu dostępne za pośrednictwem PackageStore jest taka sama, jak ustawić pakietu po otwarciu uprawnienia we/wy.  PackageStore zawiera tylko odwołania do pakietów, które zostały dodane do magazynu.  Jest poprawnie otworzyć, aktualizacji i zamknąć każdego pakietu aplikacji.       Pakiety dodane do PackageStore jest dostępna w środowisku wielowątkowym, gdy są one używane w połączeniu z [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] analizatora, takich jak <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>  Podczas pracy w środowisku wielowątkowym, aplikacja musi zablokować pakietu przed dostępu."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public static class PackageStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  id: AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Dodaje <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> w magazynie."
  remarks: "`packageUri`Określa klucz pakietu identyfikator URI, który jest porównywany podczas wywoływania <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest>       Jeśli `packageUri` pasuje <xref:System.IO.Packaging.PackagePart.Uri%2A>do <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackWebRequest>wywołania, zdefiniowanego w <xref:System.IO.Packaging.PackageStore>umożliwia dostęp do żądanego część</xref:System.IO.Packaging.PackageStore> pakietu</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       Jeśli `packageUri` nie pasuje <xref:System.IO.Packaging.PackagePart.Uri%2A>do <xref:System.IO.Packaging.PackagePart>w <xref:System.IO.Packaging.PackWebRequest>wywołaniu pakietu z określonego identyfikatora URI jest otwarty na dostęp do żądanej części.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       **Uwaga dotycząca zabezpieczeń** tej metody wymaga <xref:System.Security.Permissions.EnvironmentPermission>dla wszystkich niestandardowych <xref:System.IO.Packaging.Package>(z systemem innym niż<xref:System.IO.Packaging.ZipPackage>) typów.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the AddPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewdecrypt)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewdecrypt)]"
  syntax:
    content: public static void AddPackage (Uri uri, System.IO.Packaging.Package package);
    parameters:
    - id: uri
      type: System.Uri
      description: "Klucz [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] z `package` do porównania w <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
    - id: package
      type: System.IO.Packaging.Package
      description: "Pakiet można dodać do magazynu."
  overload: System.IO.Packaging.PackageStore.AddPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>Nieprawidłowy pakiet jest [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pakiet o określonym <code> packageUri </code> znajduje się już w magazynie."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  id: GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Zwraca <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> z określonym [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] ze sklepu."
  remarks: "`packageUri`pasuje do identyfikatory URI określony w <xref:System.IO.Packaging.PackageStore.AddPackage%2A>wywołania metody.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Uwaga dotycząca zabezpieczeń** tej metody wymaga <xref:System.Security.Permissions.EnvironmentPermission>dla wszystkich niestandardowych <xref:System.IO.Packaging.Package>(z systemem innym niż<xref:System.IO.Packaging.ZipPackage>) typów.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the GetPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopendoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopendoc)]"
  syntax:
    content: public static System.IO.Packaging.Package GetPackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Pakietu do zwrócenia."
    return:
      type: System.IO.Packaging.Package
      description: "Pakiet z określonym <code> packageUri </code>; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, jeśli pakiet z określonym <code> packageUri </code> nie znajduje się w magazynie."
  overload: System.IO.Packaging.PackageStore.GetPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>Nieprawidłowy pakiet jest [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  id: RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Usuwa <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> z określonym [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] ze sklepu."
  remarks: "`packageUri`pasuje do identyfikatory URI określony w <xref:System.IO.Packaging.PackageStore.AddPackage%2A>wywołania metody.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Uwaga dotycząca zabezpieczeń** tej metody wymaga <xref:System.Security.Permissions.EnvironmentPermission>dla wszystkich niestandardowych <xref:System.IO.Packaging.Package>(z systemem innym niż<xref:System.IO.Packaging.ZipPackage>) typów.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the RemovePackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewclosedoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewclosedoc)]"
  syntax:
    content: public static void RemovePackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Pakietu do usunięcia."
  overload: System.IO.Packaging.PackageStore.RemovePackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>Nieprawidłowy pakiet jest [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
- uid: System.IO.Packaging.PackageStore.AddPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage
  nameWithType: PackageStore.AddPackage
- uid: System.IO.Packaging.PackageStore.GetPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage
  nameWithType: PackageStore.GetPackage
- uid: System.IO.Packaging.PackageStore.RemovePackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage
  nameWithType: PackageStore.RemovePackage
