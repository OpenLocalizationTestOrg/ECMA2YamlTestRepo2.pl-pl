### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  id: EdmFunctions
  children:
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression@)
  langs:
  - csharp
  name: EdmFunctions
  nameWithType: EdmFunctions
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  type: Class
  summary: "Udostępnia interfejs API do skonstruowania <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s wywoływać funkcje EDM canonical, która umożliwia tego interfejsu API można uzyskać dostępu do metody rozszerzenia na sam typ wyrażenia."
  syntax:
    content: public static class EdmFunctions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression@)
  id: Abs(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Abs(DbExpression)
  nameWithType: EdmFunctions.Abs(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Abs&quot; z określonego argumentu musi mieć typ wyników liczbowych. Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartość**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość liczbową."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość bezwzględną liczby **wartość**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddDays&quot; z określonymi argumentami, które muszą mieć typów DateTime i DateTimeOffset i integer. Typ wyniku wyrażenia jest taki sam jak typ wyniku **data**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa liczbę dni, aby dodać do **data**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który dodaje liczbę dni określoną przez **addValue** wartość określoną przez **data**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddHours&quot; z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita. Typ wyniku wyrażenia jest taki sam jak typ wyniku **czas**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające liczbę godzin, aby dodać do **czas**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression dodające liczbę godzin, określony przez **addValue** wartość określoną przez **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddMicroseconds&quot; z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita. Typ wyniku wyrażenia jest taki sam jak typ wyniku **czas**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające liczbę mikrosekundach, aby dodać do **czas**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression dodające liczba mikrosekundach określony przez **addValue** wartość określoną przez **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddMilliseconds&quot; z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita. Typ wyniku wyrażenia jest taki sam jak typ wyniku **czas**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające liczbę milisekund do dodania do **czas**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression dodające wyrażony w milisekundach czas określony przez **addValue** wartość określoną przez **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddMinutes&quot; z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita. Typ wyniku wyrażenia jest taki sam jak typ wyniku **czas**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa liczbę minut, aby dodać do **czas**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression dodające liczbę minut określoną przez **addValue** wartość określoną przez **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddMonths&quot; z określonymi argumentami, które muszą mieć typów DateTime i DateTimeOffset i integer. Typ wyniku wyrażenia jest taki sam jak typ wyniku **data**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające liczbę miesięcy do dodania do **data**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression dodające liczba miesięcy, określony przez **addValue** wartość określoną przez **data**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddNanoseconds&quot; z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita. Typ wyniku wyrażenia jest taki sam jak typ wyniku **czas**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające liczbę nanosekundach, aby dodać do **czas**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression dodające liczba określona przez nanosekundach **addValue** wartość określoną przez **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddSeconds&quot; z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita. Typ wyniku wyrażenia jest taki sam jak typ wyniku **czas**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające liczbę sekund, aby dodać do **czas**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który dodaje liczby sekund określonej przez **addValue** wartość określoną przez **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;AddYears&quot; z określonymi argumentami, które muszą mieć typów DateTime i DateTimeOffset i integer. Typ wyniku wyrażenia jest taki sam jak typ wyniku **data**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, do której **addValue**powinny zostać dodane."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające liczbę lat do dodania do **data**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression dodające liczba lat określona przez **addValue** wartość określoną przez **data**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression@)
  id: Average(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Average(DbExpression)
  nameWithType: EdmFunctions.Average(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;Średni&quot; który wywołuje w określonej kolekcji. Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, w którym można obliczyć średnią wartość."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie średnia wartość."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseAnd(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;BitwiseAnd&quot; z określonymi argumentami, które muszą mieć ten sam typ wyników liczbowych liczba całkowita. Typ wyniku wyrażenia jest taka sama jak typy argumentów."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);
    parameters:
    - id: value1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument operacji."
    - id: value2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument operacji."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość produkowane przez wykonanie iloczynu bitowego AND z **wartość1** i **wartość2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość1** **wartość2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość1** **wartość2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  id: BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseNot(DbExpression)
  nameWithType: EdmFunctions.BitwiseNot(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;BitwiseNot&quot; z określony argument musi być typu liczbowego Wynik liczby całkowitej. Typ wyniku wyrażenia jest taka sama jak typy argumentów."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument operacji."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość produkowane przez wykonanie operatora testu koniunkcji nie **wartość**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseOr(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseOr(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;BitwiseOr&quot; z określonymi argumentami, które muszą mieć ten sam typ wyników liczbowych liczba całkowita. Typ wyniku wyrażenia jest taka sama jak typy argumentów."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);
    parameters:
    - id: value1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument operacji."
    - id: value2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument operacji."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość utworzonego przez wykonanie wartości bitowe lub **wartość1** i **wartość2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość1** **wartość2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość1** **wartość2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseXor(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseXor(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;BitwiseXor&quot; z określonymi argumentami, które muszą mieć ten sam typ wyników liczbowych liczba całkowita. Typ wyniku wyrażenia jest taka sama jak typy argumentów."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);
    parameters:
    - id: value1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument operacji."
    - id: value2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument operacji."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Utworzone nowe obiekcie DbFunctionExpression, która zwraca wartość wykonując z bitowego XOR (OR wyłączne) z **wartość1** i **wartość2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość1** **wartość2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość1** **wartość2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  id: Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Ceiling(DbExpression)
  nameWithType: EdmFunctions.Ceiling(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Ceiling&quot; z określonego argumentu musi mieć typ wyniku single, double lub decimal. Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartość**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość liczbową."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca najmniejszą wartość całkowitą nie mniejszą niż niż **wartość**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Concat(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Concat(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje kanonicznej funkcji &quot;Concat&quot; z określonymi argumentami, które musi mieć typ wyniku ciągu. Typ wyniku wyrażenia jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);
    parameters:
    - id: string1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, który powinien zostać wyświetlony pierwszy w ciągu połączonych wynik."
    - id: string2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, który powinien zostać wyświetlony drugi ciąg połączonych wyniku."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie połączony ciąg."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**ciąg1** **ciąg2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**ciąg1** **ciąg2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Contains(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Contains(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Contains&quot; z określonymi argumentami, które musi mieć typ wyniku ciągu. Typ wyniku wyrażenia jest wartość logiczna."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);
    parameters:
    - id: searchedString
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg do wyszukania dowolne wystąpienie **searchedForString**."
    - id: searchedForString
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg do wyszukania w **searchedString**."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość Boolean wskazującą czy **searchedForString** występuje w ciągu **searchedString**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**searchedString** **searchedForString**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**searchedString** **searchedForString**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression@)
  id: Count(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Count(DbExpression)
  nameWithType: EdmFunctions.Count(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;Count&quot; który wywołuje w określonej kolekcji. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, w którym można obliczyć wartości licznika."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość licznika."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;CreateDateTime&quot; z określonymi argumentami. **drugi** musi mieć typ wyniku Edm.Double, podczas gdy inne argumenty muszą mieć typ wyniku z typem Edm.Int32. Typ wyniku wyrażenia jest Edm.DateTime."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);
    parameters:
    - id: year
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość roku dla nowego wystąpienia daty/godziny."
    - id: month
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość miesiąca dla nowego wystąpienia daty/godziny."
    - id: day
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość dnia dla nowego wystąpienia daty/godziny."
    - id: hour
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość godziny dla nowego wystąpienia daty/godziny."
    - id: minute
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość minuty dla nowego wystąpienia daty/godziny."
    - id: second
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera drugiej wartości dla nowego wystąpienia daty/godziny."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość typu DateTime nowe na podstawie określonej wartości."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**year** **month** **day** **hour** **minute** **second**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**year** **month** **day** **hour** **minute** **second**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;CreateDateTimeOffset&quot; z określonymi argumentami. **drugi** musi mieć typ wyniku Edm.Double, podczas gdy inne argumenty muszą mieć typ wyniku z typem Edm.Int32. Typ wyniku wyrażenia jest Edm.DateTimeOffset."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);
    parameters:
    - id: year
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość roku dla nowego wystąpienia typu DateTimeOffset."
    - id: month
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość miesiąca dla nowego wystąpienia typu DateTimeOffset."
    - id: day
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość dnia dla nowego wystąpienia typu DateTimeOffset."
    - id: hour
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość godziny dla nowego wystąpienia typu DateTimeOffset."
    - id: minute
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość minuty dla nowego wystąpienia typu DateTimeOffset."
    - id: second
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera drugiej wartości dla nowego wystąpienia typu DateTimeOffset."
    - id: timeZoneOffset
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera liczbę minut w wartości przesunięcia strefy czasowej dla nowego wystąpienia typu DateTimeOffset."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracające nowe DateTimeOffset na podstawie określonej wartości."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CreateTime(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;CreateTime&quot; z określonymi argumentami. **drugi** musi mieć typ wyniku Edm.Double, podczas gdy inne argumenty muszą mieć typ wyniku z typem Edm.Int32. Typ wyniku wyrażenia jest Edm.Time."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);
    parameters:
    - id: hour
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość godziny dla nowego wystąpienia daty/godziny."
    - id: minute
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera wartość minuty dla nowego wystąpienia daty/godziny."
    - id: second
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie zawiera drugiej wartości dla nowego wystąpienia daty/godziny."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca nową godzinę na podstawie określonej wartości."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Godzina** **minutę** **drugi**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Godzina** **minutę** **drugi**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime
  id: CurrentDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CurrentDateTime()
  nameWithType: EdmFunctions.CurrentDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;CurrentDateTime&quot;."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca bieżącą datę i godzinę jako wystąpienie Edm.DateTime."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset
  id: CurrentDateTimeOffset
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CurrentDateTimeOffset()
  nameWithType: EdmFunctions.CurrentDateTimeOffset()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;CurrentDateTimeOffset&quot;."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca bieżącą datę i godzinę jako wystąpienie Edm.DateTimeOffset."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime
  id: CurrentUtcDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CurrentUtcDateTime()
  nameWithType: EdmFunctions.CurrentUtcDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;CurrentUtcDateTime&quot;."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca bieżąca data i Godzina UTC jako wystąpienie Edm.DateTime."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression@)
  id: Day(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Day(DbExpression)
  nameWithType: EdmFunctions.Day(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Dzień&quot; z określony argument musi być typu wyniku DateTime i DateTimeOffset. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego można pobrać dnia."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita dnia z **data**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  id: DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DayOfYear(DbExpression)
  nameWithType: EdmFunctions.DayOfYear(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Dzieńroku&quot; z określony argument musi być typu wyniku DateTime i DateTimeOffset. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego dzień w roku powinny zostać pobrane."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca dzień całkowitą wartość roku z **data**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffDays&quot; z określonymi argumentami, które musi mieć wynik DateTime i DateTimeOffset typu. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);
    parameters:
    - id: dateValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość Data."
    - id: dateValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość Data."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę dni, która różni się od **dateValue1** i **dateValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffHours&quot; z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość czasu."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość czasu."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę godzin, która różni się od **timeValue1** i **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffMicroseconds&quot; z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość czasu."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość czasu."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę mikrosekundach różni się od **timeValue1** i **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffMilliseconds&quot; z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość czasu."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość czasu."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę milisekund, która różni się od **timeValue1** i **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffMinutes&quot; z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość czasu."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość czasu."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę minut, która różni się od **timeValue1** i **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffMonths&quot; z określonymi argumentami, które musi mieć wynik DateTime i DateTimeOffset typu. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);
    parameters:
    - id: dateValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość Data."
    - id: dateValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość Data."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę miesięcy, która różni się od **dateValue1** i **dateValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffNanoseconds&quot; z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość czasu."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość czasu."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę nanosekundach różni się od **timeValue1** i **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffSeconds&quot; z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość czasu."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość czasu."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę sekund, która różni się od **timeValue1** i **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;DiffYears&quot; z określonymi argumentami, które musi mieć wynik DateTime i DateTimeOffset typu. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);
    parameters:
    - id: dateValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające pierwszy argument wartość Data."
    - id: dateValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa drugi argument wartość Data."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę lat, która różni się od **dateValue1** i **dateValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: EndsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.EndsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;EndsWith&quot; z określonymi argumentami, które musi mieć typ wyniku ciągu. Typ wyniku wyrażenia jest wartość logiczna."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, który jest przeszukiwany na końcu ciągu **sufiks**."
    - id: suffix
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg docelowego, który jest wyszukiwany na końcu **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość Boolean wskazującą czy **stringArgument** kończy **sufiks**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression@)
  id: Floor(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Floor(DbExpression)
  nameWithType: EdmFunctions.Floor(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Floor&quot; z określonego argumentu musi mieć typ wyniku single, double lub decimal. Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartość**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość liczbową."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca największą liczbę całkowitą nie większą niż **wartość**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  id: GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: GetTotalOffsetMinutes(DbExpression)
  nameWithType: EdmFunctions.GetTotalOffsetMinutes(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;GetTotalOffsetMinutes&quot; z określony argument musi być typu wyniku DateTimeOffset. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);
    parameters:
    - id: dateTimeOffsetArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość DateTimeOffset, z którego można pobrać minutę przesunięcie od GMT."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca liczbę minut **dateTimeOffsetArgument** przesunięcia względem GMT."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateTimeOffsetArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateTimeOffsetArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression@)
  id: Hour(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Hour(DbExpression)
  nameWithType: EdmFunctions.Hour(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Hour&quot; z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego można pobrać godzinę."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita godzinę z **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: IndexOf(DbExpression,DbExpression)
  nameWithType: EdmFunctions.IndexOf(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;IndexOf&quot; z określonymi argumentami, które musi mieć typ wyniku ciągu. Typ wyniku wyrażenia jest typem Edm.Int32."
  remarks: "Indeks zwrócony przez IndexOf \\<b > opartego na&1;\\</b >."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);
    parameters:
    - id: searchString
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg do wyszukania **stringToFind**."
    - id: stringToFind
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg do zlokalizowania w **parametru Wyszukiwany_ciąg** powinna być sprawdzana."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca indeks pierwszego **stringToFind** w **parametru Wyszukiwany_ciąg**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**parametru Wyszukiwany_ciąg** **stringToFind**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**parametru Wyszukiwany_ciąg** **stringToFind**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Left(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Left(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Left&quot; z określonymi argumentami, które muszą mieć string i integer wyniku numerycznego typu. Typ wyniku wyrażenia jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, z którego mają zostać wyodrębnione podciąg po lewej stronie."
    - id: length
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa długość podciągu po lewej stronie, aby wyodrębnić z **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca podciąg lewej długość **długość** z **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **długość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression@)
  id: Length(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Length(DbExpression)
  nameWithType: EdmFunctions.Length(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Length&quot; z określonego argumentu musi mieć typ wyniku ciągu. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, dla którego można obliczyć długość."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca długość **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression@)
  id: LongCount(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: LongCount(DbExpression)
  nameWithType: EdmFunctions.LongCount(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;BigCount&quot; który wywołuje w określonej kolekcji. Typ wyniku wyrażenia jest Edm.Int64."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, w którym można obliczyć wartości licznika."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość licznika."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression@)
  id: Max(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Max(DbExpression)
  nameWithType: EdmFunctions.Max(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Max&quot; w określonej kolekcji. Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, w którym ma być pobrana wartość maksymalna"
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość maksymalna."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  id: Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Millisecond(DbExpression)
  nameWithType: EdmFunctions.Millisecond(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Millisecond&quot; z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego można pobrać milisekundy."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita milisekund z **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression@)
  id: Min(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Min(DbExpression)
  nameWithType: EdmFunctions.Min(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;Min&quot; który wywołuje w określonej kolekcji. Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, w którym ma być pobrana wartość minimalna."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość minimalna."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression@)
  id: Minute(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Minute(DbExpression)
  nameWithType: EdmFunctions.Minute(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Minute&quot; z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego można pobrać ciągu minuty."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracający wartość minuty liczby całkowitej z **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression@)
  id: Month(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Month(DbExpression)
  nameWithType: EdmFunctions.Month(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Month&quot; z określony argument musi być typu wyniku DateTime i DateTimeOffset. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego można pobrać miesiąca."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita miesiąca z **data**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid
  id: NewGuid
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: NewGuid()
  nameWithType: EdmFunctions.NewGuid()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;NewGuid&quot;."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca nową wartość identyfikatora GUID."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Power(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Power(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje kanonicznej funkcji &quot;Power&quot; z określonymi argumentami, które są wymagane typy wyników liczbowych. Typ wyniku wyrażenia jest taki sam jak typ wyniku **baseArgument**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);
    parameters:
    - id: baseArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość liczbową, do której zostaną podniesione do danej potęgi."
    - id: exponent
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie określające zasilania, do którego **baseArgument** powinien być wywoływany."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość **baseArgument** podniesionej do potęgi określonej przez **wykładnik**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**baseArgument** **wykładnik**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**baseArgument** **wykładnik**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Replace(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje kanonicznej funkcji &quot;Replace&quot; z określonymi argumentami, które musi mieć typ wyniku ciągu. Typ wyniku wyrażenia również jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, w którym można wykonać operacji wymiany."
    - id: toReplace
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, który zostanie zastąpiony."
    - id: replacement
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg zastępczy."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression niż zwraca nowy ciąg oparte na **stringArgument** gdzie każde wystąpienie **toReplace** zastępuje **zastępczy**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **toReplace** **zastąpienia**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument** **toReplace** **zastąpienia**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression@)
  id: Reverse(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Reverse(DbExpression)
  nameWithType: EdmFunctions.Reverse(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje kanonicznej funkcji &quot;Wycofać&quot; z określonego argumentu musi mieć typ wyniku ciągu. Typ wyniku wyrażenia również jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, aby odwrócić."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression tworzącego odwróconej wartość **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Right(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Right(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Right&quot; z określonymi argumentami, które muszą mieć string i integer wyniku numerycznego typu. Typ wyniku wyrażenia jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, z którego mają zostać wyodrębnione podciąg po prawej stronie."
    - id: length
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa długość podciągu po prawej stronie, aby wyodrębnić z **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca podciąg po prawej stronie długość **długość** z **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **długość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@)
  id: Round(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Round(DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Round&quot; z określonego argumentu musi mieć typ wyniku single, double lub decimal. Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartość**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość liczbową zostać zaokrąglona."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który powoduje zaokrąglenie do najbliższej liczby całkowitej wartości określonego argumentu."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Round(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Round&quot; określone argumenty, które musi mieć dokładnie jeden lub decimal i typy wyników liczby całkowitej. Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartość**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość liczbową zostać zaokrąglona."
    - id: digits
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa liczbę cyfr precyzji do użycia podczas zaokrąglania."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który powoduje zaokrąglenie do najbliższej wartości całkowitej, z dokładnością określoną przez określony argument **cyfr**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość** **cyfr**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość** **cyfr**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression@)
  id: Second(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Second(DbExpression)
  nameWithType: EdmFunctions.Second(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Drugi&quot; z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego można pobrać drugi."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracający wartość drugiego liczby całkowitej z **czas**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Czas**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Czas**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: StartsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.StartsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;StartsWith&quot; z określonymi argumentami, które musi mieć typ wyniku ciągu. Typ wyniku wyrażenia jest wartość logiczna."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, który jest przeszukiwany na początku ciąg **prefiks**."
    - id: prefix
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg docelowego, który jest wyszukiwany w chwili rozpoczęcia **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość Boolean wskazującą czy **stringArgument** rozpoczyna się od **prefiks**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression@)
  id: StDev(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: StDev(DbExpression)
  nameWithType: EdmFunctions.StDev(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;StDev&quot; który wywołuje w określonej kolekcji elementów członkowskich innych niż null. Typ wyniku wyrażenia jest Edm.Double."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, dla którego można obliczyć odchylenie standardowe."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, tworzącego wartość odchylenia standardowego przez inną niż null członków kolekcji."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression@)
  id: StDevP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: StDevP(DbExpression)
  nameWithType: EdmFunctions.StDevP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;StDevP&quot; który wywołuje za pośrednictwem populacji określonej kolekcji. Typ wyniku wyrażenia jest Edm.Double."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, dla którego można obliczyć odchylenie standardowe."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość odchylenia standardowego."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Substring(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje kanonicznej funkcji &quot;Substring&quot; z określonymi argumentami, które muszą mieć typy wyników liczbowych string i integer. Typ wyniku wyrażenia jest ciągiem."
  remarks: "Substring wymaga określenia indeksu przez **start** można \\<b > opartego na&1;\\</b >."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, z którego mają zostać wyodrębnione podciąg."
    - id: start
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa indeks początkowy z którego należy podjąć podciąg."
    - id: length
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa długość podciąg."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca podciąg długość **długość** z **stringArgument** zaczynając od **start**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **start** **długość**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument** **start** **długość**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression@)
  id: Sum(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Sum(DbExpression)
  nameWithType: EdmFunctions.Sum(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;Sum&quot; który wywołuje w określonej kolekcji. Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, w którym można obliczyć sumy."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie suma."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression@)
  id: ToLower(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: ToLower(DbExpression)
  nameWithType: EdmFunctions.ToLower(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;ToLower&quot; z określonego argumentu musi mieć typ wyniku ciągu. Typ wyniku wyrażenia również jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, który powinien zostać przekonwertowany na małe litery."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość **stringArgument** przekonwertowany na małe litery."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  id: ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: ToUpper(DbExpression)
  nameWithType: EdmFunctions.ToUpper(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;ToUpper&quot; z określonego argumentu musi mieć typ wyniku ciągu. Typ wyniku wyrażenia również jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, który powinny być konwertowane na wielkie litery."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość **stringArgument** przekonwertowany na wielkie litery."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression@)
  id: Trim(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Trim(DbExpression)
  nameWithType: EdmFunctions.Trim(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje kanonicznej funkcji &quot;Przycinanie&quot; z określonego argumentu musi mieć typ wyniku ciągu. Typ wyniku wyrażenia również jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, z którego początkowe i końcowe miejsca powinna zostać usunięta."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość **stringArgument** z spacji wiodących i końcowych usunięta."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  id: TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: TrimEnd(DbExpression)
  nameWithType: EdmFunctions.TrimEnd(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;RTrim&quot; z określonego argumentu musi mieć typ wyniku ciągu. Typ wyniku wyrażenia również jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, z którego spacja końcowa powinna zostać usunięta."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość **stringArgument** spacją usunięta."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  id: TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: TrimStart(DbExpression)
  nameWithType: EdmFunctions.TrimStart(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;LTrim&quot; z określonego argumentu musi mieć typ wyniku ciągu. Typ wyniku wyrażenia również jest ciągiem."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa ciąg, z którego powinny zostać usunięte spacje na początku miejsca."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość **stringArgument** prowadzącymi usunięta."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Truncate(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Truncate(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Truncate&quot; określone argumenty, które musi mieć dokładnie jeden lub dziesiętnych i typy wyników liczby całkowitej. Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartość**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość liczbową obcięcia."
    - id: digits
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa liczbę cyfr precyzji do użycia podczas obcinanie."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression skracającą określony argument do najbliższej wartości całkowitej, z dokładnością określoną przez **cyfr**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**wartość** **cyfr**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**wartość** **cyfr**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  id: TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: TruncateTime(DbExpression)
  nameWithType: EdmFunctions.TruncateTime(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;TruncateTime&quot; z określony argument musi być typu wyniku DateTime i DateTimeOffset. Typ wyniku wyrażenia jest taki sam jak typ wyniku **data**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, dla której części czasu zostaną obcięte."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, która zwraca wartość **data** z czasem ustawić na zero."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression@)
  id: Var(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Var(DbExpression)
  nameWithType: EdmFunctions.Var(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Var&quot; w określonej kolekcji elementów członkowskich innych niż null. Typ wyniku wyrażenia jest Edm.Double."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, dla którego można obliczyć wariancji statystycznych."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość wariancji statystycznych dla elementów innych niż null w kolekcji."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression@)
  id: VarP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: VarP(DbExpression)
  nameWithType: EdmFunctions.VarP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> funkcji kanonicznej &quot;VarP&quot; który wywołuje za pośrednictwem populacji określonej kolekcji. Typ wyniku wyrażenia Edm.Double."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa kolekcję, dla którego można obliczyć wariancji statystycznych."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość wariancji statystycznych."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Kolekcja**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Kolekcja**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression@)
  id: Year(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Year(DbExpression)
  nameWithType: EdmFunctions.Year(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Tworzy <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> który wywołuje funkcji kanonicznej &quot;Year&quot; z określony argument musi być typu wyniku DateTime i DateTimeOffset. Typ wyniku wyrażenia jest typem Edm.Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Wyrażenie, które określa wartość, z którego można pobrać roku."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita roku z **data**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**Data**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**Data**'
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Abs(DbExpression)
  nameWithType: EdmFunctions.Abs(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(DbExpression)
- uid: System.Data.Common.CommandTrees.DbFunctionExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionExpression
  nameWithType: DbFunctionExpression
  fullName: System.Data.Common.CommandTrees.DbFunctionExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Average(DbExpression)
  nameWithType: EdmFunctions.Average(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseAnd(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseNot(DbExpression)
  nameWithType: EdmFunctions.BitwiseNot(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseOr(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseOr(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseXor(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseXor(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Ceiling(DbExpression)
  nameWithType: EdmFunctions.Ceiling(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Concat(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Concat(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Contains(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Contains(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Count(DbExpression)
  nameWithType: EdmFunctions.Count(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateTime(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTime()
  nameWithType: EdmFunctions.CurrentDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTimeOffset()
  nameWithType: EdmFunctions.CurrentDateTimeOffset()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentUtcDateTime()
  nameWithType: EdmFunctions.CurrentUtcDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Day(DbExpression)
  nameWithType: EdmFunctions.Day(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DayOfYear(DbExpression)
  nameWithType: EdmFunctions.DayOfYear(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: EndsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.EndsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Floor(DbExpression)
  nameWithType: EdmFunctions.Floor(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: GetTotalOffsetMinutes(DbExpression)
  nameWithType: EdmFunctions.GetTotalOffsetMinutes(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Hour(DbExpression)
  nameWithType: EdmFunctions.Hour(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: IndexOf(DbExpression,DbExpression)
  nameWithType: EdmFunctions.IndexOf(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Left(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Left(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Length(DbExpression)
  nameWithType: EdmFunctions.Length(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: LongCount(DbExpression)
  nameWithType: EdmFunctions.LongCount(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Max(DbExpression)
  nameWithType: EdmFunctions.Max(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Millisecond(DbExpression)
  nameWithType: EdmFunctions.Millisecond(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Min(DbExpression)
  nameWithType: EdmFunctions.Min(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Minute(DbExpression)
  nameWithType: EdmFunctions.Minute(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Month(DbExpression)
  nameWithType: EdmFunctions.Month(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: NewGuid()
  nameWithType: EdmFunctions.NewGuid()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Power(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Power(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Replace(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Reverse(DbExpression)
  nameWithType: EdmFunctions.Reverse(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Right(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Right(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Round(DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Round(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Second(DbExpression)
  nameWithType: EdmFunctions.Second(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StartsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.StartsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDev(DbExpression)
  nameWithType: EdmFunctions.StDev(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDevP(DbExpression)
  nameWithType: EdmFunctions.StDevP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Substring(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Sum(DbExpression)
  nameWithType: EdmFunctions.Sum(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToLower(DbExpression)
  nameWithType: EdmFunctions.ToLower(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToUpper(DbExpression)
  nameWithType: EdmFunctions.ToUpper(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Trim(DbExpression)
  nameWithType: EdmFunctions.Trim(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimEnd(DbExpression)
  nameWithType: EdmFunctions.TrimEnd(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimStart(DbExpression)
  nameWithType: EdmFunctions.TrimStart(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Truncate(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Truncate(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TruncateTime(DbExpression)
  nameWithType: EdmFunctions.TruncateTime(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Var(DbExpression)
  nameWithType: EdmFunctions.Var(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: VarP(DbExpression)
  nameWithType: EdmFunctions.VarP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Year(DbExpression)
  nameWithType: EdmFunctions.Year(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Abs
  nameWithType: EdmFunctions.Abs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddDays
  nameWithType: EdmFunctions.AddDays
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddHours
  nameWithType: EdmFunctions.AddHours
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMicroseconds
  nameWithType: EdmFunctions.AddMicroseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMilliseconds
  nameWithType: EdmFunctions.AddMilliseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMinutes
  nameWithType: EdmFunctions.AddMinutes
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMonths
  nameWithType: EdmFunctions.AddMonths
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddNanoseconds
  nameWithType: EdmFunctions.AddNanoseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddSeconds
  nameWithType: EdmFunctions.AddSeconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddYears
  nameWithType: EdmFunctions.AddYears
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Average
  nameWithType: EdmFunctions.Average
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseAnd
  nameWithType: EdmFunctions.BitwiseAnd
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseNot
  nameWithType: EdmFunctions.BitwiseNot
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseOr
  nameWithType: EdmFunctions.BitwiseOr
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseXor
  nameWithType: EdmFunctions.BitwiseXor
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Ceiling
  nameWithType: EdmFunctions.Ceiling
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Concat
  nameWithType: EdmFunctions.Concat
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Contains
  nameWithType: EdmFunctions.Contains
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Count
  nameWithType: EdmFunctions.Count
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTime
  nameWithType: EdmFunctions.CreateDateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTimeOffset
  nameWithType: EdmFunctions.CreateDateTimeOffset
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateTime
  nameWithType: EdmFunctions.CreateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTime
  nameWithType: EdmFunctions.CurrentDateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTimeOffset
  nameWithType: EdmFunctions.CurrentDateTimeOffset
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentUtcDateTime
  nameWithType: EdmFunctions.CurrentUtcDateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Day
  nameWithType: EdmFunctions.Day
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DayOfYear
  nameWithType: EdmFunctions.DayOfYear
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffDays
  nameWithType: EdmFunctions.DiffDays
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffHours
  nameWithType: EdmFunctions.DiffHours
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMicroseconds
  nameWithType: EdmFunctions.DiffMicroseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMilliseconds
  nameWithType: EdmFunctions.DiffMilliseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMinutes
  nameWithType: EdmFunctions.DiffMinutes
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMonths
  nameWithType: EdmFunctions.DiffMonths
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffNanoseconds
  nameWithType: EdmFunctions.DiffNanoseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffSeconds
  nameWithType: EdmFunctions.DiffSeconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffYears
  nameWithType: EdmFunctions.DiffYears
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: EndsWith
  nameWithType: EdmFunctions.EndsWith
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Floor
  nameWithType: EdmFunctions.Floor
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: GetTotalOffsetMinutes
  nameWithType: EdmFunctions.GetTotalOffsetMinutes
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Hour
  nameWithType: EdmFunctions.Hour
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: IndexOf
  nameWithType: EdmFunctions.IndexOf
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Left
  nameWithType: EdmFunctions.Left
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Length
  nameWithType: EdmFunctions.Length
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: LongCount
  nameWithType: EdmFunctions.LongCount
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Max
  nameWithType: EdmFunctions.Max
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Millisecond
  nameWithType: EdmFunctions.Millisecond
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Min
  nameWithType: EdmFunctions.Min
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Minute
  nameWithType: EdmFunctions.Minute
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Month
  nameWithType: EdmFunctions.Month
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: NewGuid
  nameWithType: EdmFunctions.NewGuid
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Power
  nameWithType: EdmFunctions.Power
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Replace
  nameWithType: EdmFunctions.Replace
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Reverse
  nameWithType: EdmFunctions.Reverse
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Right
  nameWithType: EdmFunctions.Right
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Round
  nameWithType: EdmFunctions.Round
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Second
  nameWithType: EdmFunctions.Second
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StartsWith
  nameWithType: EdmFunctions.StartsWith
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDev
  nameWithType: EdmFunctions.StDev
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDevP
  nameWithType: EdmFunctions.StDevP
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Substring
  nameWithType: EdmFunctions.Substring
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Sum
  nameWithType: EdmFunctions.Sum
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToLower
  nameWithType: EdmFunctions.ToLower
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToUpper
  nameWithType: EdmFunctions.ToUpper
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Trim
  nameWithType: EdmFunctions.Trim
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimEnd
  nameWithType: EdmFunctions.TrimEnd
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimStart
  nameWithType: EdmFunctions.TrimStart
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Truncate
  nameWithType: EdmFunctions.Truncate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TruncateTime
  nameWithType: EdmFunctions.TruncateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Var
  nameWithType: EdmFunctions.Var
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: VarP
  nameWithType: EdmFunctions.VarP
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Year
  nameWithType: EdmFunctions.Year
