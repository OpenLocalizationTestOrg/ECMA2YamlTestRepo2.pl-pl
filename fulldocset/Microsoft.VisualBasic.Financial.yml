### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "<xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref> Moduł zawiera procedury używany do wykonywania operacji finansowych."
  remarks: "Ten moduł obsługuje elementy członkowskie biblioteki wykonawczej języka Visual Basic, wykonujących obliczeń finansowych, takich jak amortyzacji, obecne i przyszłe wartości, odsetek, return i płatności."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określenie amortyzację środka trwałego w określonym przedziale czasu przy użyciu metody amortyzacji dwukrotnie przyspieszonej lub innej metody, należy określić."
  remarks: "Metody amortyzacji dwukrotnie przyspieszonej oblicza amortyzacji w sposób przyspieszony. Amortyzacja najwyższe w pierwszym okresie i zmniejsza kolejnych okresów.       `Life` i `Period` argumenty muszą być wyrażone w tej samej jednostki. Na przykład jeśli `Life` znajduje się w miesiącach `Period` musi mieć też w miesiącach. Wszystkie argumenty muszą być liczbami dodatnimi.       `DDB` Funkcja używa następującej formuły można obliczyć amortyzacji dla danego okresu: amortyzacji / okres = ((Cost – Salvage) * współczynnik) / życia"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie koszt początkowy środka trwałego."
    - id: Salvage
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie wartość środka trwałego na końcu okresu eksploatacji."
    - id: Life
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>określający długość okresu eksploatacji środka trwałego."
    - id: Period
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie dla zasobów, która jest obliczana amortyzacja środka okresu."
    - id: Factor
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>określającą stopę zmniejsza się saldo. Pominięcie przyjęto 2 (metoda dwukrotnie przyspieszonej)."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określenie amortyzację środka trwałego w określonym przedziale czasu przy użyciu metody amortyzacji dwukrotnie przyspieszonej lub innej metody, należy określić."
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą przyszłą wartość renty wieczystej w oparciu o okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  remarks: "Renty wieczystej jest szereg środków pieniężnych płatności w czasie. Renty wieczystej może być pożyczki (na przykład hipoteką) lub inwestycji (na przykład miesięczne plan oszczędności).       `Rate` i `NPer` argumenty muszą zostać obliczone przy użyciu okresów płatności wyrażone w tej samej jednostki. Na przykład jeśli `Rate` jest obliczana przy użyciu miesięcy, `NPer` również muszą zostać obliczone przy użyciu miesięcy.       W przypadku wszystkich argumentów gotówkowych poniesionych (na przykład depozyty oszczędności) jest reprezentowana przez ujemne; gotówkowych odebranych (takich jak sprawdzanie dzielna) jest liczbą dodatnią."
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie stopę procentową w zadanym okresie. Na przykład jeśli pobrać samochód o rocznej stopy procentowej (kwietnia) 10 procent i miesięczne płatności, częstotliwość okresu jest 0,1/12 lub 0,0083."
    - id: NPer
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie łączna liczba okresów płatności w pożyczki. Na przykład jeśli pożyczki samochód miesięczne płatności, wynosi łączną liczbę okresów płatności 4 x 12 (lub 48)."
    - id: Pmt
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie płatności dokonywane każdego okresu. Płatności zawierają zwykle podmiot zabezpieczeń i odsetek, która nie ulega zmianie przez cały okres pożyczki."
    - id: PV
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie wartość lub całkowita suma serii przyszłych płatności. Na przykład jeśli pożyczki na zakup samochodu, kwoty pożyczki jest wartością bieżącą pożyczkodawcy miesięczne płatności samochodu, które należy podjąć. Jeśli pominięta, przyjmowana jest wartość 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcjonalny. Typ obiektu <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> Określa, kiedy ma miejsce płatności. Ten argument musi być albo <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> płatność przypada na koniec okresu płatności lub <xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;> </xref> płatność przypada na początku okresu. Pominięcie <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> zakłada, że."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą przyszłą wartość renty wieczystej w oparciu o okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą płatności odsetkowe dla danego okresu renty wieczystej w oparciu o okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  remarks: "Renty wieczystej jest szereg środków pieniężnych płatności w czasie. Renty wieczystej może być pożyczki (na przykład hipoteką) lub inwestycji (na przykład miesięczne plan oszczędności).       `Rate` i `NPer` argumenty muszą zostać obliczone przy użyciu okresów płatności wyrażone w tej samej jednostki. Na przykład jeśli `Rate` jest obliczana przy użyciu miesięcy, `NPer` również muszą zostać obliczone przy użyciu miesięcy.       W przypadku wszystkich argumentów gotówkowych poniesionych (na przykład depozyty oszczędności) jest reprezentowana przez ujemne; gotówkowych odebranych (takich jak sprawdzanie dzielna) jest liczbą dodatnią."
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie stopę procentową w zadanym okresie. Na przykład jeśli pobrać samochód o rocznej stopy procentowej (kwietnia) 10 procent i miesięczne płatności, częstotliwość okresu jest 0,1/12 lub 0,0083."
    - id: Per
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie termin płatności w zakresie od 1 do `NPer`."
    - id: NPer
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie łączna liczba okresów płatności w pożyczki. Na przykład jeśli pożyczki samochód miesięczne płatności, wynosi łączną liczbę okresów płatności 4 x 12 (lub 48)."
    - id: PV
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>określenie występuje wartość lub wartości w obecnie serii przyszłych płatności. Na przykład jeśli pożyczki na zakup samochodu, kwoty pożyczki jest wartością bieżącą pożyczkodawcy miesięczne płatności samochodu, które należy podjąć."
    - id: FV
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie przyszłą wartość lub który chcesz po utworzeniu ostatniej płatności. Na przykład przyszłą wartość pożyczki to $0, ponieważ jest to wartość po ostatecznej płatności. Jednak jeśli chcesz zapisać $ 50 000 przez 18 lat na wykształcenie dziecka, 50 000 $ jest przyszłą wartość. Jeśli pominięta, przyjmowana jest wartość 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcjonalny. Typ obiektu <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> Określa, kiedy ma miejsce płatności. Ten argument musi być albo `DueDate.EndOfPeriod` płatność przypada na koniec okresu płatności lub `DueDate.BegOfPeriod` płatność przypada na początku okresu. Pominięcie `DueDate.EndOfPeriod` zakłada, że."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą płatności odsetkowe dla danego okresu renty wieczystej w oparciu o okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą wewnętrzną stopę zwrotu dla serii okresowych przepływów pieniężnych (płatności i wpływów)."
  remarks: "Wewnętrzną stopę zwrotu jest stopie procentowej odebranych z inwestycji składającej się z płatności i wpływów, które w regularnych odstępach czasu.       `IRR` Funkcja interpretować kolejność płatności i wpływów kolejność wartości w tablicy. Należy wprowadzić płatności i przyjęcie wartości w odpowiedniej kolejności. Przepływów pieniężnych dla każdego okresu nie trzeba stałej, podobnie jak w przypadku renty wieczystej.       `IRR`jest obliczana na podstawie iteracji. Począwszy od wartości `Guess`, `IRR` cykle obliczenia do chwili osiągnięcia wyniku z dokładnością do 0,00001%. Jeśli `IRR` nie można odnaleźć wyniku po 20 próbuje, działanie nie powiodło się."
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Wymagany. Tablica <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określania wartości przepływów gotówkowych. Tablica musi zawierać co najmniej jedną wartość ujemną (płatność) i jedną wartość dodatnią (dochód)."
    - id: Guess
      type: System.Double
      description: "Opcjonalny. Obiekt, określając wartość oceniasz zostaną zwrócone przez <xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;> </xref>. Pominięcie `Guess` jest 0,1 (10%)."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą wewnętrzną stopę zwrotu dla serii okresowych przepływów pieniężnych (płatności i wpływów)."
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tablica wartości argumentów są nieprawidłowe lub <code> Guess </code> &lt;= -1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określenie zmodyfikowane wewnętrzną stopę zwrotu dla serii okresowych przepływów pieniężnych (płatności i wpływów)."
  remarks: "Skorygowaną wewnętrzną stopę zwrotu jest wewnętrzną stopę zwrotu, gdy płatności i wpływów finansowanymi w różnym tempie. `MIRR` Funkcja bierze pod uwagę koszt inwestycji (`FinanceRate`) oraz stopy procentowej uzyskany z ponownego zainwestowania środków pieniężnych (`ReinvestRate`).       `FinanceRate` i `ReinvestRatearguments` wyrażone jako dziesiętne wartości procentowe. Na przykład wartość procentowa 12 jest wyrażona jako 0.12.       `MIRR` Funkcja interpretować kolejność płatności i wpływów kolejność wartości w tablicy. Należy wprowadzić płatności i przyjęcie wartości w odpowiedniej kolejności."
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Wymagany. Tablica <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określania wartości przepływów gotówkowych. Tablica musi zawierać co najmniej jedną wartość ujemną (płatność) i jedną wartość dodatnią (dochód)."
    - id: FinanceRate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie stopy procentowej płatnej kosztem finansowych."
    - id: ReinvestRate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie stopy procentowej na z reinwestycji pieniężnych odebrane."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określenie zmodyfikowane wewnętrzną stopę zwrotu dla serii okresowych przepływów pieniężnych (płatności i wpływów)."
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "Wystąpiło dzielenie przez zero."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą liczbę okresów renty wieczystej w oparciu okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  remarks: "Renty wieczystej jest szereg środków pieniężnych płatności w danym okresie czasu. Renty wieczystej może być pożyczki (na przykład hipoteką) lub inwestycji (na przykład miesięczne plan oszczędności).       W przypadku wszystkich argumentów gotówkowych poniesionych (na przykład depozyty oszczędności) jest reprezentowana przez ujemne; gotówkowych odebranych (takich jak sprawdzanie dzielna) jest liczbą dodatnią."
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie stopę procentową w zadanym okresie. Na przykład jeśli pobrać samochód o rocznej stopy procentowej (kwietnia) 10 procent i miesięczne płatności, częstotliwość okresu jest 0,1/12 lub 0,0083."
    - id: Pmt
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie płatności dokonywane każdego okresu. Płatności zawierają zwykle podmiot zabezpieczeń i odsetek, który nie ulega zmianie przez cały okres pożyczki."
    - id: PV
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>określenie występuje wartość lub wartości w obecnie serii przyszłych płatności. Na przykład jeśli pożyczki na zakup samochodu, kwoty pożyczki jest wartością bieżącą pożyczkodawcy miesięczne płatności samochodu, które należy podjąć."
    - id: FV
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie przyszłą wartość lub który po dokonaniu ostatniej płatności. Na przykład przyszłą wartość pożyczki to $0, ponieważ jest to wartość po ostatecznej płatności. Jednak jeśli chcesz zapisać $ 50 000 przez 18 lat na wykształcenie dziecka, 50 000 $ jest przyszłą wartość. Jeśli pominięta, przyjmowana jest wartość 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcjonalny. Typ obiektu <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> Określa, kiedy ma miejsce płatności. Ten argument musi być albo `DueDate.EndOfPeriod` płatność przypada na koniec okresu płatności lub `DueDate.BegOfPeriod` płatność przypada na początku okresu. Pominięcie `DueDate.EndOfPeriod` zakłada, że."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą liczbę okresów renty wieczystej w oparciu okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> podstawie określenie wartość bieżącą netto inwestycji dla serii okresowych przepływów pieniężnych (płatności i wpływów) oraz stopy dyskontowej."
  remarks: "Wartość bieżącą netto inwestycji to aktualna wartość serii przyszłych płatności i wpływów.       `NPV` Funkcja interpretować kolejność płatności i wpływów kolejność wartości w tablicy. Należy wprowadzić płatności i przyjęcie wartości w odpowiedniej kolejności.       `NPV` Inwestycji rozpoczyna się jeden okres przed datą pierwsza wartość przepływów pieniężnych i kończy ostatnią wartość przepływów pieniężnych w tablicy.       Obliczenie aktualnej wartości netto jest oparta na przyszłych przepływów gotówkowych. Jeśli pierwszy przepływ występuje na początku pierwszego okresu, pierwsza wartość należy dodać do wartości zwracanej przez `NPV` i nie może być uwzględniony w wartościach pieniężnych `ValueArray`.       `NPV` Funkcja przypomina `PV` — funkcja (wartość obecna) z wyjątkiem `PV` dzięki funkcji przepływów gotówkowych rozpocząć, albo na końcu lub początku okresu. W przeciwieństwie do zmiennej `NPV` wartości przepływów gotówkowych `PV` przepływów gotówkowych muszą być ustalone w okresie inwestycji."
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie taryfy rabatowej na długość okresu, wyrażone jako wartości dziesiętnej."
    - id: ValueArray
      type: System.Double[]
      description: "Wymagany. Tablica <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określania wartości przepływów gotówkowych. Tablica musi zawierać co najmniej jedną wartość ujemną (płatność) i jedną wartość dodatnią (dochód)."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> podstawie określenie wartość bieżącą netto inwestycji dla serii okresowych przepływów pieniężnych (płatności i wpływów) oraz stopy dyskontowej."
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą płatność renty wieczystej w oparciu okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  remarks: "Renty wieczystej jest szereg środków pieniężnych płatności w okresie czasu. Renty wieczystej może być pożyczki (na przykład hipoteką) lub inwestycji (na przykład miesięczne plan oszczędności).       `Rate` i `NPer` argumenty muszą zostać obliczone przy użyciu okresów płatności wyrażone w tej samej jednostki. Na przykład jeśli `Rate` jest obliczana przy użyciu miesięcy, `NPer` również muszą zostać obliczone przy użyciu miesięcy.       W przypadku wszystkich argumentów gotówkowych płatną (na przykład depozyty oszczędności) jest reprezentowana przez ujemne; gotówkowych odebranych (takich jak sprawdzanie dzielna) jest liczbą dodatnią."
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa stopę procentową w zadanym okresie. Na przykład jeśli pobrać samochód o rocznej stopy procentowej (kwietnia) 10 procent i miesięczne płatności, częstotliwość okresu jest 0,1/12 lub 0,0083."
    - id: NPer
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa łączna liczba okresów płatności w pożyczki. Na przykład jeśli pożyczki samochód miesięczne płatności, wynosi łączną liczbę okresów płatności 4 x 12 (lub 48)."
    - id: PV
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa się wartości (lub całkowita suma) czy serii płatności, które mają zostać zapłacone w przyszłości warto teraz. Na przykład jeśli pożyczki na zakup samochodu, kwoty pożyczki jest wartością bieżącą pożyczkodawcy miesięczne płatności samochodu, które należy podjąć."
    - id: FV
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie przyszłą wartość lub który po dokonaniu ostatniej płatności. Na przykład przyszłą wartość pożyczki to $0, ponieważ jest to wartość po ostatecznej płatności. Jednak jeśli chcesz zapisać $ 50 000 latach 18 dla instytucji edukacyjnych dziecka, 50 000 $ jest przyszłą wartość. Jeśli pominięta, przyjmowana jest wartość 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcjonalny. Typ obiektu <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> Określa, kiedy ma miejsce płatności. Ten argument musi być albo `DueDate.EndOfPeriod` płatność przypada na koniec okresu płatności lub `DueDate.BegOfPeriod` płatność przypada na początku okresu. Pominięcie `DueDate.EndOfPeriod` zakłada, że."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą płatność renty wieczystej w oparciu okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą spłatę kapitału dla danego okresu renty wieczystej w oparciu o okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  remarks: "Renty wieczystej jest szereg środków pieniężnych płatności w danym okresie czasu. Renty wieczystej może być pożyczki (na przykład hipoteką) lub inwestycji (na przykład miesięczne plan oszczędności).       `Rate` i `NPer` argumenty muszą zostać obliczone przy użyciu okresów płatności wyrażone w tej samej jednostki. Na przykład jeśli `Rate` jest obliczana przy użyciu miesięcy, `NPer` również muszą zostać obliczone przy użyciu miesięcy.       W przypadku wszystkich argumentów gotówkowych płatną (na przykład depozyty oszczędności) jest reprezentowana przez ujemne; gotówkowych odebranych (takich jak sprawdzanie dzielna) jest liczbą dodatnią."
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa stopę procentową w zadanym okresie. Na przykład jeśli pobrać samochód o rocznej stopy procentowej (kwietnia) 10 procent i miesięczne płatności, częstotliwość okresu jest 0,1/12 lub 0,0083."
    - id: Per
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa okres płatności w zakresie od 1 do `NPer`."
    - id: NPer
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa łączna liczba okresów płatności w pożyczki. Na przykład jeśli pożyczki samochód miesięczne płatności, wynosi łączną liczbę okresów płatności 4 x 12 (lub 48)."
    - id: PV
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa bieżącą wartość serii przyszłych płatności. Na przykład jeśli pożyczki na zakup samochodu, kwoty pożyczki jest wartością bieżącą pożyczkodawcy miesięczne płatności samochodu, które należy podjąć."
    - id: FV
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie przyszłą wartość lub który po dokonaniu ostatniej płatności. Na przykład przyszłą wartość pożyczki to $0, ponieważ jest to wartość po ostatecznej płatności. Jednak jeśli chcesz zapisać $ 50 000 przez 18 lat na wykształcenie dziecka, 50 000 $ jest przyszłą wartość. Jeśli pominięta, przyjmowana jest wartość 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcjonalny. Typ obiektu <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> Określa, kiedy ma miejsce płatności. Ten argument musi być albo `DueDate.EndOfPeriod` płatność przypada na koniec okresu płatności lub `DueDate.BegOfPeriod` płatność przypada na początku okresu. Pominięcie `DueDate.EndOfPeriod` zakłada, że."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą spłatę kapitału dla danego okresu renty wieczystej w oparciu o okresowe płatności w stałej kwocie i przy stałej stopie procentowej."
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą bieżącą wartość renty wieczystej w oparciu o okresowe płatności w stałej kwocie mają zostać zapłacone w przyszłości i przy stałej stopie procentowej."
  remarks: "Renty wieczystej jest szereg środków pieniężnych płatności w danym okresie czasu. Renty wieczystej może być pożyczki (na przykład hipoteką) lub inwestycji (na przykład miesięczne plan oszczędności).       `Rate` i `NPer` argumenty muszą zostać obliczone przy użyciu okresów płatności wyrażone w tej samej jednostki. Na przykład jeśli `Rate` jest obliczana przy użyciu miesięcy, `NPer` również muszą zostać obliczone przy użyciu miesięcy.       W przypadku wszystkich argumentów gotówkowych poniesionych (na przykład depozyty oszczędności) jest reprezentowana przez ujemne; gotówkowych odebranych (takich jak sprawdzanie dzielna) jest liczbą dodatnią."
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa stopę procentową w zadanym okresie. Na przykład jeśli pobrać samochód o rocznej stopy procentowej (kwietnia) 10 procent i miesięczne płatności, częstotliwość okresu jest 0,1/12 lub 0,0083."
    - id: NPer
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa łączna liczba okresów płatności w pożyczki. Na przykład jeśli pożyczki samochód miesięczne płatności, wynosi 4 x 12 (lub 48) okresów płatności."
    - id: Pmt
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa dokonanie każdego okresu płatności. Płatności zawierają zwykle podmiot zabezpieczeń i odsetek, który nie ulega zmianie podczas trwania pożyczki."
    - id: FV
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa przyszłą wartość lub saldo, po wprowadzeniu ostatecznej płatności. Na przykład przyszłą wartość pożyczki to $0, ponieważ jest to wartość po ostatecznej płatności. Jednak jeśli chcesz zapisać $ 50 000 przez 18 lat na wykształcenie dziecka, 50 000 $ jest przyszłą wartość. Jeśli pominięta, przyjmowana jest wartość 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcjonalny. Typ obiektu <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> Określa, kiedy ma miejsce płatności. Ten argument musi być albo `DueDate.EndOfPeriod` płatność przypada na koniec okresu płatności lub `DueDate.BegOfPeriod` płatność przypada na początku okresu. Pominięcie `DueDate.EndOfPeriod` zakłada, że."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą bieżącą wartość renty wieczystej w oparciu o okresowe płatności w stałej kwocie mają zostać zapłacone w przyszłości i przy stałej stopie procentowej."
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określenie stopę procentową w zadanym okresie renty wieczystej."
  remarks: "Renty wieczystej jest szereg środków pieniężnych płatności w danym okresie czasu. Renty wieczystej może być pożyczki (na przykład hipoteką) lub inwestycji (na przykład miesięczne plan oszczędności).       W przypadku wszystkich argumentów gotówkowych poniesionych (na przykład depozyty oszczędności) jest reprezentowana przez ujemne; gotówkowych odebranych (takich jak sprawdzanie dzielna) jest liczbą dodatnią.       `Rate`jest obliczana na podstawie iteracji. Począwszy od wartości `Guess`, `Rate` cykle obliczenia do chwili osiągnięcia wyniku z dokładnością do 0,00001%. Jeśli `Rate` nie można odnaleźć wyniku po 20 próbuje, działanie nie powiodło się. Jeśli szacowana wartość wynosi 10 procent i `Rate` nie powiedzie się, spróbuj inną wartość dla `Guess`."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa łączna liczba okresów płatności w pożyczki. Na przykład jeśli pożyczki samochód miesięczne płatności, wynosi łączną liczbę okresów płatności 4 * 12 (lub 48)."
    - id: Pmt
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa dokonanie każdego okresu płatności. Płatności zawierają zwykle podmiot zabezpieczeń i odsetek, która nie ulega zmianie przez cały okres pożyczki."
    - id: PV
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa bieżącej wartości lub wartości w obecnie serii przyszłych płatności. Na przykład jeśli pożyczki na zakup samochodu, kwoty pożyczki jest wartością bieżącą pożyczkodawcy miesięczne płatności samochodu, które należy podjąć."
    - id: FV
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określa przyszłą wartość lub saldo, po wprowadzeniu ostatecznej płatności. Na przykład przyszłą wartość pożyczki to $0, ponieważ jest to wartość po ostatecznej płatności. Jednak jeśli chcesz zapisać $ 50 000 przez 18 lat na wykształcenie dziecka, 50 000 $ jest przyszłą wartość. Jeśli pominięta, przyjmowana jest wartość 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcjonalny. Typ obiektu <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> Określa, kiedy ma miejsce płatności. Ten argument musi być albo `DueDate.EndOfPeriod` płatność przypada na koniec okresu płatności lub `DueDate.BegOfPeriod` płatność przypada na początku okresu. Pominięcie `DueDate.EndOfPeriod` zakłada, że."
    - id: Guess
      type: System.Double
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>określenie wartości oceniasz, jest zwracany przez <xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;> </xref>. Pominięcie `Guess` jest 0,1 (10%)."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określenie stopę procentową w zadanym okresie renty wieczystej."
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą amortyzację liniową środka trwałego dla jednego okresu."
  remarks: "Okres amortyzacji muszą być wyrażone w tej samej jednostce jako `Life` argumentu. Wszystkie argumenty muszą być liczbami dodatnimi."
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie koszt początkowy środka trwałego."
    - id: Salvage
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie wartość środka trwałego na końcu okresu eksploatacji."
    - id: Life
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie długość okresu eksploatacji środka trwałego."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> określającą amortyzację liniową środka trwałego dla jednego okresu."
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> Określanie cyfr sumę lat amortyzację środka trwałego za podany okres."
  remarks: "`Life` i `Period` argumenty muszą być wyrażone w tej samej jednostki. Na przykład jeśli `Life` znajduje się w miesiącach `Period` musi mieć też w miesiącach. Wszystkie argumenty muszą być liczbami dodatnimi."
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie koszt początkowy środka trwałego."
    - id: Salvage
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie wartość środka trwałego na końcu okresu eksploatacji."
    - id: Life
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie długość okresu eksploatacji środka trwałego."
    - id: Period
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Określanie czasu dla zasobu, która jest obliczana amortyzacja środka."
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> Określanie cyfr sumę lat amortyzację środka trwałego za podany okres."
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
