### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.MultiBinding
  id: MultiBinding
  children:
  - System.Windows.Data.MultiBinding.#ctor
  - System.Windows.Data.MultiBinding.Bindings
  - System.Windows.Data.MultiBinding.Converter
  - System.Windows.Data.MultiBinding.ConverterCulture
  - System.Windows.Data.MultiBinding.ConverterParameter
  - System.Windows.Data.MultiBinding.Mode
  - System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  - System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  - System.Windows.Data.MultiBinding.NotifyOnValidationError
  - System.Windows.Data.MultiBinding.ShouldSerializeBindings
  - System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  - System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  - System.Windows.Data.MultiBinding.UpdateSourceTrigger
  - System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  - System.Windows.Data.MultiBinding.ValidatesOnExceptions
  - System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  - System.Windows.Data.MultiBinding.ValidationRules
  langs:
  - csharp
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
  type: Class
  summary: "Opisuje kolekcję <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> obiektów dołączona do właściwości docelowej jednego powiązania."
  remarks: "Można określić wiele powiązań z obiektu MultiBinding. Gdy używasz obiektu MultiBinding za pomocą konwertera tworzy końcowej dla powiązania obiektu docelowego, na podstawie wartości tych powiązań. Na przykład kolor jest obliczana na podstawie wartości czerwona, niebieska i zielony, które mogą być wartościami z tego samego lub innego powiązania obiekty źródła. Jeśli wartość jest przenoszony z docelowej do źródeł, wartość właściwości docelowa jest translacji na zbiór wartości, które są podawane do powiązania.       Wartości <xref:System.Windows.Data.MultiBinding.Mode%2A>i <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>Właściwości określenie funkcjonalności MultiBinding i są używane jako wartości domyślne dla wszystkie powiązania w kolekcji, chyba że poszczególnych powiązanie przesłania tych właściwości.</xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.MultiBinding.Mode%2A> Na przykład jeśli <xref:System.Windows.Data.MultiBinding.Mode%2A>ma ustawioną właściwość obiektu MultiBinding <xref:System.Windows.Data.BindingMode>, następnie wszystkie powiązania w kolekcji są traktowane jako <xref:System.Windows.Data.BindingMode>, chyba że ustawisz inną <xref:System.Windows.Data.MultiBinding.Mode%2A>wartości na jednym z powiązań jawnie.</xref:System.Windows.Data.MultiBinding.Mode%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding.Mode%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>i <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>Właściwości.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>       MultiBinding aktualnie obsługuje tylko obiekty typu <xref:System.Windows.Data.Binding>i nie MultiBinding lub <xref:System.Windows.Data.PriorityBinding>.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Bindings")]

      public class MultiBinding : System.Windows.Data.BindingBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: MultiBinding()
  nameWithType: MultiBinding.MultiBinding()
  fullName: System.Windows.Data.MultiBinding.MultiBinding()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> klasy."
  syntax:
    content: public MultiBinding ();
    parameters: []
  overload: System.Windows.Data.MultiBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Bindings
  id: Bindings
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> obiektów w tym <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> wystąpienia."
  remarks: "> [!NOTE]> Tej właściwości można ustawić w [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] tylko przy użyciu składni, która jest wyświetlana lub uzyskiwania dostępu do obiektu kolekcji i przy użyciu jego różnych metod, takich jak `Add`. Właściwość używana do dostępu do obiektu kolekcji jest tylko do odczytu, w kolekcji jest odczytu/zapisu.      <a name=&quot;xamlPropertyElementUsage_Bindings&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     oneOrMoreBindings   </object>      ``` <a name=&quot;xamlValues_Bindings&quot;> </a> ## wartości XAML *oneOrMoreBindings* co najmniej jeden <xref:System.Windows.Data.Binding>obiektów.</xref:System.Windows.Data.Binding>      "
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingBase> Bindings { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
      description: "Kolekcja <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> obiektów. <xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>aktualnie obsługuje tylko obiekty typu <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> i nie <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> lub <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>. Dodawanie <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> dziecka <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> obiektu niejawnie dodaje dziecko <xref href=&quot;System.Windows.Data.BindingBase&quot;> </xref> kolekcji dla <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> obiektu."
  overload: System.Windows.Data.MultiBinding.Bindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Converter
  id: Converter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia konwerter do konwersji wartości źródła do lub z wartością docelową."
  remarks: "Poszczególne powiązania w kolekcji może mieć własne wartości <xref:System.Windows.Data.Binding.Converter%2A>.</xref:System.Windows.Data.Binding.Converter%2A> Aby uzyskać więcej informacji zobacz <xref:System.Windows.Data.IValueConverter>.</xref:System.Windows.Data.IValueConverter>      <a name=&quot;xamlAttributeUsage_Converter&quot;></a>## Użycie atrybutu XAML ```   <object Converter=&quot;myConverter&quot;/>   ``` <a name=&quot;xamlValues_Converter&quot;> </a> ## wartości XAML *myConverter* zasobów odwołanie do klasy, która implementuje <xref:System.Windows.Data.IMultiValueConverter>interfejsu, który zawiera implementacje <xref:System.Windows.Data.IMultiValueConverter.Convert%2A>i <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>metody.</xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IMultiValueConverter.Convert%2A> </xref:System.Windows.Data.IMultiValueConverter>       Aby odwołać się do konwerter wartości, należy użyć [rozszerzenia znaczników i WPF XAML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.IMultiValueConverter Converter { get; set; }
    return:
      type: System.Windows.Data.IMultiValueConverter
      description: "Wartości typu <xref href=&quot;System.Windows.Data.IMultiValueConverter&quot;> </xref> wskazujące konwertera do użycia. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia <xref:System.Globalization.CultureInfo>obiekt, który ma zastosowanie do dowolnego konwertera przypisany do powiązania opakowane przez <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> lub na <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> samej siebie.</xref:System.Globalization.CultureInfo>"
  remarks: "<a name=&quot;xamlAttributeUsage_ConverterCulture&quot;></a>## Użycie atrybutu XAML ```   <object ConverterCulture=&quot;ietfLanguageTag&quot;/>   ``` <a name=&quot;xamlValues_ConverterCulture&quot;> </a> ## wartości XAML *znacznikiem ietfLanguageTag* ciąg używany do ustawiania <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>       Ten ciąg jest używany do wywołania wewnętrznie. <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>.</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> Aby uzyskać więcej informacji na temat formatu ciągu zobacz <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName>"
  syntax:
    content: public System.Globalization.CultureInfo ConverterCulture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "Nieprawidłowa <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Data.MultiBinding.ConverterCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia opcjonalny parametr do przekazania do konwertera jako dodatkowe informacje."
  remarks: "<a name=&quot;xamlPropertyElementUsage_ConverterParameter&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.ConverterParameter>       converterParameter     </object.ConverterParameter>   </object>   ``` <a name=&quot;xamlAttributeUsage_ConverterParameter&quot;> </a> ## użycie atrybutu XAML ```   <object property=&quot;converterParameter&quot; />   ``` <a name=&quot;xamlValues_ConverterParameter&quot;> </a> ## wartości XAML *converterParameter* wartości na typ oczekiwany przez konwerter, która może być element obiektu lub ciągiem w zależności od definicji i możliwości XAML obie właściwości wpisz używane i implementacji konwertera.             Konwerter przyjmuje tego typu za pomocą `parameter` parametru zgodnie z definicją w jej <xref:System.Windows.Data.IValueConverter.Convert%2A>i <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>implementacje.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A>"
  syntax:
    content: public object ConverterParameter { get; set; }
    return:
      type: System.Object
      description: "Parametr do przekazania do konwertera. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ConverterParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Mode
  id: Mode
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość, która wskazuje kierunek przepływu danych tego powiązania."
  remarks: "Wartości trybu i <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>Właściwości określają funkcjonalność <xref:System.Windows.Data.MultiBinding>i są używane jako wartości domyślne dla wszystkie powiązania w kolekcji, chyba że poszczególnych powiązanie przesłania tych właściwości.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> Na przykład jeśli właściwość w trybie <xref:System.Windows.Data.MultiBinding>obiektu ma ustawioną wartość <xref:System.Windows.Data.BindingMode>, następnie wszystkie powiązania w kolekcji są traktowane jako <xref:System.Windows.Data.BindingMode>chyba że zostanie ustawiony na jednym z powiązań inną wartość trybu jawnie.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding> Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>i <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>Właściwości.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Data.BindingMode Mode { get; set; }
    return:
      type: System.Windows.Data.BindingMode
      description: "Jeden z <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref>, który zwraca wartość trybu powiązanie domyślnej właściwości zależności docelowych. Jednak wartością domyślną jest różny dla każdej właściwości zależności. W właściwości formantu ogólne, można edytować użytkownika takich jak &lt;xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName&gt;, domyślnie dwukierunkowego powiązania, podczas gdy inne właściwości domyślnie powiązania jednokierunkowe.       Programowy sposób określenia, czy właściwość zależności wiąże- lub dwukierunkowo domyślnie jest można pobrać metadanych właściwości modelu przy użyciu właściwości <> </> *>, a następnie sprawdź wartość logiczna <> </> *> właściwości."
  overload: System.Windows.Data.MultiBinding.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  id: NotifyOnSourceUpdated
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy podnieść <xref href=&quot;System.Windows.FrameworkElement.SourceUpdated&quot;> </xref> zdarzenie, gdy wartość jest przenoszona z cel wiązania ze źródłem powiązania."
  syntax:
    content: public bool NotifyOnSourceUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Windows.FrameworkElement.SourceUpdated&quot;> </xref> zdarzeń zostanie wygenerowany, gdy wartością źródłową powiązania jest aktualizowana, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  id: NotifyOnTargetUpdated
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy podnieść <xref href=&quot;System.Windows.FrameworkElement.TargetUpdated&quot;> </xref> zdarzenie, gdy wartość jest przenoszone z źródle powiązania cel wiązania."
  syntax:
    content: public bool NotifyOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Windows.FrameworkElement.TargetUpdated&quot;> </xref> zdarzeń zostanie wygenerowany, gdy wartość docelowa powiązania jest aktualizowana, a w przeciwnym razie wartość <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy podnieść <xref:System.Windows.Controls.Validation.Error>dołączone zdarzenia na element powiązania.</xref:System.Windows.Controls.Validation.Error>"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.Controls.Validation.Error>dołączone zdarzenie będzie zgłoszono w elemencie powiązania, gdy występuje błąd sprawdzania poprawności podczas aktualizacji źródła; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.Validation.Error> Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings
  id: ShouldSerializeBindings
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ShouldSerializeBindings()
  nameWithType: MultiBinding.ShouldSerializeBindings()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeBindings()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Wskazuje, czy <xref:System.Windows.Data.MultiBinding.Bindings*>właściwości powinny zostać utrwalony.</xref:System.Windows.Data.MultiBinding.Bindings*>"
  remarks: "To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.Data.MultiBinding.Bindings%2A>właściwość nie ma wartości domyślnej proste.</xref:System.Windows.Data.MultiBinding.Bindings%2A> Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę Jeśli opracowujesz albo projektanta, <xref:System.Windows.Data.MultiBinding>lub opracowanie własnego kontrolować zawierających <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: public bool ShouldSerializeBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość właściwości została zmieniona z domyślnego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ShouldSerializeBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  id: ShouldSerializeValidationRules
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ShouldSerializeValidationRules()
  nameWithType: MultiBinding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Wskazuje, czy <xref:System.Windows.Data.MultiBinding.ValidationRules*>właściwości powinny zostać utrwalony.</xref:System.Windows.Data.MultiBinding.ValidationRules*>"
  remarks: "To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>właściwość nie ma wartości domyślnej proste.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę Jeśli opracowujesz albo projektanta, <xref:System.Windows.Data.MultiBinding>lub opracowanie własnego kontrolować zawierających <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: public bool ShouldSerializeValidationRules ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość właściwości została zmieniona z domyślnego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Dodaje obiekt podrzędny."
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Aby dodać obiekt podrzędny."
  overload: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Dodaje tekst węzła do obiektu."
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "Tekst, aby dodać do obiektu."
  overload: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  id: UpdateSourceExceptionFilter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia program obsługi, używanego w celu zapewnienia niestandardowej logiki do obsługi wyjątków, które aparat wiązania napotka podczas aktualizacji wiążąca wartość źródła. Dotyczy to tylko jeśli został skojarzony <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> z Twojej <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> obiektu."
  remarks: "<xref:System.Windows.Controls.ExceptionValidationRule>Klasa reprezentuje reguły poprawności wbudowanych sprawdza, czy wyjątki, które są generowane podczas aktualizacji właściwości źródła powiązania.</xref:System.Windows.Controls.ExceptionValidationRule> Jeśli został skojarzony <xref:System.Windows.Controls.ExceptionValidationRule>obiekt z Twojej <xref:System.Windows.Data.MultiBinding>obiektu, ta właściwość służy ustawić programu obsługi w celu zapewnienia niestandardowej logiki do obsługi tych wyjątków.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Controls.ExceptionValidationRule>       Na przykład zobacz <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat procesu sprawdzania poprawności dla <xref:System.Windows.Data.MultiBinding>obiekty, zobacz <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>Właściwości.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceExceptionFilterCallback
      description: "Metoda, która zapewnia niestandardowej logiki do obsługi wyjątków, które aparat wiązania napotka podczas aktualizacji wiążąca wartość źródła."
  overload: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość, która określa czas powiązania źródła aktualizacji."
  remarks: "Wartości <xref:System.Windows.Data.MultiBinding.Mode%2A>i funkcje określania właściwości UpdateSourceTrigger <xref:System.Windows.Data.MultiBinding>i są używane jako wartości domyślne dla wszystkie powiązania w kolekcji, chyba że poszczególnych powiązanie przesłania tych właściwości.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.Mode%2A> Na przykład jeśli <xref:System.Windows.Data.MultiBinding.Mode%2A>Właściwość <xref:System.Windows.Data.MultiBinding>obiektu ma ustawioną wartość <xref:System.Windows.Data.BindingMode>, uwzględniane są wszystkie powiązania w kolekcji, a następnie <xref:System.Windows.Data.BindingMode>, chyba że ustawisz inną <xref:System.Windows.Data.MultiBinding.Mode%2A>wartości na jednym z powiązań jawnie.</xref:System.Windows.Data.MultiBinding.Mode%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.Mode%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>i <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>Właściwości.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Jeden z <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, która zwraca wartość domyślna <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> wartość właściwości zależności docelowych. Jednak jest wartością domyślną dla większości właściwości zależności <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, podczas gdy <> </> *> właściwość ma wartość domyślną równą <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>.       Programowy sposób określić domyślny <> </> *> wartość właściwości zależności jest można pobrać metadanych właściwości modelu przy użyciu właściwości <> </> *>, a następnie sprawdź wartość <> </> *> właściwości."
  overload: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>."
  remarks: "Ustawienie tej właściwości stanowi alternatywę dla przy użyciu <xref:System.Windows.Controls.DataErrorValidationRule>element jawnie.</xref:System.Windows.Controls.DataErrorValidationRule> <xref:System.Windows.Controls.DataErrorValidationRule>Jest sprawdza, czy błędy, które są generowane przez reguły poprawności wbudowanych <xref:System.ComponentModel.IDataErrorInfo>implementacji obiektu źródłowego.</xref:System.ComponentModel.IDataErrorInfo> </xref:System.Windows.Controls.DataErrorValidationRule> Jeśli występuje błąd, tworzy aparat wiązania <xref:System.Windows.Controls.ValidationError>z powodu błędu i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>kolekcji elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Brak błąd czyści tej opinii sprawdzania poprawności, chyba że inna reguła zgłasza problem sprawdzania poprawności.       Aby uzyskać więcej informacji na temat procesu sprawdzania poprawności dla <xref:System.Windows.Data.MultiBinding>obiekty, zobacz <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>Właściwości.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>       ValidatesOnDataErrors wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>."
  remarks: "Ustawienie tej właściwości stanowi alternatywę dla przy użyciu <xref:System.Windows.Controls.ExceptionValidationRule>element jawnie.</xref:System.Windows.Controls.ExceptionValidationRule> <xref:System.Windows.Controls.ExceptionValidationRule>Reguła wbudowanych weryfikacji sprawdza, czy wyjątki, które są generowane podczas aktualizacji właściwości source.</xref:System.Windows.Controls.ExceptionValidationRule> Jeśli jest zgłaszany wyjątek, aparat wiązania tworzy <xref:System.Windows.Controls.ValidationError>z wyjątkiem i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>kolekcji elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Brak błąd czyści tej opinii sprawdzania poprawności, chyba że inna reguła zgłasza problem sprawdzania poprawności.       Aby uzyskać więcej informacji na temat procesu sprawdzania poprawności dla <xref:System.Windows.Data.MultiBinding>obiekty, zobacz <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>Właściwości.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>       ValidatesOnExceptions wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Gdy jest ValidatesOnNotifyDataErrors `true`, powiązanie wyszukuje i raportowanie błędów, które zostały wygenerowane przez źródło danych, który implementuje <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>"
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
  fullName: System.Windows.Data.MultiBinding.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów dla tego wystąpienia <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>."
  remarks: "Reguły sprawdzania poprawności można ustawić w obu <xref:System.Windows.Data.MultiBinding>obiekt i poszczególnych <xref:System.Windows.Data.Binding>obiekty w <xref:System.Windows.Data.MultiBinding>obiektu.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.MultiBinding> Aparat wiązania ocenia ValidationRules na <xref:System.Windows.Data.MultiBinding>obiektu, jeśli wartość jest przenoszony z właściwość target powiązania do <xref:System.Windows.Data.IMultiValueConverter>obiektu.</xref:System.Windows.Data.IMultiValueConverter> </xref:System.Windows.Data.MultiBinding> Po tym, gdy wartość zostanie przeniesiony z konwertera do powiązania właściwości source poszczególnych powiązania aparat wiązania ocenia <xref:System.Windows.Data.Binding.ValidationRules%2A>na tej <xref:System.Windows.Data.Binding>obiektu.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A>       Aby uzyskać więcej informacji na temat proces weryfikacji oraz wizualne na unieważniania, zobacz &quot;Sprawdzanie poprawności danych&quot; w [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Tej właściwości można ustawić w [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] tylko przy użyciu składni pokazano lub uzyskiwania dostępu do obiektu kolekcji i przy użyciu jego różnych metod, takich jak `Add`. Właściwość używana do dostępu do obiektu kolekcji jest tylko do odczytu, zapisu i odczytu jest sama kolekcja.      <a name=&quot;xamlPropertyElementUsage_ValidationRules&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.ValidationRules>       oneOrMoreValidationRules     </object.ValidationRules>   </object>   ``` <a name=&quot;xamlValues_ValidationRules&quot;> </a> ## wartości XAML *oneOrMoreValidationRules* co najmniej jeden <xref:System.Windows.Controls.ValidationRule>obiektów.</xref:System.Windows.Controls.ValidationRule>       Można użyć <xref:System.Windows.Controls.ExceptionValidationRule>klasy lub tworzenie niestandardowych reguł przez tworzenie podklas <xref:System.Windows.Controls.ValidationRule>klasy.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ExceptionValidationRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Kolekcja <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów dla tego wystąpienia <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingBase
  isExternal: false
  name: System.Windows.Data.BindingBase
- uid: System.Windows.Data.MultiBinding.#ctor
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: MultiBinding()
  nameWithType: MultiBinding.MultiBinding()
  fullName: System.Windows.Data.MultiBinding.MultiBinding()
- uid: System.Windows.Data.MultiBinding.Bindings
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingBase>
  nameWithType: Collection<BindingBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingBase
    name: BindingBase
    nameWithType: BindingBase
    fullName: BindingBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.MultiBinding.Converter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
- uid: System.Windows.Data.IMultiValueConverter
  parent: System.Windows.Data
  isExternal: false
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
- uid: System.Windows.Data.MultiBinding.ConverterCulture
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.MultiBinding.ConverterParameter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.MultiBinding.Mode
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
- uid: System.Windows.Data.BindingMode
  parent: System.Windows.Data
  isExternal: false
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeBindings()
  nameWithType: MultiBinding.ShouldSerializeBindings()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeBindings()
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeValidationRules()
  nameWithType: MultiBinding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules()
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.MultiBinding.ValidationRules
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
  fullName: System.Windows.Data.MultiBinding.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.MultiBinding.#ctor*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: MultiBinding
  nameWithType: MultiBinding.MultiBinding
- uid: System.Windows.Data.MultiBinding.Bindings*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Bindings
  nameWithType: MultiBinding.Bindings
- uid: System.Windows.Data.MultiBinding.Converter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Converter
  nameWithType: MultiBinding.Converter
- uid: System.Windows.Data.MultiBinding.ConverterCulture*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
- uid: System.Windows.Data.MultiBinding.ConverterParameter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
- uid: System.Windows.Data.MultiBinding.Mode*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Mode
  nameWithType: MultiBinding.Mode
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeBindings
  nameWithType: MultiBinding.ShouldSerializeBindings
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeValidationRules
  nameWithType: MultiBinding.ShouldSerializeValidationRules
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.MultiBinding.ValidationRules*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
