### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageHeaderAttribute
  id: MessageHeaderAttribute
  children:
  - System.ServiceModel.MessageHeaderAttribute.#ctor
  - System.ServiceModel.MessageHeaderAttribute.Actor
  - System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  - System.ServiceModel.MessageHeaderAttribute.Relay
  langs:
  - csharp
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute
  fullName: System.ServiceModel.MessageHeaderAttribute
  type: Class
  summary: "Określa, że element członkowski danych nagłówek komunikatu SOAP."
  remarks: "Ten atrybut w parametrze MessageHeaderAttribute umożliwia mapowanie pól i właściwości typu oznaczonego jako z <xref:System.ServiceModel.MessageContractAttribute>atrybutu nagłówki komunikatów SOAP.</xref:System.ServiceModel.MessageContractAttribute> Pole lub właściwość może być typu prostego lub typu złożonego, który można serializować.       Uzyskać informacji na temat kontrolowania serializacji zawartość treści protokołu SOAP bez modyfikowania samego koperty protokołu SOAP domyślne, zobacz <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Określanie transferu danych w kontraktach usług](~/add/includes/ajax-current-ext-md.md), i [za pomocą kontraktów danych](~/add/includes/ajax-current-ext-md.md).</xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>       Aby uzyskać więcej informacji o tworzeniu kontrakty komunikatów, zobacz [za pomocą kontraktów komunikatu](~/add/includes/ajax-current-ext-md.md).       SOAP standard definiuje następujące atrybuty, które mogą znajdować się w nagłówku:- `Actor` lub `Role` (`Actor` w SOAP 1.1 `Role` w SOAP 1.2)- `MustUnderstand`       -    `Relay` `Actor` lub `Role` atrybut określa identyfikator URI węzła, dla którego ma określony nagłówek. `MustUnderstand` Atrybut określa, czy nagłówek rozumie przetwarzania węzła. `Relay` Atrybut określa, czy nagłówek jest przekazywanie węzły podrzędne. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]nie wykonuje żadnych przetwarzania tych atrybutów w komunikatach przychodzących, z wyjątkiem `MustUnderstand` atrybutu.       Można jednak odczytu i zapisu tych atrybutów, nawet jeśli nie są wysyłane domyślnie. Można ustawić wartości atrybutów na dwa sposoby. Po pierwsze, można zmienić <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>i <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A>Właściwości w parametrze MessageHeaderAttribute.</xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> </xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> </xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> (Brak nie `Role` ustawić właściwości — <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>Właściwości i `Role` jest przekazywana, jeśli jest używany protokół SOAP 1.2).</xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> Na przykład: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] drugi sposób kontrolowania tych atrybutów jest udostępniając żądanego nagłówka, parametru typu z typu <xref:System.ServiceModel.MessageHeader%601>klasy i przy użyciu wynikowy typ wraz z parametrze MessageHeaderAttribute.</xref:System.ServiceModel.MessageHeader%601> Następnie użyj <xref:System.ServiceModel.MessageHeader%601>Właściwości programowo, można ustawić atrybutów protokołu SOAP.</xref:System.ServiceModel.MessageHeader%601> Na przykład: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] jeśli są używane zarówno dynamiczny, jak i mechanizmy kontroli statycznych, statyczne ustawienia są domyślnie, ale może zostać zastąpiona przy użyciu mechanizmu dynamicznej.        Na przykład: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] tworzenie powtarzane nagłówki za pomocą formantu atrybutu dynamic jest dozwolone.        Na przykład: ```   [MessageHeaderArray] public MessageHeader<Person> documentApprovers[];   ``` po stronie odbiorczej odczytywania tych atrybutów SOAP jest możliwe tylko jeśli ogólnego <xref:System.ServiceModel.MessageHeader%601>Klasa jest używana.</xref:System.ServiceModel.MessageHeader%601> Sprawdź <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A>lub <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A>właściwości nagłówka o <xref:System.ServiceModel.MessageHeader%601>Typ, aby wykryć ustawienia atrybutu dla odebranego komunikatu.</xref:System.ServiceModel.MessageHeader%601> </xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> </xref:System.ServiceModel.MessageHeader%601.Relay%2A> </xref:System.ServiceModel.MessageHeader%601.Actor%2A>       Gdy komunikat jest odbierany i następnie odesłał, SOAP atrybutu ustawień tylko komunikacja dwukierunkowa dla nagłówków <xref:System.ServiceModel.MessageHeader%601>typu.</xref:System.ServiceModel.MessageHeader%601>"
  example:
  - "The following code example shows the use of the MessageHeaderAttribute to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)]

      public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute
  inheritance:
  - System.ServiceModel.MessageContractMemberAttribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.MessageHeaderAttribute&quot;> </xref> klasy."
  syntax:
    content: public MessageHeaderAttribute ();
    parameters: []
  overload: System.ServiceModel.MessageHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  id: Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Pobiera lub ustawia identyfikator URI, który wskazuje węzła, w którym jest przeznaczony ten nagłówek. Mapowany do atrybutu nagłówka roli, używanego protokołu SOAP 1.2 i atrybut nagłówka aktora stosowania SOAP 1.1."
  remarks: "Aby uzyskać więcej informacji, zobacz sekcję uwag <xref:System.ServiceModel.MessageHeaderAttribute>szczegółowe informacje.</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "Identyfikator URI, który wskazuje węzła, w którym jest przeznaczony ten nagłówek. Ten identyfikator URI Odwzorowuje atrybut nagłówka roli, używanego protokołu SOAP 1.2 i atrybut nagłówka aktora stosowania SOAP 1.1."
  overload: System.ServiceModel.MessageHeaderAttribute.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  id: MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Określa, czy węzeł działające w <xref:System.ServiceModel.MessageHeaderAttribute.Actor*>roli należy poznać tego nagłówka.</xref:System.ServiceModel.MessageHeaderAttribute.Actor*> To jest mapowany na <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> atrybut nagłówka SOAP."
  remarks: "Aby uzyskać więcej informacji, zobacz sekcję uwag <xref:System.ServiceModel.MessageHeaderAttribute>szczegółowe informacje.</xref:System.ServiceModel.MessageHeaderAttribute>      > [!IMPORTANT] > Należy pamiętać, że właściwość MustUnderstand jest `true` w wiadomości wysyłanych i aplikacji po stronie odbierającej nie rozpoznaje nagłówka, generowany jest błąd. Z drugiej strony Jeśli nagłówek o `mustUnderstand` atrybut nagłówka SOAP ustawioną `true` jest odbierany przez [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], musi być częścią kontraktu komunikatu (lub muszą zostać przetworzone przez jeden z [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] kanałów); w przeciwnym razie jest zakłada, że nagłówek nie jest rozpoznawany i jest zgłaszany wyjątek."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and MustUnderstand properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli węzeł działające w <xref:System.ServiceModel.MessageHeaderAttribute.Actor*>roli, trzeba zrozumieć, ten nagłówek; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.MessageHeaderAttribute.Actor*>"
  overload: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  id: Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Określa, czy ten nagłówek do węzłów podrzędnych. To jest mapowany na <xref uid=&quot;langword_csharp_relay&quot; name=&quot;relay&quot; href=&quot;&quot;> </xref> atrybut nagłówka SOAP."
  remarks: "Ta właściwość jest ignorowana, gdy jest używany protokół SOAP 1.1. Aby uzyskać więcej informacji, zobacz sekcję uwag <xref:System.ServiceModel.MessageHeaderAttribute>szczegółowe informacje.</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku tego nagłówka do węzłów podrzędnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.MessageHeaderAttribute.Relay*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.MessageContractMemberAttribute
  isExternal: false
  name: System.ServiceModel.MessageContractMemberAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.Actor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
- uid: System.ServiceModel.MessageHeaderAttribute.Relay*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
