### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  id: BinaryKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  langs:
  - csharp
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  type: Class
  summary: "Reprezentuje klasę podstawową dla klauzuli identyfikatora klucza, które są oparte na danych binarnych."
  remarks: "Zazwyczaj BinaryKeyIdentifierClause nie trzeba używać, inne niż podczas tworzenia usługi tokenu zabezpieczeń niestandardowych. Po powrocie z usługi tokenu zabezpieczającego tokenu zabezpieczającego tokenu zabezpieczeń zawiera odwołania do tokenów zabezpieczających dołączona i odłączyć. Dołączone odwołania dotyczą tokeny zabezpieczające, które są zawarte w nagłówku zabezpieczeń wiadomości SOAP i niedołączonych odwołań są tokeny zabezpieczające, które nie są uwzględniane w nagłówku zabezpieczeń wiadomości protokołu SOAP. Te odwołania potwierdzają zwykle autentyczności token zabezpieczeń."
  syntax:
    content: 'public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  id: '#ctor(System.String,System.Byte[],System.Boolean)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> przy użyciu określonego identyfikatora klucza typu klauzuli, dane binarne i wartość, która wskazuje, czy dane binarne muszą być sklonować."
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);
    parameters:
    - id: clauseType
      type: System.String
      description: "Typ klauzuli identyfikatora klucza. Ustawia wartość <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>Właściwości.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>zawierający dane binarne, który reprezentuje identyfikator klucza.</xref:System.Byte>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>klonowanie tablicy przekazany `identificationData` parametru; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>ma zerową długość."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> przy użyciu określonego identyfikatora klucza typu klauzuli, dane binarne, wartość wskazującą, czy dane binarne muszą sklonowany, identyfikatora jednorazowego i długość klucza."
  remarks: "Gdy `derivationNonce` i `derivationLength` zostały podane parametry, dorozumianych klucza pochodnego jest używany zamiast klucza zabezpieczeń bezpośredniego tokenu.       Niezależnie od wartości przekazywane do `cloneBuffer` parametru <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>metody zawsze zwróci klon tablicy przekazany `identificationData` parametru.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: clauseType
      type: System.String
      description: "Typ klauzuli identyfikatora klucza. Ustawia wartość <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>Właściwości.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>zawierający dane binarne, który reprezentuje identyfikator klucza.</xref:System.Byte> Ustawia dane binarne, który jest zwracany przez <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metody.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>klonowanie tablicy przekazany `identificationData` parametru; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: derivationNonce
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>zawierający identyfikator jednorazowy, który został użyty do utworzenia klucza pochodnego.</xref:System.Byte> Ustawia wartość, która jest zwracana w wyniku <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>metody.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "Rozmiar klucza pochodnego. Ustawia wartość <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>Właściwości.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>ma zerową długość."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  id: GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera dane binarne, który reprezentuje identyfikator klucza."
  remarks: "Niezależnie od wartości przekazany do konstruktora `cloneBuffer` parametru GetBuffer — metoda zawsze zwróci klon tablicy przekazany do konstruktora `identificationData` parametru."
  syntax:
    content: public byte[] GetBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>zawierający dane binarne, który reprezentuje identyfikator klucza.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  id: GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera dane binarne, który reprezentuje identyfikator klucza."
  remarks: "Tablica zwrócona przez metodę GetRawBuffer jest Sklonowanie konstruktora `identificationData` parametru, gdy wartość przekazywana do `cloneBuffer` jest `true`; w przeciwnym razie jest tej samej tablicy.       <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>Metody zawsze zwróci klon tablicy przekazany do konstruktora `identificationData` parametru.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected byte[] GetRawBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>zawierający dane binarne, który reprezentuje identyfikator klucza.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  id: Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Zwraca wartość wskazującą, czy dane binarne dla bieżącego wystąpienia odpowiada określonym danych binarnych."
  syntax:
    content: public bool Matches (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>do porównania.</xref:System.Byte>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> data  </code>jest odpowiednikiem dane binarne zwrócony przez <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metody; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia jest odpowiednikiem klauzuli określonego identyfikatora klucza."
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> keyIdentifierClause </code> jest typu <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> i danych binarnych zwrócony przez <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metody jest taka sama dla <code> keyIdentifierClause </code> parametr i bieżącego wystąpienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  id: Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Zwraca wartość wskazującą, czy dane binarne dla bieżącego wystąpienia jest odpowiednikiem określone dane binarne od wskazanego przesunięcia."
  syntax:
    content: public bool Matches (byte[] data, int offset);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>do porównania.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Indeks w tablicy, w którym rozpoczyna się porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane binarne w <code> data  </code>parametr w indeksie określone w <code> offset </code> parametru jest odpowiednikiem dane binarne zwrócony przez <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>— Metoda (rozpoczyna się od zera indeks); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer
  nameWithType: BinaryKeyIdentifierClause.GetBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: BinaryKeyIdentifierClause.Matches
