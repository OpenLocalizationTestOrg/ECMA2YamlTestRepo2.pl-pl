### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.XsdDataContractImporter
  id: XsdDataContractImporter
  children:
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Options
  langs:
  - csharp
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter
  fullName: System.Runtime.Serialization.XsdDataContractImporter
  type: Class
  summary: "Umożliwia przekształcania zestawu plików schematów XML (XSD) do wspólnego języka typów środowiska uruchomieniowego (języka wspólnego CLR)."
  remarks: "XsdDataContractImporter — należy użyć, jeśli podczas tworzenia usługi sieci Web konieczna jest współpraca z istniejącej usługi sieci Web lub aby utworzyć typy kontraktu danych na podstawie schematów XML. XsdDataContractImporter — spowoduje przekształcenie zestaw schematów XML i utworzenie [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Zwiń typy reprezentujące dane w wybranym języku programowania. Aby utworzyć kod, należy użyć klasy w <xref:System.CodeDom>przestrzeni nazw.</xref:System.CodeDom>       Z drugiej strony, użyj <xref:System.Runtime.Serialization.XsdDataContractExporter>klasy po utworzeniu usługi sieci Web, który zawiera dane reprezentowane przez typy CLR i kiedy należy wyeksportować schematów XML dla każdego typu danych do użycia przez inne usługi sieci Web.</xref:System.Runtime.Serialization.XsdDataContractExporter> Oznacza to, że <xref:System.Runtime.Serialization.XsdDataContractExporter>przekształca Zestaw CLR typów na zestaw schematów XML.</xref:System.Runtime.Serialization.XsdDataContractExporter>      > [!NOTE] > Do generowania typów CLR z schematów XML w czasie projektowania, użyj [narzędzie narzędzia metadanych elementu ServiceModel (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md). Wygenerowany kod z pliki XSD, użyj `/dataContractOnly` przełącznika narzędzia. Umożliwia także XsdDataContractImporter — Jeśli więcej kontroli nad procesem lub trzeba przeprowadzić programowo."
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#0](~/add/codesnippet/csharp/t-system.runtime.seriali_7_1.cs)]\n [!code-vb[XsdDataContractImporter#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_7_1.vb)]"
  syntax:
    content: public class XsdDataContractImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref> klasy."
  syntax:
    content: public XsdDataContractImporter ();
    parameters: []
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  id: '#ctor(System.CodeDom.CodeCompileUnit)'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref> klasy z <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> który będzie używany do generowania kodu CLR."
  remarks: "Użyj tego konstruktora, aby dodać więcej kodu do <xref:System.CodeDom.CodeCompileUnit>który został już wygenerowany.</xref:System.CodeDom.CodeCompileUnit>"
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/03617d2d-d820-45ea-9187-_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/03617d2d-d820-45ea-9187-_1.vb)]"
  syntax:
    content: public XsdDataContractImporter (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> Który będzie używany do przechowywania kodu."
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  id: CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość wskazującą, czy schematów zawartych w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> może zostać zamieniony na <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  remarks: ''
  example:
  - "The following example calls the CanImport method to determine whether the <xref:System.CodeDom.CodeCompileUnit> can be generated.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/b2b83fee-fce3-4860-9703-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/b2b83fee-fce3-4860-9703-_1.vb)]"
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zawierającego schematy do przekształcenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli schematów może służyć do typów kontraktu danych. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "Kontrakt danych objętego importu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość wskazującą, czy określony zestaw typów zawartych w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> może służyć do generowania typów CLR <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zawierającego schematy do przekształcenia."
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "&lt;Xref:System.Collections.Generic.ICollection%601&gt; z <xref:System.Xml.XmlQualifiedName>reprezentujący zestaw typów schematu do zaimportowania.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli można je przekształcać schematów; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeNames</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "Kontrakt danych objętego importu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość wskazującą, czy element schematu zawarte w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> możliwym do zaimportowania."
  remarks: "Ta metoda sprawdza typ i wszystkie typy schemat przywoływany z niego."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Do zaimportowania."
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "Określony <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> w zestawie schematów."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element może być importowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "Kontrakt danych objętego importu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość wskazującą, czy schematów zawartych w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> może zostać zamieniony na <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  remarks: "Aby uzyskać więcej informacji na temat typów, które można importować, zobacz [typy obsługiwane przez serializator kontraktu danych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zawierający reprezentacje schematu."
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Collections.IList>z <xref:System.Xml.XmlQualifiedName>, który określa nazwy typów schematów, które muszą zostać zaimportowane z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlQualifiedName> </xref:System.Collections.IList>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli schematów może służyć do typów kontraktu danych. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "Kontrakt danych objętego importu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  id: CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> używany do przechowywania typów CLR wygenerowany."
  remarks: "Wywołanie tej właściwości po zaimportowaniu schematów przy użyciu <xref:System.Runtime.Serialization.XsdDataContractImporter>dostępu <xref:System.CodeDom.CodeCompileUnit>Wszystkie wygenerowany kod jest przechowywany.</xref:System.CodeDom.CodeCompileUnit> </xref:System.Runtime.Serialization.XsdDataContractImporter>"
  example:
  - "The following example uses creates a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both a Visual C# and Visual Basic code file.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/p-system.runtime.seriali_1_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/p-system.runtime.seriali_1_1.vb)]"
  syntax:
    content: public System.CodeDom.CodeCompileUnit CodeCompileUnit { get; }
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> używany do przechowywania wygenerowane typy CLR."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Zwraca <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> na typ CLR dla typu schematu o określonym <xref:System.Xml.XmlQualifiedName>.</xref:System.Xml.XmlQualifiedName> generowane"
  remarks: "Ta metoda umożliwia wyszukiwanie odwołanie do wygenerowanego typu środowiska CLR po wywołaniu <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A>metody.</xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> <xref:System.CodeDom.CodeTypeReference>Zawiera nazwę wygenerowanego typu i może służyć do wyszukiwania z odpowiedniego <xref:System.CodeDom.CodeTypeDeclaration> <xref:System.CodeDom.CodeCompileUnit>.</xref:System.CodeDom.CodeCompileUnit> </xref:System.CodeDom.CodeTypeDeclaration> </xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>Określa typ schematu do wyszukiwania oceny.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> odwołania do typu CLR dla typu schematu o generowane <code> typeName </code> określony."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Zwraca <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> dla określonego pliku XML kwalifikowana elementu i elemencie schema."
  remarks: "Element schematu jest potrzebne dane dotyczące typu, który jest określony w zakresie elementu. Najlepszym przykładem tego jest atrybutu XSD `nillable`. W schemacie ustawienie `nillable` do `true` jest określony w elemencie zawierający schemat, pojęcie wartość null jest wyrażone w typie CLR <xref:System.Nullable%601>.</xref:System.Nullable%601> Element jest przekazywana, aby ten importer można odszukać informacje na poziomie elementu i odpowiednio zwraca odwołanie do nieprawidłowego typu.       Podczas importu WSDL, każdy parametr jest importowany oddzielnie i w związku z tym należy oddzielnie przekazano elementów parametrów."
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Który określa nazwy kwalifikowanej XML typu schematu do wyszukiwania oceny.</xref:System.Xml.XmlQualifiedName>"
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> Określająca element w schemacie XML."
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> reprezentujący typ, który został wygenerowany dla typu określonego schematu."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  id: GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Zwraca listę <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> obiektów, które reprezentuje znane typy, które są generowane podczas generowania kodu dla typu określonego schematu."
  remarks: "Podczas generowania typów CLR dla typów schematów, znane typy są także generowane dla wszystkich typów pochodnych, które znajdują się w schemacie. W wielu przypadkach te znane typy są dodawane przy użyciu atrybutów w wygenerowanym kodzie. (Na przykład, patrz <xref:System.Runtime.Serialization.KnownTypeAttribute>klasy.</xref:System.Runtime.Serialization.KnownTypeAttribute> ) Jednak dla tego typu najwyższego poziomu, musi istnieć sposób zwrócenia zbiór znane typy wygenerowane. Ta metoda zwraca <xref:System.CodeDom.CodeTypeReference>znanych typów, które zostały wygenerowane dla typu schematu.</xref:System.CodeDom.CodeTypeReference>       Aby uzyskać więcej informacji, zobacz [znane typy kontraktu danych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference> GetKnownTypeReferences (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>Reprezentujący typ schematu do odszukania for. znane typy</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
      description: "A &lt;xref:System.Collections.Generic.IList%601&gt; typu <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  id: Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Przekształca określony zestaw schematów XML zawartych w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> do <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to test whether a set of schemas can be imported. If the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method returns `true`, the code invokes the Import method.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/8343a280-8e19-434b-8b6b-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/8343a280-8e19-434b-8b6b-_1.vb)]"
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zawierający reprezentacje schematu do generowania typów CLR dla."
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Przekształca określony zbiór typów schematów zawartych w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> na typy CLR do generowania <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zawierający reprezentacje schematu."
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "A &lt;xref:System.Collections.Generic.ICollection%601&gt; (z <xref:System.Xml.XmlQualifiedName>) reprezentujący zestaw typów schematu do zaimportowania.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Przekształca element określony schemat w zestawie określonego schematów XML do <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> i zwraca <xref:System.Xml.XmlQualifiedName>reprezentujący nazwę kontraktu danych dla określonego elementu.</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: public System.Xml.XmlQualifiedName Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Zawierającego schematy do przekształcenia."
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> Reprezentujący element określonego schematu do przekształcenia."
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>Reprezentujący określonego elementu.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Przekształca określony typ schematu XML zawartych w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> do <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zawierający reprezentacje schematu."
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "A <xref:System.Xml.XmlQualifiedName>reprezentujący typ określonego schematu do zaimportowania.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  id: Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera lub ustawia <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref> zawiera opcje można ustawić dla operacji importowania."
  remarks: "Użyj <xref:System.Runtime.Serialization.ImportOptions>klasę, aby dostosować jak typów CLR są generowane podczas importowania schematu.</xref:System.Runtime.Serialization.ImportOptions>"
  syntax:
    content: public System.Runtime.Serialization.ImportOptions Options { get; set; }
    return:
      type: System.Runtime.Serialization.ImportOptions
      description: "A <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref> zawiera opcje można ustawić."
  overload: System.Runtime.Serialization.XsdDataContractImporter.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.InvalidDataContractException
  isExternal: true
  name: System.Runtime.Serialization.InvalidDataContractException
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XmlQualifiedName>
  nameWithType: ICollection<XmlQualifiedName>
  fullName: System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
- uid: System.Xml.Schema.XmlSchemaElement
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
- uid: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<CodeTypeReference>
  nameWithType: ICollection<CodeTypeReference>
  fullName: System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.CodeDom.CodeTypeReference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
- uid: System.Runtime.Serialization.ImportOptions
  parent: System.Runtime.Serialization
  isExternal: false
  name: ImportOptions
  nameWithType: ImportOptions
  fullName: System.Runtime.Serialization.ImportOptions
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter.XsdDataContractImporter
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport
  nameWithType: XsdDataContractImporter.CanImport
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference
  nameWithType: XsdDataContractImporter.GetCodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import
  nameWithType: XsdDataContractImporter.Import
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
