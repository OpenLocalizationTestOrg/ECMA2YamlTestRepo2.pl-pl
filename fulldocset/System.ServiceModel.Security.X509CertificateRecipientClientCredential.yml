### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  id: X509CertificateRecipientClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  langs:
  - csharp
  name: X509CertificateRecipientClientCredential
  nameWithType: X509CertificateRecipientClientCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  type: Class
  summary: "Reprezentuje ustawienia używane przez klienta do weryfikacji certyfikatu przedstawionego przez tę usługę, używając uwierzytelniania protokołu SSL. Zawiera ona także dowolny certyfikat dla usługi jawnie skonfigurowanego na kliencie do użycia na potrzeby szyfrowania wiadomości w usłudze przy użyciu zabezpieczeń wiadomości."
  remarks: "Ta klasa jest używana przez <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>Właściwość <xref:System.ServiceModel.Description.ClientCredentials>klasy.</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>"
  example:
  - "This code shows one way to create an instance of this class.  \n  \n [!code-vb[c_CreateSTS#18](~/add/codesnippet/visualbasic/t-system.servicemodel.se_15_1.vb)]\n [!code-cs[c_CreateSTS#18](~/add/codesnippet/csharp/t-system.servicemodel.se_15_1.cs)]"
  syntax:
    content: public sealed class X509CertificateRecipientClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Pobiera ustawienia używane do weryfikacji certyfikatu usługi uzyskany przy użyciu uwierzytelniania protokołu SSL."
  remarks: "<xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>Klasa reprezentuje ustawienia używane przez serwer proxy klienta do uwierzytelniania certyfikatów usługi, które są uzyskiwane przy użyciu negocjacji SSL/TLS.</xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#21](~/add/codesnippet/csharp/d04fd5a9-6333-4d5a-92f2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "Ustawienia używane do weryfikacji certyfikatu usługi uzyskany przy użyciu uwierzytelniania protokołu SSL."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  id: DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Pobiera lub ustawia domyślny certyfikat do użycia dla usługi."
  remarks: "Dla powiązań, które korzystają z zabezpieczeń wiadomości opartego na certyfikatach ten certyfikat jest używany do szyfrowania wiadomości do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta."
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#24](~/add/codesnippet/csharp/3f3eeba7-32c2-4573-9477-_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Domyślny certyfikat do użycia dla usługi."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić, gdy poświadczenia jest tylko do odczytu."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  id: ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Pobiera zakresie certyfikatu służącego do reprezentowania usługi, który klient komunikuje się z."
  remarks: "Ta właściwość umożliwia klientowi Konfigurowanie certyfikatu usługi do użycia na podstawie adresu URL usługi, z którym się komunikuje. Jest to szczególnie przydatne w wystawionego tokenu scenariuszach, gdzie klient może komunikować się wiele usług (usług a także usługi tokenu zabezpieczeń pośredniczące). Dla powiązań, które korzystają z zabezpieczeń wiadomości opartego na certyfikatach ten certyfikat jest używany do szyfrowania wiadomości do usługi, a powinien być używany przez usługę do podpisywania odpowiedzi do klienta.       Jeśli powiązanie wymaga certyfikatu dla usługi, a nie określonego dla adresu URL usługi zostanie znaleziony certyfikat w `ScopedCertificates`, używany jest certyfikat domyślny."
  example:
  - "This code shows how to set this property.  \n  \n [!code-cs[c_CreateSTS#33](~/add/codesnippet/csharp/bcde5385-8f2b-4da9-a779-_1.cs)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<Uri,System.Security.Cryptography.X509Certificates.X509Certificate2> ScopedCertificates { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "Zakresie certyfikatu służącego do reprezentowania usługi, który klient komunikuje się z."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić, gdy poświadczenia jest tylko do odczytu."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Określa domyślny certyfikat do użycia dla usługi. Dla powiązań, które korzystają z zabezpieczeń wiadomości opartego na certyfikatach ten certyfikat jest używany do szyfrowania wiadomości do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta."
  remarks: "Ta metoda pobiera certyfikat z magazynu w określonej lokalizacji, która odpowiada `subjectName` parametru.       Wartości `storeLocation` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>Wyliczenie:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów przypisany do komputera lokalnego.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów używanych przez bieżącego użytkownika (ustawienie domyślne).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Jeśli aplikacja jest uruchomiona na koncie systemu, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Jeśli aplikacja jest uruchomiona na koncie użytkownika, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Wartości `storeName` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreName>wyliczenie.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#23](~/add/codesnippet/csharp/1bf14924-d231-4bf6-a178-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "Nazwa wyróżniająca podmiotu."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Lokalizacja magazynu certyfikatów używane przez usługę do uzyskania certyfikatu usługi."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Przechowywanie nazwę certyfikatu X.509 do otwarcia."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić, gdy poświadczenia jest tylko do odczytu."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Określa domyślny certyfikat do użycia dla usługi. Dla powiązań, które korzystają z zabezpieczeń wiadomości opartego na certyfikatach ten certyfikat jest używany do szyfrowania wiadomości do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta."
  remarks: "Ta metoda pobiera certyfikat z magazynu w określonej lokalizacji, która odpowiada `findType` i `findValue` parametrów.       Wartości `storeLocation` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>Wyliczenie:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów przypisany do komputera lokalnego.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów używanych przez bieżącego użytkownika (ustawienie domyślne).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Jeśli aplikacja jest uruchomiona na koncie systemu, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Jeśli aplikacja jest uruchomiona na koncie użytkownika, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Wartości `storeName` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreName>wyliczenie.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Wartości `findType` znajdują się w <xref:System.Security.Cryptography.X509Certificates.X509FindType>wyliczenie.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       Wyliczenie najczęściej używane jest <xref:System.Security.Cryptography.X509Certificates.X509FindType>, która działa wyszukiwania bez uwzględniania wielkości liter w nazwie podmiotu certyfikaty w magazynie określonym.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Może to być niedokładna wyszukiwania. Jeśli nie ma certyfikatów lub wiele certyfikatów, które spełniają kryteria zostaną znalezione, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#22](~/add/codesnippet/csharp/7f0910fb-b496-4487-b49c-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Lokalizacja magazynu certyfikatów usługi używa do uzyskania certyfikatu usługi."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Przechowywanie nazwę certyfikatu X.509 do otwarcia."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "Typ wyszukiwania X.509 w celu wykonania."
    - id: findValue
      type: System.Object
      description: "Wartość do wyszukania w magazynie certyfikatów X.509."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>findValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić, gdy poświadczenia jest tylko do odczytu."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  id: SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Określa certyfikat nazwy podmiotu, lokalizacja magazynu certyfikatów oraz nazwę magazynu certyfikatów i zapisuje je w kolekcji do użycia dla adresu URL, który ustawia zakres."
  remarks: "Wartości `storeLocation` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>Wyliczenie:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów przypisany do komputera lokalnego.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów używanych przez bieżącego użytkownika (ustawienie domyślne).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Jeśli aplikacja jest uruchomiona na koncie systemu, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Jeśli aplikacja jest uruchomiona na koncie użytkownika, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Wartości `storeName` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreName>wyliczenie.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-cs[c_CreateSTS#25](~/add/codesnippet/csharp/7ddc79f9-f97b-42fb-ab5a-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);
    parameters:
    - id: subjectName
      type: System.String
      description: "Nazwa podmiotu w pełni kwalifikowana."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Lokalizacja magazynu certyfikatów używane przez usługę do uzyskania certyfikatu usługi."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Przechowywanie nazwę certyfikatu X.509 do otwarcia."
    - id: targetService
      type: System.Uri
      description: "Adres URL, który ustawia zakres."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić, gdy poświadczenia jest tylko do odczytu."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  id: SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ustawia lokalizację magazynu certyfikatu przez certyfikatów, nazwę magazynu certyfikatów, typ wyszukiwania X.509 i wartość do wyszukiwania i zapisuje je w kolekcji do użycia dla adresu URL, który ustawia zakres."
  remarks: "Wartości `storeLocation` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>Wyliczenie:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów przypisany do komputera lokalnego.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: Magazyn certyfikatów używanych przez bieżącego użytkownika (ustawienie domyślne).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Jeśli aplikacja jest uruchomiona na koncie systemu, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Jeśli aplikacja jest uruchomiona na koncie użytkownika, następnie certyfikat znajduje się zwykle w <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Wartości `storeName` znajdują się w <xref:System.Security.Cryptography.X509Certificates.StoreName>wyliczenie.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Wartości `findType` znajdują się w <xref:System.Security.Cryptography.X509Certificates.X509FindType>wyliczenie.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       Wyliczenie najczęściej używane jest <xref:System.Security.Cryptography.X509Certificates.X509FindType>, która działa wyszukiwania bez uwzględniania wielkości liter w nazwie podmiotu certyfikaty w magazynie określonym.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Może to być niedokładna wyszukiwania. Jeśli nie ma certyfikatów lub wiele certyfikatów, które spełniają kryteria zostaną znalezione, <xref:System.InvalidOperationException>będą zgłaszane.</xref:System.InvalidOperationException>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-vb[c_CreateSTS#20](~/add/codesnippet/visualbasic/75f932c5-822c-4f8b-9c16-_1.vb)]\n [!code-cs[c_CreateSTS#20](~/add/codesnippet/csharp/75f932c5-822c-4f8b-9c16-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Lokalizacja magazynu certyfikatów używane przez usługę do uzyskania certyfikatu usługi."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Przechowywanie nazwę certyfikatu X.509 do otwarcia."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "Typ wyszukiwania X.509 w celu wykonania."
    - id: findValue
      type: System.Object
      description: "Wartość do wyszukania w magazynie certyfikatów X.509."
    - id: targetService
      type: System.Uri
      description: "Adres URL, który ustawia zakres."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić, gdy poświadczenia jest tylko do odczytu."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  id: SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Pobiera lub ustawia moduł weryfikacji certyfikatów protokołu SSL do użycia."
  remarks: "Ta właściwość umożliwia przy użyciu obiektu X509CertificateValidator WCF można sprawdzić poprawności certyfikatu serwera na komputerze klienckim WCF."
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "A <xref href=&quot;System.ServiceModel.Security.X509ServiceCertificateAuthentication&quot;> </xref> wystąpienia."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Uri,X509Certificate2>
  nameWithType: Dictionary<Uri,X509Certificate2>
  fullName: System.Collections.Generic.Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
