### YamlMime:ManagedReference
items:
- uid: System.Activities.Tracking.TrackingParticipant
  id: TrackingParticipant
  children:
  - System.Activities.Tracking.TrackingParticipant.#ctor
  - System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)
  - System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  - System.Activities.Tracking.TrackingParticipant.TrackingProfile
  langs:
  - csharp
  name: TrackingParticipant
  nameWithType: TrackingParticipant
  fullName: System.Activities.Tracking.TrackingParticipant
  type: Class
  summary: "Klasa podstawowa dla rozszerzeń przepływu pracy, wchodzące w interakcje z śledzenia infrastruktury i dostępu do śledzenia rekordów przepływu pracy."
  remarks: "Uczestnik śledzenia jest zarejestrowany do odbierania rekordów śledzenia. Obecnie można zarejestrować każda klasa implementująca uczestnika śledzenia z wystąpieniem przepływu pracy i odbierają rekordy śledzenia. Jeśli uczestnik śledzenia jest kod osób trzecich, upewnij się, że nie jest złośliwego kodu. Uruchom ten sam proces jako wystąpienia przepływu pracy, a w przypadku uczestników śledzenia złośliwych uczestników śledzenia, ten kod może wpłynąć na ogólną wykonywania przepływu pracy. Rekordy śledzenia są dostarczane do uczestników śledzenia zarejestrowane jako przepływu pracy wykonuje, więc deweloper powinien upewnij się, że uczestnika śledzenia nie wpływa na uruchomiony przepływ pracy, wykonując operacje niezamierzone w metodzie Śledź. Przykładem tego może być zmiany zmiennych przepływu pracy lub działania wykonywane przez długi czas."
  syntax:
    content: public abstract class TrackingParticipant
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.#ctor
  id: '#ctor'
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: TrackingParticipant()
  nameWithType: TrackingParticipant.TrackingParticipant()
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingParticipant()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Po zaimplementowaniu w klasie pochodnej tworzy nowe wystąpienie klasy pochodnej."
  syntax:
    content: protected TrackingParticipant ();
    parameters: []
  overload: System.Activities.Tracking.TrackingParticipant.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  nameWithType: TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Tracking.TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Po zaimplementowaniu w klasie pochodnej, rozpoczyna przetwarzanie asynchroniczne rekordu śledzenia."
  remarks: "Oczekuje się rozpoczęcie dodawania zadania do przetwarzania rekordów i zwracać uczestników <xref:System.IAsyncResult>używającej czekać na zakończenie środowiska uruchomieniowego przepływu pracy.</xref:System.IAsyncResult> Domyślna implementacja jest wywołanie <xref:System.Activities.Tracking.TrackingParticipant.Track%2A>i zwrócenia stanu ukończone.</xref:System.Activities.Tracking.TrackingParticipant.Track%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginTrack (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: record
      type: System.Activities.Tracking.TrackingRecord
      description: "Rekord śledzenia wygenerowany."
    - id: timeout
      type: System.TimeSpan
      description: "Okres, po którym dostawca przerwanie przy próbie."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywoływana po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Obiekt zdefiniowane przez użytkownika, który unikatowo identyfikuje tej operacji asynchronicznej."
    return:
      type: System.IAsyncResult
      description: "Wynik operacji."
  overload: System.Activities.Tracking.TrackingParticipant.BeginTrack*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)
  id: EndTrack(System.IAsyncResult)
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: EndTrack(IAsyncResult)
  nameWithType: TrackingParticipant.EndTrack(IAsyncResult)
  fullName: System.Activities.Tracking.TrackingParticipant.EndTrack(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Po zaimplementowaniu w klasie pochodnej, reprezentuje koniec operacji asynchronicznych śledzenia."
  remarks: "Ta metoda powinna zablokować aż do zakończenia operacji śledzenia."
  syntax:
    content: protected virtual void EndTrack (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Stan operacji."
  overload: System.Activities.Tracking.TrackingParticipant.EndTrack*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  id: Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: Track(TrackingRecord,TimeSpan)
  nameWithType: TrackingParticipant.Track(TrackingRecord,TimeSpan)
  fullName: System.Activities.Tracking.TrackingParticipant.Track(TrackingRecord,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Po zaimplementowaniu w klasie pochodnej, używane do przetwarzania synchronicznego rekord śledzenia."
  remarks: "Metoda śledzenia jest wywoływane, gdy rekord śledzenia emituje wystąpienia przepływu pracy."
  syntax:
    content: protected abstract void Track (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout);
    parameters:
    - id: record
      type: System.Activities.Tracking.TrackingRecord
      description: "Rekord śledzenia wygenerowany."
    - id: timeout
      type: System.TimeSpan
      description: "Okres, po którym dostawca przerwanie przy próbie."
  overload: System.Activities.Tracking.TrackingParticipant.Track*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.TrackingProfile
  id: TrackingProfile
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: TrackingProfile
  nameWithType: TrackingParticipant.TrackingProfile
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingProfile
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Śledzenie profilu obiekt używany przez uczestnika śledzenia. Przed dodaniem tego uczestnika śledzenia do rozszerzenia przepływu pracy, profilu śledzenia jest ustawiona na uczestnika."
  remarks: "Profil śledzenia definiuje zdarzenia śledzenia, które są wysyłane do tego uczestnika śledzenia."
  syntax:
    content: public virtual System.Activities.Tracking.TrackingProfile TrackingProfile { get; set; }
    return:
      type: System.Activities.Tracking.TrackingProfile
      description: "Profil śledzenia."
  overload: System.Activities.Tracking.TrackingParticipant.TrackingProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Tracking.TrackingParticipant.#ctor
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingParticipant()
  nameWithType: TrackingParticipant.TrackingParticipant()
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingParticipant()
- uid: System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  nameWithType: TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Tracking.TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Activities.Tracking.TrackingRecord
  parent: System.Activities.Tracking
  isExternal: false
  name: TrackingRecord
  nameWithType: TrackingRecord
  fullName: System.Activities.Tracking.TrackingRecord
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: EndTrack(IAsyncResult)
  nameWithType: TrackingParticipant.EndTrack(IAsyncResult)
  fullName: System.Activities.Tracking.TrackingParticipant.EndTrack(IAsyncResult)
- uid: System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: Track(TrackingRecord,TimeSpan)
  nameWithType: TrackingParticipant.Track(TrackingRecord,TimeSpan)
  fullName: System.Activities.Tracking.TrackingParticipant.Track(TrackingRecord,TimeSpan)
- uid: System.Activities.Tracking.TrackingParticipant.TrackingProfile
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingParticipant.TrackingProfile
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingProfile
- uid: System.Activities.Tracking.TrackingProfile
  parent: System.Activities.Tracking
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingProfile
  fullName: System.Activities.Tracking.TrackingProfile
- uid: System.Activities.Tracking.TrackingParticipant.#ctor*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingParticipant
  nameWithType: TrackingParticipant.TrackingParticipant
- uid: System.Activities.Tracking.TrackingParticipant.BeginTrack*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: BeginTrack
  nameWithType: TrackingParticipant.BeginTrack
- uid: System.Activities.Tracking.TrackingParticipant.EndTrack*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: EndTrack
  nameWithType: TrackingParticipant.EndTrack
- uid: System.Activities.Tracking.TrackingParticipant.Track*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: Track
  nameWithType: TrackingParticipant.Track
- uid: System.Activities.Tracking.TrackingParticipant.TrackingProfile*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingParticipant.TrackingProfile
