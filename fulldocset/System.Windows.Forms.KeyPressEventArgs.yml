### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> zdarzeń."
  remarks: "KeyPressEventArgs określa znak, który składa się na naciśnięcie klawisza. Na przykład gdy użytkownik naciśnie klawisz SHIFT + K, właściwość <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>zwraca K. wielkie litery       A <xref:System.Windows.Forms.Control.KeyPress>zdarzenie wystąpi, gdy użytkownik naciśnie klawisz.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Dwa zdarzenia, które są ściśle związane ze <xref:System.Windows.Forms.Control.KeyPress>zdarzeń są <xref:System.Windows.Forms.Control.KeyUp>i <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> <xref:System.Windows.Forms.Control.KeyDown>Zdarzeń poprzedza każdego <xref:System.Windows.Forms.Control.KeyPress>zdarzenie, gdy użytkownik naciśnie klawisz, a <xref:System.Windows.Forms.Control.KeyUp>zdarzenie wystąpi, gdy użytkownik zwolni klawisz.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Gdy użytkownik posiada klawisz, zduplikowany <xref:System.Windows.Forms.Control.KeyDown>i <xref:System.Windows.Forms.Control.KeyPress>zdarzenia występują zawsze znak powtarza.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Jeden <xref:System.Windows.Forms.Control.KeyUp>zdarzeń jest generowany po zwolnieniu.</xref:System.Windows.Forms.Control.KeyUp>       Z każdym <xref:System.Windows.Forms.Control.KeyPress>zdarzenia KeyPressEventArgs została przekazana.</xref:System.Windows.Forms.Control.KeyPress> A <xref:System.Windows.Forms.KeyEventArgs>jest przekazywany z każdym <xref:System.Windows.Forms.Control.KeyDown>i <xref:System.Windows.Forms.Control.KeyUp>zdarzeń.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> A <xref:System.Windows.Forms.KeyEventArgs>Określa, czy wszystkie klawisze modyfikujące (CTRL, SHIFT lub ALT) zostały naciśnięte wraz z innego klucza.</xref:System.Windows.Forms.KeyEventArgs> (Te informacje modyfikator również można uzyskać za pośrednictwem <xref:System.Windows.Forms.Control.ModifierKeys%2A>Właściwość <xref:System.Windows.Forms.Control>klasy)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>       Ustaw <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>do `true` anulować `KeyPress` zdarzeń.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Dzięki temu formantu przetwarzanie naciśnięcie klawisza.      > [!NOTE] > Niektóre formanty przetworzy niektórych naciśniętych klawiszy na <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> Na przykład <xref:System.Windows.Forms.RichTextBox>przetwarza klawisza Enter przed <xref:System.Windows.Forms.Control.KeyPress>jest wywoływana.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> W takim przypadku nie można anulować <xref:System.Windows.Forms.Control.KeyPress>zdarzenia i anulować naciśnięcie klawisza z <xref:System.Windows.Forms.Control.KeyDown>zamiast.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       Aby uzyskać informacje na temat modelu zdarzeń, zobacz [zdarzenia](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> klasy."
  remarks: "Użyj <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>właściwość, aby uzyskać bieżący stan klawisze modyfikujące.</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "Znaków ASCII odpowiadającą kluczowi użytkownik kliknął przycisk."
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> zdarzenie zostało obsłużone."
  remarks: "Jeśli zdarzenie nie jest obsługiwane, zostanie wysłane do systemu operacyjnego do przetwarzania domyślne. Ustaw Handled `true` anulować `KeyPress` zdarzeń."
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zdarzenie jest obsługiwane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera lub ustawia znak odpowiadający naciśnięto klawisz."
  remarks: "Użyj właściwości KeyChar na przykład naciśnięcia klawiszy, w czasie wykonywania, a następnie zmodyfikować naciśnięcia klawiszy w obszarze specjalne okoliczności czasu wykonywania. Na przykład można użyć KeyChar, aby wyłączyć naciśnięć nieliczbowy, gdy użytkownik wprowadzi kod POCZTOWY, Zmień wszystkie naciśnięć alfabetycznej na wielkie litery w pole wprowadzania danych, lub monitora, klawiatury lub innych kluczy urządzenia wejściowego dla określonej kombinacji klawiszy.       Można pobrać lub ustawić następujące klucze: - a-z, A-Z.      -CTRL.      -Znaków interpunkcyjnych.      -Liczba kluczy, zarówno na górze klawiatury i na klawiaturze numerycznej.      -ENTER.       Nie można pobrać lub ustawić następujące klucze:-naciśnięcie klawisza TAB.      -Wstawianie i usuwanie.      -HOME.      -END.      -PAGE UP albo PAGE DOWN.      F1 F2.      -ALT.      -Strzałek.      > [!NOTE] > Uzyskać informacji o sposobie wykrywania dowolnego znaku z systemem innym niż wymienione powyżej, zobacz <xref:System.Windows.Forms.KeyEventArgs>klasy.</xref:System.Windows.Forms.KeyEventArgs>      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "Znaków ASCII, który składa się. Na przykład gdy użytkownik naciśnie klawisz SHIFT + K, ta właściwość zwraca K. wielkie litery"
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
