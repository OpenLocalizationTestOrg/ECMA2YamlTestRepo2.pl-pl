### YamlMime:ManagedReference
items:
- uid: System.Web.Util.RequestValidator
  id: RequestValidator
  children:
  - System.Web.Util.RequestValidator.#ctor
  - System.Web.Util.RequestValidator.Current
  - System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  - System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  langs:
  - csharp
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
  type: Class
  summary: "Definiuje podstawowe metody weryfikacji żądań niestandardowych."
  remarks: "Domyślnie program ASP.NET nie można zweryfikować żądania aż kod wyraźnie zażąda wartość z żądania. Na przykład program ASP.NET nie można zweryfikować wartości ciągu zapytania do momentu kod uzyskuje dostęp do <xref:System.Web.HttpRequest.QueryString%2A>kolekcji.</xref:System.Web.HttpRequest.QueryString%2A> Domyślnie program ASP.NET także nie można zweryfikować niektórych typów danych żądania, takie jak wartości formularza, plików cookie, nazwy plików, które zostały przekazane za pomocą protokołu HTTP, a wartość <xref:System.Web.HttpRequest.RawUrl%2A>Właściwości.</xref:System.Web.HttpRequest.RawUrl%2A>       Klasa RequestValidator jest klasą bazową, które można zaimplementować w celu zapewnienia weryfikacji żądań niestandardowych. Dzięki wdrożeniu tej klasy, można określić po wystąpieniu sprawdzania poprawności i jakiego typu dane żądania w celu przeprowadzenia walidacji na.       Domyślnie program ASP.NET udostępnia kontroli skryptów między witrynami (XSS). Można jednak uzupełnienie lub Zastąp logikę weryfikacji żądania, dostępną w programie ASP.NET przez utworzenie niestandardowej implementacji XSS. Na przykład można napisać implementacji sprawdzania poprawności żądania niestandardowe, która szuka ataki oprócz sprawdzania atakom XSS.       Aby utworzyć niestandardowe żądanie weryfikacji, należy napisać niestandardowej klasy, która pochodzi z klasy podstawowej RequestValidator. Następnie skonfiguruj ASP.NET do użycia w pliku Web.config aplikacji na poziomie żądania niestandardowego modułu sprawdzania poprawności. Niestandardowej klasy można umieścić w folderze App_Code w bibliotece klas skompilowanych z folderu Bin lub w bibliotece klas skompilowany w pamięci GAC.      > [!NOTE] > Dla aplikacji można skonfigurować tylko jeden typ sprawdzania poprawności żądań niestandardowych. Nie jest możliwe skonfigurować typ sprawdzania poprawności innego żądania, dla poszczególnych ścieżek wirtualnych lub stron."
  example:
  - "The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.  \n  \n [!code-cs[System.Web.Util.RequestValidator#1](~/add/codesnippet/csharp/t-system.web.util.reques_1.cs)]\n [!code-vb[System.Web.Util.RequestValidator#1](~/add/codesnippet/visualbasic/t-system.web.util.reques_1.vb)]  \n  \n The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.  \n  \n```  \n<system.web>  \n  <httpRuntime requestValidationType=\"CustomRequestValidation\" />  \n</system.web>  \n```"
  syntax:
    content: public class RequestValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.#ctor
  id: '#ctor'
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> klasy."
  remarks: "<xref:System.Web.Util.RequestValidator>Klasa ma konstruktora domyślnego.</xref:System.Web.Util.RequestValidator> Po zainicjowaniu nowe wystąpienie klasy, metody wewnętrznej pobiera szczegóły niestandardowego sprawdzania poprawności z informacji o konfiguracji aplikacji. Szczegóły konfiguracji są zawarte w <xref:System.Web.Configuration.HttpRuntimeSection>sekcji.</xref:System.Web.Configuration.HttpRuntimeSection> Aby uzyskać więcej informacji, zobacz [httpRuntime — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) i <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>atrybutu.</xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>       Podczas inicjowania, jedno wystąpienie <xref:System.Web.Util.RequestValidator>utworzyć klasy, a odwołania do wystąpienia jest zachowywany w <xref:System.Web.Util.RequestValidator.Current%2A>Właściwości.</xref:System.Web.Util.RequestValidator.Current%2A> </xref:System.Web.Util.RequestValidator> ASP.NET nie tworzy nowe wystąpienie modułu sprawdzania poprawności żądań na żądanie. W związku z tym implementacji niestandardowych <xref:System.Web.Util.RequestValidator>klasy musi być bezpieczne wątkowo.</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public RequestValidator ();
    parameters: []
  overload: System.Web.Util.RequestValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.Current
  id: Current
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Pobiera lub ustawia odwołanie do bieżącego <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> wystąpienia, który będzie używany w aplikacji."
  remarks: "Bieżącą właściwość przechowuje odwołanie do pojedynczego wystąpienia dozwolone <xref:System.Web.Util.RequestValidator>klasy.</xref:System.Web.Util.RequestValidator> Jeśli wystąpienie nie istnieje, zostanie utworzony nowy. Jeśli wystąpienie już istnieje, zwracany jest bieżącego wystąpienia.       Podczas inicjowania, jedno wystąpienie <xref:System.Web.Util.RequestValidator>klasy jest tworzone, a odwołania do wystąpienia ma zostać udostępnione w bieżącej właściwości.</xref:System.Web.Util.RequestValidator> ASP.NET nie tworzy nowe wystąpienie modułu sprawdzania poprawności żądań na żądanie. W związku z tym implementacji niestandardowych <xref:System.Web.Util.RequestValidator>klasy musi być bezpieczne wątkowo.</xref:System.Web.Util.RequestValidator>      > [!NOTE] > Bieżącą właściwość nie jest bezpieczne wątkowo podczas właściwość jest odwołanie do bieżącej <xref:System.Web.Util.RequestValidator>klasy.</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public static System.Web.Util.RequestValidator Current { get; set; }
    return:
      type: System.Web.Util.RequestValidator
      description: "Wystąpienie <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> klasy."
  overload: System.Web.Util.RequestValidator.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ta właściwość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Udostępnia metodę publiczną, która wywołuje chronionej <xref:System.Web.Util.RequestValidator.IsValidRequestString*>metody, aby sprawdzić poprawność danych żądania HTTP.</xref:System.Web.Util.RequestValidator.IsValidRequestString*>"
  remarks: "Metoda InvokeIsValidRequestString zapewnia publiczny dostęp do chronionej <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>metody.</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Dzięki temu można utworzyć klasy otoki niestandardowej <xref:System.Web.Util.RequestValidator>klasy i wywołanie <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>metody bez konieczności dziedziczą z <xref:System.Web.Util.RequestValidator>klasy.</xref:System.Web.Util.RequestValidator> </xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> </xref:System.Web.Util.RequestValidator>       Aby uzyskać informacji o weryfikacji żądań zobacz <xref:System.Web.UnvalidatedRequestValues>.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: public bool InvokeIsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Kontekst żądania HTTP."
    - id: value
      type: System.String
      description: "Dane żądania HTTP do sprawdzania poprawności."
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "Wyliczenie, które reprezentuje źródło danych sprawdzania poprawności żądania. Możliwe wartości wyliczenia są następujące:-<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "(Opcjonalnie) Klucz w kolekcji żądania element do zweryfikowania. Ten parametr jest używany, jeśli dane do sprawdzania poprawności są uzyskiwane z kolekcji. Jeśli dane do sprawdzania poprawności nie jest z kolekcji, ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: validationFailureIndex
      type: System.Int32
      description: "Gdy metoda zwróci wartość, wskazuje punkt początkowy problemy lub nieprawidłowy tekst w kolekcji request liczony od zera. Ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ciąg do sprawdzania poprawności nie zawiera niekodowany znaków, które mogłyby zostać użyte w złośliwymi atakami skryptów; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Weryfikuje ciąg, który zawiera dane żądania HTTP."
  remarks: "Musisz zaimplementować tę metodę do wykonywania niestandardowego sprawdzania poprawności danych żądania. Podstawowe zachowanie metody IsValidRequestString przypomina zachowanie ASP.NET implementuje wewnętrznie do sprawdzenia niebezpiecznych ciągów w weryfikacji skryptów między witrynami. Aby uzyskać więcej informacji, zobacz [jak: zapobieganie Cross-Site skryptów w programie ASP.NET](http://go.microsoft.com/fwlink/?LinkID=178708).       Jeśli walidacji niestandardowej logiki wykryje błąd, ta metoda powinna zwrócić `false` i podaj wartość w `validationFailureIndex` aby wskazać punkt początkowy tekst, który spowodował błąd. Wartość w `validationFailureIndex` musi wynosić 0 lub dodatnią liczbą całkowitą.       Logikę sprawdzenie poprawności żądania będzie kontynuowana w następujący sposób: - <xref:System.Web.HttpRequest>Klasa sprawdza znakiem pustym usuwania danych przychodzących.</xref:System.Web.HttpRequest>      - <xref:System.Web.HttpRequest>Klasy wywołuje albo IsValidRequestString metodę (Domyślna implementacja metody podstawowej) lub wywołuje pochodnymi wersjami metody.</xref:System.Web.HttpRequest>      — Jeśli metoda IsValidRequestString zwraca `false` wskazująca błąd sprawdzania poprawności, platformy ASP.NET konstruuje ciąg błędu (Jeśli to konieczne) i zgłasza <xref:System.Web.HttpRequestValidationException>wyjątek.</xref:System.Web.HttpRequestValidationException>"
  syntax:
    content: protected virtual bool IsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Kontekst bieżącego żądania."
    - id: value
      type: System.String
      description: "Dane żądania HTTP do sprawdzania poprawności."
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "Wyliczenie, które reprezentuje źródło danych sprawdzania poprawności żądania. Możliwe wartości wyliczenia są następujące:<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_RawUrl&quot; name=&quot;RawUrl&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "Klucz w kolekcji żądania element do zweryfikowania. Ten parametr jest opcjonalny. Ten parametr jest używany, jeśli dane do sprawdzania poprawności są uzyskiwane z kolekcji. Jeśli dane do sprawdzania poprawności nie jest z kolekcji, `collectionKey` może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: validationFailureIndex
      type: System.Int32
      description: "Gdy metoda zwróci wartość, wskazuje punkt początkowy problemy lub nieprawidłowy tekst w kolekcji request liczony od zera. Ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ciąg do sprawdzenia poprawności jest nieprawidłowy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Util.RequestValidator.IsValidRequestString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Util.RequestValidator.#ctor
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
- uid: System.Web.Util.RequestValidator.Current
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
- uid: System.Web.Util.RequestValidator
  parent: System.Web.Util
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.RequestValidationSource
  parent: System.Web.Util
  isExternal: false
  name: RequestValidationSource
  nameWithType: RequestValidationSource
  fullName: System.Web.Util.RequestValidationSource
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Web.Util.RequestValidator.#ctor*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator.RequestValidator
- uid: System.Web.Util.RequestValidator.Current*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString
  nameWithType: RequestValidator.InvokeIsValidRequestString
- uid: System.Web.Util.RequestValidator.IsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString
  nameWithType: RequestValidator.IsValidRequestString
