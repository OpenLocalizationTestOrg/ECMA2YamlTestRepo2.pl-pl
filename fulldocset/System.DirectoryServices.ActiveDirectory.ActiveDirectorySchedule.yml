### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  id: ActiveDirectorySchedule
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  langs:
  - csharp
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  type: Class
  summary: "Klasa ActiveDirectorySchedule reprezentuje harmonogramu tygodniowego dla replikacji usług domenowych w usłudze Active Directory."
  syntax:
    content: public class ActiveDirectorySchedule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ActiveDirectorySchedule()
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> klasy."
  syntax:
    content: public ActiveDirectorySchedule ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ActiveDirectorySchedule(ActiveDirectorySchedule)
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> przy użyciu określonego <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> obiektu."
  syntax:
    content: public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);
    parameters:
    - id: schedule
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> obiekt, który jest kopiowany do tego obiektu."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schedule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  id: RawSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera lub ustawia jest tablicą trójwymiarową, która wskazuje porę w tygodniu, czy źródło jest dostępne dla replikacji."
  syntax:
    content: public bool[,,] RawSchedule { get; set; }
    return:
      type: System.Boolean[,,]
      description: "Jest tablicą trójwymiarową z <xref:System.Boolean>elementów, w których jest element <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli źródło jest dostępne dla replikacji podczas tego określonego 15-minutowych interwałach.</xref:System.Boolean> Element jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli źródło nie jest dostępna do replikacji.       Tablica jest w formie RawSchedule [&lt;dzień tygodnia&gt;, &lt;godzina&gt;, &lt;15-minutowych interwałach&gt;]. Wszystkie te wartości są liczony od zera i tydzień zaczyna się od 00:00 w niedzielę rano, uniwersalny czas koordynowany.       Poniżej przedstawiono prawidłowe wartości dzień tygodnia.       <table><thead><tr><th> Wartość dnia tygodnia       </th><th> Wskazany dzień tygodnia.       </th></tr></thead><tbody><tr><td> 0       </td><td> Niedziela       </td></tr><tr><td> 1       </td><td> Poniedziałek       </td></tr><tr><td> 2       </td><td> Wtorek       </td></tr><tr><td> 3       </td><td> Środa       </td></tr><tr><td> 4       </td><td> Czwartek       </td></tr><tr><td> 5       </td><td> Piątek       </td></tr><tr><td> 6       </td><td> Sobota       </td></tr></tbody></table>       Godzina jest liczony od zera i określony w formacie 24-godzinnym. Na przykład 2: 00 Czy można określić jako 14. Prawidłowe wartości to 0 – 23.       15-minutowych interwałach określa blok 15 minut, w ciągu godziny, która źródło jest dostępne dla replikacji. W poniższej tabeli przedstawiono możliwe wartości dla 15-minutowych interwałach.       <table><thead><tr><th> 15-minutowych interwałach       </th><th> Opis       </th></tr></thead><tbody><tr><td> 0       </td><td> Źródło jest dostępne dla replikacji z zakresu od 0 do 14 minut po pełnej godzinie.       </td></tr><tr><td> 1       </td><td> Źródło jest dostępne dla replikacji od 15 do 29 minut po pełnej godzinie.       </td></tr><tr><td> 2       </td><td> Źródło jest dostępne dla replikacji od 30 do 44 minut po pełnej godzinie.       </td></tr><tr><td> 3       </td><td> Źródło jest dostępne dla replikacji od 45 do 59 minut po pełnej godzinie.       </td></tr></tbody></table>       W poniższym przykładzie C# pokazano, jak ta właściwość służy do określenia, czy źródło jest dostępne do replikacji w 15:50 uniwersalny czas koordynowany wtorek.      ```c#   Boolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];   ```W poniższym przykładzie C# pokazuje, jak do tej właściwości należy użyć do obliczenia 15-minutowych interwałach w czasie wykonywania przez podzielenie przez 15 minut.      ```c#   Boolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];   ```"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  id: ResetSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ResetSchedule()
  nameWithType: ActiveDirectorySchedule.ResetSchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Resetuje całego harmonogramu niedostępny."
  syntax:
    content: public void ResetSchedule ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Dodaje zakres czasu dla każdego dnia tygodnia w harmonogramie."
  remarks: "Łączą się wszystkich parametrów w ramach tej metody.       Ta metoda jest i nie powoduje usunięcia żadnych istniejących informacji harmonogramu. Jeśli istniejący harmonogram i nowego harmonogramu nakładają się, wynik nadal będzie zbiorczą. Aby usunąć harmonogram, należy użyć <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>metody.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> elementów członkowskich, które określa pierwszą godzinę, która źródło będzie dostępna do replikacji."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> elementów członkowskich, które określa pierwszy interwał 15 minut, że źródło będą dostępne dla replikacji."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> elementów członkowskich, które określa godzinę końcowego, która źródło będzie dostępna do replikacji."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> elementów członkowskich, które określa interwał 15 minut końcowego, że źródło będą dostępne dla replikacji."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Dodaje zakres czasu dla jednego dnia z harmonogramem."
  remarks: "Łączą się wszystkich parametrów w ramach tej metody.       Ta metoda jest i nie powoduje usunięcia żadnych istniejących informacji harmonogramu. Jeśli istniejący harmonogram i nowego harmonogramu nakładają się, wynik nadal będzie zbiorczą. Aby usunąć harmonogram, należy użyć <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>metody.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: day
      type: System.DayOfWeek
      description: "Jeden z <xref:System.DayOfWeek>elementów członkowskich, które określa dzień tygodnia, w których źródłowy będzie dostępna do replikacji.</xref:System.DayOfWeek>"
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> elementów członkowskich, które określa pierwszą godzinę, która źródło będzie dostępna do replikacji."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> elementów członkowskich, które określa pierwszy interwał 15 minut, że źródło będą dostępne dla replikacji."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> elementów członkowskich, które określa godzinę końcowego, która źródło będzie dostępna do replikacji."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> elementów członkowskich, które określa interwał 15 minut końcowego, że źródło będą dostępne dla replikacji."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Godzina rozpoczęcia jest późniejsza niż godzina zakończenia."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Jeden lub więcej parametrów jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>days</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Dodaje zakres czasu dla wielu dni z harmonogramem."
  remarks: "Łączą się wszystkich parametrów w ramach tej metody.       Ta metoda jest i nie powoduje usunięcia żadnych istniejących informacji harmonogramu. Jeśli istniejący harmonogram i nowego harmonogramu nakładają się, wynik nadal będzie zbiorczą. Aby usunąć harmonogram, należy użyć <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>metody.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: days
      type: System.DayOfWeek[]
      description: "Jeden z <xref:System.DayOfWeek>elementów członkowskich, które określa dzień tygodnia, w których źródłowy będzie dostępna do replikacji.</xref:System.DayOfWeek>"
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> elementów członkowskich, które określa pierwszą godzinę, która źródło będzie dostępna do replikacji."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> elementów członkowskich, które określa pierwszy interwał 15 minut, że źródło będą dostępne dla replikacji."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> elementów członkowskich, które określa godzinę końcowego, która źródło będzie dostępna do replikacji."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> elementów członkowskich, które określa interwał 15 minut końcowego, że źródło będą dostępne dla replikacji."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Godzina rozpoczęcia jest późniejsza niż godzina zakończenia."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Jeden lub więcej parametrów jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>days</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule()
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule(ActiveDirectorySchedule)
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[,,]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[,,]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ResetSchedule()
  nameWithType: ActiveDirectorySchedule.ResetSchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DirectoryServices.ActiveDirectory.HourOfDay
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: HourOfDay
  nameWithType: HourOfDay
  fullName: System.DirectoryServices.ActiveDirectory.HourOfDay
- uid: System.DirectoryServices.ActiveDirectory.MinuteOfHour
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: MinuteOfHour
  nameWithType: MinuteOfHour
  fullName: System.DirectoryServices.ActiveDirectory.MinuteOfHour
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DayOfWeek[]
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek[]
  spec.csharp:
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: DayOfWeek[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ResetSchedule
  nameWithType: ActiveDirectorySchedule.ResetSchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetDailySchedule
  nameWithType: ActiveDirectorySchedule.SetDailySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule
  nameWithType: ActiveDirectorySchedule.SetSchedule
