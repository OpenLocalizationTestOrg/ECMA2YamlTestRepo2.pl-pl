### YamlMime:ManagedReference
items:
- uid: System.Web.DefaultHttpHandler
  id: DefaultHttpHandler
  children:
  - System.Web.DefaultHttpHandler.#ctor
  - System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.DefaultHttpHandler.Context
  - System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  - System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  - System.Web.DefaultHttpHandler.IsReusable
  - System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  - System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  - System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler
  fullName: System.Web.DefaultHttpHandler
  type: Class
  summary: "Reprezentuje właściwości i metody domyślny program obsługi HTTP."
  remarks: "Obiekt element DefaultHttpHandler przechwytuje przychodzące żądania w potoku HTTP podczas zarówno żądanie przechwycenia została skonfigurowana za pośrednictwem Internet usług informacyjnych (IIS) 6.0 i powiązania jawne nie stosuje się do żądanego rozszerzenia.       Żądanie zatrzymania można skonfigurować za pomocą funkcji mapowanie symboli wieloznacznych aplikacji wprowadzone w usługach IIS 6.0. Aby uzyskać więcej informacji, wyszukaj [biblioteki MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) informacji o używaniu wieloznaczne mapowania aplikacji, aby ponownie zamapować adresu URL.       Element DefaultHttpHandler implementuje klasy <xref:System.Web.IHttpAsyncHandler>interfejsu w celu zapewnienia asynchronicznego przetwarzania żądania.</xref:System.Web.IHttpAsyncHandler> Aby uzyskać ogólne informacje na temat programów obsługi HTTP, zobacz [omówienie moduły HTTP i programów obsługi HTTP](~/add/includes/ajax-current-ext-md.md). Ponadto, aby uzyskać więcej informacji, zobacz następujące: - o tworzeniu asynchroniczne programów obsługi HTTP, zobacz [wskazówki: tworzenie asynchronicznego programu obsługi HTTP](~/add/includes/ajax-current-ext-md.md).      -O rejestrowaniu programów obsługi HTTP, zobacz [porady: rejestrowanie programów obsługi HTTP](~/add/includes/ajax-current-ext-md.md).       Klasy mogą dziedziczyć po klasie element DefaultHttpHandler zapewnienie dostosowane obsługę żądań. Można zastąpić asynchronicznego programu obsługi HTTP, która jest pochodną element DefaultHttpHandler <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>metodę, aby zmienić sposób przetwarzania żądań.</xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>       Element DefaultHttpHandler nie używa błędy programu ASP.NET. Istniejące zawartości używającej błędów usług IIS lub mechanizm błędów niestandardowych ISAPI moralnych będzie działać bez zmian."
  example:
  - "The following code example demonstrates how to implement a customized HTTP handler by deriving from the DefaultHttpHandler class.  \n  \n [!code-vb[System.Web.DefaultHttpHandler#1](~/add/codesnippet/visualbasic/t-system.web.defaulthttp_1.vb)]\n [!code-cs[System.Web.DefaultHttpHandler#1](~/add/codesnippet/csharp/t-system.web.defaulthttp_1.cs)]"
  syntax:
    content: 'public class DefaultHttpHandler : System.Web.IHttpAsyncHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.#ctor
  id: '#ctor'
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> klasy."
  syntax:
    content: public DefaultHttpHandler ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicjuje asynchroniczne połączenie z programem obsługi HTTP."
  remarks: "Podczas tworzenia programu obsługi HTTP do użycia asynchronicznego, programu obsługi musi implementować asynchroniczne żądania BeginProcessRequest i <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>metody, które są wywoływane asynchronicznie przez platformę ASP.NET.</xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>"
  syntax:
    content: public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Obiekt, który zawiera odwołania do serwera wewnętrznej obiekty służące do obsługi żądań HTTP."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda do wywołania po ukończeniu asynchronicznego wywołania metody. Jeśli `callback` jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, delegat nie jest wywoływany."
    - id: state
      type: System.Object
      description: "Wszystkie dane o stanie wymaganego do przetwarzania żądania."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Zawierający informacje o stanie procesu.</xref:System.IAsyncResult>"
  overload: System.Web.DefaultHttpHandler.BeginProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Warunki wstępne przetwarzanie Niepowodzenie żądania i żądany plik ma .asp sufiks lub żądanie zostało wysłane za pośrednictwem POST."
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.Context
  id: Context
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera kontekst skojarzony z bieżącym <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> obiektu."
  remarks: "Właściwości kontekstu umożliwia dostęp do bieżącej <xref:System.Web.HttpContext>obiektów dla klas pochodnych.</xref:System.Web.HttpContext> <xref:System.Web.HttpContext>Obiektu zapewnia dostęp do wewnętrznych <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, i <xref:System.Web.HttpApplication.Server%2A>Właściwości dla żądania.</xref:System.Web.HttpApplication.Server%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A> </xref:System.Web.HttpContext> Aby uzyskać więcej informacji na temat uzyskiwania dostępu do informacji kontekstowych zobacz <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Obiekt, który zawiera bieżącego kontekstu."
  overload: System.Web.DefaultHttpHandler.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Udostępnia metodę end procesu asynchronicznego."
  remarks: "Metoda EndProcessRequest throw wszelkie wyjątki, które są przechwytywane podczas procesu asynchronicznego."
  syntax:
    content: public virtual void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Obiekt zawierający informacje o stanie procesu."
  overload: System.Web.DefaultHttpHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  id: ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera kolekcję nagłówków żądania i wartości żądanie transferu wraz z żądaniem."
  remarks: "Właściwość ExecuteUrlHeaders zwraca pustą kolekcję, chyba że znajduje się w klasie pochodzącej z <xref:System.Web.DefaultHttpHandler>klasy.</xref:System.Web.DefaultHttpHandler> Nagłówki, które są dodawane są dołączane do kolekcji nagłówków w żądaniu przed przekazaniem żądania z powrotem do Internet Information Services (IIS)."
  syntax:
    content: protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> zawiera nagłówki żądań i wartości."
  overload: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera wartość logiczną wskazującą, czy inne żądanie może użyć bieżące wystąpienie klasy <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> klasy."
  remarks: "Aby jawnie ustaw dla właściwości IsReusable `true` lub `false`, zastępować właściwość IsReusable."
  syntax:
    content: public virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> wielokrotnego użytku, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DefaultHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  id: OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wywoływane, gdy warunki wstępne uniemożliwiają <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> obiektu na podstawie przetwarzania żądania."
  remarks: "Warunki wstępne są określone przez klienta w pola nagłówka żądania i są oceniane na serwerze sieci Web. Na przykład za pomocą warunków wstępnych, klientów można zapobiec żądanej metody (na przykład GET) są stosowane do zasobu innego niż wymagany. Aby uzyskać więcej informacji, zobacz sekcję &quot;Definicje pól nagłówka&quot; 14 w [Hypertext Transfer Protocol — HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specyfikacji w witrynie sieci Web w sieci World Wide Web konsorcjum W3C.       Metoda OnExecuteUrlPreconditionFailure jest wywoływana, gdy warunki wstępne uniemożliwiają <xref:System.Web.DefaultHttpHandler>obiektu na podstawie przetwarzania żądania.</xref:System.Web.DefaultHttpHandler> Klasa pochodna może zastąpić metodę OnExecuteUrlPreconditionFailure, aby zgłosić wyjątek, gdy warunki wstępne nie powiedzie się. <xref:System.Web.DefaultHttpHandler>Nie zgłasza wyjątek w metodzie OnExecuteUrlPreconditionFailure.</xref:System.Web.DefaultHttpHandler>       Następujących spowoduje, że warunki wstępne, niepowodzenie:-wywoływania <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Wywoływania <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Wywoływania <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Zmiana zasad pamięci podręcznej dla odpowiedzi.      — Dodawanie <xref:System.IO.Stream>obiektu jako filtru w celu <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>Właściwości.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual void OnExecuteUrlPreconditionFailure ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  id: OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zastępuje docelowy adres URL dla bieżącego żądania."
  remarks: "Zwraca metodę OverrideExecuteUrlPath `null` , chyba że jest on przesłaniany w klasie pochodzącej z <xref:System.Web.DefaultHttpHandler>klasy.</xref:System.Web.DefaultHttpHandler>       Wywoływana jest metoda OverrideExecuteUrlPath, tylko jeśli program ASP.NET działa w trybie izolacji procesu roboczego usług IIS 6.0 i odpowiedzi nie było zmodyfikować przed <xref:System.Web.DefaultHttpHandler>obiektu została wywołana.</xref:System.Web.DefaultHttpHandler> Modyfikacja odpowiedzi przez jedną z następujących czynności:-wywoływania <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Wywoływania <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Wywoływania <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Zmiana zasad pamięci podręcznej dla odpowiedzi.      — Dodawanie <xref:System.IO.Stream>obiektu jako filtru w celu <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>Właściwości.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual string OverrideExecuteUrlPath ();
    parameters: []
    return:
      type: System.String
      description: "Zastąpione adres URL do użycia w żądaniu; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> przesłoniętych adres URL nie został dostarczony."
  overload: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Umożliwia <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> obiekt do przetwarzania żądań HTTP w sieci Web."
  remarks: "Metody ProcessRequest nie powinna być wywoływana synchronicznie. Klasy, które są pochodnymi <xref:System.Web.DefaultHttpHandler>klasy można zastąpić ProcessRequest zapewnienie przetwarzania żądania dostosowane.</xref:System.Web.DefaultHttpHandler>"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Obiekt, który zawiera odwołania do wewnętrznych obiektów serwera używane do obsługi żądań HTTP."
  overload: System.Web.DefaultHttpHandler.ProcessRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ProcessRequest jest wywoływana synchronicznie."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DefaultHttpHandler.#ctor
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.DefaultHttpHandler.Context
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.DefaultHttpHandler.IsReusable
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.DefaultHttpHandler.#ctor*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler.DefaultHttpHandler
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: DefaultHttpHandler.BeginProcessRequest
- uid: System.Web.DefaultHttpHandler.Context*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: DefaultHttpHandler.EndProcessRequest
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Web.DefaultHttpHandler.IsReusable*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath
- uid: System.Web.DefaultHttpHandler.ProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DefaultHttpHandler.ProcessRequest
