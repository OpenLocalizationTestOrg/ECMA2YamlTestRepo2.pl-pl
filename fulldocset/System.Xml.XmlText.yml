### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlText
  id: XmlText
  children:
  - System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)
  - System.Xml.XmlText.CloneNode(System.Boolean)
  - System.Xml.XmlText.LocalName
  - System.Xml.XmlText.Name
  - System.Xml.XmlText.NodeType
  - System.Xml.XmlText.ParentNode
  - System.Xml.XmlText.PreviousText
  - System.Xml.XmlText.SplitText(System.Int32)
  - System.Xml.XmlText.Value
  - System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlText
  nameWithType: XmlText
  fullName: System.Xml.XmlText
  type: Class
  summary: "Reprezentuje element lub atrybut zawartości tekstowej."
  syntax:
    content: 'public class XmlText : System.Xml.XmlCharacterData'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  - System.Xml.XmlCharacterData
  implements: []
  inheritedMembers:
  - System.Xml.XmlCharacterData.AppendData(System.String)
  - System.Xml.XmlCharacterData.Data
  - System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)
  - System.Xml.XmlCharacterData.InnerText
  - System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)
  - System.Xml.XmlCharacterData.Length
  - System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)
  - System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  platform:
  - net462
- uid: System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: XmlText(String,XmlDocument)
  nameWithType: XmlText.XmlText(String,XmlDocument)
  fullName: System.Xml.XmlText.XmlText(String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.XmlText&quot;> </xref> klasy."
  remarks: "Tworzy wystąpienia <xref:System.Xml.XmlText>bezpośrednio; zamiast tego użyj metod takich jak <xref:System.Xml.XmlDocument.CreateTextNode%2A>.</xref:System.Xml.XmlDocument.CreateTextNode%2A> </xref:System.Xml.XmlText>"
  syntax:
    content: protected XmlText (string strData, System.Xml.XmlDocument doc);
    parameters:
    - id: strData
      type: System.String
      description: "Zawartość węzła; zobacz <xref:System.Xml.XmlText.Value*>Właściwości.</xref:System.Xml.XmlText.Value*>"
    - id: doc
      type: System.Xml.XmlDocument
      description: "Dokument XML nadrzędny."
  overload: System.Xml.XmlText.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlText.CloneNode(Boolean)
  fullName: System.Xml.XmlText.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Tworzy duplikat tego węzła."
  remarks: "`CloneNode`Służy jako Konstruktor kopiujący dla węzłów. Węzły tekstowe sklonowany węzła zawiera zawsze wartość danych. Aby dowiedzieć się, jak ta metoda ma zachowywać się inne typy węzłów, zobacz <xref:System.Xml.XmlNode.CloneNode%2A>Metoda `XmlNode` klasy</xref:System.Xml.XmlNode.CloneNode%2A>       Sklonowany węzeł nie ma nadrzędnego (<xref:System.Xml.XmlNode.ParentNode%2A> zwraca `null`).</xref:System.Xml.XmlNode.ParentNode%2A>"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby rekursywnie sklonować poddrzewo w określonym węźle; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> sklonować tylko węzeł."
    return:
      type: System.Xml.XmlNode
      description: "Sklonowany węzła."
  overload: System.Xml.XmlText.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.LocalName
  id: LocalName
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlText.LocalName
  fullName: System.Xml.XmlText.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera nazwę lokalnego węzła."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Węzły tekstowe, ta właściwość zwraca <xref uid=&quot;langword_csharp_#text&quot; name=&quot;#text&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlText.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.Name
  id: Name
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: Name
  nameWithType: XmlText.Name
  fullName: System.Xml.XmlText.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera kwalifikowaną nazwę węzła."
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Węzły tekstowe, ta właściwość zwraca <xref uid=&quot;langword_csharp_#text&quot; name=&quot;#text&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlText.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.NodeType
  id: NodeType
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlText.NodeType
  fullName: System.Xml.XmlText.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera typ bieżącego węzła."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "W przypadku węzły tekstowe ta wartość jest XmlNodeType.Text."
  overload: System.Xml.XmlText.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.ParentNode
  id: ParentNode
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlText.ParentNode
  fullName: System.Xml.XmlText.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera element nadrzędny tego węzła (węzły, które mogą mieć elementów nadrzędnych)."
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "<xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> Będący elementem nadrzędnym bieżącego węzła. Jeśli węzeł został utworzony i nie zostały jeszcze dodane do drzewa lub został on usunięty z drzewa, nadrzędny jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Dla wszystkich innych węzłów zależy od wartości zwracanej <xref:System.Xml.XmlNode.NodeType*>węzła.</xref:System.Xml.XmlNode.NodeType*> W poniższej tabeli opisano możliwe wartości zwracane dla <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> właściwości."
  overload: System.Xml.XmlText.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.PreviousText
  id: PreviousText
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: PreviousText
  nameWithType: XmlText.PreviousText
  fullName: System.Xml.XmlText.PreviousText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera węzeł tekst, który bezpośrednio przed tym węźle."
  syntax:
    content: public override System.Xml.XmlNode PreviousText { get; }
    return:
      type: System.Xml.XmlNode
      description: "Returns <xref href=&quot;System.Xml.XmlNode&quot;></xref>."
  overload: System.Xml.XmlText.PreviousText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.SplitText(System.Int32)
  id: SplitText(System.Int32)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: SplitText(Int32)
  nameWithType: XmlText.SplitText(Int32)
  fullName: System.Xml.XmlText.SplitText(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Dzieli węzeł na dwa węzły od wskazanego przesunięcia obie w drzewie jako elementy równorzędne."
  remarks: "Po `SplitText` jest nazywany oryginalny węzeł zawiera całą zawartość do punktu przesunięcia. Nowy węzeł tego samego typu zawiera całą zawartość w i po punkt przesunięcia i są wstawiane jako następny element równorzędny oryginalnego węzła. Gdy przesunięcie jest równa długości tego węzła, nowy węzeł nie ma danych."
  syntax:
    content: public virtual System.Xml.XmlText SplitText (int offset);
    parameters:
    - id: offset
      type: System.Int32
      description: "Przesunięcie, przy której będzie dzielony węzeł."
    return:
      type: System.Xml.XmlText
      description: "Nowy węzeł."
  overload: System.Xml.XmlText.SplitText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.Value
  id: Value
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: Value
  nameWithType: XmlText.Value
  fullName: System.Xml.XmlText.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera lub ustawia wartość węzła."
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "Zawartości węzła tekstowego."
  overload: System.Xml.XmlText.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlText.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Zapisuje wszystkie elementy podrzędne węzła do określonego <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> <xref uid=&quot;langword_csharp_XmlText&quot; name=&quot;XmlText&quot; href=&quot;&quot;></xref>węzły nie mają elementów podrzędnych, więc ta metoda nie ma wpływu."
  remarks: "Ta metoda jest rozszerzeniem firmy Microsoft do modelu DOM (Document Object)."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> , Do której ma zostać zapisany."
  overload: System.Xml.XmlText.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlText.WriteTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Zapisuje określony <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> węzła"
  remarks: "Ta metoda jest rozszerzeniem firmy Microsoft do modelu DOM (Document Object)."
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> , Do której ma zostać zapisany."
  overload: System.Xml.XmlText.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlCharacterData
  isExternal: false
  name: System.Xml.XmlCharacterData
- uid: System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlText
  isExternal: false
  name: XmlText(String,XmlDocument)
  nameWithType: XmlText.XmlText(String,XmlDocument)
  fullName: System.Xml.XmlText.XmlText(String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlText.CloneNode(System.Boolean)
  parent: System.Xml.XmlText
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlText.CloneNode(Boolean)
  fullName: System.Xml.XmlText.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlText.LocalName
  parent: System.Xml.XmlText
  isExternal: false
  name: LocalName
  nameWithType: XmlText.LocalName
  fullName: System.Xml.XmlText.LocalName
- uid: System.Xml.XmlText.Name
  parent: System.Xml.XmlText
  isExternal: false
  name: Name
  nameWithType: XmlText.Name
  fullName: System.Xml.XmlText.Name
- uid: System.Xml.XmlText.NodeType
  parent: System.Xml.XmlText
  isExternal: false
  name: NodeType
  nameWithType: XmlText.NodeType
  fullName: System.Xml.XmlText.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlText.ParentNode
  parent: System.Xml.XmlText
  isExternal: false
  name: ParentNode
  nameWithType: XmlText.ParentNode
  fullName: System.Xml.XmlText.ParentNode
- uid: System.Xml.XmlText.PreviousText
  parent: System.Xml.XmlText
  isExternal: false
  name: PreviousText
  nameWithType: XmlText.PreviousText
  fullName: System.Xml.XmlText.PreviousText
- uid: System.Xml.XmlText.SplitText(System.Int32)
  parent: System.Xml.XmlText
  isExternal: false
  name: SplitText(Int32)
  nameWithType: XmlText.SplitText(Int32)
  fullName: System.Xml.XmlText.SplitText(Int32)
- uid: System.Xml.XmlText
  parent: System.Xml
  isExternal: false
  name: XmlText
  nameWithType: XmlText
  fullName: System.Xml.XmlText
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlText.Value
  parent: System.Xml.XmlText
  isExternal: false
  name: Value
  nameWithType: XmlText.Value
  fullName: System.Xml.XmlText.Value
- uid: System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlText.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlText.WriteTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteTo(XmlWriter)
- uid: System.Xml.XmlText.#ctor*
  parent: System.Xml.XmlText
  isExternal: false
  name: XmlText
  nameWithType: XmlText.XmlText
- uid: System.Xml.XmlText.CloneNode*
  parent: System.Xml.XmlText
  isExternal: false
  name: CloneNode
  nameWithType: XmlText.CloneNode
- uid: System.Xml.XmlText.LocalName*
  parent: System.Xml.XmlText
  isExternal: false
  name: LocalName
  nameWithType: XmlText.LocalName
- uid: System.Xml.XmlText.Name*
  parent: System.Xml.XmlText
  isExternal: false
  name: Name
  nameWithType: XmlText.Name
- uid: System.Xml.XmlText.NodeType*
  parent: System.Xml.XmlText
  isExternal: false
  name: NodeType
  nameWithType: XmlText.NodeType
- uid: System.Xml.XmlText.ParentNode*
  parent: System.Xml.XmlText
  isExternal: false
  name: ParentNode
  nameWithType: XmlText.ParentNode
- uid: System.Xml.XmlText.PreviousText*
  parent: System.Xml.XmlText
  isExternal: false
  name: PreviousText
  nameWithType: XmlText.PreviousText
- uid: System.Xml.XmlText.SplitText*
  parent: System.Xml.XmlText
  isExternal: false
  name: SplitText
  nameWithType: XmlText.SplitText
- uid: System.Xml.XmlText.Value*
  parent: System.Xml.XmlText
  isExternal: false
  name: Value
  nameWithType: XmlText.Value
- uid: System.Xml.XmlText.WriteContentTo*
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlText.WriteContentTo
- uid: System.Xml.XmlText.WriteTo*
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteTo
  nameWithType: XmlText.WriteTo
