### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPart
  id: IWebPart
  children:
  - System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.Description
  - System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  - System.Web.UI.WebControls.WebParts.IWebPart.Title
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  langs:
  - csharp
  name: IWebPart
  nameWithType: IWebPart
  fullName: System.Web.UI.WebControls.WebParts.IWebPart
  type: Interface
  summary: "Definiuje wspólne właściwości interfejsu użytkownika używanych przez platformę ASP.NET <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Interfejs IWebPart zapewnia kilka właściwości zorientowane na interfejsu użytkownika, które ulepszanie środowiska użytkownika w pracy z <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów.</xref:System.Web.UI.WebControls.WebParts.WebPart> Podczas tworzenia formantów, które pochodzą z bazy <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy, możesz uzyskać implementację wszystkich właściwości w interfejsie IWebPart, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy podstawowej implementuje ten interfejs.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Możesz użyć istniejących formantów użytkownika, kontrolki ASP.NET lub niestandardowe kontrolki serwera nie dziedziczących z <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy jako część aplikacji części sieci Web, i może również użyć tych właściwości zorientowane na interfejsu użytkownika zadeklarowany w interfejsie IWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPart> Jeśli Umieść istniejące formanty serwera w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy w czasie wykonywania, są one opakowane <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>obiektu.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Ponieważ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>klasa dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy podstawowej, umożliwia korzystanie z istniejących formantów serwer do działania jako true <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów i doda do nich właściwości interfejsu IWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Jeśli umieścisz kontrolki serwera, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli stref, użyciem właściwości IWebPart w czasie wykonywania, a wartości tych właściwości można deklarować także kontrolek serwera w znaczniku strony (w formacie trwałości strony).</xref:System.Web.UI.WebControls.WebParts.WebPart> Jednak ponieważ te właściwości są dostępne tylko dla kontrolki serwera w czasie wykonywania, funkcje kodu czasu projektowania, takie jak IntelliSense nie rozpoznają IWebPart właściwości, które są zadeklarowane na formantów serwera. Właściwości zadeklarowane tych kontrolek nadal działa podczas ładowania strony, ale program Microsoft Visual Studio nie może rozpoznać właściwości jako prawidłowy w czasie projektowania. Jeśli chcesz dodać właściwości IWebPart do istniejącego serwera i kontrolek użytkownika ulepszyć środowisko użytkownika w czasie projektowania, można zaimplementować interfejsu IWebPart w formancie serwera.       Możliwe, że głównym powodem implementować interfejs IWebPart jest formantów, które nie obsługują użycia expando właściwości (niestandardowy). Właściwości expando są ciągów, które mogą zostać dodane do klasy dynamicznie jako właściwość, za pomocą klasy <xref:System.Web.UI.IAttributeAccessor>interfejsu.</xref:System.Web.UI.IAttributeAccessor> Formanty, które implementują ten interfejs, w tym <xref:System.Web.UI.WebControls.WebControl>klasy i jej funkcji podrzędnych, można użyć właściwości expando.</xref:System.Web.UI.WebControls.WebControl> W związku z tym wszystkich kontrolek serwera ASP.NET, niestandardowe kontrolki który pochodzi od ich kontrolek użytkownika sieci Web i <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty obsługują właściwości expando.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ale niestandardowych formantów, które dziedziczą bezpośrednio z bazy <xref:System.Web.UI.Control>Klasa nie obsługuje właściwości expando.</xref:System.Web.UI.Control> W związku z tym jeśli zadeklarować tych kontrolek w <xref:System.Web.UI.WebControls.WebParts.WebPartZone>nie można zadeklarować wspólne właściwości IWebPart w formantach, właściwości, takie jak <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>i <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> Jeśli chcesz użyć tych właściwości z takich kontroli, musi implementować interfejs IWebPart."
  example:
  - "The following code example demonstrates how to implement the IWebPart interface in a user control. This is a simple implementation that shows minimally how to implement the properties.  \n  \n The first part of the code example shows the user control. The user control implements all the properties of the IWebPart interface, plus two additional public properties tied to controls in the user interface. The two custom properties each use the `Personalizable` attribute, which enables the values in those properties to be saved across browser sessions. Note that in the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class implementation, all the properties of the IWebPart interface are implemented as personalizable as well, though they are not in this code example.  \n  \n [!code-cs[WebParts_IWebPart_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_1.ascx)]  \n  \n The second part of the code example shows the Web page that hosts the user control. The page has a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, within which the user control is referenced. Notice that several of the IWebPart interface's property values are set declaratively in the markup for the user control, which enables it to both behave and appear similar to a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at design time and run time. If you load the page in a browser, you can use the UI on the page to demonstrate the ability to programmatically change the values of the implemented IWebPart properties at run time. When you change some of the property values, the changes are not evident on the page, but are visible in the page source (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> property), or are stored in the application's state data (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_2.aspx)]"
  syntax:
    content: public interface IWebPart
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia adres URL obrazu, który reprezentuje <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroli w katalogu formantów."
  remarks: "Aplikacje części sieci Web często udostępniają katalogu (lub listy) formantów, które użytkownicy mogą dodawać do strony. Właściwość CatalogIconImageUrl w formancie zawiera adres URL obrazu, który reprezentuje kontrolkę, gdy pojawi się on w katalogu."
  example:
  - "The following code example demonstrates declarative and programmatic use of the CatalogIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the CatalogIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#8](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#8](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the CatalogIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the CatalogIconImageUrl property is set declaratively on the control. Note that because there is no catalog of Web Parts controls provided with this example, you cannot see the actual effect of setting this property.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_3.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Ciąg reprezentujący adres URL obrazu, używany do reprezentowania formantu w katalogu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia frazę krótkie podsumowanie formantu działania, na potrzeby etykietki narzędzi i katalogów <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Wartość właściwości Opis jest zazwyczaj używana jako ciąg opisowy dla formantu w wykazach, które stanowią listę <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, a jako wskazówka w pasku tytułu formantu</xref:System.Web.UI.WebControls.WebParts.WebPart> Zawartość właściwości jest wyświetlany w etykietce narzędzia, gdy użytkownik umieszcza wskaźnik myszy nad tekstem tytuł w pasku tytułu formantu."
  example:
  - "The following code example demonstrates declarative and programmatic use of the Description property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Description property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Description property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Description property is set declaratively on the control. Note that you can see the value of this property by positioning your mouse pointer over the title text in the control's title bar, after you have loaded the page in a browser. You can also experiment with changing the property value programmatically at run time by loading the Web page and using the provided user interface (UI) to change the property value.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_3.aspx)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Ciąg to krótkie podsumowanie funkcji formantu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  id: Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera ciąg, który jest połączony z <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>wartości właściwości do utworzenia pełnej tytuł <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroli.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>"
  remarks: "Właściwość podtytuł służy do zwracania domyślny ciąg pomocniczą dla <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu, który jest dołączany do formantu tytuł w pasku tytułu.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Jeśli podasz wartości domyślnej dla właściwości podtytuł w formancie, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart>interfejsu części sieci Web automatycznie kontroli dołącza go do wartości <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>Właściwości formantu w czasie wykonywania.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Subtitle property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Subtitle property. Note that the property is read-only and is meant to be used to provide a default subtitle that is appended to the main title of a control.  \n  \n [!code-cs[WebParts_IWebPart_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_1.ascx)]  \n  \n The second part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the writable properties from <xref:System.Web.UI.WebControls.WebParts.IWebPart> are set declaratively on the control. After you load the page in a browser, note that the default value of the Subtitle property, which was set in the user control's implementation code, is appended to the title in the control's title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_2.aspx)]"
  syntax:
    content: public string Subtitle { get; }
    return:
      type: System.String
      description: "Ciąg, który służy jako pomocniczą dla formantu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia tytuł <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  remarks: "Tekst tytułu widoczny na pasku tytułu formantu jest określona przez właściwość tytułu.       Jeśli nie zostanie podana nazwa dla formantu, kontroli części sieci Web automatycznie oblicza domyślny ciąg do użycia jako tytuł. Aby uzyskać więcej informacji zobacz <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Ponadto jest możliwe zapewnienie podtytuł domyślny jest dołączany do ciągu tytułu. Aby uzyskać więcej informacji zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Title property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Title property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Title property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Title property is set declaratively on the control.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_3.aspx)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera tytuł formantu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  id: TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia adres URL obrazu, używany do reprezentowania formantu składników Web Part na pasku tytułu własne kontrolki."
  remarks: "Właściwość TitleIconImageUrl umożliwia kojarzenie ikonę z <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ikona jest wyświetlana na pasku tytułu własne kontrolki. Spójności tematyczne, deweloperzy aplikacji może zajść potrzeba dokonania tę ikonę, podobnie jak obraz, który reprezentuje kontrolkę w wykazie części sieci Web, kontrolek (obraz, do którego odwołuje się <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>Właściwości).</xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>       Zaimplementowanego w formancie składników Web Part zestaw, TitleIconImageUrl właściwości można spersonalizować przez użytkowników końcowych, aby zmienić obraz lub ikonę na pasku tytułu formantu."
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleIconImageUrl property is set declaratively on the control. Note that if you do not provide the URL to a real image, a placeholder for the icon appears in the title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_3.aspx)]"
  syntax:
    content: public string TitleIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Ciąg, który reprezentuje adres URL obrazu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  id: TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia adres URL do dodatkowych informacji <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  remarks: "Adres URL należy przypisać do właściwości TitleUrl, tytuł formantu staje się łącza. Ta właściwość jest zapewnienie wygodny sposób umożliwiający użytkownikom końcowym dostęp do dodatkowych informacji dotyczących formantu. Dodatkowe informacje może dostarczyć praw autorskich, dane kontaktowe, szczegółowe informacje dotyczące tworzenia kontrolki lub Podsumowanie celu formantu.      > [!NOTE] > Zwykle nie należy używać właściwości TitleUrl Aby utworzyć łącze do zawartości pomocy. Najlepszym sposobem Podaj link do pomocy dla formantu jest użycie <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleUrl property is set declaratively on the control. Note that if you do not provide a URL to a real page, and then a user clicks the link in the title bar, an error message appears.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_3.aspx)]"
  syntax:
    content: public string TitleUrl { get; set; }
    return:
      type: System.String
      description: "Ciąg, który reprezentuje adres URL, aby uzyskać więcej informacji o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
