### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Rfc2898DeriveBytes
  id: Rfc2898DeriveBytes
  children:
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  - System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  - System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  langs:
  - csharp
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes
  type: Class
  summary: "Implementuje opartego na hasłach klucza pochodnego funkcjonalność, PBKDF2, za pomocą pseudolosowego generatora liczb na podstawie <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>."
  remarks: "Rfc2898DeriveBytes ma hasła, soli i liczba iteracji, a następnie generuje klucze za pomocą wywołania <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>metody.</xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>       RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli. PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane. Klasa Rfc2898DeriveBytes można utworzyć klucza pochodnego z klucza podstawowego i innych parametrów. Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.       Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 &quot;PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0,&quot; dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119). W sekcji 5.2, &quot;PBKDF2&quot;, aby uzyskać szczegółowe informacje.      > [!IMPORTANT] > Nigdy nie kodowane w hasła w kodzie źródłowym.  Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  example:
  - "The following code example uses the Rfc2898DeriveBytes class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/t-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/t-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/t-system.security.crypto_117_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes
  inheritance:
  - System.Object
  - System.Security.Cryptography.DeriveBytes
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DeriveBytes.Dispose
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> przy użyciu hasła i soli do uzyskania klucza."
  remarks: "Rozmiar ziarna musi wynosić 8 bajtów lub większą.       RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli. PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane. <xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.       Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 &quot;PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0,&quot; dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119). W sekcji 5.2, &quot;PBKDF2&quot;, aby uzyskać szczegółowe informacje.      > [!IMPORTANT] > Nigdy nie kodowane w hasła w kodzie źródłowym.  Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/7aa0756c-8905-4e75-ae9a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/7aa0756c-8905-4e75-ae9a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/7aa0756c-8905-4e75-ae9a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt);
    parameters:
    - id: password
      type: System.String
      description: "Hasło używane do uzyskania klucza."
    - id: salt
      type: System.Byte[]
      description: "Soli klucza, używany do uzyskania klucza."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Hasło lub ziarna jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> przy użyciu hasła i rozmiaru ziarna do uzyskania klucza."
  remarks: "Rozmiar ziarna musi wynosić 8 bajtów lub większą.       RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli. PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane. <xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.       Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 &quot;PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0,&quot; dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119). W sekcji 5.2, &quot;PBKDF2&quot;, aby uzyskać szczegółowe informacje.      > [!IMPORTANT] > Nigdy nie kodowane w hasła w kodzie źródłowym.  Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize);
    parameters:
    - id: password
      type: System.String
      description: "Hasło używane do uzyskania klucza."
    - id: saltSize
      type: System.Int32
      description: "Rozmiar losowe soli interesujące klasy do wygenerowania."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określony rozmiar ziarna jest mniejszy niż 8 bajtów."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Hasło lub ziarna jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> uzyskania klucza przy użyciu hasła, soli i liczby iteracji."
  remarks: "Rozmiar ziarna musi wynosić 8 bajtów i większych i liczba iteracji musi być większa niż zero. Minimalna zalecana liczba iteracji wynosi 1000.       RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli. PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane. <xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.       Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 &quot;PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0,&quot; dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119). W sekcji 5.2, &quot;PBKDF2&quot;, aby uzyskać szczegółowe informacje.      > [!IMPORTANT] > Nigdy nie kodowane w hasła w kodzie źródłowym.  Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.Byte[]
      description: "Hasło używane do uzyskania klucza."
    - id: salt
      type: System.Byte[]
      description: "Soli klucza, używany do uzyskania klucza."
    - id: iterations
      type: System.Int32
      description: "Liczba iteracji dla tej operacji."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Hasło lub ziarna jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> uzyskania klucza przy użyciu hasła, soli i liczby iteracji."
  remarks: "Rozmiar ziarna musi wynosić 8 bajtów i większych i liczba iteracji musi być większa niż zero. Minimalna zalecana liczba iteracji wynosi 1000.       RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli. PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane. <xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.       Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 &quot;PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0,&quot; dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119). W sekcji 5.2, &quot;PBKDF2&quot;, aby uzyskać szczegółowe informacje.      > [!IMPORTANT] > Nigdy nie kodowane w hasła w kodzie źródłowym.  Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/8b79aa42-3b6a-4a39-985a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/8b79aa42-3b6a-4a39-985a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/8b79aa42-3b6a-4a39-985a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "Hasło używane do uzyskania klucza."
    - id: salt
      type: System.Byte[]
      description: "Soli klucza, używany do uzyskania klucza."
    - id: iterations
      type: System.Int32
      description: "Liczba iteracji dla tej operacji."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Hasło lub ziarna jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> uzyskania klucza przy użyciu hasła, rozmiaru ziarna i liczby iteracji."
  remarks: "Rozmiar ziarna musi wynosić 8 bajtów i większych i liczba iteracji musi być większa niż zero. Minimalna zalecana liczba iteracji wynosi 1000.       RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli. PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane. <xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.       Aby uzyskać więcej informacji o PBKDF2, zobacz RFC 2898 &quot;PKCS nr 5: opartego na hasłach kryptografii specyfikacji wersji 2.0,&quot; dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119). W sekcji 5.2, &quot;PBKDF2&quot;, aby uzyskać szczegółowe informacje.      > [!IMPORTANT] > Nigdy nie kodowane w hasła w kodzie źródłowym.  Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "Hasło używane do uzyskania klucza."
    - id: saltSize
      type: System.Int32
      description: "Rozmiar losowe soli interesujące klasy do wygenerowania."
    - id: iterations
      type: System.Int32
      description: "Liczba iteracji dla tej operacji."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Hasło lub ziarna jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>iterations </code>jest poza zakresem. Ten parametr wymaga liczby nieujemnej."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  id: CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pochodzi z klucza kryptograficznego <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> obiektu."
  remarks: "Ta funkcja jest otoką elementu dla funkcji interfejsu API szyfrowania CryptDeriveKey() i jest przeznaczona do zaoferowania współdziałanie z aplikacjami za pomocą interfejsu API szyfrowania.       Jeśli `keySize` parametr ma wartość 0 bitów, jest używany domyślny rozmiar klucza określony algorytm."
  syntax:
    content: public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);
    parameters:
    - id: algname
      type: System.String
      description: "Nazwa algorytmu, dla której do uzyskania klucza."
    - id: alghashname
      type: System.String
      description: "Nazwa algorytmu wyznaczania wartości skrótu do użycia do uzyskania klucza."
    - id: keySize
      type: System.Int32
      description: "Rozmiar klucza w bitach, do uzyskania."
    - id: rgbIV
      type: System.Byte[]
      description: "Wektor inicjowania (IV) na potrzeby uzyskania klucza."
    return:
      type: System.Byte[]
      description: "Klucza pochodnego."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> keySize </code> Parametr jest nieprawidłowy.       - lub - nie można uzyskać dostawcy usług kryptograficznych (CSP).       - lub - <code> algname </code> parametru nie jest nazwą prawidłową algorytmu.       - lub - <code> alghashname </code> parametr nie jest prawidłowy skrót nazwę algorytmu."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i `Finalize` metody. `Dispose()`wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiona `true`. `Finalize`wywołuje `Dispose` z `disposing` ustawioną `false`.       Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Security.Cryptography.Rfc2898DeriveBytes>odwołań.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Zwraca pseudolosowego klucza dla tego obiektu."
  remarks: "<xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klasa implementuje funkcje PBKDF2 przy użyciu pseudolosowych generatora liczb w oparciu o <xref:System.Security.Cryptography.HMACSHA1>.</xref:System.Security.Cryptography.HMACSHA1> </xref:System.Security.Cryptography.Rfc2898DeriveBytes> <xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klasa ma hasła, soli i liczba iteracji, a następnie generuje klucze za pomocą wywołania metody wykonania funkcji GetBytes.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Powtarzane wywołania tej metody nie będą generowane ten sam klucz; Zamiast tego dołączanie dwóch wywołania metody wykonania funkcji GetBytes z `cb` wartości parametru `20` jest odpowiednikiem wywołania metody wykonania funkcji GetBytes jeden raz z `cb` wartości parametru `40`."
  example:
  - "The following example shows how to use the GetBytes method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#2](~/add/codesnippet/csharp/m-system.security.crypto_127_1.cs)]\n [!code-vb[rfc28981#2](~/add/codesnippet/visualbasic/m-system.security.crypto_127_1.vb)]\n [!code-cpp[rfc28981#2](~/add/codesnippet/cpp/m-system.security.crypto_127_1.cpp)]"
  syntax:
    content: public override byte[] GetBytes (int cb);
    parameters:
    - id: cb
      type: System.Int32
      description: "Liczba pseudolosowego klucza bajtów do wygenerowania."
    return:
      type: System.Byte[]
      description: "Tablica bajtów wypełniony pseudolosowego bajtów klucza."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>cb </code>jest poza zakresem. Ten parametr wymaga liczby nieujemnej."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  id: IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pobiera lub ustawia liczbę iteracji dla tej operacji."
  remarks: "Liczba iteracji jest liczba operacji. Tę metodę liczba powinna być większa od zera. Minimalna zalecana liczba iteracji wynosi 1000."
  example:
  - "The following example shows how to use the IterationCount property to display the number of iterations used in the generation of the key. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#3](~/add/codesnippet/csharp/p-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#3](~/add/codesnippet/visualbasic/p-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#3](~/add/codesnippet/cpp/p-system.security.crypto_117_1.cpp)]"
  syntax:
    content: public int IterationCount { get; set; }
    return:
      type: System.Int32
      description: "Liczba iteracji dla tej operacji."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Liczba iteracji jest mniejszy niż 1."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Resetuje stan operacji."
  remarks: "Ta metoda jest wywoływana automatycznie, jeśli liczba soli lub iteracji zostanie zmodyfikowany."
  example:
  - "The following example shows how to use the Reset method. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#5](~/add/codesnippet/csharp/m-system.security.crypto_26_1.cs)]\n [!code-vb[rfc28981#5](~/add/codesnippet/visualbasic/m-system.security.crypto_26_1.vb)]\n [!code-cpp[rfc28981#5](~/add/codesnippet/cpp/m-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  id: Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pobiera lub ustawia wartość zaburzająca klucza dla operacji."
  remarks: "Wartość zaburzająca, zbiór losowych bajtów, umożliwia nieautoryzowanego odszyfrowywania wiadomości trudniejsze. Atak słownikowy jest atak, w którym atakujący próbuje odszyfrować zaszyfrowanego komunikatu na podstawie porównania ilości zaszyfrowanych wartości z wcześniej obliczonych wartości zaszyfrowanych kluczy najprawdopodobniej. Atak się znacznie trudniejsze przez wprowadzenie soli lub losowych bajtów, na końcu hasła przed klucza pochodnego."
  syntax:
    content: public byte[] Salt { get; set; }
    return:
      type: System.Byte[]
      description: "Wartość zaburzająca klucza dla tej operacji."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określony rozmiar ziarna jest mniejszy niż 8 bajtów."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jest soli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: System.Security.Cryptography.DeriveBytes
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose
  nameWithType: Rfc2898DeriveBytes.Dispose
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes
  nameWithType: Rfc2898DeriveBytes.GetBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset
  nameWithType: Rfc2898DeriveBytes.Reset
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
