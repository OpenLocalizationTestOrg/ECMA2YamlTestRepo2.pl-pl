### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker
  id: RuleExpressionWalker
  children:
  - System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)
  - System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)
  langs:
  - csharp
  name: RuleExpressionWalker
  nameWithType: RuleExpressionWalker
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker
  type: Class
  summary: "Propaguje bieżące zachowanie w wyrażeniu do węzłów podrzędnych. Ta klasa nie może być dziedziczona."
  remarks: "Ta klasa jest używana przez wszystkie <xref:System.Workflow.Activities.Rules.IRuleExpression>metody propagację zachowania do węzłów podrzędnych.</xref:System.Workflow.Activities.Rules.IRuleExpression>"
  syntax:
    content: public static class RuleExpressionWalker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)
  id: AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  langs:
  - csharp
  name: AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)
  nameWithType: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Identyfikuje pola i właściwości używanych przez wyrażenie i dodaje je jako symbole <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref> wystąpienia."
  syntax:
    content: public static void AnalyzeUsage (System.Workflow.Activities.Rules.RuleAnalysis analysis, System.CodeDom.CodeExpression expression, bool isRead, bool isWritten, System.Workflow.Activities.Rules.RulePathQualifier qualifier);
    parameters:
    - id: analysis
      type: System.Workflow.Activities.Rules.RuleAnalysis
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref> Wystąpienie, które przechowuje symbole reprezentujący właściwości i pola używane przez warunków reguł i akcji."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "Wyrażenie, które było wykonywane."
    - id: isRead
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pola i właściwości do odczytu przez <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> mają być dodawane do <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isWritten
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pola i właściwości zapisanych przez <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> mają być dodawane do <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: qualifier
      type: System.Workflow.Activities.Rules.RulePathQualifier
      description: "Ścieżka pola lub właściwości określony do tego punktu."
  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>analysis</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)
  id: Clone(System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  langs:
  - csharp
  name: Clone(CodeExpression)
  nameWithType: RuleExpressionWalker.Clone(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(CodeExpression)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Tworzy kopię bezpośrednich podrzędnych węzłów bieżącego <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>."
  syntax:
    content: public static System.CodeDom.CodeExpression Clone (System.CodeDom.CodeExpression originalExpression);
    parameters:
    - id: originalExpression
      type: System.CodeDom.CodeExpression
      description: "Wyrażenie, na podstawie klonowania."
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> jest taki sam jak to wystąpienie."
  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  id: Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  langs:
  - csharp
  name: Decompile(StringBuilder,CodeExpression,CodeExpression)
  nameWithType: RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Dekompilację węzłów podrzędnych wyrażenia w postaci ciągu."
  syntax:
    content: public static void Decompile (System.Text.StringBuilder stringBuilder, System.CodeDom.CodeExpression expression, System.CodeDom.CodeExpression parentExpression);
    parameters:
    - id: stringBuilder
      type: System.Text.StringBuilder
      description: "<xref:System.Text.StringBuilder>Zawiera modyfikowalną ciąg znaków.</xref:System.Text.StringBuilder>"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "Bieżący <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>."
    - id: parentExpression
      type: System.CodeDom.CodeExpression
      description: "Element nadrzędny <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)
  id: Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  langs:
  - csharp
  name: Evaluate(RuleExecution,CodeExpression)
  nameWithType: RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Oblicza wyrażenie i wszystkie wyrażenia podrzędnego."
  syntax:
    content: public static System.Workflow.Activities.Rules.RuleExpressionResult Evaluate (System.Workflow.Activities.Rules.RuleExecution execution, System.CodeDom.CodeExpression expression);
    parameters:
    - id: execution
      type: System.Workflow.Activities.Rules.RuleExecution
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleExecution&quot;> </xref> Do wykonania wyrażenia."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> Do oceny."
    return:
      type: System.Workflow.Activities.Rules.RuleExpressionResult
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionResult&quot;> </xref> Wskazująca wynik obliczania wyrażenia."
  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>execution</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  id: Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  langs:
  - csharp
  name: Match(CodeExpression,CodeExpression)
  nameWithType: RuleExpressionWalker.Match(CodeExpression,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(CodeExpression,CodeExpression)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Porównuje bieżący wyrażenie i podrzędne węzły do innego wyrażenia, aby sprawdzić, czy są równe."
  syntax:
    content: public static bool Match (System.CodeDom.CodeExpression firstExpression, System.CodeDom.CodeExpression secondExpression);
    parameters:
    - id: firstExpression
      type: System.CodeDom.CodeExpression
      description: "Pierwszy <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> do porównania."
    - id: secondExpression
      type: System.CodeDom.CodeExpression
      description: "Drugi <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wyrażenia są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Match*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)
  id: Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  langs:
  - csharp
  name: Validate(RuleValidation,CodeExpression,Boolean)
  nameWithType: RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Sprawdza, czy węzły wyrażenia i podrzędne są prawidłowo skonfigurowane i nie zawiera błędów."
  syntax:
    content: public static System.Workflow.Activities.Rules.RuleExpressionInfo Validate (System.Workflow.Activities.Rules.RuleValidation validation, System.CodeDom.CodeExpression expression, bool isWritten);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> Do zarządzania procesem weryfikacji."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> Do oceny."
    - id: isWritten
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pola i właściwości zapisanych przez <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> są przechowywane w <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Workflow.Activities.Rules.RuleExpressionInfo
      description: "The <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionInfo&quot;></xref> for the <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref>."
  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>validation</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> expression </code> Jest równa null i kolekcji błędów na <xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> obiekt jest odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)
  nameWithType: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)
- uid: System.Workflow.Activities.Rules.RuleAnalysis
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleAnalysis
  nameWithType: RuleAnalysis
  fullName: System.Workflow.Activities.Rules.RuleAnalysis
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.Rules.RulePathQualifier
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RulePathQualifier
  nameWithType: RulePathQualifier
  fullName: System.Workflow.Activities.Rules.RulePathQualifier
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Clone(CodeExpression)
  nameWithType: RuleExpressionWalker.Clone(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(CodeExpression)
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Decompile(StringBuilder,CodeExpression,CodeExpression)
  nameWithType: RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Evaluate(RuleExecution,CodeExpression)
  nameWithType: RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)
- uid: System.Workflow.Activities.Rules.RuleExpressionResult
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleExpressionResult
  nameWithType: RuleExpressionResult
  fullName: System.Workflow.Activities.Rules.RuleExpressionResult
- uid: System.Workflow.Activities.Rules.RuleExecution
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleExecution
  nameWithType: RuleExecution
  fullName: System.Workflow.Activities.Rules.RuleExecution
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Match(CodeExpression,CodeExpression)
  nameWithType: RuleExpressionWalker.Match(CodeExpression,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(CodeExpression,CodeExpression)
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Validate(RuleValidation,CodeExpression,Boolean)
  nameWithType: RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)
  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)
- uid: System.Workflow.Activities.Rules.RuleExpressionInfo
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleExpressionInfo
  nameWithType: RuleExpressionInfo
  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo
- uid: System.Workflow.Activities.Rules.RuleValidation
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleValidation
  nameWithType: RuleValidation
  fullName: System.Workflow.Activities.Rules.RuleValidation
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage*
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: AnalyzeUsage
  nameWithType: RuleExpressionWalker.AnalyzeUsage
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone*
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Clone
  nameWithType: RuleExpressionWalker.Clone
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile*
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Decompile
  nameWithType: RuleExpressionWalker.Decompile
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate*
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Evaluate
  nameWithType: RuleExpressionWalker.Evaluate
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match*
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Match
  nameWithType: RuleExpressionWalker.Match
- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate*
  parent: System.Workflow.Activities.Rules.RuleExpressionWalker
  isExternal: false
  name: Validate
  nameWithType: RuleExpressionWalker.Validate
