### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlPipe
  id: SqlPipe
  children:
  - Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  - Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  - Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  langs:
  - csharp
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
  type: Class
  summary: "Umożliwia zarządzanym procedur składowanych działa w procesie bazy danych SQL Server, aby wrócić do wywołującego wyników. Ta klasa nie może być dziedziczona."
  remarks: "Wystąpienie tej klasy jest udostępniana zarządzanych procedury składowane za pośrednictwem <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>właściwości <xref:Microsoft.SqlServer.Server.SqlContext>klasy.</xref:Microsoft.SqlServer.Server.SqlContext> </xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>"
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a SqlPipe to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_10_1.cs)]\n [!code-vb[DataWorks SqlPipe#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_10_1.vb)]"
  syntax:
    content: public sealed class SqlPipe
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  id: ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wykonuje polecenie przekazany jako parametr i wysyła wyniki do klienta."
  remarks: "Oprócz wszystkie rzeczywiste wyniki inne komunikaty i błędy również są wysyłane bezpośrednio do klienta.       Parametry wyjściowe i zwracanych wartościach nie są wysyłane do klienta; są one dostępne dla obiekt wywołujący, za pomocą obiektu command kolekcji parametrów.       Jeśli polecenie nie jest powiązana z połączenia w trakcie <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> Ta metoda nie jest obsługiwana na polecenia powiązane z połączeniami poza procesem.       Jeśli wystąpią błędy w <xref:System.Data.SqlClient.SqlCommand>obiektu, który został przesłany wyjątki są wysyłane do potoku, ale kopia jest również przesyłany do wywołującego kodu zarządzanego.</xref:System.Data.SqlClient.SqlCommand> Jeśli kod wywołujący nie catch wyjątku, spowoduje propagowany aż stosu w kodzie języka Transact-SQL i są wyświetlane dwa razy w danych wyjściowych. Jeśli kod wywołujący catch wyjątku, konsumenta potoku nadal zostanie wyświetlony błąd, ale nie będzie błąd duplikatu."
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/csharp/8520fc47-4500-47d0-87b3-_1.cs)]\n [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/visualbasic/8520fc47-4500-47d0-87b3-_1.vb)]"
  syntax:
    content: public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> Obiektu do wykonania."
  overload: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ta metoda nie jest obsługiwana na polecenia powiązane z połączeniami poza procesem."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  id: IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> jest w trybie wysłaniem zestawów wyników z jednego z powrotem do klienta. Ta właściwość jest tylko do odczytu."
  syntax:
    content: public bool IsSendingResults { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>została wywołana metoda i <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> jest w trybie wysłaniem zestawów wyników z jednego z powrotem do klienta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  id: Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wysyła pojedynczy wiersz zestawu wyników bezpośrednio do klienta lub bieżącego użytkownika dane wyjściowe."
  syntax:
    content: public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: 'Zestaw wyników pojedynczy wiersz wysłane do klienta: <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> obiektu.'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  id: Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wysyła multirow zestawu wyników bezpośrednio do klienta lub bieżącego użytkownika dane wyjściowe."
  remarks: "Jeśli <xref:System.Data.SqlClient.SqlDataReader>przekazano obiekt jako parametr ma ukryty kolumn, te kolumny nie są propagowane do zestawu wyników wysłane do klienta.</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public void Send (System.Data.SqlClient.SqlDataReader reader);
    parameters:
    - id: reader
      type: System.Data.SqlClient.SqlDataReader
      description: 'Zestaw wyników multirow do wysłania do klienta: <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> obiektu.'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  id: Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wysyła komunikat ciąg bezpośrednio do klienta lub bieżącego użytkownika dane wyjściowe."
  remarks: "Ciąg komunikat jest wysyłany jako komunikat informacyjny do klienta. Aplikacje klienckie można słuchać wiadomości za pomocą różnych mechanizmów, w zależności od danych dostępu interfejsu programowania aplikacji (API), które używają. Na przykład, jeśli klient używa ADO.NET, przesyłać komunikaty za pośrednictwem <xref:System.Data.SqlClient.SqlConnection.InfoMessage>zdarzeń.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>"
  example:
  - "The following example uses the Send method to send a message string directly to the client.  \n  \n [!code-vb[DataWorks SqlPipe.Send#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_4_1.vb)]\n [!code-cs[DataWorks SqlPipe.Send#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_4_1.cs)]"
  syntax:
    content: public void Send (string message);
    parameters:
    - id: message
      type: System.String
      description: "Ciąg komunikatu do wysłania do klienta."
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> message </code> Jest większa niż 4000 znaków."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  id: SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Oznacza koniec zestawu wyników, a następnie zwraca <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> wystąpienie do stanu początkowego."
  remarks: "Zarządzane procedury składowane można wysyłać zestawów wyników do klientów, którzy nie wdrażania <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> Ta metoda wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, Zezwalaj na procedury składowane w celu wysyłania zestawy wyników niestandardowych do klienta.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the SendResultsEnd method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_3_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_3_1.cs)]"
  syntax:
    content: public void SendResultsEnd ();
    parameters: []
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>— Metoda nie została wcześniej wywołana.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wysyła pojedynczy wiersz danych z powrotem do klienta."
  remarks: "Zarządzane procedury składowane można wysyłać zestawów wyników do klientów, którzy nie wdrażania <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> Ta metoda wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, umożliwia procedur składowanych do wysyłania zestawy wyników niestandardowych do klienta.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>       Metoda SendResultsRow wysyła pojedynczy wiersz danych z powrotem do klienta. Wiersze można następnie zwracany do obiektu wywołującego przez wywołanie metody SendResultsRow, jeden raz dla każdego wiersza są wysyłane. Po wysłaniu wszystkich wierszy wywołanie <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>metody jest wymagany w celu oznaczenia zakończenia zestawu wyników.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the SendResultsRow method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/ddfb48e8-078f-4be8-b690-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/ddfb48e8-078f-4be8-b690-_1.cs)]"
  syntax:
    content: public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> obiektu z wartości w kolumnach wiersza do wysłania do klienta. Schematu dla rekordu musi być zgodna ze schematem opisanego przez metadane <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> przekazany do <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>metody.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>— Metoda nie została wcześniej wywołana.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Oznacza początek zestawu wyników do wysłania do klienta, a parametr rekordu do utworzenia metadanych, który opisuje zestaw wyników."
  remarks: "Zarządzane procedury składowane można wysyłać zestawów wyników do klientów, którzy nie wdrażania <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> Ta metoda wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, Zezwalaj na procedury składowane w celu wysyłania zestawy wyników niestandardowych do klienta.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       Metoda SendResultsStart oznacza początek zestawu wyników, a parametr rekordu do utworzenia metadanych, który opisuje zestaw wyników. Wszystkie kolejne wiersze, wysyłane przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>metody, musi odpowiadać tej definicji metadanych.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       Należy pamiętać, że po wywołaniu metody SendResultsStart, tylko <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>można wywołać.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> Inne metody w tym samym wystąpieniu <xref:Microsoft.SqlServer.Server.SqlPipe>zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:Microsoft.SqlServer.Server.SqlPipe> <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>Ustawia <xref:Microsoft.SqlServer.Server.SqlPipe>do stanu początkowego, gdy inne metody można wywołać.</xref:Microsoft.SqlServer.Server.SqlPipe></xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>       Po kontroli zwraca do języka Transact-SQL pochodzący z wykonania na CLR, nie należy próbować użyć zmiennej statyczne lub lokalnego został zainicjowany w pamięci środowiska CLR. Na przykład, czy nie magazynu klasy wystąpienia w toku, na przykład `SQLDataRecord`, który będzie używany po kontroli zwraca z aparatu CLR. Jedynym wyjątkiem jest `SQLMetaData` w klasie procesu."
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the SendResultsStart method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/visualbasic/7934d20a-2ed7-4876-a001-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/csharp/7934d20a-2ed7-4876-a001-_1.cs)]"
  syntax:
    content: public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> obiektu, z którego metadanych jest wyodrębniany i używany do opisania zestawu wyników."
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> record </code> Nie ma kolumn lub nie został zainicjowany."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Inną metodą niż <> </> *> lub <> </> *> została wywołana po metodzie SendResultsStart."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlDataRecord
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlDataRecord
  nameWithType: SqlDataRecord
  fullName: Microsoft.SqlServer.Server.SqlDataRecord
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend
  nameWithType: SqlPipe.ExecuteAndSend
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
- uid: Microsoft.SqlServer.Server.SqlPipe.Send*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send
  nameWithType: SqlPipe.Send
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd
  nameWithType: SqlPipe.SendResultsEnd
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow
  nameWithType: SqlPipe.SendResultsRow
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart
  nameWithType: SqlPipe.SendResultsStart
