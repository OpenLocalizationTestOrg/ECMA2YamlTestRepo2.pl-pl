### YamlMime:ManagedReference
items:
- uid: System.Windows.Trigger
  id: Trigger
  children:
  - System.Windows.Trigger.#ctor
  - System.Windows.Trigger.Property
  - System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  - System.Windows.Trigger.Setters
  - System.Windows.Trigger.SourceName
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Trigger.Value
  langs:
  - csharp
  name: Trigger
  nameWithType: Trigger
  fullName: System.Windows.Trigger
  type: Class
  summary: "Reprezentuje wyzwalaczy, które stosuje się wartości właściwości lub warunkowo wykonuje akcje."
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]Definiuje właściwości, które odpowiadają akcji przez użytkownika końcowego, takie jak <xref:System.Windows.UIElement.IsMouseOver%2A>właściwość, która ma ustawioną wartość `true` po użytkownika znajduje się kursor nad <xref:System.Windows.UIElement>lub odpowiadających im <xref:System.Windows.ContentElement.IsMouseOver%2A>właściwości <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.ContentElement.IsMouseOver%2A> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.IsMouseOver%2A> Reprezentujący akcji przez użytkownika końcowego w wartości właściwości, oraz elementu Trigger umożliwia [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] style w celu zmiany wartości właściwości na podstawie tych czynności przez użytkownika końcowego z wewnątrz znaczników.       Właściwości zmienione przez wyzwalacze automatycznie zostają zresetowane do ich poprzedniej wartości, gdy nie jest spełniony warunek wyzwalane. Wyzwalacze są optymalizowane dla przejściowy stany oczekiwano zmiany i wróć do oryginalnego stanu, takie jak <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>i <xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A>na <xref:System.Windows.Controls.ListBoxItem>.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> </xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> <xref:System.Windows.Trigger.Property%2A>Odsetek musi być właściwością zależności.</xref:System.Windows.Trigger.Property%2A>       Zauważ, że należy określić zarówno <xref:System.Windows.Trigger.Property%2A>i <xref:System.Windows.Trigger.Value%2A>Właściwości wyzwalaczy dla wyzwalacza znaczące.</xref:System.Windows.Trigger.Value%2A> </xref:System.Windows.Trigger.Property%2A> Jeśli nie ustawiono jedną lub obie właściwości, jest zwracany wyjątek.       <xref:System.Windows.Trigger.Setters%2A>Właściwości obiektu wyzwalacz może zawierać tylko <xref:System.Windows.Setter>obiektów.</xref:System.Windows.Setter> </xref:System.Windows.Trigger.Setters%2A> Dodawanie <xref:System.Windows.Setter>podrzędny obiekt wyzwalacza niejawnie dodaje go do <xref:System.Windows.SetterBaseCollection>dla obiekt wyzwalacza.</xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; tylko <xref:System.Windows.Style.Setters%2A?displayProperty=fullName>obsługuje <xref:System.Windows.EventSetter>obiektów.</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>       Istnieją inne typy wyzwalaczy. <xref:System.Windows.MultiTrigger>Umożliwia zastosowanie zmian na podstawie stanu wiele właściwości.</xref:System.Windows.MultiTrigger> <xref:System.Windows.EventTrigger>Umożliwia zastosowanie zmian, gdy wystąpi zdarzenie.</xref:System.Windows.EventTrigger> <xref:System.Windows.DataTrigger>i <xref:System.Windows.MultiDataTrigger>są właściwości powiązane z danymi.</xref:System.Windows.MultiDataTrigger></xref:System.Windows.DataTrigger>"
  example:
  - "The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a Trigger element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")]

      public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.Trigger.#ctor
  id: '#ctor'
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Trigger&quot;> </xref> klasy."
  syntax:
    content: public Trigger ();
    parameters: []
  overload: System.Windows.Trigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Property
  id: Property
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia właściwość, która zwraca wartość, która jest porównywana z <xref:System.Windows.Trigger.Value*>Właściwości wyzwalacza.</xref:System.Windows.Trigger.Value*> Wynik porównania ma sprawdzania równości odwołania."
  remarks: "Wartość zwrócona przez tę właściwość jest porównywana z wartością określoną przez <xref:System.Windows.Trigger.Value%2A>Właściwości.</xref:System.Windows.Trigger.Value%2A> Porównanie, które jest przeprowadzane jest sprawdzenie równość odwołania. Jeśli te dwie wartości są zgodne, następnie skojarzone <xref:System.Windows.Setter>s zastosowanie wartości określonej właściwości.</xref:System.Windows.Setter>       Użyj `ClassName.PropertyName` składni, aby zakwalifikować określasz, jeśli stylu lub szablonie, który zawiera wyzwalacz nie ma właściwości `TargetType` zestawu właściwości.       Zauważ, że należy określić zarówno właściwości i <xref:System.Windows.Trigger.Value%2A>właściwości <xref:System.Windows.Trigger>wyzwalacza znaczące.</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Value%2A> Jeśli nie ustawiono jedną lub obie właściwości, jest zwracany wyjątek."
  example:
  - "The following example contains two triggers. The first changes the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Button> when the <xref:System.Windows.UIElement.IsMouseOver%2A> property is **true**. The second changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**. The <xref:System.Windows.Style.TargetType%2A> of the <xref:System.Windows.Style> is set to <xref:System.Windows.Controls.Button> and therefore there is no need to qualify the `Property` properties with the class name.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public System.Windows.DependencyProperty Property { get; set; }
    return:
      type: System.Windows.DependencyProperty
      description: "A <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> zwracającego wartość właściwości elementu. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Trigger.Property*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Windows.Style&quot;> </xref> nie może zawierać <xref href=&quot;System.Windows.Trigger&quot;> </xref> odwołujący się do <xref href=&quot;System.Windows.Style&quot;> </xref> właściwości."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Po <xref href=&quot;System.Windows.Trigger&quot;> </xref> jest używana, nie może być modyfikowany."
  platform:
  - net462
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  id: ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obsługuje przypadków, w którym konwertera typów zawiera wartość właściwości <xref href=&quot;System.Windows.Trigger&quot;> </xref> obiektu."
  remarks: "Jest to metoda odwołuje się zastosowane <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>atrybutu na poziomie klasy, co oznacza, że ta metoda przetwarza wszystkie próby ustawienia wartości <xref:System.Windows.Trigger>za pomocą konwertera typu.</xref:System.Windows.Trigger> </xref:System.Windows.Markup.XamlSetTypeConverterAttribute> Nie zwykle ta metoda jest wywoływana bezpośrednio."
  syntax:
    content: public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "Obiekt, gdzie konwerter typów ustawia wartość."
    - id: eventArgs
      type: System.Windows.Markup.XamlSetTypeConverterEventArgs
      description: "Dane, które ma zastosowanie w przypadku przetwarzania konwertera typu."
  overload: System.Windows.Trigger.ReceiveTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Setters
  id: Setters
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.Setter&quot;> </xref> obiektów, które opisują wartości właściwości do zastosowania po spełnieniu określonego warunku."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Setters&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.Setters>       ZeroOrMoreSetters     </object.Setters>   </object>   ``` <a name=&quot;xamlValues_Setters&quot;> </a> ## wartości XAML *ZeroOrMoreSetters* Zero lub więcej <xref:System.Windows.Setter>obiektów.</xref:System.Windows.Setter>       To nie obsługuje <xref:System.Windows.EventSetter>obiektu.</xref:System.Windows.EventSetter>       A <xref:System.Windows.Trigger>umożliwia użycie <xref:System.Windows.Setter>s, aby zastosować właściwości wartości, gdy element spełnia określony warunek.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> Na przykład można zmienić kolor tła elementu, gdy jest aktywny.       Jeśli tę samą właściwość jest ustawiona więcej niż raz, zostaną zastosowane ostatnią wartość właściwości.       Metody ustawiające właściwości <xref:System.Windows.Trigger>obiekt może zawierać tylko <xref:System.Windows.Setter>obiektów.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> Dodawanie <xref:System.Windows.Setter>dziecka <xref:System.Windows.Trigger>obiektu niejawnie dodaje go do <xref:System.Windows.SetterBaseCollection>dla <xref:System.Windows.Trigger>obiektu.</xref:System.Windows.Trigger> </xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Trigger> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; tylko <xref:System.Windows.Style.Setters%2A?displayProperty=fullName>obsługuje <xref:System.Windows.EventSetter>obiektów.</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>"
  example:
  - "As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. In the following example, `<Trigger.Setters>` is implicit.  \n  \n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/photostore/window1.xaml#triggersettersref)]\n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/p-system.windows.trigger_3_1.xaml)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Trigger.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.SourceName
  id: SourceName
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia nazwę obiektu z właściwością powodujący skojarzone metody ustawiające ma zostać zastosowany."
  remarks: "Tę właściwość można ustawić na nazwę dowolnego elementu w ramach zakresu, gdzie kolekcji wyzwalacza (kolekcji tego <xref:System.Windows.Trigger>jest częścią) jest stosowana.</xref:System.Windows.Trigger> Zazwyczaj jest to element o nazwie, który znajduje się w szablonie, który zawiera ten <xref:System.Windows.Trigger>.</xref:System.Windows.Trigger>       Można określić nazwę obiektów przy użyciu [x: Name — dyrektywa](~/add/includes/ajax-current-ext-md.md) składni."
  example:
  - "One scenario when you would use the SourceName property is when the property of interest is not a property of the templated parent, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#TriggerSourceName](~/add/codesnippet/xaml/controltemplateexamples/resources/menu.xaml#triggersourcename)]"
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "Jest właściwością domyślną <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Jeśli ta właściwość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a następnie <xref:System.Windows.Trigger.Property*>Właściwości jest obliczane w odniesieniu do elementu tego stylu lub szablonie są stosowane do (styl nadrzędny lub szablonem nadrzędnego).</xref:System.Windows.Trigger.Property*>"
  overload: System.Windows.Trigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Po <xref href=&quot;System.Windows.Trigger&quot;> </xref> jest używana, nie może być modyfikowany."
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obiekt sygnały tego inicjowania jest uruchamiana."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Windows.Setter>wystąpienia jest rzutowane na <xref:System.ComponentModel.ISupportInitialize>interfejsu.</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obiekt sygnały tego Inicjowanie zostało zakończone."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Windows.Setter>wystąpienia jest rzutowane na <xref:System.ComponentModel.ISupportInitialize>interfejsu.</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Dodaje obiekt podrzędny."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Windows.Trigger>wystąpienia jest rzutowane na <xref:System.Windows.Markup.IAddChild>interfejsu.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Aby dodać obiekt podrzędny."
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Dodaje tekst węzła do obiektu."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Windows.Trigger>wystąpienia jest rzutowane na <xref:System.Windows.Markup.IAddChild>interfejsu.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "Tekst, aby dodać do obiektu."
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Value
  id: Value
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia wartość do porównania z wartością właściwości elementu. Wynik porównania ma sprawdzania równości odwołania."
  remarks: "Ta wartość jest porównywana z wartością właściwości zwróconej przez <xref:System.Windows.Trigger.Property%2A>Właściwość <xref:System.Windows.Trigger>.</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Property%2A> Porównanie, które jest przeprowadzane jest sprawdzenie jakości odwołania. Jeśli te dwie wartości są równe, a następnie skojarzone <xref:System.Windows.Setter>s zastosowanie wartości określonej właściwości.</xref:System.Windows.Setter>       Zauważ, że należy określić zarówno <xref:System.Windows.Trigger.Property%2A>i wartość właściwości na <xref:System.Windows.Trigger>wyzwalacza znaczące.</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Property%2A> W związku z tym jeśli nie określono jedną lub obie właściwości, następnie jest zwracany wyjątek.      <a name=&quot;xamlPropertyElementUsage_Value&quot;></a>## Użycie elementu właściwości XAML```   <object>     <object.Value>       Value     </object.Value>   </object>   ```"
  example:
  - "The following example changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Zobacz też sekcji wyjątki."
  overload: System.Windows.Trigger.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wyrażenia, np. powiązania nie są obsługiwane."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Po <xref href=&quot;System.Windows.Trigger&quot;> </xref> jest używana, nie może być modyfikowany."
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Trigger.#ctor
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
- uid: System.Windows.Trigger.Property
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.Windows.Trigger.Setters
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.Trigger.SourceName
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.Trigger.Value
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
- uid: System.Windows.Trigger.#ctor*
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger
  nameWithType: Trigger.Trigger
- uid: System.Windows.Trigger.Property*
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
- uid: System.Windows.Trigger.ReceiveTypeConverter*
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter
  nameWithType: Trigger.ReceiveTypeConverter
- uid: System.Windows.Trigger.Setters*
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
- uid: System.Windows.Trigger.SourceName*
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Trigger.Value*
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
