### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector4
  id: Vector4
  children:
  - System.Numerics.Vector4.#ctor(System.Single)
  - System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  - System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  - System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.CopyTo(System.Single[])
  - System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  - System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  - System.Numerics.Vector4.Equals(System.Object)
  - System.Numerics.Vector4.GetHashCode
  - System.Numerics.Vector4.Length
  - System.Numerics.Vector4.LengthSquared
  - System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  - System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  - System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  - System.Numerics.Vector4.One
  - System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  - System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  - System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.ToString
  - System.Numerics.Vector4.ToString(System.String)
  - System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  - System.Numerics.Vector4.UnitW
  - System.Numerics.Vector4.UnitX
  - System.Numerics.Vector4.UnitY
  - System.Numerics.Vector4.UnitZ
  - System.Numerics.Vector4.W
  - System.Numerics.Vector4.X
  - System.Numerics.Vector4.Y
  - System.Numerics.Vector4.Z
  - System.Numerics.Vector4.Zero
  langs:
  - csharp
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
  type: Struct
  summary: "Reprezentuje wektora z czterech wartości zmiennoprzecinkowych pojedynczej precyzji."
  remarks: "Struktura Vector4 zapewnia obsługę przyspieszanie sprzętowe."
  syntax:
    content: 'public struct Vector4 : IEquatable<System.Numerics.Vector4>, IFormattable'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Vector4>
  - System.IFormattable
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Single)
  nameWithType: Vector4.Vector4(Single)
  fullName: System.Numerics.Vector4.Vector4(Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Tworzy nowy <xref href=&quot;System.Numerics.Vector4&quot;> </xref> obiektu, w której cztery elementy mają taką samą wartość."
  syntax:
    content: public Vector4 (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Wartość do przypisania do wszystkich czterech elementów."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Vector3,Single)
  nameWithType: Vector4.Vector4(Vector3,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector3,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Tworzy nowy <xref href=&quot;System.Numerics.Vector4&quot;> </xref> obiektu z określonego <xref href=&quot;System.Numerics.Vector3&quot;> </xref> obiekt i składników W."
  syntax:
    content: public Vector4 (System.Numerics.Vector3 value, float w);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Wektor dla składników X, Y i Z."
    - id: w
      type: System.Single
      description: "W części."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  id: '#ctor(System.Numerics.Vector2,System.Single,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Vector2,Single,Single)
  nameWithType: Vector4.Vector4(Vector2,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector2,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Tworzy nowy <xref href=&quot;System.Numerics.Vector4&quot;> </xref> obiektu z określonego <xref href=&quot;System.Numerics.Vector2&quot;> </xref> obiektu i Z i składników W."
  syntax:
    content: public Vector4 (System.Numerics.Vector2 value, float z, float w);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Wektor dla składników X i Y."
    - id: z
      type: System.Single
      description: "Składnik Z."
    - id: w
      type: System.Single
      description: "W części."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Single,Single,Single,Single)
  nameWithType: Vector4.Vector4(Single,Single,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Tworzy wektora, których elementy mają określone wartości."
  syntax:
    content: public Vector4 (float x, float y, float z, float w);
    parameters:
    - id: x
      type: System.Single
      description: "Wartość do przypisania do <xref href=&quot;System.Numerics.Vector4.X&quot;> </xref> pola."
    - id: y
      type: System.Single
      description: "Wartość do przypisania do <xref href=&quot;System.Numerics.Vector4.Y&quot;> </xref> pola."
    - id: z
      type: System.Single
      description: "Wartość do przypisania do <xref href=&quot;System.Numerics.Vector4.Z&quot;> </xref> pola."
    - id: w
      type: System.Single
      description: "Wartość do przypisania do <xref href=&quot;System.Numerics.Vector4.W&quot;> </xref> pola."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  id: Abs(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Abs(Vector4)
  nameWithType: Vector4.Abs(Vector4)
  fullName: System.Numerics.Vector4.Abs(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wektor, której elementy są wartości bezwzględne poszczególnych elementów wektora określony."
  syntax:
    content: public static System.Numerics.Vector4 Abs (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "Wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor wartość bezwzględna."
  overload: System.Numerics.Vector4.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Add(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Add(Vector4,Vector4)
  nameWithType: Vector4.Add(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Add(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dodaje dwa wektory."
  syntax:
    content: public static System.Numerics.Vector4 Add (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektorów do dodania."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektorów do dodania."
    return:
      type: System.Numerics.Vector4
      description: "Równy określonemu procentowi wektora."
  overload: System.Numerics.Vector4.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  id: Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Clamp(Vector4,Vector4,Vector4)
  nameWithType: Vector4.Clamp(Vector4,Vector4,Vector4)
  fullName: System.Numerics.Vector4.Clamp(Vector4,Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Ogranicza wektor od wartości minimalnej i maksymalnej."
  syntax:
    content: public static System.Numerics.Vector4 Clamp (System.Numerics.Vector4 value1, System.Numerics.Vector4 min, System.Numerics.Vector4 max);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "Wektor do ograniczenia."
    - id: min
      type: System.Numerics.Vector4
      description: "Wartość minimalna."
    - id: max
      type: System.Numerics.Vector4
      description: "Wartość maksymalna."
    return:
      type: System.Numerics.Vector4
      description: "Wektor ograniczone."
  overload: System.Numerics.Vector4.Clamp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.CopyTo(System.Single[])
  id: CopyTo(System.Single[])
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: CopyTo(Single[])
  nameWithType: Vector4.CopyTo(Single[])
  fullName: System.Numerics.Vector4.CopyTo(Single[])
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Kopiuje elementy wektora do określonej tablicy."
  remarks: '`array` must have at least four elements. The method copies the vector''s elements starting at index 0.'
  syntax:
    content: public void CopyTo (float[] array);
    parameters:
    - id: array
      type: System.Single[]
      description: "Tablica docelowa."
  overload: System.Numerics.Vector4.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Liczba elementów w bieżące wystąpienie jest większa niż w tablicy."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>jest wielowymiarowy."
  platform:
  - net462
- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  id: CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: CopyTo(Single[],Int32)
  nameWithType: Vector4.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector4.CopyTo(Single[],Int32)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Kopiuje elementy wektorów do określonej tablicy, zaczynając od pozycji określonego indeksu."
  remarks: '`array`musi mieć wystarczającą liczbę elementów do uwzględnienia elementów cztery wektora. Innymi słowy, elementy `index` za pośrednictwem `index` + 3 musi już istnieć w `array`.'
  syntax:
    content: public void CopyTo (float[] array, int index);
    parameters:
    - id: array
      type: System.Single[]
      description: "Tablica docelowa."
    - id: index
      type: System.Int32
      description: "Indeks, w którym można skopiować pierwszym elementem wektora."
  overload: System.Numerics.Vector4.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Liczba elementów w bieżące wystąpienie jest większa niż w tablicy."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera.       - lub - <code>index</code> jest większa niż lub równa długości tablicy."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>jest wielowymiarowy."
  platform:
  - net462
- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Distance(Vector4,Vector4)
  nameWithType: Vector4.Distance(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Distance(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Oblicza euklidesowa odległość między dwoma punktami danego."
  syntax:
    content: public static float Distance (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "Pierwszy punkt."
    - id: value2
      type: System.Numerics.Vector4
      description: "Drugi punkt."
    return:
      type: System.Single
      description: "Odległość."
  overload: System.Numerics.Vector4.Distance*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  id: DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: DistanceSquared(Vector4,Vector4)
  nameWithType: Vector4.DistanceSquared(Vector4,Vector4)
  fullName: System.Numerics.Vector4.DistanceSquared(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca kwadrat euklidesowa odległość między dwa określone punkty."
  syntax:
    content: public static float DistanceSquared (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "Pierwszy punkt."
    - id: value2
      type: System.Numerics.Vector4
      description: "Drugi punkt."
    return:
      type: System.Single
      description: "Odległość kwadrat."
  overload: System.Numerics.Vector4.DistanceSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Divide(Vector4,Vector4)
  nameWithType: Vector4.Divide(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Divide(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dzieli pierwszym wektorze przez drugą."
  syntax:
    content: public static System.Numerics.Vector4 Divide (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor, w wyniku podziału."
  overload: System.Numerics.Vector4.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  id: Divide(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Divide(Vector4,Single)
  nameWithType: Vector4.Divide(Vector4,Single)
  fullName: System.Numerics.Vector4.Divide(Vector4,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dzieli określony wektor przez określoną wartość skalarną."
  syntax:
    content: public static System.Numerics.Vector4 Divide (System.Numerics.Vector4 left, float divisor);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Wektor."
    - id: divisor
      type: System.Single
      description: "Wartość skalarną."
    return:
      type: System.Numerics.Vector4
      description: "Wektora, którego wynikiem podziału."
  overload: System.Numerics.Vector4.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Dot(Vector4,Vector4)
  nameWithType: Vector4.Dot(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Dot(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca iloczyn dwóch wektorów."
  syntax:
    content: public static float Dot (System.Numerics.Vector4 vector1, System.Numerics.Vector4 vector2);
    parameters:
    - id: vector1
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: vector2
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Single
      description: "Skalarnego."
  overload: System.Numerics.Vector4.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  id: Equals(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Equals(Vector4)
  nameWithType: Vector4.Equals(Vector4)
  fullName: System.Numerics.Vector4.Equals(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wartość wskazującą, czy to wystąpienie i innym wektor są takie same."
  remarks: "Dwa wektory są takie same jeśli ich <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, i <xref:System.Numerics.Vector4>elementy są takie same.</xref:System.Numerics.Vector4> </xref:System.Numerics.Vector4> </xref:System.Numerics.Vector4> </xref:System.Numerics.Vector4>"
  syntax:
    content: public bool Equals (System.Numerics.Vector4 other);
    parameters:
    - id: other
      type: System.Numerics.Vector4
      description: "Inne wektora."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa wektory są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Vector4.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Vector4.Equals(Object)
  fullName: System.Numerics.Vector4.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wartość wskazującą, czy to wystąpienie oraz określony obiekt są równe."
  remarks: "Bieżące wystąpienie i `obj` są takie same Jeśli `obj` jest <xref:System.Numerics.Vector4>obiektów i ich odpowiednich elementów są takie same.</xref:System.Numerics.Vector4>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do porównania z bieżącym wystąpieniem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżące wystąpienie i <code> obj </code> są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector4.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Vector4.GetHashCode()
  fullName: System.Numerics.Vector4.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu."
  overload: System.Numerics.Vector4.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Length
  id: Length
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Length()
  nameWithType: Vector4.Length()
  fullName: System.Numerics.Vector4.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca długość ten obiekt wektora."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "Długość wektora."
  overload: System.Numerics.Vector4.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Vector4.LengthSquared()
  fullName: System.Numerics.Vector4.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca długość wektora kwadrat."
  remarks: "Ta operacja oferuje lepszą wydajność niż wywołanie <xref:System.Numerics.Vector4.Length%2A>metody.</xref:System.Numerics.Vector4.Length%2A>"
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "Długość wektora kwadrat."
  overload: System.Numerics.Vector4.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  id: Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Lerp(Vector4,Vector4,Single)
  nameWithType: Vector4.Lerp(Vector4,Vector4,Single)
  fullName: System.Numerics.Vector4.Lerp(Vector4,Vector4,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Wykonuje interpolacji liniowej między dwoma wektorami oparte na danym wagi."
  syntax:
    content: public static System.Numerics.Vector4 Lerp (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2, float amount);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: value2
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    - id: amount
      type: System.Single
      description: "Wartość z zakresu od 0 do 1, który wskazuje wagę `value2`."
    return:
      type: System.Numerics.Vector4
      description: "Wektor interpolowanym."
  overload: System.Numerics.Vector4.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Max(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Max(Vector4,Vector4)
  nameWithType: Vector4.Max(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Max(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wektor, której elementy są maksymalnie każdej pary elementów w dwóch wektorów określony."
  syntax:
    content: public static System.Numerics.Vector4 Max (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: value2
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor zmaksymalizowane."
  overload: System.Numerics.Vector4.Max*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Min(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Min(Vector4,Vector4)
  nameWithType: Vector4.Min(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Min(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wektor, której elementy są co najmniej każdej pary elementów w dwóch wektorów określony."
  syntax:
    content: public static System.Numerics.Vector4 Min (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: value2
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor zminimalizowane."
  overload: System.Numerics.Vector4.Min*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Multiply(Vector4,Vector4)
  nameWithType: Vector4.Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Mnoży ze sobą dwa wektory."
  syntax:
    content: public static System.Numerics.Vector4 Multiply (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor produktu."
  overload: System.Numerics.Vector4.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  id: Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Multiply(Vector4,Single)
  nameWithType: Vector4.Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Mnoży wektora przez określonej skalarnej."
  syntax:
    content: public static System.Numerics.Vector4 Multiply (System.Numerics.Vector4 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Wektor Aby pomnożyć."
    - id: right
      type: System.Single
      description: "Wartość skalarną."
    return:
      type: System.Numerics.Vector4
      description: "Skalowanie wektora."
  overload: System.Numerics.Vector4.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  id: Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Multiply(Single,Vector4)
  nameWithType: Vector4.Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Single,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Określony wektor multiplies — wartość skalarną."
  syntax:
    content: public static System.Numerics.Vector4 Multiply (float left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Single
      description: "Wartość skalowanych."
    - id: right
      type: System.Numerics.Vector4
      description: "Wektor."
    return:
      type: System.Numerics.Vector4
      description: "Skalowanie wektora."
  overload: System.Numerics.Vector4.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  id: Negate(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Negate(Vector4)
  nameWithType: Vector4.Negate(Vector4)
  fullName: System.Numerics.Vector4.Negate(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Negacja określony wektor."
  syntax:
    content: public static System.Numerics.Vector4 Negate (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "Wektor, aby odwrócić."
    return:
      type: System.Numerics.Vector4
      description: "Zanegowaną wektora."
  overload: System.Numerics.Vector4.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  id: Normalize(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Normalize(Vector4)
  nameWithType: Vector4.Normalize(Vector4)
  fullName: System.Numerics.Vector4.Normalize(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wektor z tym samym kierunku co określony wektor, ale o długości jednego."
  syntax:
    content: public static System.Numerics.Vector4 Normalize (System.Numerics.Vector4 vector);
    parameters:
    - id: vector
      type: System.Numerics.Vector4
      description: "Wektor do normalizacji."
    return:
      type: System.Numerics.Vector4
      description: "Znormalizowany wektor."
  overload: System.Numerics.Vector4.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.One
  id: One
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: One
  nameWithType: Vector4.One
  fullName: System.Numerics.Vector4.One
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Pobiera wektora, w której 4 elementy są równa jeden."
  remarks: "Wektor, w której cztery elementy są takie same z jednym (to znaczy zwraca wektor `(1,1,1,1)`."
  syntax:
    content: public static System.Numerics.Vector4 One { get; }
    return:
      type: System.Numerics.Vector4
      description: "Returns <xref href=&quot;System.Numerics.Vector4&quot;></xref>."
  overload: System.Numerics.Vector4.One*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Addition(Vector4,Vector4)
  nameWithType: Vector4.op_Addition(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Addition(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dodaje dwa wektory."
  remarks: "Operacja dodawania dla definiuje metody dodatku <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_Addition (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektorów do dodania."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektorów do dodania."
    return:
      type: System.Numerics.Vector4
      description: "Równy określonemu procentowi wektora."
  overload: System.Numerics.Vector4.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Division(Vector4,Vector4)
  nameWithType: Vector4.op_Division(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dzieli pierwszym wektorze przez drugą."
  remarks: "Metoda dzielenia definiuje operacji dzielenia dla <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_Division (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektora, którego wynikiem dzielenia <code> left </code> przez <code> right </code>."
  overload: System.Numerics.Vector4.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  id: op_Division(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Division(Vector4,Single)
  nameWithType: Vector4.op_Division(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dzieli określony wektor przez określoną wartość skalarną."
  remarks: "Metoda dzielenia definiuje operacji dzielenia dla <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_Division (System.Numerics.Vector4 value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "Wektor."
    - id: value2
      type: System.Single
      description: "Wartość skalarną."
    return:
      type: System.Numerics.Vector4
      description: "Wynik dzielenia."
  overload: System.Numerics.Vector4.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Equality(Vector4,Vector4)
  nameWithType: Vector4.op_Equality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Equality(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wartość wskazującą, czy każda para elementów w dwóch wektorów określony jest taki sam."
  remarks: "Dwa <xref:System.Numerics.Vector4>obiekty są takie same, jeśli każdy element `left` jest taki sam, jak odpowiadający mu element w `right`.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektorów do porównania."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektorów do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector4.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Inequality(Vector4,Vector4)
  nameWithType: Vector4.op_Inequality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Inequality(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wartość wskazującą, czy dwa wektory określony nie są takie same."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektorów do porównania."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektorów do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector4.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Multiply(Vector4,Vector4)
  nameWithType: Vector4.op_Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Mnoży ze sobą dwa wektory."
  remarks: "Mnożenie metoda definiuje mnożenie dla <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_Multiply (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor produktu."
  overload: System.Numerics.Vector4.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  id: op_Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Multiply(Vector4,Single)
  nameWithType: Vector4.op_Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Wielokrotność określony wektor o podaną wartość skalarną."
  remarks: "Mnożenie metoda definiuje mnożenie dla <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_Multiply (System.Numerics.Vector4 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Wektor."
    - id: right
      type: System.Single
      description: "Wartość skalarną."
    return:
      type: System.Numerics.Vector4
      description: "Skalowanie wektora."
  overload: System.Numerics.Vector4.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  id: op_Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Multiply(Single,Vector4)
  nameWithType: Vector4.op_Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Single,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Wartości skalarnych określony wektor wielokrotności."
  remarks: "Mnożenie metoda definiuje mnożenie dla <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_Multiply (float left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Single
      description: "Wektor."
    - id: right
      type: System.Numerics.Vector4
      description: "Wartość skalarną."
    return:
      type: System.Numerics.Vector4
      description: "Skalowanie wektora."
  overload: System.Numerics.Vector4.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Subtraction(Vector4,Vector4)
  nameWithType: Vector4.op_Subtraction(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Subtraction(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Odejmuje drugi wektora z pierwszej."
  remarks: "Operacja odejmowania definiuje metodę odejmowania <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_Subtraction (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektora, którego wynikiem odjęcie <code> right </code> z <code> left </code>."
  overload: System.Numerics.Vector4.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  id: op_UnaryNegation(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_UnaryNegation(Vector4)
  nameWithType: Vector4.op_UnaryNegation(Vector4)
  fullName: System.Numerics.Vector4.op_UnaryNegation(Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Negacja określony wektor."
  remarks: "Metoda UnaryNegation określa operacji negacji jednoargumentowy <xref:System.Numerics.Vector4>obiektów.</xref:System.Numerics.Vector4>"
  syntax:
    content: public static System.Numerics.Vector4 op_UnaryNegation (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "Wektor, aby odwrócić."
    return:
      type: System.Numerics.Vector4
      description: "Zanegowaną wektora."
  overload: System.Numerics.Vector4.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  id: SquareRoot(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: SquareRoot(Vector4)
  nameWithType: Vector4.SquareRoot(Vector4)
  fullName: System.Numerics.Vector4.SquareRoot(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca wektor, której elementy są pierwiastek kwadratowy liczby każdy z elementów określony wektor."
  syntax:
    content: public static System.Numerics.Vector4 SquareRoot (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "Wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor pierwiastek kwadratowy."
  overload: System.Numerics.Vector4.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Subtract(Vector4,Vector4)
  nameWithType: Vector4.Subtract(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Subtract(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Odejmuje drugi wektora z pierwszej."
  syntax:
    content: public static System.Numerics.Vector4 Subtract (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "Pierwszy wektora."
    - id: right
      type: System.Numerics.Vector4
      description: "Drugi wektora."
    return:
      type: System.Numerics.Vector4
      description: "Wektor różnicy."
  overload: System.Numerics.Vector4.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.ToString
  id: ToString
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: ToString()
  nameWithType: Vector4.ToString()
  fullName: System.Numerics.Vector4.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca reprezentację ciągu bieżącego wystąpienia przy użyciu domyślnego formatowania."
  remarks: "Ta metoda zwraca wartość typu ciąg, w którym każdy element wektora jest sformatowany przy użyciu ciągu formatu (Ogólne) &quot;G&quot; i konwencje formatowanie bieżącej kultury wątku. &quot;\\<&quot; I &quot;>&quot; znaki są używane do rozpoczęcia i zakończenia ciąg i bieżącej kultury <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>następuje spacja jest używana do oddzielenia poszczególnych elementów.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Reprezentacja ciągu bieżącego wystąpienia."
  overload: System.Numerics.Vector4.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Vector4.ToString(String)
  fullName: System.Numerics.Vector4.ToString(String)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca reprezentację ciągu bieżącego wystąpienia przy użyciu określonego ciągu formatu do formatowania poszczególne elementy."
  remarks: "Ta metoda zwraca ciąg, w którym każdy element wektora jest sformatowany przy użyciu `format` i konwencje formatowanie bieżącej kultury. &quot;\\<&quot; I &quot;>&quot; znaki są używane do rozpoczęcia i zakończenia ciąg i bieżącej kultury <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>następuje spacja jest używana do oddzielenia poszczególnych elementów.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: "A [standardowe](~/add/includes/ajax-current-ext-md.md) lub [ciąg niestandardowego formatu liczbowego](~/add/includes/ajax-current-ext-md.md) definiuje format poszczególne elementy."
    return:
      type: System.String
      description: "Reprezentacja ciągu bieżącego wystąpienia."
  overload: System.Numerics.Vector4.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: Vector4.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector4.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Zwraca reprezentację ciągu bieżącego wystąpienia przy użyciu określonego ciągu formatu formatowanie poszczególne elementy i dostawcy określonego formatu do definiowania formatowanie specyficzne dla kultury."
  remarks: "Ta metoda zwraca ciąg, w którym każdy element wektora jest sformatowany przy użyciu `format` i `formatProvider`. &quot;\\<&quot; I &quot;>&quot; znaki są używane do rozpoczęcia i zakończenia ciąg, a dostawca formatu <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>następuje spacja jest używana do oddzielenia poszczególnych elementów.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: "A [standardowe](~/add/includes/ajax-current-ext-md.md) lub [ciąg niestandardowego formatu liczbowego](~/add/includes/ajax-current-ext-md.md) definiuje format poszczególne elementy."
    - id: formatProvider
      type: System.IFormatProvider
      description: "Dostawca formatu, który dostarcza informacje dotyczące formatowania specyficzne dla kultury."
    return:
      type: System.String
      description: "Reprezentacja ciągu bieżącego wystąpienia."
  overload: System.Numerics.Vector4.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector4.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector2,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Przekształca dwuwymiarowa wektor przez określonej macierzy 4 x 4."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector2 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "Wektor do przekształcenia."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Macierzy transformacji."
    return:
      type: System.Numerics.Vector4
      description: "Po przekształceniu wektora."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector4.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector2,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Przekształca dwuwymiarowa wektor o podaną wartość obrotu Quaternion."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector2 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Wektor obrotu."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "Obrót do zastosowania."
    return:
      type: System.Numerics.Vector4
      description: "Po przekształceniu wektora."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector4.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector3,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Przekształca trójwymiarowy wektor przez określonej macierzy 4 x 4."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector3 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector3
      description: "Wektor do przekształcenia."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Macierzy transformacji."
    return:
      type: System.Numerics.Vector4
      description: "Po przekształceniu wektora."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector4.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector3,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Przekształca trójwymiarowy wektor o podaną wartość obrotu Quaternion."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector3 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Wektor obrotu."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "Obrót do zastosowania."
    return:
      type: System.Numerics.Vector4
      description: "Po przekształceniu wektora."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector4,Matrix4x4)
  nameWithType: Vector4.Transform(Vector4,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector4,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transformuje wektor czterowymiarowego przez określonej macierzy 4 x 4."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector4 vector, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: vector
      type: System.Numerics.Vector4
      description: "Wektor do przekształcenia."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Macierzy transformacji."
    return:
      type: System.Numerics.Vector4
      description: "Po przekształceniu wektora."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector4,Quaternion)
  nameWithType: Vector4.Transform(Vector4,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector4,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transformuje wektor czterowymiarowego o podaną wartość obrotu Quaternion."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector4 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "Wektor obrotu."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "Obrót do zastosowania."
    return:
      type: System.Numerics.Vector4
      description: "Po przekształceniu wektora."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitW
  id: UnitW
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitW
  nameWithType: Vector4.UnitW
  fullName: System.Numerics.Vector4.UnitW
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Pobiera wektora (0,0,0,1)."
  syntax:
    content: public static System.Numerics.Vector4 UnitW { get; }
    return:
      type: System.Numerics.Vector4
      description: "Wektor `(0,0,0,1)`."
  overload: System.Numerics.Vector4.UnitW*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitX
  id: UnitX
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitX
  nameWithType: Vector4.UnitX
  fullName: System.Numerics.Vector4.UnitX
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Pobiera wektora (1,0,0,0)."
  syntax:
    content: public static System.Numerics.Vector4 UnitX { get; }
    return:
      type: System.Numerics.Vector4
      description: "Wektor `(1,0,0,0)`."
  overload: System.Numerics.Vector4.UnitX*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitY
  id: UnitY
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitY
  nameWithType: Vector4.UnitY
  fullName: System.Numerics.Vector4.UnitY
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Pobiera wektora (0,1,0,0)."
  syntax:
    content: public static System.Numerics.Vector4 UnitY { get; }
    return:
      type: System.Numerics.Vector4
      description: "Wektor `(0,1,0,0)`..."
  overload: System.Numerics.Vector4.UnitY*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitZ
  id: UnitZ
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitZ
  nameWithType: Vector4.UnitZ
  fullName: System.Numerics.Vector4.UnitZ
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Pobiera wektor `(0,0,1,0)`."
  syntax:
    content: public static System.Numerics.Vector4 UnitZ { get; }
    return:
      type: System.Numerics.Vector4
      description: "Wektor `(0,0,1,0)`."
  overload: System.Numerics.Vector4.UnitZ*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.W
  id: W
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: W
  nameWithType: Vector4.W
  fullName: System.Numerics.Vector4.W
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Składnik W wektora."
  syntax:
    content: public float W;
    return:
      type: System.Single
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.X
  id: X
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: X
  nameWithType: Vector4.X
  fullName: System.Numerics.Vector4.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Składnik X wektora."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Y
  id: Y
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Y
  nameWithType: Vector4.Y
  fullName: System.Numerics.Vector4.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Składnik Y wektora."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Z
  id: Z
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Z
  nameWithType: Vector4.Z
  fullName: System.Numerics.Vector4.Z
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Składnik Z wektora."
  syntax:
    content: public float Z;
    return:
      type: System.Single
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Zero
  id: Zero
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Zero
  nameWithType: Vector4.Zero
  fullName: System.Numerics.Vector4.Zero
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Pobiera wektora, którego 4 elementy są równe zero."
  syntax:
    content: public static System.Numerics.Vector4 Zero { get; }
    return:
      type: System.Numerics.Vector4
      description: "Wektor, w której cztery elementy są równe zero (to znaczy zwraca wektor `(0,0,0,0)`."
  overload: System.Numerics.Vector4.Zero*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Numerics.Vector4.#ctor(System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Single)
  nameWithType: Vector4.Vector4(Single)
  fullName: System.Numerics.Vector4.Vector4(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Vector3,Single)
  nameWithType: Vector4.Vector4(Vector3,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector3,Single)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Vector2,Single,Single)
  nameWithType: Vector4.Vector4(Vector2,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector2,Single,Single)
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Single,Single,Single,Single)
  nameWithType: Vector4.Vector4(Single,Single,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Single,Single,Single,Single)
- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Abs(Vector4)
  nameWithType: Vector4.Abs(Vector4)
  fullName: System.Numerics.Vector4.Abs(Vector4)
- uid: System.Numerics.Vector4
  parent: System.Numerics
  isExternal: false
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Add(Vector4,Vector4)
  nameWithType: Vector4.Add(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Add(Vector4,Vector4)
- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Clamp(Vector4,Vector4,Vector4)
  nameWithType: Vector4.Clamp(Vector4,Vector4,Vector4)
  fullName: System.Numerics.Vector4.Clamp(Vector4,Vector4,Vector4)
- uid: System.Numerics.Vector4.CopyTo(System.Single[])
  parent: System.Numerics.Vector4
  isExternal: false
  name: CopyTo(Single[])
  nameWithType: Vector4.CopyTo(Single[])
  fullName: System.Numerics.Vector4.CopyTo(Single[])
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector4
  isExternal: false
  name: CopyTo(Single[],Int32)
  nameWithType: Vector4.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector4.CopyTo(Single[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Distance(Vector4,Vector4)
  nameWithType: Vector4.Distance(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Distance(Vector4,Vector4)
- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: DistanceSquared(Vector4,Vector4)
  nameWithType: Vector4.DistanceSquared(Vector4,Vector4)
  fullName: System.Numerics.Vector4.DistanceSquared(Vector4,Vector4)
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Divide(Vector4,Vector4)
  nameWithType: Vector4.Divide(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Divide(Vector4,Vector4)
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Divide(Vector4,Single)
  nameWithType: Vector4.Divide(Vector4,Single)
  fullName: System.Numerics.Vector4.Divide(Vector4,Single)
- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Dot(Vector4,Vector4)
  nameWithType: Vector4.Dot(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Dot(Vector4,Vector4)
- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Equals(Vector4)
  nameWithType: Vector4.Equals(Vector4)
  fullName: System.Numerics.Vector4.Equals(Vector4)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector4.Equals(System.Object)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Equals(Object)
  nameWithType: Vector4.Equals(Object)
  fullName: System.Numerics.Vector4.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector4.GetHashCode
  parent: System.Numerics.Vector4
  isExternal: false
  name: GetHashCode()
  nameWithType: Vector4.GetHashCode()
  fullName: System.Numerics.Vector4.GetHashCode()
- uid: System.Numerics.Vector4.Length
  parent: System.Numerics.Vector4
  isExternal: false
  name: Length()
  nameWithType: Vector4.Length()
  fullName: System.Numerics.Vector4.Length()
- uid: System.Numerics.Vector4.LengthSquared
  parent: System.Numerics.Vector4
  isExternal: false
  name: LengthSquared()
  nameWithType: Vector4.LengthSquared()
  fullName: System.Numerics.Vector4.LengthSquared()
- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Lerp(Vector4,Vector4,Single)
  nameWithType: Vector4.Lerp(Vector4,Vector4,Single)
  fullName: System.Numerics.Vector4.Lerp(Vector4,Vector4,Single)
- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Max(Vector4,Vector4)
  nameWithType: Vector4.Max(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Max(Vector4,Vector4)
- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Min(Vector4,Vector4)
  nameWithType: Vector4.Min(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Min(Vector4,Vector4)
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply(Vector4,Vector4)
  nameWithType: Vector4.Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Vector4)
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply(Vector4,Single)
  nameWithType: Vector4.Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Single)
- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply(Single,Vector4)
  nameWithType: Vector4.Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Single,Vector4)
- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Negate(Vector4)
  nameWithType: Vector4.Negate(Vector4)
  fullName: System.Numerics.Vector4.Negate(Vector4)
- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Normalize(Vector4)
  nameWithType: Vector4.Normalize(Vector4)
  fullName: System.Numerics.Vector4.Normalize(Vector4)
- uid: System.Numerics.Vector4.One
  parent: System.Numerics.Vector4
  isExternal: false
  name: One
  nameWithType: Vector4.One
  fullName: System.Numerics.Vector4.One
- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Addition(Vector4,Vector4)
  nameWithType: Vector4.op_Addition(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Addition(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Division(Vector4,Vector4)
  nameWithType: Vector4.op_Division(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Division(Vector4,Single)
  nameWithType: Vector4.op_Division(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Single)
- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Equality(Vector4,Vector4)
  nameWithType: Vector4.op_Equality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Equality(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Inequality(Vector4,Vector4)
  nameWithType: Vector4.op_Inequality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Inequality(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply(Vector4,Vector4)
  nameWithType: Vector4.op_Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply(Vector4,Single)
  nameWithType: Vector4.op_Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Single)
- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply(Single,Vector4)
  nameWithType: Vector4.op_Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Single,Vector4)
- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Subtraction(Vector4,Vector4)
  nameWithType: Vector4.op_Subtraction(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Subtraction(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_UnaryNegation(Vector4)
  nameWithType: Vector4.op_UnaryNegation(Vector4)
  fullName: System.Numerics.Vector4.op_UnaryNegation(Vector4)
- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: SquareRoot(Vector4)
  nameWithType: Vector4.SquareRoot(Vector4)
  fullName: System.Numerics.Vector4.SquareRoot(Vector4)
- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Subtract(Vector4,Vector4)
  nameWithType: Vector4.Subtract(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Subtract(Vector4,Vector4)
- uid: System.Numerics.Vector4.ToString
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString()
  nameWithType: Vector4.ToString()
  fullName: System.Numerics.Vector4.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Vector4.ToString(System.String)
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString(String)
  nameWithType: Vector4.ToString(String)
  fullName: System.Numerics.Vector4.ToString(String)
- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: Vector4.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector4.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector4.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector2,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector4.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector2,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector4.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector3,Matrix4x4)
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector4.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector3,Quaternion)
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector4,Matrix4x4)
  nameWithType: Vector4.Transform(Vector4,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector4,Matrix4x4)
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector4,Quaternion)
  nameWithType: Vector4.Transform(Vector4,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector4,Quaternion)
- uid: System.Numerics.Vector4.UnitW
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitW
  nameWithType: Vector4.UnitW
  fullName: System.Numerics.Vector4.UnitW
- uid: System.Numerics.Vector4.UnitX
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitX
  nameWithType: Vector4.UnitX
  fullName: System.Numerics.Vector4.UnitX
- uid: System.Numerics.Vector4.UnitY
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitY
  nameWithType: Vector4.UnitY
  fullName: System.Numerics.Vector4.UnitY
- uid: System.Numerics.Vector4.UnitZ
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitZ
  nameWithType: Vector4.UnitZ
  fullName: System.Numerics.Vector4.UnitZ
- uid: System.Numerics.Vector4.W
  parent: System.Numerics.Vector4
  isExternal: false
  name: W
  nameWithType: Vector4.W
  fullName: System.Numerics.Vector4.W
- uid: System.Numerics.Vector4.X
  parent: System.Numerics.Vector4
  isExternal: false
  name: X
  nameWithType: Vector4.X
  fullName: System.Numerics.Vector4.X
- uid: System.Numerics.Vector4.Y
  parent: System.Numerics.Vector4
  isExternal: false
  name: Y
  nameWithType: Vector4.Y
  fullName: System.Numerics.Vector4.Y
- uid: System.Numerics.Vector4.Z
  parent: System.Numerics.Vector4
  isExternal: false
  name: Z
  nameWithType: Vector4.Z
  fullName: System.Numerics.Vector4.Z
- uid: System.Numerics.Vector4.Zero
  parent: System.Numerics.Vector4
  isExternal: false
  name: Zero
  nameWithType: Vector4.Zero
  fullName: System.Numerics.Vector4.Zero
- uid: System.Numerics.Vector4.#ctor*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4
  nameWithType: Vector4.Vector4
- uid: System.Numerics.Vector4.Abs*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Abs
  nameWithType: Vector4.Abs
- uid: System.Numerics.Vector4.Add*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Add
  nameWithType: Vector4.Add
- uid: System.Numerics.Vector4.Clamp*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Clamp
  nameWithType: Vector4.Clamp
- uid: System.Numerics.Vector4.CopyTo*
  parent: System.Numerics.Vector4
  isExternal: false
  name: CopyTo
  nameWithType: Vector4.CopyTo
- uid: System.Numerics.Vector4.Distance*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Distance
  nameWithType: Vector4.Distance
- uid: System.Numerics.Vector4.DistanceSquared*
  parent: System.Numerics.Vector4
  isExternal: false
  name: DistanceSquared
  nameWithType: Vector4.DistanceSquared
- uid: System.Numerics.Vector4.Divide*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Divide
  nameWithType: Vector4.Divide
- uid: System.Numerics.Vector4.Dot*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Dot
  nameWithType: Vector4.Dot
- uid: System.Numerics.Vector4.Equals*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Equals
  nameWithType: Vector4.Equals
- uid: System.Numerics.Vector4.GetHashCode*
  parent: System.Numerics.Vector4
  isExternal: false
  name: GetHashCode
  nameWithType: Vector4.GetHashCode
- uid: System.Numerics.Vector4.Length*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Length
  nameWithType: Vector4.Length
- uid: System.Numerics.Vector4.LengthSquared*
  parent: System.Numerics.Vector4
  isExternal: false
  name: LengthSquared
  nameWithType: Vector4.LengthSquared
- uid: System.Numerics.Vector4.Lerp*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Lerp
  nameWithType: Vector4.Lerp
- uid: System.Numerics.Vector4.Max*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Max
  nameWithType: Vector4.Max
- uid: System.Numerics.Vector4.Min*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Min
  nameWithType: Vector4.Min
- uid: System.Numerics.Vector4.Multiply*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply
  nameWithType: Vector4.Multiply
- uid: System.Numerics.Vector4.Negate*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Negate
  nameWithType: Vector4.Negate
- uid: System.Numerics.Vector4.Normalize*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Normalize
  nameWithType: Vector4.Normalize
- uid: System.Numerics.Vector4.One*
  parent: System.Numerics.Vector4
  isExternal: false
  name: One
  nameWithType: Vector4.One
- uid: System.Numerics.Vector4.op_Addition*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Addition
  nameWithType: Vector4.op_Addition
- uid: System.Numerics.Vector4.op_Division*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Division
  nameWithType: Vector4.op_Division
- uid: System.Numerics.Vector4.op_Equality*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Equality
  nameWithType: Vector4.op_Equality
- uid: System.Numerics.Vector4.op_Inequality*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Inequality
  nameWithType: Vector4.op_Inequality
- uid: System.Numerics.Vector4.op_Multiply*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply
  nameWithType: Vector4.op_Multiply
- uid: System.Numerics.Vector4.op_Subtraction*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Subtraction
  nameWithType: Vector4.op_Subtraction
- uid: System.Numerics.Vector4.op_UnaryNegation*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Vector4.op_UnaryNegation
- uid: System.Numerics.Vector4.SquareRoot*
  parent: System.Numerics.Vector4
  isExternal: false
  name: SquareRoot
  nameWithType: Vector4.SquareRoot
- uid: System.Numerics.Vector4.Subtract*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Subtract
  nameWithType: Vector4.Subtract
- uid: System.Numerics.Vector4.ToString*
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString
  nameWithType: Vector4.ToString
- uid: System.Numerics.Vector4.Transform*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform
  nameWithType: Vector4.Transform
- uid: System.Numerics.Vector4.UnitW*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitW
  nameWithType: Vector4.UnitW
- uid: System.Numerics.Vector4.UnitX*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitX
  nameWithType: Vector4.UnitX
- uid: System.Numerics.Vector4.UnitY*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitY
  nameWithType: Vector4.UnitY
- uid: System.Numerics.Vector4.UnitZ*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitZ
  nameWithType: Vector4.UnitZ
- uid: System.Numerics.Vector4.Zero*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Zero
  nameWithType: Vector4.Zero
