### YamlMime:ManagedReference
items:
- uid: System.Net.Http.ByteArrayContent
  id: ByteArrayContent
  children:
  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  - System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  - System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: ByteArrayContent
  nameWithType: ByteArrayContent
  fullName: System.Net.Http.ByteArrayContent
  type: Class
  summary: "Dostarcza zawartość HTTP w oparciu o tablicę bajtów."
  syntax:
    content: 'public class ByteArrayContent : System.Net.Http.HttpContent'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Dispose(System.Boolean)
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: ByteArrayContent(Byte[])
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[])
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref> klasy."
  syntax:
    content: public ByteArrayContent (byte[] content);
    parameters:
    - id: content
      type: System.Byte[]
      description: "Zawartość służąca do inicjalizowania <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: ByteArrayContent(Byte[],Int32,Int32)
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref> klasy."
  remarks: "Zakres określony przez `offset` parametru i `count` parametr jest używany jako zawartości. Składnia"
  syntax:
    content: public ByteArrayContent (byte[] content, int offset, int count);
    parameters:
    - id: content
      type: System.Byte[]
      description: "Zawartość służąca do inicjalizowania <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
    - id: offset
      type: System.Int32
      description: "Przesunięcie, w bajtach, w `content` używanym do inicjalizacji <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
    - id: count
      type: System.Int32
      description: "Liczba bajtów w `content` od `offset` używanym do inicjalizacji <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> Parametru jest mniejszy od zera.       - lub - <code> offset </code> jest większa niż długość zawartości określonego przez parametr <code> content </code> parametru.       - lub - <code> count  </code> parametru jest mniejszy od zera.       - lub - <code> count </code> jest większa niż długość zawartości określonego przez parametr <code> content </code> parametru - minus <code> offset </code> parametru."
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  id: CreateContentReadStreamAsync
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: CreateContentReadStreamAsync()
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Tworzy strumienia zawartości HTTP jako operację asynchroniczną do odczytu, którego zapasowy przechowywania jest pamięć z <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>obiektu ukończy po utworzeniu wszystkich strumienia zawartości.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task<System.IO.Stream> CreateContentReadStreamAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Serializuje i zapisuje tablicę bajtów dostarczoną w Konstruktorze do strumienia zawartości HTTP jako operację asynchroniczną."
  remarks: "Ta operacja nie blokuje. Gdy zwracana <xref:System.Threading.Tasks.Task>obiektu zakończeniu tablicy bajtowej całego został zapisany do `stream` parametru.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień docelowy."
    - id: context
      type: System.Net.TransportContext
      description: "Informacje o transporcie, takie jak token wiązania kanałów. Ten parametr może mieć <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: ByteArrayContent.TryComputeLength(Int64)
  fullName: System.Net.Http.ByteArrayContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Określa, czy tablica bajtów ma prawidłową długość w bajtach."
  remarks: "Metoda TryComputeLength umożliwia pochodny typ zawartości do obliczania długości zawartości. Jest to przydatne dla typów zawartości, które mogą łatwo obliczania długości zawartości. Jeśli obliczania długości zawartości nie jest możliwe lub kosztowne (wymaga systemu, aby buforować zawartość gdzie serializacji może być kosztowne lub wymagają systemu można przydzielić dużej ilości pamięci), ta metoda może zwracać `false`. Jeśli ta metoda zwraca `false`, oznacza to, że jest wymagana transferu pakietowego lub zawartość należy pobrać buforowane przed wysłaniem do serwera.       Ta metoda zawsze zwracana `true` dla <xref:System.Net.Http.ByteArrayContent>.</xref:System.Net.Http.ByteArrayContent>"
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "Długość w bajtach tablicy bajtów."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> length </code> jest prawidłowa; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent(Byte[])
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent(Byte[],Int32,Int32)
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: CreateContentReadStreamAsync()
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync()
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.IO.Stream>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: ByteArrayContent.TryComputeLength(Int64)
  fullName: System.Net.Http.ByteArrayContent.TryComputeLength(Int64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.ByteArrayContent.#ctor*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent
  nameWithType: ByteArrayContent.ByteArrayContent
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: CreateContentReadStreamAsync
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: ByteArrayContent.SerializeToStreamAsync
- uid: System.Net.Http.ByteArrayContent.TryComputeLength*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: TryComputeLength
  nameWithType: ByteArrayContent.TryComputeLength
