### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAccessRule
  id: FileSystemAccessRule
  children:
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
  type: Class
  summary: "Reprezentuje abstrakcję wpisu kontroli dostępu (ACE), który definiuje reguły dostępu do pliku lub katalogu. Ta klasa nie może być dziedziczona."
  remarks: "Klasa FileSystemAccessRule reprezentuje abstrakcję podstawowej wpisu kontroli dostępu (ACE) określająca konto użytkownika, typu dostępu, aby zapewnić (odczytu, zapisu i tak dalej), oraz czy należy udzielić lub odmówić prawa.  Ta klasa można również określić, jak reguły dostępu są propagowane do obiektów podrzędnych.       Aby utworzyć nową regułę dostępu, należy użyć klasy FileSystemAccessRule.  Można ją utrwalić reguły za pomocą <xref:System.Security.AccessControl.FileSecurity>lub <xref:System.Security.AccessControl.DirectorySecurity>klasy.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_4_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_4_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_4_1.cpp)]"
  syntax:
    content: 'public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> przy użyciu odwołanie do konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z reguł dostępu i wartość, która określa, czy akceptować lub odrzucać wykonać operację."
  remarks: "Ten konstruktor umożliwia utworzenie reguły kontroli dostępu, aby można ją utrwalić przy użyciu <xref:System.Security.AccessControl.FileSecurity>lub <xref:System.Security.AccessControl.DirectorySecurity>klasy.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Zasady kontroli dostępu do definiowania uprawnień konta użytkownika, które określają akcje, które ma być dozwolony lub niedozwolony na komputerach z systemem Microsoft Windows."
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt hermetyzujący odwołanie do konta użytkownika."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> wartości, które określa rodzaj operacji skojarzonej z reguły dostępu."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> wartości, które określa, czy akceptować lub odrzucać wykonać operację."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code> Parametr nie jest <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazano nieprawidłowe wyliczenie <code> type  </code>parametru."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> przy użyciu nazwy konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z reguł dostępu i wartość, która opisuje czy akceptować lub odrzucać operacji."
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/33a6ea58-04ff-40ef-bfcd-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/33a6ea58-04ff-40ef-bfcd-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/33a6ea58-04ff-40ef-bfcd-_1.cpp)]"
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "Nazwa konta użytkownika."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> wartości, które określa rodzaj operacji skojarzonej z reguły dostępu."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> wartości, które określa, czy akceptować lub odrzucać wykonać operację."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazano nieprawidłowe wyliczenie <code> type  </code>parametru."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> przy użyciu odwołanie do konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z reguły dostępu, wartość, która określa, jak są dziedziczone prawa wartość, która określa, jak są propagowane praw i wartość, która określa, czy akceptować lub odrzucać wykonać operację."
  remarks: "Ten konstruktor umożliwia utworzenie reguły kontroli dostępu, aby można ją utrwalić przy użyciu <xref:System.Security.AccessControl.FileSecurity>lub <xref:System.Security.AccessControl.DirectorySecurity>klasy.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Zasady kontroli dostępu do definiowania uprawnień konta użytkownika, które określają akcje, które ma być dozwolony lub niedozwolony na komputerach z systemem Microsoft Windows."
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt hermetyzujący odwołanie do konta użytkownika."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> wartości, które określa rodzaj operacji skojarzonej z reguły dostępu."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> wartości, które określają sposób maski dostępu są propagowane do obiektów podrzędnych."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> wartości, które określają sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> wartości, które określa, czy akceptować lub odrzucać wykonać operację."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code> Parametr nie jest <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazano nieprawidłowe wyliczenie <code> type  </code>parametru.       - lub - przekazano nieprawidłowe wyliczenie <code> inheritanceFlags  </code>parametru.       - lub - przekazano nieprawidłowe wyliczenie <code> propagationFlags  </code>parametru."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> przy użyciu nazwy konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z reguły dostępu, wartość, która określa, jak są dziedziczone prawa wartość, która określa, jak są propagowane praw i wartość, która określa, czy akceptować lub odrzucać wykonać operację."
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "Nazwa konta użytkownika."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> wartości, które określa rodzaj operacji skojarzonej z reguły dostępu."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> wartości, które określają sposób maski dostępu są propagowane do obiektów podrzędnych."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> wartości, które określają sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> wartości, które określa, czy akceptować lub odrzucać wykonać operację."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazano nieprawidłowe wyliczenie <code> type  </code>parametru.       - lub - przekazano nieprawidłowe wyliczenie <code> inheritanceFlags  </code>parametru.       - lub - przekazano nieprawidłowe wyliczenie <code> propagationFlags  </code>parametru."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Pobiera <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> flagi skojarzone z bieżącym <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiektu."
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> Flagi skojarzone z bieżącym <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiektu."
  overload: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AccessRule
  isExternal: false
  name: System.Security.AccessControl.AccessRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
