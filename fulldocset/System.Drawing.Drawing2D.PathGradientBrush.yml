### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.PathGradientBrush
  id: PathGradientBrush
  children:
  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])
  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)
  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)
  - System.Drawing.Drawing2D.PathGradientBrush.Blend
  - System.Drawing.Drawing2D.PathGradientBrush.CenterColor
  - System.Drawing.Drawing2D.PathGradientBrush.CenterPoint
  - System.Drawing.Drawing2D.PathGradientBrush.Clone
  - System.Drawing.Drawing2D.PathGradientBrush.FocusScales
  - System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors
  - System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.PathGradientBrush.Rectangle
  - System.Drawing.Drawing2D.PathGradientBrush.ResetTransform
  - System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)
  - System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)
  - System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)
  - System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.PathGradientBrush.SurroundColors
  - System.Drawing.Drawing2D.PathGradientBrush.Transform
  - System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.PathGradientBrush.WrapMode
  langs:
  - csharp
  name: PathGradientBrush
  nameWithType: PathGradientBrush
  fullName: System.Drawing.Drawing2D.PathGradientBrush
  type: Class
  summary: "Hermetyzuje <xref href=&quot;System.Drawing.Brush&quot;> </xref> obiektu, który wypełnia wnętrza <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> obiektu gradientem. Ta klasa nie może być dziedziczona."
  remarks: "Kolor gradientu jest smooth cieniowania kolorów od punktu centralnego ścieżki do krawędzi granicy poza ścieżki. Czynniki, pozycji i styl wpływ, gdzie gradientu początek i koniec programu Blend, a szybkość zmienia cień.       Pędzle gradientów ścieżki nie podlega <xref:System.Drawing.Graphics.SmoothingMode%2A>Właściwość <xref:System.Drawing.Graphics>obiekt używany do rysowania.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.SmoothingMode%2A> Obszary wypełnione przy użyciu obiektu PathGradientBrush są renderowane ten sam sposób (alias), niezależnie od tego, tryb wygładzania."
  example:
  - "The following code example shows how to create a PathGradientBrush. This example  is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs> e, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \n  \n [!code-vb[System.Drawing.UsingaGradientBrush#11](~/add/codesnippet/visualbasic/t-system.drawing.drawing_8_1.vb)]\n [!code-cs[System.Drawing.UsingaGradientBrush#11](~/add/codesnippet/csharp/t-system.drawing.drawing_8_1.cs)]"
  syntax:
    content: 'public sealed class PathGradientBrush : System.Drawing.Brush'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Brush
  implements: []
  inheritedMembers:
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath)'
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: PathGradientBrush(GraphicsPath)
  nameWithType: PathGradientBrush.PathGradientBrush(GraphicsPath)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(GraphicsPath)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> przy użyciu określonej ścieżki."
  syntax:
    content: public PathGradientBrush (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> Definiuje obszar wypełnione to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref>."
  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])
  id: '#ctor(System.Drawing.Point[])'
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: PathGradientBrush(Point[])
  nameWithType: PathGradientBrush.PathGradientBrush(Point[])
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> klasy z podanych punktów."
  syntax:
    content: public PathGradientBrush (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Tablica <xref href=&quot;System.Drawing.Point&quot;> </xref> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki."
  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])
  id: '#ctor(System.Drawing.PointF[])'
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: PathGradientBrush(PointF[])
  nameWithType: PathGradientBrush.PathGradientBrush(PointF[])
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> klasy z podanych punktów."
  syntax:
    content: public PathGradientBrush (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Tablica <xref href=&quot;System.Drawing.PointF&quot;> </xref> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki."
  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)
  id: '#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)'
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: PathGradientBrush(Point[],WrapMode)
  nameWithType: PathGradientBrush.PathGradientBrush(Point[],WrapMode)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[],WrapMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> klasy z podanych punktów i zastępowania tryb."
  syntax:
    content: public PathGradientBrush (System.Drawing.Point[] points, System.Drawing.Drawing2D.WrapMode wrapMode);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Tablica <xref href=&quot;System.Drawing.Point&quot;> </xref> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki."
    - id: wrapMode
      type: System.Drawing.Drawing2D.WrapMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> , który określa sposób wypełnienia narysowany to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> są rozmieszczane."
  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)
  id: '#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)'
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: PathGradientBrush(PointF[],WrapMode)
  nameWithType: PathGradientBrush.PathGradientBrush(PointF[],WrapMode)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[],WrapMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> klasy z podanych punktów i zastępowania tryb."
  syntax:
    content: public PathGradientBrush (System.Drawing.PointF[] points, System.Drawing.Drawing2D.WrapMode wrapMode);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Tablica <xref href=&quot;System.Drawing.PointF&quot;> </xref> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki."
    - id: wrapMode
      type: System.Drawing.Drawing2D.WrapMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> , który określa sposób wypełnienia narysowany to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> są rozmieszczane."
  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.Blend
  id: Blend
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: Blend
  nameWithType: PathGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Blend
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> , który określa położenie i czynników, które Zdefiniuj niestandardowe zaniku gradientu."
  remarks: "A <xref:System.Drawing.Drawing2D.Blend>zawiera odpowiednie tablice czynniki blend i pozycji.</xref:System.Drawing.Drawing2D.Blend> Czynniki blend określić wartości procentowe kolor początkowy i końcowy kolor do używania w odpowiednim miejscu. Pozycje są podane w procentach odległość ścieżce gradientu."
  syntax:
    content: public System.Drawing.Drawing2D.Blend Blend { get; set; }
    return:
      type: System.Drawing.Drawing2D.Blend
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> reprezentujący niestandardowe zaniku gradientu."
  overload: System.Drawing.Drawing2D.PathGradientBrush.Blend*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterColor
  id: CenterColor
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: CenterColor
  nameWithType: PathGradientBrush.CenterColor
  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterColor
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia kolor na środku gradientu ścieżki."
  syntax:
    content: public System.Drawing.Color CenterColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> reprezentujący kolorów w Centrum gradientu ścieżki."
  overload: System.Drawing.Drawing2D.PathGradientBrush.CenterColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint
  id: CenterPoint
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: CenterPoint
  nameWithType: PathGradientBrush.CenterPoint
  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia centralny punkt gradientu ścieżki."
  syntax:
    content: public System.Drawing.PointF CenterPoint { get; set; }
    return:
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> reprezentujący punktu centralnego gradientu ścieżki."
  overload: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: Clone()
  nameWithType: PathGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Tworzy dokładną kopię to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref>."
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> Ta metoda tworzy, rzutowany jako obiekt."
  overload: System.Drawing.Drawing2D.PathGradientBrush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.FocusScales
  id: FocusScales
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: FocusScales
  nameWithType: PathGradientBrush.FocusScales
  fullName: System.Drawing.Drawing2D.PathGradientBrush.FocusScales
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia punkt fokus zaniku gradientu."
  syntax:
    content: public System.Drawing.PointF FocusScales { get; set; }
    return:
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> reprezentujący fokus dla zaniku gradientu."
  overload: System.Drawing.Drawing2D.PathGradientBrush.FocusScales*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors
  id: InterpolationColors
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: InterpolationColors
  nameWithType: PathGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> definiuje wielokolorowe gradientu liniowego."
  remarks: "A <xref:System.Drawing.Drawing2D.ColorBlend>zawiera odpowiednie tablice kolorów i pozycji.</xref:System.Drawing.Drawing2D.ColorBlend> Pozycje są wartości od 0 do 1, który określa procent odległości wzdłuż gradientu ścieżki, w którym znajduje się odpowiedni kolor."
  syntax:
    content: public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }
    return:
      type: System.Drawing.Drawing2D.ColorBlend
      description: "A <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> definiuje wielokolorowe gradientu liniowego."
  overload: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: PathGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aktualizuje pędzla macierzy transformacji z produktem macierzy transformacji pędzla pomnożona przez inny macierzy."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A>.
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> Który będzie mnożona przez bieżący macierzy transformacji pędzla."
  overload: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aktualizuje pędzla macierzy transformacji z produktem macierzy transformacji pędzla pomnożona przez inny macierzy."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path and adds a rectangle to it.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \n  \n-   Sets the center color to red and the surrounding color to blue.  \n  \n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the multiply transform.  \n  \n-   Creates s matrix that rotates the brush 90 degrees and translates it by 100 in both axes.  \n  \n-   Applies this matrix to the brush by using the <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A> method.  \n  \n-   Draws the brush to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/add/codesnippet/csharp/b1f99943-a9ce-4eb4-b1cf-_1.cs)]\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/add/codesnippet/visualbasic/b1f99943-a9ce-4eb4-b1cf-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/add/codesnippet/cpp/b1f99943-a9ce-4eb4-b1cf-_1.cpp)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> Który będzie mnożona przez bieżący macierzy transformacji pędzla."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , który określa kolejność, w jakiej do mnożenie macierzy dwa."
  overload: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.Rectangle
  id: Rectangle
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: Rectangle
  nameWithType: PathGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Rectangle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera prostokąt ograniczający dla <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref>."
  syntax:
    content: public System.Drawing.RectangleF Rectangle { get; }
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> reprezentujący prostokątny obszar, który ścieżce zakresem to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> wypełnia."
  overload: System.Drawing.Drawing2D.PathGradientBrush.Rectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: PathGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Resetuje <xref:System.Drawing.Drawing2D.PathGradientBrush.Transform*>właściwości identity.</xref:System.Drawing.Drawing2D.PathGradientBrush.Transform*>"
  remarks: ''
  example:
  - "The following code example resets the geometric transform of `pgBrush` to identity. It is assumed that `myPath` is an existing <xref:System.Drawing.Drawing2D.GraphicsPath>.  \n  \n```c#  \nPathGradientBrush pgBrush = new PathGradientBrush(myPath);  \n pgBrush.ResetTransform();  \n```"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: PathGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obraca lokalne przekształcenia geometrycznych o określonej szerokości. Ta metoda dołącza obrót do transformacji."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A>.
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "Kąt (zakres) obrotu."
  overload: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: PathGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obraca lokalne przekształcenia geometrycznych przy określonym w określonej kolejności."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path and adds a rectangle to it.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \n  \n-   Sets the center color to red and the surrounding color to blue.  \n  \n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the rotate transform.  \n  \n-   Applies the rotate transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A> method.  \n  \n-   Draws the rotated brush (rectangle) to the screen.  \n  \n Notice that the bottom rectangle is rotated 45 degrees as compared to the one drawn prior to the translation.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/add/codesnippet/csharp/58f57d52-58d7-4091-ab9a-_1.cs)]\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/add/codesnippet/visualbasic/58f57d52-58d7-4091-ab9a-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/add/codesnippet/cpp/58f57d52-58d7-4091-ab9a-_1.cpp)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Kąt (zakres) obrotu."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> który określa, czy dołączyć lub dołączy macierzy obrotu."
  overload: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: PathGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Skaluje lokalnej geometrycznych przekształcanie za podana. Ta metoda dołącza skalowania macierzy transformacji."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A>.
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "Współczynnik skali przekształcenia w kierunku osi x."
    - id: sy
      type: System.Single
      description: "Współczynnik skali przekształcenia w kierunku y."
  overload: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Skaluje lokalnej geometrycznych przekształcanie za podana w określonej kolejności."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code  \n  \n-   Creates a graphics path and adds a rectangle to it.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \n  \n-   Sets the center color to red and the surrounding color to blue.  \n  \n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the scale transform.  \n  \n-   Applies the scale transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A> method.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> method to move the brush rectangle such that it does not overlay the one drawn to the screen earlier.  \n  \n-   Draws the translated brush rectangle to the screen.  \n  \n Notice that the bottom rectangle is twice as long in the x-axis as is the one drawn prior to the translation.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/add/codesnippet/csharp/8bf9fd7d-bfd2-4d1e-a571-_1.cs)]\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/add/codesnippet/visualbasic/8bf9fd7d-bfd2-4d1e-a571-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/add/codesnippet/cpp/8bf9fd7d-bfd2-4d1e-a571-_1.cpp)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "Współczynnik skali przekształcenia w kierunku osi x."
    - id: sy
      type: System.Single
      description: "Współczynnik skali przekształcenia w kierunku y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> który określa, czy dołączyć lub dołączy skalowania macierzy."
  overload: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)
  id: SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single)
  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Tworzy gradient kolor center i liniowej zaniku na jeden kolor otaczającego je."
  remarks: "Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A>tablicy, pierwszy kolor w tablicy jest używany kolor końcowy.</xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Kolory określone w tablicy tego są używane osobne punktów na ścieżce granic pędzla."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>`.`
  syntax:
    content: public void SetBlendTriangularShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki."
  overload: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  id: SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Tworzy gradientu z kolor center i liniowej zaniku do każdego otaczającego koloru."
  remarks: "Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A>tablicy, pierwszy kolor w tablicy jest używany kolor końcowy.</xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Kolory określone w tablicy tego są kolory używane osobne punktów na ścieżce granic pędzla.       Domyślnie w przypadku przejścia z granicą gradientu ścieżki do punktu centralnego zmienia kolor stopniowo od koloru granic na kolor center. Można dostosować, pozycjonowanie i mieszania kolorów Centrum i granic przez wywołanie tej metody."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path and adds a rectangle to it.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \n  \n-   Sets the center color to red and the surrounding color to blue.  \n  \n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the blend transform.  \n  \n-   Applies the blend transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A> method.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> method to move the brush rectangle such that it does not overlay the one drawn to the screen earlier.  \n  \n-   Draws the transformed-brush rectangle is drawn to the screen.  \n  \n Notice that the maximum center color (red) is located half way from the center of the path to the path boundary.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/add/codesnippet/csharp/ca10f477-4012-4625-8488-_1.cs)]\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/add/codesnippet/visualbasic/ca10f477-4012-4625-8488-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/add/codesnippet/cpp/ca10f477-4012-4625-8488-_1.cpp)]"
  syntax:
    content: public void SetBlendTriangularShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki."
    - id: scale
      type: System.Single
      description: "Wartość od 0 do 1, który określa maksymalne natężenie kolor center, który pobiera przenikaniem kolorem granic. Wartość 1 powoduje, że najwyższy możliwy intensywność koloru Centrum i jest wartością domyślną."
  overload: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)
  id: SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single)
  nameWithType: PathGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Tworzy pędzla gradientu, który zmienia kolor, zaczynając od środka na zewnątrz ścieżki do granicy ścieżki. Przejście od jednego koloru do innego opiera się na krzywej w kształcie dzwonka."
  remarks: "Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A>tablicy, pierwszy kolor w tablicy jest używany kolor końcowy.</xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Kolory określone w tablicy tego są kolory używane osobne punktów na ścieżce granic pędzla.       Domyślnie w przypadku przejścia z granicą gradientu ścieżki do punktu centralnego zmienia kolor stopniowo od koloru granic na kolor center. Można dostosować, pozycjonowanie i mieszania kolorów Centrum i granic przez wywołanie tej metody."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A>.
  syntax:
    content: public void SetSigmaBellShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki."
  overload: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  id: SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single,Single)
  nameWithType: PathGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Tworzy pędzla gradientu, który zmienia kolor, zaczynając od środka na zewnątrz ścieżki do granicy ścieżki. Przejście od jednego koloru do innego opiera się na krzywej w kształcie dzwonka."
  remarks: "Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A>tablicy, pierwszy kolor w tablicy jest używany kolor końcowy.</xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Kolory określone w tablicy tego są kolory używane osobne punktów na ścieżce granic pędzla.       Domyślnie w przypadku przejścia z granicą gradientu ścieżki do punktu centralnego zmienia kolor stopniowo od koloru granic na kolor center. Można dostosować, pozycjonowanie i mieszania kolorów Centrum i granic przez wywołanie tej metody."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path and adds a rectangle to it.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \n  \n-   Sets the center color to red and the surrounding color to blue.  \n  \n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the blend transform.  \n  \n-   Applies the blend transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A> method.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> method to move the brush rectangle such that it does not overlay the one drawn to the screen earlier.  \n  \n-   Draws the transformed-brush rectangle to the screen.  \n  \n Notice that the maximum center color (red) is located half way from the center of the path to the path boundary.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/add/codesnippet/csharp/41ba2cc8-a1c4-4664-a9a4-_1.cs)]\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/add/codesnippet/visualbasic/41ba2cc8-a1c4-4664-a9a4-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/add/codesnippet/cpp/41ba2cc8-a1c4-4664-a9a4-_1.cpp)]"
  syntax:
    content: public void SetSigmaBellShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki."
    - id: scale
      type: System.Single
      description: "Wartość od 0 do 1, który określa maksymalne natężenie kolor center, który pobiera przenikaniem kolorem granic. Wartość 1 powoduje, że najwyższy możliwy intensywność koloru Centrum i jest wartością domyślną."
  overload: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors
  id: SurroundColors
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: SurroundColors
  nameWithType: PathGradientBrush.SurroundColors
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia tablicę kolorów, które odpowiadają punktów w ścieżce to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> wypełnia."
  remarks: "Każdy <xref:System.Drawing.Color>w SurroundColors tablicy odnosi się do punktu w ścieżce.</xref:System.Drawing.Color>"
  syntax:
    content: public System.Drawing.Color[] SurroundColors { get; set; }
    return:
      type: System.Drawing.Color[]
      description: "Tablica <xref href=&quot;System.Drawing.Color&quot;> </xref> struktur, które reprezentuje kolory skojarzone z każdym punktu w ścieżce to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> wypełnia."
  overload: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.Transform
  id: Transform
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: Transform
  nameWithType: PathGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia kopię <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> definiuje lokalne przekształcenia geometrycznych tego <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref>."
  remarks: "Przekształcenia geometrycznych może służyć do tłumaczenia, skalowanie, obracanie lub pochylanie wypełnieniem gradientowym. Ponieważ zwrócił macierzy i przez transformacji właściwości jest kopią transformacji geometrycznych pędzla, należy usunąć macierzy, gdy nie są już potrzebne."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Kopię <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> definiuje geometrycznych transformację ma zastosowanie tylko do wypełnienia narysowany to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref>."
  overload: System.Drawing.Drawing2D.PathGradientBrush.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: PathGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Dotyczy określonej tłumaczenia lokalne przekształcenia geometrycznej. Ta metoda dołącza tłumaczenia do transformacji."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "Wartość tłumaczenia x."
    - id: dy
      type: System.Single
      description: "Wartość tłumaczenia y."
  overload: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Dotyczy określonej tłumaczenia lokalne przekształcenia geometrycznych w określonej kolejności."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "Wartość tłumaczenia x."
    - id: dy
      type: System.Single
      description: "Wartość tłumaczenia y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Kolejność (dołączy lub Dołącz) w których mają zostać zastosowane tłumaczenia."
  overload: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.PathGradientBrush.WrapMode
  id: WrapMode
  parent: System.Drawing.Drawing2D.PathGradientBrush
  langs:
  - csharp
  name: WrapMode
  nameWithType: PathGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.PathGradientBrush.WrapMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Pobiera lub ustawia <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> wskazujące, w tym trybie zawijania <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.WrapMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> , który określa sposób wypełnienia narysowany to <xref href=&quot;System.Drawing.Drawing2D.PathGradientBrush&quot;> </xref> są rozmieszczane."
  overload: System.Drawing.Drawing2D.PathGradientBrush.WrapMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Brush
  isExternal: false
  name: System.Drawing.Brush
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: PathGradientBrush(GraphicsPath)
  nameWithType: PathGradientBrush.PathGradientBrush(GraphicsPath)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: PathGradientBrush(Point[])
  nameWithType: PathGradientBrush.PathGradientBrush(Point[])
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[])
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: PathGradientBrush(PointF[])
  nameWithType: PathGradientBrush.PathGradientBrush(PointF[])
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[])
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: PathGradientBrush(Point[],WrapMode)
  nameWithType: PathGradientBrush.PathGradientBrush(Point[],WrapMode)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[],WrapMode)
- uid: System.Drawing.Drawing2D.WrapMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WrapMode
  nameWithType: WrapMode
  fullName: System.Drawing.Drawing2D.WrapMode
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: PathGradientBrush(PointF[],WrapMode)
  nameWithType: PathGradientBrush.PathGradientBrush(PointF[],WrapMode)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[],WrapMode)
- uid: System.Drawing.Drawing2D.PathGradientBrush.Blend
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Blend
  nameWithType: PathGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Blend
- uid: System.Drawing.Drawing2D.Blend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Blend
  nameWithType: Blend
  fullName: System.Drawing.Drawing2D.Blend
- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterColor
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: CenterColor
  nameWithType: PathGradientBrush.CenterColor
  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: CenterPoint
  nameWithType: PathGradientBrush.CenterPoint
  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.PathGradientBrush.Clone
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Clone()
  nameWithType: PathGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.PathGradientBrush.FocusScales
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: FocusScales
  nameWithType: PathGradientBrush.FocusScales
  fullName: System.Drawing.Drawing2D.PathGradientBrush.FocusScales
- uid: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: PathGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.ColorBlend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: ColorBlend
  nameWithType: ColorBlend
  fullName: System.Drawing.Drawing2D.ColorBlend
- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: PathGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Drawing2D.PathGradientBrush.Rectangle
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: PathGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Rectangle
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: ResetTransform()
  nameWithType: PathGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform()
- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: PathGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: PathGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: PathGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single)
- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single)
  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single)
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single,Single)
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single)
  nameWithType: PathGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single)
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single,Single)
  nameWithType: PathGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single,Single)
- uid: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SurroundColors
  nameWithType: PathGradientBrush.SurroundColors
  fullName: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors
- uid: System.Drawing.Color[]
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color[]
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: Color[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.PathGradientBrush.Transform
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Transform
  nameWithType: PathGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.PathGradientBrush.Transform
- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: PathGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single)
- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.PathGradientBrush.WrapMode
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: PathGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.PathGradientBrush.WrapMode
- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: PathGradientBrush
  nameWithType: PathGradientBrush.PathGradientBrush
- uid: System.Drawing.Drawing2D.PathGradientBrush.Blend*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Blend
  nameWithType: PathGradientBrush.Blend
- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterColor*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: CenterColor
  nameWithType: PathGradientBrush.CenterColor
- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: CenterPoint
  nameWithType: PathGradientBrush.CenterPoint
- uid: System.Drawing.Drawing2D.PathGradientBrush.Clone*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Clone
  nameWithType: PathGradientBrush.Clone
- uid: System.Drawing.Drawing2D.PathGradientBrush.FocusScales*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: FocusScales
  nameWithType: PathGradientBrush.FocusScales
- uid: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: PathGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: MultiplyTransform
  nameWithType: PathGradientBrush.MultiplyTransform
- uid: System.Drawing.Drawing2D.PathGradientBrush.Rectangle*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: PathGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: ResetTransform
  nameWithType: PathGradientBrush.ResetTransform
- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: RotateTransform
  nameWithType: PathGradientBrush.RotateTransform
- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: ScaleTransform
  nameWithType: PathGradientBrush.ScaleTransform
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SetBlendTriangularShape
  nameWithType: PathGradientBrush.SetBlendTriangularShape
- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SetSigmaBellShape
  nameWithType: PathGradientBrush.SetSigmaBellShape
- uid: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: SurroundColors
  nameWithType: PathGradientBrush.SurroundColors
- uid: System.Drawing.Drawing2D.PathGradientBrush.Transform*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: Transform
  nameWithType: PathGradientBrush.Transform
- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: TranslateTransform
  nameWithType: PathGradientBrush.TranslateTransform
- uid: System.Drawing.Drawing2D.PathGradientBrush.WrapMode*
  parent: System.Drawing.Drawing2D.PathGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: PathGradientBrush.WrapMode
