### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._Type
  id: _Type
  children:
  - System.Runtime.InteropServices._Type.Assembly
  - System.Runtime.InteropServices._Type.AssemblyQualifiedName
  - System.Runtime.InteropServices._Type.Attributes
  - System.Runtime.InteropServices._Type.BaseType
  - System.Runtime.InteropServices._Type.DeclaringType
  - System.Runtime.InteropServices._Type.Equals(System.Object)
  - System.Runtime.InteropServices._Type.Equals(System.Type)
  - System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Runtime.InteropServices._Type.FullName
  - System.Runtime.InteropServices._Type.GetArrayRank
  - System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructors
  - System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.GetDefaultMembers
  - System.Runtime.InteropServices._Type.GetElementType
  - System.Runtime.InteropServices._Type.GetEvent(System.String)
  - System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetEvents
  - System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetField(System.String)
  - System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetFields
  - System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetHashCode
  - System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetInterface(System.String)
  - System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  - System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  - System.Runtime.InteropServices._Type.GetInterfaces
  - System.Runtime.InteropServices._Type.GetMember(System.String)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMembers
  - System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethods
  - System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedTypes
  - System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperties
  - System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetType
  - System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._Type.GUID
  - System.Runtime.InteropServices._Type.HasElementType
  - System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Runtime.InteropServices._Type.IsAbstract
  - System.Runtime.InteropServices._Type.IsAnsiClass
  - System.Runtime.InteropServices._Type.IsArray
  - System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  - System.Runtime.InteropServices._Type.IsAutoClass
  - System.Runtime.InteropServices._Type.IsAutoLayout
  - System.Runtime.InteropServices._Type.IsByRef
  - System.Runtime.InteropServices._Type.IsClass
  - System.Runtime.InteropServices._Type.IsCOMObject
  - System.Runtime.InteropServices._Type.IsContextful
  - System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.IsEnum
  - System.Runtime.InteropServices._Type.IsExplicitLayout
  - System.Runtime.InteropServices._Type.IsImport
  - System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  - System.Runtime.InteropServices._Type.IsInterface
  - System.Runtime.InteropServices._Type.IsLayoutSequential
  - System.Runtime.InteropServices._Type.IsMarshalByRef
  - System.Runtime.InteropServices._Type.IsNestedAssembly
  - System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  - System.Runtime.InteropServices._Type.IsNestedFamily
  - System.Runtime.InteropServices._Type.IsNestedFamORAssem
  - System.Runtime.InteropServices._Type.IsNestedPrivate
  - System.Runtime.InteropServices._Type.IsNestedPublic
  - System.Runtime.InteropServices._Type.IsNotPublic
  - System.Runtime.InteropServices._Type.IsPointer
  - System.Runtime.InteropServices._Type.IsPrimitive
  - System.Runtime.InteropServices._Type.IsPublic
  - System.Runtime.InteropServices._Type.IsSealed
  - System.Runtime.InteropServices._Type.IsSerializable
  - System.Runtime.InteropServices._Type.IsSpecialName
  - System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  - System.Runtime.InteropServices._Type.IsUnicodeClass
  - System.Runtime.InteropServices._Type.IsValueType
  - System.Runtime.InteropServices._Type.MemberType
  - System.Runtime.InteropServices._Type.Module
  - System.Runtime.InteropServices._Type.Name
  - System.Runtime.InteropServices._Type.Namespace
  - System.Runtime.InteropServices._Type.ReflectedType
  - System.Runtime.InteropServices._Type.ToString
  - System.Runtime.InteropServices._Type.TypeHandle
  - System.Runtime.InteropServices._Type.TypeInitializer
  - System.Runtime.InteropServices._Type.UnderlyingSystemType
  langs:
  - csharp
  name: _Type
  nameWithType: _Type
  fullName: System.Runtime.InteropServices._Type
  type: Interface
  summary: "Udostępnia publiczne elementy członkowskie &lt;xref:System.Type?displayProperty=fullName&gt; klasy do kodu niezarządzanego."
  remarks: "Ten interfejs jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       Ten interfejs zachowuje kolejność vtable <xref:System.Type?displayProperty=fullName>klasy elementów członkowskich, które mogą być udostępniane przez niezarządzane obiekty COM.</xref:System.Type?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))]

      public interface _Type
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Assembly
  id: Assembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.Assembly%2A?displayProperty=fullName>Pobiera właściwość <xref:System.Reflection.Assembly>w którym zadeklarowano typ.</xref:System.Reflection.Assembly> </xref:System.Type.Assembly%2A?displayProperty=fullName> Dla typów ogólnych, pobiera tę właściwość <xref:System.Reflection.Assembly>w jest zdefiniowany typ ogólny.</xref:System.Reflection.Assembly>"
  syntax:
    content: public System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>Wystąpienie, które opisano zestaw zawierający typ bieżącego.</xref:System.Reflection.Assembly>"
  overload: System.Runtime.InteropServices._Type.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>Właściwość pobiera nazwa kwalifikowana zestawu <xref:System.Type>, łącznie z nazwą zestawu, w którym <xref:System.Type>została załadowana.</xref:System.Type> </xref:System.Type> </xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>"
  syntax:
    content: public string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: "Nazwa kwalifikowana zestawu <xref:System.Type>, łącznie z nazwą zestawu, w którym <xref:System.Type>została załadowana.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.Attributes%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.Attributes%2A?displayProperty=fullName>Właściwość pobiera atrybuty skojarzone z <xref:System.Type>.</xref:System.Type> </xref:System.Type.Attributes%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: "A <xref:System.Reflection.TypeAttributes>obiekt reprezentujący zestaw atrybutów <xref:System.Type>, chyba że <xref:System.Type>reprezentuje parametr typu ogólnego, w których przypadku wartość jest nieokreślony.</xref:System.Type> </xref:System.Type> </xref:System.Reflection.TypeAttributes>"
  overload: System.Runtime.InteropServices._Type.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.BaseType
  id: BaseType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.BaseType%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.BaseType%2A?displayProperty=fullName>Właściwość pobiera typ, z którego bieżący <xref:System.Type>bezpośrednio dziedziczy.</xref:System.Type> </xref:System.Type.BaseType%2A?displayProperty=fullName>"
  syntax:
    content: public Type BaseType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>z którego bieżącego <xref:System.Type>dziedziczy bezpośrednio, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli bieżące <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> reprezentuje <xref:System.Object>klasy</xref:System.Object> </xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.DeclaringType%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.DeclaringType%2A?displayProperty=fullName>Właściwość pobiera klasy, która deklaruje tego elementu członkowskiego.</xref:System.Type.DeclaringType%2A?displayProperty=fullName>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu klasy, która deklaruje tego elementu członkowskiego.</xref:System.Type> Jeśli typ jest typem zagnieżdżonym, ta właściwość zwraca typ otaczający."
  overload: System.Runtime.InteropServices._Type.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.Equals%2A?displayProperty=fullName>Metoda określa, czy bieżący <xref:System.Type>jest taki sam jak typ bazowy systemu określonego <xref:System.Object>.</xref:System.Object> </xref:System.Type> typ źródłowy system</xref:System.Type.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: ", <xref:System.Object>Którego typ podstawowy system jest ma zostać porównane z typem bazowym systemu bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli typ źródłowy system <code> o </code> jest taki sam jak podstawowy typ systemu bieżącego <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  id: Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.Equals%2A?displayProperty=fullName>Metoda określa, czy bieżący <xref:System.Type>jest taki sam jak typ bazowy systemu określonego <xref:System.Type>.</xref:System.Type> </xref:System.Type> typ źródłowy system</xref:System.Type.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Equals (Type o);
    parameters:
    - id: o
      type: System.Type
      description: ", <xref:System.Type>Którego typ podstawowy system jest ma zostać porównane z typem bazowym systemu bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli typ źródłowy system <code> o </code> jest taki sam jak podstawowy typ systemu bieżącego <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>Metoda zwraca tablicę <xref:System.Type>obiektów reprezentująca filtrowana lista interfejsy zaimplementowano lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Type> </xref:System.Type.FindInterfaces%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);
    parameters:
    - id: filter
      type: System.Reflection.TypeFilter
      description: "<xref href=&quot;System.Reflection.TypeFilter&quot;> </xref> Delegata, który porównuje interfejsy przed `filterCriteria`."
    - id: filterCriteria
      type: System.Object
      description: "Kryteria wyszukiwania, które określa, czy interfejs powinien być uwzględniany w zwróconej tablicy."
    return:
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentująca filtrowana lista interfejsy zaimplementowano lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>Jeśli żadne interfejsy zgodne z filtrem są zaimplementowano lub dziedziczone przez bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.FindInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.FindMembers%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.FindMembers%2A?displayProperty=fullName>Metoda zwraca filtrowane tablicę <xref:System.Reflection.MemberInfo>obiektów typu określonego elementu członkowskiego.</xref:System.Reflection.MemberInfo> </xref:System.Type.FindMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: "A <xref uid=&quot;langword_csharp_MemberTypes&quot; name=&quot;MemberTypes&quot; href=&quot;&quot;> </xref> obiekt wskazujący typ elementu członkowskiego do wyszukania."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: filter
      type: System.Reflection.MemberFilter
      description: "Delegata, który wykonuje porównań, zwracając <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli element członkowski obecnie sprawdzana dopasowań `filterCriteria` i <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inaczej. Można użyć <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_FilterName&quot; name=&quot;FilterName&quot; href=&quot;&quot;> </xref>, i <xref uid=&quot;langword_csharp_FilterNameIgnoreCase&quot; name=&quot;FilterNameIgnoreCase&quot; href=&quot;&quot;> </xref> delegatów dostarczonych przez tę klasę. Pierwszy używa pola <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>, i <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;> </xref> jako kryteria wyszukiwania, a następnie użyć dwóch delegatów <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> obiektów jako kryterium wyszukiwania."
    - id: filterCriteria
      type: System.Object
      description: "Kryteria wyszukiwania, które określa, czy element członkowski jest zwracany w tablicy <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> obiektów.       Pola <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>, i <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;> </xref> mogą być używane w połączeniu z <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;> </xref> delegata dostarczonych przez tę klasę."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Filtrowane tablicę <xref:System.Reflection.MemberInfo>obiektów typu określonego elementu członkowskiego.</xref:System.Reflection.MemberInfo>       - lub - pustą tablicę typu <xref:System.Reflection.MemberInfo>, jeśli bieżący <xref:System.Type>nie ma elementów członkowskich typu <code> memberType </code> spełniających kryteria filtrowania.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.FindMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FullName
  id: FullName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.FullName%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.FullName%2A?displayProperty=fullName>Właściwość pobiera w pełni kwalifikowana nazwa <xref:System.Type>, włącznie z przestrzenią nazw z <xref:System.Type>, ale nie zestawu.</xref:System.Type> </xref:System.Type> </xref:System.Type.FullName%2A?displayProperty=fullName>"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "Ciąg zawierający w pełni kwalifikowana nazwa <xref:System.Type>, włącznie z przestrzenią nazw z <xref:System.Type>, ale nie zestawu.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  id: GetArrayRank
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetArrayRank%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetArrayRank%2A?displayProperty=fullName>Liczba wymiarów w <xref:System.Array>.</xref:System.Array> pobiera — metoda</xref:System.Type.GetArrayRank%2A?displayProperty=fullName>"
  syntax:
    content: public int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>Zawierające liczby wymiarów w bieżącym <xref:System.Type>.</xref:System.Type> </xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  id: GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>Metody wyszukuje konstruktora wystąpienia publicznego, którego parametry są zgodne z typami w określonej tablicy.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiekty reprezentujące numer zamówienia i typy parametrów dla żądanego konstruktora.</xref:System.Type>       - lub - pustą tablicę <xref:System.Type>obiektów, aby uzyskać konstruktora, który nie przyjmuje żadnych parametrów.</xref:System.Type> Pusta tablica jest zapewniana przez <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> pola &lt;xref:System.Type?displayProperty=fullName&gt;."
    return:
      type: System.Reflection.ConstructorInfo
      description: "A <xref:System.Reflection.ConstructorInfo>obiekt reprezentujący konstruktora wystąpienia publicznego, którego parametry są zgodne typy tablicy typu parametru, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>Wyszukuje metody konstruktora, którego parametry są zgodne modyfikatorów, korzystanie z określonymi ograniczeniami wiązania i określone typy argumentów.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów dla konstruktora, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać konstruktora, który nie przyjmuje żadnych parametrów.</xref:System.Type>       -or-       <xref:System.Type>.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadający mu element w tablicy parametrów typu. Domyślny integrator nie przetwarza tego parametru."
    return:
      type: System.Reflection.ConstructorInfo
      description: "A <xref:System.Reflection.ConstructorInfo>obiekt reprezentujący Konstruktor, który spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>Metoda szuka konstruktora, którego parametry są zgodne określone typy argumentów i Modyfikatory korzystanie z określonymi ograniczeniami wiązania i określonej konwencji wywoływania.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "<xref:System.Reflection.CallingConventions>Obiekt, który określa zbiór reguł dotyczących kolejności i układu argumentów, jak wartość zwracana jest przekazywany, jakie rejestrów są używane w przypadku argumentów i stos jest oczyszczony oceny.</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów dla konstruktora, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać konstruktora, który nie przyjmuje żadnych parametrów.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadającego mu elementu w `types` tablicy. Domyślny integrator nie przetwarza tego parametru."
    return:
      type: System.Reflection.ConstructorInfo
      description: "A <xref:System.Reflection.ConstructorInfo>obiekt reprezentujący Konstruktor, który spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors
  id: GetConstructors
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetConstructors%2A?displayProperty=fullName>Metoda zwraca publicznych konstruktorów zdefiniowanych dla bieżącej <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors ();
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "Tablica <xref:System.Reflection.ConstructorInfo>obiekty reprezentujące wszystkich zdefiniowanych dla bieżącej konstruktorów wystąpienia publicznego <xref:System.Type>, z wyjątkiem inicjatora typu (w konstruktorze statycznym).</xref:System.Type> </xref:System.Reflection.ConstructorInfo> Jeśli ma konstruktorów wystąpienia publicznego są zdefiniowane dla bieżącego <xref:System.Type>, lub, jeśli bieżący <xref:System.Type>reprezentuje parametr typu ogólnego definicji typu lub metody, pustą tablicę typu <xref:System.Reflection.ConstructorInfo>jest zwracana.</xref:System.Reflection.ConstructorInfo> </xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetConstructors%2A?displayProperty=fullName>Metoda wyszukuje zdefiniowanych dla bieżącej <xref:System.Type>używając określonego <xref:System.Reflection.BindingFlags>.</xref:System.Reflection.BindingFlags> </xref:System.Type> konstruktorów</xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "Tablica <xref:System.Reflection.ConstructorInfo>obiekty reprezentujące wszystkich konstruktorów zdefiniowanych dla bieżącej <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania, jeśli jest on zdefiniowany w tym inicjatora typu.</xref:System.Type> </xref:System.Reflection.ConstructorInfo> Zwraca pustą tablicę typu <xref:System.Reflection.ConstructorInfo>Jeśli ma konstruktorów zdefiniowanych dla bieżącej <xref:System.Type>, jeśli żadna z konstruktorów zdefiniowanych nie zgadza się z ograniczeniami wiązania lub bieżący <xref:System.Type>reprezentuje parametr typu ogólnego definicji typu lub metody.</xref:System.Type> </xref:System.Type> </xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>Metoda zwraca wszystkie atrybuty stosowane do tego elementu członkowskiego.</xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "Określa, czy przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów."
    return:
      type: System.Object[]
      description: "Tablica atrybutów niestandardowych zastosowanych do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu (0), jeśli atrybuty nie zostały zastosowane."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>Metoda zwraca wszystkie atrybuty stosowane do tego elementu członkowskiego.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Typ atrybutu do szukania. Zwracane są tylko atrybuty, które są przypisane do tego typu."
    - id: inherit
      type: System.Boolean
      description: "Określa, czy przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów."
    return:
      type: System.Object[]
      description: "Tablica atrybutów niestandardowych zastosowanych do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu (0), jeśli atrybuty nie zostały zastosowane."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  id: GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>Metody wyszukuje elementów członkowskich zdefiniowanych dla bieżącej <xref:System.Type>którego <xref:System.Reflection.DefaultMemberAttribute>jest ustawiona.</xref:System.Reflection.DefaultMemberAttribute> </xref:System.Type> </xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetDefaultMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "Tablica <xref:System.Reflection.MemberInfo>obiektów reprezentująca wszystkie domyślne elementy członkowskie w bieżącej <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo>       - lub - pustą tablicę typu <xref:System.Reflection.MemberInfo>, jeśli bieżący <xref:System.Type>nie ma domyślne elementy członkowskie.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetDefaultMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetElementType
  id: GetElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetElementType%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetElementType%2A?displayProperty=fullName>Metoda zwraca <xref:System.Type>obiektu ujęty lub odwołuje się do bieżącego typu tablicy, wskaźnik lub odwołanie.</xref:System.Type> </xref:System.Type.GetElementType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu ujęty lub odwołuje się do bieżącego typu tablicy, wskaźnik lub odwołanie.</xref:System.Type>       - lub - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli bieżące <xref:System.Type>nie jest tablicą ani wskaźnikiem, lub nie jest przekazywana przez odwołanie lub reprezentuje typu ogólnego lub parametr typu ogólnego definicji typu lub metody.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  id: GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetEvent%2A?displayProperty=fullName>Metody wyszukuje zdarzenia, które są zadeklarowane lub dziedziczone przez bieżący <xref:System.Type>, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name);
    parameters:
    - id: name
      type: System.String
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo
      description: "Tablica <xref:System.Reflection.EventInfo>obiekty reprezentujące wszystkie zdarzenia, które są zadeklarowane lub dziedziczone przez bieżący <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.EventInfo>       - lub - pustą tablicę typu <xref:System.Reflection.EventInfo>, jeśli bieżący <xref:System.Type>nie ma zdarzenia, lub jeśli brak zdarzeń są zgodne z ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetEvent%2A?displayProperty=fullName>Metoda zwraca <xref:System.Reflection.EventInfo>obiekt reprezentujący określonego zdarzenia, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Reflection.EventInfo> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę zdarzenia, który jest zadeklarowana lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo
      description: "<xref:System.Reflection.EventInfo>Obiekt reprezentujący określonego zdarzenia, które jest zadeklarowany lub dziedziczone przez bieżący <xref:System.Type>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents
  id: GetEvents
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetEvents%2A?displayProperty=fullName>Metoda zwraca wszystkie zdarzenia publiczne które są zadeklarowane lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: "Tablica <xref:System.Reflection.EventInfo>obiektów reprezentująca wszystkie zdarzenia publiczne które są zadeklarowane lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.EventInfo>       - lub - pustą tablicę typu <xref:System.Reflection.EventInfo>, jeśli bieżący <xref:System.Type>nie ma zdarzenia publiczne.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetEvents%2A?displayProperty=fullName>Metody wyszukuje zdarzenia, które są zadeklarowane lub dziedziczone przez bieżący <xref:System.Type>, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo[]
      description: "Tablica <xref:System.Reflection.EventInfo>obiekty reprezentujące wszystkie zdarzenia, które są zadeklarowane lub dziedziczone przez bieżący <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.EventInfo>       - lub - pustą tablicę typu <xref:System.Reflection.EventInfo>, jeśli bieżący <xref:System.Type>nie ma zdarzenia, lub jeśli brak zdarzeń są zgodne z ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  id: GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetField%2A?displayProperty=fullName>Metody wyszukuje pole publiczne o określonej nazwie.</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę pola danych, aby uzyskać.</xref:System.String>"
    return:
      type: System.Reflection.FieldInfo
      description: "A <xref:System.Reflection.FieldInfo>obiekt reprezentujący pole publiczne o określonej nazwie, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetField%2A?displayProperty=fullName>Metoda szuka określonego pola, używając z określonymi ograniczeniami wiązania.</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę pola danych, aby uzyskać.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.FieldInfo
      description: "A <xref:System.Reflection.FieldInfo>obiekt reprezentujący pola, które spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields
  id: GetFields
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetFields%2A?displayProperty=fullName>Pola publiczne bieżącego <xref:System.Type>.</xref:System.Type> zwraca — metoda</xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields ();
    parameters: []
    return:
      type: System.Reflection.FieldInfo[]
      description: "Tablica <xref:System.Reflection.FieldInfo>obiektów reprezentująca pola publiczne zdefiniowane dla bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.FieldInfo>       - lub - pustą tablicę typu <xref:System.Reflection.FieldInfo>Jeśli nie ma publicznego pól zdefiniowanych dla bieżącej <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetFields%2A?displayProperty=fullName>Metody wyszukuje pól zdefiniowanych dla bieżącej <xref:System.Type>, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.FieldInfo[]
      description: "Tablica <xref:System.Reflection.FieldInfo>obiekty reprezentujące wszystkich pól zdefiniowanych dla bieżącej <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.FieldInfo>       - lub - pustą tablicę typu <xref:System.Reflection.FieldInfo>, jeśli nie ma pól zdefiniowanych dla bieżącej <xref:System.Type>, lub jeśli żadna z określonych pól nie zgadza się z ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetHashCode%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetHashCode%2A?displayProperty=fullName>Metody.</xref:System.Type.GetHashCode%2A?displayProperty=fullName>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>Zawierający wartość skrótu dla tego wystąpienia.</xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Zarezerwowane do użytku w przyszłości. Musi być ma wartości IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Tablica przekazany nazw można mapować."
    - id: cNames
      type: System.UInt32
      description: "Liczba nazw można mapować."
    - id: lcid
      type: System.UInt32
      description: "Kontekst ustawień regionalnych, w którym zinterpretować nazwy."
    - id: rgDispId
      type: System.IntPtr
      description: "Tablica przydzielone przez obiekt wywołujący, która odbiera identyfikatory, odpowiadających nazwy."
  overload: System.Runtime.InteropServices._Type.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetInterface%2A?displayProperty=fullName>Metoda wyszukuje interfejsu o określonej nazwie.</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę interfejsu do pobrania.</xref:System.String> Interfejsy ogólne jest to nazwa zniekształcona."
    return:
      type: System.Type
      description: "A <xref:System.Type>obiekt reprezentujący interfejsu o określonej nazwie zaimplementowano lub dziedziczone przez bieżący <xref:System.Type>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetInterface%2A?displayProperty=fullName>Metoda szuka dla określonego interfejsu, określająca, czy do wyszukiwania z uwzględnieniem wielkości liter.</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę interfejsu do pobrania.</xref:System.String> Interfejsy ogólne jest to nazwa zniekształcona."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wykonać wyszukiwanie bez uwzględniania wielkości liter dla `name`.       - lub - <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Aby wykonać wyszukiwanie z uwzględnieniem wielkości liter dla `name`."
    return:
      type: System.Type
      description: "A <xref:System.Type>obiekt reprezentujący interfejsu o określonej nazwie zaimplementowano lub dziedziczone przez bieżący <xref:System.Type>, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>Metoda zwraca interfejs mapowania dla typu określonego interfejsu.</xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: "<xref:System.Type>Interfejsu, którego można pobrać mapowania.</xref:System.Type>"
    return:
      type: System.Reflection.InterfaceMapping
      description: "<xref:System.Reflection.InterfaceMapping>Obiekt reprezentujący mapowania interfejsu <code> interfaceType </code>.</xref:System.Reflection.InterfaceMapping>"
  overload: System.Runtime.InteropServices._Type.GetInterfaceMap*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  id: GetInterfaces
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetInterfaces%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetInterfaces%2A?displayProperty=fullName>Metoda pobiera wszystkie interfejsy zaimplementowano lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetInterfaces%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentująca wszystkie interfejsy zaimplementowano lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>żadne interfejsy są zaimplementowano lub dziedziczone przez bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMember%2A?displayProperty=fullName>Metody wyszukuje publiczne elementy członkowskie o określonej nazwie.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę publiczne elementy członkowskie, aby uzyskać.</xref:System.String>"
    return:
      type: System.Reflection.MemberInfo[]
      description: "Tablica <xref:System.Reflection.MemberInfo>obiekty reprezentujące publiczne elementy członkowskie o określonej nazwie, jeśli je znaleziono; w przeciwnym razie, pustą tablicę.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMember%2A?displayProperty=fullName>Metody wyszukuje określony elementy członkowskie przy użyciu z określonymi ograniczeniami wiązania.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwy elementów członkowskich do pobrania.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić pustą tablicę."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Tablica <xref:System.Reflection.MemberInfo>obiekty reprezentujące publiczne elementy członkowskie o określonej nazwie, jeśli je znaleziono; w przeciwnym razie, pustą tablicę.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMember%2A?displayProperty=fullName>Metody wyszukuje określony elementów członkowskich typu określonego elementu członkowskiego, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwy elementów członkowskich do pobrania.</xref:System.String>"
    - id: type
      type: System.Reflection.MemberTypes
      description: "<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> Wartość do wyszukania."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić pustą tablicę."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Tablica <xref:System.Reflection.MemberInfo>obiekty reprezentujące publiczne elementy członkowskie o określonej nazwie, jeśli je znaleziono; w przeciwnym razie, pustą tablicę.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers
  id: GetMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMembers%2A?displayProperty=fullName>Metoda zwraca wszystkie publiczne elementy członkowskie bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "Tablica <xref:System.Reflection.MemberInfo>obiektów reprezentująca wszystkie publiczne elementy członkowskie bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo>       - lub - pustą tablicę typu <xref:System.Reflection.MemberInfo>, jeśli bieżący <xref:System.Type>nie ma publicznych członków.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMembers%2A?displayProperty=fullName>Metody wyszukuje elementów członkowskich zdefiniowanych dla bieżącej <xref:System.Type>, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Type.GetMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Tablica <xref:System.Reflection.MemberInfo>obiekty reprezentujące wszystkich elementów członkowskich zdefiniowanych dla bieżącej <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.MemberInfo>       - lub - pustą tablicę typu <xref:System.Reflection.MemberInfo>, jeśli dla bieżącej nie zdefiniowano żadnych elementów członkowskich <xref:System.Type>, lub jeśli żadna z określonych elementów członkowskich nie zgadza się z ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  id: GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Metoda wyszukuje metoda publiczna o określonej nazwie.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę metody publicznej uzyskanie.</xref:System.String>"
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>obiekt reprezentujący metoda publiczna o określonej nazwie, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Metoda szuka dla określonej metody, przy użyciu z określonymi ograniczeniami wiązania.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę metody, aby uzyskać.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>obiekt reprezentujący metodę, która spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  id: GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Metody wyszukiwania dla określonej metody publicznej, którego parametry są zgodne określone typy argumentów.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę metody publicznej uzyskanie.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów dla metody, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać metody, która nie przyjmuje żadnych parametrów.</xref:System.Type>"
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>obiekt reprezentujący publicznej metody, której parametry są zgodne określone typy argumentów, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Metody wyszukiwania dla określonej metody publicznej, którego parametry są zgodne określone typy argumentów i modyfikatory.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę metody publicznej uzyskanie.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów dla metody, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać metody, która nie przyjmuje żadnych parametrów.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadającego mu elementu w `types` tablicy. Domyślny integrator nie przetwarza tego parametru."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>obiekt reprezentujący metodę publiczną, która spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Metody wyszukiwania dla określonej metody, której parametry są zgodne modyfikatorów, korzystanie z określonymi ograniczeniami wiązania i określone typy argumentów.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę metody, aby uzyskać.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów dla metody, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać metody, która nie przyjmuje żadnych parametrów.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadającego mu elementu w `types` tablicy. Domyślny integrator nie przetwarza tego parametru."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>obiekt reprezentujący metodę, która spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Metoda szuka dla określonej metody, której parametry są zgodne określone typy argumentów i Modyfikatory korzystanie z określonymi ograniczeniami wiązania i określonej konwencji wywoływania.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę metody, aby uzyskać.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "<xref:System.Reflection.CallingConventions>Obiekt, który określa zbiór reguł dotyczących kolejności i układ argumenty, jak wartość zwracana jest przekazywany, jakie rejestrów są używane w przypadku argumentów i jak stosu oczyszczono</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów dla metody, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać metody, która nie przyjmuje żadnych parametrów.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadającego mu elementu w `types` tablicy. Domyślny integrator nie przetwarza tego parametru."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>obiekt reprezentujący metodę, która spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods
  id: GetMethods
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethods%2A?displayProperty=fullName>Metody publiczne bieżącego <xref:System.Type>.</xref:System.Type> zwraca — metoda</xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "Tablica <xref:System.Reflection.MethodInfo>obiektów reprezentująca metody publiczne zdefiniowane dla bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MethodInfo>       - lub - pustą tablicę typu <xref:System.Reflection.MethodInfo>Jeśli nie publicznej metody nie są definiowane dla bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetMethods%2A?displayProperty=fullName>Metody wyszukuje metody zdefiniowane dla bieżącego <xref:System.Type>, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo[]
      description: "Tablica <xref:System.Reflection.MethodInfo>obiekty reprezentujące wszystkie metody zdefiniowane dla bieżącego <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.MethodInfo>       - lub - pustą tablicę typu <xref:System.Reflection.MethodInfo>, jeśli nie metody nie są definiowane dla bieżącego <xref:System.Type>, lub jeśli żadna z określonych metod nie zgadza się z ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  id: GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetNestedType%2A?displayProperty=fullName>Metody wyszukuje zagnieżdżonego typu publicznego o określonej nazwie.</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę typu zagnieżdżonego można pobrać."
    return:
      type: System.Type
      description: "A <xref:System.Type>obiekt reprezentujący zagnieżdżonego typu publicznego o określonej nazwie, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetNestedType%2A?displayProperty=fullName>Metoda szuka dla określonego typu zagnieżdżonego, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Ciąg zawierający nazwę typu zagnieżdżonego można pobrać."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type
      description: "A <xref:System.Type>obiekt reprezentujący typu zagnieżdżonego, który spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  id: GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>Metoda zwraca wszystkie typy zagnieżdżone w obrębie bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] GetNestedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentujący wszystkie typy zagnieżdżone w obrębie bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>Jeśli żaden z typów są zagnieżdżone w obrębie bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; — metoda i wyszukuje typy zagnieżdżone w obrębie bieżącego <xref:System.Type>, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego."
  syntax:
    content: public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiekty reprezentujący wszystkie typy zagnieżdżone w obrębie bieżącego <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>, jeśli żaden z typów są zagnieżdżone w obrębie bieżącego <xref:System.Type>, lub jeśli żadna typy zagnieżdżone nie zgadza się z ograniczeniami wiązania.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties
  id: GetProperties
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperties%2A?displayProperty=fullName>Metoda zwraca wartość właściwości publiczne bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties ();
    parameters: []
    return:
      type: System.Reflection.PropertyInfo[]
      description: "Tablica <xref:System.Reflection.PropertyInfo>obiektów reprezentująca wszystkie właściwości publiczne bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.PropertyInfo>       - lub - pustą tablicę typu <xref:System.Reflection.PropertyInfo>, jeśli bieżący <xref:System.Type>nie ma właściwości publicznej.</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperties%2A?displayProperty=fullName>Metody wyszukuje właściwości bieżącego <xref:System.Type>, korzystanie z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "Tablica <xref:System.Reflection.PropertyInfo>obiekty reprezentujące wszystkie właściwości bieżącego <xref:System.Type>zgodnego z określonymi ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.PropertyInfo>       - lub - pustą tablicę typu <xref:System.Reflection.PropertyInfo>, jeśli bieżący <xref:System.Type>nie ma właściwości, lub jeśli żadna z właściwości nie zgadza się z ograniczeniami wiązania.</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Metoda wyszukuje właściwości publicznej o określonej nazwie.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę publicznej właściwości do pobrania.</xref:System.String>"
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo>obiekt reprezentujący właściwość publiczna o określonej nazwie, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Metoda szuka dla określonej właściwości przy użyciu z określonymi ograniczeniami wiązania.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę właściwości do pobrania.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo>obiekt reprezentujący właściwość, która spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  id: GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Metody wyszukuje właściwości publicznej o określoną nazwę i typ zwracany.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę publicznej właściwości do pobrania.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "Zwracany typ właściwości."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo>obiekt reprezentujący właściwość publiczna o określonej nazwie, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  id: GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Metoda wyszukuje dla określonej właściwości publiczne, którego parametry są zgodne typy określonego argumentu.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę publicznej właściwości do pobrania.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów indeksowane właściwości, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać właściwości, która nie jest indeksowana.</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo>obiekt reprezentujący właściwość publiczna, którego parametry są zgodne określone typy argumentów, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  id: GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Metody wyszukiwania dla określonej właściwości publiczne, którego parametry są zgodne określone typy argumentów.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę publicznej właściwości do pobrania.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "Zwracany typ właściwości."
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów indeksowane właściwości, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać właściwości, która nie jest indeksowana.</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo>obiekt reprezentujący właściwość publiczna, którego parametry są zgodne określone typy argumentów, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Metody wyszukiwania dla określonej właściwości publiczne, którego parametry są zgodne określone typy argumentów i modyfikatory.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierającą nazwę publicznej właściwości do pobrania.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "Zwracany typ właściwości."
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów indeksowane właściwości, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać właściwości, która nie jest indeksowana.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadającego mu elementu w `types` tablicy. Domyślny integrator nie przetwarza tego parametru."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo>obiekt reprezentujący właściwość publiczna, który spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Metody wyszukiwania dla określonej właściwości, którego parametry są zgodne modyfikatorów, korzystanie z określonymi ograniczeniami wiązania i określone typy argumentów.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierający nazwę właściwości do pobrania.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie.       - lub - Zero, aby zwrócić <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: returnType
      type: System.Type
      description: "Zwracany typ właściwości."
    - id: types
      type: System.Type[]
      description: "Tablica <xref:System.Type>obiektów reprezentującą numer, kolejność i typy parametrów indeksowane właściwości, aby uzyskać.</xref:System.Type>       - lub - pustą tablicę typu <xref:System.Type>(to znaczy wpisz typów [] = nowe Type[0]) można pobrać właściwości, która nie jest indeksowana.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadającego mu elementu w `types` tablicy. Domyślny integrator nie przetwarza tego parametru."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo>obiekt reprezentujący właściwość, która spełnia określonych wymagań, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetType
  id: GetType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GetType%2A?displayProperty=fullName>Metoda pobiera bieżący <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "Bieżący <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera informacje o typie dla obiekt, który można pobrać informacji o typie dla interfejsu."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Informacje o typie do zwrócenia."
    - id: lcid
      type: System.UInt32
      description: "Identyfikator ustawień regionalnych dla informacji o typie."
    - id: ppTInfo
      type: System.IntPtr
      description: "Uzyskuje wskaźnik do obiektu informacji żądanego typu."
  overload: System.Runtime.InteropServices._Type.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera numer typu informacji interfejsów, że obiekt zawiera (0 lub 1)."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Wskazuje lokalizację, która odbiera liczba interfejsów informacji typu dostarczanych przez obiekt."
  overload: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GUID
  id: GUID
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.GUID%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.GUID%2A?displayProperty=fullName>Identyfikator GUID skojarzony z <xref:System.Type>.</xref:System.Type> pobiera właściwość</xref:System.Type.GUID%2A?displayProperty=fullName>"
  syntax:
    content: public Guid GUID { get; }
    return:
      type: System.Guid
      description: "Identyfikator GUID skojarzony z <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GUID*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.HasElementType
  id: HasElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.HasElementType%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.HasElementType%2A?displayProperty=fullName>Właściwość</xref:System.Type.HasElementType%2A?displayProperty=fullName>"
  syntax:
    content: public bool HasElementType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest tablicą wskaźnik, lub jest przekazywana przez odwołanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.HasElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zapewnia dostęp do właściwości i metody ujawnione przez obiekt."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identyfikuje element członkowski."
    - id: riid
      type: System.Guid
      description: "Zarezerwowane do użytku w przyszłości. Musi być ma wartości IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Kontekst ustawień regionalnych, w którym interpretować argumentów."
    - id: wFlags
      type: System.Int16
      description: "Flagi opisujące kontekstu wywołania."
    - id: pDispParams
      type: System.IntPtr
      description: "Wskaźnik do struktury zawierający tablicę argumentów tablicy argumentu identyfikator DISPID dla argumentów nazwanych i liczbie liczba elementów w tablicach."
    - id: pVarResult
      type: System.IntPtr
      description: "Wskaźnik do lokalizacji, w którym ma być przechowywany wynik."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Wskaźnik do struktury, która zawiera informacje o wyjątku."
    - id: puArgErr
      type: System.IntPtr
      description: "Indeks pierwszego argumentu, który zawiera błąd."
  overload: System.Runtime.InteropServices._Type.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>Metoda wywołuje określonego elementu członkowskiego przy użyciu określonego powiązania ograniczenia i dopasowywanie określona lista argumentów.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierające nazwę konstruktora, metoda, właściwość lub członek pola do wywołania.</xref:System.String>       - lub - ciąg pusty (&quot;&quot;) do wywołania domyślny element członkowski.       - lub - IDispatch dla członków, ciąg reprezentujący identyfikator DispID, na przykład &quot;[DispID =&3;]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. Typ wyszukiwania nie muszą być określane. W przypadku pominięcia typ wyszukiwania <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> będą stosowane."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>Do wywołania określonego elementu członkowskiego.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Tablica zawierająca argumenty do przekazania do elementu członkowskiego do wywołania."
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący wartość zwracaną wywołany element członkowski.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>Metoda wywołuje określonego elementu członkowskiego przy użyciu określonego powiązania ograniczenia i dopasowywanie określona lista argumentów i kultury.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierające nazwę konstruktora, metoda, właściwość lub członek pola do wywołania.</xref:System.String>       - lub - ciąg pusty (&quot;&quot;) do wywołania domyślny element członkowski.       - lub - IDispatch dla członków, ciąg reprezentujący identyfikator DispID, na przykład &quot;[DispID =&3;]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. Typ wyszukiwania nie muszą być określane. W przypadku pominięcia typ wyszukiwania <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> będą stosowane."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>Do wywołania określonego elementu członkowskiego.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Tablica zawierająca argumenty do przekazania do elementu członkowskiego do wywołania."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Obiekt reprezentujący ustawień regionalnych globalizacji do użycia, które mogą być konieczne w przypadku konwersji specyficzne dla ustawień regionalnych, takie jak konwertowanie liczbowych ciągu na wartość typu Double.</xref:System.Globalization.CultureInfo>       - lub - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> do użycia bieżącego wątku <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący wartość zwracaną wywołany element członkowski.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>Metoda wywołuje określonego elementu członkowskiego przy użyciu określonego powiązania ograniczenia i dopasowywanie określona lista argumentów, Modyfikatory i kultury.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Zawierające nazwę konstruktora, metoda, właściwość lub członek pola do wywołania.</xref:System.String>       - lub - ciąg pusty (&quot;&quot;) do wywołania domyślny element członkowski.       - lub - IDispatch dla członków, ciąg reprezentujący identyfikator DispID, na przykład &quot;[DispID =&3;]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Maska bitowa składającej się z co najmniej jeden <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> określające, jak jest prowadzone wyszukiwanie. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. Typ wyszukiwania nie muszą być określane. W przypadku pominięcia typ wyszukiwania <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> będą stosowane."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;> </xref> obiektu definiuje zbiór właściwości, który umożliwia powiązanie, które obejmują wybór przeciążonej metody koercja typy argumentów i wywołanie elementu członkowskiego przy użyciu odbicia.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>Do wywołania określonego elementu członkowskiego.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Tablica zawierająca argumenty do przekazania do elementu członkowskiego do wywołania."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Tablica <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> obiektów reprezentujących atrybuty skojarzone z odpowiadającego mu elementu w `args` tablicy. Parametr skojarzonych z nimi atrybutów są przechowywane w podpisie elementu członkowskiego. Domyślny integrator nie przetwarza tego parametru."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Obiekt reprezentujący ustawień regionalnych globalizacji do użycia, które mogą być konieczne w przypadku konwersji specyficzne dla ustawień regionalnych, takie jak konwertowanie liczbowych ciągu na wartość typu Double.</xref:System.Globalization.CultureInfo>       - lub - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> do użycia bieżącego wątku <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    - id: namedParameters
      type: System.String[]
      description: "Tablica zawierająca nazwy parametrów, do której wartości `args` tablicy są przekazywane."
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący wartość zwracaną wywołany element członkowski.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsAbstract%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsAbstract%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest abstrakcyjny i musi zostać zastąpiona.</xref:System.Type> </xref:System.Type.IsAbstract%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest abstrakcyjny, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  id: IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsAnsiClass%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy ciąg formatu atrybutu `AnsiClass` został wybrany do <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAnsiClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ciąg formatowania atrybutu <xref uid=&quot;langword_csharp_AnsiClass&quot; name=&quot;AnsiClass&quot; href=&quot;&quot;> </xref> został wybrany do <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAnsiClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsArray
  id: IsArray
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsArray%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsArray%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest tablicą.</xref:System.Type> </xref:System.Type.IsArray%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest tablicą; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego."
  syntax:
    content: public bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "<xref:System.Type>Do porównania z bieżącym <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> c </code> i obecnie <xref:System.Type>reprezentują ten sam typ, lub, jeśli bieżący <xref:System.Type>znajduje się w hierarchii dziedziczenia <code> c </code>, lub, jeśli bieżącego <xref:System.Type>jest interfejsem który <code> c </code> implementuje, lub, jeśli <code> c </code> jest parametr typu ogólnego i obecnie <xref:System.Type>reprezentuje jeden z warunków ograniczających <code> c </code>.</xref:System.Type> </xref:System.Type> </xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Jeśli żaden z tych warunków nie jest wielkość liter lub <code> c </code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsAssignableFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  id: IsAutoClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsAutoClass%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsAutoClass%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy ciąg formatu atrybutu `AutoClass` został wybrany do <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAutoClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ciąg formatowania atrybutu <xref uid=&quot;langword_csharp_AutoClass&quot; name=&quot;AutoClass&quot; href=&quot;&quot;> </xref> został wybrany do <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  id: IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsAutoLayout%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy atrybut układu klasy `AutoLayout` został wybrany do <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli atrybut class układu <xref uid=&quot;langword_csharp_AutoLayout&quot; name=&quot;AutoLayout&quot; href=&quot;&quot;> </xref> został wybrany do <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsByRef
  id: IsByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsByRef%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsByRef%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest przekazywana przez odwołanie.</xref:System.Type> </xref:System.Type.IsByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest przekazywana przez odwołanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsClass
  id: IsClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsClass%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsClass%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>klasę; oznacza to, że nie jest typem wartości lub interfejsu.</xref:System.Type> </xref:System.Type.IsClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest klasą; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  id: IsCOMObject
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsCOMObject%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsCOMObject%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest obiektem COM..</xref:System.Type> </xref:System.Type.IsCOMObject%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsCOMObject { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>obiektu modelu COM; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsCOMObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsContextful
  id: IsContextful
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsContextful%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsContextful%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>może znajdować się w kontekście.</xref:System.Type> </xref:System.Type.IsContextful%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsContextful { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>może być hostowana w kontekście, w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsContextful*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>Metoda wskazuje czy jeden lub więcej wystąpienie `attributeType` jest stosowany do tego elementu członkowskiego.</xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> Obiektów, dla których są stosowane atrybuty niestandardowe."
    - id: inherit
      type: System.Boolean
      description: "Określa, czy przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli jeden lub więcej wystąpienie <code> attributeType </code> zastosowanych do tego elementu członkowskiego, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsEnum
  id: IsEnum
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsEnum%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsEnum%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy bieżące <xref:System.Type>reprezentuje wyliczenie.</xref:System.Type> </xref:System.Type.IsEnum%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsEnum { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący <xref:System.Type>reprezentuje wyliczenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  id: IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy atrybut układu klasy `ExplicitLayout` został wybrany do <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsExplicitLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli atrybut class układu <xref uid=&quot;langword_csharp_ExplicitLayout&quot; name=&quot;ExplicitLayout&quot; href=&quot;&quot;> </xref> został wybrany do <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsExplicitLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsImport
  id: IsImport
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsImport%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsImport%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>ma <xref:System.Runtime.InteropServices.ComImportAttribute>, wskazując, że został zaimportowany z biblioteki typów COM.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type> </xref:System.Type.IsImport%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsImport { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>ma <xref:System.Runtime.InteropServices.ComImportAttribute>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  id: IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>Metoda określa, czy określony obiekt jest wystąpieniem bieżącego <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInstanceOfType (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Obiekt do porównania z bieżącym <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący <xref:System.Type>znajduje się w hierarchii dziedziczenia obiektu reprezentowanego przez <code> o </code>, lub, jeśli bieżący <xref:System.Type>jest interfejsem który <code> o </code> obsługuje.</xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Jeśli oba te warunki tak jest, lub, jeśli <code> o </code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, lub, jeśli bieżący <xref:System.Type>jest otwartym typem ogólnym (to znaczy <xref:System.Type.ContainsGenericParameters*>zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>).</xref:System.Type.ContainsGenericParameters*> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInterface
  id: IsInterface
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsInterface%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsInterface%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>interfejsu; nie jest klasą ani typem wartości.</xref:System.Type> </xref:System.Type.IsInterface%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInterface { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest interfejsem, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  id: IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy atrybut układu klasy `SequentialLayout` został wybrany do <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsLayoutSequential { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli atrybut class układu <xref uid=&quot;langword_csharp_SequentialLayout&quot; name=&quot;SequentialLayout&quot; href=&quot;&quot;> </xref> został wybrany do <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsLayoutSequential*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  id: IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą, czy typ jest przekazywane przez odwołanie.</xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsMarshalByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>organizowane przez odwołanie, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsMarshalByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  id: IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest zagnieżdżony i są widoczne tylko w obrębie własnego zestawu.</xref:System.Type> </xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>zagnieżdżone i widoczne tylko w obrębie własnego zestawu, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  id: IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest zagnieżdżone i są widoczne tylko dla klas, które należą do jego własnej rodziny i jego własny zestaw.</xref:System.Type> </xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamANDAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>zagnieżdżonych i są widoczne tylko dla klas, które należą do jego własnej rodziny i jego własny zestaw a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  id: IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsNestedFamily%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest zagnieżdżony i są widoczne tylko w obrębie własnej rodziny.</xref:System.Type> </xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>zagnieżdżonych i widoczne tylko w obrębie własnej rodziny, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  id: IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest zagnieżdżony i są widoczne tylko dla klas, które należą do jednej własnej rodziny lub ich własnych zestawach.</xref:System.Type> </xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamORAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>zagnieżdżonych i są widoczne tylko dla klas, które należą do jego własnej rodziny lub ich własnych zestawach a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  id: IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest zagnieżdżony i zadeklarowana jako private.</xref:System.Type> </xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest zagnieżdżony i zadeklarowany prywatnej; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  id: IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsNestedPublic%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą, czy klasa jest zagnieżdżony i zadeklarowany jako publiczny.</xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli klasa jest publiczny zagnieżdżony i zadeklarowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  id: IsNotPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsNotPublic%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsNotPublic%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy najwyższego poziomu <xref:System.Type>nie jest zadeklarowany jako publiczny.</xref:System.Type> </xref:System.Type.IsNotPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNotPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli lokacja najwyższego poziomu <xref:System.Type>nie jest zadeklarowany jako publiczny; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNotPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPointer
  id: IsPointer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsPointer%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsPointer%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>wskaźnik.</xref:System.Type> </xref:System.Type.IsPointer%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPointer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>wskaźnik; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPointer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  id: IsPrimitive
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest jednym z typów pierwotnych.</xref:System.Type> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPrimitive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest jednym z typów pierwotnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsPublic%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsPublic%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy najwyższego poziomu <xref:System.Type>jest zadeklarowany jako publiczny.</xref:System.Type> </xref:System.Type.IsPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli lokacja najwyższego poziomu <xref:System.Type>jest zadeklarowany jako publiczny; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSealed
  id: IsSealed
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsSealed%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsSealed%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest zadeklarowany jako sealed.</xref:System.Type> </xref:System.Type.IsSealed%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest zadeklarowany jako sealed; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSerializable
  id: IsSerializable
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsSerializable%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsSerializable%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>można serializować.</xref:System.Type> </xref:System.Type.IsSerializable%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest możliwy do serializacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsSpecialName%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsSpecialName%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>ma nazwę, która wymaga specjalnej obsługi.</xref:System.Type> </xref:System.Type.IsSpecialName%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>ma nazwę, która wymaga specjalnej obsługi; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsSubclassOf%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>Metoda określa, czy klasa reprezentowany przez bieżący <xref:System.Type>pochodzi od klasy reprezentowany przez określony <xref:System.Type>.</xref:System.Type> </xref:System.Type> </xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "<xref:System.Type>Do porównania z bieżącym <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>reprezentowany przez <code> c </code> parametru i obecnie <xref:System.Type>reprezentują klasy, a klasa reprezentowany przez bieżący <xref:System.Type>pochodzi od klasy reprezentowany przez <code> c </code>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type> </xref:System.Type> Ta metoda zwraca również wartość <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli <code> c </code> i bieżącego <xref:System.Type>reprezentują tej samej klasy.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  id: IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy ciąg formatu atrybutu `UnicodeClass` został wybrany do <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsUnicodeClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ciąg formatowania atrybutu <xref uid=&quot;langword_csharp_UnicodeClass&quot; name=&quot;UnicodeClass&quot; href=&quot;&quot;> </xref> został wybrany do <xref:System.Type>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsUnicodeClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsValueType
  id: IsValueType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.IsValueType%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.IsValueType%2A?displayProperty=fullName>Właściwość pobiera wartość wskazującą czy <xref:System.Type>jest typem wartości.</xref:System.Type> </xref:System.Type.IsValueType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsValueType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest typem wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.MemberType%2A?displayProperty=fullName>Pobiera właściwość <xref:System.Reflection.MemberTypes>wartość wskazującą, czy ten element członkowski jest typem ani typem zagnieżdżonym.</xref:System.Reflection.MemberTypes> </xref:System.Type.MemberType%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "A <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> wartość wskazującą, czy ten element członkowski jest typu lub typu zagnieżdżonego."
  overload: System.Runtime.InteropServices._Type.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Module
  id: Module
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.Module%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.Module%2A?displayProperty=fullName>Właściwość pobiera module (DLL), w którym bieżącego <xref:System.Type>jest zdefiniowany.</xref:System.Type> </xref:System.Type.Module%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: "Nazwa modułu, w którym bieżącego <xref:System.Type>jest zdefiniowany.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Module*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Name
  id: Name
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>Właściwość pobiera nazwę <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Nazwa <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Namespace
  id: Namespace
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.Namespace%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.Namespace%2A?displayProperty=fullName>Właściwość pobiera obszar nazw <xref:System.Type>.</xref:System.Type> </xref:System.Type.Namespace%2A?displayProperty=fullName>"
  syntax:
    content: public string Namespace { get; }
    return:
      type: System.String
      description: "Przestrzeń nazw <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.ReflectedType%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.ReflectedType%2A?displayProperty=fullName>Właściwość pobiera obiekt klasy, które zostało użyte do uzyskania tego elementu członkowskiego.</xref:System.Type.ReflectedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu, do której ta <xref:System.Reflection.MemberInfo>obiekt został uzyskany.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ToString
  id: ToString
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.ToString%2A?displayProperty=fullName&gt; metody."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.ToString%2A?displayProperty=fullName>Metoda zwraca nazwę bieżącej <xref:System.Type>.</xref:System.Type> </xref:System.Type.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String>Reprezentujący nazwę bieżącej <xref:System.Type>.</xref:System.Type> </xref:System.String>"
  overload: System.Runtime.InteropServices._Type.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeHandle
  id: TypeHandle
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.TypeHandle%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.TypeHandle%2A?displayProperty=fullName>Dojście do bieżącego <xref:System.Type>.</xref:System.Type> pobiera właściwość</xref:System.Type.TypeHandle%2A?displayProperty=fullName>"
  syntax:
    content: public RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: "Dojście do bieżącego <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.TypeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  id: TypeInitializer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.TypeInitializer%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.TypeInitializer%2A?displayProperty=fullName>Inicjator dla <xref:System.Type>.</xref:System.Type> pobiera właściwość</xref:System.Type.TypeInitializer%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }
    return:
      type: System.Reflection.ConstructorInfo
      description: "<xref:System.Reflection.ConstructorInfo>Zawierającą nazwę konstruktora klasy dla <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.TypeInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do &lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>Właściwość wskazuje typ udostępniane przez środowisko uruchomieniowe języka wspólnego reprezentujący tego typu.</xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>"
  syntax:
    content: public Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "Typ podstawowy system dla <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._Type.Assembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._Type.Attributes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Runtime.InteropServices._Type.BaseType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._Type.DeclaringType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.MemberFilter
  parent: System.Reflection
  isExternal: false
  name: MemberFilter
  nameWithType: MemberFilter
  fullName: System.Reflection.MemberFilter
- uid: System.Runtime.InteropServices._Type.FullName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._Type.GetConstructors
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
- uid: System.Runtime.InteropServices._Type.GetElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetEvents
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetFields
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetHashCode
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: true
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethods
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperties
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._Type.GUID
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.IsAbstract
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.IsEnum
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
- uid: System.Runtime.InteropServices._Type.IsInterface
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Runtime.InteropServices._Type.Name
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
- uid: System.Runtime.InteropServices._Type.TypeHandle
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: true
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
- uid: System.Runtime.InteropServices._Type.Assembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
- uid: System.Runtime.InteropServices._Type.Attributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
- uid: System.Runtime.InteropServices._Type.BaseType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
- uid: System.Runtime.InteropServices._Type.DeclaringType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals
  nameWithType: _Type.Equals
- uid: System.Runtime.InteropServices._Type.FindInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces
  nameWithType: _Type.FindInterfaces
- uid: System.Runtime.InteropServices._Type.FindMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers
  nameWithType: _Type.FindMembers
- uid: System.Runtime.InteropServices._Type.FullName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank
  nameWithType: _Type.GetArrayRank
- uid: System.Runtime.InteropServices._Type.GetConstructor*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor
  nameWithType: _Type.GetConstructor
- uid: System.Runtime.InteropServices._Type.GetConstructors*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors
  nameWithType: _Type.GetConstructors
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _Type.GetCustomAttributes
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers
  nameWithType: _Type.GetDefaultMembers
- uid: System.Runtime.InteropServices._Type.GetElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType
  nameWithType: _Type.GetElementType
- uid: System.Runtime.InteropServices._Type.GetEvent*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent
  nameWithType: _Type.GetEvent
- uid: System.Runtime.InteropServices._Type.GetEvents*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents
  nameWithType: _Type.GetEvents
- uid: System.Runtime.InteropServices._Type.GetField*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField
  nameWithType: _Type.GetField
- uid: System.Runtime.InteropServices._Type.GetFields*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields
  nameWithType: _Type.GetFields
- uid: System.Runtime.InteropServices._Type.GetHashCode*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode
  nameWithType: _Type.GetHashCode
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _Type.GetIDsOfNames
- uid: System.Runtime.InteropServices._Type.GetInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface
  nameWithType: _Type.GetInterface
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap
  nameWithType: _Type.GetInterfaceMap
- uid: System.Runtime.InteropServices._Type.GetInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces
  nameWithType: _Type.GetInterfaces
- uid: System.Runtime.InteropServices._Type.GetMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember
  nameWithType: _Type.GetMember
- uid: System.Runtime.InteropServices._Type.GetMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers
  nameWithType: _Type.GetMembers
- uid: System.Runtime.InteropServices._Type.GetMethod*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod
  nameWithType: _Type.GetMethod
- uid: System.Runtime.InteropServices._Type.GetMethods*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods
  nameWithType: _Type.GetMethods
- uid: System.Runtime.InteropServices._Type.GetNestedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType
  nameWithType: _Type.GetNestedType
- uid: System.Runtime.InteropServices._Type.GetNestedTypes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes
  nameWithType: _Type.GetNestedTypes
- uid: System.Runtime.InteropServices._Type.GetProperties*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties
  nameWithType: _Type.GetProperties
- uid: System.Runtime.InteropServices._Type.GetProperty*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty
  nameWithType: _Type.GetProperty
- uid: System.Runtime.InteropServices._Type.GetType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType
  nameWithType: _Type.GetType
- uid: System.Runtime.InteropServices._Type.GetTypeInfo*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo
  nameWithType: _Type.GetTypeInfo
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _Type.GetTypeInfoCount
- uid: System.Runtime.InteropServices._Type.GUID*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke
  nameWithType: _Type.Invoke
- uid: System.Runtime.InteropServices._Type.InvokeMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember
  nameWithType: _Type.InvokeMember
- uid: System.Runtime.InteropServices._Type.IsAbstract*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom
  nameWithType: _Type.IsAssignableFrom
- uid: System.Runtime.InteropServices._Type.IsAutoClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined
  nameWithType: _Type.IsDefined
- uid: System.Runtime.InteropServices._Type.IsEnum*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType
  nameWithType: _Type.IsInstanceOfType
- uid: System.Runtime.InteropServices._Type.IsInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf
  nameWithType: _Type.IsSubclassOf
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
- uid: System.Runtime.InteropServices._Type.Name*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString
  nameWithType: _Type.ToString
- uid: System.Runtime.InteropServices._Type.TypeHandle*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
