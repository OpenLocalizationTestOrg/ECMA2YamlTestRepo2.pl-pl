### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAttribute
  id: KeyContainerPermissionAttribute
  children:
  - System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission
  - System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  - System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  langs:
  - csharp
  name: KeyContainerPermissionAttribute
  nameWithType: KeyContainerPermissionAttribute
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute
  type: Class
  summary: "Zezwala na akcje zabezpieczeń dla <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> ma zostać zastosowany do kodu przy użyciu zabezpieczeń deklaratywnych. Ta klasa nie może być dziedziczona."
  remarks: "Zależy od zakresu deklaracji, która jest dozwolona <xref:System.Security.Permissions.SecurityAction>wartość, która jest używana.</xref:System.Security.Permissions.SecurityAction>       Informacji o zabezpieczeniach deklaruje atrybutu zabezpieczeń są przechowywane w metadanych elementu docelowego atrybutu i jest dostępny przez system w czasie wykonywania. KeyContainerPermissionAttribute jest używana tylko w przypadku zabezpieczenia deklaratywne. Zabezpieczenia imperatywne użyj <xref:System.Security.Permissions.KeyContainerPermission>klasy.</xref:System.Security.Permissions.KeyContainerPermission>"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeyContainerPermissionAttribute(SecurityAction)
  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAttribute&quot;> </xref> klasy przy użyciu zabezpieczeń określonej akcji."
  syntax:
    content: public KeyContainerPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Jeden z <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> wartości."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: KeyContainerPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca nowy <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref>."
  remarks: "Ta metoda powinna można wywołać tylko przez system zabezpieczeń nigdy przez kod aplikacji.       W czasie kompilacji atrybuty przekonwertować deklaracje zabezpieczeń do serializacji formularza w metadanych. Metadane jest tworzona na podstawie obiektu uprawnień, które ta metoda zwraca wartość."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> odnosi się do atrybutu."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermissionAttribute.Flags
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia uprawnienia kontener klucza."
  remarks: "> [!CAUTION]> Wiele te flagi są wydajne i zezwolenie na dostęp do kontenerów kluczy, które powinny być przyznane tylko wysokiej zaufanego kodu.       Najbardziej zaawansowanych flagi są <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>i <xref:System.Security.Permissions.KeyContainerPermissionFlags>.</xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> Uzyskać określone zagrożenia powodowane przez użycie tych flag zobacz opis poszczególnych flagi."
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAttribute.KeyContainerName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia nazwę kontenera kluczy."
  remarks: "Użyj wartości &quot;*&quot; do zastosowania wpisu dostępu do wszystkich kontenerów kluczy w ramach określonej nazwy dostawcy i typ dostawcy."
  syntax:
    content: public string KeyContainerName { get; set; }
    return:
      type: System.String
      description: "Nazwa kontenera kluczy."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  id: KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeySpec
  nameWithType: KeyContainerPermissionAttribute.KeySpec
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia specyfikacja klucza."
  remarks: "Jeśli wartość nie zostanie określona, zostanie użyta wartość AT_KEYEXCHANGE (1). Prawidłowe wartości dla tej właściwości to wartość AT_KEYEXCHANGE (1) i AT_SIGNATURE (2)."
  syntax:
    content: public int KeySpec { get; set; }
    return:
      type: System.Int32
      description: "Jedna z wartości AT_ zdefiniowane w pliku nagłówka Wincrypt.h."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  id: KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeyStore
  nameWithType: KeyContainerPermissionAttribute.KeyStore
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia nazwę klucza magazynu."
  remarks: "Prawidłowe wartości to &quot;Użytkownika&quot;, &quot;Machine&quot; i &quot;*&quot;. Jeśli `null` jest określony, wartość jest równa &quot;\\*&quot;."
  syntax:
    content: public string KeyStore { get; set; }
    return:
      type: System.String
      description: "Nazwa magazynu kluczy. Wartość domyślna to &quot;*&quot;."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  id: ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: ProviderName
  nameWithType: KeyContainerPermissionAttribute.ProviderName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia nazwę dostawcy."
  remarks: "Przykład nazwy dostawcy jest &quot;Microsoft Enhanced Cryptographic Provider&quot;. Jeśli `null` jest określony, używana jest nazwa rozszerzony dostawca usług kryptograficznych."
  syntax:
    content: public string ProviderName { get; set; }
    return:
      type: System.String
      description: "Nazwa dostawcy."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  id: ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: ProviderType
  nameWithType: KeyContainerPermissionAttribute.ProviderType
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia typ dostawcy."
  remarks: "If no value is specified, PROV_RSA_FULL (1) is used.  \n  \n The following values are defined in the Wincrypt.h header file:  \n  \n-   \\#define PROV_RSA_FULL 1  \n  \n-   \\#define PROV_RSA_SIG 2  \n  \n-   \\#define PROV_DSS 3  \n  \n-   \\#define PROV_FORTEZZA 4  \n  \n-   \\#define PROV_MS_EXCHANGE 5  \n  \n-   \\#define PROV_SSL 6  \n  \n-   \\#define PROV_RSA_SCHANNEL 12  \n  \n-   \\#define PROV_DSS_DH 13  \n  \n-   \\#define PROV_EC_ECDSA_SIG 14  \n  \n-   \\#define PROV_EC_ECNRA_SIG 15  \n  \n-   \\#define PROV_EC_ECDSA_FULL 16  \n  \n-   \\#define PROV_EC_ECNRA_FULL 17  \n  \n-   \\#define PROV_DH_SCHANNEL 18  \n  \n-   \\#define PROV_SPYRUS_LYNKS 20  \n  \n-   \\#define PROV_RNG 21  \n  \n-   \\#define PROV_INTEL_SEC 22  \n  \n-   \\#define PROV_REPLACE_OWF 23  \n  \n-   \\#define PROV_RSA_AES 24"
  syntax:
    content: public int ProviderType { get; set; }
    return:
      type: System.Int32
      description: "Jedna z wartości PROV_ zdefiniowane w pliku nagłówka Wincrypt.h."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerPermissionAttribute(SecurityAction)
  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: KeyContainerPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAttribute.Flags
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAttribute.KeyContainerName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAttribute.KeySpec
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAttribute.KeyStore
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAttribute.ProviderName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAttribute.ProviderType
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerPermissionAttribute
  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: KeyContainerPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAttribute.Flags
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAttribute.KeyContainerName
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAttribute.KeySpec
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAttribute.KeyStore
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAttribute.ProviderName
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAttribute.ProviderType
