### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.FocusManager
  id: FocusManager
  children:
  - System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.FocusedElementProperty
  - System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GotFocusEvent
  - System.Windows.Input.FocusManager.IsFocusScopeProperty
  - System.Windows.Input.FocusManager.LostFocusEvent
  - System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  - System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  langs:
  - csharp
  name: FocusManager
  nameWithType: FocusManager
  fullName: System.Windows.Input.FocusManager
  type: Class
  summary: "Udostępnia zestaw metod statycznych, dołączone właściwości i zdarzenia dla określanie i Ustawianie fokusu zakresy i ustawienia zaznaczonego elementu w zakresie."
  remarks: "W [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] istnieją dwa pojęcia dotyczące fokus: Klawiatura fokus i logiczny fokus.       Fokus klawiatury odnosi się do elementu, który jest obecnie odbieranie danych wprowadzonych z klawiatury.  Może istnieć tylko jeden element z fokusem klawiatury.  Ten element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A>ustawioną `true`.</xref:System.Windows.IInputElement.IsKeyboardFocused%2A>  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>Zwraca element z fokusem klawiatury.</xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>       Dotyczy logiczny fokus <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>w zakresie szczególny nacisk.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       Zakres fokus jest elementem kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>w jego zakresie.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Domyślnie <xref:System.Windows.Window>klasy jest zakresem fokus są <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar>klasy.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Element, który jest zakresem fokus ma <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ustawioną `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Może istnieć wiele elementów z logiczny fokus, ale może istnieć tylko jeden element z fokusem logicznych w zakresie jednej fokus.  Element z logiczny fokus nie ma fokus klawiatury, ale element z fokusem klawiatury ma logiczny fokus.  Istnieje możliwość definiowania zakresu fokusu w zakresie fokus.  W takim przypadku zarówno w nadrzędnym zakresie fokus, jak i w zakresie podrzędnym fokus może mieć <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       Poniższy scenariusz przedstawiono, jak zmienić fokus klawiatury i logiczny fokus w [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] aplikacji <xref:System.Windows.Window> <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.Menu>który ma <xref:System.Windows.Controls.MenuItem>.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window>  Zmiany fokus klawiatury z <xref:System.Windows.Controls.TextBox>do <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TextBox>fokus klawiatury straty ale zachowuje logiczny fokus dla <xref:System.Windows.Window>skupić się zakresu.</xref:System.Windows.Window> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.TextBox>  <xref:System.Windows.Controls.MenuItem>Uzyskuje fokus klawiatury i uzyskuje fokus logiczny dla <xref:System.Windows.Controls.Menu>skupić się zakresu.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>  Gdy fokus klawiatury zwraca do katalogu głównego <xref:System.Windows.Window>element w <xref:System.Windows.Window>zakresie fokus logiczny fokus uzyska fokus klawiatury, czyli w tym przypadku <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Window>  <xref:System.Windows.Controls.TextBox>Teraz ma fokus klawiatury i logiczny fokus.</xref:System.Windows.Controls.TextBox>  <xref:System.Windows.Controls.MenuItem>Utraci fokus klawiatury, ale zachowa logiczny fokus dla <xref:System.Windows.Controls.Menu>skupić się zakresu.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>       Wartość domyślna <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>na <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, i <xref:System.Windows.Controls.ContextMenu>jest `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Aby uzyskać więcej informacji na fokus, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md) i [omówienie fokus](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static class FocusManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Dodaje obsługę <xref:System.Windows.Input.FocusManager.GotFocus>dołączony zdarzeń.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą do tego zdarzenia."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Program obsługi zdarzeń do dodania."
  overload: System.Windows.Input.FocusManager.AddGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Dodaje obsługę <xref:System.Windows.Input.FocusManager.LostFocus>dołączony zdarzeń.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą do tego zdarzenia."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Program obsługi zdarzeń do dodania."
  overload: System.Windows.Input.FocusManager.AddLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  id: FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identyfikuje <xref:System.Windows.Input.FocusManager.FocusedElement*>dołączona właściwość.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusedElementProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  id: GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Pobiera element z fokusem logicznych w zakresie określonym fokus."
  remarks: "<xref:System.Windows.Input.FocusManager.FocusedElement%2A>Jest element, który ma logiczny fokus dla zakresu szczególny nacisk.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Ten obiekt może lub nie ma fokus klawiatury.  Fokus klawiatury odwołuje się do elementu, który odbiera klawiatury.  Aby uzyskać więcej informacji na fokus, klawiaturę i logiczny fokus, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       Jeśli `element` nie jest zakres fokus, ta metoda zwróci `null`.       Użyj <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, aby określić element logiczny fokus w zakresie określonym fokus.</xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>"
  example:
  - "The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the GetFocusedElement.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Element z fokusem logicznych w zakresie określonym fokus."
    return:
      type: System.Windows.IInputElement
      description: "Element w zakresie określonym fokus logiczny fokus."
  overload: System.Windows.Input.FocusManager.GetFocusedElement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  id: GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Określa najbliższego elementu nadrzędnego określonego elementu, który ma <xref:System.Windows.Input.FocusManager.IsFocusScope*>ustawioną <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "Wartość domyślna <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>na <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>jest `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Zakres fokus jest elementem kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>w jego zakresie.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Domyślnie <xref:System.Windows.Window>klasy jest zakresem fokus są <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar>klasy.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Element, który jest zakresem fokus ma <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ustawioną `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Aby uzyskać więcej informacji na fokus, klawiaturę i logiczny fokus, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Elementu do pobrania najbliższej zakres fokus."
    return:
      type: System.Windows.DependencyObject
      description: "Zakres fokus dla określonego elementu."
  overload: System.Windows.Input.FocusManager.GetFocusScope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  id: GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Określa, czy określony <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> jest zakresem fokus."
  remarks: "Zakres fokus jest elementem kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>w jego zakresie.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Domyślnie <xref:System.Windows.Window>klasy jest zakresem fokus są <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar>klasy.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Element, który jest zakresem fokus ma <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ustawioną `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Aby uzyskać więcej informacji na fokus, klawiaturę i logiczny fokus, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static bool GetIsFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Element, z którego ma zostać dołączona właściwość do odczytu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.Input.FocusManager.IsFocusScope*>ustawiono <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> dla określonego elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  overload: System.Windows.Input.FocusManager.GetIsFocusScope*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identyfikuje <xref:System.Windows.Input.FocusManager.GotFocus>dołączony zdarzeń.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  id: IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identyfikuje <xref:System.Windows.Input.FocusManager.IsFocusScope*>dołączona właściwość.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "Wartość domyślna <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>na <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>jest `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Zakres fokus jest elementem kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>w jego zakresie.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Domyślnie <xref:System.Windows.Window>klasy jest zakresem fokus są <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar>klasy.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Element, który jest zakresem fokus ma <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ustawioną `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Aby uzyskać więcej informacji na fokus, klawiaturę i logiczny fokus, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identyfikuje <xref:System.Windows.Input.FocusManager.LostFocus>dołączony zdarzeń.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Usuwa obsługi dla <xref:System.Windows.Input.FocusManager.GotFocus>dołączony zdarzeń.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą do tego zdarzenia."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Program obsługi zdarzeń do usunięcia."
  overload: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Usuwa obsługi dla <xref:System.Windows.Input.FocusManager.LostFocus>dołączony zdarzeń.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą do tego zdarzenia."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Program obsługi zdarzeń do usunięcia."
  overload: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  id: SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ustawia logiczną skupić się na określony element."
  remarks: "<xref:System.Windows.Input.FocusManager.FocusedElement%2A>Jest element, który ma logiczny fokus dla zakresu szczególny nacisk.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Ten obiekt może lub nie ma fokus klawiatury.  Fokus klawiatury odwołuje się do elementu, który odbiera klawiatury.  Aby uzyskać więcej informacji na fokus, klawiaturę i logiczny fokus, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       Istnieje możliwość określania zakresu fokus, który jest elementem nadrzędnym elementu znajduje się w zakresie fokus.  Na przykład jeśli <xref:System.Windows.Controls.StackPanel>jest zakres fokus i jego elementu nadrzędnego <xref:System.Windows.Window>jest zakresem fokus <xref:System.Windows.Controls.TextBox>podrzędnym <xref:System.Windows.Controls.StackPanel>można określić <xref:System.Windows.Window>jako zakres fokus podczas wywoływania metody SetFocusedElement.</xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel>  <xref:System.Windows.Controls.TextBox>Jest następnie <xref:System.Windows.Input.FocusManager.FocusedElement%2A>zarówno <xref:System.Windows.Window>skupić się zakresem i <xref:System.Windows.Controls.StackPanel>skupić się zakresu.</xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.FocusedElement%2A> </xref:System.Windows.Controls.TextBox>       SetFocusedElement zapewni, że określony element logiczny fokus w zakresie określonym fokus i podejmie próbę Ustaw fokus klawiatury elementu."
  example:
  - "The following example sets the element with logical focus by using the SetFocusedElement and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Zakres fokus, w którym z określonego elementu <xref:System.Windows.Input.FocusManager.FocusedElement*>.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
    - id: value
      type: System.Windows.IInputElement
      description: "Element umożliwiają logiczny fokus."
  overload: System.Windows.Input.FocusManager.SetFocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  id: SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ustawia określony <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> jako zakres fokus."
  remarks: "Zakres fokus jest elementem kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>w jego zakresie.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Domyślnie <xref:System.Windows.Window>klasy jest zakresem fokus są <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar>klasy.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Element, który jest zakresem fokus ma <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ustawioną `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Aby uzyskać więcej informacji na fokus, klawiaturę i logiczny fokus, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The follow example makes an element a focus scope by using SetIsFocusScope.  \n  \n [!code-cs[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focussetisfocusscope)]\n [!code-vb[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focussetisfocusscope)]"
  syntax:
    content: public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Element, aby utworzyć zakres fokus."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli `element` jest zakresem fokus; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.FocusManager.SetIsFocusScope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler
  nameWithType: FocusManager.AddGotFocusHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler
  nameWithType: FocusManager.AddLostFocusHandler
- uid: System.Windows.Input.FocusManager.GetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement
  nameWithType: FocusManager.GetFocusedElement
- uid: System.Windows.Input.FocusManager.GetFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope
  nameWithType: FocusManager.GetFocusScope
- uid: System.Windows.Input.FocusManager.GetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope
  nameWithType: FocusManager.GetIsFocusScope
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler
  nameWithType: FocusManager.RemoveGotFocusHandler
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler
  nameWithType: FocusManager.RemoveLostFocusHandler
- uid: System.Windows.Input.FocusManager.SetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement
  nameWithType: FocusManager.SetFocusedElement
- uid: System.Windows.Input.FocusManager.SetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope
  nameWithType: FocusManager.SetIsFocusScope
