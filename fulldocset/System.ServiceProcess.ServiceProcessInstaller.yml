### YamlMime:ManagedReference
items:
- uid: System.ServiceProcess.ServiceProcessInstaller
  id: ServiceProcessInstaller
  children:
  - System.ServiceProcess.ServiceProcessInstaller.#ctor
  - System.ServiceProcess.ServiceProcessInstaller.Account
  - System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  - System.ServiceProcess.ServiceProcessInstaller.HelpText
  - System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Password
  - System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Username
  langs:
  - csharp
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller
  fullName: System.ServiceProcess.ServiceProcessInstaller
  type: Class
  summary: "Instaluje plik wykonywalny zawierający klasy, które rozszerzają <xref href=&quot;System.ServiceProcess.ServiceBase&quot;> </xref>. Ta klasa jest wywoływana przez instalacji narzędzi, takich jak InstallUtil.exe, podczas instalowania aplikacji usługi."
  remarks: "Element ServiceProcessInstaller działa wspólne dla wszystkich usług w pliku wykonywalnego. Jest on używany przez narzędzie instalacji można zapisać wartości rejestru, skojarzone z usług, które chcesz zainstalować.       Aby zainstalować usługę, należy utworzyć klasę Instalatora projektu dziedziczący z <xref:System.Configuration.Install.Installer>i ustaw <xref:System.ComponentModel.RunInstallerAttribute>na klasę, aby `true`.</xref:System.ComponentModel.RunInstallerAttribute> </xref:System.Configuration.Install.Installer> W ramach projektu, wystąpienia, jedno wystąpienie ServiceProcessInstaller na aplikacji usługi, a drugi <xref:System.ServiceProcess.ServiceInstaller>wystąpienia dla każdej usługi w aplikacji.</xref:System.ServiceProcess.ServiceInstaller> Na koniec należy dodać wystąpienia ServiceProcessInstaller i <xref:System.ServiceProcess.ServiceInstaller>wystąpień do Twojej klasy projektu Instalatora.</xref:System.ServiceProcess.ServiceInstaller>       Po uruchomieniu InstallUtil.exe narzędzie szuka klasy w zestawie usługi z <xref:System.ComponentModel.RunInstallerAttribute>ustawioną `true`.</xref:System.ComponentModel.RunInstallerAttribute> Dodawanie klas do zestawu usługi przez dodanie ich do <xref:System.Configuration.Install.Installer.Installers%2A>kolekcję skojarzoną z Instalatorem projektu.</xref:System.Configuration.Install.Installer.Installers%2A> Jeśli <xref:System.ComponentModel.RunInstallerAttribute>jest `false`, narzędzie instalacji ignoruje Instalator projektu.</xref:System.ComponentModel.RunInstallerAttribute>       W przypadku wystąpienia ServiceProcessInstaller — właściwości, które można modyfikować obejmują, określając, że aplikacja usługi uruchomione z konta innego niż zalogowanego użytkownika. Możesz określić danego <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>pary, w którym należy uruchomić usługę, lub można użyć <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>do określenia, czy usługa jest uruchomiona w obszarze konta systemu komputera, lokalna lub konto usługi sieciowej lub konto użytkownika.</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>      > [!NOTE] > Konto systemowe tego komputera nie jest taka sama, jak konto administratora.       Zwykle nie należy wywoływać metody na <xref:System.ServiceProcess.ServiceInstaller>w kodzie; zwykle nazywane są tylko przez narzędzie instalacji.</xref:System.ServiceProcess.ServiceInstaller> Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>i <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>metody w ramach procesu instalacji.</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> Go utworzyć kopię zapasową limit niepowodzeń, jeśli to konieczne, przez wywołanie metody <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(lub <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) na wszystkich wcześniej zainstalowanych składników.</xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>       Procedury instalacji aplikacji przechowuje informacje automatycznie składniki już zainstalowane, za pomocą Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> Informacje o stanie jest stale aktualizowany jako wystąpienie ServiceProcessInstaller i każdego <xref:System.ServiceProcess.ServiceInstaller>przez narzędzie jest zainstalowane wystąpienie.</xref:System.ServiceProcess.ServiceInstaller> Nie jest konieczne dla swój kod, aby jawnie modyfikować tych informacji o stanie.       Tworzenie wystąpień elementu ServiceProcessInstaller powoduje konstruktora klasy podstawowej <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, aby wywołać.</xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>"
  example:
  - "The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>. It is assumed there is a service executable that contains two services, \"Hello-World Service 1\" and \"Hello-World Service 2\". Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a ServiceProcessInstaller is created for the executable. For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.  \n  \n Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection. When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=fullName> will be installed in turn. During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.  \n  \n Normally, you would not instantiate your project installer class explicitly. You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.  \n  \n [!code-cpp[Classic ServiceInstaller Example#1](~/add/codesnippet/cpp/t-system.serviceprocess._0_1.cpp)]\n [!code-cs[Classic ServiceInstaller Example#1](~/add/codesnippet/csharp/t-system.serviceprocess._0_1.cs)]\n [!code-vb[Classic ServiceInstaller Example#1](~/add/codesnippet/visualbasic/t-system.serviceprocess._0_1.vb)]"
  syntax:
    content: 'public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  - System.Configuration.Install.ComponentInstaller
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  id: '#ctor'
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
  type: Constructor
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;> </xref> klasy."
  syntax:
    content: public ServiceProcessInstaller ();
    parameters: []
  overload: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  id: Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Pobiera lub ustawia typ konta w ramach którego ma zostać uruchomiony w tej aplikacji usługi."
  remarks: "Gdy właściwość konta jest `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>Właściwości są używane do definiowania konto, na którym działa aplikacja usługi.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>pary umożliwia usłudze działać w kontekście konta niż konto system.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Można na przykład dzięki temu usługi do automatycznego uruchamiania na ponowne uruchomienie komputera, gdy użytkownik nie jest zalogowany. Pozostawienie albo <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>pusty i ustawić konto `User`, zostanie wyświetlony monit dla prawidłowej nazwy użytkownika i hasła podczas instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       Można również określić, że usługa działała na koncie systemu lokalnego lub jako lokalny lub Usługa sieciowa. Zobacz <xref:System.ServiceProcess.ServiceAccount>Wyliczenie szczegółowe informacje na temat typów kont.</xref:System.ServiceProcess.ServiceAccount>"
  syntax:
    content: public System.ServiceProcess.ServiceAccount Account { get; set; }
    return:
      type: System.ServiceProcess.ServiceAccount
      description: "A <xref href=&quot;System.ServiceProcess.ServiceAccount&quot;> </xref> definiuje typ konta, na którym ta usługa działa system. Wartość domyślna to <xref uid=&quot;langword_csharp_User&quot; name=&quot;User&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceProcess.ServiceProcessInstaller.Account*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  id: CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Implementuje klasę podstawową &lt;xref:System.Configuration.Install.ComponentInstaller.CopyFromComponent%2A?displayProperty=fullName&gt; metody bez <xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;> </xref> zachowanie specyficzne dla klasy."
  remarks: "Ta metoda nie powinna być wywoływana w kodzie. Metody klasy podstawowej dla <xref:System.Configuration.Install.ComponentInstaller>jest `abstract`, dlatego jest tutaj zaimplementowana w klasie pochodnej.</xref:System.Configuration.Install.ComponentInstaller> Jednak ma nie <xref:System.ServiceProcess.ServiceProcessInstaller>klasy specyficzne dla przetwarzania w implementacji metody.</xref:System.ServiceProcess.ServiceProcessInstaller>"
  syntax:
    content: public override void CopyFromComponent (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> Reprezentujący procesu usługi."
  overload: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  id: HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Pobiera tekst pomocy wyświetlany dla opcji instalacji usługi."
  remarks: "Ten tekst pomocy można, gdy usługa jest uruchamiana ręcznie. Wskazuje on użytkownikowi wprowadzanie informacji o nazwę i hasło użytkownika."
  syntax:
    content: public override string HelpText { get; }
    return:
      type: System.String
      description: "Tekst, który zawiera opis kroków do ustawiania nazwy użytkownika i hasła, aby uruchomić usługę przy użyciu określonego konta pomocy."
  overload: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Zapisuje informacje o aplikacji usługi do rejestru. Ta metoda jest przeznaczona do użycia przez narzędzia instalacji, które wymagają odpowiednich metod automatycznie."
  remarks: "Zwykle nie należy wywoływać metody na <xref:System.ServiceProcess.ServiceProcessInstaller>w kodzie; zwykle nazywane są tylko przez narzędzie instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller> Narzędzie instalacji automatycznie wywołuje metodę instalacji podczas procesu instalacji. Go utworzyć kopię zapasową limit niepowodzeń, jeśli to konieczne, przez wywołanie metody <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>na wszystkie wcześniej zainstalowanych składników.</xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> Ta metoda przekazuje instalacji do klasy podstawowej <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>metody.</xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>       Zwykle nie będzie wywoływać metody na <xref:System.ServiceProcess.ServiceInstaller>w kodzie; zwykle nazywane są tylko przez narzędzie instalacji.</xref:System.ServiceProcess.ServiceInstaller> Narzędzie instalacji automatycznie wywołuje instalację i <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>metody w ramach procesu instalacji.</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> Go utworzyć kopię zapasową limit niepowodzeń, jeśli to konieczne, przez wywołanie metody <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(lub <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) na wszystkich wcześniej zainstalowanych składników procedury instalacji aplikacji przechowuje informacje automatycznie o składniki już zainstalowane, za pomocą Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> Te informacje stan przekazany do instalacji jako `stateSaver` parametru jest stale aktualizowany jako <xref:System.ServiceProcess.ServiceProcessInstaller>wystąpienia i każdego <xref:System.ServiceProcess.ServiceInstaller>przez narzędzie jest zainstalowane wystąpienie.</xref:System.ServiceProcess.ServiceInstaller> </xref:System.ServiceProcess.ServiceProcessInstaller> Nie jest konieczne dla swój kod, aby jawnie modyfikować tych informacji o stanie.       Zainstaluj przekazuje do wywoływania metody wszelkie wyjątki zgłaszane przez metody klasy podstawowej lub <xref:System.Configuration.Install.Installer.BeforeInstall>/ <xref:System.Configuration.Install.Installer.AfterInstall>procedury obsługi zdarzeń.</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall>"
  syntax:
    content: public override void Install (System.Collections.IDictionary stateSaver);
    parameters:
    - id: stateSaver
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Zawierający informacje o kontekście związane z instalacją.</xref:System.Collections.IDictionary>"
  overload: System.ServiceProcess.ServiceProcessInstaller.Install*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stateSaver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  id: Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Pobiera lub ustawia hasło skojarzone z kontem użytkownika w ramach którego działa aplikacja usługi."
  remarks: "Hasło i <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>pary umożliwia usłudze działać w kontekście konta niż konto system.</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Można na przykład dzięki temu usługi do automatycznego uruchamiania na ponowne uruchomienie komputera, gdy użytkownik nie jest zalogowany.       Hasło i <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>są obsługiwane w bezpieczny sposób, że nigdy nie są serializowane lub zapisany stan instalacji (Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) lub innej lokalizacji z dostępem public.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       Ustawienie <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>i hasło konta do skojarzenia automatycznie z usługą w czasie instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Pozostawienie albo <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>lub hasło puste i ustaw <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>do `User`, zostanie wyświetlony monit dla prawidłowej nazwy użytkownika i hasła podczas instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       Inną opcją w przypadku usługi w ramach oddzielnego konta jest konto systemu komputera. Tego konta, które różni się od konta administratora, wymaga bez hasła. Uprawnień konta systemu mogą wykraczać poza obecnie zalogowanego użytkownika. Działania pod konta systemowego, a nie konta użytkownika pozwala uniknąć problemów spowodowanych użytkownika, których nie ma uprawnienia wymagane usługi, jeśli <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>jest wartością innego niż `User`, konto określono (lokalnej lub Usługa sieciowa lub konta system lokalny) jest używany, nawet wtedy, gdy <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>i właściwości hasła są wypełniane.</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "Hasło skojarzone z kontem, którego powinien uruchamiana usługa. Wartość domyślna to ciąg pusty (&quot;&quot;). Właściwość nie jest publiczna i nigdy nie jest serializowany."
  overload: System.ServiceProcess.ServiceProcessInstaller.Password*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  id: Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Przywraca zapisywane przez procedurę instalacji w rejestrze informacji o aplikacji usługi. Ta metoda jest przeznaczona do użycia przez narzędzia instalacji, automatycznie przetwarzające odpowiednie metody."
  remarks: "Zwykle nie należy wywoływać metody na <xref:System.ServiceProcess.ServiceProcessInstaller>w kodzie; zwykle nazywane są tylko przez narzędzie instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller> Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>metody w ramach procesu instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> Tworzy kopię go się błędy, jeśli to konieczne, przez wywołanie wycofywania obiektu wygenerowany wyjątek.       Procedury instalacji aplikacji przechowuje informacje automatycznie składniki już zainstalowane, za pomocą Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> Te informacje stan przekazany do wycofania jako `savedState` parametru jest stale aktualizowany jako <xref:System.ServiceProcess.ServiceProcessInstaller>wystąpienia i każdego <xref:System.ServiceProcess.ServiceInstaller>przez narzędzie jest zainstalowane wystąpienie.</xref:System.ServiceProcess.ServiceInstaller> </xref:System.ServiceProcess.ServiceProcessInstaller> Nie jest konieczne dla swój kod, aby jawnie modyfikować tych informacji o stanie.       Wycofanie przekazuje do wywoływania metody wszelkie wyjątki zgłaszane przez metody klasy podstawowej lub <xref:System.Configuration.Install.Installer.BeforeInstall>/ <xref:System.Configuration.Install.Installer.AfterInstall>procedury obsługi zdarzeń.</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall>"
  syntax:
    content: public override void Rollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Zawierający informacje o kontekście związane z instalacją.</xref:System.Collections.IDictionary>"
  overload: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>savedState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code> savedState </code> jest uszkodzony lub nie istnieje."
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  id: Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Pobiera lub ustawia konto użytkownika używane do uruchamiania aplikacji usługi."
  remarks: "Nazwa użytkownika i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>pary umożliwia usłudze działać w kontekście konta niż konto system.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> Można na przykład dzięki temu usługi do automatycznego uruchamiania na ponowne uruchomienie komputera, gdy użytkownik nie jest zalogowany.       <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>i nazwa użytkownika są obsługiwane w bezpieczny sposób, że nigdy nie są serializowane lub zapisany stan instalacji (Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) lub innej lokalizacji z dostępem public.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName></xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>       Ustawienie nazwy użytkownika i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>umożliwia konta do skojarzenia automatycznie z usługą w czasie instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> Jeśli opuścisz albo nazwa użytkownika lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>pusty i ustaw <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>do `User`, zostanie wyświetlony monit dla prawidłowej nazwy użytkownika i hasła podczas instalacji.</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>       Inną opcją w przypadku usługi w ramach oddzielnego konta jest konto systemu komputera. Tego konta, które różni się od konta administratora, wymaga bez hasła. Uprawnień konta systemu mogą wykraczać poza obecnie zalogowanego użytkownika. Działania pod konta systemowego, a nie konta użytkownika pozwala uniknąć problemów spowodowanych użytkownika, których nie ma uprawnienia wymagane usługi, jeśli <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>jest wartością innego niż `User`, określone konto (lokalnej lub Usługa sieciowa lub konta system lokalny) jest używany, nawet wtedy, gdy nazwa użytkownika i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>Właściwości są wypełniane.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>"
  syntax:
    content: public string Username { get; set; }
    return:
      type: System.String
      description: "Konto, pod którym usługa powinno być ono uruchomione. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.ServiceProcess.ServiceProcessInstaller.Username*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: System.Configuration.Install.ComponentInstaller
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceAccount
  parent: System.ServiceProcess
  isExternal: false
  name: ServiceAccount
  nameWithType: ServiceAccount
  fullName: System.ServiceProcess.ServiceAccount
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller
- uid: System.ServiceProcess.ServiceProcessInstaller.Account*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent
  nameWithType: ServiceProcessInstaller.CopyFromComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
- uid: System.ServiceProcess.ServiceProcessInstaller.Install*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install
  nameWithType: ServiceProcessInstaller.Install
- uid: System.ServiceProcess.ServiceProcessInstaller.Password*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback
  nameWithType: ServiceProcessInstaller.Rollback
- uid: System.ServiceProcess.ServiceProcessInstaller.Username*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
