### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  id: NameObjectCollectionBase
  children:
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  type: Class
  summary: "Udostępnia <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> skojarzona klasa podstawowa dla Kolekcja <xref:System.String>kluczy i <xref:System.Object>wartości, które można uzyskać dostępu do klucza lub indeksu.</xref:System.Object> </xref:System.String>"
  remarks: "Wewnętrzna struktura dla tej klasy jest tablicy skrótów.       Każdy element jest para klucza i wartości.       Pojemność NameObjectCollectionBase jest liczba elementów, które może przechowywać NameObjectCollectionBase. Gdy elementy są dodawane do NameObjectCollectionBase, pojemność jest automatycznie zwiększana co jest wymagane przez; Ponowna alokacja.       Dostawca kodu skrótu zrezygnuje skrótu dla kluczy w wystąpieniu NameObjectCollectionBase. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       W .NET Framework w wersji 1.0 klasa ta używa porównywania ciągów z uwzględnieniem kultury. Jednak w .NET Framework w wersji 1.1 lub nowszej, ta klasa korzysta z <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>podczas porównywania ciągów.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Aby uzyskać więcej informacji na temat wpływ kultury porównań i sortowanie, zobacz [wykonywanie niezależnych od kultury operacje na ciągach](~/add/includes/ajax-current-ext-md.md).       `null`jest dozwolona jako klucz lub wartość.      > [!CAUTION] > <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>— Metoda nie rozróżnia `null` który jest zwracany, ponieważ nie odnaleziono określonego klucza i `null` który jest zwracany, ponieważ wartość skojarzoną z kluczem jest `null`.</xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>"
  example:
  - "The following code example shows how to implement and use the NameObjectCollectionBase class.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/cpp/t-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/csharp/t-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/visualbasic/t-system.collections.spe_0_1.vb)]"
  syntax:
    content: 'public abstract class NameObjectCollectionBase : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase()
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasy, która jest pusta."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameObjectCollectionBase>jest liczba elementów który <xref:System.Collections.Specialized.NameObjectCollectionBase>może pomieścić.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Po dodaniu elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameObjectCollectionBase>wystąpienia.</xref:System.Collections.Specialized.NameObjectCollectionBase> Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest operacją O(1)."
  syntax:
    content: protected NameObjectCollectionBase ();
    parameters: []
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasy, która jest pusta, ma domyślne początkowa pojemność i używa określonego <xref:System.Collections.IEqualityComparer>obiektu.</xref:System.Collections.IEqualityComparer>"
  remarks: "Pojemność <xref:System.Collections.Specialized.NameObjectCollectionBase>obiekt jest liczba elementów który <xref:System.Collections.Specialized.NameObjectCollectionBase>może pomieścić.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Po dodaniu elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       <xref:System.Collections.IEqualityComparer>Obiektu łączy modułu porównującego i dostawcy kodu wyznaczania wartości skrótu.</xref:System.Collections.IEqualityComparer>  Kody skrótów kluczy w <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> zrezygnuje dostawcy kodu wyznaczania wartości skrótu  Moduł porównujący Określa, czy dwa klucze są takie same.       Ten konstruktor jest operacją O(1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IEqualityComparer>Obiekt ma być używany do określenia, czy dwa klucze są takie same i generowania skrótu kluczy w kolekcji.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasy, która jest pusta, ma określony początkowa pojemność i korzysta z domyślnego dostawcę kodu wyznaczania wartości skrótu i domyślna funkcja porównująca."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameObjectCollectionBase>jest liczba elementów który <xref:System.Collections.Specialized.NameObjectCollectionBase>może pomieścić.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Po dodaniu elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameObjectCollectionBase>wystąpienia.</xref:System.Collections.Specialized.NameObjectCollectionBase> Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`."
  syntax:
    content: protected NameObjectCollectionBase (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Przybliżoną liczbę wpisów który <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> początkowo może zawierać wystąpienia."
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasy, która jest pusta, ma domyślne początkowa pojemność i używa dostawcy kodu określonego wyznaczania wartości skrótu i określona funkcja porównująca."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameObjectCollectionBase>jest liczba elementów który <xref:System.Collections.Specialized.NameObjectCollectionBase>może pomieścić.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Po dodaniu elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameObjectCollectionBase>wystąpienia.</xref:System.Collections.Specialized.NameObjectCollectionBase> Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest operacją O(1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "<xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> Który będzie dostarczać skrótu dla wszystkich kluczy w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>Do użycia w celu ustalenia, czy dwa klucze są takie same.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32,IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasy, która jest pusta, ma określony początkowa pojemność i używa określonego <xref:System.Collections.IEqualityComparer>obiektu.</xref:System.Collections.IEqualityComparer>"
  remarks: "Pojemność <xref:System.Collections.Specialized.NameObjectCollectionBase>obiekt jest liczba elementów który <xref:System.Collections.Specialized.NameObjectCollectionBase>może pomieścić.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Po dodaniu elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       <xref:System.Collections.IEqualityComparer>Obiektu łączy modułu porównującego i dostawcy kodu wyznaczania wartości skrótu.</xref:System.Collections.IEqualityComparer>  Kody skrótów kluczy w <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> zrezygnuje dostawcy kodu wyznaczania wartości skrótu  Moduł porównujący Określa, czy dwa klucze są takie same.       Ten konstruktor jest O (`n`) operację, której `n` jest `capacity` parametru."
  syntax:
    content: protected NameObjectCollectionBase (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Przybliżoną liczbę wpisów który <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> początkowo może zawierać obiektu."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IEqualityComparer>Obiekt ma być używany do określenia, czy dwa klucze są takie same i generowania skrótu kluczy w kolekcji.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasy, który jest możliwy do serializacji i używa określonego <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> i &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;."
  remarks: "Ten konstruktor jest operacją O(1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> obiekt, który zawiera informacje wymagane do serializacji nowej <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; obiekt, który zawiera źródłowego i docelowego serializowanym strumieniu skojarzone z nowym <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasy, która jest pusta, ma określony początkowa pojemność i używa dostawcy kodu określonego wyznaczania wartości skrótu i określona funkcja porównująca."
  remarks: "Pojemność <xref:System.Collections.Specialized.NameObjectCollectionBase>jest liczba elementów który <xref:System.Collections.Specialized.NameObjectCollectionBase>może pomieścić.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Po dodaniu elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameObjectCollectionBase>wystąpienia.</xref:System.Collections.Specialized.NameObjectCollectionBase> Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       Moduł porównujący Określa, czy dwa klucze są takie same. Domyślna funkcja porównująca jest <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`."
  syntax:
    content: protected NameObjectCollectionBase (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Przybliżoną liczbę wpisów który <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> początkowo może zawierać wystąpienia."
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "<xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> Który będzie dostarczać skrótu dla wszystkich kluczy w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>Do użycia w celu ustalenia, czy dwa klucze są takie same.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  id: BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseAdd(String,Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Dodaje wpis z określonym kluczem i wartością w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>jest już równa pojemności pojemność <xref:System.Collections.Specialized.NameObjectCollectionBase>zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>jest mniejsza niż pojemność, ta metoda jest operacją O(1).</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseAdd to create a new <xref:System.Collections.Specialized.NameObjectCollectionBase> with elements from an <xref:System.Collections.IDictionary>.  \n  \n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/visualbasic/08f4bd55-361e-4a55-bdc1-_1.vb)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/cpp/08f4bd55-361e-4a55-bdc1-_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/csharp/08f4bd55-361e-4a55-bdc1-_1.cs)]"
  syntax:
    content: protected void BaseAdd (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucz wpisu do dodania.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Wartość wpisu do dodania.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  id: BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa wszystkie wpisy z <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>jest ustawiany na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Ta metoda jest operacją O(1)."
  example:
  - "The following code example uses BaseClear to remove all elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/csharp/m-system.collections.spe_13_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/visualbasic/m-system.collections.spe_13_1.vb)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/cpp/m-system.collections.spe_13_1.cpp)]"
  syntax:
    content: protected void BaseClear ();
    parameters: []
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wpisu w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Ta metoda jest operacją O(1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_24_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_24_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_24_1.vb)]"
  syntax:
    content: protected object BaseGet (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks wartości do pobrania."
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący wartość wpisu w określonym indeksie.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  id: BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość pierwszego wpisu z określonym kluczem z <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Jeśli kolekcja zawiera wiele wpisów z określonym kluczem, ta metoda zwraca tylko pierwszy wpis. Można pobrać wartości kolejnych wpisów z tym samym kluczem, należy użyć modułu wyliczającego do iterowania po kolekcji i porównania kluczy.      > [!CAUTION] > Ta metoda zwraca `null` w następujących przypadkach: 1) Jeśli określony klucz nie zostanie odnaleziony; i 2) Jeśli określony klucz zostanie znaleziony i jej powiązaną wartość jest `null`. Ta metoda nie rozróżnia dwóch przypadków.       Ta metoda jest operacją O(1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and BaseGet to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_41_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_41_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_41_1.vb)]"
  syntax:
    content: protected object BaseGet (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucza wpisu do pobrania.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący wartość pierwszego wpisu z określonym kluczem, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca <xref:System.String>Tablica zawierająca wszystkie klucze w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.String>"
  remarks: "Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseGetAllKeys and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_38_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_38_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_38_1.vb)]"
  syntax:
    content: protected string[] BaseGetAllKeys ();
    parameters: []
    return:
      type: System.String[]
      description: "A <xref:System.String>Tablica zawierająca wszystkie klucze w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.String>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  id: BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca <xref:System.Object>Tablica zawierająca wszystkie wartości w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.Object>"
  remarks: "Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and BaseGetAllValues to get an array of the keys or an array of the values.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_32_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_32_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_32_1.vb)]"
  syntax:
    content: protected object[] BaseGetAllValues ();
    parameters: []
    return:
      type: System.Object[]
      description: "<xref:System.Object>Tablica zawierająca wszystkie wartości w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  id: BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca tablicę określonego typu, który zawiera wszystkie wartości w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: protected object[] BaseGetAllValues (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ do zwrócenia.</xref:System.Type>"
    return:
      type: System.Object[]
      description: "Określony typ, który zawiera wszystkie wartości w tablicy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>nie jest prawidłową <xref:System.Type>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera klucz zapisu w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Ta metoda jest operacją O(1)."
  example:
  - "The following code example uses BaseGetKey and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/3cf5a014-1166-4fdc-b41d-_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/3cf5a014-1166-4fdc-b41d-_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/3cf5a014-1166-4fdc-b41d-_1.vb)]"
  syntax:
    content: protected string BaseGetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks klucz do uzyskania."
    return:
      type: System.String
      description: "A <xref:System.String>reprezentujący klucz wpisu w określonym indeksie.</xref:System.String>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  id: BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia zawiera wpisy, którego klucze nie są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Ta metoda jest operacją O(1)."
  example:
  - "The following code example uses BaseHasKeys to determine if the collection contains keys that are not `null`.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/cpp/m-system.collections.spe_17_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/visualbasic/m-system.collections.spe_17_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/csharp/m-system.collections.spe_17_1.cs)]"
  syntax:
    content: protected bool BaseHasKeys ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia zawiera wpisy, którego klucze nie są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  id: BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa wpisy z określonym kluczem z <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase>nie zawiera element z określonym kluczem <xref:System.Collections.Specialized.NameObjectCollectionBase>pozostaje niezmieniona.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Nie wyjątek.       W kolekcji sąsiadujących elementów, takich jak listy elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseRemove and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/6fd86396-bc06-4c0a-8ef5-_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/6fd86396-bc06-4c0a-8ef5-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/6fd86396-bc06-4c0a-8ef5-_1.vb)]"
  syntax:
    content: protected void BaseRemove (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Klucza wpisów do usunięcia.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa wpis o określonym indeksie <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "W kolekcji sąsiadujących elementów, takich jak listy elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and BaseRemoveAt to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/c118a875-5132-4e70-b0e9-_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/c118a875-5132-4e70-b0e9-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/c118a875-5132-4e70-b0e9-_1.vb)]"
  syntax:
    content: protected void BaseRemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks wpisu do usunięcia."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  id: BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseSet(Int32,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ustawia wartość wpisu w określonym indeksie <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Ta metoda jest operacją O(1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/2287b31c-3439-4899-9c69-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/2287b31c-3439-4899-9c69-_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/2287b31c-3439-4899-9c69-_1.cs)]"
  syntax:
    content: protected void BaseSet (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks wpisu do ustawienia."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Reprezentujący nową wartość wpisu do ustawienia.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest poza prawidłowym zakresem indeksów kolekcji."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  id: BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseSet(String,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ustawia wartość pierwszego wpisu z określonym kluczem w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia, jeśli je znaleziono; w przeciwnym razie dodaje wpis z określonym kluczem i wartością w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Jeśli kolekcja zawiera wiele wpisów z określonym kluczem, ta metoda określa tylko pierwszy wpis. Aby ustawić wartości kolejnych wpisów z tym samym kluczem, należy użyć modułu wyliczającego do iterowania po kolekcji i porównania kluczy.       Ta metoda jest operacją O(1)."
  example:
  - "The following code example uses BaseSet to set the value of a specific element.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/3574a9bc-5d60-40e9-a4ae-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/3574a9bc-5d60-40e9-a4ae-_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/3574a9bc-5d60-40e9-a4ae-_1.cs)]"
  syntax:
    content: protected void BaseSet (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Wpisu można ustawić klucza.</xref:System.String> Klucz musi być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Reprezentujący nową wartość wpisu do ustawienia.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  id: Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera liczbę par klucz/wartość zawartych w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Liczba elementów jest pojemność który <xref:System.Collections.Specialized.NameObjectCollectionBase>może przechowywać.</xref:System.Collections.Specialized.NameObjectCollectionBase> Liczba jest liczba elementów, które są rzeczywiście <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Pojemność zawsze jest większa lub równa wartości Count. Jeżeli liczba przekracza pojemność podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.       Pobieranie wartości tej właściwości jest operacją O(1)."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "Liczba par klucz/wartość zawartych w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  overload: System.Collections.Specialized.NameObjectCollectionBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca moduł wyliczający, który iteruje po <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref>."
  remarks: "Ten moduł wyliczający zwraca kluczy kolekcji jako ciągi.       `foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.  W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.       Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.       Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.IEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.IEnumerator.Reset%2A>  W tym miejscu <xref:System.Collections.IEnumerator.Current%2A>jest niezdefiniowany.</xref:System.Collections.IEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.IEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A>przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A>zwracają również `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A>zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A>jest niezdefiniowany.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Aby ustawić <xref:System.Collections.IEnumerator.Current%2A>pierwszy element w kolekcji, należy wywołać, <xref:System.Collections.IEnumerator.Reset%2A>następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie nieważne i jego zachowanie jest niezdefiniowana.       Moduł wyliczający nie ma wyłącznego dostępu do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku.  W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, można zablokować kolekcję podczas całej wyliczenia.  Aby zezwolić na dostęp przez wiele wątków do odczytu i zapisu do kolekcji, musi implementować własne synchronizacji.       Ta metoda jest operacją O(1)."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Dla <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Implementuje <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interfejsu i zwraca dane potrzebne do serializacji <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
  remarks: "Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> obiekt, który zawiera informacje wymagane do serializacji <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>obiekt, który zawiera źródłowy i docelowy serializowanego strumienia skojarzonego z <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienie jest tylko do odczytu."
  remarks: "Kolekcja, która jest tylko do odczytu uniemożliwia dodawania, usuwania lub modyfikowania elementów po utworzeniu kolekcji.       Kolekcja, która jest tylko do odczytu jest po prostu kolekcji z otoką, co uniemożliwia ich modyfikowania kolekcji; w związku z tym jeśli wprowadzono zmiany w źródłowej kolekcji, kolekcji tylko do odczytu odzwierciedla te zmiany.       Pobieranie wartości tej właściwości jest operacją O(1)."
  example:
  - "The following code example creates a read-only collection.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/cpp/p-system.collections.spe_25_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/csharp/p-system.collections.spe_25_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/visualbasic/p-system.collections.spe_25_1.vb)]"
  syntax:
    content: protected bool IsReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienie jest tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  id: Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>wystąpienia, które zawiera wszystkie klucze w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  remarks: "Pobieranie wartości tej właściwości jest operacją O(1)."
  syntax:
    content: public virtual System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "A <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>wystąpienia, które zawiera wszystkie klucze w <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Implementuje <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interfejsu i zgłasza zdarzenie deserializacji po zakończeniu wykonywania deserializacji."
  remarks: "Gdy Metoda OnDeserialization nie jest widoczne dla klientów modelu COM. Domyślnie, dziedziczenie <xref:System.Collections.Specialized.NameObjectCollectionBase>klasy mogą uwidaczniać go i może spowodować niepożądane zachowanie w klientów modelu COM..</xref:System.Collections.Specialized.NameObjectCollectionBase>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Źródło zdarzenia deserializacji."
  overload: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Obiekt skojarzony z bieżącym <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> wystąpienia jest nieprawidłowa."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje całą <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> do jednowymiarowego zgodnego <xref:System.Array>, rozpoczynając od określonego indeksu tablicy docelowej.</xref:System.Array>"
  remarks: "Określona tablica musi być zgodne z typem.       Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=fullName>można skopiować elementów.</xref:System.Array.Copy%2A?displayProperty=fullName>       Podczas metody metody ICollection.CopyTo nie jest widoczne dla klientów modelu COM. Domyślnie, dziedziczenie <xref:System.Collections.Specialized.NameObjectCollectionBase>klasy mogą uwidaczniać go i może spowodować niepożądane zachowanie w klientów modelu COM..</xref:System.Collections.Specialized.NameObjectCollectionBase>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Jednowymiarowa <xref:System.Array>który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref>.</xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>jest wielowymiarowy.       - lub - liczba elementów w źródle <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> jest większa niż dostępne miejsce od <code>index</code> do końca tablicy docelowej <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ źródła <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> nie można automatycznie rzutować na typ docelowy <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy uzyskują dostęp do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> jest synchronizowany obiekt (wielowątkowość)."
  remarks: "A <xref:System.Collections.Specialized.NameObjectCollectionBase>obiektu nie jest zsynchronizowana.</xref:System.Collections.Specialized.NameObjectCollectionBase> Klasy pochodne zapewniają zsynchronizowanej wersji <xref:System.Collections.Specialized.NameObjectCollectionBase>przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A>Właściwości.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.Specialized.NameObjectCollectionBase>       Wyliczanie za pomocą kolekcji leżą nie jest procedurą wątkowo. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.       W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.ICollection.SyncRoot%2A>właściwości podczas wyliczania całego.</xref:System.Collections.ICollection.SyncRoot%2A>       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)][!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)][!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb) ] podczas pobierania wartości tej właściwości jest operacją O(1).    "
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> jest synchronizowany obiekt (wielowątkowość); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> obiektu."
  remarks: "Klasy pochodne zapewniają własne zsynchronizowanej wersji <xref:System.Collections.Specialized.NameObjectCollectionBase>przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A>Właściwości.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.Specialized.NameObjectCollectionBase> Synchronizowanie kodu musi wykonywać operacje <xref:System.Collections.ICollection.SyncRoot%2A>Właściwość <xref:System.Collections.Specialized.NameObjectCollectionBase>obiektu, nie są bezpośrednio w <xref:System.Collections.Specialized.NameObjectCollectionBase>obiektu.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.ICollection.SyncRoot%2A> Zapewnia to poprawne działanie kolekcje, które pochodzą od innych obiektów. W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.Specialized.NameObjectCollectionBase>obiektu.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Wyliczanie za pomocą kolekcji leżą nie jest procedurą wątkowo. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.       W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.ICollection.SyncRoot%2A>podczas wyliczania całego.</xref:System.Collections.ICollection.SyncRoot%2A>       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)][!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)][!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb) ] podczas pobierania wartości tej właściwości jest operacją O(1).    "
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> obiektu."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase()
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32,IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseAdd(String,Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(Int32,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(String,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseAdd
  nameWithType: NameObjectCollectionBase.BaseAdd
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear
  nameWithType: NameObjectCollectionBase.BaseClear
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet
  nameWithType: NameObjectCollectionBase.BaseGet
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues
  nameWithType: NameObjectCollectionBase.BaseGetAllValues
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetKey
  nameWithType: NameObjectCollectionBase.BaseGetKey
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys
  nameWithType: NameObjectCollectionBase.BaseHasKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemove
  nameWithType: NameObjectCollectionBase.BaseRemove
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemoveAt
  nameWithType: NameObjectCollectionBase.BaseRemoveAt
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet
  nameWithType: NameObjectCollectionBase.BaseSet
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  nameWithType: NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator
  nameWithType: NameObjectCollectionBase.GetEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetObjectData
  nameWithType: NameObjectCollectionBase.GetObjectData
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: OnDeserialization
  nameWithType: NameObjectCollectionBase.OnDeserialization
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
