### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.Parallel
  id: Parallel
  children:
  - System.Activities.Statements.Parallel.#ctor
  - System.Activities.Statements.Parallel.Branches
  - System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.Statements.Parallel.CompletionCondition
  - System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Activities.Statements.Parallel.Variables
  langs:
  - csharp
  name: Parallel
  nameWithType: Parallel
  fullName: System.Activities.Statements.Parallel
  type: Class
  summary: "To działanie, które wykonuje wszystkich działań podrzędnych równocześnie i asynchronicznie."
  remarks: "Działanie równoległe działa jednocześnie Planując każdego <xref:System.Activities.Activity>w jego <xref:System.Activities.Statements.Parallel.Branches%2A>kolekcji na początku.</xref:System.Activities.Statements.Parallel.Branches%2A> </xref:System.Activities.Activity> Po ukończeniu wszystkich jego <xref:System.Activities.Statements.Parallel.Branches%2A>pełną lub gdy jego <xref:System.Activities.Statements.Parallel.CompletionCondition%2A>Właściwości daje w wyniku `true`.</xref:System.Activities.Statements.Parallel.CompletionCondition%2A> </xref:System.Activities.Statements.Parallel.Branches%2A> Podczas wszystkich <xref:System.Activities.Activity>obiektów uruchamiane asynchronicznie, nie wykonują w oddzielnych wątkach, więc każde kolejne działanie wykonywana tylko wtedy, gdy wcześniej zaplanowanym działaniem zakończeniu lub bezczynności.</xref:System.Activities.Activity> Żadne działania podrzędne tego działania przejść bezczynności, to działanie wykonywania w taki sam sposób, że <xref:System.Activities.Statements.Sequence>działanie robi.</xref:System.Activities.Statements.Sequence>"
  example:
  - "The following code sample demonstrates creating a Parallel activity. This example is from the [Cancellation Handler on Compensable Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_CompensationCancellation#1](~/add/codesnippet/csharp/compensationcancellation/program.cs#1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Branches")]

      public sealed class Parallel : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: Parallel()
  nameWithType: Parallel.Parallel()
  fullName: System.Activities.Statements.Parallel.Parallel()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Activities.Statements.Parallel&quot;> </xref> działania."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.Parallel> activity. This example is from the [Cancellation Handler on Compensable Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_CompensationCancellation#1](~/add/codesnippet/csharp/compensationcancellation/program.cs#1)]"
  syntax:
    content: public Parallel ();
    parameters: []
  overload: System.Activities.Statements.Parallel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.Branches
  id: Branches
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: Branches
  nameWithType: Parallel.Branches
  fullName: System.Activities.Statements.Parallel.Branches
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Elementy podrzędne, które ma być wykonywana równolegle."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the Branches property of a <xref:System.Activities.Statements.Parallel> activity. This example is from the [Cancellation Handler on Compensable Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_CompensationCancellation#1](~/add/codesnippet/csharp/compensationcancellation/program.cs#1)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Activity> Branches { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}
      description: "Elementy."
  overload: System.Activities.Statements.Parallel.Branches*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Parallel.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Parallel.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "Do dodania."
  overload: System.Activities.Statements.Parallel.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)
  id: Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: Cancel(NativeActivityContext)
  nameWithType: Parallel.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.Parallel.Cancel(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Cancel (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Do dodania."
  overload: System.Activities.Statements.Parallel.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.CompletionCondition
  id: CompletionCondition
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: CompletionCondition
  nameWithType: Parallel.CompletionCondition
  fullName: System.Activities.Statements.Parallel.CompletionCondition
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Oblicza po zakończeniu oddziałów."
  remarks: "Gdy ta właściwość nie jest `true`, a następnie zaplanowanych elementów w <xref:System.Activities.Statements.Parallel.Branches%2A>kolekcji zostały anulowane.</xref:System.Activities.Statements.Parallel.Branches%2A> Jeśli ta właściwość nie jest ustawiona, wszystkie <xref:System.Activities.Activity>obiekty w <xref:System.Activities.Statements.Parallel.Branches%2A>kolekcji wykonywanie do momentu zakończenia.</xref:System.Activities.Statements.Parallel.Branches%2A> </xref:System.Activities.Activity>"
  example:
  - "The following code sample demonstrates setting the CompletionCondition property of a <xref:System.Activities.Statements.Parallel> activity. This example is from the [Cancellation Handler on Compensable Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_CompensationCancellation#1](~/add/codesnippet/csharp/compensationcancellation/program.cs#1)]"
  syntax:
    content: public System.Activities.Activity<bool> CompletionCondition { get; set; }
    return:
      type: System.Activities.Activity{System.Boolean}
      description: "Wyrażenie ukończenia."
  overload: System.Activities.Statements.Parallel.CompletionCondition*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: Parallel.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Parallel.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Do dodania."
  overload: System.Activities.Statements.Parallel.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: "Do dodania."
    - id: originalActivity
      type: System.Activities.Activity
      description: "Do dodania."
  overload: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: Parallel.UpdateInstance(NativeActivityUpdateContext)
  fullName: System.Activities.Statements.Parallel.UpdateInstance(NativeActivityUpdateContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);
    parameters:
    - id: updateContext
      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext
      description: "Do dodania."
  overload: System.Activities.Statements.Parallel.UpdateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Parallel.Variables
  id: Variables
  parent: System.Activities.Statements.Parallel
  langs:
  - csharp
  name: Variables
  nameWithType: Parallel.Variables
  fullName: System.Activities.Statements.Parallel.Variables
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Kolekcja zmiennych zawartych w niej."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "Zmienne zawartych w niej."
  overload: System.Activities.Statements.Parallel.Variables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.Activities.Statements.Parallel.#ctor
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Parallel()
  nameWithType: Parallel.Parallel()
  fullName: System.Activities.Statements.Parallel.Parallel()
- uid: System.Activities.Statements.Parallel.Branches
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Branches
  nameWithType: Parallel.Branches
  fullName: System.Activities.Statements.Parallel.Branches
- uid: System.Collections.ObjectModel.Collection{System.Activities.Activity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Activity>
  nameWithType: Collection<Activity>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Activity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Parallel.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Parallel.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: Parallel.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.Parallel.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.Parallel.CompletionCondition
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: CompletionCondition
  nameWithType: Parallel.CompletionCondition
  fullName: System.Activities.Statements.Parallel.CompletionCondition
- uid: System.Activities.Activity{System.Boolean}
  parent: System.Activities
  isExternal: false
  name: Activity<Boolean>
  nameWithType: Activity<Boolean>
  fullName: System.Activities.Activity<System.Boolean>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: Activity<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: Parallel.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Parallel.Execute(NativeActivityContext)
- uid: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: Parallel.UpdateInstance(NativeActivityUpdateContext)
  fullName: System.Activities.Statements.Parallel.UpdateInstance(NativeActivityUpdateContext)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateContext
  nameWithType: NativeActivityUpdateContext
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext
- uid: System.Activities.Statements.Parallel.Variables
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Variables
  nameWithType: Parallel.Variables
  fullName: System.Activities.Statements.Parallel.Variables
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Parallel.#ctor*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Parallel
  nameWithType: Parallel.Parallel
- uid: System.Activities.Statements.Parallel.Branches*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Branches
  nameWithType: Parallel.Branches
- uid: System.Activities.Statements.Parallel.CacheMetadata*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: CacheMetadata
  nameWithType: Parallel.CacheMetadata
- uid: System.Activities.Statements.Parallel.Cancel*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Cancel
  nameWithType: Parallel.Cancel
- uid: System.Activities.Statements.Parallel.CompletionCondition*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: CompletionCondition
  nameWithType: Parallel.CompletionCondition
- uid: System.Activities.Statements.Parallel.Execute*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Execute
  nameWithType: Parallel.Execute
- uid: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: Parallel.OnCreateDynamicUpdateMap
- uid: System.Activities.Statements.Parallel.UpdateInstance*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: UpdateInstance
  nameWithType: Parallel.UpdateInstance
- uid: System.Activities.Statements.Parallel.Variables*
  parent: System.Activities.Statements.Parallel
  isExternal: false
  name: Variables
  nameWithType: Parallel.Variables
