### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateGroup
  id: VisualStateGroup
  children:
  - System.Windows.VisualStateGroup.#ctor
  - System.Windows.VisualStateGroup.CurrentState
  - System.Windows.VisualStateGroup.CurrentStateChanged
  - System.Windows.VisualStateGroup.CurrentStateChanging
  - System.Windows.VisualStateGroup.Name
  - System.Windows.VisualStateGroup.States
  - System.Windows.VisualStateGroup.Transitions
  langs:
  - csharp
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
  type: Class
  summary: "Zawiera wykluczają się wzajemnie <xref href=&quot;System.Windows.VisualState&quot;> </xref> obiektów i <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> obiektów, które są używane do przenoszenia z jednego stanu do innego."
  remarks: "Każdy VisualStateGroup zawiera kolekcję <xref:System.Windows.VisualState>obiektów.</xref:System.Windows.VisualState> A <xref:System.Windows.VisualState>zawiera kolekcję <xref:System.Windows.Media.Animation.Storyboard>obiektów, które określają, jak zmienia wygląd formantu, gdy formant jest w stanie niektórych.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> Na przykład <xref:System.Windows.Controls.Button>może być nieco inny wygląd, gdy zostanie naciśnięty niż, gdy nie jest wciśnięty.</xref:System.Windows.Controls.Button> Dwustanowy, który <xref:System.Windows.Controls.Button>definiuje odpowiadają po naciśnięciu go (`&quot;Pressed&quot;`), a jeśli go nie (`&quot;Normal&quot;`).</xref:System.Windows.Controls.Button>       Możesz dodać <xref:System.Windows.VisualState>do formantu przez ustawienie `VisualStateManager.VisualStateGroups` dołączona właściwość w formancie.</xref:System.Windows.VisualState> Aby umieścić stanów, które wzajemnie się wykluczają się wzajemnie w tej samej VisualStateGroup. Na przykład <xref:System.Windows.Controls.CheckBox>ma dwa obiekty VisualStateGroup.</xref:System.Windows.Controls.CheckBox> Zawiera jedną stanach `Normal`, `MouseOver`, `Pressed`, i `Disabled`. Zawiera innych stanów `Checked`, `UnChecked`, i `Indeterminate`. <xref:System.Windows.Controls.CheckBox>Mogą mieć stany `MouseOver` i `UnChecked` w tym samym czasie, ale nie może być w `MouseOver` i `Pressed` Państwa, w tym samym czasie.</xref:System.Windows.Controls.CheckBox>       Mimo że można dodać <xref:System.Windows.VisualState>obiekty do dowolnego elementu są szczególnie przydatne można umożliwić innym osobom do ponownego zdefiniowania visual zachowanie <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> </xref:System.Windows.VisualState> W przypadku utworzenia kontrolki niestandardowej, która używa <xref:System.Windows.Controls.ControlTemplate>, można określić, które stwierdza, że formant może być w przez dodanie <xref:System.Windows.TemplateVisualStateAttribute>na jego definicji klasy.</xref:System.Windows.TemplateVisualStateAttribute> </xref:System.Windows.Controls.ControlTemplate> Następnie każdy, kto tworzy nową <xref:System.Windows.Controls.ControlTemplate>dla formantu można dodać <xref:System.Windows.VisualState>obiekty do szablonu.</xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.TemplateVisualStateAttribute>Umożliwia projektanta narzędzi, takich jak Expression Blend, do udostępnienia stanów formantu.</xref:System.Windows.TemplateVisualStateAttribute> Stany o takim samym <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>znajdują się w tej samej VisualStateGroup.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>       Aby uzyskać więcej informacji o sposobie używania VisualStateGroup obiektów w <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Controls.ControlTemplate> Więcej informacji na temat sposobu tworzenia formantów używające <xref:System.Windows.VisualStateManager>, zobacz [Tworzenie formantu mający można dostosować wygląd](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.VisualStateManager>       <xref:System.Windows.VisualStateGroup.Transitions%2A>Zawiera właściwość <xref:System.Windows.VisualTransition>obiektów, które są stosowane, gdy formant przejścia między stwierdza, że zostały zdefiniowane w VisualStateGroup.</xref:System.Windows.VisualTransition> </xref:System.Windows.VisualStateGroup.Transitions%2A>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a VisualStateGroup named `CommonStates`, which defines the `MouseOver` and `Normal` states. The VisualStateGroup also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("States")]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public class VisualStateGroup : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> klasy."
  syntax:
    content: public VisualStateGroup ();
    parameters: []
  overload: System.Windows.VisualStateGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentState
  id: CurrentState
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera <xref href=&quot;System.Windows.VisualState&quot;> </xref> są obecnie stosowane do formantu."
  syntax:
    content: public System.Windows.VisualState CurrentState { get; }
    return:
      type: System.Windows.VisualState
      description: "<xref href=&quot;System.Windows.VisualState&quot;> </xref> Są obecnie stosowane do formantu."
  overload: System.Windows.VisualStateGroup.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  id: CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Występuje, gdy kontrolka przechodzi do innego stanu."
  remarks: "To zdarzenie występuje po przejścia do sterowania do nowego stanu i <xref:System.Windows.VisualStateGroup.CurrentStateChanging>zdarzenie.</xref:System.Windows.VisualStateGroup.CurrentStateChanging>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  id: CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Występuje, gdy formant, który rozpoczyna się przenoszone do innego stanu."
  remarks: "Zdarzenie występuje, gdy rozpoczyna stany przejścia. Jeśli <xref:System.Windows.VisualTransition>jest stosowany do zmiany stanu to zdarzenie występuje, gdy rozpoczyna się przejścia.</xref:System.Windows.VisualTransition> Jeśli <xref:System.Windows.VisualTransition>nie została zastosowana, to zdarzenie występuje po formantu przejścia do nowego stanu, ale przed wysłaniem <xref:System.Windows.VisualStateGroup.CurrentStateChanged>zdarzeń.</xref:System.Windows.VisualStateGroup.CurrentStateChanged> </xref:System.Windows.VisualTransition>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Name
  id: Name
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia nazwę <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  remarks: "Twórcy kontroli określić, które stwierdza, że formant może być w przez dodanie <xref:System.Windows.TemplateVisualStateAttribute>na jego definicji klasy.</xref:System.Windows.TemplateVisualStateAttribute> Stany z tym samym <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>znajdują się w tej samej <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> Ustaw nazwę <xref:System.Windows.VisualStateGroup>wartość <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>Właściwości.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> </xref:System.Windows.VisualStateGroup>"
  example:
  - "The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#5](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#5)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Nazwa <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  overload: System.Windows.VisualStateGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.States
  id: States
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera kolekcję wykluczają się wzajemnie <xref href=&quot;System.Windows.VisualState&quot;> </xref> obiektów."
  remarks: ''
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList States { get; }
    return:
      type: System.Collections.IList
      description: "Kolekcja wykluczają się wzajemnie <xref href=&quot;System.Windows.VisualState&quot;> </xref> obiektów."
  overload: System.Windows.VisualStateGroup.States*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Transitions
  id: Transitions
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> obiektów."
  remarks: "<xref:System.Windows.VisualTransition>Obiekty w przejścia są stosowane, gdy formant przejścia między stany, które są zdefiniowane w <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.VisualTransition>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList Transitions { get; }
    return:
      type: System.Collections.IList
      description: "Kolekcja <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> obiektów."
  overload: System.Windows.VisualStateGroup.Transitions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.VisualStateGroup.#ctor
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
- uid: System.Windows.VisualStateGroup.CurrentState
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisualStateChangedEventArgs>
  nameWithType: EventHandler<VisualStateChangedEventArgs>
  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.VisualStateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateChangedEventArgs
    name: VisualStateChangedEventArgs
    nameWithType: VisualStateChangedEventArgs
    fullName: VisualStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
- uid: System.Windows.VisualStateGroup.Name
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateGroup.States
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateGroup.Transitions
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
- uid: System.Windows.VisualStateGroup.#ctor*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup.VisualStateGroup
- uid: System.Windows.VisualStateGroup.CurrentState*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
- uid: System.Windows.VisualStateGroup.Name*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
- uid: System.Windows.VisualStateGroup.States*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
- uid: System.Windows.VisualStateGroup.Transitions*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
