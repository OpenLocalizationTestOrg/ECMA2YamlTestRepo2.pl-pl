### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.Serialization.SerializerWriter
  id: SerializerWriter
  children:
  - System.Windows.Documents.Serialization.SerializerWriter.#ctor
  - System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  - System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  - System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  - System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  - System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  - System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  langs:
  - csharp
  name: SerializerWriter
  nameWithType: SerializerWriter
  fullName: System.Windows.Documents.Serialization.SerializerWriter
  type: Class
  summary: "Definiuje metody abstrakcyjne i zdarzenia, które są wymagane do zaimplementowania serializator danych wyjściowych wtyczki dokumentu."
  remarks: ''
  example:
  - "The following example illustrates the use of SerializerWriter.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]  \n  \n [!code-cs[DocumentSerialize#DocSerializeFileFilter](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializefilefilter)]"
  syntax:
    content: public abstract class SerializerWriter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor
  id: '#ctor'
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: SerializerWriter()
  nameWithType: SerializerWriter.SerializerWriter()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.SerializerWriter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriter&quot;> </xref> klasy."
  remarks: "Wystąpienia <xref:System.Windows.Documents.Serialization.SerializerWriter>powinny być tworzone przy użyciu <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A>metody <xref:System.Windows.Documents.Serialization.SerializerProvider>obiektu nie <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A>metody <xref:System.Windows.Documents.Serialization.ISerializerFactory>obiektu.</xref:System.Windows.Documents.Serialization.ISerializerFactory> </xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> </xref:System.Windows.Documents.Serialization.SerializerProvider> </xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> </xref:System.Windows.Documents.Serialization.SerializerWriter>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Documents.Serialization.SerializerWriter> using the <xref:System.Windows.Documents.Serialization.SerializerProvider>.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> method.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: protected SerializerWriter ();
    parameters: []
  overload: System.Windows.Documents.Serialization.SerializerWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  id: CancelAsync
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: SerializerWriter.CancelAsync()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, anuluje operację asynchronicznego zapisu."
  syntax:
    content: public abstract void CancelAsync ();
    parameters: []
  overload: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  id: CreateVisualsCollator
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CreateVisualsCollator()
  nameWithType: SerializerWriter.CreateVisualsCollator()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Po przesłonięciu w klasie pochodnej zwraca <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> czy sortowane zapisy <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elementów."
  remarks: ''
  example:
  - "The following example shows the use of the CreateVisualsCollator method.  \n  \n [!code-cs[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createandwritetovisualscollator)]\n [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createandwritetovisualscollator)]"
  syntax:
    content: public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();
    parameters: []
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "A <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> czy sortowane zapisy <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> szeregowanie output elementy do dokumentu"
  overload: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Po przesłonięciu w klasie pochodnej zwraca <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> czy sortowane zapisy <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elementów wraz z danym biletów wydruku."
  remarks: "`documentSequencePT`lub `documentPT` może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego biletów wydruku dla danego <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.  \n  \n [!code-cs[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createandwritetovisualscollator)]\n [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createandwritetovisualscollator)]"
  syntax:
    content: public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);
    parameters:
    - id: documentSequencePT
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> zawartości."
    - id: documentPT
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> zawartości."
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "A <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> czy sortowane zapisy <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> szeregowanie output elementy do dokumentu"
  overload: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  id: Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(DocumentPaginator)
  nameWithType: SerializerWriter.Write(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje zawartość danego <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  id: Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocument)
  nameWithType: SerializerWriter.Write(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Dokument można zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  id: Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Sekwencja dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  id: Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedPage)
  nameWithType: SerializerWriter.Write(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Strony, aby zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  id: Write(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(Visual)
  nameWithType: SerializerWriter.Write(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elementu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Element do zapisu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje podzielony na strony zawartość wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the Write method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `documentPaginator` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje danego <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Dokument można zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedDocument` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje danego <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Sekwencja dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedDocumentSequence` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, synchronicznie zapisuje danego <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Strony, aby zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedPage` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(Visual,PrintTicket)
  nameWithType: SerializerWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje synchronicznie danego <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> element wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Element do zapisu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `visual` elementu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje zawartość danego <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  id: WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Dokument można zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Sekwencja dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  id: WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage)
  nameWithType: SerializerWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Strony, aby zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  id: WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual)
  nameWithType: SerializerWriter.WriteAsync(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elementu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Element do zapisu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje zawartość danego <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje zawartość danego <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `documentPaginator` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Dokument można zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Dokument można zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedDocument` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Sekwencja dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Sekwencja dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedDocumentSequence` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Strony, aby zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Strony, aby zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedPage` zawartości."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elementu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Element do zapisu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie danego <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> element wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Element do zapisu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `visual` elementu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, asynchronicznie zapisuje podzielony na strony zawartość wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `documentPaginator` zawartości."
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Dokument można zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedDocument` zawartości."
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Sekwencja dokumentu, który definiuje zawartość do zapisania serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedDocumentSequence` zawartości."
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie podany <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Strony, aby zapisać do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `fixedPage` zawartości."
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje asynchronicznie danego <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> element wraz z skojarzony <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> i identyfikator z serializacją <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`może być `null` , jeśli nie ma żadnych preferowanych ustawień drukowania.       Ta metoda nie sprawdza, czy lub zmodyfikować danego `printTicket` dla konkretnej <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Jeśli to konieczne, użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>metodę w celu utworzenia <xref:System.Printing.PrintQueue>-określonych <xref:System.Printing.PrintTicket>która jest prawidłowa dla danego drukarki.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`jest przekazywana do <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>podczas <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>zdarzenie.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       Dane wyjściowe <xref:System.IO.Stream>zapisu operacji jest zwykle określona jako parametr do konstruktora klasy pochodnej z zaimplementowanym interfejsem <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Element do zapisu do serializacji <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Domyślnie drukowanie preferencje dotyczące `visual` elementu."
    - id: userState
      type: System.Object
      description: "Obiekt określony przez obiekt wywołujący do identyfikowania operację asynchronicznego zapisu."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  id: WritingCancelled
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingCancelled
  nameWithType: SerializerWriter.WritingCancelled
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Występuje w przypadku przesłonięcia w klasie pochodnej, gdy <xref:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*>Operacja została wykonana.</xref:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;
    return:
      type: System.Windows.Documents.Serialization.WritingCancelledEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  id: WritingCompleted
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingCompleted
  nameWithType: SerializerWriter.WritingCompleted
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, występuje po zakończeniu operacji zapisu."
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;
    return:
      type: System.Windows.Documents.Serialization.WritingCompletedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  id: WritingPrintTicketRequired
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingPrintTicketRequired
  nameWithType: SerializerWriter.WritingPrintTicketRequired
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, występuje tuż przed <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> jest dodawany do strumienia przez <> </> *> lub <> </> *> metody."
  remarks: "Zdarzenie WritingPrintTicketRequired Włącza program obsługi zdarzeń zastąpić nową <xref:System.Printing.PrintTicket>dla określonej w <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A>lub <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A>wywołania metody.</xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A> </xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> </xref:System.Printing.PrintTicket>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;
    return:
      type: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  id: WritingProgressChanged
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingProgressChanged
  nameWithType: SerializerWriter.WritingProgressChanged
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Występuje w przypadku przesłonięcia w klasie pochodnej, gdy <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriter&quot;> </xref> postęp aktualizacji."
  remarks: "Na przykład <xref:System.Windows.Documents.Serialization.SerializerWriter>można zaktualizować postęp po każdej stronie lub operacja zapisu każdy dokument w wielu dokumentów.</xref:System.Windows.Documents.Serialization.SerializerWriter>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;
    return:
      type: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: SerializerWriter()
  nameWithType: SerializerWriter.SerializerWriter()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.SerializerWriter()
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CancelAsync()
  nameWithType: SerializerWriter.CancelAsync()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync()
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator()
  nameWithType: SerializerWriter.CreateVisualsCollator()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator()
- uid: System.Windows.Documents.Serialization.SerializerWriterCollator
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: SerializerWriterCollator
  nameWithType: SerializerWriterCollator
  fullName: System.Windows.Documents.Serialization.SerializerWriterCollator
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(DocumentPaginator)
  nameWithType: SerializerWriter.Write(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator)
- uid: System.Windows.Documents.DocumentPaginator
  parent: System.Windows.Documents
  isExternal: false
  name: DocumentPaginator
  nameWithType: DocumentPaginator
  fullName: System.Windows.Documents.DocumentPaginator
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocument)
  nameWithType: SerializerWriter.Write(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument)
- uid: System.Windows.Documents.FixedDocument
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocument
  nameWithType: FixedDocument
  fullName: System.Windows.Documents.FixedDocument
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocumentSequence)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence)
- uid: System.Windows.Documents.FixedDocumentSequence
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocumentSequence
  nameWithType: FixedDocumentSequence
  fullName: System.Windows.Documents.FixedDocumentSequence
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedPage)
  nameWithType: SerializerWriter.Write(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage)
- uid: System.Windows.Documents.FixedPage
  parent: System.Windows.Documents
  isExternal: false
  name: FixedPage
  nameWithType: FixedPage
  fullName: System.Windows.Documents.FixedPage
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(Visual)
  nameWithType: SerializerWriter.Write(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(Visual,PrintTicket)
  nameWithType: SerializerWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage)
  nameWithType: SerializerWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual)
  nameWithType: SerializerWriter.WriteAsync(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingCancelled
  nameWithType: SerializerWriter.WritingCancelled
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
- uid: System.Windows.Documents.Serialization.WritingCancelledEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCancelledEventHandler
  nameWithType: WritingCancelledEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCancelledEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingCompleted
  nameWithType: SerializerWriter.WritingCompleted
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
- uid: System.Windows.Documents.Serialization.WritingCompletedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCompletedEventHandler
  nameWithType: WritingCompletedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCompletedEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingPrintTicketRequired
  nameWithType: SerializerWriter.WritingPrintTicketRequired
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
- uid: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingPrintTicketRequiredEventHandler
  nameWithType: WritingPrintTicketRequiredEventHandler
  fullName: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingProgressChanged
  nameWithType: SerializerWriter.WritingProgressChanged
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
- uid: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingProgressChangedEventHandler
  nameWithType: WritingProgressChangedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: SerializerWriter
  nameWithType: SerializerWriter.SerializerWriter
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CancelAsync
  nameWithType: SerializerWriter.CancelAsync
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator
  nameWithType: SerializerWriter.CreateVisualsCollator
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write
  nameWithType: SerializerWriter.Write
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync
  nameWithType: SerializerWriter.WriteAsync
