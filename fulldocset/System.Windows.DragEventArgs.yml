### YamlMime:ManagedReference
items:
- uid: System.Windows.DragEventArgs
  id: DragEventArgs
  children:
  - System.Windows.DragEventArgs.AllowedEffects
  - System.Windows.DragEventArgs.Data
  - System.Windows.DragEventArgs.Effects
  - System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.DragEventArgs.KeyStates
  langs:
  - csharp
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.DragEventArgs
  type: Class
  summary: "Zawiera argumenty, które dotyczą wszystkich zdarzeń przeciągania i upuszczania (<xref:System.Windows.DragDrop.DragEnter>, <xref:System.Windows.DragDrop.DragLeave>, <xref:System.Windows.DragDrop.DragOver>, i <xref:System.Windows.DragDrop.Drop>).</xref:System.Windows.DragDrop.Drop> </xref:System.Windows.DragDrop.DragOver> </xref:System.Windows.DragDrop.DragLeave> </xref:System.Windows.DragDrop.DragEnter>"
  syntax:
    content: 'public sealed class DragEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.DragEventArgs.AllowedEffects
  id: AllowedEffects
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: System.Windows.DragEventArgs.AllowedEffects
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera członkiem <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> wyliczenia, która określa, jakie operacje są dozwolone przez autora zdarzenie przeciągania."
  remarks: "Podczas operacji przeciągania i upuszczania jest inicjowane przez wywołanie metody <xref:System.Windows.DragDrop.DoDragDrop%2A>metody dopuszczalna operacji zostały określone z elementem członkowskim o <xref:System.Windows.DragDropEffects>wyliczenie.</xref:System.Windows.DragDropEffects> </xref:System.Windows.DragDrop.DoDragDrop%2A> Na przykład podczas przeciągania pliku tylko do odczytu do inicjatora przeciągania powinny wskazywać, że plik może być kopiowane, ale nie została przeniesiona.  Przed podjęciem próby wykonania operacji na danych przeciąganego, sprawdź tę właściwość, aby upewnić się, że operacja jest dozwolona."
  syntax:
    content: public System.Windows.DragDropEffects AllowedEffects { get; }
    return:
      type: System.Windows.DragDropEffects
      description: "Członek <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> wyliczenia, która określa, jakie operacje są dozwolone przez autora zdarzenie przeciągania."
  overload: System.Windows.DragEventArgs.AllowedEffects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.Data
  id: Data
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: System.Windows.DragEventArgs.Data
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera obiekt danych, który zawiera dane skojarzone z odpowiednie zdarzenie przeciągania."
  syntax:
    content: public System.Windows.IDataObject Data { get; }
    return:
      type: System.Windows.IDataObject
      description: "Obiekt danych, który zawiera dane skojarzone z odpowiednie zdarzenie przeciągania."
  overload: System.Windows.DragEventArgs.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.Effects
  id: Effects
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: System.Windows.DragEventArgs.Effects
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera lub ustawia docelowy operacji przeciągania i upuszczania."
  remarks: "Domyślnie efekt określone w tej właściwości określa wyświetlany kursor myszy dla obiekt docelowy operacji przeciągania i upuszczania. Jest to przydatne w celu otrzymania opinii dla użytkownika na operację, której nastąpi po upuszczeniu odpowiedni obiekt."
  syntax:
    content: public System.Windows.DragDropEffects Effects { get; set; }
    return:
      type: System.Windows.DragDropEffects
      description: "Członek <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> wyliczenie opisujące docelowy operacji przeciągania i upuszczania."
  overload: System.Windows.DragEventArgs.Effects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: DragEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zwraca punkt upuszczania, który jest względnym w stosunku do określonej <xref href=&quot;System.Windows.IInputElement&quot;> </xref>."
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "<xref href=&quot;System.Windows.IInputElement&quot;> </xref> Obiektu, który można pobrać punkt względny upuszczania."
    return:
      type: System.Windows.Point
      description: "Punkt listy jest określane względem elementu określonego w parametrze <code> relativeTo </code>."
  overload: System.Windows.DragEventArgs.GetPosition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Raised when <code>relativeTo</code> is **null**."
  platform:
  - net462
- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "Do dodania."
    - id: genericTarget
      type: System.Object
      description: "Do dodania."
  overload: System.Windows.DragEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.KeyStates
  id: KeyStates
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
  fullName: System.Windows.DragEventArgs.KeyStates
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wyliczenie Flaga wskazująca bieżący stan SHIFT, ALT klawiszy CTRL i, a także stan przycisku myszy."
  remarks: "Wpływ operacji przeciągania i upuszczania można dostosować w zależności od stanu określonego klucza. Na przykład danych mogą być kopiowane lub przenoszone w zależności od tego, czy naciśnięty klawisz CTRL lub SHIFT podczas operacji przeciągania i upuszczania."
  syntax:
    content: public System.Windows.DragDropKeyStates KeyStates { get; }
    return:
      type: System.Windows.DragDropKeyStates
      description: "Jeden lub więcej członków <xref href=&quot;System.Windows.DragDropKeyStates&quot;> </xref> Flaga wyliczenia."
  overload: System.Windows.DragEventArgs.KeyStates*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.DragEventArgs.AllowedEffects
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: System.Windows.DragEventArgs.AllowedEffects
- uid: System.Windows.DragDropEffects
  parent: System.Windows
  isExternal: false
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: System.Windows.DragDropEffects
- uid: System.Windows.DragEventArgs.Data
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: System.Windows.DragEventArgs.Data
- uid: System.Windows.IDataObject
  parent: System.Windows
  isExternal: false
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.IDataObject
- uid: System.Windows.DragEventArgs.Effects
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: System.Windows.DragEventArgs.Effects
- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: DragEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DragEventArgs.KeyStates
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
  fullName: System.Windows.DragEventArgs.KeyStates
- uid: System.Windows.DragDropKeyStates
  parent: System.Windows
  isExternal: false
  name: DragDropKeyStates
  nameWithType: DragDropKeyStates
  fullName: System.Windows.DragDropKeyStates
- uid: System.Windows.DragEventArgs.AllowedEffects*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
- uid: System.Windows.DragEventArgs.Data*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Data
  nameWithType: DragEventArgs.Data
- uid: System.Windows.DragEventArgs.Effects*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Effects
  nameWithType: DragEventArgs.Effects
- uid: System.Windows.DragEventArgs.GetPosition*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: GetPosition
  nameWithType: DragEventArgs.GetPosition
- uid: System.Windows.DragEventArgs.InvokeEventHandler*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: DragEventArgs.InvokeEventHandler
- uid: System.Windows.DragEventArgs.KeyStates*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
