### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Keyboard
  id: Keyboard
  children:
  - Microsoft.VisualBasic.Devices.Keyboard.#ctor
  - Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  - Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.NumLock
  - Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  - Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  langs:
  - csharp
  name: Keyboard
  nameWithType: Keyboard
  fullName: Microsoft.VisualBasic.Devices.Keyboard
  type: Class
  summary: "Dostarcza właściwości, aby uzyskać dostęp do bieżącego stanu klawiatury, takie jak co klucze są obecnie naciśnięty i udostępnia metodę Wyślij naciśnięcia klawiszy do aktywnego okna."
  remarks: "`My.Computer.Keyboard` Obiektu zapewnia interfejs do klawiatury komputera. Właściwości `My.Computer.Keyboard` zawierają informacje o stanie kilka klawisze specjalne. `My.Computer.Keyboard.SendKeys` Metoda pozwala wysyłać klucze do aktywnego okna tak, jakby została wpisana za pomocą klawiatury.      ## Zadania w poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Keyboard` obiektu.      |||   |-|-|   | Aby | Zobacz |   | Wyślij naciśnięcia klawiszy do aplikacji | [Porady: uruchamianie aplikacji i wysłać go uderzenia w klawisze (Visual Basic)](~/add/includes/ajax-current-ext-md.md)|      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is pressed.  \n  \n [!code-vb[VbVbalrMyComputer#36](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#36)]"
  syntax:
    content: public class Keyboard
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.VisualBasic.Devices.Keyboard&quot;> </xref> klasy."
  syntax:
    content: public Keyboard ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  id: AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Pobiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wskazująca, czy klawisz ALT jest wyłączony."
  remarks: "`My.Computer.Keyboard.AltKeyDown` Właściwości zapewnia funkcje podobne do <xref:System.Windows.Forms.Control.ModifierKeys%2A>Właściwości.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.AltKeyDown` property to determine if the computer's ALT key is down.  \n  \n [!code-vb[VbVbalrMyComputer#23](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#23)]"
  syntax:
    content: public bool AltKeyDown { get; }
    return:
      type: System.Boolean
      description: 'A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wartość: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Jeśli klawisz ALT jest dół; w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  id: CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Pobiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wskazującą, czy włączony klawisz CAPS LOCK jest włączony."
  remarks: "Zwracany jest tylko stan włączony klawisz CAPS LOCK.      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.CapsLock` property to determine if the computer's CAPS LOCK is turned on.  \n  \n [!code-vb[VbVbalrMyComputer#50](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#50)]"
  syntax:
    content: public bool CapsLock { get; }
    return:
      type: System.Boolean
      description: 'A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wartość: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Jeśli włączony klawisz CAPS LOCK jest włączony, w przeciwnym <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  id: CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Pobiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wskazująca, czy klawisz CTRL jest wyłączony."
  remarks: "`My.Computer.Keyboard.CtrlKeyDown` Właściwości zapewnia funkcje podobne do <xref:System.Windows.Forms.Control.ModifierKeys%2A>Właściwości.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is down.  \n  \n [!code-vb[VbVbalrMyComputer#34](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#34)]"
  syntax:
    content: public bool CtrlKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli klawisz CTRL jest wyłączony; w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  id: NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Pobiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wskazująca, czy klawisz NUM LOCK jest włączony."
  remarks: "Zwracany jest tylko stan klawisz NUM LOCK.      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.NumLock` property to determine if the computer's NUM LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#48](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#48)]"
  syntax:
    content: public bool NumLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli NUM LOCK jest włączony; w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  id: ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Pobiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wskazująca, czy klucz blokady PRZEWIJANIA jest włączony."
  remarks: "Zwracany jest tylko stan blokady PRZEWIJANIA klucza.      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.ScrollLock` property to determine if the computer's SCROLL LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#31](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#31)]"
  syntax:
    content: public bool ScrollLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>w przypadku blokady PRZEWIJANIA. w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  id: SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Wysyła naciśnięcia klawiszy co najmniej jeden aktywnego okna tak, jakby wpisany na klawiaturze."
  remarks: "`My.Computer.Keyboard.SendKeys` Metoda zapewnia funkcje podobne do <xref:System.Windows.Forms.SendKeys.Send%2A>i <xref:System.Windows.Forms.SendKeys.SendWait%2A>metody.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       `wait` Argument jest przydatne, jeśli inna aplikacja musi zakończyć się przed kontynuowaniem aplikacji.      > [!NOTE] >, Ponieważ nie istnieje metoda zarządzanych do aktywowania innej aplikacji, możesz użyć tej klasy w bieżącej aplikacji, ręcznie wybierz okno, aby wysłać te klucze do lub użyj metody interfejsu API systemu Windows, takich jak `FindWindow` i `SetForegroundWindow`, aby wymusić fokus na inne aplikacje. Aby uzyskać więcej informacji, zobacz [wskazówki: wywoływanie Windows API](~/add/includes/ajax-current-ext-md.md).       `keys` Argument można określić dowolny klawisz, jednego lub dowolny klawisz, w połączeniu z ALT, klawisz CTRL, lub SHIFT (lub dowolna kombinacja tych kluczy). Każdy klucz jest reprezentowany przez jeden lub więcej znaków, takich jak `a` znaku &quot;,&quot; lub `{ENTER}` dla klawisza ENTER.       Aby połączyć klucza z SHIFT, poprzedzać kod klucza z `+` (znak plus). Aby połączyć klucza z klawiszem CTRL, poprzedzać kod klucza z `^` (daszek). Aby połączyć klucza z ALT, poprzedzać kod klucza z `%` (procent). Aby określić identycznych klucze, użyj formy `{` *klucza numer*`}`. Możesz umieścić odstęp między *klucza* i *numer*. Na przykład `{LEFT 42}` oznacza &quot;naciśnij klawisz Strzałka w lewo razy 42&quot;; `{h 10}` oznacza &quot;naciśnij&quot;h&quot;10 razy.&quot;       Poniższa tabela zawiera listę kodów, które mogą służyć do określenia znaki, które nie są wyświetlane po naciśnięciu odpowiedniego klucza (na przykład ENTER lub TAB).      |||   |-|-|   | Klucz | Kod |   | BACKSPACE | {BACKSPACE} lub {BS} |   | PODZIEL | {PODZIEL} |   | WŁĄCZONY KLAWISZ CAPS LOCK | {CAPSLOCK} |   | WYCZYŚĆ | {WYCZYŚĆ} |   | USUŃ | {USUNĄĆ} lub {DEL} |   | STRZAŁKA W DÓŁ | {W DÓŁ} |   | KOŃCOWY | {ZAKOŃCZENIA} |   | Wprowadź (numerycznej) | {WPROWADŹ} |   | WPROWADŹ | ~ |   | ESC | {ESCAPE} lub {ESC} |   | POMOC | {POMOCY} |   | STRONA GŁÓWNA | {HOME} |   | DODATKI | {WSTAWIĆ} |   | STRZAŁKA W LEWO | {LEFT} |   | NUM LOCK | {NUMLOCK} |   | STRONĘ W DÓŁ | {PGDN} |   | STRONA W GÓRĘ | {PGUP} |   | ZWRACA | {ZWRACAĆ} |   | STRZAŁKA W PRAWO | {PRAWO} |   | BLOKADY PRZEWIJANIA | {SCROLL LOCK} |   | KARTA | {KARTA} |   | STRZAŁKA W GÓRĘ | {MAKSYMALNIE} |   | F1 za pośrednictwem klawisz F15 | {F1} do {klawisz F15} |      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> definiuje klawisze służące do wysyłania."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Sytuacja częściowego zaufania istnieje, w którym użytkownik nie ma wystarczających uprawnień."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  id: SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Wysyła naciśnięcia klawiszy co najmniej jeden aktywnego okna tak, jakby wpisany na klawiaturze."
  remarks: "`My.Computer.Keyboard.SendKeys` Metoda zapewnia funkcje podobne do <xref:System.Windows.Forms.SendKeys.Send%2A>i <xref:System.Windows.Forms.SendKeys.SendWait%2A>metody.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       `wait` Argument jest przydatne, jeśli inna aplikacja musi zakończyć się przed kontynuowaniem aplikacji.      > [!NOTE] >, Ponieważ nie istnieje metoda zarządzanych do aktywowania innej aplikacji, możesz użyć tej klasy w bieżącej aplikacji, ręcznie wybierz okno, aby wysłać te klucze do lub użyj metody interfejsu API systemu Windows, takich jak `FindWindow` i `SetForegroundWindow`, aby wymusić fokus na inne aplikacje. Aby uzyskać więcej informacji, zobacz [wskazówki: wywoływanie Windows API](~/add/includes/ajax-current-ext-md.md).       `keys` Argument można określić dowolny klawisz, jednego lub dowolny klawisz, w połączeniu z ALT, klawisz CTRL, lub SHIFT (lub dowolna kombinacja tych kluczy). Każdy klucz jest reprezentowany przez jeden lub więcej znaków, takich jak `a` znaku &quot;,&quot; lub `{ENTER}` dla klawisza ENTER.       Aby połączyć klucza z SHIFT, poprzedzać kod klucza z `+` (znak plus). Aby połączyć klucza z klawiszem CTRL, poprzedzać kod klucza z `^` (daszek). Aby połączyć klucza z ALT, poprzedzać kod klucza z `%` (procent). Aby określić identycznych klucze, użyj formy `{` *klucza numer*`}`. Możesz umieścić odstęp między *klucza* i *numer*. Na przykład `{LEFT 42}` oznacza &quot;naciśnij klawisz Strzałka w lewo razy 42&quot;; `{h 10}` oznacza &quot;naciśnij&quot;h&quot;10 razy.&quot;       Poniższa tabela zawiera listę kodów, które mogą służyć do określenia znaki, które nie są wyświetlane po naciśnięciu odpowiedniego klucza (na przykład ENTER lub TAB).      |||   |-|-|   | Klucz | Kod |   | BACKSPACE | {BACKSPACE} lub {BS} |   | PODZIEL | {PODZIEL} |   | WŁĄCZONY KLAWISZ CAPS LOCK | {CAPSLOCK} |   | WYCZYŚĆ | {WYCZYŚĆ} |   | USUŃ | {USUNĄĆ} lub {DEL} |   | STRZAŁKA W DÓŁ | {W DÓŁ} |   | KOŃCOWY | {ZAKOŃCZENIA} |   | Wprowadź (numerycznej) | {WPROWADŹ} |   | WPROWADŹ | ~ |   | ESC | {ESCAPE} lub {ESC} |   | POMOC | {POMOCY} |   | STRONA GŁÓWNA | {HOME} |   | DODATKI | {WSTAWIĆ} |   | STRZAŁKA W LEWO | {LEFT} |   | NUM LOCK | {NUMLOCK} |   | STRONĘ W DÓŁ | {PGDN} |   | STRONA W GÓRĘ | {PGUP} |   | ZWRACA | {ZWRACAĆ} |   | STRZAŁKA W PRAWO | {PRAWO} |   | BLOKADY PRZEWIJANIA | {SCROLL LOCK} |   | KARTA | {KARTA} |   | STRZAŁKA W GÓRĘ | {MAKSYMALNIE} |   | F1 za pośrednictwem klawisz F15 | {F1} do {klawisz F15} |      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys, bool wait);
    parameters:
    - id: keys
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> definiuje klawisze służące do wysyłania."
    - id: wait
      type: System.Boolean
      description: "Opcjonalny. A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> Określa, czy należy poczekać naciśnięcia klawiszy do przetworzenie przed kontynuowaniem aplikacji. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Domyślnie."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Sytuacja częściowego zaufania istnieje, w którym użytkownik nie ma wystarczających uprawnień."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  id: ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Pobiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wskazująca, czy klawisz SHIFT nie działa."
  remarks: "`My.Computer.Keyboard.ShiftKeyDown` Właściwości zapewnia funkcje podobne do <xref:System.Windows.Forms.Control.ModifierKeys%2A>Właściwości.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacja systemu Windows | **Yes**|   | Biblioteka klas | **Yes**|   | Aplikacja konsolowa | **Yes**|   | Windows kontrolować biblioteki | **Yes**|   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | **Yes**|   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Computer.Keyboard.ShiftKeyDown` property to determine if one of the computer's SHIFT keys is down.  \n  \n [!code-vb[VbVbalrMyComputer#47](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#47)]"
  syntax:
    content: public bool ShiftKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli klawisz SHIFT jest wyłączony; w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard
  nameWithType: Keyboard.Keyboard
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys
  nameWithType: Keyboard.SendKeys
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
