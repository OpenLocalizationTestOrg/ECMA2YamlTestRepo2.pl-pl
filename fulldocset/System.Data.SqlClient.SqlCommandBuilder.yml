### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommandBuilder
  id: SqlCommandBuilder
  children:
  - System.Data.SqlClient.SqlCommandBuilder.#ctor
  - System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)
  - System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  - System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  - System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  - System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand
  - System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand
  - System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)
  - System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)
  - System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand
  - System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  - System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  - System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  - System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)
  langs:
  - csharp
  name: SqlCommandBuilder
  nameWithType: SqlCommandBuilder
  fullName: System.Data.SqlClient.SqlCommandBuilder
  type: Class
  summary: "Automatycznie generuje polecenia pojedynczej tabeli, które są używane do zmian do uzgodnienia <xref href=&quot;System.Data.DataSet&quot;> </xref> z skojarzonej bazie danych programu SQL Server. Ta klasa nie może być dziedziczona."
  remarks: "<xref:System.Data.SqlClient.SqlDataAdapter>Nie automatycznie wygenerować instrukcji języka Transact-SQL wymagane do uzgodnienia zmian <xref:System.Data.DataSet>z skojarzonego wystąpienia programu SQL Server.</xref:System.Data.DataSet> </xref:System.Data.SqlClient.SqlDataAdapter> Jednak można utworzyć obiektu SqlCommandBuilder można automatycznie wygenerować instrukcji języka Transact-SQL aktualizacje pojedynczej tabeli, jeśli <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>Właściwość <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Następnie żadnych dodatkowych instrukcji języka Transact-SQL, które nie zostały ustawione są generowane przez SqlCommandBuilder.       SqlCommandBuilder rejestrowane jako odbiornika dla <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>zdarzenia przy każdym ustawieniu <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A>Właściwości.</xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> </xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> Można skojarzyć tylko jedną <xref:System.Data.SqlClient.SqlDataAdapter>lub obiektu o SqlCommandBuilder ze sobą w tym samym czasie.</xref:System.Data.SqlClient.SqlDataAdapter>       Aby wygenerować instrukcje INSERT, UPDATE lub DELETE, używa SqlCommandBuilder <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>właściwość, aby automatycznie pobrać wymagane zestawu metadanych.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Jeśli zmienisz <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>po ma zostały pobrane metadane, takie jak po pierwszej aktualizacji, należy wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>metody w celu zaktualizowania metadanych.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>       `SelectCommand` Musi także zwracać co najmniej jeden klucz podstawowy lub unikatowy kolumny. Jeśli nie są obecne, **InvalidOperation** wygenerowany wyjątek i nie są generowane polecenia.       Używa również SqlCommandBuilder <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>i <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>Właściwości odwołuje się <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlCommand.Transaction%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> Użytkownik powinien wywoływać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>czy co najmniej jeden z tych właściwości są modyfikowane, czy <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>sam zostanie zastąpiony.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> W przeciwnym razie <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, i <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>Właściwości zachowują swoje poprzedniej wartości.</xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>       Jeśli należy wywołać <xref:System.ComponentModel.Component.Dispose%2A>, SqlCommandBuilder są oddzielone od <xref:System.Data.SqlClient.SqlDataAdapter>, i generowane polecenia nie są już używane.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses the <xref:System.Data.SqlClient.SqlCommand>, along <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select rows from a data source. The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table. The example then creates a SqlCommandBuilder.  \n  \n [!code-vb[Classic WebData SqlCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._12_1.vb)]\n [!code-cs[Classic WebData SqlCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.sqlclient._12_1.cs)]"
  syntax:
    content: 'public sealed class SqlCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SqlCommandBuilder()
  nameWithType: SqlCommandBuilder.SqlCommandBuilder()
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> klasy."
  syntax:
    content: public SqlCommandBuilder ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)
  id: '#ctor(System.Data.SqlClient.SqlDataAdapter)'
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SqlCommandBuilder(SqlDataAdapter)
  nameWithType: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> klasa ze skojarzonym <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> obiektu."
  remarks: "<xref:System.Data.SqlClient.SqlCommandBuilder>Rejestrowane jako odbiornika dla <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>zdarzeń generowanych przez <xref:System.Data.SqlClient.SqlDataAdapter>określone w tej właściwości.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> </xref:System.Data.SqlClient.SqlCommandBuilder>       Po utworzeniu nowego wystąpienia <xref:System.Data.SqlClient.SqlCommandBuilder>, wszelkie istniejące <xref:System.Data.SqlClient.SqlCommandBuilder>skojarzony z tym <xref:System.Data.SqlClient.SqlDataAdapter>zwolnieniu.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder>"
  syntax:
    content: public SqlCommandBuilder (System.Data.SqlClient.SqlDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.SqlClient.SqlDataAdapter
      description: "Nazwa <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "Do dodania."
    - id: datarow
      type: System.Data.DataRow
      description: "Do dodania."
    - id: statementType
      type: System.Data.StatementType
      description: "Do dodania."
    - id: whereClause
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  id: CatalogLocation
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: CatalogLocation
  nameWithType: SqlCommandBuilder.CatalogLocation
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ustawia lub pobiera <xref href=&quot;System.Data.Common.CatalogLocation&quot;> </xref> dla wystąpienia <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> klasy."
  syntax:
    content: public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }
    return:
      type: System.Data.Common.CatalogLocation
      description: "A <xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  id: CatalogSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: CatalogSeparator
  nameWithType: SqlCommandBuilder.CatalogSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ustawia lub pobiera ciąg używany jako separator katalogu dla wystąpienia <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> klasy."
  syntax:
    content: public override string CatalogSeparator { get; set; }
    return:
      type: System.String
      description: "Ciąg separatora katalogu do użytku z wystąpieniem <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> klasy."
  overload: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: SqlCommandBuilder.DataAdapter
  fullName: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> obiektu języka Transact-SQL, które instrukcje są generowane automatycznie."
  remarks: "<xref:System.Data.SqlClient.SqlCommandBuilder>Rejestrowane jako odbiornika dla <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>zdarzeń generowanych przez <xref:System.Data.SqlClient.SqlDataAdapter>określone w tej właściwości.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> </xref:System.Data.SqlClient.SqlCommandBuilder>       Po utworzeniu nowego wystąpienia <xref:System.Data.SqlClient.SqlCommandBuilder>, wszelkie istniejące <xref:System.Data.SqlClient.SqlCommandBuilder>skojarzony z tym <xref:System.Data.SqlClient.SqlDataAdapter>zwolnieniu.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder>"
  syntax:
    content: public System.Data.SqlClient.SqlDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.SqlClient.SqlDataAdapter
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)
  id: DeriveParameters(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(SqlCommand)
  nameWithType: SqlCommandBuilder.DeriveParameters(SqlCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera informacje o parametrach z procedury składowanej określone w <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> i wypełnia <xref:System.Data.SqlClient.SqlCommand.Parameters*>kolekcji z określonym <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu.</xref:System.Data.SqlClient.SqlCommand.Parameters*>"
  remarks: "`DeriveParameters`zastępuje wszelkie istniejące informacje o parametrach dla `SqlDbCommand`.       `DeriveParameters`wymaga dodatkowych wywołania do bazy danych w celu uzyskania informacji. Jeśli informacje o parametrach jest znana wcześniej, jest bardziej wydajne, aby wypełnić kolekcji parametrów, jawnie ustawiając informacje.       Można używać tylko `DeriveParameters` z procedur składowanych. Nie można użyć `DeriveParameters` o rozszerzonych procedur składowanych. Nie można użyć `DeriveParameters` do wypełnienia <xref:System.Data.SqlClient.SqlParameterCollection>z dowolnego instrukcje języka Transact-SQL, na przykład sparametryzowanych instrukcji SELECT.</xref:System.Data.SqlClient.SqlParameterCollection>       Aby uzyskać więcej informacji, zobacz [konfigurowania parametrów i typ danych parametru](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void DeriveParameters (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> Odwołuje się do procedury składowanej, z którego ma pochodzić informacje o parametrach. Pochodne parametry są dodawane do <xref:System.Data.SqlClient.SqlCommand.Parameters*>Kolekcja <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Parameters*>"
  overload: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tekst polecenia nie jest nazwą prawidłową procedury składowanej."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: SqlCommandBuilder.GetDeleteCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera automatycznie generowanych <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu wymagane do przeprowadzenia usunięć w bazie danych."
  remarks: "Aplikacja może używać metody GetDeleteCommand do celów informacyjnych lub rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.SqlClient.SqlCommand>obiektu do wykonania.</xref:System.Data.SqlClient.SqlCommand>       Umożliwia także GetDeleteCommand jako podstawa zmodyfikowane polecenia. Na przykład może wywołać GetDeleteCommand i zmodyfikować <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>wartość, a następnie jawnie ustawiona na <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>       Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Zmiana instrukcji w dowolny sposób.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> W przeciwnym razie GetDeleteCommand będzie nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A>lub GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Automatycznie wygenerowany <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu wymagane do przeprowadzenia usunięć."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera automatycznie generowanych <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiekt, który jest wymagany do wykonania usunięć w bazie danych."
  remarks: "Aplikacja może użyć <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.SqlClient.SqlCommand>obiektu do wykonania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>       Można również użyć <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>jako podstawa polecenia zmodyfikowane.</xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> Na przykład może wywołać <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>i zmodyfikować <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>wartość, a następnie jawnie ustawiona na <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>       Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Zmiana instrukcji w dowolny sposób.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> W przeciwnym razie <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe.</xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A>lub <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.OleDb.OleDbCommandBuilder>wygenerować parametrów na podstawie nazwy kolumny.</xref:System.Data.OleDb.OleDbCommandBuilder> To powiedzie się tylko wtedy, gdy są spełnione następujące warunki: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>kolekcji została określona, a jego długość jest równa lub większa niż nazwa parametru wygenerowanego.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Nazwę parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>kolekcji wyrażenia regularnego.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>określono kolekcji.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, generowanie nazwy parametrów, jeśli to możliwe pasujące nazwy kolumny. Jeśli <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, generowanie @p1, @p2i tak dalej."
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Automatycznie wygenerowany <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiekt, który jest wymagany do wykonania usunięć."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: SqlCommandBuilder.GetInsertCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera automatycznie generowanych <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu wymagane do przeprowadzenia operacji wstawienia na bazie danych."
  remarks: "Aplikacja może używać metody GetInsertCommand do celów informacyjnych lub rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.SqlClient.SqlCommand>obiektu do wykonania.</xref:System.Data.SqlClient.SqlCommand>       Umożliwia także GetInsertCommand jako podstawa zmodyfikowane polecenia. Na przykład może wywołać GetInsertCommand i zmodyfikować <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>wartość, a następnie jawnie ustawiona na <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>       Po instrukcji języka Transact-SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Zmiana instrukcji w dowolny sposób.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> W przeciwnym razie GetInsertCommand będzie nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcji języka Transact-SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A>lub GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Automatycznie wygenerowany <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu wymagane do przeprowadzenia operacji wstawienia."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera automatycznie generowanych <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiekt, który jest wymagane do przeprowadzenia operacji wstawienia na bazie danych."
  remarks: "Aplikacja może użyć <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.SqlClient.SqlCommand>obiektu do wykonania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>       Można również użyć <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>jako podstawa polecenia zmodyfikowane.</xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> Na przykład może wywołać <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>i zmodyfikować <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>wartość, a następnie jawnie ustawiona na <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>       Po instrukcji języka Transact-SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Zmiana instrukcji w dowolny sposób.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> W przeciwnym razie <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe.</xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> Instrukcji języka Transact-SQL najpierw są generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A>lub <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.OleDb.OleDbCommandBuilder>wygenerować parametrów na podstawie nazwy kolumny.</xref:System.Data.OleDb.OleDbCommandBuilder> To powiedzie się tylko wtedy, gdy są spełnione następujące warunki: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>kolekcji została określona, a jego długość jest równa lub większa niż nazwa parametru wygenerowanego.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Nazwę parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>kolekcji wyrażenia regularnego.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>określono kolekcji.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, generowanie nazwy parametrów, jeśli to możliwe pasujące nazwy kolumny. Jeśli <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, generowanie @p1, @p2i tak dalej."
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Automatycznie wygenerowany <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiekt, który jest wymagany do wykonania operacji wstawienia."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: SqlCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Do dodania."
    return:
      type: System.String
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: SqlCommandBuilder.GetParameterName(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "Do dodania."
    return:
      type: System.String
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: SqlCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Do dodania."
    return:
      type: System.String
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  id: GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetSchemaTable(DbCommand)
  nameWithType: SqlCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand srcCommand);
    parameters:
    - id: srcCommand
      type: System.Data.Common.DbCommand
      description: "Do dodania."
    return:
      type: System.Data.DataTable
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: SqlCommandBuilder.GetUpdateCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera automatycznie generowanych <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu wymagane do przeprowadzenia aktualizacji w bazie danych."
  remarks: "Aplikacja może używać metody GetUpdateCommand do celów informacyjnych lub rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.SqlClient.SqlCommand>obiektu do wykonania.</xref:System.Data.SqlClient.SqlCommand>       Umożliwia także GetUpdateCommand jako podstawa zmodyfikowane polecenia. Na przykład może wywołać GetUpdateCommand i zmodyfikować <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>wartość, a następnie jawnie ustawiona na <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>       Po instrukcji języka Transact-SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Zmiana instrukcji w dowolny sposób.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> W przeciwnym razie GetUpdateCommand będzie nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcji języka Transact-SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A>lub GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Automatycznie wygenerowany <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiekt, który jest wymagane do przeprowadzenia aktualizacji."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera automatycznie generowanych <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu wymagane do przeprowadzenia aktualizacji w bazie danych."
  remarks: "Aplikacja może użyć <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.SqlClient.SqlCommand>obiektu do wykonania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>       Można również użyć <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>jako podstawa polecenia zmodyfikowane.</xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> Na przykład może wywołać <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>i zmodyfikować <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>wartość, a następnie jawnie ustawiona na <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>       Po instrukcji języka Transact-SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Zmiana instrukcji w dowolny sposób.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> W przeciwnym razie <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe.</xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> Instrukcji języka Transact-SQL najpierw są generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A>lub <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.OleDb.OleDbCommandBuilder>wygenerować parametrów na podstawie nazwy kolumny.</xref:System.Data.OleDb.OleDbCommandBuilder> To powiedzie się tylko wtedy, gdy są spełnione następujące warunki: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>kolekcji została określona, a jego długość jest równa lub większa niż nazwa parametru wygenerowanego.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Nazwę parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>kolekcji wyrażenia regularnego.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>zwrócony z **GetSchema** metody wywołania i znaleźć w <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>określono kolekcji.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, generowanie nazwy parametrów, jeśli to możliwe pasujące nazwy kolumny. Jeśli <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, generowanie @p1, @p2i tak dalej."
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Automatycznie wygenerowany <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu wymagane do przeprowadzenia aktualizacji."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  id: InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: InitializeCommand(DbCommand)
  nameWithType: SqlCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "Do dodania."
    return:
      type: System.Data.Common.DbCommand
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: SqlCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość prawidłowego formularza tego identyfikatora w cudzysłowach. W tym poprawnie anulowanie wszelkie cudzysłowy osadzony w identyfikatorze."
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "Oryginalny identyfikator bez cudzysłowów."
    return:
      type: System.String
      description: "Identyfikator wersja ujętego w cudzysłów. Osadzone cudzysłowy wewnątrz identyfikator poprawnie będą miały zmienione znaczenie."
  overload: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  id: QuotePrefix
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: QuotePrefix
  nameWithType: SqlCommandBuilder.QuotePrefix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia początkową znaku lub znaków do użycia podczas określania obiektów bazy danych programu SQL Server, takich jak tabele lub kolumny, których nazwy zawierają znaki, takie jak spacje lub zastrzeżone tokenów."
  remarks: >-
    > [!NOTE]

    >  Although you cannot change the QuotePrefix or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a DataAdapter.
  syntax:
    content: public override string QuotePrefix { get; set; }
    return:
      type: System.String
      description: "Początkowy znak lub znaków do użycia. Wartość domyślna to ciąg pusty."
  overload: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie można zmienić tej właściwości po INSERT, UPDATE, lub wygenerowaniu polecenia DELETE."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  id: QuoteSuffix
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: QuoteSuffix
  nameWithType: SqlCommandBuilder.QuoteSuffix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia znak końcowy lub znaków do użycia podczas określania obiektów bazy danych programu SQL Server, takich jak tabele lub kolumny, których nazwy zawierają znaki, takie jak spacje lub zastrzeżone tokenów."
  remarks: >-
    > [!NOTE]

    >  Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or QuoteSuffix properties after an insert, update, or delete operation has been generated, you can change their settings after calling the `Update` method of a DataAdapter.
  syntax:
    content: public override string QuoteSuffix { get; set; }
    return:
      type: System.String
      description: "Końcowy znak lub znaków do użycia. Wartość domyślna to ciąg pusty."
  overload: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie można zmienić tej właściwości, po wygenerowaniu insert, update lub polecenia delete."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  id: SchemaSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SchemaSeparator
  nameWithType: SqlCommandBuilder.SchemaSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia znak używany dla tego separatora między identyfikatora schematu i inne identyfikatory."
  remarks: "Ogólnie rzecz biorąc serwerów baz danych wskazuje schematu dla identyfikatora oddzielając nazwy schematu z identyfikatora niektórych znakiem. Na przykład program SQL Server używa okres, tworzenie pełne identyfikatory jak Person.CustomerName, gdzie nazwa schematu jest &quot;Osoba&quot; i &quot;CustomerName&quot; jest identyfikatorem. Ustawienie tej właściwości umożliwia deweloperom zmienić to zachowanie."
  syntax:
    content: public override string SchemaSeparator { get; set; }
    return:
      type: System.String
      description: "Znak, który ma być używany jako separator schematu."
  overload: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: SqlCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Podany identyfikatora ujętego w cudzysłów zwraca w postaci bez cudzysłowu poprawny identyfikator. W tym poprawnie unescaping wszelkie cudzysłowy osadzony w identyfikatorze."
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "Identyfikator, który będzie miał jego osadzone cudzysłowy usunięte."
    return:
      type: System.String
      description: "Identyfikator bez cudzysłowów cudzysłowem osadzonym odpowiednio niecytowana."
  overload: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SqlCommandBuilder()
  nameWithType: SqlCommandBuilder.SqlCommandBuilder()
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder()
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SqlCommandBuilder(SqlDataAdapter)
  nameWithType: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
- uid: System.Data.SqlClient.SqlDataAdapter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter
  fullName: System.Data.SqlClient.SqlDataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: SqlCommandBuilder.CatalogLocation
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
- uid: System.Data.Common.CatalogLocation
  parent: System.Data.Common
  isExternal: false
  name: CatalogLocation
  nameWithType: CatalogLocation
  fullName: System.Data.Common.CatalogLocation
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: SqlCommandBuilder.CatalogSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: SqlCommandBuilder.DataAdapter
  fullName: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DeriveParameters(SqlCommand)
  nameWithType: SqlCommandBuilder.DeriveParameters(SqlCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: SqlCommandBuilder.GetDeleteCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand()
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: SqlCommandBuilder.GetInsertCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand()
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: SqlCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: SqlCommandBuilder.GetParameterName(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(String)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: SqlCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetSchemaTable(DbCommand)
  nameWithType: SqlCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(DbCommand)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: SqlCommandBuilder.GetUpdateCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand()
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: InitializeCommand(DbCommand)
  nameWithType: SqlCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(DbCommand)
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: SqlCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: SqlCommandBuilder.QuotePrefix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: SqlCommandBuilder.QuoteSuffix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: SqlCommandBuilder.SchemaSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: SqlCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SqlCommandBuilder
  nameWithType: SqlCommandBuilder.SqlCommandBuilder
- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: SqlCommandBuilder.ApplyParameterInfo
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: SqlCommandBuilder.CatalogLocation
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: SqlCommandBuilder.CatalogSeparator
- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: SqlCommandBuilder.DataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: SqlCommandBuilder.DeriveParameters
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: SqlCommandBuilder.GetDeleteCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: SqlCommandBuilder.GetInsertCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: SqlCommandBuilder.GetParameterName
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: SqlCommandBuilder.GetParameterPlaceholder
- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetSchemaTable
  nameWithType: SqlCommandBuilder.GetSchemaTable
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: SqlCommandBuilder.GetUpdateCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: InitializeCommand
  nameWithType: SqlCommandBuilder.InitializeCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: SqlCommandBuilder.QuoteIdentifier
- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: SqlCommandBuilder.QuotePrefix
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: SqlCommandBuilder.QuoteSuffix
- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: SqlCommandBuilder.SchemaSeparator
- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: SqlCommandBuilder.UnquoteIdentifier
