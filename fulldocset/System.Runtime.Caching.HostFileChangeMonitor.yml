### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.HostFileChangeMonitor
  id: HostFileChangeMonitor
  children:
  - System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  - System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  - System.Runtime.Caching.HostFileChangeMonitor.LastModified
  - System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  langs:
  - csharp
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor
  fullName: System.Runtime.Caching.HostFileChangeMonitor
  type: Class
  summary: "Monitoruje katalogów i ścieżki plików i powiadamia pamięć podręczna zmian monitorowanych elementów. Ta klasa nie może być dziedziczona."
  remarks: "Klasa HostFileChangeMonitor jest konkretną implementację <xref:System.Runtime.Caching.FileChangeMonitor>typu.</xref:System.Runtime.Caching.FileChangeMonitor> Ta klasa jest zapieczętowany, dlatego nie może zostać rozszerzony. Ta klasa jest przydatna, jeśli chcesz korzystać z istniejącej implementacji pamięci podręcznej i monitorować pliki i katalogi zmian.       Dla każdego określonego pliku lub ścieżkę katalogu klasy HostFileChangeMonitor wyzwala powiadomienie o zmianie, jeśli wystąpienia któregokolwiek z następujących zmian: — Nazwa pliku monitorowanych lub zmiany katalogu.      -Określonego pliku lub katalogu nie został znaleziony w czasie monitor został utworzony, ale został później utworzony. Innymi słowy plik lub katalog został utworzony w zakresie monitorowanych elementów.      -Rozmiar pliku monitorowanych zmienione.      -Zawartość pliku monitorowanych zmieniona lub zawartość katalogu monitorowanych zmieniony.      — Zmieniono z listy kontroli dostępu (ACL) pliku lub katalogu.      -Monitorowanych plik lub katalog został usunięty.       Zbyt wiele zmian monitorowanych pliku lub katalogu w tym samym czasie, może spowodować utratę śledzenie zmian określonego przez wystąpienie HostFileChangeMonitor. W tym scenariuszu klasy HostFileChangeMonitor wyzwala powiadomienie o zmianie. Ten scenariusz jest częściej, gdy wystąpienie HostFileChangeMonitor monitoruje katalogu i wiele zmian w zakresie struktura katalogów w krótkim czasie.       Ponieważ klasa HostFileChangeMonitor ma na celu tylko sygnału elementu została zmieniona między zestaw monitorowane pliki i katalogi, nie uznaje się ważne szczegółowe informacje o określonej zmiany nie są przechwytywane. Cel klasy HostFileChangeMonitor jest zapewnienie powiadomienie, że stan zmienione tak, aby wpis pamięci podręcznej (lub wpisy) może zostać wykluczony. Ponieważ klasa HostFileChangeMonitor nie wskazuje dokładnie co zmienione, śledzenie zmian wewnętrzny przepełnienie nie ma znaczenia.       Jeśli podasz ścieżki do wystąpienia HostFileChangeMonitor ścieżki katalogów i plików muszą być pełne ścieżki do pliku lub katalogu. Ścieżki względne i symboli wieloznacznych w ścieżkach są niedozwolone.       Klasa HostFileChangeMonitor jest używana w aplikacji ASP.NET, tożsamość systemu Windows, który służy do uzyskiwania dostępu do monitorowanych elementów jest tożsamość aplikacji dla aplikacji ASP.NET. Innymi słowy, tożsamość aplikacji będzie jedną z następujących czynności:-tożsamości procesu.      -Skonfigurowanych tożsamość aplikacji.      -UNC poświadczeń, gdy aplikacja jest uruchomiona w udziale UNC.       Gdy klasa HostFileChangeMonitor jest używana w aplikacji ASP.NET z systemem innym niż <xref:System.IO.FileSystemWatcher>Klasa jest używana wewnętrznie w celu monitorowania plików.</xref:System.IO.FileSystemWatcher> W związku z tym niezależnie od listy kontroli dostępu (ACL) dotyczy monitorowanych plik lub katalog jest stosowany do tożsamości systemu Windows bieżącego wątku.      > [!NOTE] > Wywołującym musi mieć odpowiedni poziom uprawnień zabezpieczeń (CAS) dostępu do kodu i musi mieć uprawnienia systemu plików NTFS do katalogów wszystkie monitorowane i ścieżki."
  example:
  - "The following example creates a cache item that uses a HostFileChangeMonitor object to monitor the state of the source data (which is a file) on the file system. The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object to provide eviction and expiration details for the cache entry.  \n  \n [!code-cs[CachingASPNetApplications#1](~/add/codesnippet/csharp/t-system.runtime.caching_2_1.cs)]\n [!code-vb[CachingASPNetApplications#1](~/add/codesnippet/visualbasic/t-system.runtime.caching_2_1.vb)]"
  syntax:
    content: 'public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor'
  inheritance:
  - System.Object
  - System.Runtime.Caching.ChangeMonitor
  - System.Runtime.Caching.FileChangeMonitor
  implements: []
  inheritedMembers:
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String})'
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> klasy."
  remarks: "Wywołania konstruktora HostFileChangeMonitor należy podać wartość inną niż null dla `filePaths` parametru. Co najmniej konstruktora weryfikuje zbiór ścieżki, który jest przekazywany do niego, a następnie inicjuje monitorowania tych ścieżek.      > [!NOTE] > Konstruktora poprawności tylko ciąg nazwy ścieżki. Nie canonicalize ścieżki lub sprawdzić, czy istnieją ścieżki."
  syntax:
    content: public HostFileChangeMonitor (System.Collections.Generic.IList<string> filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Generic.IList{System.String}
      description: "Lista zawierająca co najmniej jeden katalog ścieżek lub pliku do monitorowania."
  overload: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filePaths</code>zawiera elementy, zero.       - lub - ścieżki w <code>filePaths</code> lista jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty."
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  id: FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera kolekcję katalogów i ścieżki plików, które zostało przekazane do &lt;xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A&gt; konstruktora."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<string> FilePaths { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Kolekcja katalogów i ścieżki plików."
  overload: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  id: LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera wartość tylko do odczytu, która wskazuje godzinę ostatniego zapisu monitorowanych pliku lub ścieżki."
  remarks: "Jeśli monitor zmianę pliku monitoruje wiele plików lub ścieżki, ta właściwość zwraca czas ostatniego zapisu w zestawie wszystkie pliki i ścieżki."
  syntax:
    content: public override DateTimeOffset LastModified { get; }
    return:
      type: System.DateTimeOffset
      description: "Ostatni zapis czasu monitorowanych pliku lub ścieżki."
  overload: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera identyfikator <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> wystąpienie, które jest oparte na zestawie monitorowanych katalogów i ścieżki plików."
  remarks: "Ciąg, który stanowi unikatowy identyfikator wartość właściwości jest tworzony z następujących części:-ścieżka pliku lub katalogu.      -Najbardziej ostatnie czas zapisu na czas UTC, mierzona jako Takty, ale reprezentowane jako ciąg szesnastkowy.      Rozmiar pliku reprezentowane jako ciąg szesnastkowy.       Jeśli monitor zmiany pliku monitoruje wiele ścieżek, informacje zwracane przez tę właściwość jest połączone w jeden ciąg dla wszystkich monitorowanych katalogów i ścieżki plików."
  syntax:
    content: public override string UniqueId { get; }
    return:
      type: System.String
      description: "Identyfikator monitora zmiany."
  overload: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.FileChangeMonitor
  isExternal: false
  name: System.Runtime.Caching.FileChangeMonitor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: HostFileChangeMonitor.Dispose
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
