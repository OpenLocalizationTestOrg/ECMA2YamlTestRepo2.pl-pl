### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACMD5
  id: HMACMD5
  children:
  - System.Security.Cryptography.HMACMD5.#ctor
  - System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  langs:
  - csharp
  name: HMACMD5
  nameWithType: HMACMD5
  fullName: System.Security.Cryptography.HMACMD5
  type: Class
  summary: "Oblicza Hash-based wiadomości kod uwierzytelniania (HMAC) przy użyciu <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> funkcji generowania skrótów."
  remarks: "HMACMD5 jest typem algorytm skrótu z kluczem jest utworzone na podstawie funkcji skrótu Message Digest algorytm 5 (MD5) i używać jako Hash-based kodu (metoda HMAC Message Authentication). Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie, a następnie stosuje funkcję skrótu po raz drugi. Wynikowy skrót ma długość 128 bitów.       HMAC może służyć do określenia, czy została naruszona komunikatu wysłanego za pośrednictwem niezabezpieczonego kanału, pod warunkiem, że nadawca i odbiorca udostępnić klucz tajny. Nadawca oblicza wartość skrótu dla oryginalnych danych i wysyła oryginalnych danych i wartości skrótu jako pojedynczej wiadomości. Odbiornik ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczona HMAC zgodny przesyłane HMAC.       Każda zmiana danych lub wartość skrótu powoduje niezgodność, ponieważ wiedzy klucz tajny musi zmienić komunikat i Odtwórz wartość skrótu poprawne. W związku z tym jeśli wartości skrótu oryginalny i obliczona zgodne, wiadomość została uwierzytelniona.       MD5 jest algorytm skrótu kryptograficznego opracowywane w laboratoriach RSA. HMACMD5 akceptuje klucze o dowolnym rozmiarze i tworzy sekwencję wyznaczania wartości skrótu, która wynosi 128 bitów długości."
  example:
  - "The following example shows how to sign a file by using the HMACMD5 object and then how to verify the file.  \n  \n [!code-cs[HMACMD5#1](~/add/codesnippet/csharp/t-system.security.crypto_58_1.cs)]\n [!code-cpp[HMACMD5#1](~/add/codesnippet/cpp/t-system.security.crypto_58_1.cpp)]\n [!code-vb[HMACMD5#1](~/add/codesnippet/visualbasic/t-system.security.crypto_58_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACMD5 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACMD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACMD5
  langs:
  - csharp
  name: HMACMD5()
  nameWithType: HMACMD5.HMACMD5()
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> przy użyciu losowo wygenerowany klucz."
  remarks: "<xref:System.Security.Cryptography.HMACMD5>jest typem algorytm skrótu z kluczem jest utworzone na podstawie funkcji skrótu MD5 i używany jako Hash-based kodu (metoda HMAC Message Authentication).</xref:System.Security.Cryptography.HMACMD5> Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie, a następnie stosuje funkcję skrótu po raz drugi. Wynikowy skrót ma długość 128 bitów.       Ten konstruktor korzysta z 64-bajtowych, losowo wygenerowany klucz."
  syntax:
    content: public HMACMD5 ();
    parameters: []
  overload: System.Security.Cryptography.HMACMD5.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACMD5
  langs:
  - csharp
  name: HMACMD5(Byte[])
  nameWithType: HMACMD5.HMACMD5(Byte[])
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> przy użyciu określonego klucza."
  remarks: "<xref:System.Security.Cryptography.HMACMD5>jest typem algorytm skrótu z kluczem jest utworzone na podstawie funkcji skrótu MD5 i używany jako Hash-based kodu (metoda HMAC Message Authentication).</xref:System.Security.Cryptography.HMACMD5> Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie, a następnie stosuje funkcję skrótu po raz drugi. Wynikowy skrót ma długość 128 bitów.       Ten konstruktor korzysta z klucza umożliwiają tworzenie <xref:System.Security.Cryptography.HMACMD5>obiektu.</xref:System.Security.Cryptography.HMACMD5>"
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACMD5> class.
  syntax:
    content: public HMACMD5 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "Klucz tajny dla <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> szyfrowania. Klucz może być dowolną długość, ale jeśli jest więcej niż 64 bajty będzie mieszany, (przy użyciu algorytmu SHA-1) do uzyskania klucza 64 bajtów. W związku z tym zalecany rozmiar klucz tajny jest 64 bajtów."
  overload: System.Security.Cryptography.HMACMD5.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACMD5.#ctor
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5()
  nameWithType: HMACMD5.HMACMD5()
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5()
- uid: System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5(Byte[])
  nameWithType: HMACMD5.HMACMD5(Byte[])
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACMD5.#ctor*
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5
  nameWithType: HMACMD5.HMACMD5
