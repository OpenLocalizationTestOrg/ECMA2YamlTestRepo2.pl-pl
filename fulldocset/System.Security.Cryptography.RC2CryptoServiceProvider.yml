### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RC2CryptoServiceProvider
  id: RC2CryptoServiceProvider
  children:
  - System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  - System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  langs:
  - csharp
  name: RC2CryptoServiceProvider
  nameWithType: RC2CryptoServiceProvider
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider
  type: Class
  summary: "Definiuje obiektu do implementacji dostawcy usług kryptograficznych <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> algorytmu. Ta klasa nie może być dziedziczona."
  remarks: "Implementacja RC2CryptoServiceProvider obsługuje długości kluczy z 40 bitów 128 bitów w przyrostach 8 bitów.       Obiekt RC2CryptoServiceProvider jest szyfry blokowe, który szyfruje i odszyfrowuje dane w blokach 8 bajtów.  Ta klasa dopełnia końcowego bloku danych, jeśli jest mniejszy niż 8 bajtów.  W wyniku tego uzupełnienia długość zaszyfrowanych danych może być większa niż oryginalny zwykły tekst.       Należy pamiętać, że obiekt RC2CryptoServiceProvider nie soli.      > [!NOTE] > Nowszej algorytmu szyfrowania symetrycznego Advanced Encryption Standard (AES), jest dostępna. Należy wziąć pod uwagę przy użyciu <xref:System.Security.Cryptography.Aes>algorytmu i pochodne zamiast klasy RC2CryptoServiceProvider.</xref:System.Security.Cryptography.Aes> Użyj RC2CryptoServiceProvider tylko w celu zapewnienia zgodności z starszych aplikacji i danych."
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/t-system.security.crypto_11_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_11_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.RC2
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.RC2.Create
  - System.Security.Cryptography.RC2.Create(System.String)
  - System.Security.Cryptography.RC2.EffectiveKeySizeValue
  - System.Security.Cryptography.RC2.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: RC2CryptoServiceProvider()
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.RC2CryptoServiceProvider&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_73_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_73_1.vb)]"
  syntax:
    content: public RC2CryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można uzyskać dostawcy usług kryptograficznych (CSP)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Znaleziono niezgodne algorytmu FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Tworzy symetrycznego <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> odszyfrowujący obiektu z określonym kluczem (<>*>) i wektor inicjowania (<>*>)."
  remarks: "Ta metoda jest używany do odszyfrowywania wiadomości zaszyfrowanych utworzone za pomocą <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A>przeciążenia z takimi samymi parametrami.</xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/6db44da5-ba5f-4459-90f5-_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/6db44da5-ba5f-4459-90f5-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "Klucz tajny dla algorytmu symetrycznego."
    - id: rgbIV
      type: System.Byte[]
      description: "Wektor inicjowania dla algorytmu symetrycznego."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Symetryczne <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> obiekt deskryptora."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> Użyto tryb szyfrowania.       - lub - A <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> użyto tryb szyfru o rozmiarze opinie innych niż 8 bitów.       - lub - użyto nieprawidłowym rozmiarem klucza.       - lub - rozmiar klucza algorytmu nie jest dostępna."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Tworzy symetrycznego <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> modułu szyfrującego obiektu z określonym kluczem (<>*>) i wektor inicjowania (<>*>)."
  remarks: "Użyj <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A>przeciążenia z takimi samymi parametrami odszyfrować wyniku tej metody.</xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/78d990fe-60aa-40f6-ad5c-_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/78d990fe-60aa-40f6-ad5c-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "Klucz tajny dla algorytmu symetrycznego."
    - id: rgbIV
      type: System.Byte[]
      description: "Wektor inicjowania dla algorytmu symetrycznego."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Symetryczne <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> obiektu modułu szyfrującego."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> Użyto tryb szyfrowania.       - lub - A <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> użyto tryb szyfru o rozmiarze opinie innych niż 8 bitów.       - lub - użyto nieprawidłowym rozmiarem klucza.       - lub - rozmiar klucza algorytmu nie jest dostępna."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  id: EffectiveKeySize
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pobiera lub ustawia rozmiar skuteczne w bitach klucza tajnego używane przez <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> algorytmu."
  syntax:
    content: public override int EffectiveKeySize { get; set; }
    return:
      type: System.Int32
      description: "Skuteczne rozmiar klucza w bitach, używany przez <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> algorytmu."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "Właściwość EffectiveKeySize została ustawiona na wartość innych niż <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue&quot;> </xref> właściwości."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: RC2CryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Generuje wektor inicjowania losowe (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) do użycia dla tego algorytmu.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "Ta metoda służy do generowania losowego <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>gdy nie określono żadnego.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_28_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_28_1.vb)]"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: RC2CryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Generuje klucz losowy (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) do użycia dla tego algorytmu.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "Ta metoda generuje losowy klucz, gdy nie jest określona.       <xref:System.Security.Cryptography.RC2CryptoServiceProvider>Obsługuje długości kluczy z 40 bitów 128 bitów w przyrostach 8 bitów.</xref:System.Security.Cryptography.RC2CryptoServiceProvider>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_5_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_5_1.vb)]"
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  id: UseSalt
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pobiera lub ustawia wartość określającą, czy należy utworzyć klucz z soli 11 bajtów długości, wartość zero."
  remarks: "Właściwość UseSalt pozwala na potrzeby współdziałania z istniejących aplikacji, która używa soli 11 bajtów długości, wartość zero.  W przypadku większości scenariuszy nie należy używać soli z <xref:System.Security.Cryptography.RC2CryptoServiceProvider>klucza.</xref:System.Security.Cryptography.RC2CryptoServiceProvider>"
  example:
  - "The following code example sets the UseSalt property to `true`, and then encrypts and decrypts a value.  \n  \n [!code-cs[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/csharp/p-system.security.crypto_12_1.cs)]\n [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/visualbasic/p-system.security.crypto_12_1.vb)]\n [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/cpp/p-system.security.crypto_12_1.cpp)]"
  syntax:
    content: public bool UseSalt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli klucz powinien zostać utworzony o 11 bajtów długości, wartość zero soli; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RC2
  isExternal: false
  name: System.Security.Cryptography.RC2
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: RC2CryptoServiceProvider()
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateIV()
  nameWithType: RC2CryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateKey()
  nameWithType: RC2CryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: RC2CryptoServiceProvider
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateDecryptor
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateEncryptor
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateIV
  nameWithType: RC2CryptoServiceProvider.GenerateIV
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateKey
  nameWithType: RC2CryptoServiceProvider.GenerateKey
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
