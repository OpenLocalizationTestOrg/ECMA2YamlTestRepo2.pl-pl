### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RoleManagerModule
  id: RoleManagerModule
  children:
  - System.Web.Security.RoleManagerModule.#ctor
  - System.Web.Security.RoleManagerModule.Dispose
  - System.Web.Security.RoleManagerModule.GetRoles
  - System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: RoleManagerModule
  nameWithType: RoleManagerModule
  fullName: System.Web.Security.RoleManagerModule
  type: Class
  summary: "Zarządza <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> wystąpienia dla bieżącego użytkownika. Ta klasa nie może być dziedziczona."
  remarks: "Klasa RoleManagerModule jest używana do przypisania <xref:System.Web.Security.RolePrincipal>do <xref:System.Web.HttpContext.User%2A>właściwości <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RolePrincipal>       Po ukończeniu żądanie RoleManagerModule odświeża pliku cookie ról, który zawiera informacje o rolach pamięci podręcznej. Jeśli <xref:System.Web.HttpContext.User%2A>właściwość jest typu <xref:System.Web.Security.RolePrincipal>oraz że <xref:System.Web.Security.RolePrincipal>wskazuje, że jego lista roli pamięci podręcznej została zmodyfikowana przez ustawienie <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>właściwości `true`, RoleManagerModule spowoduje zaktualizowanie pliku cookie ról, który zawiera informacje o rolach pamięci podręcznej.</xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.HttpContext.User%2A>       Ta klasa nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: 'public sealed class RoleManagerModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref> klasy."
  remarks: "<xref:System.Web.Security.RoleManagerModule>Klasa jest używana do umieszczenia <xref:System.Web.Security.RolePrincipal>w <xref:System.Web.HttpContext.User%2A>Właściwość <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>i nie jest przeznaczona do użycia bezpośrednio w kodzie.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RoleManagerModule>"
  syntax:
    content: public RoleManagerModule ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Dispose
  id: Dispose
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Metoda wywoływana przez środowiska wykonawczego protokołu HTTP, można zlikwidować modułu menedżera ról."
  remarks: "Wywołaj metodę Dispose po zakończeniu przy użyciu <xref:System.Web.Security.RoleManagerModule>.</xref:System.Web.Security.RoleManagerModule> Metoda Dispose pozostawia <xref:System.Web.Security.RoleManagerModule>w stanie uniemożliwiającym jego używanie.</xref:System.Web.Security.RoleManagerModule> Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Web.Security.RoleManagerModule>, można odzyskać pamięci, jego zajmowane przez wyrzucanie elementów bezużytecznych.</xref:System.Web.Security.RoleManagerModule>       Ta metoda nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.GetRoles
  id: GetRoles
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Zdarzenie aplikacji globalne, które jest wywoływane, gdy <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref> jest gotowy do utworzenia <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> reprezentujący bieżącego użytkownika."
  remarks: "GetRoles zdarzenie jest wywoływane przed wykonaniem <xref:System.Web.Security.RoleManagerModule>tworzy <xref:System.Web.Security.RolePrincipal>obiekt, a następnie przypisuje go do <xref:System.Web.HttpContext.User%2A>właściwości <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RoleManagerModule> Można użyć tego zdarzenia inspekcji, po zastosowaniu informacje o rolach lub zastępowania tworzenie <xref:System.Web.Security.RolePrincipal>przez <xref:System.Web.Security.RoleManagerModule>z własnego kodu.</xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.RolePrincipal>       Możesz anulować aplikacji informacje o rolach przez <xref:System.Web.Security.RoleManagerModule>przez ustawienie <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>Właściwość <xref:System.Web.Security.RoleManagerEventArgs>do `true` w zdarzeniu GetRoles.</xref:System.Web.Security.RoleManagerEventArgs> </xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> </xref:System.Web.Security.RoleManagerModule>       Jeśli ustawisz <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>do `true` w obsługi zdarzenia GetRoles, a następnie <xref:System.Web.HttpContext.User%2A>właściwości bieżącego <xref:System.Web.HttpContext>jest nie jest ustawiona na <xref:System.Web.Security.RolePrincipal>obiekt przez <xref:System.Web.Security.RoleManagerModule>.</xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.RolePrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>"
  example:
  - "The following example shows the GetRoles event included in the Global.asax file for an ASP.NET application. The GetRoles event adds a trace notification for an application where trace is enabled in the Web.config file.  \n  \n [!code-cs[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/csharp/e-system.web.security.ro_1.asax)]\n [!code-vb[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/visualbasic/e-system.web.security.ro_1.asax)]"
  syntax:
    content: public event System.Web.Security.RoleManagerEventHandler GetRoles;
    return:
      type: System.Web.Security.RoleManagerEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Kojarzy menedżera ról z określonej aplikacji."
  remarks: "Ta metoda subskrybuje <xref:System.Web.HttpApplication.PostAuthorizeRequest>i <xref:System.Web.HttpApplication.EndRequest>metody określonego <xref:System.Web.HttpApplication>na potrzeby zarządzania informacje o rolach i nie jest przeznaczona do użycia bezpośrednio w kodzie.</xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.PostAuthorizeRequest>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "<xref href=&quot;System.Web.HttpApplication&quot;> </xref> Do skojarzenia <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref> z."
  overload: System.Web.Security.RoleManagerModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.RoleManagerModule.#ctor
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
- uid: System.Web.Security.RoleManagerModule.Dispose
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
- uid: System.Web.Security.RoleManagerModule.GetRoles
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
- uid: System.Web.Security.RoleManagerEventHandler
  parent: System.Web.Security
  isExternal: false
  name: RoleManagerEventHandler
  nameWithType: RoleManagerEventHandler
  fullName: System.Web.Security.RoleManagerEventHandler
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.RoleManagerModule.#ctor*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule
  nameWithType: RoleManagerModule.RoleManagerModule
- uid: System.Web.Security.RoleManagerModule.Dispose*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose
  nameWithType: RoleManagerModule.Dispose
- uid: System.Web.Security.RoleManagerModule.Init*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init
  nameWithType: RoleManagerModule.Init
