### YamlMime:ManagedReference
items:
- uid: System.Data.IDbTransaction
  id: IDbTransaction
  children:
  - System.Data.IDbTransaction.Commit
  - System.Data.IDbTransaction.Connection
  - System.Data.IDbTransaction.IsolationLevel
  - System.Data.IDbTransaction.Rollback
  langs:
  - csharp
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
  type: Interface
  summary: "Reprezentuje transakcji do wykonania w źródle danych, a jest implementowany przez dostawców danych .NET Framework, które uzyskują dostęp do relacyjnych baz danych."
  remarks: "Interfejs IDbTransaction umożliwia dziedziczące klasy do zaimplementowania klasy transakcji, co stanowi transakcji do wykonania w źródle danych. Aby uzyskać więcej informacji na temat klas transakcji, zobacz [transakcji i współbieżność](~/add/includes/ajax-current-ext-md.md).       Aplikacja nie tworzy wystąpienie interfejsu IDbTransaction bezpośrednio, ale powoduje utworzenie wystąpienia klasy, która dziedziczy IDbTransaction.       Klasy, które dziedziczą IDbTransaction musi implementować dziedziczone elementy członkowskie i zwykle zdefiniować dodatkowe elementy członkowskie Dodawanie funkcji specyficznych dla dostawcy. Na przykład definiuje interfejs IDbTransaction <xref:System.Data.IDbTransaction.Commit%2A>metody.</xref:System.Data.IDbTransaction.Commit%2A> Z kolei <xref:System.Data.OleDb.OleDbTransaction>klasy dziedziczy tej właściwości, a także określa <xref:System.Data.OleDb.OleDbTransaction.Begin%2A>metody.</xref:System.Data.OleDb.OleDbTransaction.Begin%2A> </xref:System.Data.OleDb.OleDbTransaction>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/t-system.data.idbtransac_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/t-system.data.idbtransac_1.vb)]"
  syntax:
    content: 'public interface IDbTransaction : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbTransaction.Commit
  id: Commit
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zatwierdza transakcji bazy danych."
  remarks: ''
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_0_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_0_1.vb)]"
  syntax:
    content: public void Commit ();
    parameters: []
  overload: System.Data.IDbTransaction.Commit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Wystąpił błąd podczas próby zatwierdzenia transakcji."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcja została już zatwierdzona lub wycofana.       - lub - połączenie zostanie przerwane."
  platform:
  - net462
- uid: System.Data.IDbTransaction.Connection
  id: Connection
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Określa obiekt połączenia skojarzony z transakcją."
  remarks: "Pojedynczej aplikacji może mieć wiele połączeń bazy danych, z których każde z nich zero lub więcej transakcji. Ta właściwość umożliwia określenie obiektu połączenia skojarzonego z określonej transakcji."
  syntax:
    content: public System.Data.IDbConnection Connection { get; }
    return:
      type: System.Data.IDbConnection
      description: "Obiekt połączenia skojarzony z transakcją."
  overload: System.Data.IDbTransaction.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Określa <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> dla tej transakcji."
  remarks: "Transakcje równoległe są nieobsługiwane. W związku z tym <xref:System.Data.IsolationLevel>ma zastosowanie do całej transakcji.</xref:System.Data.IsolationLevel>"
  syntax:
    content: public System.Data.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Data.IsolationLevel
      description: "<xref href=&quot;System.Data.IsolationLevel&quot;> </xref> Dla tej transakcji. Wartość domyślna to <xref uid=&quot;langword_csharp_ReadCommitted&quot; name=&quot;ReadCommitted&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbTransaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.Rollback
  id: Rollback
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Przywraca transakcji w stanie oczekiwania."
  remarks: "Transakcja tylko można wycofać w stanie oczekiwania (po <xref:System.Data.IDbConnection.BeginTransaction%2A>została wywołana, ale przed wysłaniem <xref:System.Data.IDbTransaction.Commit%2A>jest nazywany).</xref:System.Data.IDbTransaction.Commit%2A> </xref:System.Data.IDbConnection.BeginTransaction%2A>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_1_1.vb)]"
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Data.IDbTransaction.Rollback*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Wystąpił błąd podczas próby zatwierdzenia transakcji."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcja została już zatwierdzona lub wycofana.       - lub - połączenie zostanie przerwane."
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDbTransaction.Commit
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
- uid: System.Data.IDbTransaction.Connection
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.IDbTransaction.IsolationLevel
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
- uid: System.Data.IDbTransaction.Commit*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit
  nameWithType: IDbTransaction.Commit
- uid: System.Data.IDbTransaction.Connection*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
- uid: System.Data.IDbTransaction.IsolationLevel*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback
  nameWithType: IDbTransaction.Rollback
