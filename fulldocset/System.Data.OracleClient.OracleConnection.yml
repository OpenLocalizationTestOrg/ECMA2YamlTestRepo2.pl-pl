### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleConnection
  id: OracleConnection
  children:
  - System.Data.OracleClient.OracleConnection.#ctor
  - System.Data.OracleClient.OracleConnection.#ctor(System.String)
  - System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.BeginTransaction
  - System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  - System.Data.OracleClient.OracleConnection.ClearAllPools
  - System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleConnection.Close
  - System.Data.OracleClient.OracleConnection.ConnectionString
  - System.Data.OracleClient.OracleConnection.ConnectionTimeout
  - System.Data.OracleClient.OracleConnection.CreateCommand
  - System.Data.OracleClient.OracleConnection.CreateDbCommand
  - System.Data.OracleClient.OracleConnection.Database
  - System.Data.OracleClient.OracleConnection.DataSource
  - System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OracleClient.OracleConnection.GetSchema
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  - System.Data.OracleClient.OracleConnection.InfoMessage
  - System.Data.OracleClient.OracleConnection.Open
  - System.Data.OracleClient.OracleConnection.ServerVersion
  - System.Data.OracleClient.OracleConnection.State
  - System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
  type: Class
  summary: "Reprezentuje otwartego połączenia z bazą danych. Ta klasa nie może być dziedziczona."
  remarks: "Ten typ jest przestarzałe i zostanie usunięta w przyszłych wersjach programu .NET Framework. Aby uzyskać więcej informacji, zobacz [Oracle i ADO.NET](~/add/includes/ajax-current-ext-md.md).       Obiekt OracleConnection reprezentuje unikatowe połączenia z bazą danych Oracle. W przypadku system klienta/serwera bazy danych jest odpowiednikiem połączenie sieciowe z serwerem.       Aplikacja, która tworzy wystąpienie obiektu OracleConnection można ustawić zabezpieczenia deklaratywne lub imperatywnych żądania wymagają wszystkich bezpośrednich i pośrednich wywołującym ma odpowiednie uprawnienia do kodu. OracleConnection tworzy żądania kontroli zabezpieczeń przy użyciu <xref:System.Data.OracleClient.OraclePermission>obiektu.</xref:System.Data.OracleClient.OraclePermission> Użytkownicy można sprawdzić, czy ich kod ma odpowiednie uprawnienia za pomocą <xref:System.Data.OracleClient.OraclePermissionAttribute>obiektu.</xref:System.Data.OracleClient.OraclePermissionAttribute> Użytkownicy i Administratorzy również służy narzędzie zasad zabezpieczenia dostępu kodu (Caspol.exe) do modyfikowania zasad zabezpieczeń na poziomie komputera, użytkownika i enterprise. Aby uzyskać więcej informacji, zobacz [zabezpieczeń](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > W odróżnieniu od **połączenia** obiektów w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC), OracleConnection nie umożliwia obsługi <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>Właściwości.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> Ustawianie limitu czasu połączenia jako właściwość lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. OracleConnection nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A>Właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>metody.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A>       Jeśli obiekt OracleConnection nie jest poza zakresem, pozostaje otwarty. W związku z tym zawsze powinna zamykać obiektów OracleConnection przez wywołanie metody <xref:System.Data.OracleClient.OracleConnection.Close%2A>lub **Dispose**, lub za pomocą obiektu OracleConnection w `Using` instrukcji.</xref:System.Data.OracleClient.OracleConnection.Close%2A> W przeciwnym razie wyrzucanie elementów bezużytecznych może nie zwolnienia je bezpośrednio. Opóźnienia może powodować błędy, jeśli jest osiągnięto maksymalną liczbę połączeń, podczas gdy liczba połączeń oczekują do usunięcia przez moduł garbage collector. Z kolei, zamykanie połączenia przez wywołanie metody <xref:System.Data.OracleClient.OracleConnection.Close%2A>wydajniej, korzysta z zasobów natywnych rozszerzanie skalowalności i poprawia ogólną wydajnością.</xref:System.Data.OracleClient.OracleConnection.Close%2A> Aby upewnić się, że połączenia są zawsze zamknięte, Otwórz połączenie wewnątrz `Using` bloku.      > [!NOTE] > Do wdrażania aplikacji wysokiej wydajności, często należy użyć puli połączeń. Jednak użycie .NET Framework Data Provider for Oracle, nie trzeba włączyć puli połączeń, ponieważ dostawca zarządza to automatycznie."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and an OracleConnection. The OracleConnection is opened and set as the <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=fullName> property. The example then calls <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OracleConnection#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_5_1.vb)]\n [!code-cs[Classic WebData OracleConnection#1](~/add/codesnippet/csharp/t-system.data.oracleclie_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      [System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_0_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_0_1.cs)]"
  syntax:
    content: public OracleConnection ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> klasy z określonych parametrów połączenia."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: public OracleConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Połączenie używane do bazy danych."
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Do dodania."
    return:
      type: System.Data.Common.DbTransaction
      description: "Do dodania."
  overload: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Rozpoczyna się transakcji w bazie danych."
  remarks: "Aby przekazać ani wycofać transakcji, należy jawnie użyć <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>lub <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>metody.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Aby upewnić się, że dostawcy danych programu .NET Framework dla Oracle transakcji zarządzania modelu wykonuje prawidłowo, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez bazę danych.      > [!NOTE] > Jeśli nie określisz poziom izolacji, używany jest domyślny poziom izolacji. Aby określić poziom izolacji przy użyciu metody BeginTransaction, użyj <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>przeciążenia.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_11_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/m-system.data.oracleclie_11_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Rozpoczyna się transakcji w bazie danych z określonym <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> wartości."
  remarks: "Aby przekazać ani wycofać transakcji, należy jawnie użyć <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>lub <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>metody.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Aby upewnić się, że dostawcy danych programu .NET Framework dla Oracle transakcji zarządzania modelu wykonuje prawidłowo, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez bazę danych."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/12fabef6-623c-46b8-b1c3-_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/12fabef6-623c-46b8-b1c3-_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: "Poziom izolacji transakcji dla tego połączenia."
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Zmiany bieżącej bazy danych dla otwartego <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  remarks: "`value` Parametr musi zawierać prawidłową nazwę bazy danych i nie może zawierać wartości null, pustym ciągiem (&quot;&quot;), lub ciągiem o tylko pustych znaków.      > [!NOTE] > W odróżnieniu od **połączenia** obiektu w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection>nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>Właściwości.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> Ustawianie limitu czasu połączenia jako właściwość lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. <xref:System.Data.OracleClient.OracleConnection>nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A>Właściwości lub metody ChangeDatabase.</xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "Nazwa bazy danych do użycia zamiast bieżącej bazy danych."
  overload: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nazwa bazy danych jest nieprawidłowa."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie nie jest otwarty."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Nie można zmienić bazy danych."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Opróżnia puli połączeń."
  remarks: "ClearAllPools resetuje lub opróżnia puli połączeń. Jeśli połączenia są używane w momencie wywołania, są odpowiednio oznaczone i są odrzucane, kiedy <xref:System.Data.OracleClient.OracleConnection.Close%2A>nazywa się na nich.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  id: ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Opróżnia puli połączeń skojarzone z określonego połączenia."
  remarks: "Metoda ClearPool czyści puli połączeń, z którym skojarzony jest `connection`. Jeśli dodatkowe połączenia skojarzony z `connection` są używane w momencie wywołania, są odpowiednio oznaczone, a są odrzucone podczas <xref:System.Data.OracleClient.OracleConnection.Close%2A>nazywa się na nich.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> Do wyczyszczenia z puli."
  overload: System.Data.OracleClient.OracleConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Close
  id: Close
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Zamyka połączenie z bazą danych."
  remarks: "Close — metoda wycofuje wszystkie transakcje oczekujące. Następnie go zwalnia połączenia z puli połączeń lub zamyka połączenie, jeśli buforowanie połączeń jest wyłączone.       Aplikację można wywołać zamknięcia więcej niż jeden raz bez generowania wyjątku.      > [!NOTE] > Użycie .NET Framework Data Provider for Oracle, nie trzeba włączyć puli połączeń, ponieważ dostawca zarządza to automatycznie.      > [!CAUTION] > Nie wywołuj Zamknij na <xref:System.Data.OracleClient.OracleConnection>, <xref:System.Data.OracleClient.OracleDataReader>, lub innego obiektu zarządzanego w `Finalize` metoda z klasy</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleConnection> W finalizator należy tylko Zwolnij niezarządzane zasoby, które bezpośrednio należą do klasy. Jeśli klasa nie ma żadnych niezarządzanych zasobów, nie dołączaj `Finalize` metody w definicji klasy. Aby uzyskać więcej informacji, zobacz [wyrzucanie elementów bezużytecznych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera lub ustawia ciąg używany do otwierania bazy danych programu Oracle."
  remarks: "Parametry połączenia można ustawić tylko wtedy, gdy połączenie jest zamknięte.       Właściwości ConnectionString służy do połączenia z bazą danych. Poniższy przykład przedstawia typowe parametry.      ```   &quot;Data Source=Oracle8i;Integrated Security=yes&quot;   ```Wiele ustawień określonych w ciągu ma odpowiednie właściwości tylko do odczytu (na przykład `Data Source=MyServer`, które odpowiada <xref:System.Data.OracleClient.OracleConnection.DataSource%2A>Właściwości).</xref:System.Data.OracleClient.OracleConnection.DataSource%2A> Po ciągu połączenia jest ustawiona, wszystkie te właściwości zostaną zaktualizowane, chyba że zostanie wykryty błąd, w którym to przypadku żadnej właściwości są aktualizowane. <xref:System.Data.OracleClient.OracleConnection>właściwości zwracają tylko ustawienia domyślne lub tych ustawień w elemencie ConnectionString.</xref:System.Data.OracleClient.OracleConnection>       Resetowanie ConnectionString na połączenie zamknięte resetuje wszystkie połączenia ciągu wartości (i powiązane właściwości), w tym hasła.       Natychmiast po ustawiany jest przeanalizować parametrów połączenia. Jeśli podczas analizowania ujawnia błędy składni, wyjątek czasu wykonywania, takie jak <xref:System.ArgumentException>, jest generowany.</xref:System.ArgumentException> Inne błędy, znajduje się tylko w przypadku próby otwarcia połączenia.       Podstawowe formaty ciągu połączenia jest szereg par — słowo kluczowe i wartości, oddziel je średnikami. Znak równości (=) łączy każde słowo kluczowe i jego wartość. Dołączenie wartości, które zawiera średnik, znak pojedynczego cudzysłowu ani znaków podwójnego cudzysłowu, wartość musi być ujęta w cudzysłów. Jeśli wartość zawiera średnik i znaku podwójnego cudzysłowu, wartość mogą być ujęte w apostrofy. Pojedynczy cudzysłów jest również przydatne, jeśli wartość rozpoczyna się od znaku podwójnego cudzysłowu. Z drugiej strony podwójny cudzysłów służy Jeżeli wartość rozpoczyna się od pojedynczy cudzysłów. Jeśli wartość zawiera znak pojedynczego cudzysłowu jak podwójnego cudzysłowu, znak cudzysłowu ująć musi być podwójny każdorazowo, gdy pojawi się w wartości.       Aby dołączyć poprzedzających lub końcowe spacje w wartości ciągu, wartość musi być ujęta w apostrofy albo cudzysłowów. Spacji wiodących lub końcowych wokół liczba całkowita, wartość logiczna lub wartości wyliczenia są ignorowane, nawet jeśli ujęty w cudzysłów. Jednak spacje wewnątrz — słowo kluczowe literału ciągu lub wartość są zachowywane. Pojedynczym lub podwójnym cudzysłowie może być używana w ciągu połączenia bez znaku cudzysłowu jest pierwszy i ostatni znak w wartości, na przykład za pomocą ograniczników `Data Source= my&quot;Server` lub `Data Source= my&quot;Server`.       Aby dołączyć znakiem równości (=) — słowo kluczowe lub wartość, musi być poprzedzony przez innego znaku równości. Na przykład w parametrach połączenia hipotetyczny ```   &quot;key==word=value&quot;   ``` jest słowo kluczowe &quot;klucz = wyraz&quot; a wartość to &quot;value&quot;.       Jeśli określone słowo kluczowe w parę — słowo kluczowe i wartości występuje więcej niż raz w ciągu połączenia, ostatnie wystąpienie jest używany w zestawie wartości.       Słowa kluczowe są bez uwzględniania wielkości liter.       W poniższej tabeli wymieniono prawidłowe nazwy dla wartości w elemencie ConnectionString.      | Nazwa | Domyślne | Opis elementu |   |----------|-------------|-----------------|   | Źródło danych<br /><br /> — lub —<br /><br /> Serwer || Nazwa lub adres sieciowy wystąpienia programu Oracle, którym chcesz się połączyć. |   | Zabezpieczenia zintegrowane | &quot; false&quot;| Określa, czy połączenie ma być bezpieczne, czy nie.<br /><br /> Rozpoznawane są wartości `true` (zalecane), `false`, `yes`, i `no`. |   | Hasło || Hasło dla konta programu Oracle logowania. Utrzymanie wysokiego poziomu zabezpieczeń, zdecydowanie zaleca się użycie słowa kluczowego zintegrowanych zabezpieczeń. |   | Utrzymuj informacje o zabezpieczeniach | &quot; false&quot;| Jeśli wartość `false` lub `no` (zalecane), informacje związane z zabezpieczeniami, takich jak hasła nie są zwracane jako część połączenia, jeśli połączenie jest otwarte lub kiedykolwiek było w otwartej <xref:System.Data.OracleClient.OracleConnection.State%2A>.</xref:System.Data.OracleClient.OracleConnection.State%2A> Resetowanie parametry połączenia resetuje wszystkie wartości parametrów połączeń, w tym hasła.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`. |   | Unicode | &quot; false&quot;| Określa, czy dla programu .NET Framework Data Provider for Oracle używa interfejsu API tryb UTF16. To słowo kluczowe jest ignorowana wyłącznie przy użyciu oprogramowanie klienta Oracle9i. |   | Identyfikator użytkownika || Konto logowania programu Oracle. Utrzymanie wysokiego poziomu zabezpieczeń, zdecydowanie zaleca się użycie słowa kluczowego zintegrowanych zabezpieczeń. |       W poniższej tabeli wymieniono prawidłowe nazwy połączenia buforowanie wartości w elemencie ConnectionString.      | Nazwa | Domyślne | Opis elementu |   |----------|-------------|-----------------|   | Okres istnienia połączenia |&0; | Gdy połączenie jest zwracana do puli, jej godzina utworzenia jest porównywany z bieżącym czasem i połączenie zostanie zniszczony, jeśli ten przedział czasu (w sekundach) przekracza wartość określoną przez `Connection Lifetime`. Jest to przydatne w konfiguracji klastra, aby wymusić zrównoważenia obciążenia między programem server i serwer, który właśnie został przełączony do trybu online.<br /><br /> Wartość zerowa powoduje puli połączeń mieć maksymalny limit czasu połączenia. |   | Zarejestrować | &quot; wartość true, &quot; | Gdy `true` lub `yes`, pulę automatycznie rejestruje połączenia w bieżącym kontekście transakcji wątku tworzenia.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`. |   | Rozmiar maksymalny buforu |&100; | Maksymalna liczba dozwolonych w puli połączeń. Ustawienie `Max Pool Size` wartość ConnectionString może wpłynąć na wydajność. Jeśli planujesz tworzenie i aktywnie używać więcej niż 100 połączeń, należy zwiększyć `Max Pool Size` wartość przybliża użycia stan połączenia dla aplikacji. |   | Minimalny rozmiar puli | 0 | Minimalna liczba połączeń dozwolonych w puli. |   | Buforowanie | &quot; wartość true, &quot; | Gdy `true` lub `yes`, <xref:System.Data.OracleClient.OracleConnection>obiektu jest przenoszony z odpowiedniej puli lub w razie potrzeby, jest tworzony i dodawany do odpowiedniej puli.</xref:System.Data.OracleClient.OracleConnection><br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`. |       Podczas ustawiania wartości, które wymagają wartość logiczną buforowania połączeń lub słowo kluczowe, służy &quot;Tak&quot; zamiast &quot;true&quot; i &quot;nie&quot; zamiast &quot;false&quot;. Liczby całkowite są reprezentowane jako ciągi."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_15_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_15_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Ciąg połączenia Oracle, który zawiera ustawienia, takie jak nazwa serwera jest potrzebne do nawiązania połączenia początkowego. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera czas oczekiwania, aby ustanowić połączenie przed zakończeniem próby i wygenerowaniem błędu."
  remarks: "Należy określić ilość czasu oczekiwania połączenia limitu czasu przy użyciu `Connect Timeout` lub `Connection Timeout` słów kluczowych w parametrach połączenia. Wartość 0 oznacza brak limitu i należy unikać w <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>ponieważ próby nawiązania połączenia przez nieokreślony czas oczekiwania.</xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>      > [!NOTE] > W odróżnieniu od `Connection` obiektu w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection>nie obsługuje właściwości ConnectionTimeout.</xref:System.Data.OracleClient.OracleConnection> Ustawianie limitu czasu połączenia z właściwością lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. <xref:System.Data.OracleClient.OracleConnection>nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A>Właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>metody.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Czas (w sekundach) oczekiwania na połączenie, aby otworzyć. Wartość domyślna to 15 sekund."
  overload: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określona wartość jest mniejsza niż 0."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Tworzy i zwraca <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> obiekt skojarzony z <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> Obiektu."
  overload: System.Data.OracleClient.OracleConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Do dodania."
  overload: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Database
  id: Database
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera nazwę bieżącej bazy danych lub baza danych ma być używany po otwarciu połączenia."
  remarks: "Właściwości bazy danych aktualizacje dynamiczne. Jeśli zmienisz bieżącej bazy danych za pomocą instrukcji SQL lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>, wysyłany jest komunikat informacyjny i właściwość jest aktualizowane automatycznie.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>      > [!NOTE] > W odróżnieniu od `Connection` obiektu w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection>nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>Właściwości.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> Ustawianie limitu czasu połączenia z właściwością lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. <xref:System.Data.OracleClient.OracleConnection>nie obsługuje właściwości bazy danych lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>metody.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Nazwa bieżącej bazy danych lub nazwa bazy danych do użycia po otwarciu połączenia. Wartość domyślna to ciąg pusty."
  overload: System.Data.OracleClient.OracleConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.DataSource
  id: DataSource
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera nazwę serwera Oracle, którym chcesz się połączyć."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_7_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_7_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Nazwa serwera Oracle, którym chcesz się połączyć. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.OracleClient.OracleConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Rejestruje w określonym transakcji jako transakcji rozproszonej."
  remarks: "Nowy w ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metody można zarejestrować transakcji rozproszonej.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction>wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions>przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane **EnlistDistributedTransaction** w tym celu.</xref:System.Transactions> </xref:System.Transactions.Transaction> Aby uzyskać więcej informacji, zobacz [transakcji rozproszonych](~/add/includes/ajax-current-ext-md.md).       Możesz zarejestrować się w istniejącej transakcji rozproszonej przy użyciu metody EnlistDistributedTransaction po wyłączeniu automatycznej rejestracji. Rejestrowanie w istniejącej transakcji rozproszonych zapewnia, że jeśli transakcja jest zatwierdzona lub wycofana, zmiany dokonane przez kod w źródle danych są również zatwierdzenia lub wycofania.       EnlistDistributedTransaction zwraca wyjątek, jeśli <xref:System.Data.OracleClient.OracleConnection>została już rozpoczęta transakcji za pomocą <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> </xref:System.Data.OracleClient.OracleConnection> Jednak jeśli transakcja jest transakcji lokalnej rozpoczęty o godzinie źródło danych (na przykład, wykonując jawnie za pomocą instrukcji BEGIN TRANSACTION <xref:System.Data.OracleClient.OracleCommand>obiektu), EnlistDistributedTransaction wycofuje transakcji lokalnej i powoduje zarejestrowanie w istniejącej transakcji rozproszonej, zgodnie z żądaniem.</xref:System.Data.OracleClient.OracleCommand> Nie otrzymasz powiadomienie, że lokalne transakcja została wycofana i są odpowiedzialny za zarządzanie wszystkich transakcji lokalnej nie została uruchomiona przy użyciu <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);
    parameters:
    - id: distributedTransaction
      type: System.EnterpriseServices.ITransaction
      description: "Odwołanie do istniejącej <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> w którym można zarejestrować."
  overload: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Rejestruje w określonym transakcji jako transakcji rozproszonej."
  remarks: "Nowy w ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metody można zarejestrować transakcji rozproszonej.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction>wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions>przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane **EnlistDistributedTransaction**, który korzysta z **System.EnterpriseServices.ITransaction** obiektu.</xref:System.Transactions> </xref:System.Transactions.Transaction> Ma również semantyki nieco inne: po połączenie jawnie jest zarejestrowana w transakcji, nie może być unenlisted lub zarejestrowany w innej transakcji, dopóki nie zakończy Pierwsza transakcja. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Odwołanie do istniejącej <xref href=&quot;System.Transactions.Transaction&quot;> </xref> w którym można zarejestrować."
  overload: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  id: GetSchema
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> przy użyciu określonego ciągu dla nazwy schematu."
  remarks: "Zapytania przy użyciu GetSchema jest uwzględniana wielkość liter. Ze względu na sposób postępowania programu Oracle przypadków podczas tworzenia schematu może to prowadzić do nieoczekiwanych wyników.       Jeśli schemat został utworzony bez cudzysłowów`,` Oracle przechowuje nazwę obiektu wielkimi literami. Jeśli schemat został utworzony z cudzysłowami, Oracle przechowuje nazwę obiektu w małych i wielkich liter podane.       Na przykład załóżmy, że utworzenie tabeli o nazwie MyTable przy użyciu jednej z dwóch następujących instrukcji: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` można pobrać informacji na temat tej tabeli za pomocą **GetSchema** metody w pierwszym przypadku należy przekazywane &quot;MYTABLE&quot; jako argumentu.        W drugim przypadku trzeba przenieść &quot;MyTable&quot; jako argumentu."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Określa nazwę schematu do zwrócenia."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>jest określony jako wartość null."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> przy użyciu określonego ciągu dla nazwy schematu i tablicy określony ciąg wartości ograniczeń."
  remarks: "`restrictionValues` Parametrów można podać głębokość n wartości, które są określone przez kolekcji ograniczeń dla określonej kolekcji. Aby ustawić wartości dla danego ograniczeń i nie ustawić wartości właściwości inne ograniczenia, należy ustawić poprzednich ograniczeń do wartości null, a następnie przekaż odpowiednią wartość w ograniczenia, które chcesz określić wartość.       Na przykład jest kolekcją &quot;Tabele&quot;. Jeśli kolekcja &quot;Tabele&quot; ma ograniczenia 3: bazy danych, właściciela i nazwy tabeli; i chcesz odzyskać tylko w tabelach, które są skojarzone z właścicielem &quot;Carl&quot;, a następnie będzie potrzebny do przekazywania następujące wartości (co najmniej): null, &quot;Carl&quot;. Jeśli wartość ograniczenia nie jest przekazany, wartości domyślne są używane dla tego ograniczenia. To tego samego mapowania jako przekazywanie wartość null, która różni się od przekazywanie w ciągu pustego wartość parametru. W takim przypadku ciąg pusty (&quot;&quot;) jest traktowany jako wartość parametru określony.       Zapytania korzystające z <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>jest uwzględniana wielkość liter.</xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> Ze względu na sposób postępowania programu Oracle przypadków podczas tworzenia schematu może to prowadzić do nieoczekiwanych wyników.       Jeśli schemat został utworzony bez cudzysłowów`,` Oracle przechowuje nazwę obiektu wielkimi literami. Jeśli schemat został utworzony z cudzysłowami, Oracle przechowuje nazwę obiektu w małych i wielkich liter podane.       Na przykład załóżmy, że utworzenie tabeli o nazwie MyTable przy użyciu jednej z dwóch następujących instrukcji: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` można pobrać informacji na temat tej tabeli za pomocą **GetSchema** metody w pierwszym przypadku należy przekazywane &quot;MYTABLE&quot; jako argumentu.        W drugim przypadku trzeba przenieść &quot;MyTable&quot; jako argumentu."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Określa nazwę schematu do zwrócenia."
    - id: restrictionValues
      type: System.String[]
      description: "Zestaw wartości ograniczeń dla żądanego schematu."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>jest określony jako wartość null."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Występuje, gdy wysyła Oracle, ostrzeżenie lub komunikat informacyjny."
  remarks: "Ponieważ .NET Framework Data Provider for Oracle używa Oracle Call Interface (OCI), zawsze, gdy dostawca danych odbiera komunikat Powodzenie o informacje, jest generowane zdarzenie InfoMessage. Przykład czy tworzenia procedury przechowywanej, która zawiera błąd składniowy. Wywołanie <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>metody powiedzie się.</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> Jednak zdarzenie InfoMessage generowaną informujące o błąd składni.       Klienci, którzy Aby przetwarzać ostrzeżenia i komunikaty informacyjne wysyłane przez serwer powinien utworzyć <xref:System.Data.OracleClient.OracleInfoMessageEventHandler>delegata nasłuchiwanie z tym zdarzeniem.</xref:System.Data.OracleClient.OracleInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OracleClient.OracleInfoMessageEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Open
  id: Open
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <xref:System.Data.OracleClient.OracleConnection.ConnectionString*>.</xref:System.Data.OracleClient.OracleConnection.ConnectionString*>"
  remarks: "<xref:System.Data.OracleClient.OracleConnection>Rysuje otwartego połączenia z puli połączeń, jeśli jest dostępny.</xref:System.Data.OracleClient.OracleConnection> W przeciwnym razie nawiązaniem nowego połączenia z bazą danych.      > [!NOTE] > Jeśli <xref:System.Data.OracleClient.OracleConnection>zbliża się poza zakresem, reprezentuje połączenie nie jest zamykane automatycznie.</xref:System.Data.OracleClient.OracleConnection> W związku z tym należy jawnie zamknąć połączenie przez wywołanie metody <xref:System.Data.OracleClient.OracleConnection.Close%2A>.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie nie jest otwarty."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Nie można zmienić bazy danych."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera ciąg zawierający wersję serwera, z którym klient jest połączony."
  remarks: "Właściwość ServerVersion jest w formacie wersji programu Oracle. Na przykład format wersji programu Oracle8 jest ciągiem w postaci &quot;8.1.7.0.0 programu Oracle8 wersji 8.1.7.0.0 - produkcyjnych.&quot;"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_3_1.vb)]\n [!code-cs[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/csharp/p-system.data.oracleclie_3_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Wersja podłączony serwer."
  overload: System.Data.OracleClient.OracleConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie jest zamknięte."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.State
  id: State
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera bieżący stan połączenia."
  remarks: "Zmiany stanu dozwolone są: — z `Closed` do `Open`za pomocą `Open` metody <xref:System.Data.OracleClient.OracleConnection>obiektu.</xref:System.Data.OracleClient.OracleConnection>      -From `Open` do `Closed`za pomocą <xref:System.Data.OracleClient.OracleConnection.Close%2A>metody <xref:System.Data.OracleClient.OracleConnection>obiektu.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OracleClient.OracleConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its State.  \n  \n [!code-cs[Classic WebData OracleConnection.State#1](~/add/codesnippet/csharp/p-system.data.oracleclie_9_1.cs)]\n [!code-vb[Classic WebData OracleConnection.State#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_9_1.vb)]"
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Bitowe połączenie <xref href=&quot;System.Data.ConnectionState&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.OracleClient.OracleConnection>wystąpienia jest rzutowane na <xref:System.ICloneable>interfejsu.</xref:System.ICloneable> </xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowy obiekt, który jest kopią tego wystąpienia..."
  overload: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.Data.OracleClient.OracleConnection.#ctor
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.Close
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OracleClient.OracleConnection.Database
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
- uid: System.Data.OracleClient.OracleInfoMessageEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleInfoMessageEventHandler
  nameWithType: OracleInfoMessageEventHandler
  fullName: System.Data.OracleClient.OracleInfoMessageEventHandler
- uid: System.Data.OracleClient.OracleConnection.Open
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleConnection.#ctor*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OracleConnection.BeginDbTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OracleConnection.BeginTransaction
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OracleConnection.ChangeDatabase
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: OracleConnection.ClearAllPools
- uid: System.Data.OracleClient.OracleConnection.ClearPool*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool
  nameWithType: OracleConnection.ClearPool
- uid: System.Data.OracleClient.OracleConnection.Close*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close
  nameWithType: OracleConnection.Close
- uid: System.Data.OracleClient.OracleConnection.ConnectionString*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
- uid: System.Data.OracleClient.OracleConnection.CreateCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OracleConnection.CreateCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OracleConnection.CreateDbCommand
- uid: System.Data.OracleClient.OracleConnection.Database*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose
  nameWithType: OracleConnection.Dispose
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OracleConnection.EnlistDistributedTransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OracleConnection.EnlistTransaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema
  nameWithType: OracleConnection.GetSchema
- uid: System.Data.OracleClient.OracleConnection.Open*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open
  nameWithType: OracleConnection.Open
- uid: System.Data.OracleClient.OracleConnection.ServerVersion*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OracleConnection.System.ICloneable.Clone
