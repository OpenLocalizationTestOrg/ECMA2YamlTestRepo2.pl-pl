### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermission
  id: KeyContainerPermission
  children:
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  - System.Security.Permissions.KeyContainerPermission.AccessEntries
  - System.Security.Permissions.KeyContainerPermission.Copy
  - System.Security.Permissions.KeyContainerPermission.Flags
  - System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  - System.Security.Permissions.KeyContainerPermission.ToXml
  - System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission
  fullName: System.Security.Permissions.KeyContainerPermission
  type: Class
  summary: "Kontroluje możliwość dostępu do kontenerów kluczy. Ta klasa nie może być dziedziczona."
  remarks: "To uprawnienie umożliwia zapewnienie ograniczony dostęp do kontenerów kluczy."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> klasy z określonym dostępu."
  remarks: ''
  example:
  - "The following code example shows the use of the KeyContainerPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/csharp/dcb7bb7e-ef30-44de-aaf3-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/cpp/dcb7bb7e-ef30-44de-aaf3-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/visualbasic/dcb7bb7e-ef30-44de-aaf3-_1.vb)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>nie jest prawidłową kombinacją <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> klasy z ograniczonej lub nieograniczone uprawnienia."
  remarks: "Tworzy albo `None` (pełni ograniczeń) lub `Unrestricted` dostępu do kontenerów kluczy."
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Jeden z <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>nie jest prawidłową <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> z określonym globalny dostęp i prawa dostępu do określonego kontenera kluczy."
  remarks: ''
  example:
  - "The following code example shows the use of the KeyContainerPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/csharp/504c0c1a-d76c-49a6-8315-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/cpp/504c0c1a-d76c-49a6-8315-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/visualbasic/504c0c1a-d76c-49a6-8315-_1.vb)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags, System.Security.Permissions.KeyContainerPermissionAccessEntry[] accessList);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
    - id: accessList
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
      description: "Tablica <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> obiektów identyfikujący określonego kontenera klucza praw dostępu."
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>nie jest prawidłową kombinacją <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  id: AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera kolekcję <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> obiekty skojarzone z bieżącym uprawnień."
  remarks: "Każdy <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>obiektu w kolekcji określa prawa dostępu do określonego kontenera kluczy.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryCollection AccessEntries { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot;> </xref> zawierający <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> obiektów w tym <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  id: Copy
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: System.Security.Permissions.KeyContainerPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca identyczne kopię bieżącego uprawnień."
  remarks: "Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Kopię bieżącego uprawnień."
  overload: System.Security.Permissions.KeyContainerPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: System.Security.Permissions.KeyContainerPermission.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera kontener kluczy flag uprawnień, które są stosowane do wszystkich kontenerów kluczy związane z uprawnieniem."
  remarks: "Właściwość flag jest ustawiana przez konstruktora."
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
  overload: System.Security.Permissions.KeyContainerPermission.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Rekonstruuje uprawnienie o określonym stanie kodowania XML."
  remarks: "Metoda FromXml rekonstruuje <xref:System.Security.Permissions.KeyContainerPermission>obiekt kodowania XML zdefiniowanych przez <xref:System.Security.SecurityElement>klasę.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.KeyContainerPermission> Użyj <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A>do kodowania XML <xref:System.Security.Permissions.KeyContainerPermission>, w tym informacje o stanie.</xref:System.Security.Permissions.KeyContainerPermission> </xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A>"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> zawierający Kodowanie XML używany do rekonstrukcji uprawnienia."
  overload: System.Security.Permissions.KeyContainerPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>nie jest elementem prawidłowego uprawnienia.       - lub - numer wersji <code>securityElement</code> nie jest obsługiwane."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony."
  remarks: "Część wspólną dwóch uprawnień jest uprawnienia, które opisano zestaw działań, które opisują one zarówno wspólnych. Tylko zażąda przekazuje zarówno indywidualne uprawnienia zostaną spełnione przecięcie."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do intersect z uprawnieniami bieżącego. Go musi być taki sam typ jak bieżące uprawnienia."
    return:
      type: System.Security.IPermission
      description: "Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony. Jest to nowe uprawnienie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli część wspólną jest pusta."
  overload: System.Security.Permissions.KeyContainerPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie określa uprawnienia tego samego typu jak bieżące uprawnienia."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Określa, czy bieżące uprawnienia podzbiór określonego uprawnienia."
  remarks: "Bieżące uprawnienia jest podzbiorem określonego uprawnienia, jeśli uprawnienia bieżącego określa zestaw operacji jest całkowicie zawarty w określonego uprawnienia. Na przykład uprawnienie <xref:System.Security.Permissions.KeyContainerPermissionFlags>dostępu jest podzbiorem uprawnienie <xref:System.Security.Permissions.KeyContainerPermissionFlags>dostępu.</xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do testowania dla relacji podzbioru. To uprawnienie musi być taki sam typ jak bieżące uprawnienia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżące uprawnienia są podzbiorem określonego uprawnienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie określa uprawnienia tego samego typu jak bieżące uprawnienia."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Określa, czy bieżący uprawnienie jest nieograniczony."
  remarks: "Nieograniczony uprawnienie reprezentuje dostęp do wszystkich zasobów chronionych przez uprawnienia."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący uprawnienie jest nieograniczony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy kodowania XML uprawnienia i swojego bieżącego stanu."
  remarks: "Użyj <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A>metody przywracanie informacji o stanie z <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A>"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> zawierający kodowania XML uprawnienia, w tym informacje o stanie."
  overload: System.Security.Permissions.KeyContainerPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy uprawnienia, które łączy bieżące uprawnienia i określony."
  remarks: "Wynik wywołania Unii jest uprawnienia, które reprezentuje wszystkie operacje reprezentowany przez bieżące uprawnienia i określonego uprawnienia. Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do łączenia z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień."
    return:
      type: System.Security.IPermission
      description: "Nowe uprawnienie reprezentuje złożenie bieżące uprawnienia i określony."
  overload: System.Security.Permissions.KeyContainerPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie określa uprawnienia tego samego typu jak bieżące uprawnienia."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
    name: KeyContainerPermissionAccessEntry
    nameWithType: KeyContainerPermissionAccessEntry
    fullName: KeyContainerPermissionAccessEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntryCollection
  nameWithType: KeyContainerPermissionAccessEntryCollection
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: System.Security.Permissions.KeyContainerPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: System.Security.Permissions.KeyContainerPermission.Flags
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.#ctor*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission.KeyContainerPermission
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
- uid: System.Security.Permissions.KeyContainerPermission.Copy*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy
  nameWithType: KeyContainerPermission.Copy
- uid: System.Security.Permissions.KeyContainerPermission.Flags*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
- uid: System.Security.Permissions.KeyContainerPermission.FromXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml
  nameWithType: KeyContainerPermission.FromXml
- uid: System.Security.Permissions.KeyContainerPermission.Intersect*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect
  nameWithType: KeyContainerPermission.Intersect
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: KeyContainerPermission.IsSubsetOf
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: KeyContainerPermission.IsUnrestricted
- uid: System.Security.Permissions.KeyContainerPermission.ToXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml
  nameWithType: KeyContainerPermission.ToXml
- uid: System.Security.Permissions.KeyContainerPermission.Union*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union
  nameWithType: KeyContainerPermission.Union
