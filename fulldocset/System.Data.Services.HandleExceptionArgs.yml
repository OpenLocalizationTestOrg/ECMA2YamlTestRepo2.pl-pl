### YamlMime:ManagedReference
items:
- uid: System.Data.Services.HandleExceptionArgs
  id: HandleExceptionArgs
  children:
  - System.Data.Services.HandleExceptionArgs.Exception
  - System.Data.Services.HandleExceptionArgs.ResponseContentType
  - System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  - System.Data.Services.HandleExceptionArgs.ResponseWritten
  - System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  langs:
  - csharp
  name: HandleExceptionArgs
  nameWithType: HandleExceptionArgs
  fullName: System.Data.Services.HandleExceptionArgs
  type: Class
  summary: "Określa szczegóły dotyczące wyjątku, który wystąpił i skojarzone odpowiedzi HTTP."
  syntax:
    content: public class HandleExceptionArgs
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.Exception
  id: Exception
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: System.Data.Services.HandleExceptionArgs.Exception
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Pobiera lub ustawia wyjątek, który zostanie przetworzona i zwracany w odpowiedzi."
  remarks: "Jeśli wyjątek jest <xref:System.Data.Services.DataServiceException>, komunikat wyjątku, będzie zawsze zwracana do klienta, niezależnie od tego <xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>wartość.</xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A> </xref:System.Data.Services.DataServiceException> Jeśli <xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>ma wartość true, wyjątków wewnętrznych będzie również zwrócona do klienta; w przeciwnym razie tylko <xref:System.Data.Services.DataServiceException>zostanie zwrócony komunikat.</xref:System.Data.Services.DataServiceException> </xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "Wyjątek, który zostanie przetworzona i zwracany w odpowiedzi."
  overload: System.Data.Services.HandleExceptionArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType
  id: ResponseContentType
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
  fullName: System.Data.Services.HandleExceptionArgs.ResponseContentType
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Pobiera typ zawartości odpowiedzi."
  remarks: "Wszystkie błędy spowodować ładunek błędu odsyłanych przez usługę. Ta właściwość informuje autora usługi formatu błąd, który zostanie wysłany ponownie. Wartość tej właściwości będzie zawsze prawidłowy typ mime Internet Assigned numery Authority (IANA)."
  syntax:
    content: public string ResponseContentType { get; }
    return:
      type: System.String
      description: "Wartość ciągu, która wskazuje, format odpowiedzi."
  overload: System.Data.Services.HandleExceptionArgs.ResponseContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  id: ResponseStatusCode
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
  fullName: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Pobiera kod stanu, który zostanie wysłany ponownie w sekcji nagłówka odpowiedzi HTTP, po wystąpieniu błędu w usłudze danych."
  syntax:
    content: public int ResponseStatusCode { get; }
    return:
      type: System.Int32
      description: "Wartość Kod stanu odpowiedzi HTTP."
  overload: System.Data.Services.HandleExceptionArgs.ResponseStatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten
  id: ResponseWritten
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
  fullName: System.Data.Services.HandleExceptionArgs.ResponseWritten
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Pobiera wartość wskazującą, czy odpowiedź została zapisana."
  remarks: "Jeśli ma wartość true, nagłówków odpowiedzi HTTP i być może część treści odpowiedzi zostały już wysłane do klienta i nie można zmienić."
  syntax:
    content: public bool ResponseWritten { get; }
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy odpowiedź została zapisana."
  overload: System.Data.Services.HandleExceptionArgs.ResponseWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  id: UseVerboseErrors
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
  fullName: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy zostanie zwrócona pełne błędy."
  remarks: 'Gdy UseVerboseErrors ma wartość true, wyjątków wszystkie szczegóły, które zostaną zwrócone w odpowiedzi. Uwaga dotycząca zabezpieczeń: Ustawienie wartości TRUE może ujawnić informacje, które powinny być prywatne do usługi.'
  syntax:
    content: public bool UseVerboseErrors { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy zostanie zwrócona pełne błędy."
  overload: System.Data.Services.HandleExceptionArgs.UseVerboseErrors*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Services.HandleExceptionArgs.Exception
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: System.Data.Services.HandleExceptionArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
  fullName: System.Data.Services.HandleExceptionArgs.ResponseContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
  fullName: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
  fullName: System.Data.Services.HandleExceptionArgs.ResponseWritten
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
  fullName: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
- uid: System.Data.Services.HandleExceptionArgs.Exception*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
