### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "Definiuje wymaganych elementów członkowskich dostawcę stanu sesji dla magazynu danych."
  remarks: "Stan sesji ASP.NET odczytuje i zapisuje dane sesji od i do magazynu danych przy użyciu stanu sesji przechowywać dostawcy. Dostawca magazynu stanu sesji jest klasa, która dziedziczy z klasy abstrakcyjnej SessionStateStoreProviderBase i przesłania jej elementów członkowskich z implementacjami specyficzne dla magazynu danych. Dostawca magazynu stanu sesji jest wywoływany przez <xref:System.Web.SessionState.SessionStateModule>klasy podczas przetwarzania strony ASP.NET do komunikowania się z magazynem danych do przechowywania i pobierania zmiennych sesji i sesji powiązane informacje, takie jak wartość limitu czasu.</xref:System.Web.SessionState.SessionStateModule>       Dane sesji w ramach każdej aplikacji ASP.NET były przechowywane osobno dla każdego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>Właściwości.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Aplikacji programu ASP.NET nie udostępniają danych sesji.       Implementacja niestandardowa SessionStateStoreProviderBase dla aplikacji ASP.NET można określić przez ustawienie `mode` atrybutu `sessionState` element konfiguracji do <xref:System.Web.SessionState.SessionStateMode>i `customProvider` atrybutu nazwy niestandardowego dostawcy, jak pokazano w przykładzie dla tego tematu.</xref:System.Web.SessionState.SessionStateMode>      ## Blokowanie sesji magazynu danych ponieważ aplikacji programu ASP.NET są wielowątkowe do obsługi odpowiada na żądania jednoczesnych, jest możliwe, że równoczesnych żądań może podejmować wielokrotne próby dostęp do informacji o tej samej sesji. Rozważmy scenariusz, w której wiele ramek w zestawie ramek wszystkich dostęp tej samej aplikacji. Oddzielne żądania dla każdej ramki w zestawie ramek mogą być wykonywane na serwerze sieci Web jednocześnie w różnych wątkach. Strony ASP.NET dla każdego źródła ramki dostęp do zmiennych stanu sesji, może mieć wiele wątków jednocześnie dostępu do magazynu sesji.       Aby uniknąć kolizji danych w magazynie sesji i nieoczekiwane zachowanie stanu sesji, <xref:System.Web.SessionState.SessionStateModule>i klasy SessionStateStoreProviderBase obejmują funkcje blokady wyłącznie blokuje elementu magazynu sesji dla określonej sesji na czas trwania wykonywanie strony platformy ASP.NET.</xref:System.Web.SessionState.SessionStateModule> Należy pamiętać, że nawet jeśli <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atrybut jest oznaczony jako `ReadOnly`, innych stron ASP.NET, w tej samej aplikacji może mieć możliwość zapisu w magazynie sesji, więc żądanie sesji tylko do odczytu danych z magazynu nadal może zakończyć oczekiwania na zablokowana danych ma zostać zwolniony.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Blokada jest ustawiony na sesji magazynu danych na początku żądania, w wywołaniu <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Po zakończeniu wykonywania żądania podczas wywołania zwolnieniu blokady <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>       Jeśli <xref:System.Web.SessionState.SessionStateModule>obiektu napotka dane sesji zablokowane podczas wywołania albo <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>lub <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>metody go ponownie zażąda podania danych sesji w odstępach czasu pół sekundy aż do zwolnienia blokady lub ilość czasu, po jego zablokowaniu dane sesji przekracza wartość <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>Właściwości.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> Po przekroczeniu limitu czasu wykonywania <xref:System.Web.SessionState.SessionStateModule>wywoła obiektu <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metody w celu zwolnienia sesji magazynu danych i żądań sesji magazynu danych w tym czasie.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Ponieważ zablokowany sesji magazynu danych może być zwolniony przez wywołanie do <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metody w oddzielnym wątku przed wywołaniem do <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metody dla bieżącej odpowiedzi, może zostać podjęta próba i zwolnij Magazyn stanów sesji dane, które już zwolnione i zmodyfikowane przez inną sesję.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Aby uniknąć tej sytuacji <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>i <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metody zwracają Identyfikator blokady.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Ten identyfikator blokady musi zostać dołączony każdego żądania do zmodyfikowania zablokowanym sesji magazynu danych. Sesja magazynu danych jest modyfikowany tylko wtedy, gdy identyfikator blokady w magazynie danych jest zgodny z identyfikatorem blokady dostarczonych przez <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule>      ## Usuwanie wygasł sesji przechowywania danych podczas <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>Metoda jest wywoływana dla określonej sesji, dane dla tej sesji zostaną usunięte z magazynu danych przy użyciu <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metody; w przeciwnym razie dane pozostaną w magazynie danych sesji do przyszłych żądań serwera dla sesji.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Jest implementacja SessionStateStoreProviderBase do usuwania danych wygasłych sesji."
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klasy."
  remarks: "Nie należy do implementacji konstruktora dla klasy, która dziedziczy z <xref:System.Web.SessionState.SessionStateStoreProviderBase>klasy abstrakcyjnej.</xref:System.Web.SessionState.SessionStateStoreProviderBase> Inicjowanie wartości <xref:System.Web.SessionState.SessionStateStoreProviderBase>wdrożenia są przekazywane do <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>implementacji metody.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Tworzy nowy <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> obiektu używanego dla bieżącego żądania."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę CreateNewStoreData na początku żądanie dla strony platformy ASP.NET podczas <xref:System.Web.HttpApplication.AcquireRequestState>zdarzeń.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Jeśli ma zostać wywołana metoda CreateNewStoreData: - żądania przychodzącego, jeśli nie ma sesji Identyfikatora lub - żądanie przychodzące ma identyfikator, ale sesja nie znaleziono w magazynie danych.       Tworzy nową metodę CreateNewStoreData <xref:System.Web.SessionState.SessionStateStoreData>obiektu z pustą <xref:System.Web.SessionState.ISessionStateItemCollection>obiektu <xref:System.Web.HttpStaticObjectsCollection>kolekcji i określonego `timeout` wartość.</xref:System.Web.HttpStaticObjectsCollection> </xref:System.Web.SessionState.ISessionStateItemCollection> </xref:System.Web.SessionState.SessionStateStoreData> <xref:System.Web.HttpStaticObjectsCollection>Kolekcji dla aplikacji ASP.NET można pobrać przy użyciu <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>metody.</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: timeout
      type: System.Int32
      description: "Stan sesji <xref:System.Web.SessionState.HttpSessionState.Timeout*>wartość dla nowej <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Nowy <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> dla bieżącego żądania."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Dodaje nowy element stanu sesji w magazynie danych."
  remarks: "Metoda CreateUninitializedItem jest używana z sesji podczas `cookieless` i `regenerateExpiredSessionId` atrybuty są `true`. O `regenerateExpiredSessionId attribute` ustawioną `true` powoduje, że <xref:System.Web.SessionState.SessionStateModule>obiekt, aby wygenerować nowy <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość przy wygasłe <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>napotkano wartość.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Proces generowania nowego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość wymaga przekierowywania w przeglądarce adres URL zawierający nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Metoda CreateUninitializedItem jest wywoływana podczas żądania początkowego, który zawiera wygasłe <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Po <xref:System.Web.SessionState.SessionStateModule>nabędzie nowy obiekt <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość Aby zastąpić wartość wygasłe, wywołuje metodę CreateUninitializedItem, aby dodać wpis niezainicjowanej w magazynie danych stanu sesji.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule> Przeglądarka jest przekierowywane do adres URL zawierający nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Istnienie niezainicjowanej zapisu w magazynie danych sesji gwarantuje, że przekierowane żądanie, która obejmuje nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość dla żądania wygasłych sesji nie zostanie odczytany i zamiast tego traktowane jako nowej sesji.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Niezainicjowany zapisu w magazynie danych sesji jest skojarzony z nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartości i zawiera tylko wartości domyślne, w tym datę wygaśnięcia, czas i wartość, która odpowiada `actionFlags` parametr <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>i <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Niezainicjowany wpisu w magazynie danych stanu sesji powinien zawierać `actionFlags` wartość równą <xref:System.Web.SessionState.SessionStateActions>wartość wyliczenia.</xref:System.Web.SessionState.SessionStateActions> Ta wartość jest przekazywana do <xref:System.Web.SessionState.SessionStateModule>obiekt przez <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>i <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metod i informuje o <xref:System.Web.SessionState.SessionStateModule>obiekt, który bieżącej sesji jest nowy ale odinicjowany sesji.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> <xref:System.Web.SessionState.SessionStateModule>Obiektu będą zainicjować nowej sesji i podnieść `Session_OnStart` zdarzeń.</xref:System.Web.SessionState.SessionStateModule>       Aby uzyskać więcej informacji o sesji bez plików cookie, zobacz <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>Właściwości.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>Dla bieżącego żądania.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: timeout
      type: System.Int32
      description: "Sesja <xref:System.Web.SessionState.HttpSessionState.Timeout*>dla bieżącego żądania.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> implementacji."
  remarks: "Metoda Dispose jest wywoływane, gdy <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>Metoda jest wykonywana na zamknięcie domeny aplikacji.</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> Klasy, które dziedziczą <xref:System.Web.SessionState.SessionStateStoreProviderBase>klasy można użyć tej metody zwolnić wszystkie zasoby, które nie jest już w użyciu.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Wywoływane przez <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> obiektu na końcu żądania."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę EndRequest na końcu żądania dla strony platformy ASP.NET podczas <xref:System.Web.HttpApplication.EndRequest>zdarzeń.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.SessionState.SessionStateModule> Metoda EndRequest do wykonania na żądanie oczyszczania wymaganego przez dostawcę magazynu stanu sesji."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Zwraca dane stanu sesji tylko do odczytu z magazynu danych sesji."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę GetItem na początku żądanie, podczas <xref:System.Web.HttpApplication.AcquireRequestState>zdarzeń, gdy <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atrybut ma ustawioną `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Jeśli <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atrybut ma ustawioną `true`, <xref:System.Web.SessionState.SessionStateModule>obiekt zamiast tego wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       GetItem — metoda zwraca <xref:System.Web.SessionState.SessionStateStoreData>obiektu wypełniane przy użyciu informacji o sesji z magazynu danych i aktualizuje daty wygaśnięcia dane sesji.</xref:System.Web.SessionState.SessionStateStoreData> Jeśli żadne dane elementu sesji zostanie znaleziony w magazynie danych, ustawia GetItem — metoda `locked``out` parametr `false` i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule>obiekt do wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>metodę, aby utworzyć element Nowa sesja w magazynie danych.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule>       Jeśli element sesji danych znajduje się w magazynie danych, ale dane są blokowane, zestawy GetItem — metoda `locked``out` parametr `true`, ustawia `lockAge``out` parametru bieżąca data i godzina minus daty i czasu, jeśli element został zablokowany (które są pobierane z magazynu danych), ustawia `lockId``out` parametr identyfikator blokady pobierane z magazynu danych i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule>obiekt, aby wywołać metodę GetItem ponownie po upływie czasu pół sekundy próbuje pobrać element sesji.</xref:System.Web.SessionState.SessionStateModule>       Jeśli wartość który `lockAge``out` parametr ma wartość przekracza <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>wartość, a następnie <xref:System.Web.SessionState.SessionStateModule>obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metodę, aby wyczyścić blokady danych elementu sesji, a następnie wywołuje metodę GetItem ponownie.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       `actionFlags` Parametr jest używany podczas zarówno `cookieless` i `regenerateExpiredSessionId` atrybuty są ustawione na `true`. `actionFlags` Wartość <xref:System.Web.SessionState.SessionStateActions>wskazuje, że wpis w magazynie danych sesji jest nowej sesji, która wymaga inicjowania.</xref:System.Web.SessionState.SessionStateActions> Niezainicjowany zapisy w magazynie danych sesji są tworzone przez wywołanie do <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Jeśli element ze źródła danych sesji nie jest niezainicjowany element `actionFlags` parametr będzie można ustawić na zero.       Implementacji niestandardowego magazynu stanu sesji, obsługujących sesje bez plików cookie należy ustawić `actionFlags` `out` wartość zwracana z magazynu danych sesji dla bieżącego elementu. Jeśli `actionFlags` elementu jest równa wartości parametru żądanego magazynu sesji <xref:System.Web.SessionState.SessionStateActions>wartości wyliczenia, a następnie GetItem — metoda powinna ustawić wartość w magazynie danych do zera po ustawieniu `actionFlags` `out` parametru.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>Dla bieżącego żądania.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Po powrocie z tej metody zawiera wartość logiczna, która ma ustawioną wartość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli element żądanej sesji jest zablokowany w magazynie danych sesji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Po powrocie z tej metody zawiera <xref:System.TimeSpan>obiekt, który ma ustawioną wartość ilość czasu, który element w magazynie danych sesja została zablokowana.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Po powrocie z tej metody zawiera obiekt, który jest ustawiona na identyfikator blokady dla bieżącego żądania. Aby uzyskać więcej informacji na podstawie identyfikatora blokady, zobacz &quot;Blokowania sesji magazynu danych&quot; w <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klasy podsumowania."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Gdy metoda zwróci wartość, zawiera jeden z <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> wartości, wskazującą, czy bieżąca sesja jest zainicjowany, bez plików cookie sesji."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "A <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> wypełniane przy użyciu wartości sesji i informacji z magazynu danych sesji."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Zwraca dane stanu sesji tylko do odczytu z magazynu danych sesji."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę GetItemExclusive na początku żądanie, podczas <xref:System.Web.HttpApplication.AcquireRequestState>zdarzeń, gdy <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atrybut ma ustawioną `true`, co jest ustawieniem domyślnym.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Jeśli <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atrybut ma ustawioną `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule>obiekt zamiast tego wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Zwraca metodę GetItemExclusive <xref:System.Web.SessionState.SessionStateStoreData>wypełniane przy użyciu informacji o sesji z magazynu danych obiektu aktualizacji daty wygaśnięcia przechowywanych danych i blokuje element sesji danych w magazynie danych na czas trwania żądania.</xref:System.Web.SessionState.SessionStateStoreData> Jeśli żadne dane elementu sesji zostanie znaleziony w magazynie danych, Ustawia metodę GetItemExclusive `locked` `out` parametr `false` i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule>obiekt do wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>metodę, aby utworzyć element Nowa sesja w magazynie danych.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule> Jeśli element sesji danych znajduje się w magazynie danych, ale dane są blokowane, GetItemExclusive zestawów — metoda `locked` `out` parametr `true`, ustawia `lockAge` `out` parametru bieżąca data i godzina minus daty i czasu, jeśli element został zablokowany (które są pobierane z magazynu danych), ustawia `lockId` `out` parametr identyfikator blokady pobierane z magazynu danych i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule>obiekt, aby wywołać metodę GetItemExclusive ponownie po upływie czasu pół sekundy próbuje pobrać element sesji i nałożyć blokady na danych.</xref:System.Web.SessionState.SessionStateModule> Jeśli wartość który `lockAge` `out` parametr ma wartość przekracza <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>wartość, a następnie <xref:System.Web.SessionState.SessionStateModule>wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metodę, aby wyczyścić blokady danych elementu sesji, a następnie ponownie wywołuje metodę GetItemExclusive.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       `actionFlags` Parametr jest używany podczas `cookieless` i `regenerateExpiredSessionId` atrybuty są ustawione na `true`. `actionFlags` Wartość <xref:System.Web.SessionState.SessionStateActions>wskazuje, że wpis w magazynie danych sesji jest nowej sesji, która wymaga inicjowania.</xref:System.Web.SessionState.SessionStateActions> Niezainicjowany zapisy w magazynie danych sesji są tworzone przez wywołanie do <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Jeśli element ze źródła danych sesji nie jest niezainicjowany element `actionFlags` parametr będzie można ustawić na zero.       Implementacji niestandardowego magazynu stanu sesji, obsługujących sesje bez plików cookie należy ustawić `actionFlags` `out` wartość zwracana z magazynu danych sesji dla bieżącego elementu. Jeśli `actionFlags` elementu jest równa wartości parametru żądanego magazynu sesji <xref:System.Web.SessionState.SessionStateActions>wartości wyliczenia, a następnie metodę GetItemExclusive należy ustawić wartość w magazynie danych do zera po ustawieniu `actionFlags` `out` parametru.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>Dla bieżącego żądania.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Po powrocie z tej metody zawiera wartość logiczna, która ma ustawioną wartość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli blokady jest pomyślnie uzyskanych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Po powrocie z tej metody zawiera <xref:System.TimeSpan>obiekt, który ma ustawioną wartość ilość czasu, który element w magazynie danych sesja została zablokowana.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Po powrocie z tej metody zawiera obiekt, który jest ustawiona na identyfikator blokady dla bieżącego żądania. Aby uzyskać więcej informacji na podstawie identyfikatora blokady, zobacz &quot;Blokowania sesji magazynu danych&quot; w <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klasy podsumowania."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Gdy metoda zwróci wartość, zawiera jeden z <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> wartości, wskazującą, czy bieżąca sesja jest zainicjowany, bez plików cookie sesji."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "A <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> wypełniane przy użyciu wartości sesji i informacji z magazynu danych sesji."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Wywoływane przez <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> obiekt do zainicjowania danego żądania."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę InitializeRequest przed wywołaniem innych <xref:System.Web.SessionState.SessionStateStoreProviderBase>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule> Metoda InitializeRequest przeprowadzić inicjowanie na żądanie wymagane przez dostawcę magazynu stanu sesji."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Zwalnia blokadę elementu w dane sesji magazynu."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę ReleaseItemExclusive do aktualizacji daty wygaśnięcia i zwolnić blokady elementu w magazynie danych sesji.</xref:System.Web.SessionState.SessionStateModule> Jest ona wywoływana na końcu żądania, podczas <xref:System.Web.HttpApplication.ReleaseRequestState>zdarzeń, jeśli wartości sesji nie uległy zmianie.</xref:System.Web.HttpApplication.ReleaseRequestState> W przypadku modyfikacji wartości sesji <xref:System.Web.SessionState.SessionStateModule>obiekt zamiast tego wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metody.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       <xref:System.Web.SessionState.SessionStateModule>Obiektu również wywołuje metodę ReleaseItemExclusive przekroczenia blokady elementu w magazynie danych sesji <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>wartość.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateModule> Więcej informacji na temat blokowania i szczegółowe informacje o identyfikator blokady, zobacz &quot;Blokowanie sesji magazynu danych&quot; w <xref:System.Web.SessionState.SessionStateStoreProviderBase>Przegląd klasy.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Metoda ReleaseItemExclusive umożliwia tylko usunięcie blokady z elementu w magazynie danych sesji dla bieżącej aplikacji, która odpowiada podanej sesji `id` i `lockId` wartości. Jeśli `lockId` nie odpowiada co w magazynie danych, metoda ReleaseItemExclusive nie działają."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: id
      type: System.String
      description: "Identyfikator sesji dla bieżącego żądania."
    - id: lockId
      type: System.Object
      description: "Identyfikator blokady dla bieżącego żądania."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Usuwa element danych z magazynu danych sesji."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę RemoveItem na końcu żądania, podczas <xref:System.Web.HttpApplication.ReleaseRequestState>zdarzeń do usunięcia danych dla elementu sesji z magazynu danych sesji, jeśli <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>została wywołana metoda.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Tylko dane sesji dla bieżącej aplikacji, która odpowiada podanej sesji `id` i `lockId` wartości są usuwane. Więcej informacji na temat blokowania i szczegółowe informacje o identyfikator blokady, zobacz &quot;Blokowanie sesji magazynu danych&quot; w <xref:System.Web.SessionState.SessionStateStoreProviderBase>Przegląd klasy.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: id
      type: System.String
      description: "Identyfikator sesji dla bieżącego żądania."
    - id: lockId
      type: System.Object
      description: "Identyfikator blokady dla bieżącego żądania."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> Reprezentujący element, aby usunąć z magazynu danych."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aktualizuje datę i godzinę wygaśnięcia elementu w magazynie danych sesji."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę ResetItemTimeout zaktualizować datę i godzinę wygaśnięcia sesji do bieżącej daty i godziny oraz sesji <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>wartość przy albo: - <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atrybutu `true`, lub - nie wygenerował żądania <xref:System.Web.HttpApplication.AcquireRequestState>i <xref:System.Web.HttpApplication.ReleaseRequestState>zdarzenia z powodu błędu.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.SessionState.HttpSessionState.Timeout%2A> </xref:System.Web.SessionState.SessionStateModule>       Jeśli żądanie strony ASP.NET i <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atrybut ma ustawioną `false`, nadal wywoływana jest metoda ResetItemTimeout do aktualizacji, datę i godzinę wygaśnięcia danych w magazynie danych sesji.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: id
      type: System.String
      description: "Identyfikator sesji dla bieżącego żądania."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aktualizuje informacji element sesji w magazynie danych stanu sesji przy użyciu wartości z bieżącego żądania, a następnie usuwa blokadę danych."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę SetAndReleaseItemExclusive na końcu żądania, podczas <xref:System.Web.HttpApplication.ReleaseRequestState>zdarzeń do wstawiania informacji bieżący element sesji do magazynu danych lub zaktualizowanie istniejących informacji element sesji w magazynie danych z bieżącej wartości, aby zaktualizować czas wygaśnięcia w elemencie i zwalnia blokadę danych.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Tylko dane sesji dla bieżącej aplikacji, która odpowiada podanej sesji `id` i `lockId` zaktualizować wartości. Aby uzyskać więcej informacji na temat blokowania, zobacz &quot;Blokowanie sesji magazynu danych&quot; w <xref:System.Web.SessionState.SessionStateStoreProviderBase>Przegląd klasy.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Jeśli nie zostały zmodyfikowane wartości sesji dla bieżącego żądania, nie wywołano metody SetAndReleaseItemExclusive. Zamiast tego <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>Metoda jest wywoływana.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>       Jeśli <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>Metoda została wywołana, nie jest wywoływana metoda SetAndReleaseItemExclusive.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Zamiast tego <xref:System.Web.SessionState.SessionStateModule>obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metodę, aby usunąć element sesji dane ze źródła danych.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
    - id: id
      type: System.String
      description: "Identyfikator sesji dla bieżącego żądania."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> Obiekt, który zawiera wartości bieżącej sesji, które mają być przechowywane."
    - id: lockId
      type: System.Object
      description: "Identyfikator blokady dla bieżącego żądania."
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zidentyfikować element sesji jako nowy element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> do identyfikowania element sesji jako istniejący element."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ustawia odwołanie <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegować <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> zdarzeń zdefiniowanych w pliku Global.asax."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Obiektu wywołuje metodę SetItemExpireCallback podczas inicjowania modułu ustalenie, czy wywołań `Session_OnEnd` zdarzenia są obsługiwane przez <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementacji i kojarzenia <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegat `Session_OnEnd` zdarzeń.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule>       Implementacje dostawcy niestandardowego magazynu stanu sesji powinien użyć metody SetItemExpireCallback informują o tym <xref:System.Web.SessionState.SessionStateModule>obiektu czy wywołań `Session_OnEnd` zdarzenia są obsługiwane i ustawić lokalnego odwołania <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegata dostarczonych przez `expireCallback` parametru.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> Implementacja niestandardowa należy określić, kiedy lokalnej <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegata zostanie wywołana.</xref:System.Web.SessionState.SessionStateItemExpireCallback> Na przykład można wywołać delegata podczas wywołanie <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metodę, która jest wywoływana, gdy sesja zostanie zaniechana.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "<xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> Delegować <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> zdarzeń zdefiniowanych w pliku Global.asax."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostawca magazynu stanu sesji obsługuje wywoływania <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> zdarzeń; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
