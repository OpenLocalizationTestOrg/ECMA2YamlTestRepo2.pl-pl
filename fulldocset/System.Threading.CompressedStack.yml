### YamlMime:ManagedReference
items:
- uid: System.Threading.CompressedStack
  id: CompressedStack
  children:
  - System.Threading.CompressedStack.Capture
  - System.Threading.CompressedStack.CreateCopy
  - System.Threading.CompressedStack.GetCompressedStack
  - System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  langs:
  - csharp
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
  type: Class
  summary: "Udostępnia metody do ustawiania i przechwytywanie skompresowany stosu w bieżącym wątku. Ta klasa nie może być dziedziczona."
  remarks: "Skompresowany stos jest compact reprezentacja wszystkich kodu dostępu do informacji o zabezpieczeniach w stosie wywołań, taką jak <xref:System.Security.CodeAccessPermission.Deny%2A>i <xref:System.Security.CodeAccessPermission.Assert%2A>Akcje.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Deny%2A> Na przykład jeśli <xref:System.Security.CodeAccessPermission.Deny%2A>akcji jest dwa zająć ramki z bieżącej ramki i nie Brak kodu dostępu adnotacje zabezpieczeń między nim a bieżącej ramki stosu skompresowany rejestruje tylko te informacje, bez konieczności serializować cały stos wywołań.</xref:System.Security.CodeAccessPermission.Deny%2A>       CompressedStackclass jest używana wewnętrznie przez <xref:System.Security.SecurityContext>klasę.</xref:System.Security.SecurityContext> Na przykład <xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName>metody przechwytuje skompresowany stosu dla bieżącego stosu wywołań, wraz z informacjami personifikacja i kultury.</xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName> <xref:System.Security.SecurityContext>Klasa jest używana z kolei przez <xref:System.Threading.ExecutionContext>klasy do kontekstu przepływu w wątkach, na przykład podczas planowania zadań puli wątków.</xref:System.Threading.ExecutionContext> </xref:System.Security.SecurityContext>       Ta klasa nie jest używana w programowaniu zwykłej aplikacji."
  syntax:
    content: 'public sealed class CompressedStack : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.Capture
  id: Capture
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Przechwytuje skompresowany stosu z bieżącego wątku."
  remarks: "Przechwytuje wszystkie kodu dostępu do informacji o zabezpieczeniach w stosie wywołań, taką jak <xref:System.Security.CodeAccessPermission.Deny%2A>i <xref:System.Security.CodeAccessPermission.Assert%2A>działania w formacie skompresowanym.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Deny%2A> Na przykład jeśli <xref:System.Security.CodeAccessPermission.Deny%2A>akcji jest dwa zająć ramki z bieżącej ramki i nie Brak kodu dostępu adnotacje zabezpieczeń między nim a bieżącej ramki stosu skompresowany rejestruje tylko te informacje, bez konieczności serializować cały stos wywołań.</xref:System.Security.CodeAccessPermission.Deny%2A>       Przechwycony stosu skompresowany może odnosić się do innego wątku."
  syntax:
    content: public static System.Threading.CompressedStack Capture ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;></xref> object."
  overload: System.Threading.CompressedStack.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.CreateCopy
  id: CreateCopy
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Tworzy kopię bieżącego stosu skompresowane."
  remarks: "Ta metoda jest przydatna przy tworzeniu kopię bieżącego stosu skompresowany do zastosowania do innego wątku."
  syntax:
    content: public System.Threading.CompressedStack CreateCopy ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;> </xref> obiekt reprezentujący bieżący stos skompresowane."
  overload: System.Threading.CompressedStack.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetCompressedStack
  id: GetCompressedStack
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pobiera stos skompresowany bieżącego wątku."
  remarks: "W przypadku zabezpieczeń jest włączone, jest zwracana bieżącego stosu skompresowane. Wyłączenie zabezpieczeń GetCompressedStack zwraca pustą <xref:System.Threading.CompressedStack>obiektu.</xref:System.Threading.CompressedStack>      > [!NOTE] > Ta metoda używa <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>Aby zapobiec jest wywoływany z kodu niezaufane; musi mieć tylko bezpośredniego obiektu wywołującego <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>uprawnień.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> Ważne ograniczenia dotyczące używania `LinkDemand` — członek, zobacz [żądanie vs. Żądanie LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5).      > [!NOTE] > Żądanie łącza ECMA klucza publicznego, który nie jest prawidłowy klucz kryptograficzny, ale klucz pseudo powoduje tego elementu członkowskiego. W programie .NET Framework linkdemand dla klucza pseudo ECMA jest automatycznie konwertowany na żądanie łącza dla klucza publicznego firmy Microsoft. Wyjątek zabezpieczeń jest oparta na Microsoft klucz publiczny nie klucza pseudo ECMA."
  syntax:
    content: public static System.Threading.CompressedStack GetCompressedStack ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;> </xref> dla bieżącego wątku."
  overload: System.Threading.CompressedStack.GetCompressedStack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.       - lub - żądanie <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> nie powiodło się."
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Ustawia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> obiekt z kontekstu logicznej potrzebnych do ponownie tworzy wystąpienie tego kontekstu wykonywania."
  remarks: "Ustawia metodę GetObjectData <xref:System.Runtime.Serialization.SerializationInfo>o logicznym wywołań informacje o kontekście.</xref:System.Runtime.Serialization.SerializationInfo> Podczas deserializacji, obiekt kontekstu wykonywania jest odtworzonych z <xref:System.Runtime.Serialization.SerializationInfo>przesyłane przez strumień.</xref:System.Runtime.Serialization.SerializationInfo>       Aby uzyskać więcej informacji zobacz <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Obiektu wypełniana informacje o serializacji."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>Strukturę przedstawiającą docelowy kontekst serializacji.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Threading.CompressedStack.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  id: Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Uruchamia metody w określonym stosie skompresowanych w bieżącym wątku."
  remarks: "Po zakończeniu metody, skompresowany stosu jest zwracana do jego poprzedniego stanu."
  syntax:
    content: public static void Run (System.Threading.CompressedStack compressedStack, System.Threading.ContextCallback callback, object state);
    parameters:
    - id: compressedStack
      type: System.Threading.CompressedStack
      description: "The <xref href=&quot;System.Threading.CompressedStack&quot;></xref> to set."
    - id: callback
      type: System.Threading.ContextCallback
      description: "A <xref:System.Threading.ContextCallback>reprezentujący metody, które mają być wykonywane w kontekście zabezpieczeń określonego.</xref:System.Threading.ContextCallback>"
    - id: state
      type: System.Object
      description: "Obiekt przekazywany do metody wywołania zwrotnego."
  overload: System.Threading.CompressedStack.Run*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>compressedStack</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.CompressedStack.Capture
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
- uid: System.Threading.CompressedStack
  parent: System.Threading
  isExternal: false
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
- uid: System.Threading.CompressedStack.CreateCopy
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
- uid: System.Threading.CompressedStack.GetCompressedStack
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: true
  name: ContextCallback
  nameWithType: ContextCallback
  fullName: System.Threading.ContextCallback
- uid: System.Threading.CompressedStack.Capture*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture
  nameWithType: CompressedStack.Capture
- uid: System.Threading.CompressedStack.CreateCopy*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy
  nameWithType: CompressedStack.CreateCopy
- uid: System.Threading.CompressedStack.GetCompressedStack*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack
  nameWithType: CompressedStack.GetCompressedStack
- uid: System.Threading.CompressedStack.GetObjectData*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData
  nameWithType: CompressedStack.GetObjectData
- uid: System.Threading.CompressedStack.Run*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run
  nameWithType: CompressedStack.Run
