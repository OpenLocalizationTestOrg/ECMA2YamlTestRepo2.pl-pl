### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngProperty
  id: CngProperty
  children:
  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngProperty.Equals(System.Object)
  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.GetHashCode
  - System.Security.Cryptography.CngProperty.GetValue
  - System.Security.Cryptography.CngProperty.Name
  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.Options
  langs:
  - csharp
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
  type: Struct
  summary: "Hermetyzuje właściwości klucza kryptografii nowej generacji (CNG) lub dostawcy."
  remarks: "Ta klasa hermetyzuje nazwa właściwości (ciąg), wartość (tablicę bajtów), <xref:System.Security.Cryptography.CngPropertyOptions>flagi, właściwości metody dostępu i porównania i Tworzenie skrótu funkcji.</xref:System.Security.Cryptography.CngPropertyOptions>       Ta klasa jest używana z <xref:System.Security.Cryptography.CngKey.SetProperty%2A>i <xref:System.Security.Cryptography.CngKey.GetProperty%2A>metody.</xref:System.Security.Cryptography.CngKey.GetProperty%2A> </xref:System.Security.Cryptography.CngKey.SetProperty%2A>"
  syntax:
    content: 'public struct CngProperty : IEquatable<System.Security.Cryptography.CngProperty>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Security.Cryptography.CngProperty>
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> klasy."
  remarks: "Właściwości, które są przechowywane w określonych <xref:System.Security.Cryptography.CngPropertyOptions>flagi wymagają ten sam zestaw flagi, gdy są one pobierane.</xref:System.Security.Cryptography.CngPropertyOptions>"
  syntax:
    content: public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa właściwości inicjowania."
    - id: value
      type: System.Byte[]
      description: "Wartość właściwości inicjowania."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Bitowe połączenie wartości wyliczenia, które określają sposób przechowywania właściwości."
  overload: System.Security.Cryptography.CngProperty.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Porównuje określony obiekt do bieżącego <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
  remarks: "<xref:System.Security.Cryptography.CngProperty>obiekty są traktowane jako równe, jeśli ich nazwy, wartości i opcje są równoważne.</xref:System.Security.Cryptography.CngProperty> Nazwa porównania odbywa się w sposób, z uwzględnieniem wielkości liter."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do porównania z bieżącą <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> obj </code> parametr jest <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiekt, który określa tę samą właściwość do bieżącego obiektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  id: Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Porównuje określony <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu do bieżącego <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
  remarks: "<xref:System.Security.Cryptography.CngProperty>obiekty są traktowane jako równe, jeśli ich nazwy, wartości i opcje są równoważne.</xref:System.Security.Cryptography.CngProperty> Nazwa porównania odbywa się w sposób, z uwzględnieniem wielkości liter."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngProperty other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProperty
      description: "Obiekt do porównania z bieżącą <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> other </code> parametr reprezentuje tę samą właściwość do bieżącego obiektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Generuje wartość skrótu dla bieżącego <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu bieżącego <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.CngProperty.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetValue
  id: GetValue
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Pobiera wartość właściwości, która bieżącego <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> określa obiekt."
  syntax:
    content: public byte[] GetValue ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica, która reprezentuje wartość przechowywana we właściwości."
  overload: System.Security.Cryptography.CngProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Name
  id: Name
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Pobiera właściwość nazwę, która jest bieżącą <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> określa obiekt."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Nazwy właściwości, która jest ustawiona w bieżącej <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.CngProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Określa, czy dwa <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> Podaj obiekty tej samej nazwy właściwości, wartość oraz opcje."
  remarks: "<xref:System.Security.Cryptography.CngProperty>obiekty są traktowane jako równe, jeśli ich nazwy, wartości i opcje są równoważne.</xref:System.Security.Cryptography.CngProperty> Nazwa porównania odbywa się w sposób, z uwzględnieniem wielkości liter."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "Obiekt, który określa właściwość klucza kryptografii nowej generacji (CNG) lub dostawcy."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "Drugi obiekt, aby porównać do obiektu, który jest identyfikowany przez `left` parametru."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa obiekty Określ tę samą właściwość; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Określa, czy dwa <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektów nie należy określać tej samej nazwy właściwości, wartość oraz opcje."
  remarks: "<xref:System.Security.Cryptography.CngProperty>obiekty są traktowane jako równe, jeśli ich nazwy, wartości i opcje są równoważne.</xref:System.Security.Cryptography.CngProperty> Nazwa porównania odbywa się w sposób, z uwzględnieniem wielkości liter."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "Obiekt, który określa właściwość klucza kryptografii nowej generacji (CNG) lub dostawcy."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "Drugi obiekt, aby porównać do obiektu, który jest identyfikowany przez `left` parametru."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa obiekty nie określono właściwości tego samego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Options
  id: Options
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Pobiera opcje właściwości, które bieżącego <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> określa obiekt."
  remarks: "<xref:System.Security.Cryptography.CngKey>obiekty zawierają <xref:System.Security.Cryptography.CngProperty>obiektów, które zawierają <xref:System.Security.Cryptography.CngPropertyOptions>przechowywanym właściwość z.</xref:System.Security.Cryptography.CngPropertyOptions> </xref:System.Security.Cryptography.CngProperty></xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public System.Security.Cryptography.CngPropertyOptions Options { get; }
    return:
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Obiekt, który określa opcje, które są ustawiane w bieżącym <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.CngProperty.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngProperty.GetValue
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
- uid: System.Security.Cryptography.CngProperty.Name
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.Options
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
- uid: System.Security.Cryptography.CngProperty.#ctor*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty.CngProperty
- uid: System.Security.Cryptography.CngProperty.Equals*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals
  nameWithType: CngProperty.Equals
- uid: System.Security.Cryptography.CngProperty.GetHashCode*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode
  nameWithType: CngProperty.GetHashCode
- uid: System.Security.Cryptography.CngProperty.GetValue*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue
  nameWithType: CngProperty.GetValue
- uid: System.Security.Cryptography.CngProperty.Name*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality
  nameWithType: CngProperty.op_Equality
- uid: System.Security.Cryptography.CngProperty.op_Inequality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality
  nameWithType: CngProperty.op_Inequality
- uid: System.Security.Cryptography.CngProperty.Options*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
