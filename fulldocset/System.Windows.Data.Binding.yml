### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.Binding
  id: Binding
  children:
  - System.Windows.Data.Binding.#ctor
  - System.Windows.Data.Binding.#ctor(System.String)
  - System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AsyncState
  - System.Windows.Data.Binding.BindsDirectlyToSource
  - System.Windows.Data.Binding.Converter
  - System.Windows.Data.Binding.ConverterCulture
  - System.Windows.Data.Binding.ConverterParameter
  - System.Windows.Data.Binding.DoNothing
  - System.Windows.Data.Binding.ElementName
  - System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  - System.Windows.Data.Binding.IndexerName
  - System.Windows.Data.Binding.IsAsync
  - System.Windows.Data.Binding.Mode
  - System.Windows.Data.Binding.NotifyOnSourceUpdated
  - System.Windows.Data.Binding.NotifyOnTargetUpdated
  - System.Windows.Data.Binding.NotifyOnValidationError
  - System.Windows.Data.Binding.Path
  - System.Windows.Data.Binding.RelativeSource
  - System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  - System.Windows.Data.Binding.ShouldSerializePath
  - System.Windows.Data.Binding.ShouldSerializeSource
  - System.Windows.Data.Binding.ShouldSerializeValidationRules
  - System.Windows.Data.Binding.Source
  - System.Windows.Data.Binding.SourceUpdatedEvent
  - System.Windows.Data.Binding.TargetUpdatedEvent
  - System.Windows.Data.Binding.UpdateSourceExceptionFilter
  - System.Windows.Data.Binding.UpdateSourceTrigger
  - System.Windows.Data.Binding.ValidatesOnDataErrors
  - System.Windows.Data.Binding.ValidatesOnExceptions
  - System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  - System.Windows.Data.Binding.ValidationRules
  - System.Windows.Data.Binding.XmlNamespaceManagerProperty
  - System.Windows.Data.Binding.XPath
  langs:
  - csharp
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
  type: Class
  summary: "Zapewnia dostęp wysokiego poziomu do definicji powiązania, który jest połączony właściwości powiązania obiektów docelowych (zazwyczaj [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] elementy) i dowolnego źródła danych (na przykład bazę danych, [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] pliku lub dowolnego obiektu, który zawiera dane)."
  remarks: "[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]Powiązanie danych zapewnia prosty i spójny sposób dla aplikacji przedstawić i interakcji z danymi. Powiązanie danych pozwala na synchronizowanie wartości właściwości z dwóch różnych obiektów.       Aby ustanowić powiązanie, należy użyć klasy powiązanie lub jednej z klas, które dziedziczą <xref:System.Windows.Data.BindingBase>.</xref:System.Windows.Data.BindingBase> Niezależnie od tego, jak obiekt powiązania i rodzaj źródła danych, każdego powiązania jest zgodna z modelem zilustrowane na poniższym rysunku.       ![Diagram podstawowego powiązania danych](~/add/media/databindingmostbasic.png &quot;diagram podstawowego powiązania danych&quot;) na rysunku pokazano następujące podstawowe [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] pojęcia dotyczące powiązania danych.      -Każdego powiązania ma zwykle te cztery składniki: powiązania obiektu docelowego, właściwość target, źródle powiązania i <xref:System.Windows.Data.Binding.Path%2A>wartości w źródle powiązania do użycia.</xref:System.Windows.Data.Binding.Path%2A> Na przykład, jeśli chcesz powiązać zawartość <xref:System.Windows.Controls.TextBox>do właściwości Name obiektu pracownika, obiekt docelowy jest <xref:System.Windows.Controls.TextBox>, właściwość docelowa jest <xref:System.Windows.Controls.TextBox.Text%2A>Właściwości, wartość jest nazwą, a obiekt źródłowy jest obiektem pracownika.</xref:System.Windows.Controls.TextBox.Text%2A> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>      -Właściwość target musi być właściwością zależności. Oznacza to również, że nie można powiązać pola. Większość właściwości <xref:System.Windows.UIElement>obiekty są właściwości zależności i większość właściwości zależności, z wyjątkiem sieci tylko do odczytu, obsługuje powiązanie danych domyślnie.</xref:System.Windows.UIElement> (Tylko typy <xref:System.Windows.DependencyObject>można zdefiniować właściwości zależności i wszystkie obiekty <xref:System.Windows.UIElement>pochodzi od <xref:System.Windows.DependencyObject>).      — Mimo że nie określono na ilustracji, należy zauważyć, że powiązanie obiekt źródłowy nie jest ograniczona do trwa niestandardowego [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] obiektu.</xref:System.Windows.DependencyObject> </xref:System.Windows.UIElement> </xref:System.Windows.DependencyObject> [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]Powiązanie danych obsługuje dane w postaci [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] obiektów i [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]. Zapewnienie przykłady, może być źródle powiązania <xref:System.Windows.UIElement>, dowolnego obiektu listy [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] obiektu, z którym skojarzony jest [!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)] danych lub usługi sieci Web lub element XmlNode, który zawiera Twoje [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] danych.</xref:System.Windows.UIElement>       Użyj <xref:System.Windows.Data.Binding.Mode%2A>właściwość, aby określić kierunek przepływu danych.</xref:System.Windows.Data.Binding.Mode%2A> Aby wykryć zmiany źródła w-lub dwukierunkowo, źródło musi implementować mechanizm powiadomień zmiany odpowiednie właściwości, takie jak <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> Na przykład zobacz [porady: Implementowanie powiadomienie o zmianie właściwości](~/add/includes/ajax-current-ext-md.md). <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>Właściwość określa czas źródła aktualizacji.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Aby uzyskać więcej informacji, zobacz &quot;Podstawowe dane powiązanie pojęcia&quot; w [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_PriorityBinding&quot;></a>## Użycie atrybutu XAML ```   <object property=&quot;{Binding  declaration}&quot;/>   ``` <a name=&quot;xamlValues_PriorityBinding&quot;> </a> ## wartości XAML *deklaracji* Zero lub więcej klauzule atrybutu przypisania rozdzielonych przecinkami (,).       Aby uzyskać więcej informacji, zobacz [powiązanie — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md) lub [powiązanie Przegląd deklaracji](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class Binding : System.Windows.Data.BindingBase'
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements: []
  inheritedMembers:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> klasy."
  syntax:
    content: public Binding ();
    parameters: []
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> klasy ze ścieżką początkowej."
  syntax:
    content: public Binding (string path);
    parameters:
    - id: path
      type: System.String
      description: "Pierwszy <xref:System.Windows.Data.Binding.Path*>dla powiązania.</xref:System.Windows.Data.Binding.Path*>"
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Dodaje funkcję obsługi <xref:System.Windows.Data.Binding.SourceUpdated>dołączony zdarzeń.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Ta metoda obsługuje użycie dołączone zdarzenie [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą na zdarzenie."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "Program obsługi do dodania."
  overload: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Dodaje obsługę <xref:System.Windows.Data.Binding.TargetUpdated>dołączony zdarzeń.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Ta metoda obsługuje użycie dołączone zdarzenie [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą na zdarzenie."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "Program obsługi do dodania."
  overload: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AsyncState
  id: AsyncState
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia nieprzezroczyste dane przekazane do dyspozytora danych asynchronicznych."
  syntax:
    content: public object AsyncState { get; set; }
    return:
      type: System.Object
      description: "Dane przekazywane do dyspozytora danych asynchronicznych."
  overload: System.Windows.Data.Binding.AsyncState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  id: BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy do oceny <xref:System.Windows.Data.Binding.Path*>względem elementu danych lub <xref href=&quot;System.Windows.Data.DataSourceProvider&quot;> </xref> obiektu.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "Normalne zachowanie (Jeśli ta właściwość jest `false`) zawiera specjalnego przetwarzania dla <xref:System.Windows.Data.DataSourceProvider>obiektów.</xref:System.Windows.Data.DataSourceProvider> W takim przypadku ocenia aparat wiązania <xref:System.Windows.Data.Binding.Path%2A>względem obiektu uzyskane z <xref:System.Windows.Data.DataSourceProvider.Data%2A>Właściwości.</xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.Binding.Path%2A> Ponadto powiązania nasłuchuje <xref:System.Windows.Data.DataSourceProvider.DataChanged>zdarzenia i odpowiednio reaguje.</xref:System.Windows.Data.DataSourceProvider.DataChanged> Ustawienie tej właściwości na `true` zastąpienia tego zachowania i pozwala na powiązanie dostępu do właściwości <xref:System.Windows.Data.DataSourceProvider>samego obiektu.</xref:System.Windows.Data.DataSourceProvider>"
  syntax:
    content: public bool BindsDirectlyToSource { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Aby obliczyć ścieżki względem elementu danych. w przeciwnym razie <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.BindsDirectlyToSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Converter
  id: Converter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia konwerter do użycia."
  remarks: "Powiązanie niejawnie wykorzystuje konwerter domyślny, który próbuje przeprowadzić konwersji typu wartości źródła z wartością docelową. Jeśli nie można dokonać konwersji, zwraca konwerter domyślne `null`.       Jeśli chcesz skojarzyć z powiązaniem konwertera niestandardowej wartości, należy utworzyć klasę, która implementuje <xref:System.Windows.Data.IValueConverter>interfejsu i podaj implementacji dla <xref:System.Windows.Data.IValueConverter.Convert%2A>i <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>metody.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter> Konwertery wartości można zmiana typu danych, tłumaczenia kultury szczegóły, takie jak zestawy znaków lub zmodyfikuj inne aspekty ich prezentacji. Przykłady typowych konwersji scenariuszy, zobacz &quot;Konwersja danych&quot; w [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_Converter&quot;></a>## Użycie atrybutu XAML ```   <object Converter=&quot;myConverter&quot;/>   ``` <a name=&quot;xamlValues_Converter&quot;> </a> ## wartości XAML *myConverter* zasobów odwołanie do klasy, która implementuje <xref:System.Windows.Data.IValueConverter>interfejsu, który zawiera implementacje <xref:System.Windows.Data.IValueConverter.Convert%2A>i <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>metody.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter>       Aby odwołać się do konwerter wartości, należy użyć [StaticResource — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.IValueConverter Converter { get; set; }
    return:
      type: System.Windows.Data.IValueConverter
      description: "Wartości typu <xref href=&quot;System.Windows.Data.IValueConverter&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia kulturę, w której ma zostać oszacowana konwerter."
  remarks: "Jeśli ta właściwość nie jest ustawiona, aparat wiązania używa `Language` właściwości powiązania obiektu docelowego. W [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] to domyślne &quot;en-us&quot; lub dziedziczy wartości z elementem głównym (lub dowolnego elementu) strony, jeśli został jawnie zdefiniowany.       Aby uzyskać informacje o konwersji danych, zobacz sekcję Konwersja danych w [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Globalization.CultureInfo ConverterCulture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub Ustawia parametr do przekazania do <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*>"
  remarks: "Właściwość ConverterParameter służy do określania, jak przekonwertować obiektu.  Ta właściwość przekazuje informacje dodatkowe konwerter, który jest używany w powiązaniu.  Po określeniu ConverterParameter wartość jest przekazywana do <xref:System.Windows.Data.IValueConverter.Convert%2A>i <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>metod jako `parameter` parametru.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A>       Na przykład zobacz [jak: utworzyć wartość oparta na z powiązane elementy listy](~/add/includes/ajax-current-ext-md.md). Ten przykład przedstawia implementację <xref:System.Windows.Data.IMultiValueConverter>, ale nadal stosuje się użycie.</xref:System.Windows.Data.IMultiValueConverter>"
  syntax:
    content: public object ConverterParameter { get; set; }
    return:
      type: System.Object
      description: "Parametr do przekazania do <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*> Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.DoNothing
  id: DoNothing
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Używane jako wartości zwracane nakazać aparat wiązania nie do wykonywania dowolnych akcji."
  remarks: "Właściwość powiązania źródła lub konwertera może zwrócić DoNothing nakazać aparat wiązania nie do wykonywania dowolnych akcji. Na przykład, aby poinstruować aparat wiązania nie można przenieść wartość docelowa powiązania nie, aby przejść do następnej <xref:System.Windows.Data.Binding>w <xref:System.Windows.Data.PriorityBinding>, lub nie należy używać `FallBackValue` lub wartość domyślną.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public static readonly object DoNothing;
    return:
      type: System.Object
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ElementName
  id: ElementName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia nazwę elementu ma być używana jako obiekt źródłowy powiązania."
  remarks: "Ta właściwość jest przydatna, jeśli chcesz powiązać z właściwością innego elementu w aplikacji. Na przykład, jeśli chcesz użyć <xref:System.Windows.Controls.Slider>mogą kontrolować jego wysokość formantem w aplikacji lub jeśli chcesz powiązać <xref:System.Windows.Controls.ContentControl.Content%2A>kontroli w celu <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>Właściwości użytkownika <xref:System.Windows.Controls.ListBox>kontroli.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> </xref:System.Windows.Controls.ContentControl.Content%2A> </xref:System.Windows.Controls.Slider>       Domyślnie powiązania dziedziczą kontekstu danych, określonej przez `DataContext` właściwości, jeśli została ustawiona. Jednak właściwość ElementName jest jednym ze sposobów jawne można ustawić źródła <xref:System.Windows.Data.Binding>i zastąpić kontekstu danych dziedziczonych.</xref:System.Windows.Data.Binding> Aby uzyskać więcej informacji, zobacz [porady: Określanie powiązania źródła](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.Data.Binding.Source%2A>i <xref:System.Windows.Data.Binding.RelativeSource%2A>właściwości <xref:System.Windows.Data.Binding>klasy umożliwiają także ustawić źródło wiązania jawnie.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> Jednak tylko jeden z trzech właściwości ElementName, <xref:System.Windows.Data.Binding.Source%2A>, i <xref:System.Windows.Data.Binding.RelativeSource%2A>, powiązanie zestawu dla każdego powinny być lub może wystąpić konflikt.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> Ta właściwość zgłasza wyjątek, jeśli występuje konflikt powiązania źródła."
  syntax:
    content: public string ElementName { get; set; }
    return:
      type: System.String
      description: "Wartość <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> właściwości lub [x: Name — dyrektywa](~/add/includes/ajax-current-ext-md.md) elementu zainteresowań. Elementy w kodzie może dotyczyć tylko wtedy, gdy są one zarejestrowane do odpowiedniego <xref:System.Windows.NameScope>za pośrednictwem <xref uid=&quot;langword_csharp_RegisterName&quot; name=&quot;RegisterName&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.NameScope> Aby uzyskać więcej informacji, zobacz [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md).       Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  id: GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Zwraca [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] obiekt menedżera przestrzeni nazw używany przez powiązanie dołączony do określonego obiektu."
  remarks: "Ta metoda obsługuje użycie dołączona właściwość <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>dołączona właściwość.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>       [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]przestrzeń nazw menedżerów dotyczą tylko wtedy, gdy danych powiązanie pochodzi z [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] źródle powiązania (<xref:System.Windows.Data.XmlDataProvider> obiektu).</xref:System.Windows.Data.XmlDataProvider>       Jeśli Menedżer przestrzeni nazw nie została specjalnie zastosowana podczas tworzenia oryginalnego źródła danych lub następnie wywołując <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>w powiązaniu, to ta metoda zwróci `null`.</xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>       Ta metoda zawsze zwraca `null` Jeśli dane źródłowe powiązania nie jest [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]."
  syntax:
    content: public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "Obiekt, z którego można pobrać informacji dotyczących przestrzeni nazw."
    return:
      type: System.Xml.XmlNamespaceManager
      description: "Zwrócony obiekt używany do wyświetlania [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] przestrzeni nazw, które odnoszą się do powiązania w elemencie przekazany obiekt. Ten obiekt powinien być rzutowany jako &lt;xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt;."
  overload: System.Windows.Data.Binding.GetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> target </code> Parametr nie może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.IndexerName
  id: IndexerName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Używane jako <xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>z &lt;xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName&gt; aby wskazać, że właściwości indeksatora została zmieniona.</xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>"
  syntax:
    content: public const string IndexerName;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.IsAsync
  id: IsAsync
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> należy pobrać i ustaw wartości asynchronicznie."
  remarks: "Użyj właściwości IsAsync podczas `get` akcesor właściwości źródła powiązania może zająć dużo czasu. Przykładem jest właściwością obrazu z `get` dostępu, który pobiera z sieci Web. Ustawienie IsAsync `true` pozwala uniknąć blokuje [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] podczas pobierania występuje.       Podczas oczekiwania na odebranie wartość, raporty powiązania <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, jeśli jest dostępny, lub wartość domyślną powiązania właściwość target.</xref:System.Windows.Data.BindingBase.FallbackValue%2A>       Jednak nie powinien zawierać wiele scenariuszy, w których należy użyć właściwości IsAsync. [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] Wytyczne zaleca się definiowania właściwości, które są rzędów wolniej niż zestaw pól. Podczas tworzenia klasy należy wziąć pod uwagę bardzo wolno obchodzenia poza `get` metody dostępu i buforowania wyniku. Aby uzyskać więcej informacji, zobacz [NIB: Wybieranie między właściwości i metody](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)."
  syntax:
    content: public bool IsAsync { get; set; }
    return:
      type: System.Boolean
      description: "Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Mode
  id: Mode
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość, która wskazuje kierunek przepływu danych w powiązaniu."
  remarks: "Do obsługi <xref:System.Windows.Data.BindingMode>i <xref:System.Windows.Data.BindingMode>powiązań, danych musi implementować <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Aby uzyskać więcej informacji, zobacz [porady: Implementowanie powiadomienie o zmianie właściwości](~/add/includes/ajax-current-ext-md.md).       Dla <xref:System.Windows.Data.BindingMode>lub <xref:System.Windows.Data.BindingMode>powiązań, docelowe do źródło aktualizacji można kontrolować przez ustawienie <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>Właściwości.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Aby uzyskać więcej informacji zobacz <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>       Aby uzyskać więcej informacji o powiązanie różnych trybach, zobacz [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.BindingMode Mode { get; set; }
    return:
      type: System.Windows.Data.BindingMode
      description: "Jeden z <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref>, który zwraca wartość trybu powiązanie domyślnej właściwości zależności docelowych. Jednak wartością domyślną jest różny dla każdej właściwości zależności. Ogólnie rzecz biorąc właściwości formantu można edytować użytkownika, takich jak te pola tekstowe i pola wyboru domyślnie dwukierunkowego powiązania, podczas gdy inne właściwości domyślnie powiązania jednokierunkowe.       Programowy sposób określenia, czy właściwość zależności wiąże- lub dwukierunkowo domyślnie jest można pobrać metadanych właściwości modelu przy użyciu właściwości <> </> *>, a następnie sprawdź wartość logiczna <> </> *> właściwości."
  overload: System.Windows.Data.Binding.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  id: NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy podnieść <xref:System.Windows.Data.Binding.SourceUpdated>zdarzenie, gdy wartość jest przenoszona z cel wiązania ze źródłem powiązania.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public bool NotifyOnSourceUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.Data.Binding.SourceUpdated>zdarzenia podczas wiązania wartością źródłową jest aktualizowana, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.SourceUpdated> Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  id: NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy podnieść <xref:System.Windows.Data.Binding.TargetUpdated>zdarzenie, gdy wartość jest przenoszone z źródle powiązania cel wiązania.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public bool NotifyOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.Data.Binding.TargetUpdated>zdarzenia przy wartości docelowej powiązania jest aktualizowana, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.TargetUpdated> Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy podnieść <xref:System.Windows.Controls.Validation.Error>dołączone zdarzenia powiązanego obiektu.</xref:System.Windows.Controls.Validation.Error>"
  remarks: "Jeśli ma powiązanie <xref:System.Windows.Data.Binding.ValidationRules%2A>skojarzonych z nim, aparat wiązania sprawdza każdej reguły każdej aktualizacji przesyła wartość właściwości docelowa do właściwości source.</xref:System.Windows.Data.Binding.ValidationRules%2A> Jeśli reguła unieważnia wartość, tworzy aparat wiązania <xref:System.Windows.Controls.ValidationError>obiektu i dodaje go do <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> kolekcji powiązanego obiektu.</xref:System.Windows.Controls.Validation.Errors%2A> </xref:System.Windows.Controls.Validation> </xref:System.Windows.Controls.ValidationError> Gdy <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>właściwość nie jest pusta, <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>dołączona właściwość obiektu ma ustawioną `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Jeśli właściwość NotifyOnValidationError <xref:System.Windows.Data.Binding>ma ustawioną wartość `true`, następnie wywołuje aparat wiązania <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>dołączone zdarzenia dla obiekt.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding>       Szczegółowe omówienie procesu weryfikacji, zobacz sekcję sprawdzanie poprawności danych w [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.Controls.Validation.Error>zgłoszono na powiązany obiekt, w przypadku błędu sprawdzania poprawności podczas aktualizacji źródła; w przeciwnym razie wartość powinna być dołączone zdarzenie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.Validation.Error> Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Path
  id: Path
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia ścieżkę do powiązania właściwości source."
  remarks: "Każdego powiązania ma zwykle te cztery składniki: powiązania obiektu docelowego, właściwość target źródle powiązania i ścieżkę do wartości w źródle powiązania do użycia. Aby uzyskać więcej informacji dotyczących tych pojęć powiązania danych, zobacz [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md).       Umożliwia określenie wartości źródła Aby powiązać właściwość Path: — ogólnie rzecz biorąc, ścieżka, wartość właściwości jest nazwa właściwości obiektu źródłowego do użycia dla powiązania, takich jak `Path=PropertyName`.      -Właściwości podrzędnych właściwości można określić za składnię używaną w [!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]. Na przykład klauzuli `Path=ShoppingCart.Order` ustawia powiązanie podwłaściwości `Order` obiektu lub właściwości `ShoppingCart`.      -Aby powiązać dołączona właściwość, umieść nawiasy dołączona właściwość. Na przykład, aby powiązać dołączona właściwość <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, składnia jest `Path=(DockPanel.Dock)`.</xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>      — Indeksatory właściwości można określić w nawiasach kwadratowych po nazwie właściwości, w których stosowane jest indeksatora. Na przykład klauzuli `Path=ShoppingCart[0]` ustawia powiązanie do indeksu, który odpowiada jak z właściwości wewnętrznego indeksowania obsługuje literału ciągu &quot;0&quot;. Wiele indeksatorów również są obsługiwane.      -Indeksatorów i właściwości mogą być wymieszane `Path` klauzuli, na przykład `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].` - wewnątrz indeksatory może mieć wiele parametrów indeksatora rozdzielonych przecinkami (,). Można określić typ każdego parametru w nawiasach. Na przykład można mieć `Path=&quot;[(sys:Int32)42,(sys:Int32)24]&quot;`, gdzie `sys` jest mapowany na `System` przestrzeni nazw.      — Jeśli źródło jest widokiem kolekcji, z ukośnikiem (/) można określić bieżącego elementu. Na przykład klauzuli `Path=/` ustawia powiązanie do bieżącego elementu w widoku. Gdy źródło jest kolekcją, ta składnia określa bieżący element domyślny widok kolekcji.      — Nazwy i właściwości ukośniki można łączyć przechodzenia przez właściwości, które są kolekcjami. Na przykład `Path=/Offices/ManagerName` Określa bieżący element kolekcji źródłowej, który zawiera `Offices` właściwość, która również jest kolekcją. Jego bieżący element jest obiekt, który zawiera `ManagerName` właściwości.      -Opcjonalnie ścieżki kropki (.) można powiązać z bieżącego źródła. Na przykład `Text=&quot;{Binding}&quot;` jest odpowiednikiem `Text=&quot;{Binding Path=.}&quot;`.       Informacje na temat ścieżki składni, zobacz [powiązanie Przegląd deklaracji](~/add/includes/ajax-current-ext-md.md) lub [składnia PropertyPath XAML](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] powiązań, zobacz <xref:System.Windows.Data.Binding.XPath%2A>Właściwości.</xref:System.Windows.Data.Binding.XPath%2A>       Aby powiązać całego obiektu, nie należy określić właściwość Path. Aby uzyskać więcej informacji, zobacz &quot;Określanie ścieżki do wartości&quot; w [omówienie powiązania danych](../Topic/Data%20Binding%20Overview.md)."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]"
  syntax:
    content: public System.Windows.PropertyPath Path { get; set; }
    return:
      type: System.Windows.PropertyPath
      description: "Ścieżka do źródła powiązania. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RelativeSource
  id: RelativeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia źródło powiązania przez określenie jego lokalizacji względnej wobec położenie obiektu docelowego powiązania."
  remarks: "Ta właściwość jest często używana do powiązania jednej właściwości obiektu do innej właściwości tego samego obiektu lub aby zdefiniować powiązanie w stylu lub szablonie.       Domyślnie powiązania dziedziczą kontekstu danych, określonej przez `DataContext` właściwości, jeśli została ustawiona. Jednak właściwość RelativeSource jest jedną z metod można jawnie ustawić źródło <xref:System.Windows.Data.Binding>i zastąpić kontekstu danych dziedziczonych.</xref:System.Windows.Data.Binding> Aby uzyskać więcej informacji, zobacz [porady: Określanie powiązania źródła](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>i <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName>Właściwości umożliwia również ustawić źródło wiązania jawnie.</xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> Jednak tylko jeden z trzech właściwości <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, RelativeSource, należy ustawić dla każdego powiązania i może wystąpić konflikt.</xref:System.Windows.Data.Binding.Source%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Ta właściwość zgłasza wyjątek, jeśli występuje konflikt powiązania źródła.       Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlTextUsage_RelativeSource&quot;></a>## Użycie tekstu języka XAML"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the RelativeSource property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]  \n  \n To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.RelativeSource RelativeSource { get; set; }
    return:
      type: System.Windows.Data.RelativeSource
      description: "A <xref href=&quot;System.Windows.Data.RelativeSource&quot;> </xref> określenie względne położenie źródło powiązania, aby użyć obiektu. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.RelativeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Usuwa obsługi dla <xref:System.Windows.Data.Binding.SourceUpdated>dołączony zdarzeń.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Ta metoda obsługuje użycie dołączone zdarzenie [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą na zdarzenie."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "Program obsługi do usunięcia."
  overload: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Usuwa obsługi dla <xref:System.Windows.Data.Binding.TargetUpdated>dołączony zdarzeń.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Ta metoda obsługuje użycie dołączone zdarzenie [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą na zdarzenie."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "Program obsługi do usunięcia."
  overload: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  id: SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ustawia obiekt menedżera przestrzeni nazw używany przez powiązanie dołączony do udostępnionego elementu."
  remarks: "Ta metoda obsługuje użycie dołączona właściwość <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>dołączona właściwość.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>"
  syntax:
    content: public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "Obiekt, z którego można pobrać informacji dotyczących przestrzeni nazw."
    - id: value
      type: System.Xml.XmlNamespaceManager
      description: "&lt;Xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt; można użyć do oceny przestrzeni nazw w elemencie przekazany."
  overload: System.Windows.Data.Binding.SetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>target</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializePath
  id: ShouldSerializePath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Wskazuje, czy <xref:System.Windows.Data.Binding.Path*>właściwości powinny zostać utrwalony.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.Data.Binding.Path%2A>właściwość nie ma wartości domyślnej proste.</xref:System.Windows.Data.Binding.Path%2A> Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę Jeśli opracowujesz albo projektanta, <xref:System.Windows.Data.Binding>lub opracowanie własnego kontrolować zawierających <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializePath ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość właściwości została zmieniona z domyślnego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  id: ShouldSerializeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Wskazuje, czy <xref:System.Windows.Data.Binding.Source*>właściwości powinny zostać utrwalony.</xref:System.Windows.Data.Binding.Source*>"
  remarks: "To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.Data.Binding.Source%2A>właściwość nie ma wartości domyślnej proste.</xref:System.Windows.Data.Binding.Source%2A> Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę Jeśli opracowujesz albo projektanta, <xref:System.Windows.Data.Binding>lub opracowanie własnego kontrolować zawierających <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializeSource ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość właściwości została zmieniona z domyślnego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  id: ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Wskazuje, czy <xref:System.Windows.Data.Binding.ValidationRules*>właściwości powinny zostać utrwalony.</xref:System.Windows.Data.Binding.ValidationRules*>"
  remarks: "To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.Data.Binding.ValidationRules%2A>właściwość nie ma wartości domyślnej proste.</xref:System.Windows.Data.Binding.ValidationRules%2A> Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę Jeśli opracowujesz albo projektanta, <xref:System.Windows.Data.Binding>lub opracowanie własnego kontrolować zawierających <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializeValidationRules ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość właściwości została zmieniona z domyślnego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Source
  id: Source
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia obiekt do użycia jako źródło powiązania."
  remarks: "Domyślnie powiązania dziedziczą kontekstu danych, określonej przez `DataContext` właściwości, jeśli została ustawiona. Jednak właściwość źródłowa jest jednym ze sposobów jawne można ustawić źródła <xref:System.Windows.Data.Binding>i zastąpić kontekstu danych dziedziczonych.</xref:System.Windows.Data.Binding> Jeśli nie ma potrzeby funkcji ustalenia zakresu, w której kilka właściwości dziedziczą tego samego kontekstu danych, można użyć właściwości Source zamiast `DataContext` właściwości.       <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>i <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName>Właściwości umożliwia również ustawić źródło wiązania jawnie.</xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> Jednak tylko jeden z trzech właściwości <xref:System.Windows.Data.Binding.ElementName%2A>, źródło, a <xref:System.Windows.Data.Binding.RelativeSource%2A>, powiązanie zestawu dla każdego powinny być lub może wystąpić konflikt.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Ta właściwość zgłasza wyjątek, jeśli występuje konflikt powiązania źródła.       Aby wyczyścić tę właściwość, ustaw ją na <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>      <a name=&quot;xamlAttributeUsage_Source&quot;></a>## Użycie atrybutu XAML ```   <object Source=&quot;object&quot;/>   ``` <a name=&quot;xamlValues_Source&quot;> </a> ## wartości XAML *obiektu* istniejącego obiektu.       Aby odwołać się do istniejącego obiektu, należy użyć [StaticResource — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md)"
  example:
  - "In this example, you have a `Person` object with a string property named `PersonName`. The `Person` object is defined in the namespace called `SDKSample`.  \n  \n The following example instantiates the `Person` object with a `PersonName` property value of `Joe`. This is done in the `Resources` section and assigned an `x:Key`.  \n  \n [!code-xml[SimpleBinding#Instantiation](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#instantiation)]  \n[!code-xml[SimpleBinding#2](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#2)]  \n[!code-xml[SimpleBinding#EndWindow](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#endwindow)]  \n  \n To bind to the `PersonName` property you would do the following:  \n  \n [!code-xml[SimpleBinding#BDO1](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#bdo1)]  \n  \n As a result, the <xref:System.Windows.Controls.TextBlock> appears with the value \"Joe\".  \n  \n In the following example, the Source values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=fullName>:  \n  \n [!code-xml[DataBindingLab#ComboBoxMultiBinding](~/add/codesnippet/xaml/DataBindingLab/AddProductWindow.xaml#comboboxmultibinding)]  \n  \n For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: "Obiekt do użycia jako źródło powiązania."
  overload: System.Windows.Data.Binding.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  id: SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identyfikuje <xref:System.Windows.Data.Binding.SourceUpdated>dołączony zdarzeń.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  id: TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identyfikuje <xref:System.Windows.Data.Binding.TargetUpdated>dołączony zdarzeń.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  id: UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia program obsługi, używanego w celu zapewnienia niestandardowej logiki do obsługi wyjątków, które aparat wiązania napotka podczas aktualizacji wiążąca wartość źródła. Dotyczy to tylko jeśli został skojarzony <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> z wiązania."
  remarks: "<xref:System.Windows.Controls.ExceptionValidationRule>Reguła wbudowanych weryfikacji sprawdza, czy wyjątki zgłaszane podczas aktualizacji powiązania właściwości source.</xref:System.Windows.Controls.ExceptionValidationRule> Jeśli został skojarzony <xref:System.Windows.Controls.ExceptionValidationRule>z Twojej <xref:System.Windows.Data.Binding>obiektu, ta właściwość służy ustawić programu obsługi w celu zapewnienia niestandardowej logiki do obsługi tych wyjątków.</xref:System.Windows.Data.Binding> </xref:System.Windows.Controls.ExceptionValidationRule> Jeśli nie określono UpdateSourceExceptionFilter <xref:System.Windows.Data.Binding>, tworzy aparat wiązania <xref:System.Windows.Controls.ValidationError>z wyjątkiem i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>kolekcji elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> </xref:System.Windows.Data.Binding>"
  example:
  - "The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`. The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  \n  \n [!code-xml[BindValidation#tbExceptionFilter](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#tbexceptionfilter)]  \n  \n You can provide custom logic to handle those exceptions. The following example shows how to use the UpdateSourceExceptionFilter property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#filtercallback](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#filtercallback)]  \n  \n The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#Handler](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#handler)]  \n  \n The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>. For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceExceptionFilterCallback
      description: "Metoda, która zapewnia niestandardowej logiki do obsługi wyjątków, które aparat wiązania napotka podczas aktualizacji wiążąca wartość źródła."
  overload: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość, która określa czas powiązania źródła aktualizacji."
  remarks: "Powiązania, które są <xref:System.Windows.Data.BindingMode>lub <xref:System.Windows.Data.BindingMode>nasłuchiwania zmian we właściwości docelowej i propagować je z powrotem do źródła.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Jest to nazywane aktualizowanie źródła. Zazwyczaj te aktualizacje się tak zdarzyć przy każdej zmianie właściwości target. To działa poprawnie dla pola wyboru i inne formanty prostego, ale zwykle nie jest odpowiedni dla pól tekstowych. Aktualizowanie po każdym naciśnięciu klawisza może obniżyć wydajność i odrzuca użytkownika to zwykle możliwość backspace i napraw błędy przed zatwierdzeniem na nową wartość. W związku z tym UpdateSourceTrigger wartość domyślną <xref:System.Windows.Controls.TextBox.Text%2A>właściwość jest <xref:System.Windows.Data.UpdateSourceTrigger>i nie <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Controls.TextBox.Text%2A>       Jeśli ustawiono wartość UpdateSourceTrigger <xref:System.Windows.Data.UpdateSourceTrigger>, należy wywołać <xref:System.Windows.Data.BindingExpression.UpdateSource%2A>metody lub zmiany nie zostaną przeniesione wstecz do źródła.</xref:System.Windows.Data.BindingExpression.UpdateSource%2A> </xref:System.Windows.Data.UpdateSourceTrigger>"
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Jeden z <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, która zwraca wartość domyślna <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> wartość właściwości zależności docelowych. Jednak jest wartością domyślną dla większości właściwości zależności <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, podczas gdy <> </> *> właściwość ma wartość domyślną równą <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>.       Programowy sposób określić wartości UpdateSourceTrigger domyślnej właściwości zależności jest można pobrać metadanych właściwości modelu przy użyciu właściwości <> </> *>, a następnie sprawdź wartość <xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>Właściwości.</xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>"
  overload: System.Windows.Data.Binding.UpdateSourceTrigger*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>."
  remarks: "Ustawienie tej właściwości stanowi alternatywę dla przy użyciu <xref:System.Windows.Controls.DataErrorValidationRule>element jawnie.</xref:System.Windows.Controls.DataErrorValidationRule> <xref:System.Windows.Controls.DataErrorValidationRule>Jest sprawdza, czy błędy, które są generowane przez reguły poprawności wbudowanych <xref:System.ComponentModel.IDataErrorInfo>implementacji obiektu źródłowego.</xref:System.ComponentModel.IDataErrorInfo> </xref:System.Windows.Controls.DataErrorValidationRule> Jeśli występuje błąd, tworzy aparat wiązania <xref:System.Windows.Controls.ValidationError>z powodu błędu i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>kolekcji elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Błąd braku czyści tej opinii sprawdzania poprawności, chyba że inna reguła zgłasza problem sprawdzania poprawności.       ValidatesOnDataErrors wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje programu .NET Framework i zależności](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and ValidatesOnDataErrors to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.  \n  \n [!code-cs[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#idataerrorinfodata)]\n [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#idataerrorinfodata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnDataErrors to `true` on the <xref:System.Windows.Data.Binding>.  When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#idataerrorinfoxaml)]"
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>."
  remarks: "Ustawienie tej właściwości stanowi alternatywę dla przy użyciu <xref:System.Windows.Controls.ExceptionValidationRule>element jawnie.</xref:System.Windows.Controls.ExceptionValidationRule> <xref:System.Windows.Controls.ExceptionValidationRule>Reguła wbudowanych weryfikacji sprawdza, czy wyjątki, które są generowane podczas aktualizacji właściwości source.</xref:System.Windows.Controls.ExceptionValidationRule> Jeśli jest zgłaszany wyjątek, aparat wiązania tworzy <xref:System.Windows.Controls.ValidationError>z wyjątkiem i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>kolekcji elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Błąd braku czyści tej opinii sprawdzania poprawności, chyba że inna reguła zgłasza problem sprawdzania poprawności.       ValidatesOnExceptions wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje programu .NET Framework i zależności](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples use ValidatesOnExceptions to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.  \n  \n [!code-cs[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#throwexceptiondata)]\n [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#throwexceptiondata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnExceptions to `true` on the <xref:System.Windows.Data.Binding>. When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#throwexceptionxaml)]"
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnExceptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Gdy jest ValidatesOnNotifyDataErrors `true`, powiązanie wyszukuje i raportowanie błędów, które zostały wygenerowane przez źródło danych, który implementuje <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>"
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera kolekcję reguł sprawdzania poprawności danych wejściowych użytkownika."
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] Modelu powiązania danych umożliwia kojarzenie ValidationRules z Twojej <xref:System.Windows.Data.Binding>lub <xref:System.Windows.Data.MultiBinding>obiektu.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> Można utworzyć reguły niestandardowe pochodny <xref:System.Windows.Controls.ValidationRule>klasy i wdrażanie <xref:System.Windows.Controls.ValidationRule.Validate%2A>metody, lub można użyć wbudowanej <xref:System.Windows.Controls.ExceptionValidationRule>, która unieważnia wartość, jeśli istnieją wyjątki podczas aktualizacji źródła.</xref:System.Windows.Controls.ExceptionValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule>       Aparat wiązania sprawdza każdego <xref:System.Windows.Controls.ValidationRule>skojarzony z powiązaniem wartości wejściowej (wartość właściwości docelowa powiązanie) zawsze jest przenoszona do powiązania właściwości source.</xref:System.Windows.Controls.ValidationRule> Szczegółowe omówienie procesu weryfikacji, zobacz sekcję sprawdzanie poprawności danych w [omówienie powiązania danych](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Tej właściwości można ustawić w [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] tylko przy użyciu składni kolekcji pokazano lub uzyskiwania dostępu do obiektu kolekcji i przy użyciu jego różnych metod, takich jak `Add`. Właściwości dostępu do obiektu kolekcji jest tylko do odczytu, w kolekcji jest do odczytu / zapisu.      <a name=&quot;xamlPropertyElementUsage_ValidationRules&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.ValidationRules>       oneOrMoreValidationRules     </object.ValidationRules>   </object>      ``` <a name=&quot;xamlValues_ValidationRules&quot;> </a> ## wartości XAML *oneOrMoreValidationRules* co najmniej jeden <xref:System.Windows.Controls.ValidationRule>obiektów.</xref:System.Windows.Controls.ValidationRule>       Można użyć <xref:System.Windows.Controls.ExceptionValidationRule>klasy lub tworzenie niestandardowych reguł przez tworzenie podklas <xref:System.Windows.Controls.ValidationRule>klasy.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ExceptionValidationRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Kolekcja <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów."
  overload: System.Windows.Data.Binding.ValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  id: XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identyfikuje <xref:System.Windows.Data.Binding.XmlNamespaceManager*>dołączona właściwość.</xref:System.Windows.Data.Binding.XmlNamespaceManager*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XPath
  id: XPath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia <xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> zapytanie zwracające wartość na [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] źródło powiązania do użycia."
  remarks: "Gdy źródło powiązania jest [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] danych zamiast [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] obiektu, właściwość XPath jest używana zamiast <xref:System.Windows.Data.Binding.Path%2A>właściwość, aby wskazać ścieżkę do wartości w źródle powiązania do użycia.</xref:System.Windows.Data.Binding.Path%2A>       Ustawiając właściwość XPath, które tworzysz `XPath` zapytanie, aby wybrać węzeł lub kolekcja węzłów (<xref:System.Xml.XmlElement?displayProperty=fullName> i <xref:System.Xml.XmlAttribute?displayProperty=fullName>zarówno pochodzi od <xref:System.Xml.XmlNode?displayProperty=fullName>).</xref:System.Xml.XmlNode?displayProperty=fullName> </xref:System.Xml.XmlAttribute?displayProperty=fullName> </xref:System.Xml.XmlElement?displayProperty=fullName> <xref:System.Xml.XmlNode?displayProperty=fullName>jest [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] obiektu, co oznacza, że można powiązać jej właściwości, za pomocą <xref:System.Windows.Data.Binding.Path%2A>Właściwości.</xref:System.Windows.Data.Binding.Path%2A></xref:System.Xml.XmlNode?displayProperty=fullName>       <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>Dojścia metody `XPath` wyrażenia z właściwość XPath.</xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> `XPath`funkcje nie są obsługiwane. Dla `XPath` wyrażenie informacji, zobacz <xref:System.Xml.XmlNode.SelectNodes%2A>Dokumentacja i przykłady podane w sekcji na przykład.</xref:System.Xml.XmlNode.SelectNodes%2A>       LINQ do obiektów XML <xref:System.Xml.Linq.XDocument>i <xref:System.Xml.Linq.XElement>nie używaj `XPath`.</xref:System.Xml.Linq.XElement> </xref:System.Xml.Linq.XDocument> Aby uzyskać więcej informacji, zobacz [porady: powiązanie klasy XDocument, klasy XElement lub LINQ dla wyników zapytania XML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string XPath { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> Zapytania. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.XPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingBase
  isExternal: false
  name: System.Windows.Data.BindingBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Data.Binding.#ctor
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
- uid: System.Windows.Data.Binding.#ctor(System.String)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DataTransferEventArgs>
  nameWithType: EventHandler<DataTransferEventArgs>
  fullName: System.EventHandler<System.Windows.Data.DataTransferEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Data.DataTransferEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.DataTransferEventArgs
    name: DataTransferEventArgs
    nameWithType: DataTransferEventArgs
    fullName: DataTransferEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.AsyncState
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.Binding.Converter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
- uid: System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: false
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Windows.Data.Binding.ConverterCulture
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.Binding.ConverterParameter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
- uid: System.Windows.Data.Binding.DoNothing
  parent: System.Windows.Data.Binding
  isExternal: false
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
- uid: System.Windows.Data.Binding.ElementName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
- uid: System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Windows.Data.Binding.IndexerName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
- uid: System.Windows.Data.Binding.IsAsync
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
- uid: System.Windows.Data.BindingMode
  parent: System.Windows.Data
  isExternal: false
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
- uid: System.Windows.PropertyPath
  parent: System.Windows
  isExternal: false
  name: PropertyPath
  nameWithType: PropertyPath
  fullName: System.Windows.PropertyPath
- uid: System.Windows.Data.Binding.RelativeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
- uid: System.Windows.Data.RelativeSource
  parent: System.Windows.Data
  isExternal: false
  name: RelativeSource
  nameWithType: RelativeSource
  fullName: System.Windows.Data.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
- uid: System.Windows.Data.Binding.ShouldSerializePath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
- uid: System.Windows.Data.Binding.Source
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Data.Binding.XPath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
- uid: System.Windows.Data.Binding.#ctor*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding
  nameWithType: Binding.Binding
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler
  nameWithType: Binding.AddSourceUpdatedHandler
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler
  nameWithType: Binding.AddTargetUpdatedHandler
- uid: System.Windows.Data.Binding.AsyncState*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
- uid: System.Windows.Data.Binding.BindsDirectlyToSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
- uid: System.Windows.Data.Binding.Converter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
- uid: System.Windows.Data.Binding.ConverterCulture*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
- uid: System.Windows.Data.Binding.ConverterParameter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
- uid: System.Windows.Data.Binding.ElementName*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager
  nameWithType: Binding.GetXmlNamespaceManager
- uid: System.Windows.Data.Binding.IsAsync*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
- uid: System.Windows.Data.Binding.RelativeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler
  nameWithType: Binding.RemoveSourceUpdatedHandler
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler
  nameWithType: Binding.RemoveTargetUpdatedHandler
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager
  nameWithType: Binding.SetXmlNamespaceManager
- uid: System.Windows.Data.Binding.ShouldSerializePath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath
  nameWithType: Binding.ShouldSerializePath
- uid: System.Windows.Data.Binding.ShouldSerializeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource
  nameWithType: Binding.ShouldSerializeSource
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules
  nameWithType: Binding.ShouldSerializeValidationRules
- uid: System.Windows.Data.Binding.Source*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.Binding.UpdateSourceTrigger*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
- uid: System.Windows.Data.Binding.XPath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
