### YamlMime:ManagedReference
items:
- uid: System.Xml.Resolvers.XmlPreloadedResolver
  id: XmlPreloadedResolver
  children:
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  - System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  - System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  - System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver
  fullName: System.Xml.Resolvers.XmlPreloadedResolver
  type: Class
  summary: "Reprezentuje klasę, która jest używana do wstępnie wypełnić w pamięci podręcznej elementów DTD lub XML strumieni."
  remarks: "Typ XmlPreloadedResolver jest używany jako program rozpoznawania nazw, podczas automatycznego połączenia z siecią nie są potrzebne i nie są możliwe. Na przykład tego typu może służyć do ładowania pamięci podręcznej zewnętrznej definicji DTD. Lub może używać XmlPreloadedResolver wstępnie dobrze znanych elementów DTD, które są zdefiniowane w XHTML 1.0. Wstępne ładowanie dobrze znanych elementów DTD nie uruchomić każdego połączenia sieciowego, ponieważ te definicje DTD już są osadzone w zestawie System.Xml.Utils. Obecnie XmlPreloadedResolver zawiera definicje DTD, zdefiniowane w XHTML 1.0 i RSS 0,91."
  syntax:
    content: 'public class XmlPreloadedResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  id: '#ctor'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> klasy."
  syntax:
    content: public XmlPreloadedResolver ();
    parameters: []
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> klasy z określonym załadowane dobrze znanych elementów DTD."
  syntax:
    content: public XmlPreloadedResolver (System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "Dobrze znanych elementów DTD, które powinny być wstępnie do pamięci podręcznej."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  id: '#ctor(System.Xml.XmlResolver)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> klasy z określonym rezerwowy mechanizm rozpoznawania."
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>, Lub własny program rozpoznawania nazw."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> klasy z określonym rezerwowy mechanizm rozpoznawania i wstępnie załadowane dobrze znanych elementów DTD."
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>, Lub własny program rozpoznawania nazw."
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "Dobrze znanych elementów DTD, które powinny być wstępnie do pamięci podręcznej."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> klasy z określonym rozpoznawania rezerwowy załadowanych elementów DTD dobrze znane i porównania równości identyfikatora URI."
  remarks: "Użyj tego przeciążenia konstruktora, jeśli chcesz dostosować porównania identyfikatora URI."
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds, System.Collections.Generic.IEqualityComparer<Uri> uriComparer);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>, Lub własny program rozpoznawania nazw."
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "Dobrze znanych elementów DTD, które powinny być wstępnie do pamięci podręcznej."
    - id: uriComparer
      type: System.Collections.Generic.IEqualityComparer{System.Uri}
      description: "Implementacja &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; ogólny interfejs do użycia podczas porównywania identyfikatorów URI."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  id: Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Dodaje tablica bajtów do <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania, a następnie mapuje go do identyfikatora URI. Jeśli magazyn zawiera już mapowanie dla tego samego identyfikatora URI, istniejące mapowanie zostanie zastąpiona."
  syntax:
    content: public void Add (Uri uri, byte[] value);
    parameters:
    - id: uri
      type: System.Uri
      description: "Identyfikator URI danych, która jest dodawana do <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania."
    - id: value
      type: System.Byte[]
      description: "Tablica bajtów z danymi, które odpowiada podanego identyfikatora URI."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  id: Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Dodaje <xref:System.IO.Stream>do <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania, a następnie mapuje go do identyfikatora URI.</xref:System.IO.Stream> Jeśli magazyn zawiera już mapowanie dla tego samego identyfikatora URI, istniejące mapowanie zostanie zastąpiona."
  syntax:
    content: public void Add (Uri uri, System.IO.Stream value);
    parameters:
    - id: uri
      type: System.Uri
      description: "Identyfikator URI danych, która jest dodawana do <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania."
    - id: value
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>z danymi, które odpowiada podany identyfikator URI.</xref:System.IO.Stream>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  id: Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,String)
  nameWithType: XmlPreloadedResolver.Add(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Dodaje ciąg z danymi wstępnie <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania, a następnie mapuje go do identyfikatora URI. Jeśli magazyn zawiera już mapowanie dla tego samego identyfikatora URI, istniejące mapowanie zostanie zastąpiona."
  syntax:
    content: public void Add (Uri uri, string value);
    parameters:
    - id: uri
      type: System.Uri
      description: "Identyfikator URI danych, która jest dodawana do <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania."
    - id: value
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> z danymi, które odpowiada podanego identyfikatora URI."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  id: Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Byte[],Int32,Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Dodaje tablica bajtów do <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania, a następnie mapuje go do identyfikatora URI. Jeśli magazyn zawiera już mapowanie dla tego samego identyfikatora URI, istniejące mapowanie zostanie zastąpiona."
  syntax:
    content: public void Add (Uri uri, byte[] value, int offset, int count);
    parameters:
    - id: uri
      type: System.Uri
      description: "Identyfikator URI danych, która jest dodawana do <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania."
    - id: value
      type: System.Byte[]
      description: "Tablica bajtów z danymi, które odpowiada podanego identyfikatora URI."
    - id: offset
      type: System.Int32
      description: "Przesunięcie w tablicy bajtów podany, gdy rozpoczyna się dane."
    - id: count
      type: System.Int32
      description: "Liczba bajtów do odczytu z tablicy bajtów, rozpoczynając od przesunięcia podana."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>lub <code>count</code> jest mniejszy niż 0.       - lub - długość <code>value</code> minus <code>offset</code> jest mniejsza niż<code>count.</code>"
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  id: Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Ustawia poświadczenia, które są używane do uwierzytelniania podstawowego <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Poświadczenia, które są używane do uwierzytelniania podstawowego żądania sieci web."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Identyfikator URI jest mapowany na obiekt, który zawiera zasobów."
  remarks: "<xref:System.Xml.Resolvers.XmlPreloadedResolver>Próbują używać najpierw do wyszukiwania zasobów w magazynie danych załadowanych.</xref:System.Xml.Resolvers.XmlPreloadedResolver> Jeśli nie znajdzie, wywoła rezerwowy mechanizm rozpoznawania `GetEntity` metody. Jeśli nie dostarczono żadnych rezerwowy mechanizm rozpoznawania w <xref:System.Xml.Resolvers.XmlPreloadedResolver>konstruktora, jest zgłaszany wyjątek.</xref:System.Xml.Resolvers.XmlPreloadedResolver>"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI zwrócony z <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Bieżąca wersja programu .NET Framework dla programu Silverlight nie używa tego parametru podczas rozpoznawania identyfikatorów URI. Parametr ten jest dostarczany do celów rozszerzalności w przyszłości. Na przykład ten parametr może mapowane na xlink:role i używanym jako argument konkretnej implementacji w innych scenariuszach."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> Obsługuje <xref:System.IO.Stream>obiektów i <xref:System.IO.TextReader>obiektów identyfikatory URI, które zostały dodane jako <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>.</xref:System.IO.TextReader> </xref:System.IO.Stream> Jeśli żądanego typu nie jest obsługiwana przez program rozpoznawania nazw, zostanie zgłoszony wyjątek. Użyj <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>metody w celu określenia, czy określony <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> jest obsługiwany przez ten mechanizm rozpoznawania.</xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>"
    return:
      type: System.Object
      description: "A <xref:System.IO.Stream>lub <xref:System.IO.TextReader>obiekt, który odpowiada rzeczywistym źródle.</xref:System.IO.TextReader> </xref:System.IO.Stream>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Nie można rozpoznać identyfikatora URI przekazane <code> absoluteUri </code>.       - lub - <code> ofObjectToReturn </code> nie jest obsługiwanym typem."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Asynchronicznie identyfikatora URI jest mapowany na obiekt, który zawiera zasobów."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI zwrócony z <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Bieżąca wersja programu .NET Framework dla programu Silverlight nie używa tego parametru podczas rozpoznawania identyfikatorów URI. Parametr ten jest dostarczany do celów rozszerzalności w przyszłości. Na przykład ten parametr może mapowane na xlink:role i używanym jako argument konkretnej implementacji w innych scenariuszach."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> Obsługuje <xref:System.IO.Stream>obiektów i <xref:System.IO.TextReader>obiektów identyfikatory URI, które zostały dodane jako <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>.</xref:System.IO.TextReader> </xref:System.IO.Stream> Jeśli żądanego typu nie jest obsługiwana przez program rozpoznawania nazw, zostanie zgłoszony wyjątek. Użyj <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>metody w celu określenia, czy określony <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> jest obsługiwany przez ten mechanizm rozpoznawania.</xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "A <xref:System.IO.Stream>lub <xref:System.IO.TextReader>obiekt, który odpowiada rzeczywistym źródle.</xref:System.IO.TextReader> </xref:System.IO.Stream>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  id: PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Pobiera kolekcję załadowanych identyfikatorów URI."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Uri> PreloadedUris { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Kolekcja załadowanych identyfikatorów URI."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  id: Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Usuwa dane, które odpowiada identyfikatora URI z <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>."
  remarks: "Wyjątek nie jest generowany, jeśli dane nie istnieje w magazynie."
  syntax:
    content: public void Remove (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Identyfikator URI danych, która powinna zostać usunięta z <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref> przechowywania."
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Rozpoznaje bezwzględnego identyfikatora URI z podstawową i względne identyfikatory URI."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI używany do rozpoznania względnym identyfikatorem URI."
    - id: relativeUri
      type: System.String
      description: "Identyfikator URI do rozpoznania. Identyfikator URI może być bezwzględny lub względny. Jeśli bezwzględne, ta wartość skutecznie zastępuje `baseUri` wartość. Jeśli względną, składa się z `baseUri` być bezwzględnym identyfikatorem URI."
    return:
      type: System.Uri
      description: "<xref:System.Uri>Reprezentujący bezwzględnym identyfikatorem URI lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli względny identyfikator URI nie można rozpoznać.</xref:System.Uri>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "Określa, czy program rozpoznawania nazw obsługuje inne <xref:System.Type>s niż tylko <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Type>"
  syntax:
    content: public override bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Bezwzględny identyfikator URI do sprawdzenia."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Do zwrócenia.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Type>jest obsługiwany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlKnownDtds
  parent: System.Xml.Resolvers
  isExternal: false
  name: XmlKnownDtds
  nameWithType: XmlKnownDtds
  fullName: System.Xml.Resolvers.XmlKnownDtds
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
- uid: System.Collections.Generic.IEqualityComparer{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<Uri>
  nameWithType: IEqualityComparer<Uri>
  fullName: System.Collections.Generic.IEqualityComparer<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,String)
  nameWithType: XmlPreloadedResolver.Add(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Byte[],Int32,Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add
  nameWithType: XmlPreloadedResolver.Add
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlPreloadedResolver.GetEntity
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlPreloadedResolver.GetEntityAsync
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove
  nameWithType: XmlPreloadedResolver.Remove
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlPreloadedResolver.ResolveUri
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlPreloadedResolver.SupportsType
