### YamlMime:ManagedReference
items:
- uid: System.Web.UI.MasterPage
  id: MasterPage
  children:
  - System.Web.UI.MasterPage.#ctor
  - System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.ContentPlaceHolders
  - System.Web.UI.MasterPage.ContentTemplates
  - System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.Master
  - System.Web.UI.MasterPage.MasterPageFile
  langs:
  - csharp
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
  type: Class
  summary: "Działa jako szablon i łączących kontener dla stron, które składają się tylko z <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> formanty i ich odpowiednich podrzędnych."
  remarks: "Strona wzorcowa działa jako kontenera szablonu i łączących strony dla stron zawartości w aplikacji sieci ASP.NET Web. Strony wzorcowe zapewnić wygodny sposób udostępnianie struktury i zawartości w zestawie stron zawartości. Symbole zastępcze zawartości służą do definiowania części strony głównej, należy zastąpić zawartości z zawartości strony.       Korzystając z strony wzorcowej i jej powiązane strony zawartości, Dodaj wymagane tagi dokumentu XHTML (takich jak `html`, `head`, i `body`) tylko do strony wzorcowej i nie może utworzyć innych .aspx pliki (strony ASP.NET) jako autonomiczny strony sieci Web. Strony z zawartością definiowanie zawartości do wstawienia do symboli zastępczych w strony wzorcowej.       Po żądania HTTP dla strony w czasie wykonywania, strony głównej i strony z zawartością są połączone w jedną klasę z taką samą nazwę jak strony z zawartością. Powstałe w ten sposób skompilowany, scalonych klasa pochodzi od <xref:System.Web.UI.Page>klasy.</xref:System.Web.UI.Page>       Strony wzorcowej może zawierać bezpośrednie znaczników i kontrolki serwera, jak również kontrole kontenerów. Każdy element, który znajduje się na stronie głównej poza <xref:System.Web.UI.WebControls.ContentPlaceHolder>renderowania formantu na wszystkich stronach wynikających z scalania strony głównej i strony z zawartością.</xref:System.Web.UI.WebControls.ContentPlaceHolder>       Każdej strony zawartości, który jest powiązany z strony wzorcowej musi odwoływać się strony wzorcowej w `MasterPageFile` atrybutu jego dyrektywy. Zawartości strony mogą zawierać tylko `@ Page` dyrektywy i co najmniej jeden <xref:System.Web.UI.WebControls.Content>formantów.</xref:System.Web.UI.WebControls.Content> Wszystkie strony kontrolki tekstu, znaczników i serwera musi się znajdować w <xref:System.Web.UI.WebControls.Content>formantów.</xref:System.Web.UI.WebControls.Content> Należy określić <xref:System.Web.UI.WebControls.ContentPlaceHolder>formant wzorzec stronie <xref:System.Web.UI.WebControls.Content>formant jest skojarzony z przez ustawienie <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A>Właściwość <xref:System.Web.UI.WebControls.Content>kontroli.</xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> </xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.ContentPlaceHolder>       W czasie, zawartości dynamicznej z każdej wykonywania <xref:System.Web.UI.WebControls.Content>formantu w żądanej strony jest scalany z strony wzorcowej dokładną lokalizację pokrewny <xref:System.Web.UI.WebControls.ContentPlaceHolder>kontroli.</xref:System.Web.UI.WebControls.ContentPlaceHolder> </xref:System.Web.UI.WebControls.Content> Nie dotyczy to inne znaczniki i kontrolki na stronie głównej. Programy obsługi zdarzeń można definiować klasy głównym i na stronie zawartości. Aby uzyskać więcej informacji, zobacz [zdarzenia w głównym ASP.NET oraz strony z zawartością](~/add/includes/ajax-current-ext-md.md).       Klasa formantu MasterPage jest powiązany z plikami, które mają rozszerzenie .master. Te pliki są kompilowane w czasie wykonywania jako obiekty na nich i są buforowane w pamięci serwera.       Strony wzorcowej ma zostać udostępnione do zawartości strony za pomocą <xref:System.Web.UI.Page.Master%2A>Właściwości podstawowej <xref:System.Web.UI.Page>klasy.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Master%2A> <xref:System.Web.UI.Page.Master%2A>Właściwość zwraca wystąpienie klasy strony wzorcowej; jednak jest wpisana jako klasę podstawową MasterPage.</xref:System.Web.UI.Page.Master%2A> Do kontroli dostępu, właściwości i funkcje strony wzorcowej <xref:System.Web.UI.Page.Master%2A>Właściwości mogą być rzutowane na obiekt formantu MasterPage.</xref:System.Web.UI.Page.Master%2A> Nazwa klasy strony wzorcowej jest definiowana za pomocą `ClassName` atrybutu dyrektywy.      > [!NOTE] > Pliki z rozszerzeniami .master nie są obsługiwane w przeglądarce.       Dyrektywy, które są prawidłowe dla strony wzorcowej są takie same jak te, które są dostępne na <xref:System.Web.UI.UserControl>obiektu.</xref:System.Web.UI.UserControl> They can include the following attributes:      -   `AutoEventWireup`      -   `ClassName`      -   `CodeFile`      -   `CompilerMode`      -   `CompilerOptions`      -   `Debug`      -   `Description`      -   `EnableTheming`      -   `EnableViewState`      -   `Explicit`      -   `Inherits`      -   `Language`      -   `LinePragmas`      -   `MasterPageFile`      -   `Src`      -   `Strict`      -   `WarningLevel`       Master page directives do not override the directives on individual content pages.       Strony główne najczęściej są tworzone deklaratywnie. Jeśli chcesz utworzyć strony wzorcowej programowo, pochodzi bezpośrednio z klasy formantu MasterPage. Oprócz rozszerzenia klasy formantu MasterPage, należy utworzyć plik .master do wyświetlania interfejs użytkownika (UI), który jest skojarzony z klasami, które mają być wywoływane w pliku źródłowym.      > [!NOTE] > Po utworzeniu strony wzorcowej tworząc własne klasy musi zawierać wszystkie obszary nazw, które są wymagane dla klasy, które są używane przez stronę.       Aby uzyskać więcej informacji na temat strony wzorcowe, zobacz [stron wzorcowych ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains four code examples:  \n  \n-   The first code example demonstrates how to create a master page declaratively.  \n  \n-   The second code example represents the content page that is associated with the master page that was created in the first code example.  \n  \n-   The third code example demonstrates how to add a property to a master page.  \n  \n-   The fourth code example demonstrates how to use a content page to access a public property on the master page.  \n  \n The following example demonstrates how to create a master page declaratively and to add some content to it using a content page. The first Web page is the .master page named `MasterPageSample_1.master`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example represents the content page that is associated with `MasterPageSample_1.master`. It contains a <xref:System.Web.UI.WebControls.Content> control and identifies the <xref:System.Web.UI.WebControls.ContentPlaceHolder> control that the content is associated with by using the <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> property.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPageSample_1cs.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPageSample_1vb.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n The following example demonstrates how to add a property to a master page. The `ClassName` attribute is used to name the master page.  \n  \n```c#  \n<%@ Master Language=\"C#\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n        public string SiteName  \n        {  \n            get { return \"My Site Name\"; }  \n        }  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n  Public ReadOnly Property SiteName() As String  \n    Get  \n      Return \"My Site Name\"  \n    End Get  \n  End Property  \n  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example shows how to use a content page to access the public property `SiteName` on the master page in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  protected void Page_Load(object sender, EventArgs e)  \n  {  \n    MasterExample m = (MasterExample)Page.Master;  \n    mylabel.Text = m.SiteName;  \n  }  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  \n  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  \n    Dim m As MasterExample = CType(Page.Master, MasterPage)  \n    mylabel.Text = m.SiteName  \n  End Sub  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))]

      [System.Web.UI.ParseChildren(false)]

      public class MasterPage : System.Web.UI.UserControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  - System.Web.UI.UserControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.FrameworkInitialize
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.UserControl.Application
  - System.Web.UI.UserControl.Attributes
  - System.Web.UI.UserControl.Cache
  - System.Web.UI.UserControl.CachePolicy
  - System.Web.UI.UserControl.DesignerInitialize
  - System.Web.UI.UserControl.InitializeAsUserControl(System.Web.UI.Page)
  - System.Web.UI.UserControl.IsPostBack
  - System.Web.UI.UserControl.LoadViewState(System.Object)
  - System.Web.UI.UserControl.MapPath(System.String)
  - System.Web.UI.UserControl.OnInit(System.EventArgs)
  - System.Web.UI.UserControl.Request
  - System.Web.UI.UserControl.Response
  - System.Web.UI.UserControl.SaveViewState
  - System.Web.UI.UserControl.Server
  - System.Web.UI.UserControl.Session
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#InnerText
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#TagName
  - System.Web.UI.UserControl.Trace
  - System.Web.UI.UserControl.TryUpdateModel``1(``0)
  - System.Web.UI.UserControl.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.UserControl.UpdateModel``1(``0)
  - System.Web.UI.UserControl.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  platform:
  - net462
- uid: System.Web.UI.MasterPage.#ctor
  id: '#ctor'
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Web.UI.MasterPage&quot;> </xref> klasy."
  syntax:
    content: public MasterPage ();
    parameters: []
  overload: System.Web.UI.MasterPage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> formant <xref:System.Web.UI.MasterPage.ContentTemplates*>słownika.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  remarks: "Można dodać klasy pochodnej strony wzorcowej <xref:System.Web.UI.WebControls.Content>formanty <xref:System.Web.UI.MasterPage.ContentTemplates%2A>słownika przy użyciu metody AddContentTemplate.</xref:System.Web.UI.MasterPage.ContentTemplates%2A> </xref:System.Web.UI.WebControls.Content> Typy pochodne zwykle nie zastępują metody AddContentTemplate."
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "Unikatową nazwę <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref>."
    - id: template
      type: System.Web.UI.ITemplate
      description: "The <xref href=&quot;System.Web.UI.WebControls.Content&quot;></xref>."
  overload: System.Web.UI.MasterPage.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> formant o tej samej nazwie już istnieje w <xref:System.Web.UI.MasterPage.ContentTemplates*>słownika.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  id: ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera listę <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> formanty używane do definiowania różnych strony wzorcowej zawartości regionów."
  remarks: "Klasy pochodne strony wzorcowej dostępu właściwość Elementy ContentPlaceHolders, aby wyświetlić bieżące <xref:System.Web.UI.WebControls.ContentPlaceHolder>formantów, które znajdują się w głównym.</xref:System.Web.UI.WebControls.ContentPlaceHolder> Typy pochodne zwykle nie zastępują Elementy ContentPlaceHolders właściwości."
  syntax:
    content: protected System.Collections.IList ContentPlaceHolders { get; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>z <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> formanty używane jako symbole zastępcze dla strony wzorcowej <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> formanty znaleziono w zawartości strony.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentPlaceHolders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentTemplates
  id: ContentTemplates
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera listę formantów zawartości, które są skojarzone z strony wzorcowej."
  remarks: "Klasy pochodne strony wzorcowej dostępu do właściwości ContentTemplates można pobrać bieżącego <xref:System.Web.UI.WebControls.Content>kontrolki, zgodnie z definicją w skojarzonych stron zawartości.</xref:System.Web.UI.WebControls.Content> Typy pochodne zwykle nie zastępują właściwości ContentTemplates."
  syntax:
    content: protected System.Collections.IDictionary ContentTemplates { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IList>Formantów skojarzony ze stroną wzorcową.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentTemplates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  id: InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Udostępnia metodę, aby ustawić bieżącego szablonu formantu strony, który jest właścicielem strony wzorcowej."
  syntax:
    content: public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);
    parameters:
    - id: contentPlaceHolder
      type: System.Web.UI.Control
      description: "Formant, który reprezentuje kontener zawartości."
    - id: template
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> Wystąpienie do użycia."
  overload: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.Master
  id: Master
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera element nadrzędny głównej strony bieżący serwer główny w zagnieżdżone strony wzorcowe scenariuszy."
  remarks: "Wzorzec właściwość jest tylko do odczytu, ponieważ strona wzorcowa hierarchii nie może zostać utworzony w czasie wykonywania."
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "Strony wzorcowej, który jest elementem nadrzędnym obecnej stronie wzorcowej; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, jeśli bieżąca strona wzorcowa nie ma nadrzędnego."
  overload: System.Web.UI.MasterPage.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia nazwę bieżącej zawartości strony wzorcowej."
  remarks: ''
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "Nazwa strony głównej, który jest elementem nadrzędnym obecnej stronie wzorcowej; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, jeśli bieżąca strona wzorcowa nie ma nadrzędnego."
  overload: System.Web.UI.MasterPage.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Właściwość MasterPageFile można ustawić tylko w tym miejscu lub przed <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> zdarzeń."
  platform:
  - net462
references:
- uid: System.Web.UI.UserControl
  isExternal: false
  name: System.Web.UI.UserControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.MasterPage.#ctor
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.MasterPage.ContentTemplates
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.MasterPage.Master
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.MasterPage.MasterPageFile
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
- uid: System.Web.UI.MasterPage.#ctor*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage.MasterPage
- uid: System.Web.UI.MasterPage.AddContentTemplate*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate
  nameWithType: MasterPage.AddContentTemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
- uid: System.Web.UI.MasterPage.ContentTemplates*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder
  nameWithType: MasterPage.InstantiateInContentPlaceHolder
- uid: System.Web.UI.MasterPage.Master*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
- uid: System.Web.UI.MasterPage.MasterPageFile*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
