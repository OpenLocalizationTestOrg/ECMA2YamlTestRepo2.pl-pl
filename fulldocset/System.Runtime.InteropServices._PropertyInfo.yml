### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._PropertyInfo
  id: _PropertyInfo
  children:
  - System.Runtime.InteropServices._PropertyInfo.Attributes
  - System.Runtime.InteropServices._PropertyInfo.CanRead
  - System.Runtime.InteropServices._PropertyInfo.CanWrite
  - System.Runtime.InteropServices._PropertyInfo.DeclaringType
  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetHashCode
  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetType
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  - System.Runtime.InteropServices._PropertyInfo.MemberType
  - System.Runtime.InteropServices._PropertyInfo.Name
  - System.Runtime.InteropServices._PropertyInfo.PropertyType
  - System.Runtime.InteropServices._PropertyInfo.ReflectedType
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.ToString
  langs:
  - csharp
  name: _PropertyInfo
  nameWithType: _PropertyInfo
  fullName: System.Runtime.InteropServices._PropertyInfo
  type: Interface
  summary: "Udostępnia publiczne elementy członkowskie &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; klasy do kodu niezarządzanego."
  remarks: "Ten interfejs jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       Ten interfejs zachowuje kolejność vtable <xref:System.Reflection.PropertyInfo?displayProperty=fullName>klasy elementów członkowskich, które mogą być udostępniane przez niezarządzane obiekty COM.</xref:System.Reflection.PropertyInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))]

      public interface _PropertyInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.PropertyInfo.Attributes*>Właściwości.</xref:System.Reflection.PropertyInfo.Attributes*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.Attributes%2A>Właściwość pobiera atrybuty tej właściwości.</xref:System.Reflection.PropertyInfo.Attributes%2A>"
  syntax:
    content: public System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: "Atrybuty tej właściwości."
  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  id: CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.PropertyInfo.CanRead*>Właściwości.</xref:System.Reflection.PropertyInfo.CanRead*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.CanRead%2A>Właściwość pobiera wartość wskazującą, czy właściwość może zostać odczytany.</xref:System.Reflection.PropertyInfo.CanRead%2A>"
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta właściwość może zostać odczytany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  id: CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.PropertyInfo.CanWrite*>Właściwości.</xref:System.Reflection.PropertyInfo.CanWrite*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.CanWrite%2A>Właściwość pobiera wartość wskazującą, czy właściwość może być zapisywane.</xref:System.Reflection.PropertyInfo.CanWrite%2A>"
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta właściwość może zostać zapisana na; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MemberInfo.DeclaringType*>Właściwości.</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.DeclaringType%2A>Właściwość pobiera klasy, która deklaruje tego elementu członkowskiego.</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> Obiektu klasy, która deklaruje tego elementu członkowskiego."
  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.Equals*>metody.</xref:System.Object.Equals*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Object.Equals%2A>Metoda określa, czy określony <xref:System.Object>jest taki sam, jak bieżący <xref:System.Object>.</xref:System.Object> </xref:System.Object> </xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>Do porównania z bieżącym <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony <xref:System.Object>jest taki sam, jak bieżący <xref:System.Object>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  id: GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetAccessors*>metody.</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetAccessors%2A>— Metoda zwraca tablicę, której elementy odzwierciedlają publicznego `get`, `set`i innych metod dostępu właściwości odzwierciedlone przez bieżące wystąpienie.</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "Tablica <xref:System.Reflection.MethodInfo>obiektów, które odzwierciedlać publicznego <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>i innych metod dostępu właściwości odzwierciedlone przez bieżące wystąpienie, jeśli znaleziono metody dostępu; w przeciwnym razie ta metoda zwraca wartość zero (0) elementów tablicy.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetAccessors*>metody.</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetAccessors%2A>— Metoda zwraca tablicę, której elementy odzwierciedlają publicznego i, jeśli jest określony, niepublicznych `get`, `set`i innych metod dostępu właściwości odzwierciedlone przez bieżące wystąpienie.</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić metody niepublicznej w zwróconym <xref uid=&quot;langword_csharp_MethodInfo&quot; name=&quot;MethodInfo&quot; href=&quot;&quot;> </xref> tablicy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo[]
      description: "Tablica <xref:System.Reflection.MethodInfo>obiektów, której elementy odzwierciedlają <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>i innych metod dostępu właściwości odzwierciedlone przez bieżące wystąpienie.</xref:System.Reflection.MethodInfo> Jeśli <code> nonPublic </code> parametr jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, ta tablica zawiera publicznego i niepublicznych <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>i innych metod dostępu. Jeśli <code> nonPublic </code> jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, to tablica zawiera tylko publiczne <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>i innych metod dostępu. Jeśli nie zostaną znalezione nie metod dostępu z określonym widoczność, ta metoda zwraca tablicę z zero (0) elementów."
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MemberInfo.GetCustomAttributes*>metody.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>Metoda zwraca tablicę zawierającą wszystkie atrybuty niestandardowe.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "wartość true, aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie wartość false."
    return:
      type: System.Object[]
      description: "Tablica zawierająca wszystkie atrybuty niestandardowe lub tablica nie zawierająca żadnego elementu, jeśli zostały zdefiniowane żadne atrybuty."
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MemberInfo.GetCustomAttributes*>metody.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>Metoda zwraca tablicę atrybutów niestandardowych, zidentyfikowane przez <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Typ atrybutu do szukania. Zwracane są tylko atrybuty, które są przypisane do tego typu."
    - id: inherit
      type: System.Boolean
      description: "wartość true, aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie wartość false."
    return:
      type: System.Object[]
      description: "Tablica atrybutów niestandardowych zastosowanych do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu (0), jeśli atrybuty nie zostały zastosowane."
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  id: GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetGetMethod*>metody.</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>Metoda zwraca publicznego `get` metody dostępu dla tej właściwości.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>obiekt reprezentujący publicznego <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> metody dostępu dla tej właściwości lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> metody dostępu jest niepublicznego lub nie istnieje.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetGetMethod*>metody.</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>Metoda zwraca publicznego lub niepubliczne `get` metody dostępu dla tej właściwości.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby przywrócić niepublicznych <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> akcesor; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>reprezentujący obiekt <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> metody dostępu dla tej właściwości, jeśli <code> nonPublic </code> parametr jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo> Or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but no <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessors exist."
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.GetHashCode*>metody.</xref:System.Object.GetHashCode*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Object.GetHashCode%2A>Metody służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>nadaje się do użytku w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla bieżącego wystąpienia."
  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Zarezerwowane do użytku w przyszłości. Musi być ma wartości IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Tablica nazw można mapować."
    - id: cNames
      type: System.UInt32
      description: "Liczba nazw, które mają być mapowane."
    - id: lcid
      type: System.UInt32
      description: "Kontekst ustawień regionalnych, w którym zinterpretować nazwy."
    - id: rgDispId
      type: System.IntPtr
      description: "Tablica przydzielone przez obiekt wywołujący odbierająca identyfikatory, odpowiadających nazwy."
  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  id: GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetIndexParameters*>metody.</xref:System.Reflection.PropertyInfo.GetIndexParameters*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>Metoda zwraca tablicę wszystkich parametrów indeksu właściwości</xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Tablica typu <xref:System.Reflection.ParameterInfo>zawierających parametry indeksy.</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  id: GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetSetMethod*>metody.</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>Metoda zwraca publicznego `set` metody dostępu dla tej właściwości.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>Obiekt reprezentujący <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref> metody dla tej właściwości Jeśli <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> metoda dostępu nie jest publiczny, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> metoda dostępu nie jest publiczny.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetSetMethod*>metody.</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>Metoda zwraca `set` metody dostępu dla tej właściwości.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby przywrócić akcesor niepublicznych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "Jedna z wartości w tabeli poniżej.       <table><thead><tr><th> Wartość       </th><th> Znaczenie       </th></tr></thead><tbody><tr><td> A <xref:System.Reflection.MethodInfo>reprezentujący obiekt <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref> metody dla tej właściwości.</xref:System.Reflection.MethodInfo>       </td><td> <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> Metoda dostępu nie jest publiczny.       - lub - <code> nonPublic </code> parametr jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> i <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> akcesor jest niepubliczny.       </td></tr><tr><td><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref></td><td> <code> nonPublic </code> Parametr jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, ale właściwość jest tylko do odczytu.       - lub - <code> nonPublic </code> parametr jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> i <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> akcesor jest niepubliczny.       - lub - brak nie <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> metody dostępu.       </td></tr></tbody></table>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.GetType*>metody.</xref:System.Object.GetType*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Object.GetType%2A>Metoda pobiera typ bieżącego wystąpienia.</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A <xref:System.Type>obiektu.</xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera informacje o typie dla obiekt, który można uzyskać informacji o typie dla interfejsu."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Informacje o typie do zwrócenia."
    - id: lcid
      type: System.UInt32
      description: "Identyfikator ustawień regionalnych dla informacji o typie."
    - id: ppTInfo
      type: System.IntPtr
      description: "Wskaźnik do obiektu informacji żądanego typu."
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera numer typu informacji interfejsów, że obiekt zawiera (0 lub 1)."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Gdy metoda zwróci wartość, zawiera wskaźnik do lokalizacji, która odbiera liczba interfejsów informacji typu dostarczanych przez obiekt. Ten parametr jest przekazywany jako niezainicjowany."
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetValue*>metody.</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetValue%2A>Metoda zwraca wartość literału skojarzony z właściwością przez kompilator.</xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt, którego wartość właściwości zostanie zwrócony."
    - id: index
      type: System.Object[]
      description: "Opcjonalne indeks wartości dla właściwości indeksowane. Ta wartość powinna być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nieindeksowanych właściwości."
    return:
      type: System.Object
      description: "Wartość właściwości <code> obj </code> parametru."
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.GetValue*>metody.</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.GetValue%2A>Metoda zwraca wartość właściwości o określonym powiązaniu, indeks i <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> </xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt, którego wartość właściwości zostanie zwrócony."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'Atrybut wywołania. This must be a bit flag from <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. Należy określić atrybut odpowiedniego wywołania. Jeśli statyczny element członkowski zostanie wywołany, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> flagę <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> musi być ustawiona.'
    - id: binder
      type: System.Reflection.Binder
      description: "Obiekt, który umożliwia powiązanie koercja argumentu typy wywołania elementów członkowskich i pobieranie <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> obiektów przez odbicie. Jeśli `binder` jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, używany jest domyślny integrator."
    - id: index
      type: System.Object[]
      description: "Opcjonalne indeks wartości dla właściwości indeksowane. Ta wartość powinna być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nieindeksowanych właściwości."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> Obiekt, który reprezentuje kultury, dla którego zostanie zlokalizowany zasób. Należy pamiętać, że jeśli zasób nie jest lokalizowany tej kultury, <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref> metoda zostanie wywołana kolejno w poszukiwaniu dopasowania. Jeśli ta wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> są uzyskiwane z <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref> właściwości."
    return:
      type: System.Object
      description: "Wartość właściwości <code> obj </code> parametru."
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zapewnia dostęp do właściwości i metody ujawnione przez obiekt."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identyfikator elementu członkowskiego."
    - id: riid
      type: System.Guid
      description: "Zarezerwowane do użytku w przyszłości. Musi być ma wartości IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Kontekst ustawień regionalnych, w którym interpretować argumentów."
    - id: wFlags
      type: System.Int16
      description: "Flagi opisujące kontekstu wywołania."
    - id: pDispParams
      type: System.IntPtr
      description: "Wskaźnik do struktury zawierający tablicę argumentów tablicy argumentu identyfikator DISPID dla argumentów nazwanych i liczbie liczba elementów w tablicach."
    - id: pVarResult
      type: System.IntPtr
      description: "Wskaźnik do lokalizacji, w którym będzie przechowywany wynik."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Wskaźnik do struktury, która zawiera informacje o wyjątku."
    - id: puArgErr
      type: System.IntPtr
      description: "Indeks pierwszego argumentu, który zawiera błąd."
  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MemberInfo.IsDefined*>metody.</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.IsDefined%2A>Metoda wskazuje czy jeden lub więcej wystąpienie `attributeType` parametru jest stosowany do tego elementu członkowskiego.</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref:System.Type>Obiektów, dla których są stosowane atrybuty niestandardowe.</xref:System.Type>"
    - id: inherit
      type: System.Boolean
      description: "wartość true, aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie wartość false."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli jeden lub więcej wystąpień <code> attributeType </code> parametru są stosowane do tego elementu członkowskiego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.PropertyInfo.IsSpecialName*>Właściwości.</xref:System.Reflection.PropertyInfo.IsSpecialName*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.IsSpecialName%2A>Właściwość ustawia wartość wskazującą, czy właściwość jest specjalną nazwą.</xref:System.Reflection.PropertyInfo.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta właściwość jest specjalną nazwą; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.PropertyInfo.MemberType*>Właściwości.</xref:System.Reflection.PropertyInfo.MemberType*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.MemberType%2A>Pobiera właściwość <xref:System.Reflection.MemberTypes>wartość wskazującą, czy ten element członkowski jest właściwością.</xref:System.Reflection.MemberTypes> </xref:System.Reflection.PropertyInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "Jeden z <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> wartość wskazującą, czy ten element członkowski jest właściwością."
  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MemberInfo.Name*>Właściwości.</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.Name%2A>Właściwość pobiera nazwę bieżącego elementu członkowskiego.</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>obiektu zawierającego nazwę tego elementu członkowskiego.</xref:System.String>"
  overload: System.Runtime.InteropServices._PropertyInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  id: PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.PropertyInfo.PropertyType*>Właściwości.</xref:System.Reflection.PropertyInfo.PropertyType*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.PropertyType%2A>Właściwość pobiera typ tej właściwości.</xref:System.Reflection.PropertyInfo.PropertyType%2A>"
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: "Typ tej właściwości."
  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MemberInfo.ReflectedType*>Właściwości.</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.ReflectedType%2A>Właściwość pobiera obiekt klasy, który został użyty do uzyskania to <xref:System.Reflection.MemberInfo>obiektu.</xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu, do której ta <xref:System.Reflection.MemberInfo>obiekt został uzyskany.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.PropertyInfo.SetValue*>metody.</xref:System.Reflection.PropertyInfo.SetValue*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.PropertyInfo.SetValue%2A>Metoda ustawia wartości właściwości, za pomocą wartości indeksu opcjonalne dla właściwości indeksu.</xref:System.Reflection.PropertyInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt, którego właściwość zostanie ustawiona."
    - id: value
      type: System.Object
      description: "Nowa wartość dla tej właściwości."
    - id: index
      type: System.Object[]
      description: "Opcjonalne indeks wartości dla właściwości indeksowane. Ta wartość powinna być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nieindeksowanych właściwości."
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.FieldInfo.SetValue*>metody.</xref:System.Reflection.FieldInfo.SetValue*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.FieldInfo.SetValue%2A>Metoda ustawia wartości właściwości dla danego obiektu do danej wartości.</xref:System.Reflection.FieldInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt, którego wartość właściwości zostanie zwrócony."
    - id: value
      type: System.Object
      description: "Nowa wartość dla tej właściwości."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'Atrybut wywołania. This must be a bit flag from <xref href=&quot;System.Reflection.BindingFlags&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. Należy określić atrybut odpowiedniego wywołania. Jeśli statyczny element członkowski zostanie wywołany, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> flagę <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> musi być ustawiona.'
    - id: binder
      type: System.Reflection.Binder
      description: "Obiekt, który umożliwia powiązanie koercja argumentu typy wywołania elementów członkowskich i pobieranie <xref:System.Reflection.MemberInfo>obiektów przez odbicie.</xref:System.Reflection.MemberInfo> Jeśli `binder` jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, używany jest domyślny integrator."
    - id: index
      type: System.Object[]
      description: "Opcjonalne indeks wartości dla właściwości indeksowane. Ta wartość powinna być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nieindeksowanych właściwości."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Obiekt, który reprezentuje kultury, dla którego zostanie zlokalizowany zasób.</xref:System.Globalization.CultureInfo> Należy pamiętać, że jeśli zasób nie jest lokalizowany tej kultury, <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref> metoda zostanie wywołana kolejno w poszukiwaniu dopasowania. Jeśli ta wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> są uzyskiwane z <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref> właściwości."
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.ToString*>metody.</xref:System.Object.ToString*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg reprezentujący bieżące <xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: true
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
- uid: System.Runtime.InteropServices._PropertyInfo.Equals*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals
  nameWithType: _PropertyInfo.Equals
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors
  nameWithType: _PropertyInfo.GetAccessors
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _PropertyInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod
  nameWithType: _PropertyInfo.GetGetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _PropertyInfo.GetHashCode
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _PropertyInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters
  nameWithType: _PropertyInfo.GetIndexParameters
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod
  nameWithType: _PropertyInfo.GetSetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType
  nameWithType: _PropertyInfo.GetType
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _PropertyInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _PropertyInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue
  nameWithType: _PropertyInfo.GetValue
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke
  nameWithType: _PropertyInfo.Invoke
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined
  nameWithType: _PropertyInfo.IsDefined
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
- uid: System.Runtime.InteropServices._PropertyInfo.Name*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue
  nameWithType: _PropertyInfo.SetValue
- uid: System.Runtime.InteropServices._PropertyInfo.ToString*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString
  nameWithType: _PropertyInfo.ToString
