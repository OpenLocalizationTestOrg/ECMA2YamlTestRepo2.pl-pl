### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  id: ReliableSessionBindingElement
  children:
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  - System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  - System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  - System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  - System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
  type: Class
  summary: "Reprezentuje element powiązania, które mogą wytwarzać wysyłanie i odbieranie kanały wymagane dla sesji niezawodnej między punktami końcowymi."
  remarks: "Zapewnia sesji i opcjonalnie zapewnia dostarczanie komunikatów uporządkowanej. Ta sesja zaimplementowanym mogą przechodzić pośredników SOAP i transportu.       Każdy element powiązania reprezentuje krok przetwarzania przy wysyłaniu lub odbieraniu wiadomości. W czasie wykonywania elementy powiązania utworzyć fabryk kanałów i odbiorników, które są niezbędne do utworzenia wychodzące i przychodzące stosy kanału wymagane do wysyłania i odbierania wiadomości. Obiektu ReliableSessionBindingElement zapewnia opcjonalne warstwę stosu, który można utworzyć niezawodnej sesji między punktami końcowymi i skonfigurować działanie tej sesji.       Obiektu ReliableSessionBindingElement znajduje się na standardowe powiązania w poniższej tabeli.      | Powiązanie | Domyślne |   |-------------|-------------|   | <xref:System.ServiceModel.NetTcpBinding>| Wyłącz |   | <xref:System.ServiceModel.WSHttpBinding>| Wyłącz |   | <xref:System.ServiceModel.WSDualHttpBinding>| Na (wymagane) |</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.NetTcpBinding>"
  example:
  - "The ReliableSessionBindingElement can be added to any custom binding. This is done using the following configuration elements.  \n  \n```  \n<bindings>  \n    <customBinding>  \n        <binding configurationName=”ReliabilityHTTP”>  \n            <reliableSession/>  \n        </binding>  \n    </customBinding>  \n</bindings>  \n```  \n  \n The following sample code demonstrates how to use ReliableSessionBindingElement in code.  \n  \n [!code-vb[S_Imperative#1](~/add/codesnippet/visualbasic/t-system.servicemodel.ch_0_1.vb)]\n [!code-cs[S_Imperative#1](~/add/codesnippet/csharp/t-system.servicemodel.ch_0_1.cs)]"
  syntax:
    content: 'public sealed class ReliableSessionBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> klasy."
  syntax:
    content: public ReliableSessionBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> klasy, która określa, czy dostarczanie komunikatów muszą zachować kolejność, w którym są wysyłane wiadomości."
  syntax:
    content: public ReliableSessionBindingElement (bool ordered);
    parameters:
    - id: ordered
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wiadomości muszą być dostarczane w kolejności, w jakiej są wysyłane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia przedział czasu, miejsce docelowe oczekiwania przed wysłaniem potwierdzenia do źródła komunikatu za pośrednictwem niezawodnych kanałów tworzonych przez fabrykę."
  remarks: "Lokalizacji docelowej, która odbiera wiadomości przez niezawodny kanał grupuje potwierdzenia dla tych wiadomości, które są razem w pojedynczym komunikacie zmniejszenie ruchu w sieci oraz zwiększenie gęstości informacje w wiadomości. Grupowanie skaluje się lepiej w miarę zwiększania ruchu. Nie jest podejmowana próba wysłanie potwierdzenia dla każdego komunikatu otrzymaniu tak szybko, jak to możliwe, ale raczej dla interwału czasu, grupowanie potwierdzenia, które zostały dostarczone w tym przedziale, a następnie wysyła je wszystkie razem. Pierwszy komunikat o odebraniu jest wyjątek; zostało potwierdzone, natychmiast po dostarczeniu. Ponadto, jeżeli niezawodnej sesji są używane z jednego połączenia HTTP, jak jest to miejsce w przypadku na przykład <xref:System.ServiceModel.WSHttpBinding>, ale nie <xref:System.ServiceModel.WSDualHttpBinding>, to ustawienie nie zostanie użyty.</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding>       Wartość, która jest ustawiona właściwość AcknowledgementInterval jest zalecane infrastruktury i nienaruszalne ograniczenie."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Który określa przedział czasu oczekiwania przez usługę do wysyłania do źródła komunikatu potwierdzenia.</xref:System.TimeSpan> Wartość domyślna to 2 sekundy."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość jest mniejsza niż lub równa zero."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "Do dodania."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "Do dodania."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Tworzy kopię elementu powiązania bieżącej sesji niezawodnej."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "A <xref:System.ServiceModel.Channels.BindingElement>czyli klonowania bieżącego elementu powiązania.</xref:System.ServiceModel.Channels.BindingElement>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia wartość wskazującą, czy niezawodnej sesji zawiera sterowanie przepływem włączone."
  remarks: "Sterowanie przepływem jest mechanizm niezawodnej sesji zaimplementować w celu zapewnienia nadawców nie wysyłają komunikaty więcej niż odbiornik może obsłużyć. Odbiorniki zostały buforów komunikatów, które służy do uwzględnienia Seria wiadomości i komunikatów poza kolejnością. Odbiorniki anonsowane do nadawców ilość miejsca w buforze, to w każdym ich potwierdzeń. Nadawców można dzięki tym informacjom można zatrzymać wysyłanie wiadomości przy każdym odbiorca nie ma buforu miejsca w lewo."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli niezawodnej sesji zawiera sterowanie przepływem włączony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: T
      description: "Do dodania."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia przedział czasu, który pozostaje nieaktywne przed zamknięciem usługi."
  remarks: "Działań w kanale jest zdefiniowany jako odbierania komunikatu aplikacji lub infrastruktury. Określa maksymalną ilość czasu podtrzymywania nieaktywnych sesji, parametr limitu czasu bezczynności. W przypadku więcej niż limit czasu nieaktywności przekazuje interwał czasu bez żadnych działań, sesja został przerwany przez infrastrukturę i usterek kanału. Niezawodna sesja jest jednostronnie działo.       Jeśli aplikacja wysyłająca nie zawiera żadnych komunikatów do wysłania następnie niezawodnej sesji zwykle nie występuje błąd z powodu braku aktywności; Zamiast tego mechanizmu keep-alive utrzymuje sesję active nieskończoność. Należy pamiętać, że Dyspozytor niezależnie może przerwać niezawodnej sesji, jeśli żadne komunikaty aplikacji są wysyłane lub odbierane. W związku z tym limit czasu nieaktywności zwykle wygasa, jeśli warunki w sieci są taki sposób, że żadne komunikaty są odbierane lub wystąpił błąd na nadawcy."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Który określa przedział czasu, który pozostaje nieaktywne przed zamknięciem usługi.</xref:System.TimeSpan> Wartość domyślna to 10 minut."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość jest mniejsza lub równa zero lub większa niż <xref:System.Int32.MaxValue>lub <xref:System.TimeSpan.MaxValue>.</xref:System.TimeSpan.MaxValue> </xref:System.Int32.MaxValue>"
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia największą liczbę kanałów oczekujących podczas niezawodnej sesji."
  remarks: "Kanały oczekują na kiedy są oczekuje na zatwierdzenie. Po osiągnięciu tego limitu, Brak kanałów są tworzone i Odłóż oczekujących tryb dopóki liczba osiąga (akceptując oczekujących kanałów). Jest to ograniczenie dla każdej odbiornika.       Po osiągnięciu progu i aplikacji zdalnej próbuje utworzyć nowe niezawodnej sesji, żądanie zostanie odrzucone i otwórz operację, która zostanie wyświetlony monit tej usterki."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba kanałów oczekujących. Wartość domyślna to 4."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość jest mniejsza lub równa zero lub większa niż 16384."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia maksymalną liczbę razy komunikat próbuje przetransferowane w trakcie działania niezawodnej sesji."
  remarks: "Komunikat jest uznawany za do przeniesienia, jeśli potwierdzenia dostarczenia po stronie odbiorcy przez odbiorcę.       Jeśli nie otrzymano potwierdzenia w ciągu pewnego czasu dla wiadomości, które zostały przesłane, infrastruktury automatycznie ponownie wysyła wiadomość. Infrastruktura próbuje wysłać komunikat do co najwyżej wartość MaxRetryCount wiele razy. Nie odbiera potwierdzenia przed osiągnięciem tego limitu jest traktowane jako błąd krytyczny komunikacji oraz powoduje, że się zdarzenia wystąpił błąd kanału.       Infrastruktura używa algorytm wykładnicze wycofania do określenia, kiedy ponownego przesłania, oparte na obliczona średnia czasu rundy. Podczas początkowej ponownych prób jest obliczana na podstawie na zmierzona czasu ustanowienia sesji. Algorytm retransmisji podwaja opóźnienie co nieudanej próby podania, co prowadzi do przekazywania między przy pierwszej próbie transmisji i ostatnią próbę retransmisji około 8,5 minut. Podczas pierwszej próby retransmisji jest dostosowane według czasu Rundy obliczeniowej i odcinek wynikowy czas trwania tymi próbami różni odpowiednio. Dzięki temu czas retransmisji dynamicznie dostosowywana w zmiennych warunkach sieciowych."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba razy komunikat podejmie próbę ponownego wysyłania. Minimalna wartość to 1; Maksymalna liczba to <xref:System.Int32>; a wartość domyślna to 8.</xref:System.Int32>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość jest mniejsza niż lub równa zero."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia największą liczbę wiadomości, które mogą znajdować się w buforze wysyłania lub bufor odbioru."
  remarks: "Wartość właściwości MaxTransferWindowSize można ustawić na nadawcy i odbiorcy. Ta wartość znajduje się w zasadach powiązania WSDL, tak więc jeśli używasz [narzędzie narzędzia metadanych elementu ServiceModel (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) do skonstruowania klienta, ma taką samą wartość. W przeciwnym razie wartość ta jest niezależnie od zostanie ustawiona na kliencie.       Po osiągnięciu tego limitu na nadawcy, dodatkowe wywołania do wysyłania są zablokowane. Po osiągnięciu tego limitu odbiornika nowe komunikaty przychodzące do podstawowego kanału nie są akceptowane.       Niezawodnej sesji używa protokołu okien w celu ulepszenia wykorzystania sieci. Ilość buforowania, wymagane jest pochodną bezpośrednio rozmiar okna transmisji. Podczas strojenia tę wartość, należy pamiętać, że okna transmisji optymalne jest powiązany z przepustowości i opóźnień w prosty sposób. Nadaje się doskonale maksymalny rozmiar okna jest przepustowość, czas opóźnienia. Daje mniejszego mniejsza niż użycie sieci 100%; Cokolwiek większych jest po prostu utracona."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba wiadomości, które można buforować. Minimalna wartość to 1; wartość maksymalna to 4096; a wartość domyślna to 32."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość jest mniejsza lub równa jeden lub większa niż 4096."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia wartość wskazującą, czy dostarczanie komunikatów muszą zachować kolejność, w którym są wysyłane wiadomości."
  remarks: "Aby uzyskać komunikaty wysyłane w kolejności, należy również ustawić <xref:System.ServiceModel.ConcurrencyMode>do <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode>"
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wiadomości muszą być dostarczane w kolejności, w jakiej są wysyłane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia wersję WS-ReliableMessaging określone przez element powiązania."
  remarks: 'Obecnie nie istnieją dwie wersje obsługiwane przez protokół WS-ReliableMessaging [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 i WS-ReliableMessagingFebruary2005. Domyślna wersja jest WS ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "Wystąpienia pochodzące z <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;> </xref> reprezentujący wersji protokołu WS-ReliableMessaging używanego przez element konfiguracji."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Mapuje informacje zawarte w elemencie powiązanie niezawodnej sesji do elementów WSDL, które umożliwiają zdalny punkt końcowy do uzyskania dostępu do usługi z niezawodnej sesji."
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref> Który Eksportuje informacje o powiązaniu w elemencie powiązanie niezawodnej sesji do elementów WSDL."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> Zapewnia mapowanie wyeksportowane elementy WSDL opis punktu końcowego."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone
  nameWithType: ReliableSessionBindingElement.Clone
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: ReliableSessionBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
