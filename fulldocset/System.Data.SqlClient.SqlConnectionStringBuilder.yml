### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnectionStringBuilder
  id: SqlConnectionStringBuilder
  children:
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  - System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  - System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  - System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  - System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  - System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  - System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  - System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  - System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  - System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  - System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  - System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  - System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  - System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  - System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  - System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  - System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Password
  - System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  - System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  - System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  - System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  - System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  - System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  - System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  - System.Data.SqlClient.SqlConnectionStringBuilder.Values
  - System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  langs:
  - csharp
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder
  type: Class
  summary: "Zapewnia prosty sposób tworzenia i zarządzania zawartością parametrów połączeń używanych przez <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasy."
  remarks: "Konstruktor ciągów połączenia umożliwiają deweloperom, programowe tworzenie ciągów połączenia poprawna składniowo i przeanalizować i skompiluj ponownie istniejących parametrów połączenia, przy użyciu właściwości i metody klasy. Konstruktor ciągów połączenia zapewnia jednoznacznie właściwości odpowiadającej pary znane klucz/wartość dozwolona przez program SQL Server. Deweloperzy wymagające utworzyć parametry połączenia w ramach aplikacji można użyć klasy SqlConnectionStringBuilder do kompilowania i modyfikowania parametry połączenia. Klasa ułatwia również zarządzać parametry połączenia, przechowywane w pliku konfiguracyjnym aplikacji.       SqlConnectionStringBuilder sprawdza pary klucz wartość nieprawidłowa. W związku z tym nie można użyć tej klasy, aby utworzyć parametry połączenia nieprawidłowy; Próba dodania pary nieprawidłowy spowoduje zgłoszenie wyjątku. Klasa obsługuje zbiór stałym synonimy i może dokonywać translacji z synonim do odpowiedniego dobrze znanej nazwy klucza.       Na przykład, jeśli używasz **elementu** właściwości można pobrać wartości, można określić ciąg, który zawiera wszystkie synonim klucza należy. Na przykład można określić &quot;Adres sieciowy&quot;, &quot;addr&quot; lub inne dopuszczalne synonim dla tego klucza w ciągu połączenia korzystając z dowolnego członka wymagającego ciąg znaków zawierający nazwę klucza, takich jak **elementu** właściwości lub <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A>metody.</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A> Zobacz <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>Właściwości pełną listę dopuszczalne synonimy.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>       **Elementu** właściwość obsługuje próbuje Wstaw złośliwego wpisów. Na przykład następujący kod, za pomocą właściwości elementu domyślne (indeksatora, w języku C#) poprawnie specjalne para zagnieżdżonych klucza i wartości: [Visual Basic] ```   Dim builder As New System.Data.SqlClient.SqlConnectionStringBuilder   builder(&quot;Data Source&quot;) = &quot;(local)&quot;   builder(&quot;Integrated Security&quot;) = True   builder(&quot;Initial Catalog&quot;) = &quot;AdventureWorks;NewValue=Bad&quot;   Console.WriteLine(builder.ConnectionString)   ``` [C#] ```   System.Data.SqlClient.SqlConnectionStringBuilder builder =     new System.Data.SqlClient.SqlConnectionStringBuilder();   builder[&quot;Data Source&quot;] = &quot;(local)&quot;;   builder[&quot;integrated Security&quot;] = true;   builder[&quot;Initial Catalog&quot;] = &quot;AdventureWorks;NewValue=Bad&quot;;   Console.WriteLine(builder.ConnectionString);      ``` wynik jest następujący ciąg połączenia, który obsługuje nieprawidłową wartość w bezpieczny sposób:```   Source=(local);Initial Catalog=&quot;AdventureWorks;NewValue=Bad&quot;;   Integrated Security=True   ```"
  example:
  - "The following console application builds connection strings for a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. The code uses a SqlConnectionStringBuilder class to create the connection string, and then passes the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property of the SqlConnectionStringBuilder instance to the constructor of the connection class. The example also parses an existing connection string and demonstrates various ways of manipulating the connection string's contents.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how SqlConnectionStringBuilder works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder#1](~/add/codesnippet/csharp/t-system.data.sqlclient._13_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._13_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("DataSource")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlConnectionStringBuilderConverter))]

      public sealed class SqlConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> klasy."
  syntax:
    content: public SqlConnectionStringBuilder ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> klasy. Podane parametry połączenia zawiera dane wystąpienia informacji połączenia wewnętrznego."
  remarks: "<xref:System.Data.SqlClient.SqlConnectionStringBuilder>Klasa zawiera stałe wewnętrznej kolekcji par klucz/wartość.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Nawet jeśli podasz tylko mały podzbiór wartości parametrów połączeń możliwe w Konstruktorze obiektu zawsze zapewnia wartości domyślne dla każdej pary klucz wartość. Gdy `ConnectionString` właściwości obiektu są pobierane, ciąg zawiera tylko pary klucz wartość, w których wartość nie jest wartością domyślną dla elementu."
  example:
  - "The following example supplies a simple SQL Server connection string in the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object's constructor, and then iterates through all the key/value pairs within the object. Note that the collection provides default values for each item. Also note that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the well-known keys so that they are consistent with the well-known names.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Password#1](~/add/codesnippet/csharp/m-system.data.sqlclient._44_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Password#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._44_1.vb)]"
  syntax:
    content: public SqlConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Podstawa informacji połączenia wewnętrznego obiektu. Przeanalizowany w pary nazwa/wartość. Podnoszenie nieprawidłowych nazw kluczy <xref:System.Collections.Generic.KeyNotFoundException>.</xref:System.Collections.Generic.KeyNotFoundException>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "Nieprawidłowa nazwa klucza w parametrach połączenia."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Nieprawidłowa wartość ciągu połączenia (w szczególności, gdy wartość logiczna lub liczbowego był oczekiwany, ale nie podano)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podana <code> connectionString </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  id: ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Deklaruje typ obciążenia aplikacji podczas nawiązywania połączenia z bazą danych w grupie dostępności programu SQL Server. Można ustawić wartość tej właściwości z <xref href=&quot;System.Data.SqlClient.ApplicationIntent&quot;> </xref>. Aby uzyskać więcej informacji o obsłudze SqlClient dla zawsze włączonych grup dostępności, zobacz [SqlClient obsługę wysokiej dostępności, odzyskiwania po awarii](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.ApplicationIntent ApplicationIntent { get; set; }
    return:
      type: System.Data.SqlClient.ApplicationIntent
      description: "Zwraca bieżącą wartość właściwości (wartości typu <xref href=&quot;System.Data.SqlClient.ApplicationIntent&quot;> </xref>)."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  id: ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia nazwę aplikacji skojarzonej z parametrami połączenia."
  remarks: "Ta właściwość odpowiada kluczy &quot;Nazwa aplikacji&quot; i &quot;aplikacja&quot; w parametrach połączenia."
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and assigns a connection string in the object's constructor. The code displays the parsed and recreated version of the connection string, and then modifies the ApplicationName property of the object. Finally, the code displays the new connection string, including the new key/value pair.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/add/codesnippet/csharp/p-system.data.sqlclient._44_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._44_1.vb)]  \n  \n The sample displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nApplicationName=\".Net SqlClient Data Provider\"  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True;Application Name=\"My Application\"  \n```"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Nazwa aplikacji lub &quot;.NET dostawcę danych SqlClient&quot; Jeśli nie został dostarczony bez nazwy."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  id: AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy przetwarzanie asynchroniczne jest dozwolone przez połączenie utworzone za pomocą tych parametrów połączenia."
  remarks: "Ta właściwość odpowiada kluczy &quot;Asynchronous Processing&quot; i &quot;async&quot; w parametrach połączenia. Aby korzystać z przetwarzania asynchronicznego podał <xref:System.Data.SqlClient.SqlCommand>obiektu, ta para klucza i wartości musi być zawarty w ciągu połączenia skojarzonego <xref:System.Data.SqlClient.SqlConnection>obiektu.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand>"
  example:
  - "The following example retrieves a connection string and verifies that the connection string is configured to allow for asynchronous processing. (In this case, the string comes from a procedure within the application, but in a production application, the connection string might come from a configuration file, or some other source.) Then, the example performs an asynchronous operation, updating values within a sample database on a background thread.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Async#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._47_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Async#1](~/add/codesnippet/csharp/p-system.data.sqlclient._47_1.cs)]"
  syntax:
    content: public bool AsynchronousProcessing { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości AsynchronousProcessing lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli podano żadnej wartości."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  id: AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia ciąg zawierający nazwę pliku podstawowego. W tym pełną nazwę ścieżki możliwe do dołączenia bazy danych."
  remarks: "Ta właściwość odpowiada &quot;AttachDBFilename&quot;, &quot;rozszerzonych właściwości&quot; i &quot;początkowa nazwa pliku&quot; kluczy w parametrach połączenia.       `AttachDBFilename`jest obsługiwana tylko dla danych podstawowych pliki z rozszerzeniem .mdf.       Błąd zostanie wygenerowany, jeśli plik dziennika istnieje w tym samym katalogu co plik danych i słowo kluczowe &quot;baza danych&quot; jest używana podczas dołączania pliku podstawowego. W takim przypadku usuń plik dziennika. Po dołączeniu bazie danych nowy plik dziennika będą automatycznie generowane na podstawie ścieżki fizycznej."
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, and sets the `AttachDBFilename` property in order to specify the name of an attached data file.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._58_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/add/codesnippet/csharp/p-system.data.sqlclient._58_1.cs)]"
  syntax:
    content: public string AttachDBFilename { get; set; }
    return:
      type: System.String
      description: "Wartość <xref uid=&quot;langword_csharp_AttachDBFilename&quot; name=&quot;AttachDBFilename&quot; href=&quot;&quot;> </xref> właściwości, lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli podano żadnej wartości."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  id: Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera uwierzytelniania parametrów połączenia."
  syntax:
    content: public System.Data.SqlClient.SqlAuthenticationMethod Authentication { get; set; }
    return:
      type: System.Data.SqlClient.SqlAuthenticationMethod
      description: "Uwierzytelnianie w parametrach połączenia."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Czyści zawartość <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> wystąpienia."
  remarks: "<xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A>Metoda usuwa wszystkie pary klucz wartość z <xref:System.Data.SqlClient.SqlConnectionStringBuilder>i resetuje wszystkie odpowiednie właściwości.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> </xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> Obejmuje to ustawienia <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>Właściwości na wartość 0 i ustawienie <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>Właściwości na pusty ciąg.</xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> </xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>"
  example:
  - "The following example demonstrates calling the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method. This example populates the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> with some key/value pairs, and then calls the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method and shows the results.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Clear#1](~/add/codesnippet/csharp/m-system.data.sqlclient._15_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Clear#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._15_1.vb)]"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera i ustawia kolumnę ustawienia szyfrowania dla konstruktora ciągu połączenia."
  syntax:
    content: public System.Data.SqlClient.SqlConnectionColumnEncryptionSetting ColumnEncryptionSetting { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
      description: "Ustawienia szyfrowania kolumn dla konstruktora ciągu połączenia."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  id: ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Przestarzałe. Pobiera lub ustawia wartość Boolean wskazującą, czy połączenie jest resetowany podczas rysowania z puli połączeń."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Zresetowania połączenia&quot; w ramach <xref:System.Data.SqlClient.SqlConnection>ciąg połączenia, który został usunięty z programu .NET Framework w wersji 3.5 z dodatkiem SP1.</xref:System.Data.SqlClient.SqlConnection>"
  syntax:
    content: public bool ConnectionReset { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości ConnectionReset lub wartość true, jeśli podano żadnej wartości."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  id: ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]       Liczba ponowne łączenie podjęto po określeniu, czy wystąpił błąd bezczynnego połączenia. To musi być liczbą całkowitą od 0 do 255. Domyślna wartość wynosi 1. Ustawiona na 0, aby wyłączyć połączyć się ponownie przy błędach bezczynnego połączenia. <xref:System.ArgumentException>Zostanie element zgłaszany, gdy ustawiona wartość poza dozwolonym zakresem.</xref:System.ArgumentException>"
  syntax:
    content: public int ConnectRetryCount { get; set; }
    return:
      type: System.Int32
      description: "Liczba ponowne łączenie podjęto po określeniu, czy wystąpił błąd bezczynnego połączenia."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  id: ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]       Ilość czasu (w sekundach) między kolejnymi próbami ponownego połączenia po identyfikacji, który był błąd bezczynnego połączenia. To musi być liczbą całkowitą z przedziału od 1 do 60. Wartość domyślna to 10 sekund. <xref:System.ArgumentException>Zostanie element zgłaszany, gdy ustawiona wartość poza dozwolonym zakresem.</xref:System.ArgumentException>"
  syntax:
    content: public int ConnectRetryInterval { get; set; }
    return:
      type: System.Int32
      description: "Ilość czasu (w sekundach) między kolejnymi próbami ponownego połączenia po identyfikacji, który był błąd bezczynnego połączenia."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  id: ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia czas (w sekundach) oczekiwania na połączenie z serwerem przed zakończeniem próby i wygenerowaniem błędu."
  remarks: "Ta właściwość odpowiada &quot;Connect Timeout&quot;, &quot;limit czasu połączenia&quot; i &quot;timeout&quot; kluczy w parametrach połączenia.       Po otwarciu połączenia z bazą danych SQL Azure, należy ustawić limit czasu połączenia do 30 sekund."
  example:
  - "The following example first displays the contents of a connection string that does not specify the \"Connect Timeout\" value, sets the ConnectTimeout property, and then displays the new connection string.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._3_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/add/codesnippet/csharp/p-system.data.sqlclient._3_1.cs)]"
  syntax:
    content: public int ConnectTimeout { get; set; }
    return:
      type: System.Int32
      description: "Wartość właściwości ConnectTimeout lub 15 sekund, jeśli podano żadnej wartości."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Określa, czy <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> zawiera określony klucz."
  remarks: "Ponieważ <xref:System.Data.SqlClient.SqlConnectionStringBuilder>zawiera kolekcję par klucz/wartość, stały rozmiar <xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>Metoda tylko określa, czy nazwy określonego klucza jest prawidłowy.</xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A> </xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the **ContainsKey** method.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/csharp/m-system.data.sqlclient._9_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._9_1.vb)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nConnection string = Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nTrue  \nTrue  \nTrue  \nFalse  \n```"
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Klucz do zlokalizowania w <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "wartość true, jeśli <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> zawiera element z określonym kluczem; w przeciwnym razie wartość false."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>ma wartość null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  id: ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość wskazującą, czy należy klient/serwer lub w trakcie połączenia z programem SQL Server."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Połączenia kontekstu&quot; w parametrach połączenia.      > [!NOTE] > <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>Zwraca `null` Jeśli parametrów połączenia dla <xref:System.Data.SqlClient.SqlConnection>jest &quot;połączenia kontekstu = true&quot;.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A>"
  syntax:
    content: public bool ContextConnection { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości ContextConnection lub <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  id: CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia nazwę rekordu języka programu SQL Server."
  remarks: "Ta właściwość odpowiada kluczy &quot;Bieżący język&quot; i &quot;język&quot; w parametrach połączenia."
  syntax:
    content: public string CurrentLanguage { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości CurrentLanguage lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli podano żadnej wartości."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia nazwa lub adres sieciowy wystąpienia programu SQL Server, aby nawiązać połączenie."
  remarks: "Ta właściwość odpowiada &quot;Źródła danych&quot;, &quot;server&quot;, &quot;address&quot;, &quot;addr&quot; i &quot;adres sieciowy&quot; kluczy w parametrach połączenia. Niezależnie od tego, która z tych wartości zostały podane w dostarczone parametry połączenia, ciąg połączenia utworzone przez `SqlConnectionStringBuilder` użyje dobrze znanym kluczem &quot;Źródła danych&quot;."
  example:
  - "The following example demonstrates that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the \"Data Source\" connection string key into the well-known key:  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._51_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.DataSource#1](~/add/codesnippet/csharp/p-system.data.sqlclient._51_1.cs)]"
  syntax:
    content: public string DataSource { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości DataSource lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  id: Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy program SQL Server używa szyfrowania SSL dla wszystkich danych przesyłanych między klientem a serwerem, jeśli serwer ma zainstalowany certyfikat."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Szyfruj&quot; w parametrach połączenia."
  syntax:
    content: public bool Encrypt { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości szyfruj lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  id: Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy pulę połączeń programu SQL Server automatycznie rejestruje połączenia w bieżącym kontekście transakcji wątku tworzenia."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Enlist&quot; w parametrach połączenia."
  syntax:
    content: public bool Enlist { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości Enlist lub <xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;> </xref>Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  id: FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia nazwę lub adres serwera partnerskiego do połączenia, jeśli serwer podstawowy nie działa."
  syntax:
    content: public string FailoverPartner { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości FailoverPartner lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  id: GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(Hashtable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);
    parameters:
    - id: propertyDescriptors
      type: System.Collections.Hashtable
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  id: InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia nazwę bazy danych, skojarzonych z tym połączeniem."
  remarks: "Ta właściwość odpowiada kluczy &quot;Initial Catalog&quot; i &quot;baza danych&quot; w parametrach połączenia."
  example:
  - "The following example creates a simple connection string and then uses the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class to add the name of the database to the connection string. The code displays the contents of the InitialCatalog property, just to verify that the class was able to convert from the synonym (\"Database\") to the appropriate property value.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/add/codesnippet/csharp/p-system.data.sqlclient._46_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._46_1.vb)]"
  syntax:
    content: public string InitialCatalog { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości InitialCatalog lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  id: IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy identyfikator użytkownika i hasło są określone w połączeniu (gdy <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>) lub czy bieżące poświadczenia konta systemu Windows są używane do uwierzytelniania (Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
  remarks: "Ta właściwość odpowiada kluczy &quot;Zintegrowane zabezpieczenia&quot; i &quot;trusted_connection&quot; w parametrach połączenia."
  example:
  - "The following example converts an existing connection string from using SQL Server Authentication to using integrated security. The example does its work by removing the user name and password from the connection string and then setting the IntegratedSecurity property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/add/codesnippet/csharp/p-system.data.sqlclient._35_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._35_1.vb)]"
  syntax:
    content: public bool IntegratedSecurity { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości wartości IntegratedSecurity lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  id: IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> ma stały rozmiar."
  syntax:
    content: public override bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w każdym przypadku ponieważ <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> dostarcza kolekcję par klucz/wartość stałym rozmiarze."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość skojarzoną z określonym kluczem. W języku C# ta właściwość jest indeksatora."
  remarks: "Ponieważ <xref:System.Data.SqlClient.SqlConnectionStringBuilder>zawiera słownik stałym rozmiarze dodać klucz, który nie istnieje w słowniku zgłasza <xref:System.Collections.Generic.KeyNotFoundException>.</xref:System.Collections.Generic.KeyNotFoundException> w trakcie</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following code, in a console application, creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and adds key/value pairs to its connection string, using the Item property.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Item#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._4_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Item#1](~/add/codesnippet/csharp/p-system.data.sqlclient._4_1.cs)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "Klucz elementu do pobrania lub ustawienia."
    return:
      type: System.Object
      description: "Wartość skojarzona z określonym kluczem."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "Próba dodania klucza, który nie istnieje w kluczach dostępne."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Nieprawidłowa wartość ciągu połączenia (w szczególności wartość logiczna lub liczbowego był oczekiwany, ale nie podano)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera <xref:System.Collections.ICollection>zawierającą klucze ze słownika w <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Kolejność wartości na liście <xref:System.Collections.ICollection>jest nieokreślony, ale takiej samej kolejności jak skojarzone wartości w <xref:System.Collections.ICollection>zwrócony przez <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  example:
  - "The following console application example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the Keys property displaying the key/value pairs.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Keys#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._0_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Keys#1](~/add/codesnippet/csharp/p-system.data.sqlclient._0_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Zawierającą klucze ze słownika w <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  id: LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia minimalny czas w sekundach dla połączenia na żywo w puli połączeń przed jego usunięciem."
  remarks: "Ta właściwość odpowiada &quot;Timeout równoważenia obciążenia&quot; i &quot;okres istnienia połączenia&quot; kluczy w parametrach połączenia."
  syntax:
    content: public int LoadBalanceTimeout { get; set; }
    return:
      type: System.Int32
      description: "Wartość właściwości LoadBalanceTimeout lub 0, jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  id: MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia maksymalną liczbę połączeń dozwolonych w puli połączeń dla tego określony ciąg połączenia."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Maksymalny rozmiar puli&quot; w parametrach połączenia."
  syntax:
    content: public int MaxPoolSize { get; set; }
    return:
      type: System.Int32
      description: "Wartość właściwości MaxPoolSize lub 100, jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  id: MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub Ustawia minimalną liczbę połączeń dozwolonych w puli połączeń dla tego określony ciąg połączenia."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Minimalny rozmiar puli&quot; w parametrach połączenia."
  syntax:
    content: public int MinPoolSize { get; set; }
    return:
      type: System.Int32
      description: "Wartość właściwości Wartość MinPoolSize lub 0, jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  id: MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "W przypadku wartości true, aplikacja może przechowywać się, że zestawy wielu aktywnych wyników (MARS). W przypadku wartości FAŁSZ, aplikacja musi przetworzyć lub anulować wszystkich zestawów wyników z jednej partii, zanim ją wykonać inne partii dla tego połączenia.       Aby uzyskać więcej informacji, zobacz [wielu aktywnych zestawów wyników (MARS)](http://msdn.microsoft.com//library/cfa084cz.aspx)."
  remarks: "Ta właściwość odpowiada kluczowi &quot;MultipleActiveResultSets&quot; w parametrach połączenia."
  example:
  - "The following example explicitly disables the Multiple Active Result Sets feature.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.MARS#1](~/add/codesnippet/csharp/p-system.data.sqlclient._53_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.MARS#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._53_1.vb)]"
  syntax:
    content: public bool MultipleActiveResultSets { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości MultipleActiveResultSets lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  id: MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Jeśli aplikacja nawiązuje połączenie z grupy dostępności funkcji AlwaysOn (grupy dostępności) w różnych podsieciach, ustawienie MultiSubnetFailover = true zapewnia szybsze wykrywanie i połączenia do aktualnie aktywnego serwera. Aby uzyskać więcej informacji o obsłudze SqlClient dla zawsze włączonych grup dostępności, zobacz [SqlClient obsługę wysokiej dostępności, odzyskiwania po awarii](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool MultiSubnetFailover { get; set; }
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean>wskazujący bieżącą wartość właściwości.</xref:System.Boolean>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  id: NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia ciąg zawierający nazwę biblioteki sieci używane do nawiązania połączenia z programem SQL Server."
  remarks: "Ta właściwość odpowiada &quot;Biblioteka sieciowa&quot;, &quot;sieć&quot; i &quot;net&quot; kluczy w parametrach połączenia.       Obsługiwane wartości dla tej właściwości to dbnmpntw (nazwane potoki), dbmsrpcn (informacje), dbmsadsn (AppleTalk), dbmsgnet (VIA), dbmslpcn (pamięci współużytkowanej) i dbmsspxn (IPX/SPX) i dbmssocn (TCP/IP). Odpowiednie sieci DLL musi być zainstalowany na komputerze, z którym się łączysz. Jeśli nie określisz sieci i używać lokalnego serwera (na przykład &quot;.&quot; lub &quot;(local)&quot;), służy pamięci współużytkowanej."
  syntax:
    content: public string NetworkLibrary { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości NetworkLibrary lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia rozmiar w bajtach pakietów sieciowych używanych do komunikowania się z wystąpieniem programu SQL Server."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Packet Size&quot; w parametrach połączenia."
  syntax:
    content: public int PacketSize { get; set; }
    return:
      type: System.Int32
      description: "Wartość właściwości PacketSize lub 8000, jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  id: Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia hasło dla konta programu SQL Server."
  remarks: "Ta właściwość odpowiada kluczy &quot;Password&quot; i &quot;pwd&quot; w parametrach połączenia.       Jeśli nie ustawiono hasła i pobierania wartości, wartość zwracana jest <xref:System.String>.</xref:System.String> Aby zresetować hasło dla parametrów połączenia, przekazać wartości zerowej do właściwości elementu."
  example:
  - "The following example shows how to set Password.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Password.2#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._40_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Password.2#1](~/add/codesnippet/csharp/p-system.data.sqlclient._40_1.cs)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości hasła lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Hasło została niepoprawnie ustawiona na wartość null.  Zobacz poniższy przykład kodu."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy informacje związane z zabezpieczeniami, takich jak hasła, nie są zwracane jako część połączenia, jeśli połączenie jest otwarte lub kiedykolwiek było w stanie otwartym."
  remarks: "Ta właściwość odpowiada kluczy &quot;Persist Security Info&quot; i &quot;persistsecurityinfo&quot; w parametrach połączenia."
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości PersistSecurityInfo lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  id: PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zachowanie okresu blokowania dla puli połączeń."
  remarks: "Gdy buforowanie połączeń jest włączone i wystąpi błąd upływu limitu czasu lub inny błąd logowania, zostanie wygenerowany wyjątek i kolejne próby połączenia zakończy się niepowodzeniem dla następnego pięć sekund, &quot;okresu blokowania&quot;. Jeśli aplikacja próbuje nawiązać połączenia w okresie blokowania, pierwszy wyjątek zostanie ponownie wygenerowany. Kolejne błędy po zakończeniu okresu blokowania spowoduje nowe blokowania okres dwukrotnie tak długo, jak poprzedniego okresu blokowania maksymalnie jedną minutę.       Próba nawiązania połączenia z bazami danych Azure SQL może zakończyć się niepowodzeniem z błędami przejściowymi, które zwykle są odzyskiwane w ciągu kilku sekund. Jednak z puli połączeń zachowanie okresu blokowania, nie można nawiązać bazy danych na okresy szeroką gamę nawet, jeśli baza danych jest dostępne. Jest to szczególnie kłopotliwe w sytuacji dla aplikacji, które wymagają renderowanie. **PoolBlockingPeriod** umożliwia wybranie okresu blokowania najlepiej nadaje się do aplikacji. Zobacz [PoolBlockingPeriod wyliczenie](~/add/includes/ajax-current-ext-md.md) dla dostępne ustawienia."
  syntax:
    content: public System.Data.SqlClient.PoolBlockingPeriod PoolBlockingPeriod { get; set; }
    return:
      type: System.Data.SqlClient.PoolBlockingPeriod
      description: "Dostępne ustawienia okresu blokowania."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  id: Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy połączenia będą w puli lub jawnie otwarty zawsze żądanego połączenia."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Buforowanie&quot; w parametrach połączenia."
  syntax:
    content: public bool Pooling { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości buforowanie lub <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Usuwa wpis z określonym kluczem z <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> wystąpienia."
  remarks: "Ponieważ **Usuń** metoda zwraca wartość wskazującą jego sukces, nie jest wymagane do wyszukiwania przed usunięciem pary klucza/wartości z klucza <xref:System.Data.SqlClient.SqlConnectionStringBuilder>wystąpienia.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Ponieważ <xref:System.Data.SqlClient.SqlConnectionStringBuilder>zapewnia zbiór stałym rozmiarze pary klucz wartość, wywołanie metody Usuń po prostu resetuje wartość pary klucza/wartości z powrotem na wartość domyślną.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>       Ponieważ kolekcja kluczy obsługiwanych przez <xref:System.Data.SqlClient.SqlConnectionStringBuilder>jest ustalona, każdy element w kolekcji ma wartość domyślną znanych.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> W poniższej tabeli wymieniono klucze i wartości dla każdego przypadku <xref:System.Data.SqlClient.SqlConnectionStringBuilder>najpierw został zainicjowany lub po wywołaniu metody Remove.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>      | Klucz | Wartość domyślna |   |---------|-------------------|   | Nazwa aplikacji | &quot;. Dostawca danych SqlClient NET &quot;|   | Przetwarzanie asynchroniczne | FALSE |   | AttachDBFilename | Pusty ciąg |   | Limit czasu połączenia |&15; |   | Połączenie kontekstu | FALSE |   | Bieżący język | Pusty ciąg |   | Źródło danych | Pusty ciąg |   | Szyfrowanie | FALSE |   | Zarejestrować | Wartość true |   | Partner pracy awaryjnej | Pusty ciąg |   | Wykaz początkowy | Pusty ciąg |   | Zabezpieczenia zintegrowane | FALSE |   | Limit czasu Równoważenie obciążenia |&0; |   | Rozmiar maksymalny buforu |&100; |   | Minimalny rozmiar puli |&0; |   | MultipleActiveResultSets | FALSE |   | Biblioteka sieciowa | Pusty ciąg |   | Rozmiar pakietu |&8000; |   | Hasło | Pusty ciąg |   | Utrzymuj informacje o zabezpieczeniach | FALSE |   | Buforowanie | Wartość true |   | Replikacja | FALSE |   | Powiązanie transakcji | Niejawne usunięcia powiązania |   | Identyfikator użytkownika | Pusty ciąg |   | Wystąpienia użytkownika | FALSE |   | Identyfikator stacji roboczej | Pusty ciąg |"
  example:
  - "The following example converts an existing connection string from using Windows Authentication to using integrated security. The example works by removing the user name and password from the connection string, and then setting the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity%2A> property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Remove#1](~/add/codesnippet/csharp/m-system.data.sqlclient._7_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Remove#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._7_1.vb)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;User ID=ab;Password= a1Pass@@11  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nDatabase = AdventureWorks  \n```"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Klucz parę klucza i wartości do usunięcia z parametrów połączenia w tym <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli klucz istniał w parametrach połączenia i została usunięta; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli klucz nie istnieje."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>ma wartość null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  id: Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość Boolean wskazującą, czy replikacja jest obsługiwana przy użyciu połączenia."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Replikacji&quot; w parametrach połączenia."
  syntax:
    content: public bool Replication { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości replikacji, lub FAŁSZ, jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  id: ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wskazuje, czy określony klucz istnieje w tym <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> wystąpienia."
  remarks: "Ta metoda zachowuje się tak samo <xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>metody.</xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>"
  syntax:
    content: public override bool ShouldSerialize (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Klucz do zlokalizowania w <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> zawiera wpis z określonym kluczem, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  id: TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość ciągu, która wskazuje zachowywanie jego skojarzenia z zarejestrowane połączenie <xref uid=&quot;langword_csharp_System.Transactions&quot; name=&quot;System.Transactions&quot; href=&quot;&quot;> </xref> transakcji."
  remarks: "Słowa kluczowe powiązania transakcji w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>kontrolować sposób <xref:System.Data.SqlClient.SqlConnection>wiązania do zarejestrowane <xref:System.Transactions.Transaction>.</xref:System.Transactions.Transaction> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>       W poniższej tabeli przedstawiono możliwe wartości dla właściwości TransactionBinding: | Wartość | Opis elementu |   |-----------|-----------------|   | Niejawne usunięcia powiązania | Wartość domyślna. Powoduje, że połączenia można odłączyć od transakcji po jej zakończeniu. Po odłączania, dodatkowe żądania połączenia są wykonywane w trybie autozatwierdzania. <xref:System.Transactions.Transaction.Current%2A>Właściwość nie jest sprawdzana podczas wykonywania żądania podczas transakcji jest aktywny.</xref:System.Transactions.Transaction.Current%2A> Po zakończeniu transakcji, dodatkowe żądania są wykonywane w trybie autozatwierdzania. |   | Jawne usuwanie powiązania | Powoduje, że połączenie pozostaje dołączony do transakcji do momentu połączenie jest zamknięte lub dopóki <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>jest wywoływana z `null` (`Nothing` w języku Visual Basic) wartość.</xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> <xref:System.InvalidOperationException>Jest generowany, jeśli <xref:System.Transactions.Transaction.Current%2A>nie jest zarejestrowane transakcji lub jeśli zarejestrowane transakcja jest nieaktywna.</xref:System.Transactions.Transaction.Current%2A> </xref:System.InvalidOperationException> To zachowanie wymusza ścisłe zasady ustalania zakresu wymagane w celu <xref:System.Transactions.TransactionScope>obsługuje. |</xref:System.Transactions.TransactionScope>"
  syntax:
    content: public string TransactionBinding { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości TransactionBinding lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  id: TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość logiczną."
  syntax:
    content: public bool TransparentNetworkIPResolution { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  id: TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość wskazującą, czy kanał będą szyfrowane podczas pomijanie przejście łańcuch certyfikatów do sprawdzania poprawności zaufania."
  remarks: "Gdy `TrustServerCertificate` ma ustawioną wartość `true`, warstwy transportowej będą używać protokołu SSL do szyfrowania kanału i obejście przejście łańcuch certyfikatów do sprawdzania poprawności zaufania. Jeśli `TrustServerCertificate` ustawiono `true` i szyfrowanie jest włączone, poziom szyfrowania określonych na serwerze, który będzie używany nawet wtedy, gdy `Encrypt` ma ustawioną wartość `false`. Połączenia zakończy się niepowodzeniem, w przeciwnym razie wartość.       Aby uzyskać więcej informacji zobacz &quot;Hierarchii szyfrowania&quot; i &quot;Za pomocą szyfrowania bez sprawdzania poprawności&quot; w dokumentacji SQL Server — książki Online."
  syntax:
    content: public bool TrustServerCertificate { get; set; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Recognized values are <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_yes&quot; name=&quot;yes&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_no&quot; name=&quot;no&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera wartość odpowiadającą podany klucz z tego <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
  remarks: "Metoda TryGetValue umożliwia deweloperom bezpiecznie pobrać wartości z <xref:System.Data.SqlClient.SqlConnectionStringBuilder>bez konieczności Sprawdź, czy podana nazwa klucza jest prawidłową nazwą klucza.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Ponieważ **TryGetValue** nie zgłaszał wyjątek podczas wywoływania, przekazując nieistniejącą klucza, nie masz do wyszukiwania przed pobraniem jego wartości klucza.  Wywoływanie **TryGetValue** kluczem nieistniejącą umieści wartość null (`Nothing` w języku Visual Basic) w `value` parametru."
  example:
  - "The following example demonstrates the behavior of the **TryGetValue** method.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/visualbasic/25aa2e92-0892-4821-a220-_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/csharp/25aa2e92-0892-4821-a220-_1.cs)]  \n  \n The sample displays the following results:  \n  \n```  \nData Source=(local)  \nTrusted_Connection=True  \nUnable to retrieve value for 'InvalidKey'  \nUnable to retrieve value for null key.  \n```"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "Klucz elementu do pobrania."
    - id: value
      type: System.Object
      description: "Wartością odpowiadającą`keyword.`"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> keyword </code> został znaleziony w ciągu połączenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>zawiera wartość null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  id: TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość ciągu, który wskazuje, że system typów aplikacji oczekuje."
  remarks: "`TypeSystemVersion` Właściwości może służyć do określ wersję niskiego poziomu [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] dla aplikacji napisanych przy użyciu tej wersji. Dzięki temu można uniknąć możliwych problemów z niezgodnymi typami w nowszej wersji [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] mogą powodować awarię aplikacji."
  syntax:
    content: public string TypeSystemVersion { get; set; }
    return:
      type: System.String
      description: "W poniższej tabeli przedstawiono możliwe wartości dla właściwości TypeSystemVersion:       <table><thead><tr><th> Wartość       </th><th> Opis       </th></tr></thead><tbody><tr><td> [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] 2005       </td><td> Używa [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] system typów 2005. Konwersje nie są wykonywane dla bieżącej wersji programu ADO.NET.       </td></tr><tr><td> SQL Server 2008       </td><td> Używa programu SQL Server 2008 system typów.       </td></tr><tr><td> Najnowsze       </td><td> Użyj najnowszej wersji, nie może obsłużyć tej pary klient serwer. Spowoduje to automatycznie przeniesienie do przodu jako składniki klienta i serwera są uaktualniane.       </td></tr></tbody></table>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  id: UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia identyfikator użytkownika, który będzie używany podczas nawiązywania połączenia z serwerem SQL."
  remarks: "Ta właściwość odpowiada kluczy &quot;Identyfikatora użytkownika&quot;, &quot;użytkownika&quot; i &quot;uid&quot; w parametrach połączenia."
  syntax:
    content: public string UserID { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości identyfikatora użytkownika lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  id: UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość wskazującą, czy do przekierowywania połączenie z domyślnym wystąpieniu programu SQL Server Express do wystąpienia inicjowanych przez środowisko uruchomieniowe działającej na koncie obiektu wywołującego."
  remarks: "Ta właściwość odpowiada kluczowi &quot;Wystąpienia użytkownika&quot; w parametrach połączenia.      > [!NOTE] > Ta funkcja jest dostępna tylko w przypadku [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Express Edition. Aby uzyskać więcej informacji na wystąpieniach użytkowników, zobacz [wystąpienia programu SQL Server Express użytkownika](~/add/includes/ajax-current-ext-md.md) i &quot;użytkownika wystąpień dla użytkownicy niebędący administratorami&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online."
  syntax:
    content: public bool UserInstance { get; set; }
    return:
      type: System.Boolean
      description: "Wartość właściwości UserInstance lub <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  id: Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera <xref:System.Collections.ICollection>zawierający wartości w <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Kolejność wartości na liście <xref:System.Collections.ICollection>jest nieokreślony, ale takiej samej kolejności jak skojarzonych kluczy w <xref:System.Collections.ICollection>zwrócony przez <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Ponieważ każde wystąpienie <xref:System.Data.SqlClient.SqlConnectionStringBuilder>zawsze zawiera ten sam zestaw stałym kluczy i wartości właściwości zawsze zwraca wartości odpowiadających stałym zestaw kluczy, w takiej samej kolejności jak klucze.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example first creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, and then iterates through all the values within the object.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Values#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._29_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Values#1](~/add/codesnippet/csharp/p-system.data.sqlclient._29_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Zawierający wartości w <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  id: WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia nazwę stacji roboczej łączącej się z programem SQL Server."
  remarks: "Ta właściwość odpowiada kluczy &quot;Workstation ID&quot; i &quot;wsid&quot; w parametrach połączenia."
  syntax:
    content: public string WorkstationID { get; set; }
    return:
      type: System.String
      description: "Wartość właściwości WorkstationID lub <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Jeśli nie została podana."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość null, użyj <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: true
  name: System.Collections.Generic.KeyNotFoundException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
- uid: System.Data.SqlClient.ApplicationIntent
  parent: System.Data.SqlClient
  isExternal: false
  name: ApplicationIntent
  nameWithType: ApplicationIntent
  fullName: System.Data.SqlClient.ApplicationIntent
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
- uid: System.Data.SqlClient.SqlAuthenticationMethod
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlAuthenticationMethod
  nameWithType: SqlAuthenticationMethod
  fullName: System.Data.SqlClient.SqlAuthenticationMethod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Clear()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnectionColumnEncryptionSetting
  nameWithType: SqlConnectionColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Password
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
- uid: System.Data.SqlClient.PoolBlockingPeriod
  parent: System.Data.SqlClient
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: PoolBlockingPeriod
  fullName: System.Data.SqlClient.PoolBlockingPeriod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Values
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: SqlConnectionStringBuilder.Clear
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: SqlConnectionStringBuilder.ContainsKey
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties
  nameWithType: SqlConnectionStringBuilder.GetProperties
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: SqlConnectionStringBuilder.Item
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: SqlConnectionStringBuilder.Remove
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: SqlConnectionStringBuilder.TryGetValue
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
