### YamlMime:ManagedReference
items:
- uid: System.Web.Management.BufferedWebEventProvider
  id: BufferedWebEventProvider
  children:
  - System.Web.Management.BufferedWebEventProvider.#ctor
  - System.Web.Management.BufferedWebEventProvider.BufferMode
  - System.Web.Management.BufferedWebEventProvider.Flush
  - System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  - System.Web.Management.BufferedWebEventProvider.Shutdown
  - System.Web.Management.BufferedWebEventProvider.UseBuffering
  langs:
  - csharp
  name: BufferedWebEventProvider
  nameWithType: BufferedWebEventProvider
  fullName: System.Web.Management.BufferedWebEventProvider
  type: Class
  summary: "Zapewnia podstawową funkcjonalność do tworzenia dostawców zdarzeń, które wymagają buforowania."
  remarks: "Monitorowanie kondycji ASP.NET umożliwia pracownikom produkcyjnego i operacji zarządzania wdrożonej aplikacji sieci Web. <xref:System.Web.Management>Przestrzeń nazw zawiera typy kondycji zdarzenie odpowiedzialnych za tworzenie pakietów danych stanu kondycji aplikacji i typów dostawcy odpowiedzialna za przetwarzanie tych danych.</xref:System.Web.Management> Zawiera ona także pomocnicze typy, które pomagają w trakcie zarządzania zdarzenia kondycji.       Jeśli chcesz dostosować przetwarzania kondycji zdarzenie, możesz może pochodzi od klasy BufferedWebEventProvider do tworzenia własnego niestandardowego dostawcę buforowanych.      > [!NOTE] > W większości przypadków będzie można korzystać z typów monitorowanie kondycji programu ASP.NET, zgodnie z implementacją i sterowania monitorowanie kondycji systemu, podając wartości w `healthMonitoring` sekcji konfiguracji. Można również pochodną typy monitorowanie kondycji, aby utworzyć własne niestandardowe zdarzenia i dostawców. Na przykład tworzenie niestandardowego dostawcy, zobacz [porady: zaimplementować kondycji monitorowania niestandardowego dostawcy przykład](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows how to derive from the BufferedWebEventProvider class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._12_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._12_1.vb)]  \n  \n The following configuration file excerpt shows a `healthMonitoring` configuration section that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.  \n  \n```  \n<healthMonitoring    \n  heartBeatInterval=\"0\" enabled=\"true\">  \n  \n  <bufferModes>  \n    <add name =\"Custom Notification\"  \n      maxBufferSize=\"10\"  \n      maxFlushSize=\"5\"  \n      urgentFlushThreshold=\"10\"  \n      regularFlushInterval=\"Infinite\"  \n      urgentFlushInterval=\"00:00:30\"  \n      maxBufferThreads=\"1\"  \n/>  \n  </bufferModes>  \n  \n  <providers>  \n    <clear/>  \n    <add name=\"SampleBufferedWebEventProvider\"   \n      type=\"SamplesAspNet.SampleBufferedWebEventProvider, bufferedwebeventprovider, Version=1.0.1785.14700, Culture=neutral, PublicKeyToken=d31491bf33b55954, processorArchitecture=MSIL\"   \n      buffer=\"true\"  \n      bufferMode=\"Custom Notification\"  \n/>  \n  </providers>  \n  \n  <profiles>  \n    <add name=\"Custom\"   \n      minInstances=\"1\"   \n      maxLimit=\"Infinite\"   \n      minInterval=\"00:00:00\" />  \n  </profiles>  \n  \n  <rules>  \n    <clear />  \n      <add name=\"Custom Buffered Web Event Provider\"   \n        eventName=\"All Events\"  \n        provider=\"SampleBufferedWebEventProvider\"   \n        profile=\"Custom\" />  \n  </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public abstract class BufferedWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: BufferedWebEventProvider()
  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider()
  fullName: System.Web.Management.BufferedWebEventProvider.BufferedWebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Management.BufferedWebEventProvider&quot;> </xref> klasy."
  remarks: "Ten konstruktor jest używana wewnętrznie przez system monitorowanie kondycji programu ASP.NET. Nigdy nie użyjesz jej do utworzenia wystąpienia <xref:System.Web.Management.TraceWebEventProvider>obiektu, ale można wywołać konstruktora podczas implementowania własne typ dostawcy, który dziedziczy z tej klasy.</xref:System.Web.Management.TraceWebEventProvider>"
  example:
  - "The following code example shows how to use this constructor in a custom event provider.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#8](~/add/codesnippet/csharp/m-system.web.management._2_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#8](~/add/codesnippet/visualbasic/m-system.web.management._2_1.vb)]"
  syntax:
    content: protected BufferedWebEventProvider ();
    parameters: []
  overload: System.Web.Management.BufferedWebEventProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.BufferMode
  id: BufferMode
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: BufferMode
  nameWithType: BufferedWebEventProvider.BufferMode
  fullName: System.Web.Management.BufferedWebEventProvider.BufferMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Pobiera wartość wskazującą, tryb buforowania używany przez dostawcę."
  remarks: "Właściwość BufferMode zawiera wartość zdefiniowana przez `bufferMode` atrybutu w `providers` elementu `healthMonitoring` sekcji.       Poniższy fragment pliku konfiguracji pokazuje, jak nazwa trybu buforu powinien być zdefiniowany w `healthMonitoring` sekcji.      ```   <bufferModes>     <add name =&quot;Custom Notification&quot; />   </bufferModes>   ```"
  example:
  - "The following code example shows how to use the BufferMode property.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#4](~/add/codesnippet/csharp/p-system.web.management._7_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#4](~/add/codesnippet/visualbasic/p-system.web.management._7_1.vb)]"
  syntax:
    content: public string BufferMode { get; }
    return:
      type: System.String
      description: "Nazwa trybu buforowania."
  overload: System.Web.Management.BufferedWebEventProvider.BufferMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: BufferedWebEventProvider.Flush()
  fullName: System.Web.Management.BufferedWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Przenosi zdarzenia z buforu dostawcy do dziennika zdarzeń."
  remarks: "Gdy ta metoda jest wywoływana, wszystkie zdarzenia w buforze od razu są przenoszone z buforu w dzienniku, niezależnie od tego, ile czasu upłynął od ostatniego zapisu lub liczbę zdarzeń znajdują się w buforze. Czas ostatniego zapisu jest resetowany do czasu opróżniania akcji."
  example:
  - "The following code example shows how to use the Flush method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#9](~/add/codesnippet/csharp/m-system.web.management._6_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#9](~/add/codesnippet/visualbasic/m-system.web.management._6_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.BufferedWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: BufferedWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.BufferedWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Ustawia wartości początkowe dla tego obiektu."
  remarks: "ASP.NET wywołuje metodę Initialize po wywołaniu <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A>konstruktora.</xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> Ta metoda jest wywoływana w celu zainicjowania <xref:System.Web.Management.BufferedWebEventProvider>Ustawienia konfiguracji i nazwa określona w pliku konfiguracji.</xref:System.Web.Management.BufferedWebEventProvider>"
  example:
  - "The following code example shows how to use the Initialize method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#2](~/add/codesnippet/csharp/71386fb2-b957-416a-92c4-_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#2](~/add/codesnippet/visualbasic/71386fb2-b957-416a-92c4-_1.vb)]"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa używana w pliku konfiguracji do identyfikowania tego dostawcy."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> , który określa atrybuty przypisane dla tego dostawcy, w pliku konfiguracji."
  overload: System.Web.Management.BufferedWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Przetwarza zdarzenia przekazywane do dostawcy."
  remarks: "Jest to metoda, że monitorowanie kondycji programu ASP.NET wymaga aby rozpocząć przetwarzanie zdarzenia. Jeśli włączone jest buforowanie, informacje dotyczące zdarzenia są buforowane; w przeciwnym razie jest wysyłane do bieżącego mechanizm rejestrowania."
  example:
  - "The following code example shows how to implement the ProcessEvent method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#5](~/add/codesnippet/csharp/1be5baee-de85-48e1-93d3-_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#5](~/add/codesnippet/visualbasic/1be5baee-de85-48e1-93d3-_1.vb)]"
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "<xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> Obiekt do procesu."
  overload: System.Web.Management.BufferedWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  id: ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: ProcessEventFlush(WebEventBufferFlushInfo)
  nameWithType: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Przetwarza buforowanych zdarzeń."
  remarks: "Metoda ProcessEventFlush przetwarza wiadomości, które zostały buforowane. Monitorowanie kondycji ASP.NET wywołuje metodę, gdy wymagana jest opróżniania buforu. Odstępach czasu, na które opróżnianie jest wymagana jest określana przez wartość parametru `bufferMode` atrybutu w `providers` element w `healthMonitoring` sekcji konfiguracji."
  example:
  - "The following code example shows how to implement the ProcessEventFlush method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#6](~/add/codesnippet/csharp/91081aab-0c9a-495a-a177-_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#6](~/add/codesnippet/visualbasic/91081aab-0c9a-495a-a177-_1.vb)]"
  syntax:
    content: public abstract void ProcessEventFlush (System.Web.Management.WebEventBufferFlushInfo flushInfo);
    parameters:
    - id: flushInfo
      type: System.Web.Management.WebEventBufferFlushInfo
      description: "A <xref href=&quot;System.Web.Management.WebEventBufferFlushInfo&quot;> </xref> zawierający informacje buforowania."
  overload: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: BufferedWebEventProvider.Shutdown()
  fullName: System.Web.Management.BufferedWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Wykonuje zadania skojarzone z zamykanie dostawcy."
  remarks: "ASP.NET wywołuje metodę zamknięcia, gdy zakończenie domeny aplikacji hosting aplikacji sieci Web. Metoda jest wywoływana do wykonywania zadań, które umożliwią aplikacji do końca bezpiecznie, np. zamknięcie zasobów."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.BufferedWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering
  id: UseBuffering
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: UseBuffering
  nameWithType: BufferedWebEventProvider.UseBuffering
  fullName: System.Web.Management.BufferedWebEventProvider.UseBuffering
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Pobiera wartość wskazującą, czy dostawca jest tryb buforowany."
  remarks: "Właściwość UseBuffering zawiera wartość zdefiniowana przez `buffer` atrybutu w `providers` elementu `healthMonitoring` sekcji."
  example:
  - "The following code example shows how to use the UseBuffering property.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#3](~/add/codesnippet/csharp/p-system.web.management._48_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#3](~/add/codesnippet/visualbasic/p-system.web.management._48_1.vb)]"
  syntax:
    content: public bool UseBuffering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostawca jest w trybie buforowanego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Management.BufferedWebEventProvider.UseBuffering*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.BufferedWebEventProvider.#ctor
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferedWebEventProvider()
  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider()
  fullName: System.Web.Management.BufferedWebEventProvider.BufferedWebEventProvider()
- uid: System.Web.Management.BufferedWebEventProvider.BufferMode
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferMode
  nameWithType: BufferedWebEventProvider.BufferMode
  fullName: System.Web.Management.BufferedWebEventProvider.BufferMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.BufferedWebEventProvider.Flush
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: BufferedWebEventProvider.Flush()
  fullName: System.Web.Management.BufferedWebEventProvider.Flush()
- uid: System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: BufferedWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.BufferedWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEventFlush(WebEventBufferFlushInfo)
  nameWithType: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
- uid: System.Web.Management.WebEventBufferFlushInfo
  parent: System.Web.Management
  isExternal: false
  name: WebEventBufferFlushInfo
  nameWithType: WebEventBufferFlushInfo
  fullName: System.Web.Management.WebEventBufferFlushInfo
- uid: System.Web.Management.BufferedWebEventProvider.Shutdown
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: BufferedWebEventProvider.Shutdown()
  fullName: System.Web.Management.BufferedWebEventProvider.Shutdown()
- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: UseBuffering
  nameWithType: BufferedWebEventProvider.UseBuffering
  fullName: System.Web.Management.BufferedWebEventProvider.UseBuffering
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Management.BufferedWebEventProvider.#ctor*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferedWebEventProvider
  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider
- uid: System.Web.Management.BufferedWebEventProvider.BufferMode*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferMode
  nameWithType: BufferedWebEventProvider.BufferMode
- uid: System.Web.Management.BufferedWebEventProvider.Flush*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: BufferedWebEventProvider.Flush
- uid: System.Web.Management.BufferedWebEventProvider.Initialize*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: BufferedWebEventProvider.Initialize
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: BufferedWebEventProvider.ProcessEvent
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEventFlush
  nameWithType: BufferedWebEventProvider.ProcessEventFlush
- uid: System.Web.Management.BufferedWebEventProvider.Shutdown*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: BufferedWebEventProvider.Shutdown
- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: UseBuffering
  nameWithType: BufferedWebEventProvider.UseBuffering
