### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter
  id: PropertyFilter
  children:
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  langs:
  - csharp
  name: PropertyFilter
  nameWithType: PropertyFilter
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter
  type: Class
  summary: "Udostępnia funkcję filtrowania hosta edycji właściwości."
  remarks: "Zawiera listę ciągów, nazywany *predykaty*, które są porównywane nazwę właściwości docelowej, aż do znalezienia dopasowania."
  syntax:
    content: public class PropertyFilter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})'
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  nameWithType: PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> klasa, która zawiera wyliczenie filtrowania ciągów, nazywany *predykaty*, który może być porównywana nazwę właściwości docelowej aż do znalezienia dopasowania."
  syntax:
    content: public PropertyFilter (System.Collections.Generic.IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate> predicates);
    parameters:
    - id: predicates
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate}
      description: "<xref:System.Collections.IEnumerable>Listy predykaty lub ciągów używanych do dopasowania.</xref:System.Collections.IEnumerable>"
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: PropertyFilter(String)
  nameWithType: PropertyFilter.PropertyFilter(String)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(String)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> klasa, która zawiera <xref:System.String>zawiera sekwencję rozdzielonych spacjami filtrowania fraz o nazwie *predykaty*, który może być porównywana nazwę właściwości docelowej aż do znalezienia dopasowania.</xref:System.String>"
  syntax:
    content: public PropertyFilter (string filterText);
    parameters:
    - id: filterText
      type: System.String
      description: "A <xref:System.String>zawierający rozdzielonych spacjami predykaty do filtrowania według właściwości.</xref:System.String>"
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  id: IsEmpty
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: IsEmpty
  nameWithType: PropertyFilter.IsEmpty
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Właściwości tylko do odczytu, która wskazuje, czy to <xref:System.Activities.Design.PropertyEditing.PropertyFilter>nie ma żadnych filtrowania predykatów.</xref:System.Activities.Design.PropertyEditing.PropertyFilter>"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli predykaty nie są zarejestrowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  id: Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: Match(IPropertyFilterTarget)
  nameWithType: PropertyFilter.Match(IPropertyFilterTarget)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(IPropertyFilterTarget)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Dopasowuje ciągi predykatu bieżącego obiektu filtrowania i nazwa właściwości określonego obiektu docelowego i zwraca wartość Boolean wskazującą, czy co najmniej jednego z ciągów predykatu jest zgodna z nazwą docelowej lub czy to <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> nie ma żadnych predykatów."
  syntax:
    content: public bool Match (System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target);
    parameters:
    - id: target
      type: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
      description: "Nazwa właściwości bieżącego filtru jest porównywana przed podczas wyszukiwania w celu dopasowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dopasowanie filtru/docelowej lub jeśli nie ma nic do użycia na potrzeby porównania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  nameWithType: PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PropertyFilterPredicate>
  nameWithType: IEnumerable<PropertyFilterPredicate>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
    name: PropertyFilterPredicate
    nameWithType: PropertyFilterPredicate
    fullName: PropertyFilterPredicate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: PropertyFilter(String)
  nameWithType: PropertyFilter.PropertyFilter(String)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: IsEmpty
  nameWithType: PropertyFilter.IsEmpty
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: Match(IPropertyFilterTarget)
  nameWithType: PropertyFilter.Match(IPropertyFilterTarget)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(IPropertyFilterTarget)
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  parent: System.Activities.Presentation.PropertyEditing
  isExternal: false
  name: IPropertyFilterTarget
  nameWithType: IPropertyFilterTarget
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: PropertyFilter
  nameWithType: PropertyFilter.PropertyFilter
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty*
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: IsEmpty
  nameWithType: PropertyFilter.IsEmpty
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match*
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: Match
  nameWithType: PropertyFilter.Match
