### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "Wyświetla formant przycisku polecenia, na stronie sieci Web."
  remarks: "W tym temacie:- [wprowadzenie](#Introduction)      -   [zachowanie ogłaszania zwrotnego przycisku i zdarzeń serwera](#ButtonPostbackBehaviorandServerEvents)      -   [obsługi zdarzeń przycisku w skrypt po stronie klienta](#HandlingButtonEventsinClientScript)      -   [kontrolek przycisków i weryfikacja](#ButtonControlsAndValidation)      -   [przycisków w formantach danych](#ButtonsInDataControls)      -   [wiązanie danych do formantów](#BindingDataToTheControls)      -   [za pomocą przycisków z formantami UpdatePanel](#UsingButtonsWithUpdatePanelControls)      -   [składni deklaratywnej](#DeclarativeSyntax) <a name=&quot;Introduction&quot;> </a> ## wprowadzenie umożliwiają utworzenie przycisku na stronie sieci Web umożliwiająca użytkownikom po stronie do serwera formantu przycisku.       Formant wyzwala zdarzenie w kodzie serwera, który może obsługiwać odpowiedzieć ogłaszania zwrotnego. Może też wiązać zdarzenia w skrypcie klienta, który może obsługiwać przed strona jest przesyłana lub który Uruchom, a następnie Anuluj przesłanie strony.      > [!NOTE] > Program ASP.NET zawiera kilka rodzajów kontrolek przycisku, z których każdy występuje na stronach sieci Web. Są one formantu przycisku, który renderuje jako przycisk polecenia; <xref:System.Web.UI.WebControls.LinkButton>formant, który renderuje jako łącze; i <xref:System.Web.UI.WebControls.ImageButton>formantu, który renderuje jako obraz; i <xref:System.Web.UI.WebControls.ImageMap>kontroli, która umożliwia tworzenie grafikę, która zawiera punkty aktywne, które użytkownicy mogą kliknąć.</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> Domyślnie wszystkich kontrolek przycisku Prześlij strony po kliknięciu. Można również użyć <xref:System.Web.UI.HtmlControls.HtmlButton>i <xref:System.Web.UI.HtmlControls.HtmlInputButton>kontrolki do tworzenia przycisków na stronie, których programowalnych w kodzie serwera.</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> Aby uzyskać więcej informacji o różnicach między formantami serwera sieci Web i HTML, zobacz [omówienie kontrolek serwera sieci Web programu ASP.NET](~/add/includes/ajax-current-ext-md.md).       Domyślnie kontrolkę przycisku jest przycisk przesyłania. Przycisk przesyłania nie ma nazwy polecenia (określonego przez <xref:System.Web.UI.WebControls.Button.CommandName%2A>Właściwości) związanych z przycisku i po prostu wpisów strony sieci Web z powrotem do serwera.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Możesz podać programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Click>zdarzeń na potrzeby programistycznego sterowania akcje wykonywane po kliknięciu przycisku Prześlij.</xref:System.Web.UI.WebControls.Button.Click>       Przycisk polecenia ma nazwę polecenia skojarzony z przyciskiem, takich jak `Sort`, ustawiając <xref:System.Web.UI.WebControls.Button.CommandName%2A>Właściwości.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Dzięki temu można utworzyć wiele przycisk kontrolki na stronie sieci Web i programowane wyznaczanie kontroli przycisk zostanie kliknięty. Można również użyć <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>Właściwości z przycisku polecenia, aby podać dodatkowe informacje dotyczące polecenia do wykonania, takich jak `Ascending`.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Możesz podać programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Command>zdarzeń na potrzeby programistycznego sterowania akcje wykonywane po kliknięciu przycisku polecenia.</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a>## Zachowanie ogłaszania zwrotnego przycisku i zdarzeń serwera, gdy użytkownik kliknie dowolnego przycisku kontrolki serwera sieci Web, strony są wysyłane do serwera. Powoduje to strony sieci Web do przetworzenia oraz wszelkie oczekujące zdarzenia do wywołania w kodzie oparte na serwerze. Po zakończeniu wszystkich strony i kontrolki przetwarzania strony renderowany w przeglądarce ponownie.       Przyciski może wiązać się z własnych <xref:System.Web.UI.WebControls.Button.Click>zdarzenia lub <xref:System.Web.UI.WebControls.Button.Command>zdarzenie, które można obsługiwać przy użyciu kodu na serwerze.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> Różni się od zdarzenia w tradycyjnych stron HTML lub w aplikacji sieci Web opartą na kliencie, gdy przycisk `onclick` zdarzenie jest obsługiwane przy użyciu języka JavaScript w kliencie. Aby uzyskać więcej informacji, zobacz [Model kontroli zdarzeń serwera formularzy sieci Web ASP.NET](~/add/includes/ajax-current-ext-md.md).       Gdy użytkownik kliknie przycisk formantu, strona jest przesyłana z powrotem do serwera. Domyślnie strona jest przesyłana z powrotem do samej siebie, można skonfigurować przyciski publikowania bieżącej strony do innej strony. Może to być przydatne do tworzenia formularzy wiele stron. Aby uzyskać więcej informacji, zobacz [między stronami księgowe w formularzach sieci Web ASP.NET](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a>## Obsługa przycisku zdarzeń w formantach przycisk skryptu klienta może wiązać się zarówno serwera zdarzenia i klienta. Serwer zdarzenia występują po odświeżeniu strony i są obsługiwane w kodzie po stronie serwera, który zapisać strony. Zdarzenia klienta są obsługiwane w skrypt po stronie klienta, zwykle ECMAScript (JavaScript) i są wywoływane przed przesłaniem strony. Dodając zdarzeń po stronie klienta do kontrolki przycisku ASP.NET, wykonywanie zadań takich jak wyświetlanie okien dialogowych potwierdzenia przed przesłaniem strony i potencjalnie anulowanie przesyłania. Aby uzyskać więcej informacji, zobacz [skrypt po stronie klienta w programie ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md) i [porady: odpowiadanie na zdarzenia kontrolki serwera sieci Web przycisku w skrypcie klienta](~/add/includes/ajax-current-ext-md.md).       Można także formantu przycisku również używają skrypt po stronie klienta do wykonywania ogłaszania zwrotnego (a nie po prostu wykonywania operacji HTTP POST). Może to być przydatne, jeśli chcesz programowo manipulować ogłaszania zwrotnego, takie jak dołączeniu go do innych elementów na stronie. Można ustawić formantu przycisku <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>właściwości `true` spowodować formantu przycisku używać skryptu klienta na podstawie ogłaszania zwrotnego.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a>## Formanty przycisków i sprawdzania poprawności, jeśli strona zawiera kontrolki modułu sprawdzania poprawności ASP.NET, przez domyślne, kliknięcie formantu przycisku powoduje, że formant modułu sprawdzania poprawności jej sprawdzania. Po włączeniu weryfikacji po stronie klienta dla kontrolki modułu walidacji strony nie jest przesłane, jeśli sprawdzanie poprawności nie powiodło się.       W poniższej tabeli opisano właściwości obsługiwanych przez formanty przycisków, które umożliwiają bardziej precyzyjne kontrolowanie procesu weryfikacji.      | Właściwość | Opis elementu |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>| Określa, czy kliknięcie przycisku również jest wykonywane sprawdzanie poprawności.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Ta właściwość jest ustawiana `false` zapobiegające sprawdzenie poprawności. |   | <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>| Umożliwia określenie, które moduły weryfikacji na stronie są wywoływane po kliknięciu przycisku.</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Jeśli są ustalane żadne grupy sprawdzania poprawności, kliknij przycisk wywołuje wszystkie moduły weryfikacji, które znajdują się na stronie. |       Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych wejściowych użytkownika w programie ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;ButtonsInDataControls&quot;></a>## Przycisków kontrolki serwera sieci Web przycisk formantów danych są często używane w formantach danych, takich jak w <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, i <xref:System.Web.UI.WebControls.Repeater>listy kontrolek.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> W takich przypadkach możesz zwykle nie odpowiadają bezpośrednio na przycisku kliknij zdarzenie. Zamiast tego przycisku wewnątrz formantu danych zgłasza zdarzenie, specyficzne dla formantu danych. Na przykład w <xref:System.Web.UI.WebControls.DataList>formantu przycisku może podnieść <xref:System.Web.UI.WebControls.DataList>formantu <xref:System.Web.UI.WebControls.DataList.ItemCommand>zdarzeń zamiast wywoływanie formantu przycisku <xref:System.Web.UI.WebControls.Button.Click>zdarzeń.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       Formanty powiązane z danymi listy może zawierać wiele przycisków, można ustawić przycisku <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>Właściwości w celu określenia wartości przekazywane w ramach zdarzenia.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Następnie można testować dla tego argumentu zobaczyć, który przycisk został kliknięty.      <a name=&quot;BindingDataToTheControls&quot;></a>## Wiązanie danych do kontrolek użytkownika można powiązać kontrolki serwera sieci Web przycisk ze źródłem danych w celu kontrolowania ustawień właściwości dynamicznie. Na przykład można ustawić element button <xref:System.Web.UI.WebControls.Button.Text%2A>Właściwości przy użyciu wiązania z danymi.</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a>## Za pomocą przycisków z renderowania stron częściowych formanty UpdatePanel umożliwia odświeżanie części strony bez odświeżania strony. <xref:System.Web.UI.UpdatePanel>Formanty umożliwiają oznaczenie części strony, które uczestniczą w czasie renderowania stron częściowych.</xref:System.Web.UI.UpdatePanel> Domyślnie zachowanie formanty <xref:System.Web.UI.UpdatePanel>formantu, w tym kontrolek przycisku jest wykonanie asynchronicznego ogłaszania zwrotnego zamiast odświeżania strony.</xref:System.Web.UI.UpdatePanel> Spowoduje to odświeżenie tylko zawartość <xref:System.Web.UI.UpdatePanel>kontrolować, z którego pochodzi ogłaszania zwrotnego.</xref:System.Web.UI.UpdatePanel>       Oprócz scenariusz kontrolki przycisku, który znajduje się wewnątrz <xref:System.Web.UI.UpdatePanel>sterowania, można użyć przycisku formantów z <xref:System.Web.UI.UpdatePanel>formantów w następujących scenariuszach:-Definiowanie kontrolkę przycisku, który znajduje się poza <xref:System.Web.UI.UpdatePanel>kontrolować jako <xref:System.Web.UI.AsyncPostBackTrigger>kontroli dla danego panelu.</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Po kliknięciu przycisku wykonuje asynchronicznego ogłaszania zwrotnego i odświeża zawartość panelu.      -Definiowanie kontrolkę przycisku, który znajduje się wewnątrz <xref:System.Web.UI.UpdatePanel>kontrolować jako <xref:System.Web.UI.PostBackTrigger>panelu.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> Po kliknięciu przycisku wykonuje odświeżenie strony, mimo że znajduje się wewnątrz <xref:System.Web.UI.UpdatePanel>kontroli.</xref:System.Web.UI.UpdatePanel>       Aby uzyskać więcej informacji na temat stron częściowych renderowania i przy użyciu <xref:System.Web.UI.UpdatePanel>formantów, zobacz [informacje o formancie UpdatePanel](~/add/includes/ajax-current-ext-md.md) i [omówienie renderowania stron częściowych](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a>## Składnia deklaratywne```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klasy."
  remarks: "Ten konstruktor umożliwia tworzenie i inicjuje nowe wystąpienie <xref:System.Web.UI.WebControls.Button>klasy.</xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Dodaje atrybuty <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu do strumienia wyjściowego do renderowania na kliencie."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Zawierający strumienia wyjściowego do renderowania na kliencie."
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy Weryfikacja jest przeprowadzana po <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant zostanie kliknięty."
  remarks: "Domyślnie strony weryfikacji podczas <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty.</xref:System.Web.UI.WebControls.Button> Sprawdzanie poprawności strony określa, czy kontrolki wejściowe skojarzone z formantem sprawdzania poprawności na stronie Przekaż wszystkie reguły sprawdzania poprawności określonego przez formant sprawdzania poprawności.       Można określić lub określić, czy Weryfikacja jest przeprowadzana na kliencie i serwerze po <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty przy użyciu właściwości CausesValidation.</xref:System.Web.UI.WebControls.Button> Aby zapobiec sprawdzanie poprawności jest wykonywane, ustaw właściwości CausesValidation `false`.      > [!NOTE] > Należy ustawić właściwości CausesValidation `false` podczas, używania <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>Właściwości ogłosić innej strony.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Sprawdzania poprawności należy sprawdzić jawnie, gdy ogłoszenie do innej strony. Na przykład, zobacz sekcję uwag <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       Ta właściwość jest często ustawiona na `false` dla `reset` lub `clear` przycisk, aby zapobiec weryfikację z wykonywane po kliknięciu przycisku.       Jeśli ustawiono wartość właściwości CausesValidation `true`, można również użyć <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>Właściwości w celu określenia Nazwa grupy walidacji, dla którego <xref:System.Web.UI.WebControls.Button>formant powoduje sprawdzania poprawności.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute>i [kompozycji ASP.NET i karnacji](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli weryfikacja jest przeprowadzana po <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant jest klikniętej; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant zostanie kliknięty."
  remarks: "Zdarzenie jest wywoływane podczas <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty.</xref:System.Web.UI.WebControls.Button> To zdarzenie jest często używana nazwa polecenia, nie jest skojarzony z <xref:System.Web.UI.WebControls.Button>formantu (na przykład o przycisk Prześlij).</xref:System.Web.UI.WebControls.Button>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant zostanie kliknięty."
  remarks: "Polecenie zdarzenie jest wywoływane podczas <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty.</xref:System.Web.UI.WebControls.Button> To zdarzenie jest często używana nazwa polecenia, takich jak `Sort`, jest skojarzone z <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> Dzięki temu można utworzyć wiele <xref:System.Web.UI.WebControls.Button>formantów w sieci Web i programowo określenie <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > Polecenia zdarzenie jest wywoływane przez hierarchię formantu w postaci `BubbleEvent`.       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia opcjonalny parametr przekazany do <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> zdarzeń oraz skojarzone <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*>"
  remarks: "Aby określić parametr, który pozdrowienia, użyj właściwości CommandArgument <xref:System.Web.UI.WebControls.Button.CommandName%2A>Właściwości.</xref:System.Web.UI.WebControls.Button.CommandName%2A>      > [!NOTE] > Mimo że można ustawić właściwości CommandArgument samodzielnie, jest używana zazwyczaj tylko, jeśli <xref:System.Web.UI.WebControls.Button.CommandName%2A>również ustawiono właściwość.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Uzupełnia Właściwość CommandArgument <xref:System.Web.UI.WebControls.Button.CommandName%2A>Właściwości, umożliwiając znajdują się dodatkowe informacje na temat polecenia do wykonania.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Na przykład jeśli ustawisz <xref:System.Web.UI.WebControls.Button.CommandName%2A>właściwości `Sort` i Właściwość CommandArgument `Ascending`, należy określić polecenie do sortowania w porządku rosnącym.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute>i [kompozycji ASP.NET i karnacji](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "Opcjonalny parametr przekazany do <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> zdarzeń oraz skojarzone <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę polecenia skojarzony z <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant, który jest przekazywany do <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> zdarzeń."
  remarks: "Jeśli masz wiele <xref:System.Web.UI.WebControls.Button>formantów na stronie sieci Web, użyj właściwości CommandName do określania nazwy polecenie skojarzone z każdym <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> Można ustawić właściwości CommandName z każdym ciągiem, który identyfikuje polecenie do wykonania. Następnie można programowo określić nazwę polecenia <xref:System.Web.UI.WebControls.Button>kontroli i wykonać odpowiednie działania.</xref:System.Web.UI.WebControls.Button>       Dodatkowe informacje na temat polecenia, takich jak `Ascending`, można określić za pomocą <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>Właściwości.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute>i [kompozycji ASP.NET i karnacji](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "Nazwa polecenia <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu. Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> obiekt, który reprezentuje <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> zachowania odświeżania strony formantu."
  remarks: "Metoda GetPostBackOptions tworzy <xref:System.Web.UI.PostBackOptions>obiekt, który reprezentuje <xref:System.Web.UI.WebControls.Button>zachowania odświeżania strony formantu.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> <xref:System.Web.UI.PostBackOptions>Obiektu zwykle są następnie przekazywane do <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>metodę, która jest używana do uzyskiwania odwołanie do funkcji skryptu po stronie klienta, gdy została wywołana, powoduje, że serwer post wróć do strony.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       Ta metoda jest używana głównie przez deweloperów sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.Button>klasy.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> reprezentujący <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> zachowania odświeżania strony formantu."
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.Button.Click>Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> To zdarzenie jest często używana nazwa polecenia, nie jest skojarzony z <xref:System.Web.UI.WebControls.Button>formantu (na przykład o przycisk Prześlij).</xref:System.Web.UI.WebControls.Button>       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: wywoływanie zdarzeń](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       OnClick — metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Dane zdarzenia."
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia skrypt po stronie klienta, który jest wykonywany kiedy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> zdarzenia."
  remarks: "Aby określić dodatkowe skrypt po stronie klienta, który wykonuje, kiedy należy użyć właściwości OnClientClick <xref:System.Web.UI.WebControls.Button>formantu <xref:System.Web.UI.WebControls.Button.Click>zdarzenie jest wywoływane.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> Skrypt umożliwiający określenie dla tej właściwości jest renderowany w <xref:System.Web.UI.WebControls.Button>formantu `OnClick` skryptu po stronie klienta wstępnie zdefiniowanych atrybutów oprócz formantu</xref:System.Web.UI.WebControls.Button>       Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute>i [kompozycji ASP.NET i karnacji](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "Skrypt po stronie klienta, który jest wykonywany kiedy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> zdarzenia."
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.Button.Command>Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> To zdarzenie jest często używana nazwa polecenia, takich jak `Sort`, jest skojarzone z <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> Dzięki temu można utworzyć wiele <xref:System.Web.UI.WebControls.Button>formantów w sieci Web i programowo określenie <xref:System.Web.UI.WebControls.Button>formant zostanie kliknięty.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > <xref:System.Web.UI.WebControls.Button.Command>Zdarzenie jest wywoływane przez hierarchię formantu w postaci `BubbleEvent`.</xref:System.Web.UI.WebControls.Button.Command>       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: wywoływanie zdarzeń](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoda OnCommand umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "Dane zdarzenia."
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa, czy przycisk został kliknięty przed renderowaniem na kliencie."
  remarks: "Metoda OnPreRender jest używana głównie przez deweloperów sterowania podczas tworzenia klasy pochodnej z klasy niestandardowej <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Dane zdarzenia."
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL strony do wysłania do z bieżącej strony, gdy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant zostanie kliknięty."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL strony sieci Web do wysłania do z bieżącej strony, gdy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant zostanie kliknięty. Wartość domyślna to ciąg pusty (&quot;&quot;), co powoduje, że strona publikowania do samej siebie."
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Informuje o zdarzeniach dla <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroli, gdy ogłoszenia na serwerze."
  remarks: "To zdarzenie jest używana wewnętrznie przez <xref:System.Web.UI.WebControls.Button>kontroli, po kliknięciu, aby podnieść <xref:System.Web.UI.WebControls.Button.Click>zdarzenia i jeśli zdefiniowane, <xref:System.Web.UI.WebControls.Button.Command>zdarzeń.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Argument zdarzenia."
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderuje zawartość formantu w określonym składniku zapisywania."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiekt, który reprezentuje strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie."
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Informuje o zdarzeniach dla <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroli, gdy ogłoszenia na serwerze."
  remarks: "To zdarzenie jest używana wewnętrznie przez <xref:System.Web.UI.WebControls.Button>kontroli, po kliknięciu, aby podnieść <xref:System.Web.UI.WebControls.Button.Click>zdarzenia i jeśli zdefiniowane, <xref:System.Web.UI.WebControls.Button.Command>zdarzeń.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Argument zdarzenia."
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia podpis tekstowy wyświetlany w <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu."
  remarks: "Użyj właściwości tekst do określania podpis do wyświetlenia w <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button>       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Podpis tekstowy wyświetlany w <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu. Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrola korzysta klient przeglądarki przesłać mechanizm lub mechanizmu odświeżania strony programu ASP.NET."
  remarks: "Umożliwia określenie właściwości UseSubmitBehavior czy <xref:System.Web.UI.WebControls.Button>Kontrola korzysta klient przeglądarki przesłać mechanizm lub mechanizmu odświeżania strony programu ASP.NET.</xref:System.Web.UI.WebControls.Button> Domyślna wartość tej właściwości jest `true`, powodując <xref:System.Web.UI.WebControls.Button>kontroli korzystanie z przeglądarki przesłać mechanizmu.</xref:System.Web.UI.WebControls.Button> Jeśli określisz `false`, architekturę stron ASP.NET dodaje skryptu po stronie klienta do strony, aby post formularza do serwera.       Gdy właściwość UseSubmitBehavior jest `false`, kontroli, deweloperzy mogą użyć <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metody do zwrócenia klienta ogłaszanie zdarzeń dla <xref:System.Web.UI.WebControls.Button>.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Długość ciągu zwróconego przez <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>Metoda zawiera tekst wywołania funkcji klienta i można wstawiać do obsługi zdarzeń po stronie klienta.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute>i [kompozycji ASP.NET i karnacji](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli w przeglądarce klienta używa kontrolki przesłać mechanizmu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia grupy formantów, dla którego <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant powoduje sprawdzania poprawności, gdy ogłasza go do serwera."
  remarks: "Sprawdzanie poprawności grupy umożliwiają przypisywanie weryfikacji formantów na stronie do jednej konkretnej kategorii. Każda grupa sprawdzania poprawności można zweryfikować niezależnie od innych grup sprawdzania poprawności na stronie. Aby określić nazwę grupy walidacji, dla którego należy użyć właściwości ValidationGroup <xref:System.Web.UI.WebControls.Button>formant powoduje sprawdzania poprawności, gdy ogłasza go do serwera.</xref:System.Web.UI.WebControls.Button>       Ta właściwość ma zastosowanie tylko wtedy, gdy wartość <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>ma ustawioną właściwość `true`.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Po określeniu wartości dla właściwości ValidationGroup tylko sprawdzanie poprawności formantów, które należą do określonej grupy są weryfikowane podczas <xref:System.Web.UI.WebControls.Button>kontroli ogłoszenia na serwerze.</xref:System.Web.UI.WebControls.Button> Jeśli nie określisz wartości dla tej właściwości i <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>właściwość jest ustawiona na `true`, wszystkie formanty walidacji na stronie, które nie są przypisane do grupy sprawdzania poprawności są weryfikowane, gdy formant ogłasza do serwera.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute>i [kompozycji ASP.NET i karnacji](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Grupa formantów, dla którego <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formant powoduje sprawdzania poprawności, gdy ogłasza go do serwera. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
