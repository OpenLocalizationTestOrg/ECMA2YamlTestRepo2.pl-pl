### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "Formanty prawa dostępu do zasobów Internetu HTTP."
  remarks: "WebPermission udostępnia zestaw metod i właściwości, aby kontrolować dostęp do zasobów internetowych. Można użyć WebPermission ograniczony lub nieograniczony dostęp do zasobu na podstawie <xref:System.Security.Permissions.PermissionState>ustawiono po utworzeniu WebPermission.</xref:System.Security.Permissions.PermissionState>       Utwórz wystąpienie WebPermission przez wywołanie jego konstruktora przy użyciu jednej z następujących parametrów:-bez parametrów. Domyślnie <xref:System.Security.Permissions.PermissionState>jest <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> Określ <xref:System.Security.Permissions.PermissionState>Umożliwia dowolny identyfikator URI do użycia w klasie docelowej lub <xref:System.Security.Permissions.PermissionState>zezwala na dostęp tylko identyfikatory URI, który określisz za pośrednictwem <xref:System.Net.WebPermission.AddPermission%2A>metody.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A <xref:System.Net.NetworkAccess>wartość i ciąg identyfikatora URI.</xref:System.Net.NetworkAccess> Określony identyfikator URI ma uprawnienia przyznane przez <xref:System.Net.NetworkAccess>wartość.</xref:System.Net.NetworkAccess>      -A <xref:System.Net.NetworkAccess>specyfikator i identyfikator URI wyrażenia regularnego.</xref:System.Net.NetworkAccess>       <xref:System.Net.WebPermission.ConnectList%2A>i <xref:System.Net.WebPermission.AcceptList%2A>przytrzymać identyfikatory URI, któremu udzielono uprawnień dostępu.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> Aby dodać identyfikator URI do jednej z tych list, użyj <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> W przypadku przekazania <xref:System.Net.NetworkAccess>jako <xref:System.Net.NetworkAccess>parametru, identyfikator URI zostanie dodany do <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> WebPermission będzie zezwalał na połączenia z klasą docelową identyfikatory URI w odpowiadającym <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A>      > [!CAUTION] > Aby odmówić dostępu do zasobu internetowego, można odmówić dostępu do wszystkich możliwych ścieżek do tego zasobu. Wymaga to wywoływanie <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>z parametrem stanu ustawioną <xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A> </xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName> Lepszym rozwiązaniem jest zezwala na dostęp tylko określonych zasobów. Aby uzyskać więcej informacji na ten temat, zapoznaj się [NIB: przy użyciu metody Odmów](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) tematu.      > [!NOTE] > Konieczna odmowa dostępu przy użyciu tylko ścieżki kanoniczną zasobów. Nie istnieje potrzeba do używania wszystkich ścieżek syntaktycznych zmian.      > [!NOTE] > Nazwy i domyślnego portu informacje o użytkowniku jest usuwany z <xref:System.Uri>przed porównanie z argumentu wyrażenia regularnego, który został dostarczony do <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>konstruktora.</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> Jeśli wyrażenie regularne zawiera informacje o użytkowniku lub domyślny numer portu, a następnie wszystkie przychodzące <xref:System.Uri>s nie będą zgodne z wyrażeniem regularnym.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Net.WebPermission&quot;> </xref> klasy."
  remarks: "Tworzy nowe wystąpienie <xref:System.Net.WebPermission>klasy.</xref:System.Net.WebPermission> Ten konstruktor tworzy puste uprawnienia, które nie udziela żadnych praw."
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Net.WebPermission&quot;> </xref> klasy, która przekazuje wszystkich żądań lub nie powiedzie się wszystkich potrzeb."
  remarks: "Wartość `state` jest parametr <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>lub <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>odpowiednio reaguje pełni ograniczony lub w pełni nieograniczony dostęp do wszystkich zmiennych zabezpieczeń.</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> Jeśli określisz <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>, następnie można zapewnić dostęp do poszczególnych identyfikatorów URI przy użyciu <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName>"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebPermission&quot;> </xref> klasy z uprawnieniami dostępu do określonego dla określonego identyfikatora URI."
  remarks: "Ten konstruktor inicjuje <xref:System.Net.WebPermission>i przyznaje uprawnienia do jego docelowy albo nawiązać zdalnego hosta połączenia lub Zaakceptuj połączenia zdalnego hosta za pomocą opisane przez identyfikator URI `uriString` parametru.</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Wartość wartość, która wskazuje, jaki rodzaj dostępu do określonego identyfikatora URI. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Wskazuje, że aplikacja jest dozwolone do akceptowania połączeń z Internetu zasobów lokalnych. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Wskazuje, że aplikacja może nawiązać do określonych zasobów internetowych."
    - id: uriString
      type: System.String
      description: "Ciąg URI, do których dostęp uzyskują uprawnienia."
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebPermission&quot;> </xref> klasy z uprawnieniami dostępu do określonego dla określonego identyfikatora URI wyrażenia regularnego."
  remarks: "Ten konstruktor inicjuje <xref:System.Net.WebPermission>i przyznaje uprawnienia do jego docelowy albo nawiązać zdalnego hosta połączenia lub Zaakceptuj połączenia zdalnego hosta za pomocą opisane przez identyfikator URI `uriRegex`parametru.</xref:System.Net.WebPermission>      > [!NOTE] > Zaleca się utworzenie `uriRegex` przy użyciu <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, i <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>flagi.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > Candidate ciągu identyfikatora URI jest porównywany listę odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Po raz pierwszy candidate ciągu identyfikatora URI jest wyewidencjonowany z odpowiednią listą; następnie, jeśli nie są niezgodne, candidate ciągu identyfikatora URI jest konwertowany na <xref:System.Uri>i sprawdza, czy odpowiednie listy.</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> wartość, która wskazuje, jaki rodzaj dostępu do określonego identyfikatora URI. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Wskazuje, że aplikacja jest dozwolone do akceptowania połączeń z Internetu zasobów lokalnych. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Wskazuje, że aplikacja może nawiązać do określonych zasobów internetowych."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Wyrażenie regularne opisuje identyfikatora URI, do której ma zostać udzielone dostępu."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ta właściwość zwraca wyliczenie jedną zaakceptować uprawnień posiadanych przez to <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Obiekty możliwe typy zawarte w wyliczeniu, zwracane są <xref:System.String>i &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Ta właściwość pobiera listę lokalnych zasobów udostępnionych przez ten <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> Klasy, do którego zastosowano <xref:System.Net.WebPermission>ma tylko uprawnienia do odbierania przychodzących połączeń do zasobów lokalnych odnaleziony na liście.</xref:System.Net.WebPermission>      > [!NOTE] > Identyfikatorów URI można dodać do tej listy za pomocą <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Candidate ciągu identyfikatora URI jest porównywany listę odpowiednich wyrażeń regularnych (AcceptList lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby.</xref:System.Net.WebPermission.ConnectList%2A> Po raz pierwszy candidate ciągu identyfikatora URI jest wyewidencjonowany z odpowiednią listą; następnie, jeśli nie są niezgodne, candidate ciągu identyfikatora URI jest konwertowany na <xref:System.Uri>i sprawdza, czy odpowiednie listy.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Interfejsu, który zawiera zaakceptować uprawnienia.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Dodaje określony ciąg identyfikatora URI z określonego uprawnienia do bieżącego <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Jeśli określono <xref:System.Security.Permissions.PermissionState>jako <xref:System.Security.Permissions.PermissionState>, użyj AddPermission, aby zezwolić na stosowanie `uriString` w klasie docelowej.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Jak robi `uriString` mogą być używane przez element docelowy jest określona przez `access`. Określ <xref:System.Net.NetworkAccess>jako parametr dostępu, aby dodać określony przez identyfikator URI `uriString` parametru do listy identyfikatorów URI akceptować ciągi lub określ <xref:System.Net.NetworkAccess>jako dostępu ciągów połączenia parametru dodawanego do listy identyfikatorów URI identyfikatora URI.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > Wywoływania AddPermission na <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>nie odniesie żadnego skutku, ponieważ uzyskuje uprawnienia do wszystkich identyfikatorów URI.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      > [!NOTE] > Candidate ciągu identyfikatora URI jest porównywany listę odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Po raz pierwszy candidate ciągu identyfikatora URI jest wyewidencjonowany z odpowiednią listą; następnie, jeśli nie są niezgodne, candidate ciągu identyfikatora URI jest konwertowany na <xref:System.Uri>i sprawdza, czy odpowiednie listy.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> , który określa prawa dostępu, które są przypisywane do identyfikatora URI."
    - id: uriString
      type: System.String
      description: "Ciąg opisujący identyfikatora URI, do których dostęp uzyskują uprawnienia."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Dodaje określonego identyfikatora URI z określonego uprawnienia do bieżącego <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Jeśli określono <xref:System.Security.Permissions.PermissionState>jako <xref:System.Security.Permissions.PermissionState>, użyj <xref:System.Net.WebPermission.AddPermission%2A>umożliwia korzystanie z `uriRegex` w klasie docelowej.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Określ <xref:System.Net.NetworkAccess>jako `access` parametr, aby dodać określony przez identyfikator URI `uriRegex` parametru do listy identyfikatorów URI akceptować ciągi lub określ <xref:System.Net.NetworkAccess>jako dostępu ciągów połączenia parametru dodawanego do listy identyfikatorów URI identyfikatora URI.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > Wywoływania <xref:System.Net.WebPermission.AddPermission%2A>na <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>wystąpienia nie odniesie skutku jako otrzymuje uprawnienia do wszystkich identyfikatorów URI.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Zaleca się utworzenie `uriRegex` przy użyciu <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, i <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>flagi.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > Candidate ciągu identyfikatora URI jest porównywany listę odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Po raz pierwszy candidate ciągu identyfikatora URI jest wyewidencjonowany z odpowiednią listą; następnie, jeśli nie są niezgodne, candidate ciągu identyfikatora URI jest konwertowany na <xref:System.Uri>i sprawdza, czy odpowiednie listy.</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Wartość, która określa prawa dostępu, które są przypisywane do identyfikatora URI."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Wyrażenie regularne opisującą zestaw identyfikatorów URI, do których dostęp uzyskują uprawnienia."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ta właściwość zwraca wyliczenie jedną uprawnień posiadanych przez to <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Obiekty możliwe typy zawarte w wyliczeniu, zwracane są <xref:System.String>i &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Ta właściwość pobiera listę zasobów zdalnych, które są dozwolone w tym <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> Klasy, do którego zastosowano <xref:System.Net.WebPermission>ma tylko uprawnienia do połączenia z zasobami odnaleziony na liście.</xref:System.Net.WebPermission>      > [!NOTE] > Identyfikatorów URI można dodać do tej listy za pomocą <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Candidate ciągu identyfikatora URI jest porównywany listę odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub ConnectList) na dwa sposoby.</xref:System.Net.WebPermission.AcceptList%2A> Po raz pierwszy candidate ciągu identyfikatora URI jest wyewidencjonowany z odpowiednią listą; następnie, jeśli nie są niezgodne, candidate ciągu identyfikatora URI jest konwertowany na <xref:System.Uri>i sprawdza, czy odpowiednie listy.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Interfejsu, który zawiera połączyć uprawnienia.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Tworzy kopię <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "<xref:System.Security.IPermission>Zwrócone przez ten reprezentuje metodę taki sam dostęp do zasobów, jak oryginał <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> </xref:System.Security.IPermission> Ta metoda zastępuje <xref:System.Security.CodeAccessPermission.Copy%2A>i zaimplementowano ją do obsługi <xref:System.Security.IPermission>interfejsu.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Nowe wystąpienie klasy <xref href=&quot;System.Net.WebPermission&quot;> </xref> klasy, która ma takie same wartości jak oryginalne."
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rekonstruuje <xref href=&quot;System.Net.WebPermission&quot;> </xref> kodowania XML."
  remarks: "Metoda FromXml rekonstruuje <xref:System.Net.WebPermission>kodowania XML, który jest zdefiniowany w <xref:System.Security.SecurityElement>klasie.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission>       Użyj <xref:System.Net.WebPermission.ToXml%2A>do kodowania XML <xref:System.Net.WebPermission>, w tym informacje o stanie.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Kodowanie XML, z którego ma zostać rekonstrukcji <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> securityElement </code> Parametru<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>nie jest elementem uprawnień dla tego typu."
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zwraca wartość logiczną część wspólną dwóch <xref href=&quot;System.Net.WebPermission&quot;> </xref> wystąpień."
  remarks: "Zwraca INTERSECT <xref:System.Net.WebPermission>zawiera te uprawnienia, które są często używane w obu `target` i bieżącego wystąpienia.</xref:System.Net.WebPermission>       Ta metoda zastępuje <xref:System.Security.CodeAccessPermission.Intersect%2A>i zaimplementowano ją do obsługi <xref:System.Security.IPermission>interfejsu.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> Do porównania z bieżącym wystąpieniem."
    return:
      type: System.Security.IPermission
      description: "Nowy <xref href=&quot;System.Net.WebPermission&quot;> </xref> reprezentujący przecięcia bieżącego wystąpienia i <code> target </code> parametru. Jeśli część wspólną jest pusta, metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub typu<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Określa, czy bieżący <xref href=&quot;System.Net.WebPermission&quot;> </xref> jest podzbiorem określony obiekt."
  remarks: "Jeśli bieżący <xref:System.Net.WebPermission>Określa zestaw skojarzonych zasobów, które jest całkowicie zawarty w `target` parametr, a następnie bieżącego <xref:System.Net.WebPermission>jest podzbiorem `target`.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> Ta metoda zastępuje IsSubsetOf i zaimplementowano ją do obsługi <xref:System.Security.IPermission>interfejsu.</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> Do porównania z bieżącą <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżące wystąpienie jest podzbiorem <code> target </code> parametru; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Jeśli obiektem docelowym jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, metoda zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> pusty uprawnienia bieżącego, która nie jest nieograniczony i <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inaczej."
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Parametr docelowy nie jest wystąpieniem <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Bieżące wystąpienie zawiera prawo kodowany w formacie wyrażeń regularnych, a nie istnieje dokładnie takie same prawa znaleziony w wystąpieniu docelowym."
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Sprawdza stan uprawnień ogólną <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Jeśli <xref:System.Net.WebPermission>jest <xref:System.Security.Permissions.PermissionState>, a następnie użyć identyfikatorów URI wszystkie klasy docelowej.</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> W przeciwnym razie określone uprawnienie należy podać dowolny identyfikator URI, które mają być używane dla klasy docelowej.      > [!NOTE] > Użyj <xref:System.Net.WebPermission.AddPermission%2A>do dodawania identyfikatora URI i określanie jego uprawnień.</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Tworzy XML kodowanie <xref href=&quot;System.Net.WebPermission&quot;> </xref> i jego bieżącym stanie."
  remarks: "Użyj <xref:System.Net.WebPermission.FromXml%2A>metody przywracanie informacji o stanie z <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission.FromXml%2A>"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> zawiera kodowany w formacie XML reprezentację <xref href=&quot;System.Net.WebPermission&quot;> </xref>, w tym informacje o stanie."
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zwraca Unię logiczne między dwoma wystąpieniami <xref href=&quot;System.Net.WebPermission&quot;> </xref> klasy."
  remarks: "Zwraca złożenie <xref:System.Net.WebPermission>zawiera wszystkie uprawnienia w obu `target` i bieżącego wystąpienia.</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> Połączenie z bieżącym <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> reprezentujący Unii bieżącego wystąpienia i <code> target </code> parametru. If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. Jeśli obiektem docelowym jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, metoda zwraca kopię bieżącego <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "element docelowy nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub typu <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
