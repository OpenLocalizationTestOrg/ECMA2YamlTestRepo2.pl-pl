### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounter
  id: PerformanceCounter
  children:
  - System.Diagnostics.PerformanceCounter.#ctor
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.BeginInit
  - System.Diagnostics.PerformanceCounter.CategoryName
  - System.Diagnostics.PerformanceCounter.Close
  - System.Diagnostics.PerformanceCounter.CloseSharedResources
  - System.Diagnostics.PerformanceCounter.CounterHelp
  - System.Diagnostics.PerformanceCounter.CounterName
  - System.Diagnostics.PerformanceCounter.CounterType
  - System.Diagnostics.PerformanceCounter.Decrement
  - System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  - System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceCounter.EndInit
  - System.Diagnostics.PerformanceCounter.Increment
  - System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  - System.Diagnostics.PerformanceCounter.InstanceLifetime
  - System.Diagnostics.PerformanceCounter.InstanceName
  - System.Diagnostics.PerformanceCounter.MachineName
  - System.Diagnostics.PerformanceCounter.NextSample
  - System.Diagnostics.PerformanceCounter.NextValue
  - System.Diagnostics.PerformanceCounter.RawValue
  - System.Diagnostics.PerformanceCounter.ReadOnly
  - System.Diagnostics.PerformanceCounter.RemoveInstance
  langs:
  - csharp
  name: PerformanceCounter
  nameWithType: PerformanceCounter
  fullName: System.Diagnostics.PerformanceCounter
  type: Class
  summary: "Oznacza składnik licznika wydajności systemu Windows NT."
  remarks: "The PerformanceCounter component can be used for both reading existing predefined or custom counters and publishing (writing) performance data to custom counters.  \n  \n There are numerous predefined counters listed in the Windows Performance Monitor's [Add Counters dialog box](http://go.microsoft.com/fwlink/p/?LinkId=257854). To learn about the .NET Framework performance counters, see [Performance Counters](~/add/includes/ajax-current-ext-md.md).  \n  \n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n> [!IMPORTANT]\n>  In versions 1.0 and 1.1 of the .NET Framework, this class requires immediate callers to be fully trusted. Starting with the .NET Framework version 2.0, this class requires <xref:System.Diagnostics.PerformanceCounterPermission> for specific actions. It is strongly recommended that <xref:System.Diagnostics.PerformanceCounterPermission> not be granted to semi-trusted code.  The ability to read and write performance counters allows code to perform actions such as enumerating executing processes and obtaining information about them.  \n>   \n>  In addition, passing a PerformanceCounter object to less-trusted code can create a security issue. Never pass performance counter objects, such as a <xref:System.Diagnostics.PerformanceCounterCategory> or PerformanceCounter, to less trusted code.  \n  \n To read from a performance counter, create an instance of the PerformanceCounter class, set the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and, optionally, the <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> or <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> properties, and then call the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method to take a performance counter reading.  \n  \n To publish performance counter data, create one or more custom counters using the <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> method, create an instance of the PerformanceCounter class, set the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> and, optionally, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> or <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> properties, and then call the <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, or <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> methods, or set the <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> property to change the value of your custom counter.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, and <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  \n  \n The counter is the mechanism by which performance data is collected. The registry stores the names of all the counters, each of which is related to a specific area of system functionality. Examples include a processor's busy time, memory usage, or the number of bytes received over a network connection.  \n  \n Each counter is uniquely identified through its name and its location. In the same way that a file path includes a drive, a directory, one or more subdirectories, and a file name, counter information consists of four elements: the computer, the category, the category instance, and the counter name.  \n  \n The counter information must include the category, or performance object, that the counter measures data for. A computer's categories include physical components, such as processors, disks, and memory. There are also system categories, such as processes and threads. Each category is related to a functional element within the computer and has a set of standard counters assigned to it. These objects are listed in the Performance object drop-down list of the Add Counters dialog box within the Windows 2000 System Monitor, and you must include them in the counter path. Performance data is grouped by the category to which is it related.  \n  \n In certain cases, several copies of the same category can exist. For example, several processes and threads run simultaneously, and some computers contain more than one processor. The category copies are called category instances, and each instance has a set of standard counters assigned to it. If a category can have more than one instance, an instance specification must be included in the counter information.  \n  \n To obtain performance data for counters that required an initial or previous value for performing the necessary calculation, call the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method twice and use the information returned as your application requires.  \n  \n> [!NOTE]\n>  Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\\\*\\<category name>*\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry. For more information about the file mapping size, see [\\&lt;performanceCounters\\&gt;](../Topic/%3CperformanceCounters%3E%20Element.md)."
  example:
  - "The following code example demonstrates the use of the PerformanceCounter class to create and use an <xref:System.Diagnostics.PerformanceCounterType> counter type. The example creates categories, sets up counters, collects data from the counters, and calls the <xref:System.Diagnostics.CounterSampleCalculator> class to interpret the performance counter data. The intermediate and final results are displayed in the console window. For additional examples of other performance counter types, see the <xref:System.Diagnostics.PerformanceCounterType> enumeration.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_0_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_0_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter()
  nameWithType: PerformanceCounter.PerformanceCounter()
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje wystąpienie nowego, tylko do odczytu <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> klasy bez kojarzenia wystąpienie z systemu lub licznika wydajności niestandardowych."
  remarks: "To przeciążenie ustawia konstruktora <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Właściwości, które mają puste ciągi (&quot;&quot;) i ustawia <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Właściwości na komputerze lokalnym (&quot;.&quot;).</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Ten konstruktor nie zainicjować licznika wydajności, aby nie kojarzyć wystąpienie licznika istniejących na komputerze lokalnym. Aby wskazywała licznika wydajności zależnych, ustaw <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>i, opcjonalnie, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>i <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Właściwości przed przeczytaniem inne właściwości lub odczytywania licznika.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Aby zapisać w liczniku wydajności, należy ustawić <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>właściwości `false`.</xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>      > [!NOTE] > <xref:System.Security.Permissions.HostProtectionAttribute>Atrybut zastosowany do tego elementu członkowskiego ma następującą wartość właściwości <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>: <xref:System.Security.Permissions.HostProtectionResource>| <xref:System.Security.Permissions.HostProtectionResource>.</xref:System.Security.Permissions.HostProtectionResource></xref:System.Security.Permissions.HostProtectionResource></xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A></xref:System.Security.Permissions.HostProtectionAttribute> <xref:System.Security.Permissions.HostProtectionAttribute>Nie wpływa na aplikacje klasyczne (które typowo są uruchamiane przez dwukrotne kliknięcie ikony, wpisanie polecenia lub wprowadzenie adresu URL w przeglądarce).</xref:System.Security.Permissions.HostProtectionAttribute> Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.HostProtectionAttribute>klasy lub [atrybuty ochrony hosta i programowanie programu SQL Server](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.Permissions.HostProtectionAttribute>"
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/m-system.diagnostics.per_15_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/m-system.diagnostics.per_15_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/m-system.diagnostics.per_15_1.vb)]"
  syntax:
    content: public PerformanceCounter ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje wystąpienie nowego, tylko do odczytu <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> klasy i kojarzy ją z określonego systemu lub licznika wydajności niestandardowe na komputerze lokalnym. Ten konstruktor musi mieć kategorię pojedynczego wystąpienia."
  remarks: "Ciągi parametru nie jest rozróżniana.       To przeciążenie umożliwia dostęp do licznika, na komputerze lokalnym, który należy do kategorii zawierające wystąpienie kategorii licznika wydajności pojedynczego. Jeśli spróbujesz użyć tego konstruktora do tego punktu <xref:System.Diagnostics.PerformanceCounter>wystąpienia kategorię, która zawiera wiele wystąpień, Konstruktor zwraca wyjątek.</xref:System.Diagnostics.PerformanceCounter> To przeciążenie można uzyskać dostępu do żadnych tylko do odczytu lub odczytu/zapisu licznika, ale w trybie tylko do odczytu. A <xref:System.Diagnostics.PerformanceCounter>wystąpienia utworzone za pomocą tego przeciążenia nie można zapisać do licznika, nawet jeśli licznika jest odczytu/zapisu.</xref:System.Diagnostics.PerformanceCounter>       To przeciążenie ustawia konstruktora <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>i <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>właściwości do wartości należy przekazać, ustawia <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Właściwości na komputerze lokalnym, &quot;.&quot; i ustawia <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Właściwości na ciąg pusty (&quot;&quot;).</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Ten konstruktor inicjuje licznika wydajności i kojarzy wystąpienie licznika istniejących (system lub liczników niestandardowych), na komputerze lokalnym. Wartości, które przekazujesz do <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>i <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>właściwości musi wskazywać istniejący licznika wydajności na komputerze lokalnym.</xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Nazwa kategorii licznika wydajności (obiekt wydajności), z którym skojarzony jest ten licznik wydajności."
    - id: counterName
      type: System.String
      description: "Nazwa licznika wydajności."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>to ciąg pusty (&quot;&quot;).       - lub - <code>counterName</code> to ciąg pusty (&quot;&quot;).       - lub - określonej kategorii nie istnieje.       - lub - określonej kategorii jest oznaczona jako występująca i wymaga licznika wydajności są tworzone z użyciem nazwy wystąpienia.       - lub - <code>categoryName</code> i <code>counterName</code> zostały zlokalizowane w różnych językach."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowy, tylko do odczytu lub odczytu/zapisu wystąpienie <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> klasy i kojarzy ją z określonego systemu lub licznika wydajności niestandardowe na komputerze lokalnym. Ten konstruktor wymaga, aby kategoria zawiera pojedyncze wystąpienie."
  remarks: "Ciągi parametru nie jest rozróżniana.       To przeciążenie umożliwia dostęp tylko do odczytu lub odczytu/zapisu licznika, na komputerze lokalnym, który należy do kategorii zawierające wystąpienie kategorii licznika wydajności pojedynczego. Jeśli spróbujesz użyć tego konstruktora do tego punktu <xref:System.Diagnostics.PerformanceCounter>wystąpienia kategorię, która zawiera wiele wystąpień, Konstruktor zwraca wyjątek.</xref:System.Diagnostics.PerformanceCounter>       To przeciążenie ustawia konstruktora <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>właściwości do wartości należy przekazać, ustawia <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Właściwości na komputerze lokalnym, &quot;.&quot; i ustawia <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Właściwości na ciąg pusty (&quot;&quot;).</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Ten konstruktor inicjuje licznika wydajności i kojarzy wystąpienie licznika istniejących (system lub liczników niestandardowych), na komputerze lokalnym. Wartości, które przekazujesz do <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>i <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>właściwości musi wskazywać istniejący licznika wydajności na komputerze lokalnym.</xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Jeśli wystąpienie licznika wydajności, które wskazują na nie jest prawidłowy, wywoływania konstruktora zgłasza wyjątek.      > [!NOTE] > Tego przeciążenia można użyć do nawiązania połączenia liczników systemu, ale nie można zapisać liczników systemu. W związku z tym ustawienie `readOnly` do `false` podczas nawiązywania połączenia z liczników systemu powoduje konstruktora, aby zgłosić wyjątek.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  example:
  - "The following code example creates an instance of the <xref:System.Diagnostics.PerformanceCounter> class. The example passes in category names, counter names, and a flag value indicating that the counter is not read-only. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/cpp/edd71a17-4ee7-4e9f-af30-_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/csharp/edd71a17-4ee7-4e9f-af30-_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/visualbasic/edd71a17-4ee7-4e9f-af30-_1.vb)]"
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, bool readOnly);
    parameters:
    - id: categoryName
      type: System.String
      description: "Nazwa kategorii licznika wydajności (obiekt wydajności), z którym skojarzony jest ten licznik wydajności."
    - id: counterName
      type: System.String
      description: "Nazwa licznika wydajności."
    - id: readOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do liczników w trybie tylko do odczytu (mimo że licznika może być odczytu/zapisu); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> dostępu licznika w trybie odczytu i zapisu do."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> categoryName </code> To ciąg pusty (&quot;&quot;).       - lub - <code> counterName </code> to ciąg pusty (&quot;&quot;).       - lub - określonej kategorii nie istnieje. (if <code>readOnly</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>).       - lub - określonej kategorii nie jest kategorią niestandardowych .NET Framework (Jeśli <code> readOnly </code> jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>).       - lub - określonej kategorii jest oznaczona jako występująca i wymaga licznika wydajności są tworzone z użyciem nazwy wystąpienia.       - lub - <code> categoryName </code> i <code> counterName </code> zostały zlokalizowane w różnych językach."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje wystąpienie nowego, tylko do odczytu <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> klasy i kojarzy ją z określonego systemu lub wystąpienie kategorii i licznika wydajności niestandardowe na komputerze lokalnym."
  remarks: "Ciągi parametru nie jest rozróżniana.       To przeciążenie ustawia konstruktora <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>właściwości do wartości należy przekazać w i ustawia <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Właściwości na komputerze lokalnym, &quot;.&quot;.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Ten konstruktor inicjuje licznika wydajności i kojarzy wystąpienie licznika istniejących (system lub liczników niestandardowych), na komputerze lokalnym. Wartości, które przekazujesz do <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>właściwości musi wskazywać istniejący licznika wydajności na komputerze lokalnym.</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Jeśli wystąpienie licznika wydajności, które wskazaniu nie jest prawidłowy, wywoływania konstruktora zgłasza wyjątek.       To przeciążenie można uzyskać dostępu do żadnych tylko do odczytu lub odczytu/zapisu licznika, ale w trybie tylko do odczytu. A <xref:System.Diagnostics.PerformanceCounter>wystąpienia utworzone za pomocą tego przeciążenia nie można zapisać do licznika, nawet jeśli licznika jest odczytu/zapisu.</xref:System.Diagnostics.PerformanceCounter>       Aby utworzyć wystąpienie kategorii wydajności, należy określić `instanceName` na <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>konstruktora.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Nazwa kategorii licznika wydajności (obiekt wydajności), z którym skojarzony jest ten licznik wydajności."
    - id: counterName
      type: System.String
      description: "Nazwa licznika wydajności."
    - id: instanceName
      type: System.String
      description: "Nazwa wystąpienia kategorii licznika wydajności lub ciąg pusty (&quot;&quot;), jeśli kategoria zawiera jedno wystąpienie."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>to ciąg pusty (&quot;&quot;).       - lub - <code>counterName</code> to ciąg pusty (&quot;&quot;).       - lub - określonej kategorii jest nieprawidłowy.       - lub - określonej kategorii jest oznaczona jako występująca i wymaga licznika wydajności są tworzone z użyciem nazwy wystąpienia.       - lub - <code>instanceName</code> jest dłuższa niż 127 znaków.       - lub - <code>categoryName</code> i <code>counterName</code> zostały zlokalizowane w różnych językach."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowy, tylko do odczytu lub odczytu/zapisu wystąpienie <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> klasy i kojarzy ją z określonego systemu lub wystąpienie kategorii i licznika wydajności niestandardowe na komputerze lokalnym."
  remarks: "Ciągi parametru nie jest rozróżniana.       To przeciążenie umożliwia dostęp licznika wydajności w jednym tylko do odczytu lub w trybie odczytu i zapisu.       To przeciążenie ustawia konstruktora <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>właściwości do wartości przekazywane w go i zestawy <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Właściwości na komputerze lokalnym, &quot;.&quot;.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Ten konstruktor inicjuje licznika wydajności i kojarzy wystąpienie licznika istniejących (system lub liczników niestandardowych), na komputerze lokalnym. Wartości, które przekazujesz do <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>właściwości musi wskazywać istniejący licznika wydajności na komputerze lokalnym.</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Jeśli wystąpienie licznika wydajności, które wskazują na nie jest prawidłowy, wywoływania konstruktora zgłasza wyjątek.      > [!NOTE] > Tego przeciążenia można użyć do nawiązania połączenia liczników systemu, ale nie można zapisać liczników systemu. W związku z tym ustawienie `readOnly` do `false` podczas nawiązywania połączenia z liczników systemu powoduje konstruktora, aby zgłosić wyjątek.       Aby utworzyć wystąpienie kategorii wydajności, należy określić `instanceName` na <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>konstruktora.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);
    parameters:
    - id: categoryName
      type: System.String
      description: "Nazwa kategorii licznika wydajności (obiekt wydajności), z którym skojarzony jest ten licznik wydajności."
    - id: counterName
      type: System.String
      description: "Nazwa licznika wydajności."
    - id: instanceName
      type: System.String
      description: "Nazwa wystąpienia kategorii licznika wydajności lub ciąg pusty (&quot;&quot;), jeśli kategoria zawiera jedno wystąpienie."
    - id: readOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby dostęp do liczników w trybie tylko do odczytu; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> dostępu licznika w trybie odczytu i zapisu do."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>to ciąg pusty (&quot;&quot;).       - lub - <code>counterName</code> to ciąg pusty (&quot;&quot;).       - lub - ustawienia żądane uprawnienia odczytu/zapisu jest nieprawidłowy dla tego licznika.       - lub - określonej kategorii nie istnieje (Jeśli <code>readOnly</code> jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>).       - lub - określonej kategorii nie jest kategorią niestandardowych .NET Framework (Jeśli <code>readOnly</code> jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>).       - lub - określonej kategorii jest oznaczona jako występująca i wymaga licznika wydajności są tworzone z użyciem nazwy wystąpienia.       - lub - <code>instanceName</code> jest dłuższa niż 127 znaków.       - lub - <code>categoryName</code> i <code>counterName</code> zostały zlokalizowane w różnych językach."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje wystąpienie nowego, tylko do odczytu <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> klasy i kojarzy ją z określonego systemu lub wydajność — niestandardowy kategorii i licznik wystąpienia, na określonym komputerze."
  remarks: "Ciągi parametru nie jest rozróżniana.       To przeciążenie ustawia konstruktora <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>i <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>właściwości do wartości Przekaż cali</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Ten konstruktor inicjuje licznika wydajności i kojarzy wystąpienie licznika istniejących (system lub liczników niestandardowych), na określonym komputerze. Wartości, które przekazujesz do <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>i <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>właściwości musi wskazywać istniejący licznika wydajności.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Jeśli wystąpienie licznika wydajności, które wskazaniu nie jest prawidłowy, wywoływania konstruktora zgłasza wyjątek. To przeciążenie można uzyskać dostępu do żadnych tylko do odczytu lub odczytu/zapisu licznika, ale w trybie tylko do odczytu. A <xref:System.Diagnostics.PerformanceCounter>wystąpienia utworzone za pomocą tego przeciążenia nie można zapisać do licznika, nawet jeśli licznika jest odczytu/zapisu.</xref:System.Diagnostics.PerformanceCounter>      > [!NOTE] > Nie można zapisać do liczników wydajności zdalnego. Nie istnieje żadne przeciążenie, który pozwala na określenie odczyt/zapis wystąpienia <xref:System.Diagnostics.PerformanceCounter>klasy, która łączy się z komputerem zdalnym.</xref:System.Diagnostics.PerformanceCounter>       Aby utworzyć wystąpienie kategorii wydajności, należy określić `instanceName` na <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>konstruktora.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.      > [!NOTE] > W systemie Windows Vista, gdy komputer zdalny jest członkiem grupy roboczej, należy wyłączyć funkcji Kontrola konta użytkownika lokalnego konta użytkownika nie jest filtrowany i może być z podwyższonym poziomem uprawnień do konta administratora. Ze względów bezpieczeństwa wyłączenie kontroli konta użytkownika należy ostateczność. Informacje dotyczące wyłączania funkcji Kontrola konta użytkownika, zobacz [Kontrola konta użytkownika i WMI](http://go.microsoft.com/fwlink/?LinkId=91617)."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Nazwa kategorii licznika wydajności (obiekt wydajności), z którym skojarzony jest ten licznik wydajności."
    - id: counterName
      type: System.String
      description: "Nazwa licznika wydajności."
    - id: instanceName
      type: System.String
      description: "Nazwa wystąpienia kategorii licznika wydajności lub ciąg pusty (&quot;&quot;), jeśli kategoria zawiera jedno wystąpienie."
    - id: machineName
      type: System.String
      description: "Komputer, na którym licznik wydajności i jego skojarzony kategorii."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>to ciąg pusty (&quot;&quot;).       - lub - <code>counterName</code> to ciąg pusty (&quot;&quot;).       - lub - ustawienia żądane uprawnienia odczytu/zapisu jest nieprawidłowy dla tego licznika.       - lub - licznik nie istnieje na określonym komputerze.       - lub - określonej kategorii jest oznaczona jako występująca i wymaga licznika wydajności są tworzone z użyciem nazwy wystąpienia.       - lub - <code>instanceName</code> jest dłuższa niż 127 znaków.       - lub - <code>categoryName</code> i <code>counterName</code> zostały zlokalizowane w różnych językach."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> machineName </code> Parametr jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.BeginInit
  id: BeginInit
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: BeginInit()
  nameWithType: PerformanceCounter.BeginInit()
  fullName: System.Diagnostics.PerformanceCounter.BeginInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Rozpoczyna inicjowanie <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> wystąpienie używane w formularzu lub przez inny składnik. Inicjowanie występuje w czasie wykonywania."
  remarks: "[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] Projekt środowiska korzystania z tej metody można uruchomić inicjowania składnika, który jest używany w formularzu lub przez inny składnik. <xref:System.Diagnostics.PerformanceCounter.EndInit%2A>Metoda kończy się inicjowania.</xref:System.Diagnostics.PerformanceCounter.EndInit%2A> Przy użyciu BeginInit i <xref:System.Diagnostics.PerformanceCounter.EndInit%2A>metody uniemożliwia użycie przed pełnym zainicjowaniem składnika.</xref:System.Diagnostics.PerformanceCounter.EndInit%2A>"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CategoryName
  id: CategoryName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
  fullName: System.Diagnostics.PerformanceCounter.CategoryName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia nazwę kategorii licznika wydajności dla tego licznika wydajności."
  remarks: "CategoryName jest wyświetlany w `Performance Object` pole przystawki programu MMC Menedżer licznika wydajności w jego `Add Counter` okno dialogowe.       Licznik wydajności monitoruje zachowanie kategorii lub obiekt wydajności na komputerze. Kategorie obejmują składniki fizyczne (takich jak procesory, dyski i pamięci) i obiektów systemowych (na przykład procesów i wątków). Liczniki systemu, które są powiązane z tym samym obiektem wydajności są zgrupowane w kategorię, która wskazuje ich wspólnej fokus. Podczas tworzenia wystąpienia <xref:System.Diagnostics.PerformanceCounter>klasy, należy najpierw wskazać kategorii, z którym będzie współpracować składnik, a następnie wybierz licznik z tej kategorii.</xref:System.Diagnostics.PerformanceCounter>       Na przykład kategoria pamięci jest jedną kategorię licznika systemu Windows. Liczniki systemu w tej kategorii śledzenia pamięci dane, takie jak liczba dostępnych bajtów i liczby bajtów w pamięci podręcznej. Jeśli chcesz pracować z bajtów pamięci podręcznej w aplikacji, należy utworzyć wystąpienie <xref:System.Diagnostics.PerformanceCounter>składnika, połącz go z kategorii pamięci, a następnie wybierz odpowiedniego licznika (w tym przypadku buforowanych bajtów) z tej kategorii.</xref:System.Diagnostics.PerformanceCounter>       Chociaż system udostępnia wiele więcej kategorii licznika, kategorie, które będą prawdopodobnie w interakcję z najczęściej są kategorie pamięci podręcznej, pamięci, obiekty, dysk fizyczny, proces, procesora, serwera, systemu i wątku."
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the CategoryName, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_6_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_6_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_6_1.vb)]"
  syntax:
    content: public string CategoryName { get; set; }
    return:
      type: System.String
      description: "Nazwa kategorii licznika wydajności (obiekt wydajności), z którym skojarzony jest ten licznik wydajności."
  overload: System.Diagnostics.PerformanceCounter.CategoryName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "CategoryName <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Close
  id: Close
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Close()
  nameWithType: PerformanceCounter.Close()
  fullName: System.Diagnostics.PerformanceCounter.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zamyka licznik wydajności i zwalnia wszystkie zasoby przydzielone przez to wystąpienie licznika wydajności."
  remarks: "Po skojarzeniu to <xref:System.Diagnostics.PerformanceCounter>wystąpienia licznika wydajności, która znajduje się na serwerze systemu inicjuje wystąpienie i przydziela pamięć zawierają informacje o liczniku próbki.</xref:System.Diagnostics.PerformanceCounter> Close — metoda zwalnia zasoby przydzielone przez obiekt."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources
  id: CloseSharedResources
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CloseSharedResources()
  nameWithType: PerformanceCounter.CloseSharedResources()
  fullName: System.Diagnostics.PerformanceCounter.CloseSharedResources()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zwalnia przydzielone przez liczniki stan biblioteki udostępnione licznika wydajności."
  syntax:
    content: public static void CloseSharedResources ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.CloseSharedResources*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterHelp
  id: CounterHelp
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
  fullName: System.Diagnostics.PerformanceCounter.CounterHelp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera opis dla tego licznika wydajności."
  remarks: "Okno dialogowe Dodawanie liczników programu MMC Menedżera licznika wydajności przyciąganie w Wyświetla tekst CounterHelp gdy użytkownik wybiera licznik z listy liczników i kliknie przycisk wyjaśnienia.       Tworząc nowy licznik, umożliwia tekst CounterHelp opisują, jakie licznik monitorów zrobić użytkownika można określić, czy można dodać licznika do ekranu Monitora systemu.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  syntax:
    content: public string CounterHelp { get; }
    return:
      type: System.String
      description: "Opis elementu lub ilość środków ten licznik wydajności."
  overload: System.Diagnostics.PerformanceCounter.CounterHelp*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> Wystąpienia nie jest skojarzony z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterName
  id: CounterName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
  fullName: System.Diagnostics.PerformanceCounter.CounterName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia nazwę licznika wydajności, który jest skojarzony z tym <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> wystąpienia."
  remarks: "Zostanie wyświetlona lista dostępnych liczników istniejące z systemu Windows wydajności Menedżera [okno dialogowe Dodawanie liczników](http://go.microsoft.com/fwlink/p/?LinkId=257854)."
  example:
  - "The following code example shows how to set the CounterName property to a typical counter name.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_4_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_4_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_4_1.vb)]"
  syntax:
    content: public string CounterName { get; set; }
    return:
      type: System.String
      description: "Nazwa licznika, który opisano ilość inwentaryzacji. Ta nazwa będzie wyświetlana na liście liczników wydajności licznik programu MMC przystawkę przez okno dialogowe Dodawanie liczników."
  overload: System.Diagnostics.PerformanceCounter.CounterName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jest CounterName <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterType
  id: CounterType
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
  fullName: System.Diagnostics.PerformanceCounter.CounterType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera typ licznika licznika wydajności skojarzonego."
  remarks: "<xref:System.Diagnostics.PerformanceCounterType>Wyliczenie zawiera typy liczniki wydajności, które użytkownik może interakcyjnie.</xref:System.Diagnostics.PerformanceCounterType> Niektóre typy licznika reprezentują obliczone wartości, takie jak Średnia pomiarów licznika, który trwało systemu. Inne typy reprezentują nieprzetworzoną lub nieobliczoną wartości. W poniższej tabeli przedstawiono typy licznika współpracujące z najczęściej.      | Odpowiedzialność licznika | Wartość PerformanceCounterType | Przykład |   |------------------------------|----------------------------------|-------------|   | Obsługa prostego liczba elementów lub operacji. | `NumberOfItems32`| Śledzenie numer zamówienia jako liczba całkowita 32-bitowych. |   | Obsługa liczbą proste większej pojemności. | `NumberOfItems64`| Śledzenie numer zamówienia witryny z bardzo dużych obciążeń, przechowywane jako 64-bitową liczbę całkowitą. |   | Śledzić liczbę elementów lub operacji na sekundę. | `RateOfCountsPerSecond32`| Śledzenie zamówień odebranych na sekundę w lokacji. |   | Śledzenie większej pojemności liczba elementów lub operacji na sekundę. | `RateOfCountsPerSecond64`| Śledzenie zamówień odebranych na sekundę w lokacji z bardzo dużych obciążeń. |   | Oblicz średni czas do wykonania procesu lub w celu przetworzenia elementu | `AverageTimer32`| Oblicz średni czas przyjmuje zamówienie do przetworzenia. |       Po utworzeniu licznika, którego typ wymaga użycia odpowiedniego podstawowy licznik musi deklarować licznik i base w <xref:System.Diagnostics.CounterCreationDataCollection>przekazywane do <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName>metody.</xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> </xref:System.Diagnostics.CounterCreationDataCollection>      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  syntax:
    content: public System.Diagnostics.PerformanceCounterType CounterType { get; }
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "A <xref href=&quot;System.Diagnostics.PerformanceCounterType&quot;> </xref> opisujący zarówno jak licznik współdziała z monitorowania aplikacji i rodzaj zawiera wartości (na przykład obliczona lub nieobliczone)."
  overload: System.Diagnostics.PerformanceCounter.CounterType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wystąpienie nie jest poprawnie skojarzone z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Decrement
  id: Decrement
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Decrement()
  nameWithType: PerformanceCounter.Decrement()
  fullName: System.Diagnostics.PerformanceCounter.Decrement()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zmniejsza licznika wydajności skojarzonego o jeden przez skuteczną niepodzielną operację."
  remarks: "Można zapisywać tylko w licznikach niestandardowych. Wszystkie liczniki systemu są tylko do odczytu.      > [!NOTE] > <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, I metod dekrementacja Użyj rygle, aby zaktualizować wartości licznika.</xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Dzięki temu wartość licznika dokładne w scenariuszach wielowątkowe lub wielu procesów, ale także powoduje spadek wydajności. Jeśli nie ma potrzeby dokładności blokowanej operacji Podaj, można zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>Właściwość bezpośrednio dla maksymalnie 5 razy zwiększenie wydajności.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  Jednak w scenariuszach wielowątkowe niektóre aktualizacje, aby wartość licznika może być ignorowane, niedokładne dane.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii."
  syntax:
    content: public long Decrement ();
    parameters: []
    return:
      type: System.Int64
      description: "Zmniejszona wartość licznika."
  overload: System.Diagnostics.PerformanceCounter.Decrement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Licznik jest tylko do odczytu, więc aplikacja nie można jej zmniejszyć.       - lub - wystąpienie nie jest poprawnie skojarzone z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  id: DefaultFileMappingSize
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: DefaultFileMappingSize
  nameWithType: PerformanceCounter.DefaultFileMappingSize
  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Określa rozmiar w bajtach pamięci globalnej współużytkowane przez liczniki wydajności. Rozmiar domyślny to 524,288 bajtów."
  syntax:
    content: public static int DefaultFileMappingSize;
    return:
      type: System.Int32
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PerformanceCounter.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceCounter.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Diagnostics.PerformanceCounter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.EndInit
  id: EndInit
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: EndInit()
  nameWithType: PerformanceCounter.EndInit()
  fullName: System.Diagnostics.PerformanceCounter.EndInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Kończy się inicjowanie <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> wystąpienie, które jest używane w formularzu lub przez inny składnik. Inicjowanie występuje w czasie wykonywania."
  remarks: "[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] Projekt środowiska korzystania z tej metody do zakończenia inicjowania składnika, który jest używany w formularzu lub przez inny składnik. <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>Metoda uruchamia inicjowania.</xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> Przy użyciu <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>i metody EndInit uniemożliwia użycie przed pełnym zainicjowaniem składnika.</xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Increment
  id: Increment
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Increment()
  nameWithType: PerformanceCounter.Increment()
  fullName: System.Diagnostics.PerformanceCounter.Increment()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zwiększa licznik wydajności skojarzona jeden przez skuteczną niepodzielną operację."
  remarks: "Można zapisywać tylko w licznikach niestandardowych. Wszystkie liczniki systemu są tylko do odczytu.      > [!NOTE] > Przyrost <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, i <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>metody Użyj rygle, aby zaktualizować wartości licznika.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> Dzięki temu wartość licznika dokładne w scenariuszach wielowątkowe lub wielu procesów, ale także powoduje spadek wydajności. Jeśli nie ma potrzeby dokładności blokowanej operacji Podaj, można zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>Właściwość bezpośrednio dla maksymalnie 5 razy zwiększenie wydajności.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  Jednak w scenariuszach wielowątkowe niektóre aktualizacje, aby wartość licznika może być ignorowane, niedokładne dane.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii."
  syntax:
    content: public long Increment ();
    parameters: []
    return:
      type: System.Int64
      description: "Zwiększona wartość licznika."
  overload: System.Diagnostics.PerformanceCounter.Increment*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Licznik jest tylko do odczytu, więc aplikacja nie może zwiększyć go.       - lub - wystąpienie nie jest poprawnie skojarzone z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  id: IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: IncrementBy(Int64)
  nameWithType: PerformanceCounter.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zwiększa lub zmniejsza wartość licznika wydajności skojarzonego przez określoną ilość poprzez skuteczną niepodzielną operację."
  remarks: "Można zapisywać tylko w licznikach niestandardowych. Wszystkie liczniki systemu są tylko do odczytu.      > [!NOTE] > <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, IncrementBy, i <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>metody Użyj rygle, aby zaktualizować wartości licznika.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Dzięki temu wartość licznika dokładne w scenariuszach wielowątkowe lub wielu procesów, ale także powoduje spadek wydajności. Jeśli nie ma potrzeby dokładności blokowanej operacji Podaj, można zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>Właściwość bezpośrednio dla maksymalnie 5 razy zwiększenie wydajności.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  Jednak w scenariuszach wielowątkowe niektóre aktualizacje, aby wartość licznika może być ignorowane, niedokładne dane.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii."
  example:
  - "The following code example demonstrates how to use the IncrementBy method to add increments to a counter. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/cpp/m-system.diagnostics.per_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/csharp/m-system.diagnostics.per_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/visualbasic/m-system.diagnostics.per_2_1.vb)]"
  syntax:
    content: public long IncrementBy (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Wartość do zwiększenia. (Ujemnych wartości zmniejsza licznika.)"
    return:
      type: System.Int64
      description: "Nowa wartość licznika."
  overload: System.Diagnostics.PerformanceCounter.IncrementBy*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Licznik jest tylko do odczytu, więc aplikacja nie może zwiększyć go.       - lub - wystąpienie nie jest poprawnie skojarzone z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime
  id: InstanceLifetime
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia okres istnienia procesu."
  remarks: "Jeśli kategoria licznika wydajności jest utworzony w programie .NET Framework w wersji 1.0 lub 1.1, używa globalnej pamięci współdzielonej, a wartość okresu istnienia InstanceLifetime musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.CounterType%2A>Właściwości jest <xref:System.Diagnostics.PerformanceCounterCategoryType>wartość okresu istnienia InstanceLifetime licznika wydajności musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounterCategoryType> </xref:System.Diagnostics.PerformanceCounter.CounterType%2A>"
  syntax:
    content: public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }
    return:
      type: System.Diagnostics.PerformanceCounterInstanceLifetime
      description: "Jeden z <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounter.InstanceLifetime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość nie jest elementem członkowskim <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> wyliczenia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parametr InstanceLifetime ustawiono po <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> został zainicjowany."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.InstanceName
  id: InstanceName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
  fullName: System.Diagnostics.PerformanceCounter.InstanceName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia nazwę wystąpienia dla tego licznika wydajności."
  remarks: "> [!NOTE]\n>  Instance names must be shorter than 128 characters in length.  \n  \n In some situations, categories are subdivided into instances, which track data about multiple occurrences of the object that a category relates to. Instances apply to the category as whole, rather than to individual counters. Every counter within a category has each instance defined for the category. For example, the Process category contains instances named Idle and System. Every counter within the Process category thus contains data for each instance, showing information about either idle processes or system processes.  \n  \n Many categories do not contain multiple instances, so you can leave this property empty to indicate that no instance is associated with the category.  \n  \n If this <xref:System.Diagnostics.PerformanceCounter> instance points to a noncustom category, you can choose from only the existing category instances. You can create new category instances only in custom categories, which allow you to define as many counters and category instances as you need.  \n  \n To create a performance category instance, specify an `instanceName` on the <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> constructor. If the category instance specified by `instanceName` already exists the new object will reference the existing category instance.  \n  \n> [!NOTE]\n>  Do not use the characters \"(\", \")\", \"#\", \"\\\\\", or \"/\" in the instance name. If any of these characters are used, the Performance Console (see [Runtime Profiling](~/add/includes/ajax-current-ext-md.md)) may not correctly display the instance values.  \n  \n If the instance name is automatically generated and might contain the characters \"(\", \")\", \"#\", \"\\\\\", or \"/\", use the character mapping in the following table.  \n  \n|Character|Mapped character|  \n|---------------|----------------------|  \n|(|[|  \n|)|]|  \n|#|_|  \n|\\|_|  \n|/|_|  \n  \n The <xref:System.AppDomain.FriendlyName%2A> property of the <xref:System.AppDomain> object obtained from the <xref:System.AppDomain.CurrentDomain%2A?displayProperty=fullName> property is a common source of instance names that can contain invalid characters."
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and InstanceName property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_0_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_0_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_0_1.vb)]"
  syntax:
    content: public string InstanceName { get; set; }
    return:
      type: System.String
      description: "Nazwa wystąpienia kategorii licznika wydajności lub ciąg pusty (&quot;&quot;), jeśli licznik jest pojedynczym wystąpieniem licznika."
  overload: System.Diagnostics.PerformanceCounter.InstanceName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.MachineName
  id: MachineName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
  fullName: System.Diagnostics.PerformanceCounter.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia nazwę komputera dla tego licznika wydajności"
  remarks: "Użytkownik może zapisać wartości tylko liczniki, które znajdują się na komputerze lokalnym. Można jednak odczytać wartości liczników za pomocą dowolnego komputera w przedsiębiorstwie, dla którego masz uprawnienia dostępu.       Po ustawieniu właściwości MachineName, aby wskazywały na komputerze zdalnym <xref:System.Diagnostics.PerformanceCounter>wystąpienia próbuje otworzyć licznik na tym komputerze.</xref:System.Diagnostics.PerformanceCounter> Jeśli licznik nie istnieje, ustawienie dla tej właściwości zgłasza wyjątek."
  syntax:
    content: public string MachineName { get; set; }
    return:
      type: System.String
      description: "Serwer, na którym znajdują się liczników wydajności i jego skojarzonej kategorii."
  overload: System.Diagnostics.PerformanceCounter.MachineName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MachineName format jest nieprawidłowy."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.NextSample
  id: NextSample
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: NextSample()
  nameWithType: PerformanceCounter.NextSample()
  fullName: System.Diagnostics.PerformanceCounter.NextSample()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Uzyskuje próbkę licznika oraz zwraca nieprzetworzoną lub nieobliczoną wartość."
  remarks: "Ta metoda jest zwykle używana dla liczników, które zawierają nieobliczone wartości.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  example:
  - "The following code example demonstrates how to use the NextSample method to obtain the next uncalculated value of a counter. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/cpp/m-system.diagnostics.per_13_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/csharp/m-system.diagnostics.per_13_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/visualbasic/m-system.diagnostics.per_13_1.vb)]"
  syntax:
    content: public System.Diagnostics.CounterSample NextSample ();
    parameters: []
    return:
      type: System.Diagnostics.CounterSample
      description: "A <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> reprezentujący następną nieprzetworzoną wartość uzyskaną przez system dla tego licznika."
  overload: System.Diagnostics.PerformanceCounter.NextSample*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wystąpienie nie jest poprawnie skojarzone z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.NextValue
  id: NextValue
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: NextValue()
  nameWithType: PerformanceCounter.NextValue()
  fullName: System.Diagnostics.PerformanceCounter.NextValue()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Uzyskuje próbkę licznika oraz zwraca obliczoną wartość."
  remarks: "> [!NOTE]> Jeśli obliczona wartość licznika zależy od dwa odczyty licznika, pierwszy operacja odczytu zwraca wartość 0,0. Resetowanie właściwości licznika wydajności, aby określić inny licznik jest odpowiednikiem tworzenie nowy licznik wydajności i pierwszej operacji odczytu przy użyciu nowych właściwości zwraca wartość 0,0. Zalecane opóźnienia między wywołania metody NextValue jest&1; sekundę, umożliwia licznik do wykonania następnego odczytu przyrostowe.      > [!NOTE] > Do odczytu liczników wydajności, musi mieć uprawnienia administratora. W systemie Windows Vista kontroli konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  example:
  - "The following code example creates an <xref:System.Diagnostics.PerformanceCounterType> counter and uses the NextValue method to display the counter's values over a time period.  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/m-system.diagnostics.per_12_1.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/m-system.diagnostics.per_12_1.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_12_1.vb)]"
  syntax:
    content: public float NextValue ();
    parameters: []
    return:
      type: System.Single
      description: "Obliczona wartość następnego uzyskaną przez system dla tego licznika."
  overload: System.Diagnostics.PerformanceCounter.NextValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wystąpienie nie jest poprawnie skojarzone z licznika wydajności."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.RawValue
  id: RawValue
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
  fullName: System.Diagnostics.PerformanceCounter.RawValue
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia nieprzetworzoną lub nieobliczoną wartość tego licznika."
  remarks: "Jeśli typ licznika ma rozmiar 32-bitowy, próba ustawiona na wartość, która jest za duży dla właściwości obcina wartość do 32-bitowy. Podczas odczytywania liczników niestandardowych na komputerze lokalnym, przy użyciu wartości RawValue zamiast obliczonej wartości właściwości może spowodować znacznie większą wydajność w zastosowaniach nieprzetworzonej wartości wystarczające.       Jeśli licznik odczytywania jest tylko do odczytu, pobieranie właściwości wartości RawValue próbek licznika w czasie nosi nazwę właściwości. Ta akcja jest odpowiednikiem początkowej wywołania do <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>metody.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A> Jeśli następnie wywołaj <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>, można wykonać obliczeń na wartości, które zwracane zarówno wywołań.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A>       Liczniki systemu znajdują się tylko do odczytu, można uzyskać, ale nie ustawienia ich wartości pierwotnych.      > [!NOTE] > <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, I <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>metody Użyj rygle, aby zaktualizować wartości licznika.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Dzięki temu wartość licznika dokładne w scenariuszach wielowątkowe lub wielu procesów, ale także powoduje spadek wydajności. Jeśli nie ma potrzeby dokładności blokowanej operacje Podaj, można zaktualizować właściwości wartości RawValue bezpośrednio dla maksymalnie 5 razy zwiększenie wydajności.  Jednak w scenariuszach wielowątkowe niektóre aktualizacje, aby wartość licznika może być ignorowane, niedokładne dane.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii.      > [!NOTE] > Aby odczytywanie liczników wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.   >> Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista, należy dodać użytkownika do grupy Użytkownicy monitora wydajności.   >> W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem grupy Administratorzy wbudowanych, są przypisane dwa tokenów dostępu do środowiska wykonawczego: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie są w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator."
  example:
  - "The following example uses the <xref:System.Diagnostics.CounterSample> class to display the value of the RawValue property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.per_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.per_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_2_1.vb)]"
  syntax:
    content: public long RawValue { get; set; }
    return:
      type: System.Int64
      description: "Nieprzetworzona wartość licznika."
  overload: System.Diagnostics.PerformanceCounter.RawValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbujesz ustawić nieprzetworzonej wartości licznika, ale ten licznik jest tylko do odczytu.       - lub - wystąpienie nie jest poprawnie skojarzone z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.ReadOnly
  id: ReadOnly
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
  fullName: System.Diagnostics.PerformanceCounter.ReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia wartość wskazującą czy to <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> wystąpienie jest w trybie tylko do odczytu."
  remarks: "Licznika systemu, tylko do odczytu powinny zawsze `true`. Nie można zapisać liczników systemu."
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> wystąpienie jest w trybie tylko do odczytu (nawet jeśli licznika jest licznikiem niestandardowym .NET Framework); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , jeśli jest w trybie odczytu i zapisu. Wartość domyślna to wartość ustawioną przez konstruktora."
  overload: System.Diagnostics.PerformanceCounter.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance
  id: RemoveInstance
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: RemoveInstance()
  nameWithType: PerformanceCounter.RemoveInstance()
  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Usuwa wystąpienie kategorii określone przez <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> obiektu <xref:System.Diagnostics.PerformanceCounter.InstanceName*>Właściwości.</xref:System.Diagnostics.PerformanceCounter.InstanceName*>"
  remarks: "Można usunąć wystąpienia tylko w przypadku liczników niestandardowych. Wszystkie liczniki systemu są tylko do odczytu, więc próby usunięcia jednego z nich zgłasza wyjątek.      > [!NOTE] > Aby uniknąć sytuacji wyścigu możliwe po zwolnieniu udostępnionych licznika wydajności pamięci, zaleca się, że można wywołać metody RemoveInstance z <xref:System.AppDomain.DomainUnload>obsługi zdarzeń.</xref:System.AppDomain.DomainUnload>       Aby utworzyć wystąpienie kategorii wydajności, należy określić `instanceName` na <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>konstruktora.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.      > [!NOTE] > Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>jest właściwość <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>i kategorii licznika wydajności została utworzona z .NET Framework w wersji 1.0 lub 1.1, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Kategorii licznika wydajności utworzonych w starszych wersjach na użytek globalnej pamięci współdzielonej, a wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Jeśli kategoria nie jest używany przez aplikacje działające na wersji 1.0 lub 1.1 programu .NET Framework, Usuń i ponownie utworzyć kategorii."
  syntax:
    content: public void RemoveInstance ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.RemoveInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ten licznik jest tylko do odczytu, więc nie można usunąć dowolne wystąpienie, który jest skojarzony z kategorią.       - lub - wystąpienie nie jest poprawnie skojarzone z licznika wydajności.       - lub - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> gdy za pomocą globalnej pamięci współdzielonej.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Platforma to Windows 98 lub Windows Millennium Edition (Me), który nie obsługuje liczników wydajności."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Diagnostics.PerformanceCounter.#ctor
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter()
  nameWithType: PerformanceCounter.PerformanceCounter()
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String)
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,String)
- uid: System.Diagnostics.PerformanceCounter.BeginInit
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: BeginInit()
  nameWithType: PerformanceCounter.BeginInit()
  fullName: System.Diagnostics.PerformanceCounter.BeginInit()
- uid: System.Diagnostics.PerformanceCounter.CategoryName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
  fullName: System.Diagnostics.PerformanceCounter.CategoryName
- uid: System.Diagnostics.PerformanceCounter.Close
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Close()
  nameWithType: PerformanceCounter.Close()
  fullName: System.Diagnostics.PerformanceCounter.Close()
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CloseSharedResources()
  nameWithType: PerformanceCounter.CloseSharedResources()
  fullName: System.Diagnostics.PerformanceCounter.CloseSharedResources()
- uid: System.Diagnostics.PerformanceCounter.CounterHelp
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
  fullName: System.Diagnostics.PerformanceCounter.CounterHelp
- uid: System.Diagnostics.PerformanceCounter.CounterName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
  fullName: System.Diagnostics.PerformanceCounter.CounterName
- uid: System.Diagnostics.PerformanceCounter.CounterType
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
  fullName: System.Diagnostics.PerformanceCounter.CounterType
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounter.Decrement
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Decrement()
  nameWithType: PerformanceCounter.Decrement()
  fullName: System.Diagnostics.PerformanceCounter.Decrement()
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: DefaultFileMappingSize
  nameWithType: PerformanceCounter.DefaultFileMappingSize
  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PerformanceCounter.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceCounter.Dispose(Boolean)
- uid: System.Diagnostics.PerformanceCounter.EndInit
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: EndInit()
  nameWithType: PerformanceCounter.EndInit()
  fullName: System.Diagnostics.PerformanceCounter.EndInit()
- uid: System.Diagnostics.PerformanceCounter.Increment
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Increment()
  nameWithType: PerformanceCounter.Increment()
  fullName: System.Diagnostics.PerformanceCounter.Increment()
- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: IncrementBy(Int64)
  nameWithType: PerformanceCounter.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(Int64)
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime
- uid: System.Diagnostics.PerformanceCounterInstanceLifetime
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterInstanceLifetime
  nameWithType: PerformanceCounterInstanceLifetime
  fullName: System.Diagnostics.PerformanceCounterInstanceLifetime
- uid: System.Diagnostics.PerformanceCounter.InstanceName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
  fullName: System.Diagnostics.PerformanceCounter.InstanceName
- uid: System.Diagnostics.PerformanceCounter.MachineName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
  fullName: System.Diagnostics.PerformanceCounter.MachineName
- uid: System.Diagnostics.PerformanceCounter.NextSample
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextSample()
  nameWithType: PerformanceCounter.NextSample()
  fullName: System.Diagnostics.PerformanceCounter.NextSample()
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
- uid: System.Diagnostics.PerformanceCounter.NextValue
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextValue()
  nameWithType: PerformanceCounter.NextValue()
  fullName: System.Diagnostics.PerformanceCounter.NextValue()
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Diagnostics.PerformanceCounter.RawValue
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
  fullName: System.Diagnostics.PerformanceCounter.RawValue
- uid: System.Diagnostics.PerformanceCounter.ReadOnly
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
  fullName: System.Diagnostics.PerformanceCounter.ReadOnly
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RemoveInstance()
  nameWithType: PerformanceCounter.RemoveInstance()
  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()
- uid: System.Diagnostics.PerformanceCounter.#ctor*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter
  nameWithType: PerformanceCounter.PerformanceCounter
- uid: System.Diagnostics.PerformanceCounter.BeginInit*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: BeginInit
  nameWithType: PerformanceCounter.BeginInit
- uid: System.Diagnostics.PerformanceCounter.CategoryName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
- uid: System.Diagnostics.PerformanceCounter.Close*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Close
  nameWithType: PerformanceCounter.Close
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CloseSharedResources
  nameWithType: PerformanceCounter.CloseSharedResources
- uid: System.Diagnostics.PerformanceCounter.CounterHelp*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
- uid: System.Diagnostics.PerformanceCounter.CounterName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
- uid: System.Diagnostics.PerformanceCounter.CounterType*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
- uid: System.Diagnostics.PerformanceCounter.Decrement*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Decrement
  nameWithType: PerformanceCounter.Decrement
- uid: System.Diagnostics.PerformanceCounter.Dispose*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Dispose
  nameWithType: PerformanceCounter.Dispose
- uid: System.Diagnostics.PerformanceCounter.EndInit*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: EndInit
  nameWithType: PerformanceCounter.EndInit
- uid: System.Diagnostics.PerformanceCounter.Increment*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Increment
  nameWithType: PerformanceCounter.Increment
- uid: System.Diagnostics.PerformanceCounter.IncrementBy*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: IncrementBy
  nameWithType: PerformanceCounter.IncrementBy
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
- uid: System.Diagnostics.PerformanceCounter.InstanceName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
- uid: System.Diagnostics.PerformanceCounter.MachineName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
- uid: System.Diagnostics.PerformanceCounter.NextSample*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextSample
  nameWithType: PerformanceCounter.NextSample
- uid: System.Diagnostics.PerformanceCounter.NextValue*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextValue
  nameWithType: PerformanceCounter.NextValue
- uid: System.Diagnostics.PerformanceCounter.RawValue*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
- uid: System.Diagnostics.PerformanceCounter.ReadOnly*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RemoveInstance
  nameWithType: PerformanceCounter.RemoveInstance
