### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType
  id: AuthorizedType
  children:
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  langs:
  - csharp
  name: AuthorizedType
  nameWithType: AuthorizedType
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType
  type: Class
  summary: "Reprezentuje zestaw typów, które są dozwolone lub zablokowane w przepływach pracy skompilowanego przez kompilator przepływu pracy (w zależności od wartości <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*>Właściwości).</xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*> Ta klasa nie może być dziedziczona."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Podczas fazy weryfikacji kompilacji przepływu pracy dokument źródłowy przepływ pracy zostanie odrzucony, jeżeli lub pliku reguł pomocnika bezpośrednio odwołuje się do żadnych typów .NET Framework nie znajduje się na liście typów autoryzowanych. Lista typów autoryzowanych jest dokumentu XML, gdzie każdy wpis wskazuje `Assembly`, `Namespace`, `TypeName`, a autoryzowani {`true`|`false`} wskaźnika. Ta klasa odpowiada wpis na liście. Należy również zauważyć, możliwość oznaczenia znak wieloznaczny, do dołączania lub wykluczania pełną przestrzeni nazw. Na przykład za pomocą `Type=”System.*”` obejmuje wszystkie typy w <xref:System>, łącznie z typów zawartych w przestrzeniach nazw podrzędnych.</xref:System>       Korzystanie z listą typów autoryzowanych jest kontrolowany przez <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler>opcji `&quot;/checktypes&quot;` </xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Xml.Serialization.XmlType("authorizedType")]

      public sealed class AuthorizedType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: AuthorizedType()
  nameWithType: AuthorizedType.AuthorizedType()
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.ComponentModel.Compiler.AuthorizedType&quot;> </xref> klasy."
  syntax:
    content: public AuthorizedType ();
    parameters: []
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  id: Assembly
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Assembly
  nameWithType: AuthorizedType.Assembly
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Pobiera lub ustawia nazwę zestawu, który zawiera typy reprezentowanego przez tę klasę."
  syntax:
    content: public string Assembly { get; set; }
    return:
      type: System.String
      description: "Nazwa zestawu."
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  id: Authorized
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Authorized
  nameWithType: AuthorizedType.Authorized
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Pobiera lub ustawia wartość wskazującą, czy typ wyznaczony przez tę klasę jest autoryzowany do udziału w kompilacji przepływu pracy."
  syntax:
    content: public string Authorized { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli uprawnienia do udziału w kompilacji przepływu pracy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  id: Namespace
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Namespace
  nameWithType: AuthorizedType.Namespace
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Pobiera lub ustawia nazwę obszaru nazw, typu reprezentowanego w tym wystąpieniu."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "Nazwa przestrzeni nazw <xref:System.Type>reprezentowane w tym wystąpieniu.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  id: RegularExpression
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Pobiera <xref:System.Text.RegularExpressions.Regex>skojarzony z tym wystąpieniem.</xref:System.Text.RegularExpressions.Regex>"
  remarks: "Ponieważ nazw symboli wieloznacznych jest obsługiwana, jest niejawnie tworzonych <xref:System.Text.RegularExpressions.Regex>nazw symbolu wieloznacznego stosowania.</xref:System.Text.RegularExpressions.Regex> Ta właściwość zapewnia bezpośredni dostęp do tego <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>"
  syntax:
    content: public System.Text.RegularExpressions.Regex RegularExpression { get; }
    return:
      type: System.Text.RegularExpressions.Regex
      description: "Wyrażenie regularne skojarzony z tym wystąpieniem."
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  id: TypeName
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: TypeName
  nameWithType: AuthorizedType.TypeName
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Pobiera lub ustawia nazwę typu reprezentowanego przez to wystąpienie."
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "Nazwa <xref:System.Type>reprezentowanego przez to wystąpienie.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: AuthorizedType()
  nameWithType: AuthorizedType.AuthorizedType()
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Assembly
  nameWithType: AuthorizedType.Assembly
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Authorized
  nameWithType: AuthorizedType.Authorized
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Namespace
  nameWithType: AuthorizedType.Namespace
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: TypeName
  nameWithType: AuthorizedType.TypeName
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: AuthorizedType
  nameWithType: AuthorizedType.AuthorizedType
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Assembly
  nameWithType: AuthorizedType.Assembly
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Authorized
  nameWithType: AuthorizedType.Authorized
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Namespace
  nameWithType: AuthorizedType.Namespace
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: TypeName
  nameWithType: AuthorizedType.TypeName
