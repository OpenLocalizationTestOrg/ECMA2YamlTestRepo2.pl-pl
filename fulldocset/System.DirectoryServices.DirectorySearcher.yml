### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySearcher
  id: DirectorySearcher
  children:
  - System.DirectoryServices.DirectorySearcher.#ctor
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.Asynchronous
  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  - System.DirectoryServices.DirectorySearcher.CacheResults
  - System.DirectoryServices.DirectorySearcher.ClientTimeout
  - System.DirectoryServices.DirectorySearcher.DerefAlias
  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  - System.DirectoryServices.DirectorySearcher.ExtendedDN
  - System.DirectoryServices.DirectorySearcher.Filter
  - System.DirectoryServices.DirectorySearcher.FindAll
  - System.DirectoryServices.DirectorySearcher.FindOne
  - System.DirectoryServices.DirectorySearcher.PageSize
  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  - System.DirectoryServices.DirectorySearcher.ReferralChasing
  - System.DirectoryServices.DirectorySearcher.SearchRoot
  - System.DirectoryServices.DirectorySearcher.SearchScope
  - System.DirectoryServices.DirectorySearcher.SecurityMasks
  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  - System.DirectoryServices.DirectorySearcher.SizeLimit
  - System.DirectoryServices.DirectorySearcher.Sort
  - System.DirectoryServices.DirectorySearcher.Tombstone
  - System.DirectoryServices.DirectorySearcher.VirtualListView
  langs:
  - csharp
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
  type: Class
  summary: "Wykonuje kwerendy względem usługi domenowe Active Directory."
  remarks: "Obiekt DirectorySearcher używany do wyszukiwania i wykonywać zapytania względem hierarchii usług domenowych w usłudze Active Directory przy użyciu dostępu protokołu LDAP (Lightweight Directory). LDAP jest tylko dostarczany przez system interfejsy usługi Active Directory (ADSI) dostawca obsługującego wyszukiwanie katalogu. Administrator może upewnij, alter, a następnie usuń obiekty, które znajdują się w hierarchii. Aby uzyskać więcej informacji, zobacz [przy użyciu System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).       Podczas tworzenia wystąpienia DirectorySearcher określić katalogu głównego, który chcesz pobrać i opcjonalną listę właściwości do pobrania. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>Właściwość umożliwia konfigurowanie dodatkowych właściwości do wykonywania następujących zadań:-pamięci podręcznej wyniki wyszukiwania na komputerze lokalnym.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> Ustaw <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>właściwości `true` do przechowywania informacji katalogu na komputerze lokalnym.</xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> Aktualizacje są wprowadzone w lokalnej pamięci podręcznej i przekazane do usług domenowych w usłudze Active Directory tylko wtedy, gdy <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>Metoda jest wywoływana.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>      -Określ czas, aby wyszukać, za pomocą <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>Właściwości.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>      -Pobrać tylko nazwy atrybutu. Ustaw <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>właściwości `true` można pobrać tylko nazwy atrybutów, na których zostały przypisane wartości.</xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>      — Wykonaj wyszukiwanie stronicowane. Ustaw <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>właściwość, aby określić maksymalną liczbę obiektów, które są zwracane w wyszukiwaniu stronicowanym.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> Jeśli nie chcesz wykonać wyszukiwanie stronicowane, ustaw <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>właściwości do domyślnego o wartości zero.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>      -Określ maksymalną liczbę zwracanych wpisów, za pomocą <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>Właściwości.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> Jeśli ustawisz <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>Właściwość do domyślnego o wartości zero, należy określić serwer domyślny jest 1000 wpisów.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>      > [!NOTE] > Jeśli maksymalna liczba wpisów zwrócony i limit czasu przekracza ograniczenia, które są ustawione na serwerze, ustawienia serwera zastępują ustawienia składnika.       Aby uzyskać listę początkowe wartości właściwości dla wystąpienia klasy DirectorySearcher, zobacz <xref:System.DirectoryServices.DirectorySearcher.%23ctor>konstruktora.</xref:System.DirectoryServices.DirectorySearcher.%23ctor>      > [!NOTE] > Zakłada się, że posiadanie ogólnej wiedzy z usług domenowych w usłudze Active Directory przed użyciem tej klasy. Aby uzyskać więcej informacji, zobacz <xref:System.DirectoryServices?displayProperty=fullName>Omówienie.</xref:System.DirectoryServices?displayProperty=fullName>"
  syntax:
    content: >-
      [System.DirectoryServices.DSDescription("DirectorySearcherDesc")]

      public class DirectorySearcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> z domyślnymi wartościami."
  remarks: "W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher>obiektu.</xref:System.DirectoryServices.DirectorySearcher>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Odwołanie o wartości null (`Nothing` w języku Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Pusty obiekt <xref:System.Collections.Specialized.StringCollection>|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher ();
    parameters: []
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  id: '#ctor(System.DirectoryServices.DirectoryEntry)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> przy użyciu głównego wyszukiwania."
  remarks: "W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher>obiektu.</xref:System.DirectoryServices.DirectorySearcher>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Pusty obiekt <xref:System.Collections.Specialized.StringCollection>|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klasy z określony filtr wyszukiwania."
  remarks: "W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher>obiektu.</xref:System.DirectoryServices.DirectorySearcher>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Odwołanie o wartości null (`Nothing` w języku Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Pusty obiekt <xref:System.Collections.Specialized.StringCollection>|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter);
    parameters:
    - id: filter
      type: System.String
      description: "Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klasy z filtrem wyszukiwania głównego i wyszukiwania."
  remarks: "W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher>obiektu.</xref:System.DirectoryServices.DirectorySearcher>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Pusty obiekt <xref:System.Collections.Specialized.StringCollection>. |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> z określony filtr wyszukiwania i właściwości do pobrania."
  remarks: "W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher>obiektu.</xref:System.DirectoryServices.DirectorySearcher>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Odwołanie o wartości null (`Nothing` w języku Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad);
    parameters:
    - id: filter
      type: System.String
      description: "Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Zestaw właściwości do pobrania podczas wyszukiwania. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klasy z głównego wyszukiwania określony filtr wyszukiwania i właściwości do pobrania..."
  remarks: "W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher>obiektu.</xref:System.DirectoryServices.DirectorySearcher>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Zbiór właściwości, które są pobierane podczas wyszukiwania. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> filtrować klasy z określonym wyszukiwania, właściwości, aby pobrać i zakres wyszukiwania."
  remarks: "W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher>obiektu.</xref:System.DirectoryServices.DirectorySearcher>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Odwołanie o wartości null (`Nothing` w języku Visual Basic) |</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: filter
      type: System.String
      description: "Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Zestaw właściwości do pobrania podczas wyszukiwania. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "Zakres wyszukiwania, który jest uwzględniony przez serwer. <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> Właściwość jest inicjowana na tę wartość."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klasy głównym wyszukiwania, filtr wyszukiwania, właściwości, aby pobrać i zakres wyszukiwania."
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Zestaw właściwości do pobrania podczas wyszukiwania. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Właściwość jest inicjowana na tę wartość.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "Zakres wyszukiwania, który jest uwzględniony przez serwer. <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> Właściwość jest inicjowana na tę wartość."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  id: Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, czy wyszukiwanie jest wykonywane asynchronicznie."
  remarks: "Asynchroniczne wyszukiwania można wyświetlać wyniki, jak zostały znalezione podczas wyszukiwania jednocześnie dodatkowych wyników. Jest to przydatne w przypadku zadań, takich jak wypełnianie pola listy.       Domyślne ustawienie dla tej właściwości jest `false`."
  example:
  - "The following C# example shows how to create an asynchronous search.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n//Set the Asynchronous property to true.  \nsrc.Asynchronous = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Asynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wyszukiwanie jest asynchroniczne; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inaczej."
  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  id: AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia nazwę wyświetlaną LDAP atrybut nazwy wyróżniającej do przeszukania. Tylko jeden atrybut może służyć do tego typu wyszukiwania."
  remarks: "Atrybut, który ma ustawioną wartość tej właściwości musi być atrybut nazwy wyróżniającej, takich jak element członkowski lub zarządzane. Atrybut może być pojedyncze lub wielokrotne wartości. Aby uzyskać więcej informacji, zobacz Tematy adschema &quot;[elementu członkowskiego](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)&quot;i&quot;[zarządzany przez](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)&quot; w bibliotece MSDN pod [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library).       Wyszukiwanie jest wykonywane względem obiektów, które są identyfikowane przez nazwę wyróżniającą, która jest określona w atrybucie obiektu podstawowego. Na przykład jeśli obiektu podstawowego jest klasą grupy adschema i właściwość AttributeScopeQuery ma ustawioną wartość &quot;elementu członkowskiego&quot;, następnie wyszukiwania zostaną wykonane względem wszystkich obiektów, które są elementami członkowskimi grupy. Aby uzyskać więcej informacji, zobacz temat klasy &quot;Grupa&quot; adschema w bibliotece MSDN pod [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library).       Gdy jest używana właściwość AttributeScopeQuery, <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>musi być ustawiona właściwość <xref:System.DirectoryServices.SearchScope>.</xref:System.DirectoryServices.SearchScope> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> Jeśli <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>właściwość jest ustawiona na dowolną inną wartość, ustawienie właściwość AttributeScopeQuery właściwości zgłosi <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>       Aby uzyskać więcej informacji, zobacz temat &quot;Wykonywania kwerendy zakresu atrybutów&quot; w bibliotece MSDN pod [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library))."
  example:
  - "The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \n  \n```c#  \nusing System.DirectoryServices;  \nDirectoryEntry group = new DirectoryEntry(\"LDAP://CN=MyGroup, …\");  \nDirectorySearcher src = new DirectorySearcher(group \"(&(objectClass=user)(objectCategory=Person))\");  \nsrc.AttributeScopedQuery = \"member\";  \nsrc.PropertiesToLoad.Add(\"sn\");  \nsrc.PropertiesToLoad.Add(\"givenName\");  \nsrc.PropertiesToLoad.Add(\"telephoneNumber\");  \nforeach(SearchResult res in src.FindAll())  \n{  \n    Console.WriteLine(\"…\");  \n}  \n```"
  syntax:
    content: public string AttributeScopeQuery { get; set; }
    return:
      type: System.String
      description: "LDAP, wyświetlana nazwa atrybutu, aby przeprowadzić wyszukiwanie przed lub pusty ciąg kwerendy zakresu atrybutów, nie jest ustawiona."
  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.DirectoryServices.DirectorySearcher.SearchScope*>Wartość właściwości jest równa wartości innych niż <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>.</xref:System.DirectoryServices.DirectorySearcher.SearchScope*>"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  id: CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, czy wynik jest buforowana na komputerze klienckim."
  remarks: "Jeśli wyniki wyszukiwania zawierają zestaw wyników dużych, wyszukiwanie będzie bardziej wydajne, jeśli ta właściwość jest ustawiona na `false` w celu uniknięcia transferu zestaw wyników do komputera klienckiego.  Jeśli tak zrobisz, jednak nie można wyliczyć wyników dwa razy, ponieważ <xref:System.DirectoryServices.SearchResultCollection>obiektu tworzy nowy obiekt modułu wyliczającego zawsze jest nazywana.</xref:System.DirectoryServices.SearchResultCollection>"
  syntax:
    content: public bool CacheResults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wynik jest buforowana na komputerze klienckim. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.CacheResults*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  id: ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia maksymalną ilość czasu, który klient czeka na serwerze w celu zwracania wyników. Jeśli serwer nie odpowie w tym momencie, wyszukiwanie zostało przerwane i żadne wyniki nie są zwracane."
  remarks: "Minimalna rozdzielczość tej właściwości jest jednej sekundzie. Części sekundy są ignorowane.       Jeśli <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>osiągnięciu, zanim upłynie limit czasu klienta, serwer zwraca wyniki i klient przestaje oczekiwania.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> Serwer maksymalny limit czasu wynosi 120 sekund."
  syntax:
    content: public TimeSpan ClientTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>struktury, która zawiera maksymalną ilość czasu na kliencie czekać na serwerze w celu zwracania wyników.</xref:System.TimeSpan>       Wartość domyślna to-1 sekundę, co oznacza czekanie w nieskończoność."
  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  id: DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość określającą, jak można rozpoznać aliasy obiektów, które zostały znalezione podczas wyszukiwania."
  remarks: ''
  example:
  - "The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \n  \n```  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n// Set DerefAlias to Always.  \nsrc.DerefAlias = DerefenceAlias.Always;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }
    return:
      type: System.DirectoryServices.DereferenceAlias
      description: "A <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref> wartość, która określa zachowanie, w którym jest wyłuskiwany aliasów. Domyślne ustawienie dla tej właściwości jest <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  id: DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia obiekt reprezentujący kontrolkę synchronizacji katalogu do użycia z wyszukiwania."
  remarks: "Kontrola synchronizacji katalogu, zwanymi powszechnie kontrolkę DirSync jest formant LDAP, który służy do wyszukiwania dla obiektów, które uległy zmianie od czasu poprzedniego stanu.       Aby uzyskać więcej informacji, zobacz temat &quot;[sondowanie zmian za pomocą formantu DirSync](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)&quot; w bibliotece MSDN pod [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "<xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> Obiektu dla wyszukiwania. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Jeśli nie należy używać kontroli synchronizacji katalogu."
  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Zwalnia zasoby zarządzane używane przez <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> obiekt oraz opcjonalnie zwalnia zasoby niezarządzane."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda zwalnia zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli zwalnia tylko zasoby niezarządzane."
  overload: System.DirectoryServices.DirectorySearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  id: ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą format nazwy wyróżniającej."
  remarks: ''
  example:
  - "The following example shows how to return a collection of distinguished names in hexadecimal format.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.ExtendedDN = ExtendedDN.HexString;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }
    return:
      type: System.DirectoryServices.ExtendedDN
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ExtendedDN&quot;> </xref> wartości."
  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Filter
  id: Filter
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą format ciąg filtru dostępu protokołu LDAP (Lightweight Directory)."
  remarks: "The filter uses the following guidelines:  \n  \n1.  The string must be enclosed in parentheses.  \n  \n2.  Expressions can use the relational operators: <, \\<=, =, >=, and >. An example is \"(objectClass=user)\". Another example is \"(lastName>=Davis)\".  \n  \n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \"(&(objectClass=user)(lastName= Davis))\". Another example is \"(&(objectClass=printer)(&#124;(building=42)(building=43)))\".  \n  \n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \"10:20:00 A.M. May 13, 1999\" becomes \"19990513102000Z\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \n  \n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \"8:52:58 P.M. March 23, 1999\" New Zealand Standard Time (the differential is 12 hours) is specified as \"19990323205258.0+1200\".  \n  \n For more information about the LDAP search string format, see \"Search Filter Syntax\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Ciąg filtru wyszukiwania w protokole LDAP formatu, takiego jak &quot;(objectClass=user)&quot;. Wartość domyślna to &quot;(objectClass=*)&quot;, która pobiera wszystkie obiekty."
  overload: System.DirectoryServices.DirectorySearcher.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Wykonuje wyszukiwanie i zwraca zbiór wpisów, które zostały znalezione."
  remarks: "Ze względu na ograniczenia implementacji <xref:System.DirectoryServices.SearchResultCollection>klasy nie można zwolnić wszystkie jej zasoby niezarządzane, gdy nadejdzie bezużytecznych.</xref:System.DirectoryServices.SearchResultCollection> Aby zapobiec przeciek pamięci, należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>metody podczas <xref:System.DirectoryServices.SearchResultCollection>obiektu nie jest już potrzebne.</xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>"
  syntax:
    content: public System.DirectoryServices.SearchResultCollection FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResultCollection
      description: "A <xref href=&quot;System.DirectoryServices.SearchResultCollection&quot;> </xref> obiektu zawierającego wyniki wyszukiwania."
  overload: System.DirectoryServices.DirectorySearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> nie jest kontenerem."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wyszukiwanie nie jest obsługiwane przez dostawcę, który jest używany."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Wykonuje wyszukiwanie i zwraca tylko pierwszy wpis, który można znaleźć."
  remarks: "Jeśli podczas wyszukiwania znajduje się więcej niż jednego wpisu, zwracany jest tylko pierwszy wpis. Jeśli nie są można odnaleźć wpisów do zgodne z kryteriami wyszukiwania, odwołanie o wartości null (`Nothing` w języku Visual Basic) jest zwracany."
  syntax:
    content: public System.DirectoryServices.SearchResult FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResult
      description: "A <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> obiekt, który zawiera pierwszej pozycji, która znajduje się podczas wyszukiwania."
  overload: System.DirectoryServices.DirectorySearcher.FindOne*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość określającą rozmiar strony w wyszukiwaniu stronicowanym."
  remarks: "Po Serwer odnalazł liczbę obiektów, które są określone przez właściwość PageSize, utworzy Zatrzymaj wyszukiwanie i zwracają wyniki do klienta. Gdy klient żąda większej ilości danych, serwer zostanie uruchomiony ponownie wyszukiwania, w którym zostało przerwane."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba obiektów, których serwer może zwrócić w wyszukiwaniu stronicowanym. Wartością domyślną jest zero, co oznacza, że nie wyszukiwanie stronicowane."
  overload: System.DirectoryServices.DirectorySearcher.PageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nowa wartość jest mniejsza od zera."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  id: PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera wartość wskazującą, listy właściwości do pobrania podczas wyszukiwania."
  remarks: "Aby pobrać określone właściwości, dodaj je do tej kolekcji przed rozpoczęciem wyszukiwania. Na przykład `searcher.PropertiesToLoad.Add(&quot;phone&quot;);` spowoduje dodanie właściwości telefonu do listy właściwości do pobrania w wyszukiwaniu.       Właściwość &quot;ADsPath&quot; są zawsze pobierane podczas wyszukiwania. Na [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] i starsze systemy operacyjne konto, które wykonuje wyszukiwania musi być członkiem grupy Administratorzy, aby pobrać właściwość ntSecurityDescriptor. Jeśli nie jest to możliwe, wartość właściwości, która jest zwracana do ntSecurityDescriptor będzie `null`. Aby uzyskać więcej informacji, zobacz temat &quot;NT —-deskryptora zabezpieczeń&quot; w bibliotece MSDN w [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> obiekt, który zawiera zbiór właściwości, aby pobrać podczas wyszukiwania.       Wartość domyślna to pusta <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, która pobiera wszystkie właściwości."
  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  id: PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, czy wyszukiwanie pobiera tylko nazwy atrybutów, na których zostały przypisane wartości."
  syntax:
    content: public bool PropertyNamesOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wyszukiwanie uzyskuje tylko nazwy atrybutów do wartości, które zostały przypisane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> uzyska wyszukiwanie nazwy i wartości dla wymaganych atrybutów. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  id: ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą sposób poszukiwania."
  remarks: "Jeśli wyszukiwania głównego nie została określona w kontekście nazewnictwa serwera lub gdy wyniki wyszukiwania przekraczają kontekst nazewnictwa (na przykład, jeśli masz domen podrzędnych i wyszukiwania w domenie nadrzędnej), serwer wysyła wiadomość odwołań do klienta, który klient może Ignoruj lub śledzą."
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Wartość nie jest jednym z <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  id: SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, węzeł w hierarchii usługi Active Directory, w której rozpoczyna się wyszukiwanie."
  remarks: "Jeśli SearchRoot jest odwołanie o wartości null (`Nothing` w języku Visual Basic), głównego wyszukiwania jest ustawiany na katalog główny domeny, która jest obecnie używany przez serwer.       Istnieje kilka sposobów wyszukiwania w wykazie globalnym: — Wyliczanie wykazu globalnego i wybierz pierwszy element podrzędny.      -Podaj nazwę serwera. Funkcja DsGetDcName można odnaleźć wykazu globalnego.  Aby uzyskać więcej informacji o funkcji DsGetDcName, zobacz temat &quot;DsGetDcName&quot; w bibliotece MSDN pod [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library).      — Pobierz RootDSE wykazu globalnego i poproś o &quot;rootNamingContext&quot;.      -Użyj wykazu globalnego, podając ścieżkę wyszukiwania tak, jakby przy użyciu protokołu LDAP. Na przykład &quot;GC: / / OU =..., DC =..., DC =...&quot;.      — W poniższym kodzie C# pokazano, jak wyliczyć wykazu globalnego, a następnie wybierz pierwszy element podrzędny.          ```c#       DirectoryEntry entry = new DirectoryEntry(&quot;GC://forestname&quot;);       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> Obiektu w hierarchii usług domenowych w usłudze Active Directory, gdy rozpoczyna się wyszukiwanie. Wartość domyślna to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  id: SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, zakres wyszukiwania, który jest uwzględniony przez serwer."
  syntax:
    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }
    return:
      type: System.DirectoryServices.SearchScope
      description: "Jeden z <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.SearchScope*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Wartość nie jest jednym z <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, w których dostęp do informacji o zabezpieczeniach dla określonych atrybutów ma zostać zwrócony przez wyszukiwanie."
  remarks: ''
  example:
  - "```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "Jeden z <xref href=&quot;System.DirectoryServices.SecurityMasks&quot;> </xref> wartości."
  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  id: ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość określającą maksymalną ilość czasu, który serwer powinien wyszukiwania dla pojedynczej strony wyników. Nie jest taka sama jak limit czasu całego wyszukiwania."
  remarks: "Minimalna rozdzielczość tej właściwości jest jednej sekundzie. Części sekundy są ignorowane.       Po osiągnięciu limitu czasu serwera zatrzymuje wyszukiwanie i zwraca wyniki do współdzielenia wskazujące oraz plik cookie zawierający informacje o tym, gdzie można wznowić wyszukiwanie.      > [!NOTE] > Ta właściwość ma zastosowanie tylko do wyszukiwania gdzie <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>ma ustawioną wartość, która nie jest to domyślna -1.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>"
  syntax:
    content: public TimeSpan ServerPageTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>reprezentujący ilość czasu, należy wyszukać serwera dla strony wyników.</xref:System.TimeSpan>       Wartość domyślna to-1 sekund, co oznacza, że wyszukiwanie w nieskończoność."
  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  id: ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "ServerTimeLimit właściwość pobiera lub ustawia wartość określającą maksymalną ilość czasu serwera spędza na wyszukiwanie. Po osiągnięciu limitu czasu, zwracane są tylko wpisów, które znajdują się do punktu."
  remarks: "Minimalna rozdzielczość tej właściwości jest jednej sekundzie. Części sekundy są ignorowane.       W odróżnieniu od <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>Właściwości, właściwość ServerTimeLimit wskazuje łączną ilość czasu, który serwer będzie spędzają na wyszukiwanie.</xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> Po osiągnięciu limitu czasu serwera zatrzymuje wyszukiwanie i zwraca wyniki, które współdzielenia do tego punktu.       ServerTimeLimit ustawioną wartość-1 sekundę używanie domyślnych ustalić serwera.      > [!NOTE] > Jeśli ServerTimeLimit zostanie ustawiona na wartość, która jest większy niż określony serwer domyślny 120 sekund, używana jest domyślna określona przez serwer. Po osiągnięciu limitu czasu serwera nie może kontynuować wyszukiwanie od miejsca, w którym."
  syntax:
    content: public TimeSpan ServerTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>reprezentujący ilość czasu, który serwer powinna przeszukać.</xref:System.TimeSpan>       Wartość domyślna to-1 sekund, co oznacza, że korzysta z domyślnego określony serwer 120 sekund."
  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  id: SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość określającą maksymalną liczbę obiektów, które serwer zwraca w wyszukiwaniu."
  remarks: "Zatrzymuje serwer wyszukiwania po osiągnięciu limitu rozmiaru i zwraca wyniki zebranych do tego punktu.      > [!NOTE] > Jeśli SizeLimit jest ustawiona na wartość większą niż wartość domyślna określona serwera 1000 wpisów, używana jest wartość domyślna określona przez serwer."
  syntax:
    content: public int SizeLimit { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba obiektów, które serwer zwraca w wyszukiwaniu. Wartością domyślną jest zero, co oznacza korzystanie z ustalić serwera domyślnego limitu rozmiaru 1000 wpisów."
  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nowa wartość jest mniejsza od zera."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Sort
  id: Sort
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, właściwości, na którym wyniki są sortowane."
  syntax:
    content: public System.DirectoryServices.SortOption Sort { get; set; }
    return:
      type: System.DirectoryServices.SortOption
      description: "A <xref href=&quot;System.DirectoryServices.SortOption&quot;> </xref> obiektu, który określa właściwość i kierunku, w którym mają być sortowane wyniki wyszukiwania na."
  overload: System.DirectoryServices.DirectorySearcher.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość właściwości jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (Nothing w języku Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  id: Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą, czy wyszukiwanie powinno zwrócić również usunięte obiekty zgodne z filtrem wyszukiwania."
  remarks: ''
  example:
  - "The following C# example shows how to set the Tombstone property to `true`.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Create a DirectorySearcher object.  \nDirectorySearcher src = new DirectorySearcher(\"(isDeleted=true)\");  \n//Set the Tombstone property to true.  \nsrc.Tombstone = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Tombstone { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli usunięte obiekty powinny być uwzględnione w wyszukiwania; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inaczej. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.Tombstone*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  id: VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera lub ustawia wartość wskazującą opcji widoku listy wirtualnej wyszukiwania."
  syntax:
    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }
    return:
      type: System.DirectoryServices.DirectoryVirtualListView
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryVirtualListView&quot;> </xref> obiekt, który zawiera informacje dotyczące wyszukiwania widoku listy wirtualnej. Wartość domyślna dla tej właściwości to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że nie należy używać opcji wyszukiwania widoku listy wirtualnej."
  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
- uid: System.DirectoryServices.SearchScope
  parent: System.DirectoryServices
  isExternal: false
  name: SearchScope
  nameWithType: SearchScope
  fullName: System.DirectoryServices.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DereferenceAlias
  parent: System.DirectoryServices
  isExternal: false
  name: DereferenceAlias
  nameWithType: DereferenceAlias
  fullName: System.DirectoryServices.DereferenceAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.ExtendedDN
  parent: System.DirectoryServices
  isExternal: false
  name: ExtendedDN
  nameWithType: ExtendedDN
  fullName: System.DirectoryServices.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
- uid: System.DirectoryServices.SearchResultCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResultCollection
  nameWithType: SearchResultCollection
  fullName: System.DirectoryServices.SearchResultCollection
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
- uid: System.DirectoryServices.SearchResult
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResult
  nameWithType: SearchResult
  fullName: System.DirectoryServices.SearchResult
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
- uid: System.DirectoryServices.SortOption
  parent: System.DirectoryServices
  isExternal: false
  name: SortOption
  nameWithType: SortOption
  fullName: System.DirectoryServices.SortOption
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
- uid: System.DirectoryServices.DirectoryVirtualListView
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryVirtualListView
  nameWithType: DirectoryVirtualListView
  fullName: System.DirectoryServices.DirectoryVirtualListView
- uid: System.DirectoryServices.DirectorySearcher.#ctor*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher.DirectorySearcher
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose
  nameWithType: DirectorySearcher.Dispose
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll
  nameWithType: DirectorySearcher.FindAll
- uid: System.DirectoryServices.DirectorySearcher.FindOne*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne
  nameWithType: DirectorySearcher.FindOne
- uid: System.DirectoryServices.DirectorySearcher.PageSize*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
- uid: System.DirectoryServices.DirectorySearcher.Tombstone*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
