### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedXml
  id: EncryptedXml
  children:
  - System.Security.Cryptography.Xml.EncryptedXml.#ctor
  - System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)
  - System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)
  - System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)
  - System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings
  - System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)
  - System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument
  - System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)
  - System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  - System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  - System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence
  - System.Security.Cryptography.Xml.EncryptedXml.Encoding
  - System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)
  - System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  - System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)
  - System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  - System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  - System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)
  - System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)
  - System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  - System.Security.Cryptography.Xml.EncryptedXml.Mode
  - System.Security.Cryptography.Xml.EncryptedXml.Padding
  - System.Security.Cryptography.Xml.EncryptedXml.Recipient
  - System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])
  - System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)
  - System.Security.Cryptography.Xml.EncryptedXml.Resolver
  - System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl
  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
  type: Class
  summary: "Reprezentuje model procesów wdrażania szyfrowanie XML."
  remarks: "Klasa EncryptedXml jest główna klasa używana do szyfrowania XML w programie .NET Framework. Szyfrowanie XML jest oparta na standardach i interoperacyjne możliwość szyfrowania całości lub części dokumentu XML lub dowolnych danych. Klasy szyfrowania .NET Framework XML implementować w sieci World Wide Web konsorcjum W3C specyfikacji szyfrowanie XML znajduje się w http://www.w3.org/TR/xmlenc-core/.       Należy użyć klasy EncryptedXml, gdy należy udostępnić zaszyfrowane dane XML między aplikacji lub organizacje w standardowy sposób. Wszystkie dane zaszyfrowane za pomocą tej klasy można odszyfrować przy implementacji specyfikacji W3C XML szyfrowania.       Szyfrowanie XML zastępuje wszelkie zwykłego tekstu — element XML lub dokument z `<EncryptedData>` element, który zawiera zaszyfrowane (lub szyfrowania tekst) reprezentacji w postaci zwykłego tekstu XML lub dowolnych danych. `<EncryptedData>` Element opcjonalnie może zawierać informacje o tym, gdzie znaleźć klucz, który będzie odszyfrować zaszyfrowanego tekstu, i który algorytm kryptograficzny był używany do szyfrowania zwykły tekst.       `<EncryptedKey>` Element jest podobny do `<EncryptedData>` element w stylu i użycia, z wyjątkiem, że umożliwia zaszyfrowanie klucza, który powoduje odszyfrowania wartość `<EncryptedData>` elementu. Należy pamiętać, że `<EncryptedKey>` elementu i `<EncryptedData>` element nigdy nie będzie zawierać klucz niezaszyfrowany.       Użyj jednej z następujących metod do wymiany informacji o kluczu:-nie zawierają żadnych informacji o kluczu. Jeśli wybierzesz tę opcję, obie strony należy uzgodnić algorytmu i klucza przed ich wymiany zaszyfrowanych danych.      -Należą: Lokalizacja klucza w atrybucie Identyfikator URI (Uniform Resource) `<RetrievalMethod>` elementu. Obie strony muszą wyrazić zgodę na lokalizację klucza wcześniejsze i tej lokalizacji muszą być trzymane.      -Include Nazwa ciągu, który jest mapowany na klucz w `<KeyName>` elementu. Obie strony należy uzgodnić mapowania nazw kluczy, przed ich wymiany zaszyfrowanych danych i tego mapowania muszą być trzymane.      -Include zaszyfrowanego klucza w `<EncryptedKey>` elementu. Obie strony muszą wyrazić zgodę na klucz odszyfrowujący zaszyfrowanego klucza przed ich wymiany zaszyfrowanych danych. Można opcjonalnie dołączyć nazwę lub lokalizację klucza, który powoduje odszyfrowania klucza w `<EncryptedKey>` elementu."
  example:
  - "The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.  \n  \n [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/cpp/t-system.security.crypto_84_1.cpp)]\n [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_1.vb)]\n [!code-cs[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/csharp/t-system.security.crypto_84_1.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/t-system.security.crypto_84_2.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_2.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/t-system.security.crypto_84_2.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_3.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/t-system.security.crypto_84_3.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/t-system.security.crypto_84_3.cpp)]  \n  \n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_84_4.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_4.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/t-system.security.crypto_84_4.cpp)]  \n  \n The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/t-system.security.crypto_84_5.cpp)]\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/t-system.security.crypto_84_5.cs)]\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_5.vb)]"
  syntax:
    content: public class EncryptedXml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: EncryptedXml()
  nameWithType: EncryptedXml.EncryptedXml()
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> klasy."
  remarks: "Jest to domyślny konstruktor dla klasy głównym XML szyfrowania w programie .NET Framework."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/m-system.security.crypto_40_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/m-system.security.crypto_40_1.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_2.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/m-system.security.crypto_40_2.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/m-system.security.crypto_40_2.cpp)]  \n  \n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_40_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/m-system.security.crypto_40_3.cpp)]  \n  \n The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/m-system.security.crypto_40_4.cpp)]\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/m-system.security.crypto_40_4.cs)]\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_4.vb)]"
  syntax:
    content: public EncryptedXml ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: EncryptedXml(XmlDocument)
  nameWithType: EncryptedXml.EncryptedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> przy użyciu określonego dokumentu XML."
  remarks: "Ten konstruktor umożliwia tworzenie <xref:System.Security.Cryptography.Xml.EncryptedXml>obiektu, jeśli chcesz określić dokument XML do zaszyfrowania.</xref:System.Security.Cryptography.Xml.EncryptedXml>  `document` Parametr składa się z elementów XML, które tworzą później zaszyfrowanego pliku XML."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/bed2a575-be89-45fe-b5dc-_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/bed2a575-be89-45fe-b5dc-_1.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/bed2a575-be89-45fe-b5dc-_1.cpp)]  \n  \n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/bed2a575-be89-45fe-b5dc-_2.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/bed2a575-be89-45fe-b5dc-_2.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/bed2a575-be89-45fe-b5dc-_2.cpp)]"
  syntax:
    content: public EncryptedXml (System.Xml.XmlDocument document);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> Używaną do inicjalizacji obiektu <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.EncryptedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)
  id: '#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)'
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: EncryptedXml(XmlDocument,Evidence)
  nameWithType: EncryptedXml.EncryptedXml(XmlDocument,Evidence)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument,Evidence)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> przy użyciu określonego dokumentu XML i dokumenty."
  remarks: "Ten konstruktor umożliwia tworzenie <xref:System.Security.Cryptography.Xml.EncryptedXml>obiektu, jeśli chcesz określić dokument XML do szyfrowania i podaj dowodów zabezpieczeń.</xref:System.Security.Cryptography.Xml.EncryptedXml> `document` Parametr składa się z elementów XML, które tworzą później zaszyfrowanego pliku XML."
  syntax:
    content: public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> Używaną do inicjalizacji obiektu <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> obiektu."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> Obiekt skojarzony z <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.EncryptedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)
  id: AddKeyNameMapping(System.String,System.Object)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: AddKeyNameMapping(String,Object)
  nameWithType: EncryptedXml.AddKeyNameMapping(String,Object)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(String,Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Definiuje mapowanie nazwy klucza i symetrycznego klucza lub klucza asymetrycznego."
  remarks: "Metoda AddKeyNameMapping umożliwia mapowanie klucza symetrycznego lub klucza asymetrycznego do nazwy ciągu. Ta metoda dodaje wartości `keyName` i `keyObject` mapowania nazw parametrów do tabeli prawidłowy klucz.       Użyj <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A>metodę, aby wyczyścić tabeli mapowania nazw kluczy.</xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A>"
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/cpp/a586411f-1e2f-4c31-afeb-_1.cpp)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/csharp/a586411f-1e2f-4c31-afeb-_1.cs)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/visualbasic/a586411f-1e2f-4c31-afeb-_1.vb)]"
  syntax:
    content: public void AddKeyNameMapping (string keyName, object keyObject);
    parameters:
    - id: keyName
      type: System.String
      description: "Nazwa do mapowania na `keyObject`."
    - id: keyObject
      type: System.Object
      description: "Klucz symetryczny do mapowania na `keyName`."
  overload: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> keyName </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> keyObject </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość <code> keyObject </code> parametr nie jest algorytmu RSA lub klucza symetrycznego."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings
  id: ClearKeyNameMappings
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: ClearKeyNameMappings()
  nameWithType: EncryptedXml.ClearKeyNameMappings()
  fullName: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Resetuje wszystkie mapowania nazw kluczy."
  remarks: "Ta metoda umożliwia usunięcie wszystkich mapowania nazwy klucza ustawiony przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>metody.</xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>"
  syntax:
    content: public void ClearKeyNameMappings ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)
  id: DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: DecryptData(EncryptedData,SymmetricAlgorithm)
  nameWithType: EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Odszyfrowuje <xref uid=&quot;langword_csharp_&lt;EncryptedData&gt;&quot; name=&quot;&lt;EncryptedData&gt;&quot; href=&quot;&quot;> </xref> elementu za pomocą określonego algorytmu symetrycznego."
  remarks: "Odszyfrowywanie przy użyciu metody DecryptData <xref:System.Security.Cryptography.Xml.EncryptedData>elementu za pomocą klucza symetrycznego.</xref:System.Security.Cryptography.Xml.EncryptedData>       Należy pamiętać, że metoda DecryptData tylko odszyfrowuje najwyższego poziomu `EncryptedData`> tagów.  W przypadkach, gdy co najmniej jeden `EncryptedData`> znaczniki zostały zaszyfrowane i znajdują się na wyższym poziomie `EncryptedData`> tagi, należy wywołać <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>metody osobno dla każdego z nich.</xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>  Zobacz <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>metodę dla przykładowego kodu.</xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>"
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/ff5da254-8fa1-47c6-b66b-_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/ff5da254-8fa1-47c6-b66b-_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/ff5da254-8fa1-47c6-b66b-_1.cs)]"
  syntax:
    content: public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);
    parameters:
    - id: encryptedData
      type: System.Security.Cryptography.Xml.EncryptedData
      description: "Dane do odszyfrowania."
    - id: symmetricAlgorithm
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "Klucz symetryczny używany do odszyfrowywania `encryptedData`."
    return:
      type: System.Byte[]
      description: "Tablicę bajtów zawierającą nieprzetworzonego odszyfrować zwykłego tekstu."
  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> encryptedData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> symmetricAlgorithm </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument
  id: DecryptDocument
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: DecryptDocument()
  nameWithType: EncryptedXml.DecryptDocument()
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Odszyfrowuje wszystkie <xref uid=&quot;langword_csharp_&lt;EncryptedData&gt;&quot; name=&quot;&lt;EncryptedData&gt;&quot; href=&quot;&quot;> </xref> elementów dokumentu w formacie XML, które zostały określone podczas inicjowania <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> klasy."
  remarks: "Metoda DecryptDocument odszyfrowuje wszystkie `<EncryptedData>` elementów dokumentu XML załadowane w czasie inicjowania. Po wywołaniu tej metody, wszystkie `<EncryptedData>` elementów w dokumencie zostają zastąpione wersje w postaci zwykłego tekstu.       Metoda DecryptDocument odszyfrowuje tylko najwyższego poziomu `<EncryptedData>` elementów.  Jeśli potrzebujesz do odszyfrowania zaszyfrowanych super dokumentu (dokument jest zaszyfrowany więcej niż raz), metoda DecryptDocument należy wywołać wielokrotnie aż wszystkie `<EncryptedData>` odszyfrowana elementów.      > [!NOTE] > DecryptDocument metody odszyfrowuje tylko prawidłowych danych XML. Aby odszyfrować dowolne dane, należy użyć <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>metody.</xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>       Korzystanie z szyfrowania XML za pomocą certyfikatów X.509, musi mieć rozszerzony dostawca usług kryptograficznych Microsoft zainstalowane i certyfikatu X.509 musi używać dostawcy rozszerzonego. Jeśli nie masz rozszerzony dostawca usług kryptograficznych Microsoft zainstalowane lub certyfikatu X.509 nie używa dostawcy rozszerzonego <xref:System.Security.Cryptography.CryptographicException>z &quot;Unknown Error&quot; będą zgłaszane podczas odszyfrowywania dokumentu XML.</xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_11_1.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_11_1.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/m-system.security.crypto_11_1.cpp)]  \n  \n The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/m-system.security.crypto_11_2.cpp)]\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/m-system.security.crypto_11_2.cs)]\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/m-system.security.crypto_11_2.vb)]  \n  \n The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.  \n  \n [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/add/codesnippet/visualbasic/m-system.security.crypto_11_3.vb)]\n [!code-cs[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/add/codesnippet/csharp/m-system.security.crypto_11_3.cs)]"
  syntax:
    content: public void DecryptDocument ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie znaleziono klucza kryptograficznego używanego do odszyfrowywania dokumentu."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)
  id: DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: DecryptEncryptedKey(EncryptedKey)
  nameWithType: EncryptedXml.DecryptEncryptedKey(EncryptedKey)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Określa klucz reprezentowany przez <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> elementu."
  remarks: "Metoda DecryptEncryptedKey odszyfrowuje zaszyfrowany klucz zawartych w `<EncryptedKey>` element dokumentu XML.       Ta metoda rekursywna znajduje klucz reprezentowany przez <xref:System.Security.Cryptography.Xml.EncryptedKey>obiektu.</xref:System.Security.Cryptography.Xml.EncryptedKey> Należy pamiętać, że <xref:System.Security.Cryptography.Xml.EncryptedKey>obiekt może zawierać innego <xref:System.Security.Cryptography.Xml.EncryptedKey>obiekt, który określa jego <xref:System.Security.Cryptography.Xml.KeyInfo>wartość.</xref:System.Security.Cryptography.Xml.KeyInfo> </xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey>"
  syntax:
    content: public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);
    parameters:
    - id: encryptedKey
      type: System.Security.Cryptography.Xml.EncryptedKey
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> Obiekt, który zawiera klucz do pobrania."
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera klucz."
  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> encryptedKey </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość <code> encryptedKey </code> parametr nie jest algorytm Triple DES klucza zawijać lub zawijaniu klucza szyfrowania AES (Advanced Standard) algorytm (nazywanych również Rijndael)."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  id: DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: DecryptKey(Byte[],SymmetricAlgorithm)
  nameWithType: EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Odszyfrowuje <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elementu za pomocą algorytmu symetrycznego."
  remarks: "<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>Metody odszyfrowuje zaszyfrowany klucz zawartych w `<EncryptedKey>` element dokumentu XML.</xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> Ta metoda przyjmuje wartość `symmetricAlgorithm` parametr, który reprezentuje algorytm Triple DES lub algorytm zawijania klucza AES (nazywanych również Rijndael)."
  syntax:
    content: public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);
    parameters:
    - id: keyData
      type: System.Byte[]
      description: "Tablica bajtów reprezentujący zaszyfrowanych <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elementu."
    - id: symmetricAlgorithm
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "Klucz symetryczny używany do odszyfrowywania `keyData`."
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera klucz zwykłego tekstu."
  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> keyData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> symmetricAlgorithm </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość <code> symmetricAlgorithm </code> element nie jest algorytm Triple DES klucza zawijać lub zawijaniu klucza szyfrowania AES (Advanced Standard) algorytm (nazywanych również Rijndael)."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  id: DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: DecryptKey(Byte[],RSA,Boolean)
  nameWithType: EncryptedXml.DecryptKey(Byte[],RSA,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],RSA,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Odszyfrowuje <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elementu za pomocą algorytmu asymetrycznego."
  remarks: "Metoda DecryptKey odszyfrowuje zaszyfrowany klucz zawartych w `<EncryptedKey>` element dokumentu XML. Ta metoda przyjmuje wartość `rsa` parametr, który reprezentuje algorytmu RSA PKCS #1 w wersji 1.5 lub algorytm typu 2 RSA PKCS #1 (nazywanych również uzupełniania OAEP)."
  syntax:
    content: public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);
    parameters:
    - id: keyData
      type: System.Byte[]
      description: "Tablica bajtów reprezentujący zaszyfrowanych <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elementu."
    - id: rsa
      type: System.Security.Cryptography.RSA
      description: "Używane do odszyfrowania klucza asymetrycznego `keyData`."
    - id: useOAEP
      type: System.Boolean
      description: "Wartość, która określa, czy użyć optymalne dopełnienie asymetrycznego szyfrowania (OAEP)."
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera klucz zwykłego tekstu."
  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> keyData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> rsa </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence
  id: DocumentEvidence
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: DocumentEvidence
  nameWithType: EncryptedXml.DocumentEvidence
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia dowody <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> obiektu, z którego <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> konstruowania obiektu."
  remarks: "Jeśli dokument XML używany do tworzenia <xref:System.Security.Cryptography.Xml.EncryptedXml>obiekt ma dowodów zabezpieczeń, należy dodać dowody dla właściwości DocumentEvidence.</xref:System.Security.Cryptography.Xml.EncryptedXml>  Jeśli nie ustawisz tę właściwość, powiązane <xref:System.Security.Cryptography.Xml.CipherReference>obiektów nie będzie wyłuskiwany, ponieważ są one będą nie można przyznać wymaganych uprawnień.</xref:System.Security.Cryptography.Xml.CipherReference>"
  syntax:
    content: public System.Security.Policy.Evidence DocumentEvidence { get; set; }
    return:
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> Obiektu."
  overload: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: Encoding
  nameWithType: EncryptedXml.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia kodowanie używane do szyfrowania XML."
  remarks: "Kodowanie UTF-8 jest domyślne kodowanie szyfrowanie XML. Ta właściwość służy do określenia kodowania z innych typów <xref:System.Text.Encoding>klasy, takich jak UTF-16 lub ASCII.</xref:System.Text.Encoding>"
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>Obiektu.</xref:System.Text.Encoding>"
  overload: System.Security.Cryptography.Xml.EncryptedXml.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: Encrypt(XmlElement,X509Certificate2)
  nameWithType: EncryptedXml.Encrypt(XmlElement,X509Certificate2)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,X509Certificate2)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Szyfruje zewnętrzne XML elementu przy użyciu określonego certyfikatu X.509."
  remarks: "Metoda szyfrowania to wygodny sposób do zewnętrznego kodu XML elementu za pomocą certyfikatu szyfrowania. Ta metoda generuje klucz sesji 256-bitowego szyfrowania AES (Advanced Standard) do zaszyfrowania — element XML szyfruje i loguje się AES klucza użyciu <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiektu.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Następnie metoda Szyfruj zwraca wynikowy kod XML jako <xref:System.Security.Cryptography.Xml.EncryptedData>elementu.</xref:System.Security.Cryptography.Xml.EncryptedData>       Jeśli potrzebujesz większej kontroli nad szyfrowania, więc możesz umieścić zaszyfrowanych informacji w `<CipherReference>` element lub określ, czy cały element XML lub tylko jego zawartość powinna być szyfrowane, użyj <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>przeciążenia metody.</xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>       Korzystanie z szyfrowania XML za pomocą certyfikatów X.509, musi mieć rozszerzony dostawca usług kryptograficznych Microsoft zainstalowane i certyfikatu X.509 musi używać dostawcy rozszerzonego. Jeśli nie masz rozszerzony dostawca usług kryptograficznych Microsoft zainstalowane lub certyfikatu X.509 nie używa dostawcy rozszerzonego <xref:System.Security.Cryptography.CryptographicException>z &quot;Unknown Error&quot; będą zgłaszane podczas odszyfrowywania dokumentu XML.</xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/7bb06d56-e2dc-41d6-92d8-_1.cpp)]\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/7bb06d56-e2dc-41d6-92d8-_1.cs)]\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/7bb06d56-e2dc-41d6-92d8-_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: inputElement
      type: System.Xml.XmlElement
      description: "Element XML do szyfrowania."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Certyfikat X.509 do użycia na potrzeby szyfrowania."
    return:
      type: System.Security.Cryptography.Xml.EncryptedData
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> Elementu, który reprezentuje zaszyfrowanych danych XML."
  overload: System.Security.Cryptography.Xml.EncryptedXml.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> inputElement </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> certificate </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wartość <code> certificate </code> parametru nie reprezentuje algorytm klucza RSA."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)
  id: Encrypt(System.Xml.XmlElement,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: Encrypt(XmlElement,String)
  nameWithType: EncryptedXml.Encrypt(XmlElement,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Szyfruje zewnętrzne XML elementu przy użyciu określonego klucza w tabeli mapowania klucza."
  remarks: "Ta metoda jest to wygodny sposób na zewnętrzne XML elementu przy użyciu nazwy klucza szyfrowania. Jeśli potrzebujesz większej kontroli nad szyfrowania, więc możesz umieścić zaszyfrowanych informacji w `<CipherReference>` element lub określ, czy cały element XML lub tylko jego zawartość powinna być szyfrowane, użyj <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>przeciążenia metody.</xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>       Aby uzyskać listę wszystkich obsługiwanych algorytmów należy zapoznać się z listą stałych pól skojarzonych z <xref:System.Security.Cryptography.Xml.EncryptedXml>klasy.</xref:System.Security.Cryptography.Xml.EncryptedXml>"
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/cpp/2d0ce5a9-0f26-45bd-862b-_1.cpp)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/csharp/2d0ce5a9-0f26-45bd-862b-_1.cs)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/visualbasic/2d0ce5a9-0f26-45bd-862b-_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);
    parameters:
    - id: inputElement
      type: System.Xml.XmlElement
      description: "Element XML do szyfrowania."
    - id: keyName
      type: System.String
      description: "Nazwa klucza, która znajduje się w tabeli mapowania klucza."
    return:
      type: System.Security.Cryptography.Xml.EncryptedData
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> Obiekt, który reprezentuje zaszyfrowanych danych XML."
  overload: System.Security.Cryptography.Xml.EncryptedXml.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> inputElement </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> keyName </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość <code> keyName </code> parametru jest niezgodny z pary zarejestrowaną nazwę klucza.       - lub - klucza kryptograficznego opisanego przez <code> keyName </code> parametr nie jest obsługiwany."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  id: EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: EncryptData(Byte[],SymmetricAlgorithm)
  nameWithType: EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Szyfruje dane w określonej tablicy bajtów przy użyciu określonego algorytmu symetrycznego."
  remarks: "Tablica bajtów zwrócona mogą być umieszczane w `<CipherValue>` elementu. Ta metoda przyjęto założenie, że dane określone w `plaintext` parametr ma tablicę bajtów zawierającą dane XML."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/b0a4c1de-8575-4f7f-8804-_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/b0a4c1de-8575-4f7f-8804-_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/b0a4c1de-8575-4f7f-8804-_1.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/b0a4c1de-8575-4f7f-8804-_2.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/b0a4c1de-8575-4f7f-8804-_2.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/b0a4c1de-8575-4f7f-8804-_2.cpp)]  \n  \n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/b0a4c1de-8575-4f7f-8804-_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/b0a4c1de-8575-4f7f-8804-_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/b0a4c1de-8575-4f7f-8804-_3.cpp)]"
  syntax:
    content: public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);
    parameters:
    - id: plaintext
      type: System.Byte[]
      description: "Dane do zaszyfrowania."
    - id: symmetricAlgorithm
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "Algorytmu symetrycznego do użycia na potrzeby szyfrowania."
    return:
      type: System.Byte[]
      description: "Tablica bajtów zaszyfrowanych danych."
  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> plaintext </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> symmetricAlgorithm </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można zaszyfrować dane przy użyciu określonych parametrów."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)
  id: EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: EncryptData(XmlElement,SymmetricAlgorithm,Boolean)
  nameWithType: EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Szyfruje określony element lub jego zawartość przy użyciu określonego algorytmu symetrycznego."
  remarks: "Dane tablicy bajtów zwróconych jest wartością `<CipherValue>` elementu."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/58e919c7-3675-40a5-8022-_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/58e919c7-3675-40a5-8022-_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/58e919c7-3675-40a5-8022-_1.cs)]"
  syntax:
    content: public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);
    parameters:
    - id: inputElement
      type: System.Xml.XmlElement
      description: "Element lub jego zawartość do szyfrowania."
    - id: symmetricAlgorithm
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "Algorytmu symetrycznego do użycia na potrzeby szyfrowania."
    - id: content
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zaszyfrować tylko zawartość elementu; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> można zaszyfrować cały element."
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera dane zaszyfrowane."
  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> inputElement </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> symmetricAlgorithm </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  id: EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: EncryptKey(Byte[],SymmetricAlgorithm)
  nameWithType: EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Szyfruje klucz przy użyciu algorytmu symetrycznego, używaną do odszyfrowania adresata <xref uid=&quot;langword_csharp_&lt;EncryptedData&gt;&quot; name=&quot;&lt;EncryptedData&gt;&quot; href=&quot;&quot;> </xref> elementu."
  remarks: "Adresat używa do odszyfrowania klucza szyfrowania przy użyciu metody EncryptKey `<EncryptedData>` elementu. Ta metoda przyjmuje wartość `symmetricAlgorithm` parametr, który reprezentuje algorytm Triple DES lub algorytm zawijania klucza AES (nazywanych również Rijndael).       Należy pamiętać, że ta metoda nie automatycznie umieszcza zaszyfrowanego klucza w ramach `<EncryptedKey>` elementu.  Należy ręcznie utworzyć `<EncryptedKey>` element w dokumencie."
  syntax:
    content: public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);
    parameters:
    - id: keyData
      type: System.Byte[]
      description: "Klucz szyfrowania."
    - id: symmetricAlgorithm
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "Klucz symetryczny stosowany do szyfrowania `keyData`."
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który reprezentuje zaszyfrowaną wartość <code> keyData </code> parametru."
  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> keyData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> symmetricAlgorithm </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość <code> symmetricAlgorithm </code> parametr nie jest algorytm Triple DES klucza zawijać lub zawijaniu klucza szyfrowania AES (Advanced Standard) algorytm (nazywanych również Rijndael)."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  id: EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: EncryptKey(Byte[],RSA,Boolean)
  nameWithType: EncryptedXml.EncryptKey(Byte[],RSA,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],RSA,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Szyfruje klucz adresat używa do odszyfrowania <xref uid=&quot;langword_csharp_&lt;EncryptedData&gt;&quot; name=&quot;&lt;EncryptedData&gt;&quot; href=&quot;&quot;> </xref> elementu."
  remarks: "Adresat używa do odszyfrowania klucza szyfrowania przy użyciu metody EncryptKey `<EncryptedData>` elementu. Ta metoda przyjmuje wartość `rsa` reprezentujący algorytmu RSA PKCS #1 w wersji 1.5 lub algorytm typu 2 RSA PKCS #1 (nazywanych również OAEP).       Należy pamiętać, że ta metoda nie automatycznie umieszcza zaszyfrowanego klucza w ramach `<EncryptedKey>` elementu.  Należy ręcznie utworzyć `<EncryptedKey>` element w dokumencie."
  example:
  - "The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/f1ea466e-2516-4b63-bd31-_1.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/f1ea466e-2516-4b63-bd31-_1.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/f1ea466e-2516-4b63-bd31-_1.cpp)]"
  syntax:
    content: public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);
    parameters:
    - id: keyData
      type: System.Byte[]
      description: "Klucz szyfrowania."
    - id: rsa
      type: System.Security.Cryptography.RSA
      description: "Używany do szyfrowania klucza asymetrycznego `keyData`."
    - id: useOAEP
      type: System.Boolean
      description: "Wartość, która określa, czy użyć optymalne dopełnienie asymetrycznego szyfrowania (OAEP)."
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który reprezentuje zaszyfrowaną wartość <code> keyData </code> parametru."
  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> keyData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> rsa </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)
  id: GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: GetDecryptionIV(EncryptedData,String)
  nameWithType: EncryptedXml.GetDecryptionIV(EncryptedData,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(EncryptedData,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera odszyfrowywania wektor inicjowania (IV) z <xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> obiektu."
  remarks: "Podane <xref:System.Security.Cryptography.Xml.EncryptedData>obiektu, ta metoda pobiera odszyfrowywania wektor inicjowania (IV).</xref:System.Security.Cryptography.Xml.EncryptedData> Domyślne zachowanie pobiera IV jako pierwsze bajty <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>tablicy bajtów.</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>       Lista wartości identyfikatora URI (Uniform Resource) obsługiwany przez `symmetricAlgorithmUri` parametru, wyświetlić listę stałych pól skojarzonych z <xref:System.Security.Cryptography.Xml.EncryptedXml>klasy.</xref:System.Security.Cryptography.Xml.EncryptedXml>"
  syntax:
    content: public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);
    parameters:
    - id: encryptedData
      type: System.Security.Cryptography.Xml.EncryptedData
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> Obiekt, który zawiera wektor inicjowania (IV) do pobrania."
    - id: symmetricAlgorithmUri
      type: System.String
      description: "URI Uniform Resource Identifier () opisujący algorytm kryptograficzny skojarzone z `encryptedData` wartości."
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera odszyfrowywania wektor inicjowania (IV)."
  overload: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> encryptedData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość <code> encryptedData </code> parametr ma <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*>właściwość, która ma wartość null.</xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*>       - lub - wartość <code> symmetricAlgorithmUrisymAlgUri </code> parametr nie jest obsługiwany algorytm."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)
  id: GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: GetDecryptionKey(EncryptedData,String)
  nameWithType: EncryptedXml.GetDecryptionKey(EncryptedData,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera klucz odszyfrowujący z określonego <xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> obiektu."
  remarks: "Podane <xref:System.Security.Cryptography.Xml.EncryptedData>obiektu, ta metoda sprawdza klucz odszyfrowujący, który może służyć do pobierania danych zwykły tekst.</xref:System.Security.Cryptography.Xml.EncryptedData> Jeśli zostanie określona nazwa klucza, metoda szuka algorytmu symetrycznego lub algorytmu asymetrycznego skojarzony z nazwą klucza, zgodnie z definicją w mapowania nazw kluczy. W przeciwnym razie jeśli metoda pobierania lub <xref:System.Security.Cryptography.Xml.EncryptedKey>obiektu jest określony, to metoda ładuje <xref:System.Security.Cryptography.Xml.EncryptedKey>obiektu i wywołuje metodę GetDecryptionKey.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey>"
  syntax:
    content: public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);
    parameters:
    - id: encryptedData
      type: System.Security.Cryptography.Xml.EncryptedData
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> Obiekt, który zawiera klucz odszyfrowujący do pobrania."
    - id: symmetricAlgorithmUri
      type: System.String
      description: "Rozmiar klucza odszyfrowującego do pobrania."
    return:
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "A <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm&quot;> </xref> obiekt skojarzony z klucz odszyfrowywania."
  overload: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> encryptedData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Parametr encryptedData ma <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*>właściwość, która ma wartość null.</xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*>       - lub - zaszyfrowanego klucza nie można pobrać przy użyciu określonych parametrów."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  id: GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: GetIdElement(XmlDocument,String)
  nameWithType: EncryptedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(XmlDocument,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Określa, jak rozwiązać wewnętrzne odwołania jednolity identyfikator zasobów (URI)."
  remarks: "Metoda GetIdElement Określa, jak rozwiązać wewnętrzny Uniform Resource Identifier (URI). Wygląda na to elementy o określonej wartości lub elementy o określonej wartości atrybutu ID."
  syntax:
    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> Obiekt, który zawiera element o identyfikatorze."
    - id: idValue
      type: System.String
      description: "Ciąg reprezentujący wartość Identyfikatora."
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Obiekt, który zawiera identyfikator wskazujący jak wewnętrzne Uniform Resource Identifier (URI), które mają być rozpoznawane."
  overload: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.Mode
  id: Mode
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: Mode
  nameWithType: EncryptedXml.Mode
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Mode
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia tryb szyfrowania używany do szyfrowania XML."
  remarks: "Cipher Block Chaining (CBC) tryb jest to domyślny tryb szyfru szyfrowania XML. Ta właściwość służy do określania inne formy szyfrowania <xref:System.Security.Cryptography.CipherMode>wyliczenia, takim jak tryb Cipher Feedback (CFB).</xref:System.Security.Cryptography.CipherMode>"
  syntax:
    content: public System.Security.Cryptography.CipherMode Mode { get; set; }
    return:
      type: System.Security.Cryptography.CipherMode
      description: "Jeden z <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> wartości."
  overload: System.Security.Cryptography.Xml.EncryptedXml.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.Padding
  id: Padding
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: Padding
  nameWithType: EncryptedXml.Padding
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Padding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia tryb uzupełniania używany do szyfrowania XML."
  remarks: "Wypełnienie ISO&10126; to domyślny tryb uzupełniania szyfrowanie XML. Ta właściwość służy do określenia innych trybów dopełnienie <xref:System.Security.Cryptography.PaddingMode>wyliczenia, takich jak ANSI X9.23 lub PKCS&#5;.</xref:System.Security.Cryptography.PaddingMode>"
  syntax:
    content: public System.Security.Cryptography.PaddingMode Padding { get; set; }
    return:
      type: System.Security.Cryptography.PaddingMode
      description: "Jeden z <xref href=&quot;System.Security.Cryptography.PaddingMode&quot;> </xref> wartości, które określają typ uzupełnienia używany do szyfrowania."
  overload: System.Security.Cryptography.Xml.EncryptedXml.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.Recipient
  id: Recipient
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: Recipient
  nameWithType: EncryptedXml.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Recipient
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia odbiorca zaszyfrowanego klucza informacji."
  remarks: "Dostęp można uzyskać <xref:System.Security.Cryptography.Xml.EncryptedXml>obiektu odwołuje się nazwa klucza, sprawdzając <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A>Właściwości.</xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> </xref:System.Security.Cryptography.Xml.EncryptedXml>       Użyj właściwości odbiorcy do identyfikowania <xref:System.Security.Cryptography.Xml.EncryptedXml>element, który jest bieżącym odbiorca może odszyfrować można pobrać klucza odszyfrowującego.</xref:System.Security.Cryptography.Xml.EncryptedXml>"
  syntax:
    content: public string Recipient { get; set; }
    return:
      type: System.String
      description: "Odbiorca dane zaszyfrowanego klucza."
  overload: System.Security.Cryptography.Xml.EncryptedXml.Recipient*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])
  id: ReplaceData(System.Xml.XmlElement,System.Byte[])
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: ReplaceData(XmlElement,Byte[])
  nameWithType: EncryptedXml.ReplaceData(XmlElement,Byte[])
  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(XmlElement,Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Zastępuje <xref uid=&quot;langword_csharp_&lt;EncryptedData&gt;&quot; name=&quot;&lt;EncryptedData&gt;&quot; href=&quot;&quot;> </xref> element z określonym odszyfrowane sekwencję bajtów."
  remarks: "Zastępuje metodę ReplaceData `<EncryptedData>` elementu o wartości `decryptedData` parametru."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/0a737bfb-9606-4369-9de9-_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/0a737bfb-9606-4369-9de9-_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/0a737bfb-9606-4369-9de9-_1.cs)]"
  syntax:
    content: public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);
    parameters:
    - id: inputElement
      type: System.Xml.XmlElement
      description: "<xref uid=&quot;langword_csharp_&lt;EncryptedData&gt;&quot; name=&quot;&lt;EncryptedData&gt;&quot; href=&quot;&quot;> </xref> Elementu do zamiany."
    - id: decryptedData
      type: System.Byte[]
      description: "Odszyfrowane dane, aby zastąpić `inputElement` z."
  overload: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> inputElement </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> decryptedData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)
  id: ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: ReplaceElement(XmlElement,EncryptedData,Boolean)
  nameWithType: EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Zamienia określony element z określonym <xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> obiektu."
  remarks: "Zastępuje metodę ReplaceElement `inputElement` parametru z wartością określoną przez `encryptedData` parametru."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/3d927817-a643-42d1-b283-_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/3d927817-a643-42d1-b283-_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/3d927817-a643-42d1-b283-_1.cs)]"
  syntax:
    content: public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);
    parameters:
    - id: inputElement
      type: System.Xml.XmlElement
      description: "Element, aby zastąpić <xref uid=&quot;langword_csharp_&lt;EncryptedData&gt;&quot; name=&quot;&lt;EncryptedData&gt;&quot; href=&quot;&quot;> </xref> elementu."
    - id: encryptedData
      type: System.Security.Cryptography.Xml.EncryptedData
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> Obiekt, aby zastąpić `inputElement` parametr."
    - id: content
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zastąpić tylko zawartość elementu; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> zastąpić cały element."
  overload: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> inputElement </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - wartość <code> encryptedData </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: Resolver
  nameWithType: EncryptedXml.Resolver
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> obiekt używany do rozpoznawania odwołań zewnętrznych XML w modelu DOM (Document Object)."
  remarks: "Ta właściwość zawiera <xref:System.Xml.XmlResolver>obiekt używany do rozpoznawania zewnętrznych zasobów XML, takich jak jednostki, definicji typu dokumentu (pliki DTD) lub schematów.</xref:System.Xml.XmlResolver>"
  syntax:
    content: public System.Xml.XmlResolver Resolver { get; set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Obiektu."
  overload: System.Security.Cryptography.Xml.EncryptedXml.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth
  id: XmlDSigSearchDepth
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlDSigSearchDepth
  nameWithType: EncryptedXml.XmlDSigSearchDepth
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub Ustawia głębokość rekursji XML podpisu cyfrowego, aby uniknąć nieskończoną rekursję i przepełnienia stosu. Taka sytuacja może wystąpić, jeśli podpis cyfrowy XML zawiera identyfikator URI, który następnie punktów wstecz do oryginalnego pliku XML."
  syntax:
    content: public int XmlDSigSearchDepth { get; set; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>"
  overload: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl
  id: XmlEncAES128KeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncAES128KeyWrapUrl
  nameWithType: EncryptedXml.XmlEncAES128KeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu zawijaniu klucza szyfrowania AES (Advanced Standard) 128-bitowego (znanej także jako zawijaniu klucza Rijndael algorytm). To pole jest stałą."
  remarks: "Wartość pola XmlEncAES128KeyWrapUrl jest &quot;http://www.w3.org/2001/04/xmlenc#kw-aes128&quot;."
  syntax:
    content: public const string XmlEncAES128KeyWrapUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url
  id: XmlEncAES128Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncAES128Url
  nameWithType: EncryptedXml.XmlEncAES128Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu szyfrowania AES (Advanced Standard) 128-bitowego (znanej także jako algorytmu Rijndael). To pole jest stałą."
  remarks: "Wartość pola XmlEncAES128Url jest &quot;http://www.w3.org/2001/04/xmlenc#aes128-cbc&quot;."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_11_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_11_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_11_1.cs)]"
  syntax:
    content: public const string XmlEncAES128Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl
  id: XmlEncAES192KeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncAES192KeyWrapUrl
  nameWithType: EncryptedXml.XmlEncAES192KeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu zawijaniu klucza szyfrowania AES (Advanced Standard) 192-bitowego (znanej także jako zawijaniu klucza Rijndael algorytm). To pole jest stałą."
  remarks: "Wartość pola XmlEncAES192KeyWrapUrl jest &quot;http://www.w3.org/2001/04/xmlenc#kw-aes192&quot;."
  syntax:
    content: public const string XmlEncAES192KeyWrapUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url
  id: XmlEncAES192Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncAES192Url
  nameWithType: EncryptedXml.XmlEncAES192Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu Advanced Encryption (Standard AES) 192-bitowego (znanej także jako algorytmu Rijndael). To pole jest stałą."
  remarks: "Wartość pola XmlEncAES192Url jest &quot;http://www.w3.org/2001/04/xmlenc#aes192-cbc&quot;."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_10_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_10_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_10_1.cs)]"
  syntax:
    content: public const string XmlEncAES192Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl
  id: XmlEncAES256KeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncAES256KeyWrapUrl
  nameWithType: EncryptedXml.XmlEncAES256KeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu zawijaniu klucza Advanced Encryption Standard (AES) 256-bitowego (znanej także jako zawijaniu klucza Rijndael algorytm). To pole jest stałą."
  remarks: "Wartość pola XmlEncAES256KeyWrapUrl jest &quot;http://www.w3.org/2001/04/xmlenc#kw-aes256&quot;."
  syntax:
    content: public const string XmlEncAES256KeyWrapUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url
  id: XmlEncAES256Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncAES256Url
  nameWithType: EncryptedXml.XmlEncAES256Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu szyfrowania AES (Advanced Standard) 256-bitowego (znanej także jako algorytmu Rijndael). To pole jest stałą."
  remarks: "Wartość pola XmlEncAES256Url jest &quot;http://www.w3.org/2001/04/xmlenc#aes256-cbc&quot;."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_12_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_12_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_12_1.cs)]"
  syntax:
    content: public const string XmlEncAES256Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl
  id: XmlEncDESUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncDESUrl
  nameWithType: EncryptedXml.XmlEncDESUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu cyfrowe Encryption Standard (DES). To pole jest stałą."
  remarks: "Wartość pola XmlEncDESUrl jest &quot;http://www.w3.org/2001/04/xmlenc#des-cbc&quot;."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_5_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_5_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_5_1.cs)]"
  syntax:
    content: public const string XmlEncDESUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl
  id: XmlEncElementContentUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncElementContentUrl
  nameWithType: EncryptedXml.XmlEncElementContentUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) przestrzeni nazw XML szyfrowania elementu zawartości. To pole jest stałą."
  remarks: "Wartość pola XmlEncElementContentUrl jest &quot;http://www.w3.org/2001/04/xmlenc#Content&quot;."
  syntax:
    content: public const string XmlEncElementContentUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl
  id: XmlEncElementUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncElementUrl
  nameWithType: EncryptedXml.XmlEncElementUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) przestrzeń nazw elementu XML szyfrowania. To pole jest stałą."
  remarks: "Wartość pola XmlEncElementUrl jest &quot;http://www.w3.org/2001/04/xmlenc#Element&quot;."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_7_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_7_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_7_1.cs)]"
  syntax:
    content: public const string XmlEncElementUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl
  id: XmlEncEncryptedKeyUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncEncryptedKeyUrl
  nameWithType: EncryptedXml.XmlEncEncryptedKeyUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) przestrzeni nazw XML szyfrowania <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elementu. To pole jest stałą."
  remarks: "Wartość pola XmlEncEncryptedKeyUrl jest &quot;http://www.w3.org/2001/04/xmlenc#EncryptedKey&quot;."
  syntax:
    content: public const string XmlEncEncryptedKeyUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl
  id: XmlEncNamespaceUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncNamespaceUrl
  nameWithType: EncryptedXml.XmlEncNamespaceUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) przestrzeni nazw XML szyfrowania składni i przetwarzania. To pole jest stałą."
  remarks: "Wartość pola XmlEncNamespaceUrl jest &quot;http://www.w3.org/2001/04/xmlenc#&quot;."
  syntax:
    content: public const string XmlEncNamespaceUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url
  id: XmlEncRSA15Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncRSA15Url
  nameWithType: EncryptedXml.XmlEncRSA15Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu RSA publicznego klucza szyfrowania standardowe (PKCS) w wersji 1.5. To pole jest stałą."
  remarks: "Wartość pola XmlEncRSA15Url jest &quot;http://www.w3.org/2001/04/xmlenc#rsa-1_5&quot;."
  example:
  - "The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/f-system.security.crypto_2_1.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/f-system.security.crypto_2_1.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/f-system.security.crypto_2_1.cpp)]"
  syntax:
    content: public const string XmlEncRSA15Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl
  id: XmlEncRSAOAEPUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncRSAOAEPUrl
  nameWithType: EncryptedXml.XmlEncRSAOAEPUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu szyfrowania RSA optymalne asymetrycznego szyfrowania dopełnienie (OAEP). To pole jest stałą."
  remarks: "Wartość pola XmlEncRSAOAEPUrl jest &quot;http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p&quot;."
  syntax:
    content: public const string XmlEncRSAOAEPUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url
  id: XmlEncSHA256Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncSHA256Url
  nameWithType: EncryptedXml.XmlEncSHA256Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu SHA-256. To pole jest stałą."
  remarks: "Wartość pola XmlEncSHA256Url jest &quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;."
  syntax:
    content: public const string XmlEncSHA256Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url
  id: XmlEncSHA512Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncSHA512Url
  nameWithType: EncryptedXml.XmlEncSHA512Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu SHA-512. To pole jest stałą."
  remarks: "Wartość pola XmlEncSHA512Url jest &quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;."
  syntax:
    content: public const string XmlEncSHA512Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl
  id: XmlEncTripleDESKeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncTripleDESKeyWrapUrl
  nameWithType: EncryptedXml.XmlEncTripleDESKeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje przestrzeń nazw identyfikatora URI (Uniform Resource) dla algorytmu klucza zawijania TRIPLEDES. To pole jest stałą."
  remarks: "Wartość pola XmlEncTripleDESKeyWrapUrl jest &quot;http://www.w3.org/2001/04/xmlenc#kw-tripledes&quot;."
  syntax:
    content: public const string XmlEncTripleDESKeyWrapUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl
  id: XmlEncTripleDESUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  langs:
  - csharp
  name: XmlEncTripleDESUrl
  nameWithType: EncryptedXml.XmlEncTripleDESUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) przestrzeń nazw dla algorytm Triple DES. To pole jest stałą."
  remarks: "Wartość pola XmlEncTripleDESUrl jest &quot;http://www.w3.org/2001/04/xmlenc#tripledes-cbc&quot;."
  example:
  - "The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_13_1.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_13_1.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_13_1.cs)]"
  syntax:
    content: public const string XmlEncTripleDESUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptedXml()
  nameWithType: EncryptedXml.EncryptedXml()
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml()
- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptedXml(XmlDocument)
  nameWithType: EncryptedXml.EncryptedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptedXml(XmlDocument,Evidence)
  nameWithType: EncryptedXml.EncryptedXml(XmlDocument,Evidence)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: AddKeyNameMapping(String,Object)
  nameWithType: EncryptedXml.AddKeyNameMapping(String,Object)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: ClearKeyNameMappings()
  nameWithType: EncryptedXml.ClearKeyNameMappings()
  fullName: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings()
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptData(EncryptedData,SymmetricAlgorithm)
  nameWithType: EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.EncryptedData
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedData
  nameWithType: EncryptedData
  fullName: System.Security.Cryptography.Xml.EncryptedData
- uid: System.Security.Cryptography.SymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm
  fullName: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptDocument()
  nameWithType: EncryptedXml.DecryptDocument()
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptEncryptedKey(EncryptedKey)
  nameWithType: EncryptedXml.DecryptEncryptedKey(EncryptedKey)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey)
- uid: System.Security.Cryptography.Xml.EncryptedKey
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedKey
  nameWithType: EncryptedKey
  fullName: System.Security.Cryptography.Xml.EncryptedKey
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptKey(Byte[],SymmetricAlgorithm)
  nameWithType: EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptKey(Byte[],RSA,Boolean)
  nameWithType: EncryptedXml.DecryptKey(Byte[],RSA,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],RSA,Boolean)
- uid: System.Security.Cryptography.RSA
  parent: System.Security.Cryptography
  isExternal: false
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DocumentEvidence
  nameWithType: EncryptedXml.DocumentEvidence
  fullName: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encoding
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Encoding
  nameWithType: EncryptedXml.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Encrypt(XmlElement,X509Certificate2)
  nameWithType: EncryptedXml.Encrypt(XmlElement,X509Certificate2)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,X509Certificate2)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Encrypt(XmlElement,String)
  nameWithType: EncryptedXml.Encrypt(XmlElement,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,String)
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptData(Byte[],SymmetricAlgorithm)
  nameWithType: EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptData(XmlElement,SymmetricAlgorithm,Boolean)
  nameWithType: EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptKey(Byte[],SymmetricAlgorithm)
  nameWithType: EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptKey(Byte[],RSA,Boolean)
  nameWithType: EncryptedXml.EncryptKey(Byte[],RSA,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],RSA,Boolean)
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: GetDecryptionIV(EncryptedData,String)
  nameWithType: EncryptedXml.GetDecryptionIV(EncryptedData,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(EncryptedData,String)
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: GetDecryptionKey(EncryptedData,String)
  nameWithType: EncryptedXml.GetDecryptionKey(EncryptedData,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData,String)
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: GetIdElement(XmlDocument,String)
  nameWithType: EncryptedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(XmlDocument,String)
- uid: System.Security.Cryptography.Xml.EncryptedXml.Mode
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Mode
  nameWithType: EncryptedXml.Mode
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Mode
- uid: System.Security.Cryptography.CipherMode
  parent: System.Security.Cryptography
  isExternal: false
  name: CipherMode
  nameWithType: CipherMode
  fullName: System.Security.Cryptography.CipherMode
- uid: System.Security.Cryptography.Xml.EncryptedXml.Padding
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Padding
  nameWithType: EncryptedXml.Padding
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Padding
- uid: System.Security.Cryptography.PaddingMode
  parent: System.Security.Cryptography
  isExternal: false
  name: PaddingMode
  nameWithType: PaddingMode
  fullName: System.Security.Cryptography.PaddingMode
- uid: System.Security.Cryptography.Xml.EncryptedXml.Recipient
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Recipient
  nameWithType: EncryptedXml.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: ReplaceData(XmlElement,Byte[])
  nameWithType: EncryptedXml.ReplaceData(XmlElement,Byte[])
  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(XmlElement,Byte[])
- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: ReplaceElement(XmlElement,EncryptedData,Boolean)
  nameWithType: EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)
  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)
- uid: System.Security.Cryptography.Xml.EncryptedXml.Resolver
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Resolver
  nameWithType: EncryptedXml.Resolver
  fullName: System.Security.Cryptography.Xml.EncryptedXml.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlDSigSearchDepth
  nameWithType: EncryptedXml.XmlDSigSearchDepth
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncAES128KeyWrapUrl
  nameWithType: EncryptedXml.XmlEncAES128KeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncAES128Url
  nameWithType: EncryptedXml.XmlEncAES128Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncAES192KeyWrapUrl
  nameWithType: EncryptedXml.XmlEncAES192KeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncAES192Url
  nameWithType: EncryptedXml.XmlEncAES192Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncAES256KeyWrapUrl
  nameWithType: EncryptedXml.XmlEncAES256KeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncAES256Url
  nameWithType: EncryptedXml.XmlEncAES256Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncDESUrl
  nameWithType: EncryptedXml.XmlEncDESUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncElementContentUrl
  nameWithType: EncryptedXml.XmlEncElementContentUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncElementUrl
  nameWithType: EncryptedXml.XmlEncElementUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncEncryptedKeyUrl
  nameWithType: EncryptedXml.XmlEncEncryptedKeyUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncNamespaceUrl
  nameWithType: EncryptedXml.XmlEncNamespaceUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncRSA15Url
  nameWithType: EncryptedXml.XmlEncRSA15Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncRSAOAEPUrl
  nameWithType: EncryptedXml.XmlEncRSAOAEPUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncSHA256Url
  nameWithType: EncryptedXml.XmlEncSHA256Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncSHA512Url
  nameWithType: EncryptedXml.XmlEncSHA512Url
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncTripleDESKeyWrapUrl
  nameWithType: EncryptedXml.XmlEncTripleDESKeyWrapUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlEncTripleDESUrl
  nameWithType: EncryptedXml.XmlEncTripleDESUrl
  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl
- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: AddKeyNameMapping
  nameWithType: EncryptedXml.AddKeyNameMapping
- uid: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: ClearKeyNameMappings
  nameWithType: EncryptedXml.ClearKeyNameMappings
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptData*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptData
  nameWithType: EncryptedXml.DecryptData
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptDocument
  nameWithType: EncryptedXml.DecryptDocument
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptEncryptedKey
  nameWithType: EncryptedXml.DecryptEncryptedKey
- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DecryptKey
  nameWithType: EncryptedXml.DecryptKey
- uid: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: DocumentEvidence
  nameWithType: EncryptedXml.DocumentEvidence
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encoding*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Encoding
  nameWithType: EncryptedXml.Encoding
- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Encrypt
  nameWithType: EncryptedXml.Encrypt
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptData
  nameWithType: EncryptedXml.EncryptData
- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: EncryptKey
  nameWithType: EncryptedXml.EncryptKey
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: GetDecryptionIV
  nameWithType: EncryptedXml.GetDecryptionIV
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: GetDecryptionKey
  nameWithType: EncryptedXml.GetDecryptionKey
- uid: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: GetIdElement
  nameWithType: EncryptedXml.GetIdElement
- uid: System.Security.Cryptography.Xml.EncryptedXml.Mode*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Mode
  nameWithType: EncryptedXml.Mode
- uid: System.Security.Cryptography.Xml.EncryptedXml.Padding*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Padding
  nameWithType: EncryptedXml.Padding
- uid: System.Security.Cryptography.Xml.EncryptedXml.Recipient*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Recipient
  nameWithType: EncryptedXml.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: ReplaceData
  nameWithType: EncryptedXml.ReplaceData
- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: ReplaceElement
  nameWithType: EncryptedXml.ReplaceElement
- uid: System.Security.Cryptography.Xml.EncryptedXml.Resolver*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: Resolver
  nameWithType: EncryptedXml.Resolver
- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth*
  parent: System.Security.Cryptography.Xml.EncryptedXml
  isExternal: false
  name: XmlDSigSearchDepth
  nameWithType: EncryptedXml.XmlDSigSearchDepth
