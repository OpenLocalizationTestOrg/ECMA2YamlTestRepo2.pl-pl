### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyHelper
  id: DependencyPropertyHelper
  children:
  - System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  langs:
  - csharp
  name: DependencyPropertyHelper
  nameWithType: DependencyPropertyHelper
  fullName: System.Windows.DependencyPropertyHelper
  type: Class
  summary: "Udostępnia metodę pomocnika pojedynczego (<xref:System.Windows.DependencyPropertyHelper.GetValueSource*>) aby raporty źródło systemu właściwość efektywną wartość właściwości zależności.</xref:System.Windows.DependencyPropertyHelper.GetValueSource*>"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] Właściwości systemu jest dosyć złożona i zależy od wartości, które potencjalnie pochodzą z różnych składników, oparte na wartość ustalonych określenie pierwszeństwa racjonalizuj¹ca. Ponieważ te źródła potencjalnie pochodzi od czasu wykonywania kodu, skompilowany kod znaczników, lub nawet z ustawień użytkownika w czasie wykonywania mogą być przydatne wiedzieli dokładnie uczestnika, który w systemie wartość właściwości zależności określone wartości uzyskania podczas wywoływania metody <xref:System.Windows.DependencyObject.GetValue%2A>w czasie wykonywania dla tej właściwości.</xref:System.Windows.DependencyObject.GetValue%2A> Jeśli wartość pochodzi z innego źródła niż zamierzano, może być konieczne dostosowanie niektórych aspektów aplikacji. Źródło wartości może być stylu, motyw, wartości lokalnej, animacji, powiązania lub wartości na podstawie czasu wykonywania, takich jak ustawienia systemu za pośrednictwem motywy lub zasoby systemowe. Aby uzyskać więcej informacji, zobacz [pierwszeństwo wartość właściwości zależności](~/add/includes/ajax-current-ext-md.md).       Innym mechanizmem, który raport dotyczący właściwości ogólnie rzecz biorąc, a nie konkretnego wystąpienia właściwości w obiekcie jest metadane właściwości. Metadane właściwości są znalezienia przez wywołanie metody <xref:System.Windows.DependencyProperty.GetMetadata%2A>i sprawdzeniu zwróconego <xref:System.Windows.PropertyMetadata>(lub jeden z kilku możliwych klas pochodnych, które metadane zwrócony właściwości jest castable do).</xref:System.Windows.PropertyMetadata> </xref:System.Windows.DependencyProperty.GetMetadata%2A>"
  syntax:
    content: public static class DependencyPropertyHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.DependencyPropertyHelper
  langs:
  - csharp
  name: GetValueSource(DependencyObject,DependencyProperty)
  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca struktury, która raportuje różne metadane i właściwości właściwości właściwości zależności określony w przypadku określonego <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "Tę metodę należy wywoływać w kontekście tak, aby mógł działać we właściwości były późne uczestnikami określenie wartości właściwości. Na przykład nie mogą być aktywne w właściwości powiązania, chyba że zostaną załadowane wszystkie elementy uczestnika w drzewie element powiązania asynchroniczne są propagowane i jest połączony z obiektem źródłowym powiązania. Podobnie w tym wszystkie niezbędne motywu słowniki zasobów powinny być dostępne."
  syntax:
    content: public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "Element, który zawiera `dependencyProperty` do informacji w raporcie dla."
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "Identyfikator właściwości zależności, aby dla informacji w raporcie."
    return:
      type: System.Windows.ValueSource
      description: "A <xref href=&quot;System.Windows.ValueSource&quot;> </xref> struktury, która raportuje informacje szczegółowe."
  overload: System.Windows.DependencyPropertyHelper.GetValueSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.DependencyPropertyHelper
  isExternal: false
  name: GetValueSource(DependencyObject,DependencyProperty)
  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.DependencyPropertyHelper.GetValueSource*
  parent: System.Windows.DependencyPropertyHelper
  isExternal: false
  name: GetValueSource
  nameWithType: DependencyPropertyHelper.GetValueSource
