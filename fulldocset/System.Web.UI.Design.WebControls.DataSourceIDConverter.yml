### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter
  id: DataSourceIDConverter
  children:
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)
  langs:
  - csharp
  name: DataSourceIDConverter
  nameWithType: DataSourceIDConverter
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter
  type: Class
  summary: "Tworzy listę wybierane przez użytkownika nazwy źródeł danych."
  remarks: "Klasa DataSourceIDConverter jest <xref:System.ComponentModel.TypeConverter>obiekt, który jest zwykle przywoływany przez <xref:System.ComponentModel.TypeConverterAttribute>atrybutu.</xref:System.ComponentModel.TypeConverterAttribute> </xref:System.ComponentModel.TypeConverter>       Źródła danych, nazwy, które są zwracane przez <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>metody są składników z kontenera określonego kontekstu, które są prawidłowe dane źródeł.</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>       <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>Metoda pobiera wartość wskazującą, czy nazwy źródła zwrócone dane są wyłączne listę możliwych wartości.</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A> <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A>Metoda pobiera wartość wskazującą, czy nazwy źródeł danych są standardowy zestaw wartości, które mogą być pobierane z listy.</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A>       <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>Metoda konwertuje określony obiekt do natywnego typu konwertera.</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A>Metoda pobiera wartość wskazującą, czy ten DataSourceIDConverter można przekonwertować obiektu w określony typ źródła typu macierzystego.</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A>       <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A>Metody wskazuje, czy określony składnik implementuje <xref:System.Web.UI.IDataSource>interfejsu.</xref:System.Web.UI.IDataSource> </xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A>"
  syntax:
    content: 'public class DataSourceIDConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: DataSourceIDConverter()
  nameWithType: DataSourceIDConverter.DataSourceIDConverter()
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.DataSourceIDConverter()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.Design.WebControls.DataSourceIDConverter&quot;> </xref> klasy."
  remarks: ".NET Framework wewnętrznie tworzy nowe wystąpienie klasy <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>klasy po klasie odwołuje się do niego <xref:System.ComponentModel.TypeConverterAttribute>atrybutu.</xref:System.ComponentModel.TypeConverterAttribute> </xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>"
  syntax:
    content: public DataSourceIDConverter ();
    parameters: []
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "Pobiera wartość wskazującą, czy ten konwerter można przekonwertować obiektu w określony typ źródła natywnego typu konwertera."
  remarks: "<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>Metody konwertować można jedynie z ciągu, więc zwraca tylko CanConvertFrom `true` podczas `sourcetype` jest ciągiem.</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>       Nie używa CanConvertFrom `context` parametru."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Implementacja obiektu <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> zawierające informacje o kontekście do konwertera typów, aby konwerter typów można dokonać konwersji."
    - id: sourceType
      type: System.Type
      description: "<xref:System.Type>Obiektu, dla którego wnioskuje się konwersji.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>sourceType</code> is a string; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "Konwertuje określony obiekt natywny typ konwertera."
  remarks: "Jeśli `value` parametr ma typ ciągu, jest zwracany jako ciąg. Jeśli `value` jest `null`, ciąg pusty (&quot;&quot;) jest zwracany. W przeciwnym razie <xref:System.NotSupportedException>jest generowany.</xref:System.NotSupportedException>       Metoda ConvertFrom nie korzysta ze `context` lub `culture` parametru."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Implementacja obiektu <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> zawierające informacje o kontekście do konwertera typów, aby konwerter typów można dokonać konwersji."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>obiekt, który określa kulturę z `value` parametru.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "Obiekt do konwersji."
    return:
      type: System.Object
      description: "<code> value </code> Parametru jest zwracana jako ciąg."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>value</code>jest inne niż ciąg lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "Zwraca listę nazw źródeł danych."
  remarks: "Metoda GetStandardValues tworzy listę nazw składników, które są prawidłowe dane źródeł w kontenerze obiektu, który jest określony przez `context` parametru. Następnie konwertuje tej listy, aby <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>obiektu.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Implementacja obiektu <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> zawierające informacje o kontekście do konwertera typów, aby konwerter typów można dokonać konwersji."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>zawierający nazwy formantów, które implementują <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> interfejsu i są dostępne do użycia w danym kontekście.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "Pobiera wartość wskazującą, czy nazwy źródła zwrócone dane są wyłączne listę możliwych wartości."
  remarks: "Jeśli pochodzi z klasy <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>klasy i zastąpić <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>metodę, aby zwrócić wyłącznego listę nazw źródeł danych, również przesłonić metodę GetStandardValuesExclusive do zwrócenia `true` po liście Nazwa źródła danych jest na wyłączność.</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> </xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>       `context` Parametr nie jest używany przez GetStandardValuesExclusive."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Implementacja obiektu <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> zawierające informacje o kontekście do konwertera typów, aby konwerter typów można dokonać konwersji."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "Pobiera wartość wskazującą, czy ten obiekt zwraca standardowy zestaw nazwy źródeł danych, które mogą zostać pobrane z listy."
  remarks: "`context` Parametr nie jest używany przez metodę GetStandardValuesSupported."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Implementacja obiektu <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> zawierające informacje o kontekście do konwertera typów, aby konwerter typów można dokonać konwersji."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)
  id: IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: IsValidDataSource(IComponent)
  nameWithType: DataSourceIDConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "Pobiera wartość wskazującą, czy określony składnik jest w prawidłowym źródle danych."
  remarks: "Metoda IsValidDataSource uwzględnia `component` parametr będzie poprawnego źródła danych, jeśli implementuje <xref:System.Web.UI.IDataSource>interfejsu.</xref:System.Web.UI.IDataSource>"
  syntax:
    content: protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Obiekt, który implementuje <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> interfejsu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> component </code> jest w prawidłowym źródle danych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: DataSourceIDConverter()
  nameWithType: DataSourceIDConverter.DataSourceIDConverter()
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.DataSourceIDConverter()
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: IsValidDataSource(IComponent)
  nameWithType: DataSourceIDConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: DataSourceIDConverter
  nameWithType: DataSourceIDConverter.DataSourceIDConverter
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: DataSourceIDConverter.CanConvertFrom
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: DataSourceIDConverter.ConvertFrom
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: DataSourceIDConverter.GetStandardValues
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: DataSourceIDConverter.GetStandardValuesExclusive
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: DataSourceIDConverter.GetStandardValuesSupported
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: IsValidDataSource
  nameWithType: DataSourceIDConverter.IsValidDataSource
