### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.RouteUrlExpressionBuilder
  id: RouteUrlExpressionBuilder
  children:
  - System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  - System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  - System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  - System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  langs:
  - csharp
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder
  type: Class
  summary: "Tworzy adres URL, który odpowiada określonej wartości parametru URL."
  remarks: "Klasa obiekt RouteUrlExpressionBuilder sprawia, że można ustawić właściwości formantu serwera do adresu URL trasy, podając listę wartości parametru URL."
  example:
  - "The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route. The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```  \n  \n The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.  \n  \n If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name. For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles,  \n               routename=BasicSearchRoute %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Routes")]

      public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers:
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Compilation.RouteUrlExpressionBuilder&quot;> </xref> klasy."
  syntax:
    content: public RouteUrlExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Tworzy adres URL, który odpowiada określonej wartości parametru URL i format adresu URL trasy."
  remarks: "ASP.NET wywołuje tę metodę w przypadku wyrażenia następującą postać w znaczniku: `<%$ RouteUrl: urlparameter=value %>` ta metoda generuje odpowiedni adres URL dla określonych wartości trasy klucz dla bieżącego <xref:System.Web.Routing.Route>obiektu.</xref:System.Web.Routing.Route> Ta metoda zastępuje <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metody.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Pobiera z `entry` parametru odwołanie do formantu, z którym powiązany jest wyrażenie otrzymuje od `context` parametru wyrażenie, które ma zostać obliczone który wywołuje <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>metody do generowania adresu URL.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>"
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "Nie są używane w tej implementacji."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Właściwość, która jest powiązana wyrażenie."
    - id: parsedData
      type: System.Object
      description: "Nie są używane w tej implementacji."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Właściwości formantu lub strony."
    return:
      type: System.Object
      description: "Adres URL, który odpowiada określonej wartości parametru URL i wybranej trasy. Trasa jest wybierana przez dopasowanie wzorców adresów URL trasy do określonej listy parametrów. W przypadku więcej niż jedna trasa odpowiada określonej listy parametrów, nazwy trasy można również określić wskaż, która trasa, aby wybrać."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zwraca wyrażenie kodu, które służy do wykonywania przypisanie właściwości w klasie wygenerowanego strony."
  remarks: "Ta metoda jest wywoływana po utworzeniu modelu CodeDOM dla strona lub kontrolka. <xref:System.CodeDom.CodeExpression>Obiekt, który jest zwracany reprezentuje wyrażenie kodu do dodania do przypisania właściwości w klasy wygenerowanego strony.</xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Właściwość, która jest powiązana wyrażenie."
    - id: parsedData
      type: System.Object
      description: "Obiekt reprezentujący przeanalizować danych zwrócony przez <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Właściwości formantu lub strony."
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> wystąpienia, który jest używany w przypisanie właściwości."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  id: GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Tworzy adres URL, który odpowiada klucze określoną trasę dla formatu adresu URL trasy."
  remarks: "Ta metoda generuje odpowiednią wartość dla adresu URL, wywołując <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>metody <xref:System.Web.Routing.RouteCollection>obiektu.</xref:System.Web.Routing.RouteCollection> </xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> Pobiera <xref:System.Web.Routing.RequestContext>obiekt z `control` parametr, a analizuje parametry trasy nazwy i trasy z `expression` parametru.</xref:System.Web.Routing.RequestContext>"
  syntax:
    content: public static string GetRouteUrl (System.Web.UI.Control control, string expression);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Formant, który jest powiązany wyrażenie."
    - id: expression
      type: System.String
      description: "Wyrażenie określone w znaczniku."
    return:
      type: System.String
      description: "Adres URL, który odpowiada format adresu URL trasy bieżącego <xref:System.Web.Routing.Route>obiektu.</xref:System.Web.Routing.Route>"
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>control</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metoda nie może przeanalizować wyrażenia, który został określony w znaczniku. Aby uzyskać więcej informacji zobacz <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>"
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Pobiera wartość wskazującą, czy można oszacować wyrażenia na stronie, która nie jest skompilowany."
  remarks: "Właściwość SupportsEvaluate wskazuje, czy <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A>Metoda została zaimplementowana w klasie i może zwrócić wartości dla wyrażenia na stronie, która nie jest skompilowany.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.RouteUrlExpressionBuilder>Klasy można obliczyć wyrażenia w strona, która nie jest skompilowany.</xref:System.Web.Compilation.RouteUrlExpressionBuilder> W związku z tym właściwość SupportsEvaluate zawsze zwraca `true`."
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  id: TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Analizuje wyrażenia w kolekcji tras kluczy i wartości i opcjonalnie do nazwy trasy."
  remarks: "Metoda TryParseRouteExpression usuwa spacje z wyrażenia początkowe i końcowe i rozdziela ją do pary klucz/wartość przy użyciu przecinków jako ograniczników. Jeśli klucz trasy o nazwie `RouteName` znajduje się, że wartość jest przekazywany w `routeName` parametr, a nie w `routeValues`. W przeciwnym razie `null` są zwracane do `routeName`. Spacje początkowe i końcowe również są usuwane z poszczególnych kluczy i wartości.       Zwraca metodę TryParseRouteExpression `false` Jeśli wyrażenie nie składa się z pary co najmniej jeden klucz/wartość, która jest w formacie *klucza*`=`*wartość*, i który korzysta z przecinkami do oddzielania wielu pary."
  syntax:
    content: public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);
    parameters:
    - id: expression
      type: System.String
      description: "Wyrażenie określone w znaczniku."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Kolekcja tras kluczy oraz powiązanych wartości."
    - id: routeName
      type: System.String
      description: "Gdy metoda zwróci wartość, zawiera ciąg, który reprezentuje nazwę trasy, jeśli `expression` zawiera klucz trasy o nazwie `RouteName`. Ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli podczas analizowania zakończyło się pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression
