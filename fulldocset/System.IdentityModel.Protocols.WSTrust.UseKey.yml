### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.UseKey
  id: UseKey
  children:
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  - System.IdentityModel.Protocols.WSTrust.UseKey.Token
  langs:
  - csharp
  name: UseKey
  nameWithType: UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey
  type: Class
  summary: "Reprezentuje zawartość elementu wst:UseKey."
  remarks: "Ten opcjonalny element umożliwia klientowi żądanie wystawianie tokenów zawierających swojego klucza publicznego, który jest określony w elemencie wst:UseKey dostawcy tożsamości. Jednak klient ma potwierdzenie posiadania klucza. W wiadomości SOAP opartych na protokole WS-Security klienta można dodać swój certyfikat jako token indosowania do nagłówka zabezpieczeń przeznaczonego do udowodnienia posiadaniu klucza.       Aby uzyskać więcej informacji na temat elementu, który reprezentuje ta klasa Zobacz wersję specyfikacji WS-Trust, która ma zastosowanie do danego scenariusza."
  syntax:
    content: public class UseKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey()
  nameWithType: UseKey.UseKey()
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> klasy."
  remarks: "Konstruktor rozszerzalności."
  syntax:
    content: public UseKey ();
    parameters: []
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey(SecurityKeyIdentifier)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> przy użyciu identyfikatora klucza zabezpieczeń określony."
  remarks: "Jeśli obiekt żądający wie, jak przekonwertować token identyfikatora klucza zabezpieczeń lub token jest już identyfikatora klucza zabezpieczeń, użyj tego konstruktora.       <xref:System.IdentityModel.Protocols.WSTrust.UseKey.Token%2A>Właściwość jest ustawiona na `null` w nowym <xref:System.IdentityModel.Protocols.WSTrust.UseKey>wystąpienia.</xref:System.IdentityModel.Protocols.WSTrust.UseKey> </xref:System.IdentityModel.Protocols.WSTrust.UseKey.Token%2A>"
  syntax:
    content: public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski);
    parameters:
    - id: ski
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> reprezentujący istniejącego klucza, który ma zostać użyty."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)
  id: '#ctor(System.IdentityModel.Tokens.SecurityToken)'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey(SecurityToken)
  nameWithType: UseKey.UseKey(SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityToken)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> przy użyciu tokenu zabezpieczającego określony."
  remarks: "<xref:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier%2A>Właściwość jest ustawiona na `null` w nowym <xref:System.IdentityModel.Protocols.WSTrust.UseKey>wystąpienia.</xref:System.IdentityModel.Protocols.WSTrust.UseKey> </xref:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier%2A>"
  syntax:
    content: public UseKey (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> reprezentujący istniejącego klucza, który ma zostać użyty."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)'
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: UseKey(SecurityKeyIdentifier,SecurityToken)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> przy użyciu identyfikatora klucza zabezpieczeń określonej i tokenu zabezpieczającego."
  remarks: "Użyj tego konstruktora, aby przekazać więcej informacji na temat usługi tokenu zabezpieczającego (STS) z serializatora."
  syntax:
    content: public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: ski
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> reprezentujący istniejącego klucza, który ma zostać użyty."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> reprezentujący istniejącego klucza, który ma zostać użyty."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: SecurityKeyIdentifier
  nameWithType: UseKey.SecurityKeyIdentifier
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera identyfikator klucza zabezpieczeń"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SecurityKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> reprezentujący identyfikatora klucza zabezpieczeń."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.Token
  id: Token
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  langs:
  - csharp
  name: Token
  nameWithType: UseKey.Token
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.Token
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera token zabezpieczający, gdy Serializator nie może przekonwertować go do identyfikatora klucza zabezpieczeń."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken Token { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> reprezentujący tokenu."
  overload: System.IdentityModel.Protocols.WSTrust.UseKey.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey()
  nameWithType: UseKey.UseKey()
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey()
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey(SecurityKeyIdentifier)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey(SecurityToken)
  nameWithType: UseKey.UseKey(SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey(SecurityKeyIdentifier,SecurityToken)
  nameWithType: UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.UseKey(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: UseKey.SecurityKeyIdentifier
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.Token
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: Token
  nameWithType: UseKey.Token
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey.Token
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: UseKey
  nameWithType: UseKey.UseKey
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier*
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: UseKey.SecurityKeyIdentifier
- uid: System.IdentityModel.Protocols.WSTrust.UseKey.Token*
  parent: System.IdentityModel.Protocols.WSTrust.UseKey
  isExternal: false
  name: Token
  nameWithType: UseKey.Token
