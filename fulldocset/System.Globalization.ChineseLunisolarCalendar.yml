### YamlMime:ManagedReference
items:
- uid: System.Globalization.ChineseLunisolarCalendar
  id: ChineseLunisolarCalendar
  children:
  - System.Globalization.ChineseLunisolarCalendar.#ctor
  - System.Globalization.ChineseLunisolarCalendar.ChineseEra
  - System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.ChineseLunisolarCalendar.Eras
  - System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar
  fullName: System.Globalization.ChineseLunisolarCalendar
  type: Class
  summary: "Reprezentuje czas w działów, takich jak miesięcy, dni i lata. Lat mają być obliczane przy użyciu kalendarza chiński podczas dni i miesiące są obliczane przy użyciu księżycowo-słoneczny kalendarza."
  remarks: "Jest pochodną klasy ChineseLunisolarCalendar <xref:System.Globalization.EastAsianLunisolarCalendar>klasy, która reprezentuje księżycowo-słoneczny kalendarza.</xref:System.Globalization.EastAsianLunisolarCalendar> <xref:System.Globalization.EastAsianLunisolarCalendar>Klasa obsługuje cyklu sexagenary roku (która jest powtarzany co 60 lat) oprócz lat słoneczny i miesiące księżycowego.</xref:System.Globalization.EastAsianLunisolarCalendar> Każdego słoneczny roku w kalendarzu jest skojarzony z Sexagenary roku, niebieskich Stem i ziemi gałęzi, a kalendarze te mogą mieć przestępnego miesięcy od dowolnego miesiąc w roku. Klasa ChineseLunisolarCalendar oblicza lat na podstawie słonecznego obliczeń i miesiące i dni na podstawie księżycowy obliczeń.      > [!NOTE] > Uzyskać informacji o korzystaniu z klasy ChineseLunisolarCalendar oraz innych klas kalendarza w programie .NET Framework, zobacz [Praca z kalendarzami](~/add/includes/ajax-current-ext-md.md).       Miesiąc przestępnego może wystąpić po wszelkich miesiąc w roku. Na przykład <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>Metoda zwraca liczbę z zakresu od 1 do 13 wskazującą miesiąca skojarzone z określoną datą.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Jeśli między ósmego i dziewiąty miesięcy roku, znajduje się w miesiącu przestępnego <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>Metoda zwraca 8 ósmego miesiąca, 9 dla przestępnego ósmego miesiąca i 10 na miesiąc, dziewiąty.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       Obecnie ChineseLunisolarCalendar nie jest używany przez żadną kultur obsługiwane przez <xref:System.Globalization.CultureInfo>klasę.</xref:System.Globalization.CultureInfo> W związku z tym ta klasa umożliwia tylko obliczanie dat w chińskiej wersji językowej księżycowo-słoneczny kalendarza.       Każdy <xref:System.Globalization.CultureInfo>obiektu obsługuje zestaw kalendarzy.</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>Właściwość zwraca kalendarz domyślny dla kultury i <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>właściwość zwraca tablicę zawierającą wszystkie kalendarze obsługiwane przez kulturę.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Aby zmienić używany kalendarz <xref:System.Globalization.CultureInfo>aplikacji należy ustawić <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>Właściwość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>do nowego <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: 'public class ChineseLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> klasy."
  syntax:
    content: public ChineseLunisolarCalendar ();
    parameters: []
  overload: System.Globalization.ChineseLunisolarCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  id: ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Określa era, który odpowiada bieżącej <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> obiektu."
  remarks: "Wartość tego pola to 1.       <xref:System.Globalization.ChineseLunisolarCalendar>Klasy rozpoznaje tylko bieżącej ery.</xref:System.Globalization.ChineseLunisolarCalendar>"
  syntax:
    content: public const int ChineseEra = 1;
    return:
      type: System.Int32
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera liczbę dni w roku poprzedzającym rok, w którym jest określona przez <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>Właściwości.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>"
  remarks: "Ta właściwość zwraca wartość stałą 384."
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "Liczba dni w roku poprzedzającym podanego przez <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> roku"
  overload: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera Arial, odpowiadające zakres dat i godzin obsługiwane przez bieżącą <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> obiektu."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Tablica 32-bitowych liczb całkowitych ze znakiem określające odpowiednich Arial. Wartość zwracana <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> obiektu jest zawsze tablicę zawierającą równa jeden element <xref href=&quot;System.Globalization.ChineseLunisolarCalendar.ChineseEra&quot;> </xref> wartości."
  overload: System.Globalization.ChineseLunisolarCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera era odpowiadający określonym <xref:System.DateTime>typu.</xref:System.DateTime>"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Typ do odczytu.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery w <code> time </code> parametru."
  overload: System.Globalization.ChineseLunisolarCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>jest mniejsza niż <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> lub większa niż <xref:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera maksymalną datę i godzinę obsługiwane przez <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> klasy."
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A &lt;xref:System.DateTime?displayProperty=fullName&gt; typu, który reprezentuje moment ostatniego 28 stycznia 2101 w kalendarza gregoriańskiego, która jest równa około konstruktora `DateTime(2101, 1, 28, 23, 59, 59, 999)`."
  overload: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera minimalną datę i godzinę obsługiwane przez <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> klasy."
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A &lt;xref:System.DateTime?displayProperty=fullName&gt; typu, który reprezentuje 19 lutego 1901 w kalendarza gregoriańskiego, który jest odpowiednikiem konstruktora, `DateTime(1901, 2, 19)`."
  overload: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra
  nameWithType: ChineseLunisolarCalendar.GetEra
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
