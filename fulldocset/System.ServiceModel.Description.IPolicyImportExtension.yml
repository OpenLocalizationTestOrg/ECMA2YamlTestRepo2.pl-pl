### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IPolicyImportExtension
  id: IPolicyImportExtension
  children:
  - System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: IPolicyImportExtension
  nameWithType: IPolicyImportExtension
  fullName: System.ServiceModel.Description.IPolicyImportExtension
  type: Interface
  summary: "Definiuje metodę dla obiektów, które importowanie niestandardowych asercji zasad dotyczących powiązań."
  remarks: "Zaimplementuj interfejs elementu IPolicyImportExtension do wyszukiwania informacji WSDL udostępnianych przez danego punktu końcowego dla niestandardowych asercji zasad o możliwości punktu końcowego lub wymagań. Zazwyczaj importera zasad wyszukuje określonego potwierdzenia i albo wstawia element powiązania, konfiguruje element powiązania lub modyfikuje kontraktu, aby spełnić wymagania dotyczące potwierdzenia.       W odróżnieniu od jego odpowiednik <xref:System.ServiceModel.Description.IPolicyExportExtension>, elementu IPolicyImportExtension nie wymaga wdrożenia przez <xref:System.ServiceModel.Channels.BindingElement>obiekt; można załadować przy użyciu sekcji konfiguracji klienta pokazano w sekcji przykładów w lub programowo, dodając ją do <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>konstruktora.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Description.IPolicyExportExtension>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]przekazuje dwa obiekty do <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>metody, <xref:System.ServiceModel.Description.MetadataImporter>i <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> </xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> Zwykle <xref:System.ServiceModel.Description.PolicyConversionContext>obiekt zawiera już potwierdzeń zasad dla każdego zakresu powiązania.</xref:System.ServiceModel.Description.PolicyConversionContext>       Implementacja elementu IPolicyImportExtension wykonuje następujące czynności: 1.  Lokalizuje potwierdzenia zasad niestandardowych, dla której jest odpowiedzialne wywołując jedną <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, lub <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>metod, w zależności od zakresu.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Usuwa potwierdzenia zasad z kolekcji potwierdzenia. <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>Metody lokalizuje, zwraca i usuwa potwierdzenia w jednym kroku.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Zmodyfikuj stosu powiązanie lub kontrakt dodając niestandardowe wymagane <xref:System.ServiceModel.Channels.BindingElement>do <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>Właściwości lub modyfikując <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>Właściwości.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Ważne jest, krok 2. Po wywołaniu wszystkich importerów zasad [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] sprawdza istnienie żadnych potwierdzeń zasad, które pozostaną w. Jeśli istnieje, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] założono, że importowanie zasad nie powiodło się i nie importuje powiązanie skojarzone.      > [!IMPORTANT] > Dostawcy metadanych złośliwego mogą próbować wysyłać nieprawidłowo sformułowany kod XML jako część metadanych w celu wykorzystania importera zasad. Zalecane jest tej zasady niestandardowe importerów być niezawodne do wszystkich formularzy XML, które mogą być przekazywane do niego.       Niestandardowe <xref:System.ServiceModel.Description.MetadataImporter>implementacje musi implementować własnych <xref:System.ServiceModel.Description.PolicyConversionContext>dołączyć obiektu, aby wyodrębnić potwierdzeń zasad do formatu niestandardowych metadanych.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter>       Jeśli chcesz wyeksportować i zaimportować elementy WSDL niestandardowe, które nie są potwierdzeń zasad, zobacz <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>i <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>      > [!NOTE] > Importerów zasad niestandardowych i eksporterom służy [narzędzie narzędzia metadanych elementu ServiceModel (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) przy użyciu tych samych elementów konfiguracji w pliku konfiguracji i `/svcutilConfig:<configFile>` opcji."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public interface IPolicyImportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  langs:
  - csharp
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Definiuje metodę, która może importowanie niestandardowych asercji zasad i dodać implementującej elementy powiązania."
  remarks: "Implementowanie `ImportPolicy` metody w celu uzyskania potwierdzenia zasad i wykonać niektóre modyfikacji importowanych umowy lub powiązanie do obsługi potwierdzenia. Zazwyczaj importera zasad odpowiada znajdowanie potwierdzenia zasad niestandardowych, konfigurując lub Wstawianie elementu powiązania do powiązania importowane.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]przekazuje dwa obiekty do metody ImportPolicy, <xref:System.ServiceModel.Description.MetadataImporter>i <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> Zwykle <xref:System.ServiceModel.Description.PolicyConversionContext>obiekt zawiera już potwierdzeń zasad dla każdego zakresu powiązania.</xref:System.ServiceModel.Description.PolicyConversionContext>       <xref:System.ServiceModel.Description.IPolicyImportExtension>Implementacji wykonuje następujące czynności: 1.</xref:System.ServiceModel.Description.IPolicyImportExtension>  Lokalizuje potwierdzenia zasad niestandardowych, dla której jest odpowiedzialne wywołując jedną <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, lub <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>metod, w zależności od zakresu.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Usuwa potwierdzenia zasad z kolekcji potwierdzenia. <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>Metody lokalizuje, zwraca i usuwa potwierdzenia w jednym kroku.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Modyfikuje stosu powiązanie lub kontrakt dodając niestandardowe wymagane <xref:System.ServiceModel.Channels.BindingElement>do <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>Właściwości lub modyfikując <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>Właściwości.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Ważne jest, krok 2. Po wywołaniu wszystkich importerów zasad [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] sprawdza istnienie żadnych potwierdzeń zasad, które pozostaną w. Jeśli istnieje, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] założono, że importowanie zasad nie powiodło się i nie importuje powiązanie skojarzone."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: importer
      type: System.ServiceModel.Description.MetadataImporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> Obiektu w użyciu."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> Zawiera zarówno potwierdzeń zasad, które mogą być importowane i kolekcji elementów, do których mogą być dodawane implementacja elementy powiązania wiązania."
  overload: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataImporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy
  nameWithType: IPolicyImportExtension.ImportPolicy
