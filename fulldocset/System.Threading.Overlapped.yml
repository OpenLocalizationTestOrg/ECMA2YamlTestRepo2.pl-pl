### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Udostępnia reprezentację zarządzanych Win32 `OVERLAPPED` struktury, w tym metod do przekazywania informacji z wystąpienia Overlapped <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury."
  remarks: "<xref:System.Threading.Overlapped.Pack%2A>i <xref:System.Threading.Overlapped.UnsafePack%2A>metody przekazywania informacji z obiektu Overlapped do <xref:System.Threading.NativeOverlapped>struktury, które mogą zostać przekazane do funkcji Win32 API dla asynchronicznego plik we/wy.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> <xref:System.Threading.Overlapped.Unpack%2A>Informacje o metodzie transferów ze <xref:System.Threading.NativeOverlapped>struktury do wystąpienia klasy Overlapped.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       Zmiany właściwości obiektu Overlapped mają wpływ na skojarzone <xref:System.Threading.NativeOverlapped>struktury i na odwrót.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicjuje nową, pustą wystąpienie <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klasy."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Threading.Overlapped&quot;> </xref> położenie klasy z określonego pliku, 32-bitową liczbę całkowitą dojście zdarzenia sygnalizowane po zakończeniu operacji We/Wy i interfejs, za pomocą którego ma zostać zwrócone wyniki operacji."
  remarks: "Użyj <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>Właściwości można pobrać uchwytu wszystkie zdarzenia synchronizacji zarządzanych, która jest pochodną <xref:System.Threading.WaitHandle>klasy.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       Implementacji <xref:System.IAsyncResult>zawiera informacje o stanie dotyczące operacji We/Wy.</xref:System.IAsyncResult> Przekazywany do konstruktora w `ar` parametru i pobrać go później przy użyciu <xref:System.Threading.Overlapped.AsyncResult%2A>Właściwości.</xref:System.Threading.Overlapped.AsyncResult%2A> Jeśli metoda wywołania zwrotnego jest określona dla <xref:System.Threading.Overlapped.Pack%2A>lub <xref:System.Threading.Overlapped.UnsafePack%2A>metody wywołania zwrotnego można pobrać z <xref:System.IAsyncResult>przez rozpakowywania <xref:System.Threading.NativeOverlapped>struktury odbierze.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Niższe słowo położenie pliku, w którym należy uruchomić transferu."
    - id: offsetHi
      type: System.Int32
      description: "Wyższe słowo położenie pliku, w którym należy uruchomić transferu."
    - id: hEvent
      type: System.Int32
      description: "Dojście do zdarzenia sygnalizowane po zakończeniu operacji We/Wy."
    - id: ar
      type: System.IAsyncResult
      description: "Obiekt, który implementuje <xref:System.IAsyncResult>interfejsu i udostępnia informacje o stanie operacji We/Wy.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Threading.Overlapped&quot;> </xref> położenie klasy z określonego pliku, uchwyt zdarzenia sygnalizowane po zakończeniu operacji We/Wy i interfejs, za pomocą którego ma zostać zwrócone wyniki operacji."
  remarks: "Można pobrać uchwytu z obiektu zarządzanego synchronizacji, która jest pochodną <xref:System.Threading.WaitHandle>klasy, należy użyć <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>właściwości do pobrania <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>obiekt, a następnie wywołać <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>— Metoda.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       Implementacji <xref:System.IAsyncResult>zawiera informacje o stanie dotyczące operacji We/Wy.</xref:System.IAsyncResult> Przekazywany do konstruktora w `ar` parametru i pobrać go później przy użyciu <xref:System.Threading.Overlapped.AsyncResult%2A>Właściwości.</xref:System.Threading.Overlapped.AsyncResult%2A> Jeśli metoda wywołania zwrotnego jest określona dla <xref:System.Threading.Overlapped.Pack%2A>lub <xref:System.Threading.Overlapped.UnsafePack%2A>metody wywołania zwrotnego można pobrać z <xref:System.IAsyncResult>przez rozpakowywania <xref:System.Threading.NativeOverlapped>struktury odbierze.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Niższe słowo położenie pliku, w którym należy uruchomić transferu."
    - id: offsetHi
      type: System.Int32
      description: "Wyższe słowo położenie pliku, w którym należy uruchomić transferu."
    - id: hEvent
      type: System.IntPtr
      description: "Dojście do zdarzenia sygnalizowane po zakończeniu operacji We/Wy."
    - id: ar
      type: System.IAsyncResult
      description: "Obiekt, który implementuje <xref:System.IAsyncResult>interfejsu i udostępnia informacje o stanie operacji We/Wy.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pobiera lub ustawia obiekt, który zawiera informacje o stanie dotyczące operacji We/Wy."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Obiekt, który implementuje <xref:System.IAsyncResult>interfejsu.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pobiera lub ustawia dojście 32-bitową liczbę całkowitą zdarzenia synchronizacji sygnalizowane po zakończeniu operacji We/Wy."
  remarks: "Nie można użyć tej właściwości na platformach 64-bitowych. Użyj <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>Właściwości zamiast.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       Użyj <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>Właściwości można pobrać uchwytu wszystkie zdarzenia synchronizacji zarządzanych, która jest pochodną <xref:System.Threading.WaitHandle>klasy.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość reprezentującą uchwyt zdarzenia synchronizacji.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pobiera lub ustawia dojście zdarzenia synchronizacji sygnalizowane po zakończeniu operacji We/Wy."
  remarks: "Można pobrać uchwytu z obiektu zarządzanego synchronizacji, która jest pochodną <xref:System.Threading.WaitHandle>klasy, należy użyć <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>właściwości do pobrania <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>obiekt, a następnie wywołać <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>— Metoda.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>Reprezentujący uchwyt zdarzenia.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Zwalnia niezarządzane pamięć, skojarzone ze strukturą nachodzące natywnego przydzielony przez <xref:System.Threading.Overlapped.Pack*>metody.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "Należy wywołać metodę wolnego dokładnie jeden raz na każdy <xref:System.Threading.NativeOverlapped>wskaźnika z <xref:System.Threading.Overlapped.Pack%2A>— Metoda.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Nie można wywołać metody Free, będzie nastąpił przeciek pamięci. Free — metoda można wywołać więcej niż raz, będzie uszkodzenia pamięci."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Wskaźnik do <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury ma zostać zwolniony."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pobiera lub ustawia słowo znaczących położenie pliku, w którym należy uruchomić transferu. Położenie pliku jest Przesunięcie bajtów, od początku pliku."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość reprezentującą wysokiej wyrazu położenie pliku.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pobiera lub ustawia słowo znaczącymi bitami położenie pliku, w którym należy uruchomić transferu. Położenie pliku jest Przesunięcie bajtów, od początku pliku."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość reprezentującą niski wyrazu położenie pliku.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pakiety do bieżącego wystąpienia <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury, określając delegata do wywołania po zakończeniu asynchronicznej operacji We/Wy."
  remarks: "Niezarządzany wskaźnik zwracane przez tę metodę mogą być przekazywane do systemu operacyjnego w pokrywającej się z inną operacji We/Wy. <xref:System.Threading.NativeOverlapped>Zawartych w pamięci fizycznej do struktury <xref:System.Threading.Overlapped.Unpack%2A>jest wywoływana.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > Element wywołujący jest odpowiedzialny za przypinanie buforu. Jeśli domena aplikacji jest zwolniony, jednak dojście do buforu przypiętych zostanie zniszczony i wydane buforu, pozostawiając operacji We/Wy zapisu zwolnionych adres. Z tego powodu warto użyć <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>przeciążenie metody, w którym środowiska uruchomieniowego PIN buforu.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Delegata, który reprezentuje metodę wywołania zwrotnego wywoływana po zakończeniu asynchronicznej operacji We/Wy."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Niezarządzany wskaźnik do <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Bieżący <xref href=&quot;System.Threading.Overlapped&quot;> </xref> został już spakowany."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pakiety do bieżącego wystąpienia <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury, określając delegata, który jest wywoływany po zakończeniu asynchronicznej operacji We/Wy i zarządzanego obiektu, który pełni rolę bufora."
  remarks: "Niezarządzany wskaźnik zwracane przez tę metodę mogą być przekazywane do systemu operacyjnego w pokrywającej się z inną operacji We/Wy. <xref:System.Threading.NativeOverlapped>Zawartych w pamięci fizycznej do struktury <xref:System.Threading.Overlapped.Unpack%2A>jest wywoływana.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Bufor lub buforów określone w `userData` muszą być takie same jak przekazany do funkcji niezarządzanego systemu operacyjnego, który wykonuje asynchroniczne We/Wy.      > [!NOTE] > Środowiska uruchomieniowego PIN buforu lub buforów określone w `userData` na czas trwania operacji We/Wy. Jeśli domena aplikacji jest zwolniony, środowisko uruchomieniowe zachowuje pamięć przypięty przed zakończeniem operacji We/Wy."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Delegata, który reprezentuje metodę wywołania zwrotnego wywoływana po zakończeniu asynchronicznej operacji We/Wy."
    - id: userData
      type: System.Object
      description: "Obiekt lub tablica obiektów reprezentująca bufor wejściowy lub wyjściowy dla tej operacji. Każdy obiekt reprezentuje buforu, na przykład tablicy bajtów."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Niezarządzany wskaźnik do <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Bieżący <xref href=&quot;System.Threading.Overlapped&quot;> </xref> został już spakowany."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Wypakowuje określonego niezarządzanych <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury do zarządzanego <xref href=&quot;System.Threading.Overlapped&quot;> </xref> obiektu."
  remarks: "<xref:System.Threading.NativeOverlapped>Struktury nie zostanie zwolniona z pamięci fizycznej do czasu wywołania <xref:System.Threading.Overlapped.Free%2A>metody.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Niezarządzany wskaźnik do <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury."
    return:
      type: System.Threading.Overlapped
      description: "<xref href=&quot;System.Threading.Overlapped&quot;> </xref> Obiektu zawierającego informacje o rozpakowane z natywnego struktury."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pakiety do bieżącego wystąpienia <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury, określając delegata do wywołania po zakończeniu asynchronicznej operacji We/Wy. Wywołanie stosu nie są propagowane."
  remarks: "Niezarządzany wskaźnik zwracane przez tę metodę mogą być przekazywane do systemu operacyjnego w pokrywającej się z inną operacji We/Wy. <xref:System.Threading.NativeOverlapped>Zawartych w pamięci fizycznej do struktury <xref:System.Threading.Overlapped.Unpack%2A>jest wywoływana.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Element wywołujący jest odpowiedzialny za przypinanie buforu. Jeśli domena aplikacji jest zwolniony, jednak dojście do buforu przypiętych zostanie zniszczony i wydane buforu, pozostawiając operacji We/Wy zapisu zwolnionych adres. Z tego powodu warto użyć <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>przeciążenie metody, w którym środowiska uruchomieniowego PIN buforu.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Using <xref:System.Threading.Overlapped.UnsafePack%2A>metody przypadkowo może otworzyć się luka w zabezpieczeniach.</xref:System.Threading.Overlapped.UnsafePack%2A> Zabezpieczenia dostępu kodu podstawowych jego uprawnień kontroli uprawnienia wszystkich obiektów wywołujących na stosie. <xref:System.Threading.Overlapped.UnsafePack%2A>— Metoda nie propaguje wywoływania stosu.</xref:System.Threading.Overlapped.UnsafePack%2A> Złośliwy kod, można wykorzystać, aby uniknąć kontroli uprawnień."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Delegata, który reprezentuje metodę wywołania zwrotnego wywoływana po zakończeniu asynchronicznej operacji We/Wy."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Niezarządzany wskaźnik do <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Bieżący <xref href=&quot;System.Threading.Overlapped&quot;> </xref> został już spakowany."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pakiety do bieżącego wystąpienia <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury, określając delegata do wywołania po zakończeniu asynchronicznej operacji We/Wy i zarządzanego obiektu, który służy jako bufor. Wywołanie stosu nie są propagowane."
  remarks: "Niezarządzany wskaźnik zwracane przez tę metodę mogą być przekazywane do systemu operacyjnego w pokrywającej się z inną operacji We/Wy. <xref:System.Threading.NativeOverlapped>Zawartych w pamięci fizycznej do struktury <xref:System.Threading.Overlapped.Unpack%2A>jest wywoływana.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Bufor lub buforów określone w `userData` muszą być takie same jak przekazany do funkcji niezarządzanego systemu operacyjnego, który wykonuje asynchroniczne We/Wy.       Środowisko uruchomieniowe PIN buforu lub buforów określone w`userData` na czas trwania operacji We/Wy. Jeśli domena aplikacji jest zwolniony, środowisko uruchomieniowe zachowuje pamięć przypięty przed zakończeniem operacji We/Wy.      > [!CAUTION] > Przy użyciu UnsafePack metody przypadkowo może otworzyć się luka w zabezpieczeniach. Zabezpieczenia dostępu kodu podstawowych jego uprawnień kontroli uprawnienia wszystkich obiektów wywołujących na stosie. Metoda UnsafePack nie są propagowane stosu wywołania. Złośliwy kod, można wykorzystać, aby uniknąć kontroli uprawnień."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Delegata, który reprezentuje metodę wywołania zwrotnego wywoływana po zakończeniu asynchronicznej operacji We/Wy."
    - id: userData
      type: System.Object
      description: "Obiekt lub tablica obiektów reprezentująca bufor wejściowy lub wyjściowy dla tej operacji. Każdy obiekt reprezentuje buforu, na przykład tablicy bajtów."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Niezarządzany wskaźnik do <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktury."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Bieżący <xref href=&quot;System.Threading.Overlapped&quot;> </xref> już spakowane."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
