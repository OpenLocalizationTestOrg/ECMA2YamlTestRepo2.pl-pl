### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcConnection
  id: OdbcConnection
  children:
  - System.Data.Odbc.OdbcConnection.#ctor
  - System.Data.Odbc.OdbcConnection.#ctor(System.String)
  - System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.BeginTransaction
  - System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  - System.Data.Odbc.OdbcConnection.Close
  - System.Data.Odbc.OdbcConnection.ConnectionString
  - System.Data.Odbc.OdbcConnection.ConnectionTimeout
  - System.Data.Odbc.OdbcConnection.CreateCommand
  - System.Data.Odbc.OdbcConnection.CreateDbCommand
  - System.Data.Odbc.OdbcConnection.Database
  - System.Data.Odbc.OdbcConnection.DataSource
  - System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcConnection.Driver
  - System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.Odbc.OdbcConnection.GetSchema
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  - System.Data.Odbc.OdbcConnection.InfoMessage
  - System.Data.Odbc.OdbcConnection.Open
  - System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  - System.Data.Odbc.OdbcConnection.ServerVersion
  - System.Data.Odbc.OdbcConnection.State
  - System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
  type: Class
  summary: "Reprezentuje otwartego połączenia ze źródłem danych."
  remarks: "Obiekt OdbcConnection reprezentuje unikatowy połączenie ze źródłem danych utworzone za pomocą parametrów połączenia lub nazwy źródła danych (DSN) ODBC. W systemie klienta i serwera bazy danych jest odpowiednikiem połączenie sieciowe z serwerem. W zależności od funkcje obsługiwane przez sterownik ODBC macierzysty niektóre metody lub właściwości obiektu OdbcConnection mogą nie być dostępne.       Obiekt OdbcConnection używa natywnego zasoby, takie jak dojścia środowiska i połączenia ODBC. Należy zawsze jawnie Zamknij otwarte obiekty OdbcConnection przez wywołanie metody <xref:System.Data.Odbc.OdbcConnection.Close%2A>lub **Dispose** przed OdbcConnection obiektu wykracza poza zakres lub umieszczając połączenia w `Using` instrukcji.</xref:System.Data.Odbc.OdbcConnection.Close%2A> Nie spowoduje to pozostawia zwolnienie tych zasobów natywnych wyrzucanie elementów bezużytecznych. Może nie bez ich natychmiast. Po pewnym czasie powodują to z kolei podstawowy sterownik brakować zasobów lub osiągnięcia maksymalnego limitu. Spowodowało to sporadyczne błędy. Na przykład mogą wystąpić `Maximum Connections` — błędy związane ze, podczas gdy liczba połączeń oczekują do usunięcia przez moduł garbage collector. Jawnie zamykania połączeń z pozwala na efektywniejsze wykorzystanie zasobów natywnych, rozszerzanie skalowalności i poprawia ogólną wydajnością.      > [!NOTE] > Aby wdrożyć aplikacje wysokiej wydajności, należy często użyć puli połączeń. Jednak użycie dostawcy danych programu .NET Framework dla ODBC, trzeba włączyć puli połączeń, ponieważ dostawca zarządza to automatycznie.       Jeśli jeden z `Execute` metody <xref:System.Data.Odbc.OdbcCommand>klasy powoduje krytyczny <xref:System.Data.Odbc.OdbcException>(na przykład ważność programu SQL Server, poziomu 20 lub większej), można zamknąć OdbcConnection.</xref:System.Data.Odbc.OdbcException> </xref:System.Data.Odbc.OdbcCommand> Jednak użytkownik może ponownie otworzyć połączenie i kontynuować.       Aplikacja, która tworzy wystąpienie obiektu OdbcConnection może wymagać wszystkim zainteresowanym bezpośrednich i pośrednich do wystarczających uprawnień, aby kod żądania kontroli zabezpieczeń deklaratywne lub konieczne ustawienie. OdbcConnection tworzy żądania kontroli zabezpieczeń przy użyciu <xref:System.Data.Odbc.OdbcPermission>obiektu.</xref:System.Data.Odbc.OdbcPermission> Użytkownicy można sprawdzić, czy ich kod jest wystarczające uprawnienia za pomocą <xref:System.Data.Odbc.OdbcPermissionAttribute>obiektu.</xref:System.Data.Odbc.OdbcPermissionAttribute> Użytkownicy i Administratorzy również służy narzędzie zasad zabezpieczenia dostępu kodu (Caspol.exe) do modyfikowania zasad zabezpieczeń na poziomie komputera, użytkownika i organizacji. Aby uzyskać więcej informacji, zobacz [zabezpieczenia dostępu kodu i ADO.NET](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać więcej informacji na temat obsługi komunikaty ostrzegawcze i informacyjne ze źródła danych, zobacz [zdarzeń połączenia](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcCommand> and an OdbcConnection. The OdbcConnection is opened and set as the <xref:System.Data.Odbc.OdbcCommand.Connection%2A> property. The example then calls <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OdbcConnection#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> klasy."
  remarks: "Jeśli nowe wystąpienie klasy <xref:System.Data.Odbc.OdbcConnection>jest tworzony tylko do zapisu i tylko do odczytu właściwości są ustawione na następujące wartości początkowej, o ile nie są specjalnie ustawiane przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>Właściwości.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| pusty ciąg (&quot;&quot;) |   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| pusty ciąg (&quot;&quot;) |       Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>Właściwości.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_9_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_9_1.vb)]"
  syntax:
    content: public OdbcConnection ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> klasy z określonych parametrów połączenia."
  remarks: "Jeśli nowe wystąpienie klasy <xref:System.Data.Odbc.OdbcConnection>jest tworzony tylko do zapisu i tylko do odczytu właściwości są ustawione na następujące wartości początkowej, o ile nie są specjalnie ustawiane przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>Właściwości.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| pusty ciąg (&quot;&quot;) |       Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>Właściwości.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-vb[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public OdbcConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Połączenie używane otworzyć źródła danych."
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Do dodania."
    return:
      type: System.Data.Common.DbTransaction
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Uruchamia transakcji w źródle danych."
  remarks: "Aby przekazać ani wycofać transakcji, należy jawnie użyć <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>lub <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>metody.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Aby poprawnie wykonuje dostawcy danych programu .NET Framework dla ODBC transakcji zarządzania modelu, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez źródło danych.      > [!NOTE] > Jeśli nie określisz poziom izolacji, poziom izolacji, który będzie określana przez sterownik. Aby określić poziom izolacji przy użyciu metody BeginTransaction, użyj przeciążenia, które przyjmuje `isolevel` parametru."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_6_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_6_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcja jest obecnie aktywna. Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Rozpoczyna się transakcji w źródle danych z określonym <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> wartości."
  remarks: "Aby przekazać ani wycofać transakcji, należy jawnie użyć <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>lub <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>metody.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Aby poprawnie wykonuje dostawcy danych programu .NET Framework dla ODBC transakcji zarządzania modelu, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez źródło danych."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_4_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_4_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);
    parameters:
    - id: isolevel
      type: System.Data.IsolationLevel
      description: "Poziom izolacji transakcji dla tego połączenia. Jeśli nie określisz poziom izolacji, jest używany domyślny poziom izolacji sterownika."
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcja jest obecnie aktywna. Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Zmiany w bieżącej bazie danych skojarzone z otwartym <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  remarks: "`value` Parametr musi zawierać prawidłową nazwę bazy danych i nie może zawierać wartości null, pustym ciągiem (&quot;&quot;), lub ciągiem o tylko pustych znaków."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "Nazwa bazy danych."
  overload: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nazwa bazy danych jest nieprawidłowa."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie nie jest otwarty."
  - type: System.Data.Odbc.OdbcException
    commentId: T:System.Data.Odbc.OdbcException
    description: "Nie można zmienić bazy danych."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Close
  id: Close
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Zamyka połączenie ze źródłem danych."
  remarks: "Close — metoda wycofuje wszystkie transakcje oczekujące. Następnie go zwalnia połączenia z puli połączeń lub zamyka połączenie, jeśli buforowanie połączeń jest wyłączone. Jeśli Zamknij jest wywoływana podczas obsługi <xref:System.Data.Common.DbConnection.StateChange>zdarzeń, Brak dodatkowych <xref:System.Data.Common.DbConnection.StateChange>uruchomienia zdarzeń.</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       Aplikacja może wywołać Zamknij więcej niż jeden raz bez generowania wyjątku.      > [!NOTE] > Użycie dostawcy danych programu .NET Framework dla ODBC, trzeba włączyć puli połączeń, ponieważ zarządza to automatycznie Menedżera sterowników ODBC. Aby uzyskać więcej informacji na temat sposobu włączania i wyłączania puli połączeń dokumentacji Otwórz połączenie bazy danych (ODBC) firmy Microsoft.      > [!CAUTION] > Nie należy wywoływać metody Close lub `Dispose` na połączenie, DataReader lub innego obiektu zarządzanego w `Finalize` metody klasy. W finalizator należy tylko Zwolnij niezarządzane zasoby, które bezpośrednio należą do klasy. Jeśli klasa nie ma żadnych niezarządzanych zasobów, nie dołączaj `Finalize` metody w definicji klasy. Aby uzyskać więcej informacji, zobacz [wyrzucanie elementów bezużytecznych](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, opens it, displays some of its properties, and then closes the connection.  \n  \n [!code-vb[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_0_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_0_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia ciąg używany do otwierania źródła danych."
  remarks: "The ConnectionString property is designed to match ODBC connection string format as closely as possible. The ConnectionString can be set only when the connection is closed, and as soon as it is set it is passed, unchanged, to the Driver Manager and the underlying driver. Therefore, the syntax for the ConnectionString must exactly match what the Driver Manager and underlying driver support.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. This includes an ODBC data source name (DSN). The following example illustrates several possible connection strings.  \n  \n```  \n\"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;\"  \n  \n\"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes\"  \n  \n\"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\\bin\\Northwind.mdb\"  \n  \n\"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\\bin\\book1.xls\"  \n  \n\"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\\bin\"  \n  \n\"DSN=dsnname\"  \n```  \n  \n> [!NOTE]\n>  The .NET Framework Data Provider for ODBC does not support the `Persist Security Info` keyword that is supported by other .NET Framework data providers. However, the ConnectionString property behaves as if `Persist Security Info` were set to `false`. This means that you cannot retrieve the password from the ConnectionString property if the connection has been opened. When the ConnectionString property is read from an <xref:System.Data.Odbc.OdbcConnection> object that has been opened, the connection string is returned minus the password. You cannot change this behavior; therefore, if the application requires the password, store it separately before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>.  \n  \n Many of the settings specified in the string have corresponding read-only properties (for example, `Server=(local)`, which corresponds to the <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> property). These properties are updated after the connection is opened, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.Odbc.OdbcConnection> properties (such as <xref:System.Data.Odbc.OdbcConnection.Database%2A>) return only default settings or those settings specified in the ConnectionString.  \n  \n In the Microsoft .NET Framework version 1.0, validation of the connection string does not occur until an application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method. It is the responsibility of the underlying ODBC driver to validate the connection string. If the connection string contains invalid or unsupported properties, the driver may raise an <xref:System.Data.Odbc.OdbcException> at run time.  \n  \n However, in the .NET Framework version 1.1 and later versions, some basic validation of the connection string occurs as soon as you set the ConnectionString property. At that time, the data provider verifies that the connection string meets the \"keyword=value;...\" format, but it does not verify whether keywords or values are valid. The remaining verification is performed by the underlying ODBC driver when the application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.  \n  \n An ODBC connection string has the following syntax:  \n  \n```  \nconnection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  \nempty-string ::=  \nattribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  \nattribute-keyword ::= DSN | UID | PWD  \n | driver-defined-attribute-keyword  \nattribute-value ::= character-string  \ndriver-defined-attribute-keyword ::= identifier  \n```  \n  \n where `character-string` has zero or more characters; `identifier` has one or more characters; `attribute-keyword` is not case sensitive; `attribute-value` can be case sensitive; and the value of the DSN keyword does not consist only of blanks.  \n  \n Because of connection string and initialization file grammar, keywords and attribute values should be avoided that contain the characters []{}(),;?*=!@ not enclosed with braces. The value of the DSN keyword cannot consist only of blanks and should not contain leading blanks. Because of the grammar of the system information, keywords and data source names cannot contain the backslash (\\\\) character.  \n  \n Applications do not have to add braces around the attribute value after the Driver keyword unless the attribute contains a semicolon (;), in which case the braces are required. If the attribute value that the driver receives includes braces, the driver should not remove them but they should be part of the returned connection string.  \n  \n A DSN or connection string value enclosed with braces ({}) that contains any of the characters []{}(),;?*=!@ is passed intact to the driver. However, when you use these characters in a keyword, the Driver Manager returns an error when you work with file DSNs, but passes the connection string to the driver for regular connection strings. Avoid using embedded braces in a keyword value.  \n  \n The connection string may include any number of driver-defined keywords. Because the DRIVER keyword does not use information from the system, the driver must define enough keywords so that a driver can connect to a data source using only the information in the connection string. The driver defines which keywords are required to connect to the data source.  \n  \n If any keywords are repeated in the connection string, there is no guarantee which value will be selected.  \n  \n> [!NOTE]\n>  If an ODBC driver supports connection strings longer than 1024 characters, you can use a data source name (DSN) to exceed the maximum length limitation."
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Parametry połączenia sterownika ODBC, zawierający ustawienia, takie jak nazwa źródła danych, wymagane do ustanowienia połączenia początkowego. Wartość domyślna to ciąg pusty (&quot;&quot;). Maksymalna długość to 1024 znaki."
  overload: System.Data.Odbc.OdbcConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia czas oczekiwania podczas próby nawiązania połączenia przed zakończeniem próby i wygenerowaniem błędu."
  remarks: "W odróżnieniu od dostawcy danych .NET Framework dla programu SQL Server i OLE DB .NET Framework Data Provider for ODBC nie obsługuje ustawienie tej właściwości wartości ciągu połączenia, ponieważ nie jest prawidłowym słowem kluczowym połączenia ODBC. Aby określić limit czasu połączenia, należy ustawić właściwość ConnectionTimeout przed wywołaniem <xref:System.Data.Odbc.OdbcConnection.Open%2A>.</xref:System.Data.Odbc.OdbcConnection.Open%2A> To jest równoznaczne z ustawieniem ODBC `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT atrybutu."
  syntax:
    content: public int ConnectionTimeout { get; set; }
    return:
      type: System.Int32
      description: "Czas w sekundach oczekiwania na połączenie otworzyć. Wartość domyślna to 15 sekund."
  overload: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podana wartość jest mniejsza niż 0."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Tworzy i zwraca <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> obiekt skojarzony z <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public System.Data.Odbc.OdbcCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> Obiektu."
  overload: System.Data.Odbc.OdbcConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Database
  id: Database
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera nazwę bieżącej bazy danych lub baza danych ma być używany po otwarciu połączenia."
  remarks: "Na początku właściwości bazy danych jest ustawiana w parametrach połączenia. Właściwość bazy danych może być aktualizowana przy użyciu <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>metody.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> Jeśli zmienisz bieżącej bazy danych za pomocą instrukcji SQL lub <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>metody, wysyłany jest komunikat informacyjny, a następnie właściwość jest zaktualizowane.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>       Podczas pobierania właściwości bazy danych jest odpowiednikiem wywoływanie funkcji ODBC `SQLGetInfo` z `Attribute` ustawiona SQL_ATTR_CURRENT_CATALOG."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Nazwa bieżącej bazy danych. Wartość domyślna to ciąg pusty (&quot;&quot;) do momentu połączenia jest otwarty."
  overload: System.Data.Odbc.OdbcConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.DataSource
  id: DataSource
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera nazwę serwera lub nazwa pliku źródła danych."
  remarks: "Podczas pobierania właściwości źródła danych jest odpowiednikiem wywoływanie funkcji ODBC `SQLGetInfo` z `InfoType` ustawiona nazwa_serwera_sql."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and displays the backend data source name.  \n  \n [!code-vb[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Nazwa serwera lub nazwa pliku źródła danych. Wartość domyślna to ciąg pusty (&quot;&quot;) do momentu połączenia jest otwarty."
  overload: System.Data.Odbc.OdbcConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Driver
  id: Driver
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera nazwę sterownika ODBC, określony dla bieżącego połączenia."
  remarks: "Podczas pobierania właściwości sterownika jest odpowiednikiem wywoływanie funkcji ODBC `SQLGetInfo` z `InfoType` ustawiona SQL_DRIVER_NAME."
  syntax:
    content: public string Driver { get; }
    return:
      type: System.String
      description: "Nazwa sterownika ODBC. Zazwyczaj jest to nazwa biblioteki DLL (na przykład Sqlsrv32.dll). Wartość domyślna to ciąg pusty (&quot;&quot;) do momentu połączenia jest otwarty."
  overload: System.Data.Odbc.OdbcConnection.Driver*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Rejestruje w określonym transakcji jako transakcji rozproszonej."
  remarks: "Nowy w ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metody można zarejestrować transakcji rozproszonej.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction>wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions>przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane **EnlistDistributedTransaction** w tym celu.</xref:System.Transactions> </xref:System.Transactions.Transaction> Aby uzyskać więcej informacji, zobacz [transakcji rozproszonych](~/add/includes/ajax-current-ext-md.md).       Możesz zarejestrować się w istniejących przy użyciu transakcji rozproszonej <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A>metody po wyłączeniu automatycznej rejestracji.</xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> Rejestrowanie w istniejącej transakcji rozproszonej upewnia się, że, jeśli transakcja jest zatwierdzona lub wycofana, zmiany dokonane przez kod w źródle danych są również zatwierdzenia lub wycofania. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction zwraca wyjątek, jeśli <xref:System.Data.OdbcClient.OdbcConnection>została już rozpoczęta transakcji za pomocą <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A> </xref:System.Data.OdbcClient.OdbcConnection> Jednak jeśli transakcja jest transakcji lokalnej rozpoczęty o godzinie źródło danych (na przykład, wykonując jawnie za pomocą instrukcji BEGIN TRANSACTION <xref:System.Data.OdbcClient.OdbcCommand>obiektu), EnlistDistributedTransaction wycofuje transakcji lokalnej i powoduje zarejestrowanie w istniejącej transakcji rozproszonej, zgodnie z żądaniem.</xref:System.Data.OdbcClient.OdbcCommand> Nie otrzymasz powiadomienie, że lokalne transakcja została wycofana i są odpowiedzialny za zarządzanie wszystkich transakcji lokalnej nie została uruchomiona przy użyciu <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Odwołanie do istniejącej <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> w którym można zarejestrować."
  overload: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Rejestruje w określonym transakcji jako transakcji rozproszonej."
  remarks: 'Nowy w ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metody można zarejestrować transakcji rozproszonej.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction>wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions>przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane **EnlistDistributedTransaction**, który korzysta z **System.EnterpriseServices.ITransaction** obiektu.</xref:System.Transactions> </xref:System.Transactions.Transaction> Ma również semantyki nieco inne: po połączenie jawnie jest zarejestrowana w transakcji, nie może być unenlisted lub zarejestrowany w innej transakcji, dopóki nie zakończy Pierwsza transakcja. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Odwołanie do istniejącej <xref href=&quot;System.Transactions.Transaction&quot;> </xref> w którym można zarejestrować."
  overload: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  id: GetSchema
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> przy użyciu określonej nazwy dla nazwy schematu."
  remarks: "Gdy `collectionName` ma wartość null, <xref:System.Data.DataTable>zawiera informacje o wszystkich dostępnych metadanych i ograniczeń.</xref:System.Data.DataTable>      > [!NOTE] > Wszystkie ograniczenia, które dotyczą `SQLStatistics` dotyczą również metody `ODBCConnection.GetSchema(&quot;`indeksów`&quot;)` kolekcji."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Określa nazwę schematu do zwrócenia."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> przy użyciu określonego ciągu dla nazwy schematu i tablicy określony ciąg wartości ograniczeń."
  remarks: "Gdy `collectionName` jest określony jako wartość null, <xref:System.Data.DataTable>zawiera informacje o wszystkich metadanych, który jest dostępny, a także jej ograniczenia.</xref:System.Data.DataTable>       `restrictionValues` Można podać parametru *n* głębokość wartości, które są określone przez kolekcji ograniczeń dla określonej kolekcji. Aby ustawić wartości dla danego ograniczeń i nie ustawić wartości właściwości inne ograniczenia, należy ustawić poprzednich ograniczeń do wartości null, a następnie przekaż odpowiednią wartość w ograniczenia, które chcesz określić wartość.       Na przykład jest kolekcją &quot;Tabele&quot;. Jeśli kolekcja &quot;Tabele&quot; ma trzy ograniczenia (bazy danych, właściciela i nazwy tabeli) i chcesz odzyskać tylko w tabelach, które są skojarzone z właścicielem &quot;Carl&quot;, a następnie będzie potrzebny do przekazywania w następujących wartości: null, &quot;Carl&quot;. Jeśli wartość ograniczenia nie jest przekazany, wartości domyślne są używane dla tego ograniczenia. To tego samego mapowania jako przekazywanie wartość null, która różni się od przekazywanie w ciągu pustego wartość parametru. W takim przypadku ciąg pusty (&quot;&quot;) jest traktowany jako wartość parametru określony.      > [!NOTE] > Wszystkie ograniczenia, które są stosowane do metody SQLStatistics będą stosowane do kolekcji ODBCConnection.GetSchema(&quot;indexes&quot;)."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Określa nazwę schematu do zwrócenia."
    - id: restrictionValues
      type: System.String[]
      description: "Określa zestaw ograniczeń wartości na żądany schemat."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Występuje, gdy wysyła sterownika ODBC, ostrzeżenie lub komunikat informacyjny."
  remarks: "Klienci, w których chcesz przetworzyć ostrzeżenia i komunikaty informacyjne wysyłane przez serwer powinien utworzyć <xref:System.Data.Odbc.OdbcInfoMessageEventHandler>delegata nasłuchiwanie z tym zdarzeniem.</xref:System.Data.Odbc.OdbcInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.Odbc.OdbcInfoMessageEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Open
  id: Open
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Otwiera połączenie ze źródłem danych przy użyciu ustawień właściwości określone przez <xref:System.Data.Odbc.OdbcConnection.ConnectionString*>.</xref:System.Data.Odbc.OdbcConnection.ConnectionString*>"
  remarks: "<xref:System.Data.Odbc.OdbcConnection>Rysuje otwartego połączenia z puli połączeń, jeśli jest dostępny.</xref:System.Data.Odbc.OdbcConnection> W przeciwnym razie nawiązaniem nowego połączenia ze źródłem danych.      > [!NOTE] > Jeśli <xref:System.Data.Odbc.OdbcConnection>zbliża się poza zakresem, reprezentuje połączenie nie jest zamykane automatycznie.</xref:System.Data.Odbc.OdbcConnection> W związku z tym należy jawnie zamknąć połączenie przez wywołanie metody <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **Dispose**, lub umieszczając połączenia w `Using` instrukcji.</xref:System.Data.Odbc.OdbcConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Open*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Funkcjonalność tej metody w klasie podstawowej nie jest obsługiwana i musi zostać wdrożona w klasie pochodnej zamiast tego."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Wskazuje, że dojście środowiska Menedżera sterowników ODBC może być zwolnione po zwolnieniu ostatniego połączenia z podstawowym."
  remarks: "`ReleaseObjectPool`może zostać wywołany, aby zwolnić dojścia środowiska ODBC. Można wywołać tej metody, jeśli na przykład obiekt połączenia nie będą używane ponownie. Po zamknięciu wszystkich połączeń w środowisku, można usunąć środowiska. Należy pamiętać, że wywołanie metody wyłącznie nie faktycznie wydane aktywnych połączeń, które istnieją w środowisku.       Następujące musi wystąpić, aby na koniec zostanie usunięty, środowisko: 1.  Wywołanie <xref:System.Data.Odbc.OdbcConnection.Close%2A>zwolnienia <xref:System.Data.Odbc.OdbcConnection>obiektów ze środowiska.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection.Close%2A>      2.  Zezwala na limit czasu każdego obiektu połączenia.      3.  Wywołanie ReleaseObjectPool.      4.  Wywołaj wyrzucanie elementów bezużytecznych.       Z drugiej strony Jeśli wywołujesz <xref:System.Data.Odbc.OdbcConnection.Close%2A>na wszystkich aktywnych połączeń, wywołaj wyrzucanie elementów bezużytecznych, ale nie należy wywoływać ReleaseObjectPool, pozostają dostępne zasoby zarezerwowane dla środowiska.</xref:System.Data.Odbc.OdbcConnection.Close%2A>       Po wydaniu uchwytu środowiska żądanie nowej <xref:System.Data.Odbc.OdbcConnection>powoduje utworzenie nowego środowiska.</xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera ciąg, który zawiera wersję serwera, z którym klient jest połączony."
  remarks: "Jeśli ServerVersion nie jest obsługiwana przez sterownik ODBC podstawowej ciąg pusty (&quot;&quot;) jest zwracany.       Właściwość ServerVersion ma postać &quot;*##. ##. ###*,&quot; gdzie pierwsze dwie cyfry są wersji głównej, obok dwie cyfry są wersja pomocnicza i wersji są cztery ostatnie cyfry. Sterownik musi renderowania wersję produktu w tym formularzu, ale także dołączyć wersji określonego produktu jako ciąg (na przykład &quot;04.01.0000 Rdb 4.1&quot;). Ten ciąg ma postać &quot;*major.minor.build*&quot; gdzie *głównych* i *pomocnicza* są dokładnie dwie cyfry i *kompilacji* jest dokładnie cztery cyfry."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Wersja podłączony serwer."
  overload: System.Data.Odbc.OdbcConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie jest zamknięte."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.State
  id: State
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera bieżący stan połączenia."
  remarks: "Zmiany stanu dozwolone są następujące: - z `Closed` do `Open`za pomocą <xref:System.Data.Odbc.OdbcConnection.Open%2A>— Metoda.</xref:System.Data.Odbc.OdbcConnection.Open%2A>      -From `Open` do `Closed`, za pomocą <xref:System.Data.Odbc.OdbcConnection.Close%2A>lub **Dispose** metody.</xref:System.Data.Odbc.OdbcConnection.Close%2A>      > [!NOTE] > Wywoływanie właściwości stanu dla otwartego połączenia zwiększa obciążenie aplikacji, ponieważ każde takie wywołanie powoduje wywołanie SQL_ATTR_CONNECTION_DEAD źródłowej sterownika ODBC do ustalenia, czy połączenie jest nadal ważny."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Bitowe połączenie <xref href=&quot;System.Data.ConnectionState&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.Odbc.OdbcConnection>wystąpienia jest rzutowane na <xref:System.ICloneable>interfejsu.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowy <xref:System.Object>czyli kopię tego wystąpienia.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Odbc.OdbcException
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcException
  nameWithType: OdbcException
  fullName: System.Data.Odbc.OdbcException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.Odbc.OdbcConnection.#ctor
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
- uid: System.Data.Odbc.OdbcConnection.Close
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Odbc.OdbcConnection.Database
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcConnection.Driver
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
- uid: System.Data.Odbc.OdbcInfoMessageEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcInfoMessageEventHandler
  nameWithType: OdbcInfoMessageEventHandler
  fullName: System.Data.Odbc.OdbcInfoMessageEventHandler
- uid: System.Data.Odbc.OdbcConnection.Open
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcConnection.#ctor*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection.OdbcConnection
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OdbcConnection.BeginDbTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OdbcConnection.BeginTransaction
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OdbcConnection.ChangeDatabase
- uid: System.Data.Odbc.OdbcConnection.Close*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close
  nameWithType: OdbcConnection.Close
- uid: System.Data.Odbc.OdbcConnection.ConnectionString*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
- uid: System.Data.Odbc.OdbcConnection.CreateCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OdbcConnection.CreateCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OdbcConnection.CreateDbCommand
- uid: System.Data.Odbc.OdbcConnection.Database*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose
  nameWithType: OdbcConnection.Dispose
- uid: System.Data.Odbc.OdbcConnection.Driver*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OdbcConnection.EnlistDistributedTransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OdbcConnection.EnlistTransaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema
  nameWithType: OdbcConnection.GetSchema
- uid: System.Data.Odbc.OdbcConnection.Open*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open
  nameWithType: OdbcConnection.Open
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OdbcConnection.ReleaseObjectPool
- uid: System.Data.Odbc.OdbcConnection.ServerVersion*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcConnection.System.ICloneable.Clone
