### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  id: TypeCodeDomSerializer
  children:
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  langs:
  - csharp
  name: TypeCodeDomSerializer
  nameWithType: TypeCodeDomSerializer
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  type: Class
  summary: "Serializuje obiekt do nowego typu."
  remarks: "Klasa TypeCodeDomSerializer wykonuje te same zadania jako <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, ale szeregowania obiektu za pomocą tej klasy definiuje nowy typ.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))]

      public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  inheritance:
  - System.Object
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: TypeCodeDomSerializer()
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer()
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.TypeCodeDomSerializer()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot;> </xref> klasy."
  syntax:
    content: public TypeCodeDomSerializer ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  id: Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializuje deklaracji danego typu."
  remarks: "Metoda Deserialize deserializuje deklaracji typu kodu wcześniej serializacji. Poniższa tabela przedstawia wykonuje domyślną implementację zadania.      | Zadanie | Opis elementu |   |----------|-----------------|   | Przypadek kontroli czułości | Implementacja szuka usługi <xref:System.CodeDom.Compiler.CodeDomProvider>zdecydować, czy elementy Członkowskie powinny traktować jako wielkość liter lub bez uwzględniania wielkości liter. |   | Sortowanie instrukcji | Wszystkie zmienne Członkowskie i zmienne lokalne z metody init są przechowywane w tabeli.</xref:System.CodeDom.Compiler.CodeDomProvider> Każda instrukcja metody init jest dodawana do kolekcji instrukcji pogrupowane według jego po lewej stronie, aby wszystkie deklaracje Przypisywanie lub działających na konkretnej zmiennej są zgrupowane w tej zmiennej. Zmienne, które mają żadnych instrukcji zostaną odrzucone. |   | Deserializacja | Kolekcje instrukcji dla każdej zmiennej są rozszeregować zgodnie ze zmienną. |       W poniższej tabeli przedstawiono usługi, które wymaga metody Deserialize.      | Usługa | Opis elementu |   |-------------|-----------------|   | <xref:System.CodeDom.Compiler.CodeDomProvider>| Gdy nie niezbędne, usługi, jeśli jest dostępna, służy do określania Jeśli serializacji powinny być uwzględniana wielkość liter lub bez uwzględniania wielkości liter. |   | <xref:System.ComponentModel.IContainer>| Jeśli obiekt nie istnieje w tabeli nazw podczas deserializacji, zapytanie dotyczące <xref:System.ComponentModel.IContainer>staje się.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.CodeDom.Compiler.CodeDomProvider> Jeśli ta kwerenda zakończy się powodzeniem, kontener jest sprawdzany pod kątem obiektu. Kontener jest również używany jako elementu zastępczego argumentu kontenera, wymagane przez składniki. |"
  syntax:
    content: public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Tego menedżera serializacji do użycia na potrzeby serializacji."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "Deklaracji do użycia na potrzeby serializacji typu."
    return:
      type: System.Object
      description: "Główny obiekt."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>typeDecl</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  id: GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Zwraca metodę przechowywania instrukcje służący do serializowania elementu członkowskiego."
  remarks: "Metoda GetInitializeMethod zwraca metodę, aby emitować cały kod inicjowania dla danego elementu członkowskiego. Domyślna implementacja zwraca pustego konstruktora. Jeśli ta sama metoda jest zwracana dla wielu wartości, to samo wystąpienie metody ma zostać zwrócony. Można użyć <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=fullName>słownika do zapamiętania metod, które zostały utworzone.</xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=fullName> `typeDecl` Parametr można również dodać metod infrastruktury. Na przykład jeśli chcesz Emituj oddzielnych metodach dla każdego obiektu, należy pojedynczej metody, która wywołuje wszystkie te metody z kolei. Tej metody można dodać do deklaracji typu kodu, w razie potrzeby."
  syntax:
    content: protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Tego menedżera serializacji do użycia na potrzeby serializacji."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "Deklaracja typu na potrzeby serializacji."
    - id: value
      type: System.Object
      description: "Wartość do użycia na potrzeby serializacji."
    return:
      type: System.CodeDom.CodeMemberMethod
      description: "Metoda używana do wysyłania cały kod inicjowania dla danego elementu członkowskiego."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>typeDecl</code>, or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  id: GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Zwraca tablicę metod, które należy interpretować podczas deserializacji."
  remarks: "Domyślna implementacja zwraca tablicą jednego elementu z konstruktora."
  syntax:
    content: protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Tego menedżera serializacji do użycia na potrzeby serializacji."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "Deklaracja typu na potrzeby serializacji."
    return:
      type: System.CodeDom.CodeMemberMethod[]
      description: "A <xref href=&quot;System.CodeDom.CodeMemberMethod&quot;> </xref> tablicy metod, które należy interpretować podczas deserializacji."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>typeDecl</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  id: Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: Serialize(IDesignerSerializationManager,Object,ICollection)
  nameWithType: TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializuje obiekt główny, tworząc nowe deklaracji typu, która definiuje katalogu głównego."
  remarks: "Metoda serializacja wykonuje serializację obiektu danego głównego i opcjonalne kolekcję elementów, aby utworzyć nową definicję typu. Jeśli `members` kolekcja zawiera wartości, te wartości są serializowane. Same wartości może serializować jako zmienne Członkowskie lub zmiennych lokalnych. To jest realizowane przez wyszukiwanie właściwości rozszerzeń dla obiektu o nazwie `GenerateMember`. Jeśli `true`, generowany jest elementem członkowskim. W przeciwnym razie wartość zmiennej lokalnej jest generowany. Dla wygody `members` Kolekcja może zawierać obiektu głównego. W takim przypadku główny obiekt nie jest również dodać jako elementu członkowskiego lub zmiennej lokalnej.       Nazwa zwróconego typu jest pobierana z nazwy obiektu głównego, jeśli był nazwanego obiektu. Jeśli nie, nazwę jest wykonane z nazwy typu prostego klasy głównym.       W poniższej tabeli przedstawiono zadania wykonywane przez domyślną implementację metody serializacja.      | Zadanie | Opis elementu |   |----------|-----------------|   | Wstępne wypełnianie kontekstu | Kontekst serializacji jest inicjowany z danych w tym <xref:System.ComponentModel.Design.Serialization.RootContext>i <xref:System.CodeDom.CodeTypeDeclaration>|   | Serializacja elementu członkowskiego | Następnie przeprowadzi wszystkie elementy członkowskie i wywołania <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> serializacja</xref:System.CodeDom.CodeTypeDeclaration> </xref:System.ComponentModel.Design.Serialization.RootContext> Ponieważ serializacja jest wykonywana tylko wtedy w <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, gwarantuje to, że serializacji nie jest wykonywane dwukrotnie. |   | Główny serializacji | Następnie serializowany jest obiekt główny i jego instrukcje są dodawane do kolekcji instrukcji. |   | Integracja instrukcji | Po wszystkie obiekty są serializowane, metoda serializacja porządkuje instrukcje i dodaje je do metody zwrócony z <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> Na koniec jest wykonane konstruktora, który wywołuje wszystkie metody zwrócony z <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>. |      — W poniższej tabeli przedstawiono obiekty miejsca metody serializacja na stos kontekstu.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>      | Wystąpienie | Opis elementu |   |--------------|-----------------|   | <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>| Ten serializator.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> Wyprowadzanie klas może być przydatna w celu dodania właściwości publicznej do tej klasy. |   | <xref:System.CodeDom.CodeTypeDeclaration>| Typ tworzonego.</xref:System.CodeDom.CodeTypeDeclaration> Większość obiektów nie są bezpośredni dostęp do tego. |"
  syntax:
    content: public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Tego menedżera serializacji do użycia na potrzeby serializacji."
    - id: root
      type: System.Object
      description: "Obiekt do zserializowania."
    - id: members
      type: System.Collections.ICollection
      description: "Opcjonalne kolekcji elementów członkowskich. Może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pusty."
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> definiuje obiekt główny."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>root</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: TypeCodeDomSerializer()
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer()
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.TypeCodeDomSerializer()
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
- uid: System.CodeDom.CodeMemberMethod
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
- uid: System.CodeDom.CodeMemberMethod[]
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod[]
  spec.csharp:
  - uid: System.CodeDom.CodeMemberMethod
    name: CodeMemberMethod
    nameWithType: CodeMemberMethod
    fullName: CodeMemberMethod[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Serialize(IDesignerSerializationManager,Object,ICollection)
  nameWithType: TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: TypeCodeDomSerializer
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Deserialize
  nameWithType: TypeCodeDomSerializer.Deserialize
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethod
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethods
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Serialize
  nameWithType: TypeCodeDomSerializer.Serialize
