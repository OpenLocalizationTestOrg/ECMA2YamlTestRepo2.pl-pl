### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.IQueryAmbient
  id: IQueryAmbient
  children:
  - System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  langs:
  - csharp
  name: IQueryAmbient
  nameWithType: IQueryAmbient
  fullName: System.Windows.Markup.IQueryAmbient
  type: Interface
  summary: "Zapytania dotyczące tego, czy określona właściwość powinny być traktowane jako otoczenia w bieżącym zakresie."
  remarks: "Celem mechanizmu — właściwość otoczenia jest zwiększenie czasu analizy za informowanie zapisywania obiektu XAML, aby uniknąć tworzenia wystąpienia niektórych obiektów w przypadkach, gdy wiadomo, czy obiekty są wartości, które są tymczasowe i nie przydatne w przypadku aplikacji typowy czas wykonywania. Zwykle wyszukiwań XAML lub XAML przetwarzania metody dostępu get właściwości potrzebny do utworzenia wystąpienia takich obiektów, aby wypełnić reprezentację Graf obiektu wartościami gotowe do użycia.       Jeden element członkowski ma IQueryAmbient: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>       IQueryAmbient jest równoległe mechanizm <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> IQueryAmbient to specjalne mechanizm pozwalający na uniknięcie, aby ustalić informacji i może również act situationally przy użyciu odbicia (danego obiektu można wybrać raport `true` lub `false` dla <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), a atrybut jest zasadniczo analizy statycznej).</xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A> <xref:System.Windows.Markup.AmbientAttribute>mechanizm ogólnych, które mogą być używane przez autorów obiektu języka XAML i zwykle skorelowany dedykowanych XAML typu właściwości system <xref:System.Xaml.XamlMember.IsAmbient%2A>i <xref:System.Xaml.XamlType.IsAmbient%2A>.</xref:System.Xaml.XamlType.IsAmbient%2A> </xref:System.Xaml.XamlMember.IsAmbient%2A></xref:System.Windows.Markup.AmbientAttribute>      ## WPF implementacje z IQueryAmbient w WPF, IQueryAmbient służy do procesu wyszukiwania słownika zasobów. Proces wyszukiwania pobiera kolejnych `Resources` wartości w drzewie logicznym WPF, prace nad głównego zakresu zasobów do momentu klucz został znaleziony lub stwierdzono, że klucz nie istnieje w zakresie. Zazwyczaj w ten sposób wymaga tworzenia wystąpienia <xref:System.Windows.ResourceDictionary>każdego czas odebrania wyników.</xref:System.Windows.ResourceDictionary> Deklarowanie zawartość `Resources` jako otoczenia tak długo jak `Resources` istnieje optymalizuje ten proces wyszukiwania. Na platformie WPF, ten interfejs jest wdrażany w następujących przypadkach:- <xref:System.Windows.FrameworkElement>implementuje <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>do zwrócenia `true` dla wszystkich nazw właściwości, jeśli zawiera on istniejące <xref:System.Windows.ResourceDictionary>dla <xref:System.Windows.FrameworkElement.Resources%2A>, i tak długo, jak zapytanie nie jest dla <xref:System.Windows.FrameworkElement.Resources%2A>samej właściwości.</xref:System.Windows.FrameworkElement.Resources%2A> </xref:System.Windows.FrameworkElement.Resources%2A> </xref:System.Windows.ResourceDictionary> </xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> </xref:System.Windows.FrameworkElement>      - <xref:System.Windows.Style>implementuje tego samego wzorca dla jego <xref:System.Windows.Style.Resources%2A>.</xref:System.Windows.Style.Resources%2A> </xref:System.Windows.Style>      - <xref:System.Windows.Application>implementuje tego samego wzorca dla jego <xref:System.Windows.Application.Resources%2A>.</xref:System.Windows.Application.Resources%2A> </xref:System.Windows.Application>      - <xref:System.Windows.FrameworkContentElement>implementuje tego samego wzorca dla jego <xref:System.Windows.FrameworkContentElement.Resources%2A>.</xref:System.Windows.FrameworkContentElement.Resources%2A> </xref:System.Windows.FrameworkContentElement>      - <xref:System.Windows.FrameworkTemplate>implementuje tego samego wzorca dla jego <xref:System.Windows.FrameworkTemplate.Resources%2A>.</xref:System.Windows.FrameworkTemplate.Resources%2A> </xref:System.Windows.FrameworkTemplate> Również raporty <xref:System.Windows.FrameworkTemplate.Template%2A>zawartości zgodnie z otaczającym, ale zwraca `false` Jeśli wykonanie zapytania dotyczącego <xref:System.Windows.FrameworkTemplate.Template%2A>samej siebie.</xref:System.Windows.FrameworkTemplate.Template%2A> </xref:System.Windows.FrameworkTemplate.Template%2A>      — W każdym z tych przypadków, odpowiedniego `Resources` właściwości (i <xref:System.Windows.FrameworkTemplate.Template%2A>) są przypisane jako <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.FrameworkTemplate.Template%2A> Typowy sposób ma zapytanie dla właściwości, które nie są <xref:System.Windows.Markup.AmbientAttribute>przypisanych właściwości obiektu, który definiuje interfejs.</xref:System.Windows.Markup.AmbientAttribute> Innymi słowy pod warunkiem słownik zasobów istnieje w celu zapewnienia potencjalnych wartości w czasie wykonywania, po utworzeniu wykres obiektu, inne właściwości poza kontener właściwości słownika zasobów może być traktowana jako otoczenia."
  syntax:
    content: public interface IQueryAmbient
  implements: []
  platform:
  - net462
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  id: IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Markup.IQueryAmbient
  langs:
  - csharp
  name: IsAmbientPropertyAvailable(String)
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Zapytania dotyczące tego, czy określona właściwość o nazwie jest uznawana za otoczenia w bieżącym zakresie."
  syntax:
    content: public bool IsAmbientPropertyAvailable (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Nazwa właściwości, aby sprawdzić stan otoczenie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli żądanej właściwości mogą być uważane za otoczenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Markup.IQueryAmbient
  isExternal: false
  name: IsAmbientPropertyAvailable(String)
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*
  parent: System.Windows.Markup.IQueryAmbient
  isExternal: false
  name: IsAmbientPropertyAvailable
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable
