### YamlMime:ManagedReference
items:
- uid: System.Console
  id: Console
  children:
  - System.Console.BackgroundColor
  - System.Console.Beep
  - System.Console.Beep(System.Int32,System.Int32)
  - System.Console.BufferHeight
  - System.Console.BufferWidth
  - System.Console.CancelKeyPress
  - System.Console.CapsLock
  - System.Console.Clear
  - System.Console.CursorLeft
  - System.Console.CursorSize
  - System.Console.CursorTop
  - System.Console.CursorVisible
  - System.Console.Error
  - System.Console.ForegroundColor
  - System.Console.In
  - System.Console.InputEncoding
  - System.Console.IsErrorRedirected
  - System.Console.IsInputRedirected
  - System.Console.IsOutputRedirected
  - System.Console.KeyAvailable
  - System.Console.LargestWindowHeight
  - System.Console.LargestWindowWidth
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  - System.Console.NumberLock
  - System.Console.OpenStandardError
  - System.Console.OpenStandardError(System.Int32)
  - System.Console.OpenStandardInput
  - System.Console.OpenStandardInput(System.Int32)
  - System.Console.OpenStandardOutput
  - System.Console.OpenStandardOutput(System.Int32)
  - System.Console.Out
  - System.Console.OutputEncoding
  - System.Console.Read
  - System.Console.ReadKey
  - System.Console.ReadKey(System.Boolean)
  - System.Console.ReadLine
  - System.Console.ResetColor
  - System.Console.SetBufferSize(System.Int32,System.Int32)
  - System.Console.SetCursorPosition(System.Int32,System.Int32)
  - System.Console.SetError(System.IO.TextWriter)
  - System.Console.SetIn(System.IO.TextReader)
  - System.Console.SetOut(System.IO.TextWriter)
  - System.Console.SetWindowPosition(System.Int32,System.Int32)
  - System.Console.SetWindowSize(System.Int32,System.Int32)
  - System.Console.Title
  - System.Console.TreatControlCAsInput
  - System.Console.WindowHeight
  - System.Console.WindowLeft
  - System.Console.WindowTop
  - System.Console.WindowWidth
  - System.Console.Write(System.Boolean)
  - System.Console.Write(System.Char)
  - System.Console.Write(System.Char[])
  - System.Console.Write(System.Decimal)
  - System.Console.Write(System.Double)
  - System.Console.Write(System.Int32)
  - System.Console.Write(System.Int64)
  - System.Console.Write(System.Object)
  - System.Console.Write(System.Single)
  - System.Console.Write(System.String)
  - System.Console.Write(System.UInt32)
  - System.Console.Write(System.UInt64)
  - System.Console.Write(System.String,System.Object)
  - System.Console.Write(System.String,System.Object[])
  - System.Console.Write(System.Char[],System.Int32,System.Int32)
  - System.Console.Write(System.String,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  - System.Console.WriteLine
  - System.Console.WriteLine(System.Boolean)
  - System.Console.WriteLine(System.Char)
  - System.Console.WriteLine(System.Char[])
  - System.Console.WriteLine(System.Decimal)
  - System.Console.WriteLine(System.Double)
  - System.Console.WriteLine(System.Int32)
  - System.Console.WriteLine(System.Int64)
  - System.Console.WriteLine(System.Object)
  - System.Console.WriteLine(System.Single)
  - System.Console.WriteLine(System.String)
  - System.Console.WriteLine(System.UInt32)
  - System.Console.WriteLine(System.UInt64)
  - System.Console.WriteLine(System.String,System.Object)
  - System.Console.WriteLine(System.String,System.Object[])
  - System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Console.WriteLine(System.String,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  langs:
  - csharp
  name: Console
  nameWithType: Console
  fullName: System.Console
  type: Class
  summary: "Reprezentuje standardowych strumieni danych wejściowych, wyjściowych i błędów dla aplikacji konsoli. Ta klasa nie może być dziedziczona.       Aby przejrzeć kod źródłowy .NET Framework dla tego typu, zobacz [źródło odwołania](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal. For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands. The Console class provides basic support for applications that read characters from, and write characters to, the console.  \n  \n For information about developing with the Console class, see the following sections:  \n  \n-   [Console I/O Streams](#Streams)  \n  \n-   [Screen Buffer and Console Window](#Buffer)  \n  \n-   [Unicode Support for the Console](#Unicode)  \n  \n-   [Common Operations](#Operations)  \n  \n-   [.NET Core Notes](#Core)  \n  \n<a name=\"Streams\"></a>   \n## Console I/O Streams  \n When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream. Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream. These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=fullName>, <xref:System.Console.Out%2A?displayProperty=fullName>, and <xref:System.Console.Error%2A?displayProperty=fullName> properties.  \n  \n By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=fullName> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=fullName> objects that represent a console window. However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files. To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=fullName>, <xref:System.Console.SetOut%2A?displayProperty=fullName>, or <xref:System.Console.SetError%2A?displayProperty=fullName> method, respectively. I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams. This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>, execute synchronously if the object represents a console stream.  \n  \n> [!NOTE]\n>  Do not use the Console class to display output in unattended applications, such as server applications. Calls to methods such as <xref:System.Console.Write%2A?displayProperty=fullName> and <xref:System.Console.WriteLine%2A?displayProperty=fullName> have no effect in GUI applications.  \n  \n Console class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file. Program your application to catch <xref:System.IO.IOException?displayProperty=fullName> exceptions if you redirect a standard stream. You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=fullName> exception.  \n  \n It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties. For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=fullName> method reads input from the standard input stream. Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed (\"\\r\\n\"). However, the Console class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.  \n  \n You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string. For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:  \n  \n `Console.Error.NewLine = \"\\r\\n\\r\\n\";`  \n  \n You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:  \n  \n `Console.Error.WriteLine();`  \n  \n<a name=\"Buffer\"></a>   \n## Screen Buffer and Console Window  \n Two closely related features of the console are the screen buffer and the console window. Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer. The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character. Each character has its own foreground color, and each character cell has its own background color.  \n  \n The screen buffer is viewed through a rectangular region called the console window. The console window is another attribute of the console; it is not the console itself, which is an operating system window. The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer. If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.  \n  \n A cursor indicates the screen buffer position where text is currently read or written. The cursor can be hidden or made visible, and its height can be changed. If the cursor is visible, the console window position is moved automatically so the cursor is always in view.  \n  \n The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin. Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0. The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=fullName>.  \n  \n<a name=\"Unicode\"></a>   \n## Unicode Support for the Console  \n In general, the console reads input and writes output by using the current console code page, which the system locale defines by default. A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately. The following example illustrates this problem. It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console. If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.  \n  \n [!code-cs[System.Console.Class#1](~/add/codesnippet/csharp/t-system.console_1.cs)]\n [!code-vb[System.Console.Class#1](~/add/codesnippet/visualbasic/t-system.console_1.vb)]  \n  \n In addition to supporting code pages, the Console class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class. Beginning with the .NET Framework 4.5, the Console class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class. To display Unicode characters to the console. you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.  \n  \n Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character. To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console. The following example shows how you can programmatically change the font from a raster font to Lucida Console.  \n  \n [!code-cs[System.Console.Class.Unsafe#3](~/add/codesnippet/csharp/setfont1/setfont1.cs#3)]\n [!code-vb[System.Console.Class.Unsafe#3](~/add/codesnippet/visualbasic/t-system.console_2.vb)]  \n  \n However, TrueType fonts can display only a subset of glyphs. For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02. To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.  \n  \n Windows uses font linking to display glyphs that are not available in a particular font. For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](http://go.microsoft.com/fwlink/?LinkId=229111). Linked fonts are defined in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink subkey of the registry. Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font. Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*. The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.  \n  \n [!code-cs[System.Console.Class#2](~/add/codesnippet/csharp/t-system.console_3.cs)]\n [!code-vb[System.Console.Class#2](~/add/codesnippet/visualbasic/t-system.console_3.vb)]  \n  \n Unicode support for the console has the following limitations:  \n  \n-   UTF-32 encoding is not supported. The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.  \n  \n-   Bidirectional output is not supported.  \n  \n-   Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.  \n  \n-   Display of characters in complex scripts is not supported.  \n  \n-   Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters. To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=fullName> method before sending output to the console. In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=fullName> method is called.  \n  \n     [!code-cs[System.Console.Class#5](~/add/codesnippet/csharp/t-system.console_4.cs)]\n     [!code-vb[System.Console.Class#5](~/add/codesnippet/visualbasic/t-system.console_4.vb)]  \n  \n     Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.  \n  \n-   If a font provides a glyph for a code point in the private use area, that glyph will be displayed. However, because characters in the private use area are application-specific, this may not be the expected glyph.  \n  \n The following example displays a range of Unicode characters to the console. The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`). It assumes that the console is using a TrueType font.  \n  \n [!code-cs[System.Console.Class#4](~/add/codesnippet/csharp/t-system.console_5.cs)]\n [!code-vb[System.Console.Class#4](~/add/codesnippet/visualbasic/t-system.console_5.vb)]  \n  \n<a name=\"Operations\"></a>   \n## Common Operations  \n The Console class contains the following methods for reading console input and writing console output:  \n  \n-   The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.  \n  \n-   The <xref:System.Console.ReadLine%2A> method reads an entire line of input.  \n  \n-   The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.  \n  \n-   A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.  \n  \n The Console class also contains methods and properties to perform the following operations:  \n  \n-   Get or set the size of the screen buffer. The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.  \n  \n-   Get or set the size of the console window. The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.  \n  \n-   Get or set the size of the cursor. The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.  \n  \n-   Get or set the position of the console window relative to the screen buffer. The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.  \n  \n-   Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.  \n  \n-   Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.  \n  \n-   Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.  \n  \n-   Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.  \n  \n<a name=\"Core\"></a>   \n## [!INCLUDE[net_core](~/add/includes/net-core-md.md)] Notes  \n In the .NET Framework on the desktop, the Console class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding. For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default. However, [!INCLUDE[net_core](~/add/includes/net-core-md.md)] may make only a limited subset of these encodings available. Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> is used as the default encoding for the console.  \n  \n If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any Console methods:  \n  \n1.  Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.  \n  \n2.  Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName> property.  \n  \n3.  Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the additional encodings supported by the encoding provider available.  \n  \n The Console class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any Console output methods."
  example:
  - "The following example demonstrates how to read data from, and write data to, the standard input and output streams. Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.  \n  \n [!code-cs[Classic Console Example#1](~/add/codesnippet/csharp/t-system.console_6.cs)]\n [!code-cpp[Classic Console Example#1](~/add/codesnippet/cpp/t-system.console_6.cpp)]\n [!code-vb[Classic Console Example#1](~/add/codesnippet/visualbasic/t-system.console_6.vb)]"
  syntax:
    content: public static class Console
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Console.BackgroundColor
  id: BackgroundColor
  parent: System.Console
  langs:
  - csharp
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia kolor tła konsoli."
  remarks: "Zmiana właściwości BackgroundColor dotyczy tylko dane wyjściowe są zapisywane do komórek indywidualnym po zmianie kolor tła. Zmiana koloru tła okna konsoli jako całość, ustaw właściwości BackgroundColor i wywołanie <xref:System.Console.Clear%2A>metody.</xref:System.Console.Clear%2A> W poniższym przykładzie przedstawiono ilustracji.       [!code-vb[System.Console.BackgroundColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_1.vb)][!code-cs[System.Console.BackgroundColor#1](~/add/codesnippet/csharp/p-system.console.backgro_1.cs) ] operację pobierania dla aplikacji systemu Windows, w którym konsola nie istnieje, zwraca <xref:System.ConsoleColor?displayProperty=fullName>.</xref:System.ConsoleColor?displayProperty=fullName>  "
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the BackgroundColor and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.backgro_2.cs)]"
  syntax:
    content: public static ConsoleColor BackgroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "Wartość, która określa kolor tła konsoli; oznacza to, kolor tła każdego znaku. Wartość domyślna to czarny."
  overload: System.Console.BackgroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolor określony w operacji set nie jest prawidłowym elementem członkowskim <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Beep
  id: Beep
  parent: System.Console
  langs:
  - csharp
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Odtwarza dźwięk sygnału dźwiękowego za pośrednictwem prelegenta konsoli."
  remarks: "Domyślnie dźwięku odtwarza z częstotliwością 800 Hz czas trwania 200 ms.      > [!NOTE] > <xref:System.Console.Beep%2A>Metoda nie jest obsługiwana w 64-bitowych wersjach systemów Windows Vista i Windows XP.</xref:System.Console.Beep%2A>       Dźwięk opakowuje wywołanie systemu Windows [dźwięk, funkcja](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx). Czy dźwiękowego tworzy dźwięk w wersjach systemu Windows przed systemem Windows 7 zależy od obecności mikroukładu czasomierza interwału programowalny 8254. Począwszy od systemu Windows 7, to zależy od domyślnego urządzenia dźwiękowego."
  example:
  - "The following example demonstrates the Beep method. The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.  \n  \n [!code-cs[console.beep#1](~/add/codesnippet/csharp/m-system.console.beep_1.cs)]\n [!code-cpp[console.beep#1](~/add/codesnippet/cpp/m-system.console.beep_1.cpp)]\n [!code-vb[console.beep#1](~/add/codesnippet/visualbasic/m-system.console.beep_1.vb)]"
  syntax:
    content: public static void Beep ();
    parameters: []
  overload: System.Console.Beep*
  exceptions:
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Ta metoda została uruchomiona na serwerze, takich jak SQL Server, który nie zezwala na dostęp do interfejsu użytkownika."
  platform:
  - net462
- uid: System.Console.Beep(System.Int32,System.Int32)
  id: Beep(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Odtwarza dźwięk sygnału dźwiękowego określonej częstotliwości i czasu trwania przez osoby mówiącej konsoli."
  remarks: "<xref:System.Console.Beep%2A>opakowuje wywołanie systemu Windows [dźwięk, funkcja](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</xref:System.Console.Beep%2A> Czy <xref:System.Console.Beep%2A>tworzy dźwięk w wersjach systemu Windows przed systemem Windows 7 zależy od obecności mikroukładu czasomierza interwału programowalny 8254.</xref:System.Console.Beep%2A> Począwszy od systemu Windows 7, to zależy od domyślnego urządzenia dźwiękowego.      > [!NOTE] > <xref:System.Console.Beep%2A>Metoda nie jest obsługiwana w 64-bitowych wersjach systemów Windows Vista i Windows XP.</xref:System.Console.Beep%2A>"
  example:
  - "This example demonstrates the Beep method by playing the first few notes of a song through the console speaker.  \n  \n [!code-cpp[console.beep2#1](~/add/codesnippet/cpp/m-system.console.beep-sy_1.cpp)]\n [!code-vb[console.beep2#1](~/add/codesnippet/visualbasic/m-system.console.beep-sy_1.vb)]\n [!code-cs[console.beep2#1](~/add/codesnippet/csharp/m-system.console.beep-sy_1.cs)]"
  syntax:
    content: public static void Beep (int frequency, int duration);
    parameters:
    - id: frequency
      type: System.Int32
      description: "Częstotliwość dźwięk, począwszy od 37 do 32767 Hz."
    - id: duration
      type: System.Int32
      description: "Czas trwania dźwięku mierzony w milisekundach."
  overload: System.Console.Beep*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>frequency</code>jest mniejsza niż 37 lub więcej niż 32767 Hz.       - lub - <code>duration</code> jest mniejsza niż lub równa zero."
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Ta metoda została uruchomiona na serwerze, takich jak SQL Server, który nie zezwala na dostęp do konsoli."
  platform:
  - net462
- uid: System.Console.BufferHeight
  id: BufferHeight
  parent: System.Console
  langs:
  - csharp
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub Ustawia wysokość obszaru buforu."
  remarks: "Ta właściwość określa liczbę wierszy (lub wierszy) przechowywane w buforze, który jest dostępny w trybie okna konsoli. Z kolei <xref:System.Console.WindowHeight%2A>właściwość definiuje liczbę wierszy, które są wyświetlane w oknie konsoli w dowolnym momencie określonego.</xref:System.Console.WindowHeight%2A> Jeśli liczba wierszy, zapisana w buforze przekracza liczbę wierszy, zdefiniowane przez <xref:System.Console.WindowHeight%2A>Właściwość okna może być przewijane w pionie, tak aby wyświetlone ciągłe liczbę wierszy, które są równe <xref:System.Console.WindowHeight%2A>Właściwości i są zlokalizowane w dowolnym miejscu w buforze.</xref:System.Console.WindowHeight%2A> </xref:System.Console.WindowHeight%2A>       Jeśli operację zmniejsza się wartość właściwości BufferHeight, najwyższym wiersze zostaną usunięte. Na przykład jeśli jest zmniejszyć liczbę wierszy od 300 do 250, od 0 do 49 wiersze zostaną usunięte i istniejące wiersze 50 do 299 stają się linii 249 do 0."
  example:
  - "This example demonstrates the BufferHeight and <xref:System.Console.BufferWidth%2A> properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferh_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferh_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferh_1.vb)]"
  syntax:
    content: public static int BufferHeight { get; set; }
    return:
      type: System.Int32
      description: "Bieżąca wysokość wierszy obszar buforu."
  overload: System.Console.BufferHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość w operacji set jest mniejsza lub równa zero.       wartość w operacji set jest większa niż lub równa - lub - &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - lub - wartość w operacji set jest mniejsza niż <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.BufferWidth
  id: BufferWidth
  parent: System.Console
  langs:
  - csharp
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia szerokość obszaru buforu."
  remarks: "Jeśli operację zmniejsza się wartość właściwości BufferWidth, zostaną usunięte po prawej stronie kolumny. Na przykład jeśli liczba kolumn został zmniejszony z 80 do 60, kolumny 60 do 79 każdego wiersza są usuwane."
  example:
  - "This example demonstrates the <xref:System.Console.BufferHeight%2A> and BufferWidth properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferw_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferw_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferw_1.vb)]"
  syntax:
    content: public static int BufferWidth { get; set; }
    return:
      type: System.Int32
      description: "Bieżąca szerokość kolumn obszaru buforu."
  overload: System.Console.BufferWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość w operacji set jest mniejsza lub równa zero.       wartość w operacji set jest większa niż lub równa - lub - &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - lub - wartość w operacji set jest mniejsza niż <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.CancelKeyPress
  id: CancelKeyPress
  parent: System.Console
  langs:
  - csharp
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: "Występuje, gdy <xref href=&quot;System.ConsoleModifiers&quot;> </xref> klawisz modyfikujący (Ctrl), a następnie <xref href=&quot;System.ConsoleKey&quot;> </xref> konsoli (C) podziału klawisz lub naciśnięciu jednocześnie (Ctrl + C lub Ctrl + Break)."
  remarks: "To zdarzenie jest używany w połączeniu z <xref:System.ConsoleCancelEventHandler?displayProperty=fullName>i <xref:System.ConsoleCancelEventArgs?displayProperty=fullName>.</xref:System.ConsoleCancelEventArgs?displayProperty=fullName> </xref:System.ConsoleCancelEventHandler?displayProperty=fullName> Zdarzenie CancelKeyPress umożliwia aplikacji konsoli przechwycenia sygnał Ctrl + C, aby program obsługi zdarzeń można zdecydować, czy do kontynuowania wykonywania lub przerywania. Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/add/includes/ajax-current-ext-md.md).       Gdy użytkownik naciśnie klawisz Ctrl + C lub Ctrl + Break, CancelKeyPress zdarzenie jest generowane i aplikacji <xref:System.ConsoleCancelEventHandler>program obsługi zdarzeń jest wykonywany.</xref:System.ConsoleCancelEventHandler> Program obsługi zdarzeń jest przekazywany <xref:System.ConsoleCancelEventArgs>obiektu, który ma dwie właściwości przydatne:- <xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, która pozwala określić, czy program obsługi został wywołany po wysłaniu przez użytkownika, naciskając klawisze Ctrl + C (wartość właściwości jest <xref:System.ConsoleSpecialKey?displayProperty=fullName>) lub Ctrl + Break (wartość właściwości jest <xref:System.ConsoleSpecialKey?displayProperty=fullName>).</xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleCancelEventArgs.SpecialKey%2A> </xref:System.ConsoleCancelEventArgs>      - <xref:System.ConsoleCancelEventArgs.Cancel%2A>, która pozwala określić, jak do aplikacji powinien odpowiedź do użytkownika naciśnięcie klawiszy Ctrl + C lub Ctrl + Break.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Domyślnie <xref:System.ConsoleCancelEventArgs.Cancel%2A>właściwość jest `false`, który powoduje, że program wykonywania zakończenie po zamknięciu programu obsługi zdarzeń.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Zmiana właściwości do `true` Określa, czy aplikacja powinno być kontynuowane do wykonania.      > [!TIP] > Jeśli aplikacja ma prosty wymagania, możesz użyć <xref:System.Console.TreatControlCAsInput%2A>Właściwości zamiast tego zdarzenia.</xref:System.Console.TreatControlCAsInput%2A> Przez ustawienie dla tej właściwości `false`, można zapewnić, że aplikacji zawsze kończy działanie, gdy użytkownik naciśnie klawisz Ctrl + C. Przez ustawienie jej na `true`, można zapewnić, że naciśnięcie klawiszy Ctrl + C nie zakończy aplikacji.       Program obsługi zdarzeń dla tego zdarzenia jest wykonywany w wątku puli wątków."
  example:
  - "The following example demonstrates how the CancelKeyPress event is used. When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked. Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property is `false`, which means that the current process will terminate when the event handler terminates. However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property to `true`, which means that the process will not terminate and the read operation will resume.  \n  \n [!code-cs[console.cancelkeypress#1](~/add/codesnippet/csharp/e-system.console.cancelk_1.cs)]\n [!code-cpp[console.cancelkeypress#1](~/add/codesnippet/cpp/e-system.console.cancelk_1.cpp)]\n [!code-vb[console.cancelkeypress#1](~/add/codesnippet/visualbasic/e-system.console.cancelk_1.vb)]"
  syntax:
    content: public static event ConsoleCancelEventHandler CancelKeyPress;
    return:
      type: System.ConsoleCancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Console.CapsLock
  id: CapsLock
  parent: System.Console
  langs:
  - csharp
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą, czy przełącz klawiaturę włączony klawisz CAPS LOCK jest włączony lub wyłączony."
  syntax:
    content: public static bool CapsLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli włączony klawisz CAPS LOCK jest włączony; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli włączony klawisz CAPS LOCK jest wyłączony."
  overload: System.Console.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.Clear
  id: Clear
  parent: System.Console
  langs:
  - csharp
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Czyści buforu konsoli i odpowiedniego okna konsoli wyświetlanych informacji."
  remarks: "Przy użyciu metody Clear odpowiada wywoływania MS-DOS `cls` polecenie w oknie wiersza polecenia. Po wywołaniu metody Clear kursora automatycznie przewija do lewego górnego rogu okna i zawartości buforu ekranu są ustawione na puste wartości, przy użyciu bieżącego kolory pierwszego planu w tle.      > [!NOTE] > Próba wywołania metody Clear, gdy dane wyjściowe aplikacji konsoli jest przekierowywany do pliku zgłasza <xref:System.IO.IOException>.</xref:System.IO.IOException> Aby tego uniknąć, zawsze Zawijaj wywołanie metody Clear w `try`...`catch` blok."
  example:
  - "The following example uses the Clear method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display. If the user chooses not to exit the program, the console's original foreground and background colors are restored and the Clear method is called again before re-executing the loop.  \n  \n [!code-vb[System.Console.Clear#1](~/add/codesnippet/visualbasic/m-system.console.clear_1.vb)]\n [!code-cs[System.Console.Clear#1](~/add/codesnippet/csharp/m-system.console.clear_1.cs)]  \n  \n The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.  \n  \n This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and Clear methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.clear_2.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.clear_2.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.clear_2.vb)]"
  syntax:
    content: public static void Clear ();
    parameters: []
  overload: System.Console.Clear*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.CursorLeft
  id: CursorLeft
  parent: System.Console
  langs:
  - csharp
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub Ustawia położenie kursora w kolumnie w obszarze buforu."
  remarks: ''
  example:
  - "This example demonstrates the CursorLeft and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursorl_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursorl_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursorl_1.vb)]"
  syntax:
    content: public static int CursorLeft { get; set; }
    return:
      type: System.Int32
      description: "Bieżąca pozycja w kolumnach kursora."
  overload: System.Console.CursorLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość w operacji set jest mniejsza od zera.       - lub - wartość w operacji set jest większa niż lub równa <xref:System.Console.BufferWidth*>.</xref:System.Console.BufferWidth*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.CursorSize
  id: CursorSize
  parent: System.Console
  langs:
  - csharp
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub Ustawia wysokość kursor w komórce znaków."
  remarks: "Wygląd kursora różni się od linii poziomej w dolnej części komórki, gdy wartość właściwości jest 1, aby całkowicie wypełnianie komórki, gdy wartość właściwości to 100."
  example:
  - "This example demonstrates the CursorSize property. The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.  \n  \n [!code-cs[console.cursorsize#1](~/add/codesnippet/csharp/p-system.console.cursors_1.cs)]\n [!code-cpp[console.cursorsize#1](~/add/codesnippet/cpp/p-system.console.cursors_1.cpp)]\n [!code-vb[console.cursorsize#1](~/add/codesnippet/visualbasic/p-system.console.cursors_1.vb)]"
  syntax:
    content: public static int CursorSize { get; set; }
    return:
      type: System.Int32
      description: "Rozmiar kursora wyrażone jako procent wysokość komórki znaków. Właściwość wartości może się wahać od 1 do 100."
  overload: System.Console.CursorSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określona w operacji set jest mniejszy niż 1 lub większa niż 100."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.CursorTop
  id: CursorTop
  parent: System.Console
  langs:
  - csharp
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub Ustawia położenie kursora w wierszu w obszarze buforu."
  remarks: ''
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and CursorTop properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursortop_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursortop_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursortop_1.vb)]"
  syntax:
    content: public static int CursorTop { get; set; }
    return:
      type: System.Int32
      description: "Bieżąca pozycja w wierszach kursora."
  overload: System.Console.CursorTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość w operacji set jest mniejsza od zera.       - lub - wartość w operacji set jest większa niż lub równa <xref:System.Console.BufferHeight*>.</xref:System.Console.BufferHeight*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.CursorVisible
  id: CursorVisible
  parent: System.Console
  langs:
  - csharp
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia wartość wskazującą, czy kursor jest widoczny."
  remarks: ''
  example:
  - "This example demonstrates the CursorVisible property. The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.  \n  \n [!code-cs[console.cursorvis#1](~/add/codesnippet/csharp/p-system.console.cursorv_1.cs)]\n [!code-vb[console.cursorvis#1](~/add/codesnippet/visualbasic/p-system.console.cursorv_1.vb)]\n [!code-cpp[console.cursorvis#1](~/add/codesnippet/cpp/p-system.console.cursorv_1.cpp)]"
  syntax:
    content: public static bool CursorVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kursor jest widoczna; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.CursorVisible*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Error
  id: Error
  parent: System.Console
  langs:
  - csharp
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera błąd standardowy strumień wyjściowy."
  remarks: "To Standardowy strumień błędów jest domyślnie do konsoli. Można ją ustawić do innego strumienia z <xref:System.Console.SetError%2A>metody.</xref:System.Console.SetError%2A> Po przekierowania Standardowy strumień błędów można reacquired przez wywołanie metody <xref:System.Console.OpenStandardError%2A>metody.</xref:System.Console.OpenStandardError%2A>       W aplikacji konsoli, której wyjście informacyjną często jest przekierowywany do pliku Standardowy strumień błędów dostępne za pośrednictwem właściwości błędu mogą służyć do wyświetlania informacji w konsoli, nawet jeśli w danych wyjściowych. W poniższym przykładzie przedstawiono tabelach produktów dla 10 numerów naraz, począwszy od 1. Po każdym zestawie 10 cyfr właściwość błędu jest używana do poprosić użytkownika, czy mają być wyświetlane dalej zestawu. Jeśli wyjścia standardowego jest przekierowywany do pliku, użytkownik nadal jest pytany, czy procedura powinna generować dalej zestawu produktów.       [!code-cs[System.Console.Error#1](~/add/codesnippet/csharp/p-system.console.error_1.cs)][!code-vb[System.Console.Error#1  ](~/add/codesnippet/visualbasic/p-system.console.error_1.vb)]"
  example:
  - "The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable. It redirects the standard input and output streams to files, but uses the Error property to write the standard error stream to the console. It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.  \n  \n [!code-cpp[Console-EXPANDTABSEX#1](~/add/codesnippet/cpp/p-system.console.error_2.cpp)]\n [!code-cs[Console-EXPANDTABSEX#1](~/add/codesnippet/csharp/p-system.console.error_2.cs)]\n [!code-vb[Console-EXPANDTABSEX#1](~/add/codesnippet/visualbasic/p-system.console.error_2.vb)]  \n  \n The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/p-system.console.error_3.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/p-system.console.error_3.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.TextWriter Error { get; }
    return:
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>reprezentujący błąd standardowy strumień wyjściowy.</xref:System.IO.TextWriter>"
  overload: System.Console.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Console.ForegroundColor
  id: ForegroundColor
  parent: System.Console
  langs:
  - csharp
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia kolor pierwszego planu konsoli."
  remarks: "Operacja get dla aplikacji systemu Windows, w którym konsola nie istnieje, zwraca <xref:System.ConsoleColor>.</xref:System.ConsoleColor>"
  example:
  - "The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.  \n  \n [!code-cs[System.ConsoleColor#2](~/add/codesnippet/csharp/p-system.console.foregro_1.cs)]\n [!code-vb[System.ConsoleColor#2](~/add/codesnippet/visualbasic/p-system.console.foregro_1.vb)]  \n  \n The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and ForegroundColor properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.foregro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.foregro_2.cs)]"
  syntax:
    content: public static ConsoleColor ForegroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "A <xref href=&quot;System.ConsoleColor&quot;> </xref> , który określa kolor pierwszego planu konsoli; oznacza to, kolor każdego znaku, który jest wyświetlany. Wartość domyślna jest szary."
  overload: System.Console.ForegroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolor określony w operacji set nie jest prawidłowym elementem członkowskim <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.In
  id: In
  parent: System.Console
  langs:
  - csharp
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera Standardowy strumień wejściowy."
  remarks: "Ta właściwość ma ustawioną Standardowy strumień wejściowy domyślnie. Tej właściwości można ustawić inny strumień z <xref:System.Console.SetIn%2A>metody.</xref:System.Console.SetIn%2A>       Operacje odczytu na Standardowy strumień wejściowy wykonać synchronicznie. Oznacza to blokują dopiero po ukończeniu określonej operacji odczytu. Dotyczy to nawet jeśli metodę asynchroniczną, takich jak <xref:System.IO.TextReader.ReadLineAsync%2A>, zostanie wywołany dla <xref:System.IO.TextReader>obiektu zwróconego przez właściwość In.</xref:System.IO.TextReader> </xref:System.IO.TextReader.ReadLineAsync%2A>"
  example:
  - "The following sample illustrates the use of the `In` property.  \n  \n [!code-cpp[consolein#1](~/add/codesnippet/cpp/p-system.console.in_1.cpp)]\n [!code-cs[consolein#1](~/add/codesnippet/csharp/p-system.console.in_1.cs)]\n [!code-vb[consolein#1](~/add/codesnippet/visualbasic/p-system.console.in_1.vb)]"
  syntax:
    content: public static System.IO.TextReader In { get; }
    return:
      type: System.IO.TextReader
      description: "A <xref:System.IO.TextReader>reprezentujący Standardowy strumień wejściowy.</xref:System.IO.TextReader>"
  overload: System.Console.In*
  exceptions: []
  platform:
  - net462
- uid: System.Console.InputEncoding
  id: InputEncoding
  parent: System.Console
  langs:
  - csharp
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia kodowanie używanych odczytać wejściowych konsoli."
  remarks: "Konsoli używa danych wejściowych kodowanie tłumaczenie wprowadzanie z klawiatury w odpowiednich znaków. Kodowanie wejściowy zawiera stronę kodową, która mapuje 256 kody znaków klawiatury do poszczególnych znaków. Inny kod strony zawierają różne znaków specjalnych, zwykle dostosowywane do języka lub grupy języków.       Począwszy od [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], operacji get właściwości może zwrócić wartość w pamięci podręcznej zamiast z konsoli bieżącego kodowania wejściowego. Taka sytuacja może wystąpić, jeśli wartość właściwości InputEncoding zostanie zmodyfikowany w sposób niż przypisania do właściwości InputEncoding, taką jak wywołanie systemu Windows `SetConsoleCP` funkcji lub przy użyciu `chcp` polecenia skryptu programu PowerShell."
  syntax:
    content: public static System.Text.Encoding InputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Kodowanie, używany do odczytu danych wejściowych konsoli."
  overload: System.Console.InputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość właściwości w operacji set jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas wykonywania tej operacji."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Aplikacja nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.Console.IsErrorRedirected
  id: IsErrorRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą, czy strumień wyjściowy błąd zostały przekierowane z Standardowy strumień błędów."
  syntax:
    content: public static bool IsErrorRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane wyjściowe błędów jest przekierowywany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsErrorRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsInputRedirected
  id: IsInputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą, czy dane wejściowe zostały przekierowane z Standardowy strumień wejściowy."
  syntax:
    content: public static bool IsInputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane wejściowe jest przekierowywany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsInputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsOutputRedirected
  id: IsOutputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą, czy dane wyjściowe zostały przekierowane z standardowego strumienia wyjściowego."
  syntax:
    content: public static bool IsOutputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane wyjściowe zostanie przekierowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsOutputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.KeyAvailable
  id: KeyAvailable
  parent: System.Console
  langs:
  - csharp
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą, czy naciśnięcie klawisza są dostępne w strumieniu wejściowym."
  remarks: "Wartość właściwości jest zwracana natychmiast; oznacza to, że właściwość KeyAvailable nie blokuje danych wejściowych do czasu udostępnienia naciśnięcie klawisza.       Użyj właściwości KeyAvailable w połączeniu z tylko <xref:System.Console.ReadKey%2A>metody, nie <xref:System.Console.Read%2A>lub <xref:System.Console.ReadLine%2A>metody.</xref:System.Console.ReadLine%2A> </xref:System.Console.Read%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "The following example demonstrates how to use the KeyAvailable property to create a loop that runs until a key is pressed.  \n  \n [!code-cs[console.keyavailable#1](~/add/codesnippet/csharp/p-system.console.keyavai_1.cs)]\n [!code-cpp[console.keyavailable#1](~/add/codesnippet/cpp/p-system.console.keyavai_1.cpp)]\n [!code-vb[console.keyavailable#1](~/add/codesnippet/visualbasic/p-system.console.keyavai_1.vb)]"
  syntax:
    content: public static bool KeyAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli naciśnięcie klawisza jest dostępna; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.KeyAvailable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Standardowe dane wejściowe jest przekierowywany do pliku zamiast klawiatury."
  platform:
  - net462
- uid: System.Console.LargestWindowHeight
  id: LargestWindowHeight
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera największej liczby konsoli wierszy okna, na podstawie bieżącej rozdzielczości czcionkę i ekranu."
  syntax:
    content: public static int LargestWindowHeight { get; }
    return:
      type: System.Int32
      description: "Wysokość okna konsoli możliwe największy mierzona w wierszach."
  overload: System.Console.LargestWindowHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Console.LargestWindowWidth
  id: LargestWindowWidth
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera największej liczby konsoli kolumny okna, na podstawie bieżącej rozdzielczości czcionkę i ekranu."
  syntax:
    content: public static int LargestWindowWidth { get; }
    return:
      type: System.Int32
      description: "Szerokość okna konsoli możliwe największy mierzona w kolumnach."
  overload: System.Console.LargestWindowWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Kopiuje obszar określonego źródła w buforze ekranu w obszarze określonej lokalizacji docelowej."
  remarks: "Jeżeli parametry źródłowym i docelowym określić pozycji znajduje się poza granicami bieżącego buforu ekranu, jest kopiowany tylko część obszaru źródłowego, który mieści się w obszarze docelowym. Oznacza to, że obszar źródłowy jest przycięta bieżącego buforu ekranu.       Metoda MoveBufferArea kopiuje obszaru źródłowego do docelowego obszaru. Jeśli w obszarze docelowym nie intersect obszar źródłowy, obszar źródłowy jest wypełniony puste wartości, przy użyciu bieżącego kolory pierwszego planu i tła. W przeciwnym razie wartość przecięcia część obszaru źródła nie jest wypełnione."
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "Kolumny z lewej strony obszaru źródła."
    - id: sourceTop
      type: System.Int32
      description: "Wiersz znajdujących się na górze obszaru źródła."
    - id: sourceWidth
      type: System.Int32
      description: "Liczba kolumn w obszarze źródło."
    - id: sourceHeight
      type: System.Int32
      description: "Liczba wierszy w obszarze źródło."
    - id: targetLeft
      type: System.Int32
      description: "Kolumny z lewej strony obszaru docelowego."
    - id: targetTop
      type: System.Int32
      description: "Wiersz znajdujących się na górze obszaru docelowego."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Co najmniej jeden z parametrów jest mniejsza od zera.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Kopiuje obszar określonego źródła w buforze ekranu w obszarze określonej lokalizacji docelowej."
  remarks: "Jeżeli parametry źródłowym i docelowym określić pozycji znajduje się poza granicami bieżącego buforu ekranu, jest kopiowany tylko część obszaru źródłowego, który mieści się w obszarze docelowym. Oznacza to, że obszar źródłowy jest przycięta bieżącego buforu ekranu.       <xref:System.Console.MoveBufferArea%2A>Metody kopiuje obszaru źródłowego do obszaru docelowego.</xref:System.Console.MoveBufferArea%2A> Jeśli obszar docelowy nie intersect obszar źródłowy, obszar źródłowy jest wypełniony znak określony przez `sourceChar`, przy użyciu kolorów określonych przez `sourceForeColor` i `sourceBackColor`. W przeciwnym razie wartość przecięcia część obszaru źródła nie jest wypełnione.       <xref:System.Console.MoveBufferArea%2A>Jeśli nie metoda wykonuje żadnych operacji `sourceWidth` lub `sourceHeight` wynosi zero.</xref:System.Console.MoveBufferArea%2A>"
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "Kolumny z lewej strony obszaru źródła."
    - id: sourceTop
      type: System.Int32
      description: "Wiersz znajdujących się na górze obszaru źródła."
    - id: sourceWidth
      type: System.Int32
      description: "Liczba kolumn w obszarze źródło."
    - id: sourceHeight
      type: System.Int32
      description: "Liczba wierszy w obszarze źródło."
    - id: targetLeft
      type: System.Int32
      description: "Kolumny z lewej strony obszaru docelowego."
    - id: targetTop
      type: System.Int32
      description: "Wiersz znajdujących się na górze obszaru docelowego."
    - id: sourceChar
      type: System.Char
      description: "Znak używany do wypełnienia obszaru źródłowego."
    - id: sourceForeColor
      type: System.ConsoleColor
      description: "Kolor pierwszego planu używany do wypełnienia obszaru źródłowego."
    - id: sourceBackColor
      type: System.ConsoleColor
      description: "Kolor tła używany do wypełnienia obszaru źródłowego."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Co najmniej jeden z parametrów jest mniejsza od zera.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Co najmniej jeden z parametrów kolor nie jest elementem członkowskim <xref href=&quot;System.ConsoleColor&quot;> </xref> wyliczenia."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.NumberLock
  id: NumberLock
  parent: System.Console
  langs:
  - csharp
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą, czy przełącznik klawiatury NUM LOCK jest włączony lub wyłączony."
  syntax:
    content: public static bool NumberLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli NUM LOCK jest włączony; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli NUM LOCK jest wyłączony."
  overload: System.Console.NumberLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError
  id: OpenStandardError
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Uzyskuje Standardowy strumień błędów."
  remarks: "Ta metoda może służyć do ponownie pozyskać Standardowy strumień błędów po zmianie przez <xref:System.Console.SetError%2A>metody.</xref:System.Console.SetError%2A>"
  example:
  - "The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the OpenStandardError method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/m-system.console.opensta_4_1.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/m-system.console.opensta_4_1.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.Stream OpenStandardError ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Standardowy strumień błędów."
  overload: System.Console.OpenStandardError*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError(System.Int32)
  id: OpenStandardError(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Uzyskuje Standardowy strumień błędów, która jest ustawiona na określony rozmiar buforu."
  remarks: "Ta metoda może służyć do ponownie pozyskać Standardowy strumień błędów po zmianie przez <xref:System.Console.SetError%2A>metody.</xref:System.Console.SetError%2A>"
  syntax:
    content: public static System.IO.Stream OpenStandardError (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "Rozmiar buforu wewnętrznego strumienia."
    return:
      type: System.IO.Stream
      description: "Standardowy strumień błędów."
  overload: System.Console.OpenStandardError*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>jest mniejsza lub równa zero."
  platform:
  - net462
- uid: System.Console.OpenStandardInput
  id: OpenStandardInput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Uzyskuje Standardowy strumień wejściowy."
  remarks: "Ta metoda może służyć do ponownie pozyskać Standardowy strumień wejściowy po zmianie przez <xref:System.Console.SetIn%2A>metody.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_3_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_3_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_3_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Standardowy strumień wejściowy."
  overload: System.Console.OpenStandardInput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardInput(System.Int32)
  id: OpenStandardInput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Uzyskuje Standardowy strumień wejściowy ma ustawioną wartość określony rozmiar buforu."
  remarks: "Ta metoda może służyć do ponownie pozyskać Standardowy strumień wyjściowy po zmianie przez <xref:System.Console.SetIn%2A>metody.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_2_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_2_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_2_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "Rozmiar buforu wewnętrznego strumienia."
    return:
      type: System.IO.Stream
      description: "Standardowy strumień wejściowy."
  overload: System.Console.OpenStandardInput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>jest mniejsza lub równa zero."
  platform:
  - net462
- uid: System.Console.OpenStandardOutput
  id: OpenStandardOutput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ukończone operacje w standardowym strumieniu wyjściowym."
  remarks: "Ta metoda może służyć do ponownie pozyskać Standardowy strumień wyjściowy po zmianie przez <xref:System.Console.SetOut%2A>metody.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command-line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_0_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_0_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_0_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Standardowy strumień wyjściowy."
  overload: System.Console.OpenStandardOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardOutput(System.Int32)
  id: OpenStandardOutput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ukończone operacje w standardowym strumieniu wyjściowym, która jest ustawiona na określony rozmiar buforu."
  remarks: "Ta metoda może służyć do ponownie pozyskać Standardowy strumień wyjściowy po zmianie przez <xref:System.Console.SetOut%2A>metody.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_1_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_1_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_1_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "Rozmiar buforu wewnętrznego strumienia."
    return:
      type: System.IO.Stream
      description: "Standardowy strumień wyjściowy."
  overload: System.Console.OpenStandardOutput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>jest mniejsza lub równa zero."
  platform:
  - net462
- uid: System.Console.Out
  id: Out
  parent: System.Console
  langs:
  - csharp
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera standardowego strumienia wyjściowego."
  remarks: "Ta właściwość jest domyślnie do standardowego strumienia wyjściowego. Tej właściwości można ustawić inny strumień z <xref:System.Console.SetOut%2A>metody.</xref:System.Console.SetOut%2A>       Należy pamiętać, że wywołań `Console.Out.WriteLine` są odpowiednikiem wywołania do odpowiedniej metody <xref:System.Console.WriteLine%2A>metody.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the Out property to display an array containing the names of files in the application's current directory to the standard output device. It then sets the standard output to a file named Files.txt and lists the array elements to the file. Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.  \n  \n [!code-cs[System.Console.Out#1](~/add/codesnippet/csharp/p-system.console.out_1.cs)]\n [!code-vb[System.Console.Out#1](~/add/codesnippet/visualbasic/p-system.console.out_1.vb)]"
  syntax:
    content: public static System.IO.TextWriter Out { get; }
    return:
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>reprezentujący Standardowy strumień wyjściowy.</xref:System.IO.TextWriter>"
  overload: System.Console.Out*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OutputEncoding
  id: OutputEncoding
  parent: System.Console
  langs:
  - csharp
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia kodowanie, używanych do zapisywania danych wyjściowych konsoli."
  remarks: "Konsola używa kodowania danych wyjściowych do przekształcania znaków napisane przez aplikację na odpowiadające im znaki wyświetlania konsoli. Domyślna strona kodowa konsoli używa zależy od ustawień regionalnych systemu.       Począwszy od [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], operacji get właściwości może zwrócić wartość w pamięci podręcznej zamiast bieżącego kodowania dane wyjściowe z konsoli. Taka sytuacja może wystąpić, jeśli wartość właściwości OutputEncoding zostanie zmodyfikowany w sposób niż przypisania do właściwości OutputEncoding, taką jak wywołanie systemu Windows `SetConsoleOutputCP` funkcji."
  syntax:
    content: public static System.Text.Encoding OutputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Kodowanie, używany do zapisywania danych wyjściowych konsoli."
  overload: System.Console.OutputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość właściwości w operacji set jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas wykonywania tej operacji."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Aplikacja nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.Console.Read
  id: Read
  parent: System.Console
  langs:
  - csharp
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Odczytuje następny znak z Standardowy strumień wejściowy."
  remarks: "Metody Read blokuje jego powrotu podczas wprowadzania znaków. kończy się po naciśnięciu <xref:System.ConsoleKey>klucza.</xref:System.ConsoleKey> Naciśnięcie klawisza Enter dołącza dane wejściowe sekwencji zakończenia wiersza zależny od platformy (na przykład Windows dołącza sekwencji wysuwu wiersza powrotu karetki). Kolejne wywołania metody odczytu pobierania z wejściowego o jeden znak. Po pobraniu ostatni znak odczytu uniemożliwia jego powrotu ponownie i cykl powtarza się.      > [!IMPORTANT] > <xref:System.Console.ReadLine%2A>Metody, lub <xref:System.Console.KeyAvailable%2A>Właściwości i <xref:System.Console.ReadKey%2A>metody są preferowane przy użyciu metody Read.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadLine%2A>       Należy pamiętać, że metoda nie Zwróć -1, chyba że wykonaj jedną z następujących czynności: - jednocześnie klawisz <xref:System.ConsoleModifiers>klawisz modyfikujący i <xref:System.ConsoleKey>klucza konsoli (Ctrl + Z), która sygnalizuje warunku końcowego z pliku.</xref:System.ConsoleKey> </xref:System.ConsoleModifiers>      -Klawisz równoważne sygnalizującego warunek końca pliku, takie jak klawisz F6 funkcji w systemie Windows.      -Przekierować strumień wejściowy do źródła, takich jak plik tekstowy, ze znakiem rzeczywisty plik końcowy."
  example:
  - "The following example demonstrates the Read method.  \n  \n [!code-cpp[console.read#1](~/add/codesnippet/cpp/m-system.console.read_1.cpp)]\n [!code-cs[console.read#1](~/add/codesnippet/csharp/m-system.console.read_1.cs)]\n [!code-vb[console.read#1](~/add/codesnippet/visualbasic/m-system.console.read_1.vb)]"
  syntax:
    content: public static int Read ();
    parameters: []
    return:
      type: System.Int32
      description: "Następnej znak ze strumienia wejściowego, lub wartość ujemną (-1) Jeśli obecnie nie istnieją żadne więcej znaków do odczytania."
  overload: System.Console.Read*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.ReadKey
  id: ReadKey
  parent: System.Console
  langs:
  - csharp
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Uzyskuje następnej znak lub funkcja naciśnięto klawisz przez użytkownika. Naciśnięty klawisz jest wyświetlany w oknie konsoli."
  remarks: "Oznacza to, metoda ReadKey oczekuje bloków w wątku wystawiania metody ReadKey do czasu naciśnięcia klawisza znak lub funkcji. W połączeniu z co najmniej jeden Alt, Ctrl lub Shift klawisze modyfikujące można można naciśnięty klawisz znak lub funkcji. Jednak naciskając klawisz modyfikujący samodzielnie nie spowoduje metody ReadKey do zwrócenia.       W zależności od aplikacji, można użyć metody ReadKey w połączeniu z <xref:System.Console.KeyAvailable%2A>Właściwości.</xref:System.Console.KeyAvailable%2A>       ReadKey metoda odczytuje z klawiatury, nawet jeśli standardowe dane wejściowe jest przekierowywany do pliku z <xref:System.Console.SetIn%2A>metody.</xref:System.Console.SetIn%2A>"
  example:
  - "One of the most common uses of the ReadKey method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app.  \n  \n [!code-cs[System.Console.ReadKey#1](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]\n [!code-vb[System.Console.ReadKey#1](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]  \n  \n Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console. To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.  \n  \n The following example uses the ReadKey method to display information about which key the user pressed..  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey ();
    parameters: []
    return:
      type: System.ConsoleKeyInfo
      description: "Obiekt, który opisuje <xref href=&quot;System.ConsoleKey&quot;> </xref> stała i znak Unicode, który odpowiada klucz naciśniętego konsoli. <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> Również opis obiektu, z bitowego połączenia <xref href=&quot;System.ConsoleModifiers&quot;> </xref> wartości, czy co najmniej jeden Shift, Alt i Ctrl klawisze modyfikujące naciśnięto jednocześnie z kluczem konsoli."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Console.In*>Właściwości jest przekierowywany niektórych strumienia niż konsoli.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadKey(System.Boolean)
  id: ReadKey(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Uzyskuje następnej znak lub funkcja naciśnięto klawisz przez użytkownika. Naciśnięty klawisz opcjonalnie jest wyświetlany w oknie konsoli."
  remarks: "<xref:System.Console.ReadKey%2A>— Metoda czeka, oznacza to, bloków na urzędzie wystawiającym certyfikaty wątku <xref:System.Console.ReadKey%2A>metody, dopóki nie zostanie naciśnięty klawisz znak lub funkcji.</xref:System.Console.ReadKey%2A> </xref:System.Console.ReadKey%2A> W połączeniu z co najmniej jeden Alt, Ctrl lub Shift klawisze modyfikujące można można naciśnięty klawisz znak lub funkcji. Jednakże, naciskając klawisz modyfikujący samodzielnie nie spowoduje <xref:System.Console.ReadKey%2A>metody do zwrócenia.</xref:System.Console.ReadKey%2A>       Jeśli `intercept` parametr jest `true`, naciśnięty klawisz zostaje zatrzymana i nie wyświetlany w oknie konsoli; w przeciwnym razie naciśnięty klawisz jest wyświetlany.       W zależności od aplikacji, możesz chcieć użyć <xref:System.Console.ReadKey%2A>w połączeniu z metody <xref:System.Console.KeyAvailable%2A>Właściwości.</xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadKey%2A>       <xref:System.Console.ReadKey%2A>Metoda odczytuje z klawiatury, nawet jeśli standardowe dane wejściowe jest przekierowywany do pliku z <xref:System.Console.SetIn%2A>metody.</xref:System.Console.SetIn%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app. Note that, if the user presses any other key, it is not echoed to the console.  \n  \n [!code-vb[System.Console.ReadKey#2](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]\n [!code-cs[System.Console.ReadKey#2](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]  \n  \n The following example uses the ReadKey method to display information about the key pressed by a user without echoing that key to the console.  \n  \n [!code-cs[console.readkey2#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey2#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey2#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey (bool intercept);
    parameters:
    - id: intercept
      type: System.Boolean
      description: "Określa, czy mają być wyświetlane naciśnięty klawisz w oknie konsoli. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby nie wyświetlać naciśnięty klawisz; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ConsoleKeyInfo
      description: "Obiekt, który opisuje <xref href=&quot;System.ConsoleKey&quot;> </xref> stała i znak Unicode, który odpowiada klucz naciśniętego konsoli. <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> Również opis obiektu, z bitowego połączenia <xref href=&quot;System.ConsoleModifiers&quot;> </xref> wartości, czy co najmniej jeden Shift, Alt i Ctrl klawisze modyfikujące naciśnięto jednocześnie z kluczem konsoli."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Console.In*>Właściwości jest przekierowywany niektórych strumienia niż konsoli.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadLine
  id: ReadLine
  parent: System.Console
  langs:
  - csharp
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Odczytuje następny wiersz znaków z Standardowy strumień wejściowy."
  remarks: "ReadLine — metoda odczytuje wiersz z Standardowy strumień wejściowy. (Dla definicji wiersza, zobacz akapitu po poniżej). Oznacza to, że: - Jeśli standardowa urządzenie wejściowe ma klawiatury, bloki metody ReadLine, dopóki użytkownik naciśnie **Enter** klucza.           Jedną z najbardziej typowych zastosowań ReadLine metodą jest wstrzymuje wykonywanie programu przed wyczyszczenie konsoli i wyświetlanie nowych informacji do niego lub monitowanie użytkownika o naciśnięcie klawisza Enter przed zakończeniem aplikacji. Poniższy przykład przedstawia to.           [!code-cpp[System.Console.ReadLine#6](~/add/codesnippet/cpp/m-system.console.readline_1.cpp)][!code-vb[System.Console.ReadLine#6](~/add/codesnippet/visualbasic/m-system.console.readline_1.vb)][!code-cs[System.Console.ReadLine#6](~/add/codesnippet/csharp/m-system.console.readline_1.cs) ] — Jeśli standardowe dane wejściowe jest przekierowywany do pliku, ReadLine — metoda odczytuje wiersz tekstu z pliku.             Na przykład następujące to plik tekstowy o nazwie ReadLine1.txt: ```          This is the first line.       This is the second line.       This is the third line.       This is the fourth line.          ``` w poniższym przykładzie użyto metody ReadLine odczytać dane wejściowe z pliku. Operacja odczytu kończy działanie, gdy metoda zwraca `null`, co oznacza pozostawienie żadnych wierszy do odczytania.           [!code-cs[System.Console.ReadLine#3](~/add/codesnippet/csharp/m-system.console.readline_2.cs)][!code-vb[System.Console.ReadLine#3](~/add/codesnippet/visualbasic/m-system.console.readline_2.vb) ] po kompilacji w przykładzie do pliku wykonywalnego o nazwie ReadLine1.exe, można go uruchomić z wiersza polecenia przy użyciu składni ```       ReadLine1 < ReadLine1.txt       ``` odczytywać zawartość pliku i wyświetlić je w konsoli.             Wiersz jest zdefiniowany jako sekwencja znaków powrotu karetki (0x000d szesnastkowe), wysuwu wiersza (0x000a szesnastkowym) lub wartość <xref:System.Environment.NewLine%2A?displayProperty=fullName>Właściwości.</xref:System.Environment.NewLine%2A?displayProperty=fullName> Zwracany ciąg nie zawiera znaków zakończenia. Domyślnie metoda odczytuje dane wejściowe z buforu wejściowego 256 znaków. Ponieważ w tym <xref:System.Environment.NewLine%2A?displayProperty=fullName>znaki, metoda może być odczytany wiersze zawierające do 254 znaków.</xref:System.Environment.NewLine%2A?displayProperty=fullName> Aby przeczytać więcej wierszy, należy wywołać <xref:System.Console.OpenStandardInput%28System.Int32%29>metody.</xref:System.Console.OpenStandardInput%28System.Int32%29>       Metoda ReadLine jest wykonywana synchronicznie. Oznacza to blokuje aż do wiersza jest do odczytu lub naciśnięciu kombinację klawiszy Ctrl + Z. <xref:System.Console.In%2A>Zwraca <xref:System.IO.TextReader>obiekt reprezentujący Standardowy strumień wejściowy i ma zarówno synchronicznego <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>— Metoda i asynchroniczne <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>metody.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName> </xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName> </xref:System.IO.TextReader> </xref:System.Console.In%2A> Jednakże, gdy jest używany jako Standardowy strumień wejściowy konsoli, <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>wykonuje synchronicznie, a nie asynchronicznie i zwraca `Task<String>` dopiero po zakończeniu operacji odczytu.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>       Jeśli ta metoda zgłasza <xref:System.OutOfMemoryException>wyjątek, pozycja czytelnika w podstawowych <xref:System.IO.Stream>obiekt jest zaawansowane według liczby znaków metody był w stanie odczytywać, ale znaki odczytane już do wewnętrznego buforu ReadLine zostaną odrzucone.</xref:System.IO.Stream> </xref:System.OutOfMemoryException> Ponieważ nie można zmienić położenia czytnika w strumieniu, znaki odczytane już jest nieodwracalny i jest możliwy tylko przez ponowne inicjowanie <xref:System.IO.TextReader>.</xref:System.IO.TextReader> Jeśli początkowe położenie w obrębie strumień jest nieznany lub strumień nie obsługuje wyszukiwania, odpowiadającego <xref:System.IO.Stream>musi również zostać zainicjowane ponownie.</xref:System.IO.Stream> Aby uniknąć tej sytuacji i utworzyć niezawodny kod, należy używać <xref:System.Console.KeyAvailable%2A>Właściwości i <xref:System.Console.ReadKey%2A>— Metoda i zapisać odczytu znaków w buforze wstępnie przydzielić.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A>       Jeśli znak Ctrl + Z zostanie naciśnięty, gdy metoda to dane wejściowe odczytu z konsoli, metoda zwraca `null`. Dzięki temu użytkownikowi uniemożliwić dalsze wprowadzanie z klawiatury, gdy ReadLine — metoda jest wywoływana w pętli. Poniższy przykład przedstawia, w tym scenariuszu.       [!code-cpp[System.Console.ReadLine#1](~/add/codesnippet/cpp/m-system.console.readline_3.cpp)][!code-cs[System.Console.ReadLine#1](~/add/codesnippet/csharp/m-system.console.readline_3.cs)][!code-vb[System.Console.ReadLine#1    ](~/add/codesnippet/visualbasic/m-system.console.readline_3.vb)]"
  example:
  - "The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to. It opens the existing text file and redirects the standard input from the keyboard to that file. It also redirects the standard output from the console to the output file. It then uses the ReadLine method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method to write the result to the output file.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.readline_4.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.readline_4.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.readline_4.cs)]"
  syntax:
    content: public static string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "Następnego wiersza znaków ze strumienia wejściowego lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli dostępnych jest więcej wierszy."
  overload: System.Console.ReadLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Jest za mało pamięci, aby przydzielić buforu dla zwracany ciąg."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Liczba znaków w następnym wierszu znaków jest większa niż &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Console.ResetColor
  id: ResetColor
  parent: System.Console
  langs:
  - csharp
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia pierwszego planu i tła konsoli kolory domyślne."
  remarks: "Kolory pierwszego planu i tła zostaną przywrócone do kolorów, które były dostępne w momencie rozpoczęcia bieżącego procesu. Aby uzyskać więcej informacji, zobacz <xref:System.Console.ForegroundColor%2A>i <xref:System.Console.BackgroundColor%2A>Właściwości.</xref:System.Console.BackgroundColor%2A> </xref:System.Console.ForegroundColor%2A>"
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the ResetColor method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/m-system.console.resetco_1.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/m-system.console.resetco_1.cs)]"
  syntax:
    content: public static void ResetColor ();
    parameters: []
  overload: System.Console.ResetColor*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  id: SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia wysokość i szerokość obszaru buforu ekranu do określonych wartości."
  remarks: ''
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, SetBufferSize, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setbuff_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setbuff_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setbuff_1.cs)]"
  syntax:
    content: public static void SetBufferSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "Szerokość obszaru buforu mierzony w kolumnach."
    - id: height
      type: System.Int32
      description: "Wysokość obszaru buforu mierzona w wierszach."
  overload: System.Console.SetBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>height</code>lub <code>width</code> jest mniejsza niż lub równa zero.       - lub - <code>height</code> lub <code>width</code> jest większa niż lub równa &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       -or-       <code>width</code> is less than <xref:System.Console.WindowLeft*> + <xref:System.Console.WindowWidth*>.       -or-       <code>height</code> is less than <xref:System.Console.WindowTop*> + <xref:System.Console.WindowHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  id: SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia położenie kursora."
  remarks: "Metoda SetCursorPosition służy do określenia, w którym ma rozpocząć następnej operacji zapisu w oknie konsoli. W przypadku pozycji kursora określony poza obszarem, który jest aktualnie widoczne w oknie konsoli, pochodzenia okno zmienia się automatycznie uwidocznić kursora.       Kursor automatycznie przenosi do następnego znaku na pozycji znaku zawsze są zapisywane w oknie konsoli. Jeśli kursor znajduje się na pozycji znak po prawej dolnej części okna konsoli, kolejnego zapisu powoduje, że operacja okna konsoli do przewijania, gdy kursor pozostaje widoczna. Jeśli chcesz zapisać znak na pozycji znaku prawy dolny bez spowodowania, że okno konsoli przewiń, należy użyć <xref:System.Console.MoveBufferArea%2A>metody, aby przenieść znak na tej pozycji.</xref:System.Console.MoveBufferArea%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the SetCursorPosition and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.setcurs_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.setcurs_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.setcurs_1.vb)]"
  syntax:
    content: public static void SetCursorPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "Pozycja kolumny kursora. Kolumny są ponumerowane od lewej do prawej, począwszy od 0."
    - id: top
      type: System.Int32
      description: "Położenie wiersza kursora. Wiersze są ponumerowane od góry do dołu, począwszy od 0."
  overload: System.Console.SetCursorPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>lub <code>top</code> jest mniejsza od zera.       - lub - <code>left</code> jest większa niż lub równa <xref:System.Console.BufferWidth*>.       - lub - <code>top</code> jest większa niż lub równa <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.SetError(System.IO.TextWriter)
  id: SetError(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia <xref:System.Console.Error*>właściwości do określonego <xref:System.IO.TextWriter>obiektu.</xref:System.IO.TextWriter> </xref:System.Console.Error*>"
  remarks: "Domyślnie <xref:System.Console.Error%2A>właściwość jest ustawiona na błąd standardowy strumień wyjściowy.</xref:System.Console.Error%2A>       A <xref:System.IO.StreamWriter>która hermetyzuje <xref:System.IO.FileStream>może służyć do wysyłania komunikatów o błędach do pliku.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter>"
  example:
  - "The following example shows how to redirect the standard error stream to a file.  \n  \n [!code-vb[System.Console.SetError#1](~/add/codesnippet/visualbasic/m-system.console.seterro_1.vb)]\n [!code-cs[System.Console.SetError#1](~/add/codesnippet/csharp/m-system.console.seterro_1.cs)]\n [!code-cpp[System.Console.SetError#1](~/add/codesnippet/cpp/m-system.console.seterro_1.cpp)]"
  syntax:
    content: public static void SetError (System.IO.TextWriter newError);
    parameters:
    - id: newError
      type: System.IO.TextWriter
      description: "Strumień, który jest nowe dane wyjściowe błędów."
  overload: System.Console.SetError*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newError</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  platform:
  - net462
- uid: System.Console.SetIn(System.IO.TextReader)
  id: SetIn(System.IO.TextReader)
  parent: System.Console
  langs:
  - csharp
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia <xref:System.Console.In*>właściwości do określonego <xref:System.IO.TextReader>obiektu.</xref:System.IO.TextReader> </xref:System.Console.In*>"
  remarks: "Domyślnie <xref:System.Console.In%2A>właściwość jest ustawiona na Standardowy strumień wejściowy.</xref:System.Console.In%2A>       A <xref:System.IO.StreamReader>która hermetyzuje <xref:System.IO.FileStream>służy do odbierania danych z pliku.</xref:System.IO.FileStream> </xref:System.IO.StreamReader>"
  example:
  - "The following example illustrates the use of the SetIn method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setin-s_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setin-s_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setin-s_1.cs)]"
  syntax:
    content: public static void SetIn (System.IO.TextReader newIn);
    parameters:
    - id: newIn
      type: System.IO.TextReader
      description: "Strumień, który jest nowe standardowe dane wejściowe."
  overload: System.Console.SetIn*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newIn</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  platform:
  - net462
- uid: System.Console.SetOut(System.IO.TextWriter)
  id: SetOut(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia <xref:System.Console.Out*>właściwości do określonego <xref:System.IO.TextWriter>obiektu.</xref:System.IO.TextWriter> </xref:System.Console.Out*>"
  remarks: "Domyślnie <xref:System.Console.Out%2A>właściwość jest ustawiona na Standardowy strumień wyjściowy.</xref:System.Console.Out%2A>       A <xref:System.IO.StreamWriter>która hermetyzuje <xref:System.IO.FileStream>może służyć do wysyłania danych wyjściowych do pliku.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter> Na przykład: [!code-cs [System.Console.SetOut#1](~/add/codesnippet/csharp/m-system.console.setout-_1.cs)][!code-vb[System.Console.SetOut#1](~/add/codesnippet/visualbasic/m-system.console.setout-_1.vb)][!code-cpp[System.Console.SetOut#1    ](~/add/codesnippet/cpp/m-system.console.setout-_1.cpp)]"
  example:
  - "The following example illustrates the use of the SetOut method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setout-_2.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setout-_2.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setout-_2.cs)]"
  syntax:
    content: public static void SetOut (System.IO.TextWriter newOut);
    parameters:
    - id: newOut
      type: System.IO.TextWriter
      description: "Strumień, który jest nowy wyjścia standardowego."
  overload: System.Console.SetOut*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newOut</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  platform:
  - net462
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  id: SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia położenie okna konsoli względem buforu ekranu."
  remarks: "W oknie konsoli Wyświetla okna systemu operacyjnego oraz w oknie konsoli część buforu ekranu. Metoda SetWindowPosition wpływa na położenie okna konsoli względem buforu ekranu, ale nie ma wpływu na położenie okna systemu operacyjnego względem pulpitu.       Konsola i systemu operacyjnego windows zazwyczaj nie wpływają na siebie. Jednak jeśli nie można wyświetlić buforu ekranu w granicach bieżącego okna konsoli, systemu operacyjnego automatycznie dołącza paski przewijania okna systemu operacyjnego. W takim przypadku przenoszenie pasków przewijania okna systemu operacyjnego ma wpływ na położenie okna konsoli i przenoszenie okna konsoli za pomocą metody SetWindowPosition wpływa na położenie pasków przewijania okna systemu operacyjnego."
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the SetWindowPosition, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setwind_0_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setwind_0_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setwind_0_1.cs)]"
  syntax:
    content: public static void SetWindowPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "Pozycja kolumny lewym górnym rogu okna konsoli."
    - id: top
      type: System.Int32
      description: "Położenie wiersza w lewym górnym rogu okna konsoli."
  overload: System.Console.SetWindowPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>lub <code>top</code> jest mniejsza od zera.       - lub - <code>left</code>  + <xref:System.Console.WindowWidth*> jest większa niż <xref:System.Console.BufferWidth*>.       - lub - <code>top</code>  + <xref:System.Console.WindowHeight*> jest większa niż <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  id: SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ustawia określone wartości wysokość i szerokość okna konsoli."
  remarks: ''
  example:
  - "This example demonstrates the SetWindowSize method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/m-system.console.setwind_1_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/m-system.console.setwind_1_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/m-system.console.setwind_1_1.cs)]"
  syntax:
    content: public static void SetWindowSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "Szerokość okna konsoli mierzona w kolumnach."
    - id: height
      type: System.Int32
      description: "Wysokość okna konsoli mierzona w wierszach."
  overload: System.Console.SetWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>width</code>lub <code>height</code> jest mniejsza niż lub równa zero.       - lub - <code>width</code> plus <xref:System.Console.WindowLeft*> lub <code>height</code> plus <xref:System.Console.WindowTop*> jest większa niż lub równa &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - lub - <code>width</code> lub <code>height</code> jest większa niż największa szerokość okna możliwe lub wysokości dla bieżącej czcionki konsoli i rozdzielczość ekranu."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Użytkownik nie ma uprawnień do wykonania tej akcji."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Title
  id: Title
  parent: System.Console
  langs:
  - csharp
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia tytuł, aby wyświetlić na pasku tytułu konsoli."
  remarks: ''
  example:
  - "This example demonstrates the Title property. The example displays the current title of the operating system window, waits for a key press, then displays a new title.  \n  \n [!code-cs[console.title#1](~/add/codesnippet/csharp/p-system.console.title_1.cs)]\n [!code-cpp[console.title#1](~/add/codesnippet/cpp/p-system.console.title_1.cpp)]\n [!code-vb[console.title#1](~/add/codesnippet/visualbasic/p-system.console.title_1.vb)]"
  syntax:
    content: public static string Title { get; set; }
    return:
      type: System.String
      description: "Ciąg, który ma być wyświetlany w pasku tytułu konsoli. Maksymalna długość ciągu tytuł jest 24500 znaków."
  overload: System.Console.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "W ramach operacji get pobrane tytuł jest dłuższa niż 24500 znaków."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "W ramach operacji set podany tytuł jest dłuższa niż 24500 znaków."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "W ramach operacji set podany tytuł jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.TreatControlCAsInput
  id: TreatControlCAsInput
  parent: System.Console
  langs:
  - csharp
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia wartość wskazującą czy kombinacja <xref href=&quot;System.ConsoleModifiers&quot;> </xref> klawisz modyfikujący i <xref href=&quot;System.ConsoleKey&quot;> </xref> klucza konsoli (Ctrl + C) jest traktowane jako dane wejściowe zwykłej lub przerwania, który jest obsługiwany przez system operacyjny."
  remarks: "Jeśli wartość właściwości TreatControlCAsInput jest `false` i naciśnięciu klawiszy Ctrl + C, naciśniętego klucze nie są przechowywane w buforze wejściowym i systemu operacyjnego kończy proces aktualnie wykonywane. Jest to wartość domyślna.      > [!CAUTION] > Rozważnie używać tej właściwości, ponieważ ustawieniem dla niego `true` ma taki efekt. Większość użytkowników oczekiwać klawisze Ctrl + C, aby zakończyć aplikację konsoli. Jeśli wyłączysz efekt klawisze Ctrl + C, użytkownik musi Pamiętaj, aby umożliwia zakończenie aplikacji, które są mniej znanych kombinację klawiszy Ctrl + Break."
  example:
  - "The following example demonstrates the TreatControlCAsInput property.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.console.treatco_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.console.treatco_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.console.treatco_1.vb)]"
  syntax:
    content: public static bool TreatControlCAsInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli klawisze Ctrl + C jest traktowany jako dane wejściowe zwykłej; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.TreatControlCAsInput*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można pobrać lub ustawić tryb wprowadzania konsoli buforu wejściowego."
  platform:
  - net462
- uid: System.Console.WindowHeight
  id: WindowHeight
  parent: System.Console
  langs:
  - csharp
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub Ustawia wysokość obszaru okna konsoli."
  remarks: "Próba ustawienia wartości właściwości WindowHeight po danych wyjściowych zgłasza albo <xref:System.ArgumentOutOfRangeException>lub <xref:System.IO.IOException>wyjątek.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> Aby zapobiec wyjątek, należy ustawić wartość tylko wtedy, gdy właściwość <xref:System.Console.IsOutputRedirected%2A>zwraca `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and WindowHeight properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windowh_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windowh_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windowh_1.cs)]"
  syntax:
    content: public static int WindowHeight { get; set; }
    return:
      type: System.Int32
      description: "Wysokość okna konsoli mierzona w wierszach."
  overload: System.Console.WindowHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <> </> *> właściwości lub wartości właściwości WindowHeight jest mniejsza niż lub równa 0.       - lub - wartość właściwości WindowHeight oraz wartość <> </> *> właściwość jest większa niż lub równa &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - lub - wartość <xref:System.Console.WindowWidth*>Właściwości lub wartości właściwości WindowHeight jest większa niż największa szerokość okna możliwe lub wysokości dla bieżącej czcionki konsoli i rozdzielczość ekranu.</xref:System.Console.WindowWidth*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Błąd podczas odczytywania lub zapisywania informacji."
  platform:
  - net462
- uid: System.Console.WindowLeft
  id: WindowLeft
  parent: System.Console
  langs:
  - csharp
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub Ustawia położenie lewej strony obszaru okna konsoli względem buforu ekranu."
  remarks: "Konsolę reprezentuje prostokątne okna na większy bufor prostokątny obszar. Oknie oraz w buforze są mierzone w pionie według ich liczby wierszy i w poziomie przez ich liczbę kolumn. Wymiary obszar buforu są definiowane przez <xref:System.Console.BufferHeight%2A>i <xref:System.Console.BufferWidth%2A>Właściwości.</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> Wymiary obszaru konsoli są definiowane przez <xref:System.Console.WindowHeight%2A>i <xref:System.Console.WindowWidth%2A>Właściwości.</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> Właściwość WindowLeft Określa, która kolumna obszaru bufor jest wyświetlany w pierwszej kolumnie okna konsoli. Wartość właściwości WindowLeft mogą należeć do zakresu od 0 do <xref:System.Console.BufferWidth%2A>- <xref:System.Console.WindowWidth%2A>.</xref:System.Console.WindowWidth%2A> </xref:System.Console.BufferWidth%2A> Podjęto próbę ustawioną wartość spoza zakresu zgłasza <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException>       Przy pierwszym otwarciu okna konsoli, wartością domyślną właściwości WindowLeft jest zero, co oznacza, że odpowiada pierwszej kolumny (kolumna w pozycji zero) w obszarze buforu pierwszej kolumny wyświetlane w konsoli. Domyślna szerokość okna konsoli i obszar buforu to 80 kolumn. Oznacza to, że można zmodyfikować właściwości WindowLeft tylko wtedy, gdy okno konsoli staje się mniejszą niż lub obszar buforu staje się szersze.       Należy pamiętać, że jeśli szerokość obszaru buforu przekracza szerokość okna konsoli, wartość właściwości WindowLeft jest automatycznie dostosowana, gdy użytkownik używa poziomy pasek przewijania w celu zdefiniowania relacji okna do obszaru buforu.       Próba ustawienia wartości właściwości WindowLeft po zgłasza przekierowane dane wyjściowe <xref:System.IO.IOException>wyjątek.</xref:System.IO.IOException> Aby zapobiec wyjątek, należy ustawić wartość tylko wtedy, gdy właściwość <xref:System.Console.IsOutputRedirected%2A>zwraca `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example opens an 80-column console window and defines a buffer area that is 120 columns wide. It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key. In the former case, it decrements the value of the WindowLeft property by one if the result is a legal value. In the latter case, it increases the value of the WindowLeft property by one if the result would be legal. Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the WindowLeft property is not negative and does not cause the sum of the WindowLeft and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.  \n  \n [!code-vb[System.Console.WindowLeft#1](~/add/codesnippet/visualbasic/p-system.console.windowl_1.vb)]\n [!code-cs[System.Console.WindowLeft#1](~/add/codesnippet/csharp/p-system.console.windowl_1.cs)]\n [!code-cpp[System.Console.WindowLeft#1](~/add/codesnippet/cpp/p-system.console.windowl_1.cpp)]"
  syntax:
    content: public static int WindowLeft { get; set; }
    return:
      type: System.Int32
      description: "Pozycja okna konsoli po lewej stronie mierzony w kolumnach."
  overload: System.Console.WindowLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "W ramach operacji set przypisywanie wartości jest mniejsza od zera.       - lub - wyniku przypisania WindowLeft plus <> </> *> przekroczyłby <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Błąd podczas odczytywania lub zapisywania informacji."
  platform:
  - net462
- uid: System.Console.WindowTop
  id: WindowTop
  parent: System.Console
  langs:
  - csharp
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub Ustawia położenie górny obszar okna konsoli względem buforu ekranu."
  remarks: "Konsolę reprezentuje prostokątne okna na większy bufor prostokątny obszar. Oknie oraz w buforze są mierzone w pionie według ich liczby wierszy i w poziomie przez ich liczbę kolumn. Wymiary obszar buforu są definiowane przez <xref:System.Console.BufferHeight%2A>i <xref:System.Console.BufferWidth%2A>Właściwości.</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> Wymiary obszaru konsoli są definiowane przez <xref:System.Console.WindowHeight%2A>i <xref:System.Console.WindowWidth%2A>Właściwości.</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> Właściwość WindowTop Określa, który wiersz obszaru bufor jest wyświetlany w pierwszej kolumnie okna konsoli. Wartość właściwości WindowTop mogą należeć do zakresu od 0 do <xref:System.Console.BufferHeight%2A>- <xref:System.Console.WindowHeight%2A>.</xref:System.Console.WindowHeight%2A> </xref:System.Console.BufferHeight%2A> Podjęto próbę ustawioną wartość spoza zakresu zgłasza <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException>       Próba ustawienia wartości właściwości WindowTop po zgłasza przekierowane dane wyjściowe <xref:System.IO.IOException>wyjątek.</xref:System.IO.IOException> Aby zapobiec wyjątek, należy ustawić wartość tylko wtedy, gdy właściwość <xref:System.Console.IsOutputRedirected%2A>zwraca `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, WindowTop, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/p-system.console.windowtop_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/p-system.console.windowtop_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/p-system.console.windowtop_1.cs)]"
  syntax:
    content: public static int WindowTop { get; set; }
    return:
      type: System.Int32
      description: "Pozycja okna konsoli najwyższym mierzony w wierszach."
  overload: System.Console.WindowTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "W ramach operacji set przypisywanie wartości jest mniejsza od zera.       - lub - wyniku przypisania WindowTop plus <> </> *> przekroczyłby <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Błąd podczas odczytywania lub zapisywania informacji."
  platform:
  - net462
- uid: System.Console.WindowWidth
  id: WindowWidth
  parent: System.Console
  langs:
  - csharp
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera lub ustawia szerokość okna konsoli."
  remarks: "Próba ustawienia wartości właściwości WindowWidth po danych wyjściowych zgłasza albo <xref:System.ArgumentOutOfRangeException>lub <xref:System.IO.IOException>wyjątek.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> Aby zapobiec wyjątek, należy ustawić wartość tylko wtedy, gdy właściwość <xref:System.Console.IsOutputRedirected%2A>zwraca `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the WindowWidth and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windoww_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windoww_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windoww_1.cs)]"
  syntax:
    content: public static int WindowWidth { get; set; }
    return:
      type: System.Int32
      description: "Szerokość okna konsoli mierzona w kolumnach."
  overload: System.Console.WindowWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość właściwości WindowWidth lub wartość <> </> *> właściwość jest mniejsza niż lub równa 0.       - lub - wartość <> </> *> właściwości oraz wartość <> </> *> właściwość jest większa niż lub równa &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - lub - wartość właściwości WindowWidth lub wartość <> </> *> właściwości jest większa niż największa szerokość okna możliwe lub wysokości dla bieżącej czcionki konsoli i rozdzielczość ekranu."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Błąd podczas odczytywania lub zapisywania informacji."
  platform:
  - net462
- uid: System.Console.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje Reprezentacja tekstowa typu wartość logiczna określony w standardowym strumieniu wyjściowym."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Boolean.ToString%2A?displayProperty=fullName>, które generuje <xref:System.Boolean.TrueString?displayProperty=fullName>lub <xref:System.Boolean.FalseString?displayProperty=fullName>.</xref:System.Boolean.FalseString?displayProperty=fullName> </xref:System.Boolean.TrueString?displayProperty=fullName> </xref:System.Boolean.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_8_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_8_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_8_1.cpp)]"
  syntax:
    content: public static void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Char)
  id: Write(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określona wartość znaku Unicode w standardowym strumieniu wyjściowym."
  remarks: ''
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_9_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_9_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_9_1.cpp)]"
  syntax:
    content: public static void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określonej tablicy znaków Unicode w standardowym strumieniu wyjściowym."
  syntax:
    content: public static void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków Unicode."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonego <xref:System.Decimal>wartość do standardowego strumienia wyjściowego.</xref:System.Decimal>"
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Decimal.ToString%2A?displayProperty=fullName>.</xref:System.Decimal.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_12_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_12_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_12_1.cpp)]"
  syntax:
    content: public static void Write (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Double)
  id: Write(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje Reprezentacja tekstowa określonej wartości zmiennoprzecinkowej podwójnej precyzji w standardowym strumieniu wyjściowym."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Double.ToString%2A?displayProperty=fullName>metody.</xref:System.Double.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_6_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_6_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_6_1.cpp)]"
  syntax:
    content: public static void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej 32-bitowej liczby całkowitej ze znakiem w standardowym strumieniu wyjściowym."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Int32.ToString%2A?displayProperty=fullName>metody.</xref:System.Int32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_10_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_10_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_10_1.cpp)]"
  syntax:
    content: public static void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej 64-bitowej liczby całkowitej ze znakiem w standardowym strumieniu wyjściowym."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Int64.ToString%2A?displayProperty=fullName>metody.</xref:System.Int64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_0_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_0_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_0_1.cpp)]"
  syntax:
    content: public static void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Object)
  id: Write(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonego obiektu w standardowym strumieniu wyjściowym."
  remarks: "Jeśli `value` jest `null`, nic nie zostanie zapisany i nie jest wyjątek. W przeciwnym razie `ToString` metoda `value` jest wywoływana w celu utworzenia reprezentacji ciągu wynikowy ciąg jest zapisywane do standardowego strumienia wyjściowego."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_3_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_3_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_3_1.cpp)]"
  syntax:
    content: public static void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Wartość do zapisania, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.Single)
  id: Write(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonej wartości zmiennoprzecinkowych pojedynczej precyzji w standardowym strumieniu wyjściowym."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Single.ToString%2A?displayProperty=fullName>metody.</xref:System.Single.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_1_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_1_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_1_1.cpp)]"
  syntax:
    content: public static void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.String)
  id: Write(System.String)
  parent: System.Console
  langs:
  - csharp
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określona wartość ciągu do standardowego strumienia wyjściowego."
  remarks: "Jeśli wartość jest `null`, nic nie są zapisywane do standardowego strumienia wyjściowego."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_5_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_5_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_5_1.cpp)]"
  syntax:
    content: public static void Write (string value);
    parameters:
    - id: value
      type: System.String
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej liczby całkowitej bez znaku 32-bitowej do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.UInt32.ToString%2A?displayProperty=fullName>metody.</xref:System.UInt32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_7_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_7_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_7_1.cpp)]"
  syntax:
    content: public static void Write (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej liczby całkowitej bez znaku 64-bitowe w standardowym strumieniu wyjściowym."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.UInt64.ToString%2A?displayProperty=fullName>metody.</xref:System.UInt64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_4_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_4_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_4_1.cpp)]"
  syntax:
    content: public static void Write (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "Wartość do zapisania."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonego obiektu w standardowym strumieniu wyjściowym korzystając z informacji zawartych w określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_2_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_2_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_1.vb)]  \n  \n The following example illustrates the use of the Write method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_2_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_2_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Obiekt do zapisu przy użyciu `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonej tablicy obiektów do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       `arg` Parametr jest tablicą parametrów. Argumenty mogą zostać przekazane do metody jako tablicy lub listy pięć lub więcej elementów. Przykłady przedstawiają obu metod wywołania metody."
  example:
  - "The following example defines a `Person` class with a number of properties that provide information about a person. Its `GetDescription` method returns an array that contains all of the property values except one. The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.  \n  \n [!code-cs[System.Console.Write#1](~/add/codesnippet/csharp/m-system.console.write-s_13_1.cs)]\n [!code-vb[System.Console.Write#1](~/add/codesnippet/visualbasic/m-system.console.write-s_13_1.vb)]  \n  \n Note that the example calls the Write method rather than the [WriteLine(String, Object\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method because it attempts to display the value of the `Person.Remarks` property on the same line. To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.  If there is, it displays the line. If not, it writes a line, indents three spaces, and displays the remark.  \n  \n The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.  \n  \n [!code-vb[System.Console.Write#2](~/add/codesnippet/visualbasic/m-system.console.write-s_13_2.vb)]\n [!code-cs[System.Console.Write#2](~/add/codesnippet/csharp/m-system.console.write-s_13_2.cs)]"
  syntax:
    content: public static void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg
      type: System.Object[]
      description: "Tablica obiektów przy użyciu `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określony subarray znaków Unicode w standardowym strumieniu wyjściowym."
  remarks: "Ta metoda zapisuje `count` znaków, zaczynając od pozycji `index` z `buffer` do standardowego strumienia wyjściowego."
  syntax:
    content: public static void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków Unicode."
    - id: index
      type: System.Int32
      description: "Położenie początkowe w `buffer`."
    - id: count
      type: System.Int32
      description: "Liczba znaków do zapisu."
  overload: System.Console.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>lub <code>count</code> jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>plus <code>count</code> określić, która nie jest w stanie <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonych obiektów do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_14_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_14_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_14_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_14_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Pierwszy obiekt do zapisania za pomocą `format`."
    - id: arg1
      type: System.Object
      description: "Drugi obiekt do zapisu przy użyciu `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonych obiektów do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_11_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_11_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Pierwszy obiekt do zapisania za pomocą `format`."
    - id: arg1
      type: System.Object
      description: "Drugi obiekt do zapisu przy użyciu `format`."
    - id: arg2
      type: System.Object
      description: "Trzeci obiektu do zapisania za pomocą `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonych obiektów i lista parametrów zmiennej długości do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.Write(String, Object\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.Write(String, Object\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates the use of variable parameters with the Write method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.Write#3](~/add/codesnippet/cpp/04cf3884-a7cc-4915-bdb2-_1.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Pierwszy obiekt do zapisania za pomocą `format`."
    - id: arg1
      type: System.Object
      description: "Drugi obiekt do zapisu przy użyciu `format`."
    - id: arg2
      type: System.Object
      description: "Trzeci obiektu do zapisania za pomocą `format`."
    - id: arg3
      type: System.Object
      description: "Czwarty obiektu do zapisania za pomocą `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.WriteLine
  id: WriteLine
  parent: System.Console
  langs:
  - csharp
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje bieżący terminator wiersza w standardowym strumieniu wyjściowym."
  remarks: "Terminator wiersza domyślna to ciąg, którego wartość jest znak powrotu karetki następuje znak wysuwu wiersza (&quot;\\r&quot; w języku C# lub `vbCrLf` w języku Visual Basic). Terminator wiersza można zmienić, określając <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>Właściwość <xref:System.Console.Out%2A>właściwości do innego ciągu.</xref:System.Console.Out%2A> </xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> W przykładzie przedstawiono ilustracji."
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the WriteLine and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeline_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeline_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeline_1.vb)]"
  syntax:
    content: public static void WriteLine ();
    parameters: []
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje reprezentację tekst określona wartość logiczna, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Boolean.ToString%2A?displayProperty=fullName>metody.</xref:System.Boolean.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example generates ten random integers and uses the WriteLine method to indicate whether they are even.  \n  \n [!code-cpp[System.Console.WriteLine#4](~/add/codesnippet/cpp/m-system.console.writeli_5_1.cpp)]\n [!code-cs[System.Console.WriteLine#4](~/add/codesnippet/csharp/m-system.console.writeli_5_1.cs)]\n [!code-vb[System.Console.WriteLine#4](~/add/codesnippet/visualbasic/m-system.console.writeli_5_1.vb)]"
  syntax:
    content: public static void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określony znak Unicode, następuje terminator wiersza bieżąca wartość do standardowego strumienia wyjściowego."
  remarks: "Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the WriteLine method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_13_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_13_1.vb)]"
  syntax:
    content: public static void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określonej tablicy znaków Unicode, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków Unicode."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Decimal)
  id: WriteLine(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonego <xref:System.Decimal>wartość następuje terminator bieżący wiersz do standardowego strumienia wyjściowego.</xref:System.Decimal>"
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Decimal.ToString%2A?displayProperty=fullName>metody.</xref:System.Decimal.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_3_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_3_1.vb)]"
  syntax:
    content: public static void WriteLine (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje reprezentację tekst podwójnej precyzji zmiennoprzecinkowe określona, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Double.ToString%2A?displayProperty=fullName>metody.</xref:System.Double.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_2_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_2_1.vb)]"
  syntax:
    content: public static void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej 32-bitowej liczby całkowitej ze znakiem, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Int32.ToString%2A?displayProperty=fullName>metody.</xref:System.Int32.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_1_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_1_1.vb)]"
  syntax:
    content: public static void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej 64-bitowej liczby całkowitej ze znakiem, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Int64.ToString%2A?displayProperty=fullName>metody.</xref:System.Int64.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_10_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_10_1.vb)]"
  syntax:
    content: public static void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonego obiektu następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Jeśli `value` jest `null`, są zapisywane tylko terminator wiersza. W przeciwnym razie `ToString` metoda `value` jest wywoływana w celu utworzenia reprezentacji ciągu wynikowy ciąg jest zapisywane do standardowego strumienia wyjściowego.       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the WriteLine method to display each value in an object array to the console.  \n  \n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cs[System.Console.WriteLine#3](~/add/codesnippet/csharp/m-system.console.writeli_6_1.cs)]\n [!code-vb[System.Console.WriteLine#3](~/add/codesnippet/visualbasic/m-system.console.writeli_6_1.vb)]"
  syntax:
    content: public static void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje reprezentację tekst pojedynczej precyzji zmiennoprzecinkowe określona, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.Single.ToString%2A?displayProperty=fullName>metody.</xref:System.Single.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_4_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_4_1.vb)]"
  syntax:
    content: public static void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określona wartość ciągu, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Jeśli wartość jest `null`, terminator wiersza są zapisywane do standardowego strumienia wyjściowego.       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine>metody.</xref:System.Console.WriteLine>"
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the <xref:System.Console.WriteLine> and WriteLine methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeli_0_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeli_0_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeli_0_1.vb)]"
  syntax:
    content: public static void WriteLine (string value);
    parameters:
    - id: value
      type: System.String
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej liczby całkowitej bez znaku 32-bitowy, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.UInt32.ToString%2A?displayProperty=fullName>metody.</xref:System.UInt32.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_8_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_8_1.vb)]"
  syntax:
    content: public static void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt64)
  id: WriteLine(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację wartości określonej liczby całkowitej bez znaku 64-bitowych, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Reprezentacja tekstowa typu `value` jest generowany przez wywołanie metody <xref:System.UInt64.ToString%2A?displayProperty=fullName>metody.</xref:System.UInt64.ToString%2A?displayProperty=fullName>       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_12_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_12_1.vb)]"
  syntax:
    content: public static void WriteLine (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "Wartość do zapisania."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonego obiektu następuje terminator bieżący wiersz do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example calls the WriteLine method to display five randomly generated <xref:System.Boolean> values.  \n  \n [!code-vb[System.Console.WriteLine#6](~/add/codesnippet/visualbasic/m-system.console.writeli_9_1.vb)]\n [!code-cs[System.Console.WriteLine#6](~/add/codesnippet/csharp/m-system.console.writeli_9_1.cs)]  \n  \n The following example calls the WriteLine method to display the current date.   Note that the format item in the `format` argument uses the \"D\" [standard date and time format string](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) to display the date in the long date format of the current culture.  \n  \n [!code-vb[System.Console.WriteLine#7](~/add/codesnippet/visualbasic/m-system.console.writeli_9_2.vb)]\n [!code-cs[System.Console.WriteLine#7](~/add/codesnippet/csharp/m-system.console.writeli_9_2.cs)]"
  syntax:
    content: public static void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Obiekt do zapisu przy użyciu `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje reprezentację tekstu w określonej tablicy obiektów następują terminator bieżący wiersz do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_11_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg
      type: System.Object[]
      description: "Tablica obiektów przy użyciu `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje określony subarray znaków Unicode, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego."
  remarks: "Ta metoda zapisuje `count` znaków, zaczynając od pozycji `index` z `buffer` do standardowego strumienia wyjściowego.       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków Unicode."
    - id: index
      type: System.Int32
      description: "Położenie początkowe w `buffer`."
    - id: count
      type: System.Int32
      description: "Liczba znaków do zapisu."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>lub <code>count</code> jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>plus <code>count</code> określić, która nie jest w stanie <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonych obiektów następują terminator bieżący wiersz do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_7_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_7_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_7_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Pierwszy obiekt do zapisania za pomocą `format`."
    - id: arg1
      type: System.Object
      description: "Drugi obiekt do zapisu przy użyciu `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonych obiektów następują terminator bieżący wiersz do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "Ta metoda używa [złożonych funkcji formatowania](~/add/includes/ajax-current-ext-md.md) programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu. Wynikowy ciąg są zapisywane do strumienia wyjściowego.       `format` Parametr składa się zero lub więcej serii tekstu zmieszać z zero lub więcej symboli zastępczych indeksowanego zwanych formatu elementów, które odnoszą się do obiektu z listy wartości parametru tej metody. Proces formatowania zamienia każdy element formatu tekstowa reprezentacja wartości odpowiedni obiekt.       Składnia elementu formatu `{` *indeksu*[`,`*wyrównanie*] [`:`*formatString*]`}`, który określa obowiązkowe indeks, długość opcjonalne i wyrównanie tekstu sformatowanego i opcjonalny ciąg znaki specyfikatora formatu określające, jak wartość odpowiadającego obiektu jest sformatowana.       .NET Framework zapewnia rozbudowana Obsługa formatowania, który jest opisany bardziej szczegółowo w następujących tematach formatowania.      — Aby uzyskać więcej informacji o złożonych funkcji formatowania obsługiwane przez metody takie jak <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>i niektóre przeciążeń <xref:System.Console.WriteLine%2A>, zobacz [złożone formatowanie](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      — Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji o datę i godzinę specyfikatorów formatu, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md) i [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat specyfikatory formatu wyliczenie zobacz [wyliczanie ciągów formatujących](~/add/includes/ajax-current-ext-md.md).      — Aby uzyskać więcej informacji na temat formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać więcej informacji na temat terminator wiersza, zobacz sekcję uwag <xref:System.Console.WriteLine%2A>metodę, która nie przyjmuje żadnych parametrów.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/ecdde448-c375-4488-93b7-_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Pierwszy obiekt do zapisania za pomocą `format`."
    - id: arg1
      type: System.Object
      description: "Drugi obiekt do zapisu przy użyciu `format`."
    - id: arg2
      type: System.Object
      description: "Trzeci obiektu do zapisania za pomocą `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zapisuje tekst reprezentację określonych obiektów i lista parametrów zmiennej długości, następuje terminator bieżący wiersz do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.WriteLine(String, Object\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.WriteLine(String, Object\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters."
  example:
  - "The following example illustrates the use of variable arguments with the WriteLine method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.WriteLine#5](~/add/codesnippet/cpp/b0d255a7-f5e0-4135-8d9b-_1.cpp)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "Ciąg formatu złożonego (zobacz Uwagi)."
    - id: arg0
      type: System.Object
      description: "Pierwszy obiekt do zapisania za pomocą `format`."
    - id: arg1
      type: System.Object
      description: "Drugi obiekt do zapisu przy użyciu `format`."
    - id: arg2
      type: System.Object
      description: "Trzeci obiektu do zapisania za pomocą `format`."
    - id: arg3
      type: System.Object
      description: "Czwarty obiektu do zapisania za pomocą `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "W specyfikacji formatu <code> format </code> jest nieprawidłowy."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Security.HostProtectionException
  parent: System.Security
  isExternal: false
  name: HostProtectionException
  nameWithType: HostProtectionException
  fullName: System.Security.HostProtectionException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Console.BackgroundColor
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
- uid: System.ConsoleColor
  parent: System
  isExternal: false
  name: ConsoleColor
  nameWithType: ConsoleColor
  fullName: System.ConsoleColor
- uid: System.Console.Beep
  parent: System.Console
  isExternal: false
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
- uid: System.Console.Beep(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Console.BufferHeight
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
- uid: System.Console.BufferWidth
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
- uid: System.Console.CancelKeyPress
  parent: System.Console
  isExternal: false
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
- uid: System.ConsoleCancelEventHandler
  parent: System
  isExternal: false
  name: ConsoleCancelEventHandler
  nameWithType: ConsoleCancelEventHandler
  fullName: System.ConsoleCancelEventHandler
- uid: System.Console.CapsLock
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Console.Clear
  parent: System.Console
  isExternal: false
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
- uid: System.Console.CursorLeft
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
- uid: System.Console.CursorSize
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
- uid: System.Console.CursorTop
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
- uid: System.Console.CursorVisible
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
- uid: System.Console.Error
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Console.ForegroundColor
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
- uid: System.Console.In
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Console.InputEncoding
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Console.IsErrorRedirected
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
- uid: System.Console.KeyAvailable
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
- uid: System.Console.LargestWindowHeight
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Console.NumberLock
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
- uid: System.Console.OpenStandardError
  parent: System.Console
  isExternal: false
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Console.OpenStandardError(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
- uid: System.Console.OpenStandardInput
  parent: System.Console
  isExternal: false
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
- uid: System.Console.OpenStandardInput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
- uid: System.Console.OpenStandardOutput
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
- uid: System.Console.OpenStandardOutput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
- uid: System.Console.Out
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
- uid: System.Console.OutputEncoding
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
- uid: System.Console.Read
  parent: System.Console
  isExternal: false
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
- uid: System.Console.ReadKey
  parent: System.Console
  isExternal: false
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.Console.ReadKey(System.Boolean)
  parent: System.Console
  isExternal: false
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
- uid: System.Console.ReadLine
  parent: System.Console
  isExternal: false
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Console.ResetColor
  parent: System.Console
  isExternal: false
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
- uid: System.Console.SetError(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
- uid: System.Console.SetIn(System.IO.TextReader)
  parent: System.Console
  isExternal: false
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
- uid: System.Console.SetOut(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
- uid: System.Console.Title
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
- uid: System.Console.TreatControlCAsInput
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
- uid: System.Console.WindowHeight
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
- uid: System.Console.WindowLeft
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
- uid: System.Console.WindowTop
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
- uid: System.Console.WindowWidth
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
- uid: System.Console.Write(System.Boolean)
  parent: System.Console
  isExternal: false
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
- uid: System.Console.Write(System.Char)
  parent: System.Console
  isExternal: false
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
- uid: System.Console.Write(System.Char[])
  parent: System.Console
  isExternal: false
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Decimal)
  parent: System.Console
  isExternal: false
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Console.Write(System.Double)
  parent: System.Console
  isExternal: false
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Console.Write(System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
- uid: System.Console.Write(System.Int64)
  parent: System.Console
  isExternal: false
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Console.Write(System.Object)
  parent: System.Console
  isExternal: false
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
- uid: System.Console.Write(System.Single)
  parent: System.Console
  isExternal: false
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Console.Write(System.String)
  parent: System.Console
  isExternal: false
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
- uid: System.Console.Write(System.UInt32)
  parent: System.Console
  isExternal: false
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Console.Write(System.UInt64)
  parent: System.Console
  isExternal: false
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Console.Write(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
- uid: System.Console.Write(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
- uid: System.Console.Write(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
- uid: System.Console.WriteLine
  parent: System.Console
  isExternal: false
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
- uid: System.Console.WriteLine(System.Boolean)
  parent: System.Console
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
- uid: System.Console.WriteLine(System.Char)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
- uid: System.Console.WriteLine(System.Char[])
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
- uid: System.Console.WriteLine(System.Decimal)
  parent: System.Console
  isExternal: false
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
- uid: System.Console.WriteLine(System.Double)
  parent: System.Console
  isExternal: false
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
- uid: System.Console.WriteLine(System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
- uid: System.Console.WriteLine(System.Int64)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
- uid: System.Console.WriteLine(System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
- uid: System.Console.WriteLine(System.Single)
  parent: System.Console
  isExternal: false
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
- uid: System.Console.WriteLine(System.String)
  parent: System.Console
  isExternal: false
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
- uid: System.Console.WriteLine(System.UInt32)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
- uid: System.Console.WriteLine(System.UInt64)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
- uid: System.Console.WriteLine(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
- uid: System.Console.WriteLine(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
- uid: System.Console.BackgroundColor*
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
- uid: System.Console.Beep*
  parent: System.Console
  isExternal: false
  name: Beep
  nameWithType: Console.Beep
- uid: System.Console.BufferHeight*
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
- uid: System.Console.BufferWidth*
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
- uid: System.Console.CapsLock*
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
- uid: System.Console.Clear*
  parent: System.Console
  isExternal: false
  name: Clear
  nameWithType: Console.Clear
- uid: System.Console.CursorLeft*
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
- uid: System.Console.CursorSize*
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
- uid: System.Console.CursorTop*
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
- uid: System.Console.CursorVisible*
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
- uid: System.Console.Error*
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
- uid: System.Console.ForegroundColor*
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
- uid: System.Console.In*
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
- uid: System.Console.InputEncoding*
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
- uid: System.Console.IsErrorRedirected*
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected*
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected*
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
- uid: System.Console.KeyAvailable*
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
- uid: System.Console.LargestWindowHeight*
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth*
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea*
  parent: System.Console
  isExternal: false
  name: MoveBufferArea
  nameWithType: Console.MoveBufferArea
- uid: System.Console.NumberLock*
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
- uid: System.Console.OpenStandardError*
  parent: System.Console
  isExternal: false
  name: OpenStandardError
  nameWithType: Console.OpenStandardError
- uid: System.Console.OpenStandardInput*
  parent: System.Console
  isExternal: false
  name: OpenStandardInput
  nameWithType: Console.OpenStandardInput
- uid: System.Console.OpenStandardOutput*
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput
  nameWithType: Console.OpenStandardOutput
- uid: System.Console.Out*
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
- uid: System.Console.OutputEncoding*
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
- uid: System.Console.Read*
  parent: System.Console
  isExternal: false
  name: Read
  nameWithType: Console.Read
- uid: System.Console.ReadKey*
  parent: System.Console
  isExternal: false
  name: ReadKey
  nameWithType: Console.ReadKey
- uid: System.Console.ReadLine*
  parent: System.Console
  isExternal: false
  name: ReadLine
  nameWithType: Console.ReadLine
- uid: System.Console.ResetColor*
  parent: System.Console
  isExternal: false
  name: ResetColor
  nameWithType: Console.ResetColor
- uid: System.Console.SetBufferSize*
  parent: System.Console
  isExternal: false
  name: SetBufferSize
  nameWithType: Console.SetBufferSize
- uid: System.Console.SetCursorPosition*
  parent: System.Console
  isExternal: false
  name: SetCursorPosition
  nameWithType: Console.SetCursorPosition
- uid: System.Console.SetError*
  parent: System.Console
  isExternal: false
  name: SetError
  nameWithType: Console.SetError
- uid: System.Console.SetIn*
  parent: System.Console
  isExternal: false
  name: SetIn
  nameWithType: Console.SetIn
- uid: System.Console.SetOut*
  parent: System.Console
  isExternal: false
  name: SetOut
  nameWithType: Console.SetOut
- uid: System.Console.SetWindowPosition*
  parent: System.Console
  isExternal: false
  name: SetWindowPosition
  nameWithType: Console.SetWindowPosition
- uid: System.Console.SetWindowSize*
  parent: System.Console
  isExternal: false
  name: SetWindowSize
  nameWithType: Console.SetWindowSize
- uid: System.Console.Title*
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
- uid: System.Console.TreatControlCAsInput*
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
- uid: System.Console.WindowHeight*
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
- uid: System.Console.WindowLeft*
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
- uid: System.Console.WindowTop*
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
- uid: System.Console.WindowWidth*
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
- uid: System.Console.Write*
  parent: System.Console
  isExternal: false
  name: Write
  nameWithType: Console.Write
- uid: System.Console.WriteLine*
  parent: System.Console
  isExternal: false
  name: WriteLine
  nameWithType: Console.WriteLine
