### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  id: JavaScriptSerializer
  children:
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  - System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  - System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  langs:
  - csharp
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
  type: Class
  summary: '[Struktury Json.NET](http://www.newtonsoft.com/json) powinny być używane serializacji i deserializacji. Zapewnia funkcje serializacji i deserializacji dla aplikacji z włączoną obsługą technologii AJAX.'
  remarks: "The JavaScriptSerializer class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server. You cannot access that instance of the serializer. However, this class exposes a public API. Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.  \n  \n To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method. To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods. To serialize and deserialize types that are not natively supported by JavaScriptSerializer, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class. Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.  \n  \n## Mapping Between Managed Types and JSON  \n The following table shows the mapping between managed types and JSON for the serialization process. These managed types are natively supported by JavaScriptSerializer. When you are deserializing from a JSON string to a managed type, the same mapping applies. However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.  \n  \n> [!NOTE]\n>  A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.  \n  \n|Managed type|JSON equivalent|  \n|------------------|---------------------|  \n|<xref:System.String> (UTF-8 encoding only).|String|  \n|<xref:System.Char>|String|  \n|Single null char (such as, \\0 )|Null|  \n|<xref:System.Boolean>|Boolean. Represented in JSON as `true` or `false`|  \n|`null` (`null` object references and <xref:System.Nullable> value types).|A string value of null|  \n|<xref:System.DBNull>|A string value of null|  \n|Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>. The culture-invariant string representation is used.|Number|  \n|<xref:System.DateTime>|Date object, represented in JSON as \"\\\\/Date(number of ticks)\\\\/\". The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.<br /><br /> The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  \n|Enumerations of integer type|Integer equivalent of the enumeration value|  \n|Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.|Array that uses JSON array syntax|  \n|Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.|JavaScript object that uses JSON dictionary syntax|  \n|Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.<br /><br /> Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.|JavaScript object that uses JSON dictionary syntax. A special metadata property named \"__type\" is included to ensure correct deserialization. Make sure that public instance properties have get and set accessors to ensure correct deserialization.|  \n|<xref:System.Guid>|String representation of a GUID|  \n|<xref:System.Uri>|String representation of the return value of <xref:System.Uri.GetComponents%2A>|"
  example:
  - "The first example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/csharp/t-system.web.script.seri_1_1.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_1.vb)]  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/csharp/t-system.web.script.seri_1_2.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_2.vb)]  \n  \n The next example shows a more complicated and complete project that uses the JavaScriptSerializer class to save and restore the state of an object by using JSON serialization. This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-vb[System.Web.Script.Serialization#4](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_3.aspx)]\n [!code-cs[System.Web.Script.Serialization#4](~/add/codesnippet/csharp/t-system.web.script.seri_1_3.aspx)]"
  syntax:
    content: public class JavaScriptSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasy, która ma rozwiązującego typu."
  remarks: "Wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasy bez rozpoznawania typu nie ma typu właściwości metadanych (o nazwie &quot;__type&quot;) w ciągu serializacji JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Właściwość metadanych typ jest używany przez <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>i <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>metod umożliwiających ustalenie zarządzane odpowiedni typ, do którego będzie można przekonwertować ciągu JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Aby uzyskać informacji na temat mechanizmów rozpoznawania typu zobacz <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>klasy.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver>"
  syntax:
    content: public JavaScriptSerializer ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  id: '#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasy, która ma typ niestandardowy program rozpoznawania nazw."
  remarks: "Gdy jest szeregowania obiektu <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasy używa `resolver` parametr, aby określić odpowiednią wartość, aby dołączyć do serializacji ciągu JSON dla właściwości metadanych typu (&quot;__type&quot;).</xref:System.Web.Script.Serialization.JavaScriptSerializer> Podobnie, jeśli <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasy jest deserializacji ciągu JSON, rozpoznaje wartości właściwości typu metadanych do odpowiedniego typu zarządzanego przy użyciu wystąpienia programu rozpoznawania nazw.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Można ustawić `resolver` parametr `null`, który jest odpowiednikiem wywołania <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>konstruktora.</xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>       Wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer>używany przez warstwę komunikacji asynchronicznej dla wywołania usługi sieci Web ze skryptu klienta używa specjalny typ program rozpoznawania nazw.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Ten mechanizm rozpoznawania typu ogranicza typy, które można wykonać deserializacji zdefiniowane w podpisie metody usługi sieci Web lub te, które <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>zastosowane.</xref:System.Web.Script.Services.GenerateScriptTypeAttribute> Ten mechanizm rozpoznawania typu wbudowanego nie można modyfikować programowo.      > [!IMPORTANT] > Za pomocą wystąpienia tego obiektu zainicjowany z niestandardowych rozpoznawania typu można stanowią zagrożenie dla bezpieczeństwa. Ten obiekt jest używany tylko z zaufanych danych. Aby uzyskać więcej informacji, zobacz [niezaufanych zagrożenia bezpieczeństwa danych](http://go.microsoft.com/fwlink/?LinkId=330378)."
  syntax:
    content: public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);
    parameters:
    - id: resolver
      type: System.Web.Script.Serialization.JavaScriptTypeResolver
      description: "Obiekt mechanizm rozpoznawania typu niestandardowego."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  id: ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konwertuje określony obiekt określonego typu."
  remarks: "Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer>wystąpienie wykonuje serializację typu, dla którego niestandardowy konwerter jest zarejestrowany, wywołania serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metodę, aby uzyskać słownik par nazw i wartości, które zostanie przekonwertowany na ciąg w formacie JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>Metody można również zgłaszają wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowanych wystąpień <xref:System.Web.Script.Serialization.JavaScriptConverter>spowodował konwertera rekursji.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public object ConvertToType (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do konwersji."
    - id: targetType
      type: System.Type
      description: "Typ docelowy konwersji obiektu do."
    return:
      type: System.Object
      description: "Serializacji ciągu JSON."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wynikowy ciąg w formacie JSON przekracza wartość <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - lub - <code> obj </code> zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny zawiera odwołanie do obiektu nadrzędnego, a obiekt nadrzędny zawiera odwołanie do obiektu podrzędnego."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Limit rekursji zdefiniowane przez <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>został przekroczony.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  id: ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T ConvertToType<T> (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Do dodania."
    return:
      type: T
      description: "Do dodania."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  id: Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konwertuje ciąg w formacie JSON na obiekt określonego typu."
  remarks: "Ta metoda deserializacji nie będzie próbował rzutowania głównego wykresu obiektu określonego typu sposób który <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>Metoda wykonuje.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object Deserialize (string input, Type targetType);
    parameters:
    - id: input
      type: System.String
      description: "Ciąg JSON do zdeserializowania."
    - id: targetType
      type: System.Type
      description: "Typ wynikowy obiekt."
    return:
      type: System.Object
      description: "Zdeserializowany obiekt."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Długość <code> input </code> przekracza wartość <> </> *>.       - lub - limit rekursji zdefiniowane przez <> </> *> został przekroczony.       - lub - <code> input </code> zawiera nieoczekiwany znak sekwencji.       - lub - <code> input </code> jest typem słownika i napotkano wartość klucza innych niż ciąg.       - lub - <code> input </code> zawiera definicje elementu członkowskiego, które nie są dostępne na typ docelowy."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>zawiera właściwości &quot;__type&quot;, która wskazuje, że typ niestandardowy, ale typ programu rozpoznawania nazw, który jest aktualnie powiązany z Serializator nie można znaleźć odpowiedniego typu zarządzanego.       - lub - <code>input</code> zawiera właściwość &quot;__type&quot;, która wskazuje typ niestandardowy, ale wynik deserializacji odpowiedniego ciągu JSON nie można przypisać do typu oczekiwanego docelowego.       - lub - <code>input</code> zawiera właściwość &quot;__type&quot;, która wskazuje albo <xref:System.Object> lub z systemem innym niż tworzone jako wystąpienia typu (na przykład typ abstrakcyjny lub interfejs).       - lub - została podjęta próba konwersji tablicy JSON do tablicy typu zarządzanego, który nie jest obsługiwany jako element docelowy deserializacji JSON.       - lub - nie jest możliwe do przekonwertowania <code>input</code> na typ docelowy."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T Deserialize<T> (string input);
    parameters:
    - id: input
      type: System.String
      description: "Do dodania."
    return:
      type: T
      description: "Do dodania."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  id: DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konwertuje określony ciąg JSON do obiektu wykresu."
  remarks: "Ta metoda deserializacji nie będzie próbował rzutowania głównego wykresu obiektu określonego typu, jak <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>metody.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object DeserializeObject (string input);
    parameters:
    - id: input
      type: System.String
      description: "Ciąg JSON do zdeserializowania."
    return:
      type: System.Object
      description: "Zdeserializowany obiekt."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> input </code> Długość przekracza wartość <> </> *>.       - lub - limit rekursji zdefiniowane przez <> </> *> został przekroczony.       - lub - <code> input </code> zawiera nieoczekiwany znak sekwencji.       - lub - <code> input </code> jest typem słownika i napotkano wartość klucza innych niż ciąg.       - lub - <code> input </code> zawiera definicje elementu członkowskiego, które nie są dostępne na typ docelowy."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>zawiera właściwości &quot;__type&quot;, która wskazuje, że typ niestandardowy, ale typ programu rozpoznawania nazw, który jest aktualnie powiązany z Serializator nie można znaleźć odpowiedniego typu zarządzanego.       - lub - <code>input</code> zawiera właściwość &quot;__type&quot;, która wskazuje typ niestandardowy, ale wynik deserializacji odpowiedniego ciągu JSON nie można przypisać do typu oczekiwanego docelowego.       - lub - <code>input</code> zawiera właściwość &quot;__type&quot;, która wskazuje albo <xref:System.Object> lub z systemem innym niż tworzone jako wystąpienia typu (na przykład typ abstrakcyjny lub interfejs).       - lub - została podjęta próba konwersji tablicy JSON do tablicy typu zarządzanego, który nie jest obsługiwany jako element docelowy deserializacji JSON.       - lub - nie jest możliwe do przekonwertowania <code>input</code> na typ docelowy."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  id: MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Pobiera lub ustawia maksymalną długość ciągów JSON, które są akceptowane przez <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasy."
  remarks: 'Wartość właściwości MaxJsonLength ma zastosowanie tylko wtedy, gdy jawnie utworzyć wystąpienia <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasy.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Użyj `jsonSerialization` elementu w pliku konfiguracji, aby ustawić maksymalną długość wystąpienie serializator wewnętrznego, które jest używane przez warstwę komunikacji asynchronicznej. Aby uzyskać więcej informacji o elementach konfiguracji do serializacji, zobacz [porady: Konfigurowanie usługi ASP.NET AJAX Microsoft](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public int MaxJsonLength { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna długość ciągów JSON. Wartość domyślna to 2097152 znaków, który jest odpowiednikiem 4 MB danych ciąg Unicode."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Właściwość jest ustawiona na wartość, która jest mniejsza niż jedna."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  id: RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Pobiera lub ustawia limit ograniczający liczbę poziomów obiektu do przetworzenia."
  remarks: "Właściwość wartość RecursionLimit odwołuje się do liczby poziomów w hierarchii obiektów które <xref:System.Web.Script.Serialization.JavaScriptSerializer>przetworzy w następujących przypadkach: — po <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasy jest deserializacji ciągu JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Web.Script.Serialization.JavaScriptSerializer>      -Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasy jest przejście z wykresu obiektu podczas serializacji.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Wartość wartość RecursionLimit ma zastosowanie tylko wtedy, gdy jawnie utworzyć wystąpienia <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasy.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Użyj `jsonSerialization` elementu w pliku konfiguracji, aby ustawić liczbę poziomów obiektu przetwarzania dla wystąpienia wewnętrzny serializator używany przez warstwy komunikacji asynchronicznej. Aby uzyskać więcej informacji o elementach konfiguracji do serializacji, zobacz [porady: Konfigurowanie usługi ASP.NET AJAX Microsoft](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int RecursionLimit { get; set; }
    return:
      type: System.Int32
      description: "Liczba poziomów obiektu. Wartość domyślna to 100."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Właściwość jest ustawiona na wartość, która jest mniejsza niż jedna."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  id: RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Rejestruje niestandardowych konwertera z <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> wystąpienia."
  remarks: "Możesz zarejestrować co najmniej jeden niestandardowy konwerterów z <xref:System.Web.Script.Serialization.JavaScriptSerializer>wystąpienia przy użyciu metody RegisterConverters.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Po zarejestrowaniu niestandardowego konwertery są <xref:System.Web.Script.Serialization.JavaScriptSerializer>używa konwertery do serializacji typy zarządzane i deserializacji JSON ciągów na typy zarządzane.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Może być zarejestrowany konwertery wiele z takimi samymi <xref:System.Web.Script.Serialization.JavaScriptSerializer>wystąpienia i konwerterów można wskazać obsługę tego samego typu.</xref:System.Web.Script.Serialization.JavaScriptSerializer> W związku z tym ostatnim konwerter, który jest zarejestrowany dla określonego typu jest ten, który będzie używany przez <xref:System.Web.Script.Serialization.JavaScriptSerializer>serializować dany typ..</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Aby uzyskać więcej informacji na temat konwerterów niestandardowych zobacz <xref:System.Web.Script.Serialization.JavaScriptConverter>klasy.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer>class.  \n  \n [!code-vb[System.Web.Script.Serialization#1](~/add/codesnippet/visualbasic/0b038c1f-1fc5-4957-9daf-_1.aspx)]\n [!code-cs[System.Web.Script.Serialization#1](~/add/codesnippet/csharp/0b038c1f-1fc5-4957-9daf-_1.aspx)]"
  syntax:
    content: public void RegisterConverters (System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter> converters);
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
      description: "Tablica zawiera niestandardowe konwertery ma zostać zarejestrowany."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>converters</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konwertuje obiekt do ciągu JSON."
  remarks: "Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer>wystąpienie wykonuje serializację typu, dla którego niestandardowy konwerter jest zarejestrowany, wywołania serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metodę, aby uzyskać słownik par nazw i wartości, które zostanie przekonwertowane do ciągu JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Metoda serializacja można również zgłaszają wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowanych wystąpień <xref:System.Web.Script.Serialization.JavaScriptConverter>spowodował konwertera rekursji.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Serialize (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do zserializowania."
    return:
      type: System.String
      description: "Serializacji ciągu JSON."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wynikowy ciąg JSON przekracza wartość <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - lub - <code> obj </code> zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny zawiera odwołanie do obiektu nadrzędnego, a obiekt nadrzędny zawiera odwołanie do obiektu podrzędnego."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Limit rekursji zdefiniowane przez <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>został przekroczony.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  id: Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Serializuje obiekt i zapisuje wynikowy ciąg JSON do określonego <xref:System.Text.StringBuilder>obiektu.</xref:System.Text.StringBuilder>"
  remarks: "Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer>wystąpienie wykonuje serializację typu, dla którego niestandardowy konwerter jest zarejestrowany, wywołania serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metodę, aby uzyskać słownik par nazw i wartości, które zostanie przekonwertowane do ciągu JSON.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>Metody można również zgłaszają wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowanych wystąpień <xref:System.Web.Script.Serialization.JavaScriptConverter>spowodował konwertera rekursji.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public void Serialize (object obj, System.Text.StringBuilder output);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do zserializowania."
    - id: output
      type: System.Text.StringBuilder
      description: "<xref:System.Text.StringBuilder>Obiekt, który służy do zapisywania ciągu JSON.</xref:System.Text.StringBuilder>"
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wynikowy ciąg JSON przekracza wartość <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - lub - <code> obj </code> zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny zawiera odwołanie do obiektu nadrzędnego, a obiekt nadrzędny zawiera odwołanie do obiektu podrzędnego."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Limit rekursji zdefiniowane przez <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>został przekroczony.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
- uid: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JavaScriptConverter>
  nameWithType: IEnumerable<JavaScriptConverter>
  fullName: System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.Script.Serialization.JavaScriptConverter
    name: JavaScriptConverter
    nameWithType: JavaScriptConverter
    fullName: JavaScriptConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType
  nameWithType: JavaScriptSerializer.ConvertToType
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType<T>
  nameWithType: JavaScriptSerializer.ConvertToType<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptSerializer.Deserialize
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize<T>
  nameWithType: JavaScriptSerializer.Deserialize<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject
  nameWithType: JavaScriptSerializer.DeserializeObject
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters
  nameWithType: JavaScriptSerializer.RegisterConverters
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptSerializer.Serialize
