### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.AccessKeyManager
  id: AccessKeyManager
  children:
  - System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  - System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  - System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  - System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  - System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  langs:
  - csharp
  name: AccessKeyManager
  nameWithType: AccessKeyManager
  fullName: System.Windows.Input.AccessKeyManager
  type: Class
  summary: "Obsługuje rejestrację wszystkich kluczy dostępu i obsługę poleceń klawiatury międzyoperacyjnego między [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)], [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)], i [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]."
  remarks: "Obiekt AccessKeyManager jest tworzony na żądanie z jednym dla każdego <xref:System.Windows.Threading.Dispatcher>.</xref:System.Windows.Threading.Dispatcher>       AccessKeyManager jest dołączony jako program obsługi zdarzeń dla <xref:System.Windows.Input.InputManager.PostProcessInput>i udostępnia metody <xref:System.Windows.Input.AccessKeyManager.Register%2A>i <xref:System.Windows.Input.AccessKeyManager.Unregister%2A>klucze dostępu.</xref:System.Windows.Input.AccessKeyManager.Unregister%2A> </xref:System.Windows.Input.AccessKeyManager.Register%2A> </xref:System.Windows.Input.InputManager.PostProcessInput>       Po naciśnięciu klawisza dostępu zarejestrowanych, wywołania AccessKeyManager <xref:System.Windows.UIElement.OnAccessKey%2A>metody w elemencie docelowym.</xref:System.Windows.UIElement.OnAccessKey%2A>       Element można skojarzyć z dowolną liczbę kluczy dostępu."
  syntax:
    content: public sealed class AccessKeyManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  id: AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identyfikuje <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>kierowanego zdarzenia.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Dodaje obsługę <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>dołączony zdarzeń.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą do tego zdarzenia."
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: "Program obsługi zdarzeń do dodania."
  overload: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  id: IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Wskazuje, czy określony klucz jest zarejestrowany jako klucze dostępu w podanym zakresie."
  syntax:
    content: public static bool IsKeyRegistered (object scope, string key);
    parameters:
    - id: scope
      type: System.Object
      description: "Źródło prezentacji można wyszukiwać `key`."
    - id: key
      type: System.String
      description: "Klucz do zapytania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli klucz jest zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.AccessKeyManager.IsKeyRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  id: ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Przetwarza klucze dostępu określonego tak, jakby <xref href=&quot;System.Windows.UIElement.KeyDown&quot;> </xref> zdarzenia dla klucza została przekazana do <xref href=&quot;System.Windows.Input.AccessKeyManager&quot;> </xref>."
  syntax:
    content: public static bool ProcessKey (object scope, string key, bool isMultiple);
    parameters:
    - id: scope
      type: System.Object
      description: "Zakres klucz dostępu."
    - id: key
      type: System.String
      description: "Klucz dostępu."
    - id: isMultiple
      type: System.Boolean
      description: "Wskazuje, czy `key` ma wiele dopasowań."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli istnieje więcej klucze, które odpowiadają; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.AccessKeyManager.ProcessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  id: Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Kojarzy klucze dostępu określonego z określonego elementu."
  remarks: "Po naciśnięciu klawiszy dostępu <xref:System.Windows.UIElement.OnAccessKey%2A>Metoda `element` jest wywoływana.</xref:System.Windows.UIElement.OnAccessKey%2A>       Element można skojarzyć z dowolną liczbę kluczy dostępu."
  syntax:
    content: public static void Register (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: "Klucz dostępu."
    - id: element
      type: System.Windows.IInputElement
      description: "Element, aby skojarzyć `key` z."
  overload: System.Windows.Input.AccessKeyManager.Register*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Usuwa określoną <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>obsługi zdarzeń od określonego obiektu.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> Lub <xref href=&quot;System.Windows.ContentElement&quot;> </xref> nasłuchującą do tego zdarzenia."
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: "Program obsługi zdarzeń do usunięcia."
  overload: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  id: Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Usuwa skojarzenie określonego dostępu klucze z określonego elementu."
  syntax:
    content: public static void Unregister (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: "Klucz dostępu."
    - id: element
      type: System.Windows.IInputElement
      description: "Element, z którego może anulować skojarzenia `key`."
  overload: System.Windows.Input.AccessKeyManager.Unregister*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Input.AccessKeyPressedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyPressedEventHandler
  nameWithType: AccessKeyPressedEventHandler
  fullName: System.Windows.Input.AccessKeyPressedEventHandler
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AddAccessKeyPressedHandler
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: IsKeyRegistered
  nameWithType: AccessKeyManager.IsKeyRegistered
- uid: System.Windows.Input.AccessKeyManager.ProcessKey*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: ProcessKey
  nameWithType: AccessKeyManager.ProcessKey
- uid: System.Windows.Input.AccessKeyManager.Register*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Register
  nameWithType: AccessKeyManager.Register
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: RemoveAccessKeyPressedHandler
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler
- uid: System.Windows.Input.AccessKeyManager.Unregister*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Unregister
  nameWithType: AccessKeyManager.Unregister
