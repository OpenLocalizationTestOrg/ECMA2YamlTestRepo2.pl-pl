### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.DictationGrammar
  id: DictationGrammar
  children:
  - System.Speech.Recognition.DictationGrammar.#ctor
  - System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  - System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  langs:
  - csharp
  name: DictationGrammar
  nameWithType: DictationGrammar
  fullName: System.Speech.Recognition.DictationGrammar
  type: Class
  summary: "Reprezentuje używany dla niezależnych dyktowania gramatyki rozpoznawania mowy."
  remarks: "Ta klasa udostępnia aplikacji z modelem wstępnie zdefiniowanych języka, który może przetworzyć danych wejściowych użytkownika rozmowy na tekst. Ta klasa obsługuje domyślnych i niestandardowych obiektach DictationGrammar. Aby uzyskać informacje o wybieraniu gramatyki dyktowania, zobacz <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>konstruktora.</xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>       Domyślnie model języka DictationGrammar jest bezpłatna kontekstu. Nie powoduje użycie słów i word, aby zidentyfikować i interpretować wejście audio. Aby dodać kontekstu do gramatyki dyktowania, użyj <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>metody.</xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>      > [!NOTE] > Obiektach DictationGrammar nie obsługują <xref:System.Speech.Recognition.Grammar.Priority%2A>Właściwości.</xref:System.Speech.Recognition.Grammar.Priority%2A> Zgłasza DictationGrammar <xref:System.NotSupportedException>Jeśli <xref:System.Speech.Recognition.Grammar.Priority%2A>jest ustawiona.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.NotSupportedException>"
  example:
  - "The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object. The first grammar is the default dictation grammar. The second grammar is the spelling dictation grammar. The third grammar is the default dictation grammar that includes a context phrase. The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine LoadDictationGrammars()  \n{  \n  \n  // Create a default dictation grammar.  \n  DictationGrammar defaultDictationGrammar = new DictationGrammar();  \n  defaultDictationGrammar.Name = \"default dictation\";  \n  defaultDictationGrammar.Enabled = true;  \n  \n  // Create the spelling dictation grammar.  \n  DictationGrammar spellingDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation#spelling\");  \n  spellingDictationGrammar.Name = \"spelling dictation\";  \n  spellingDictationGrammar.Enabled = true;  \n  \n  // Create the question dictation grammar.  \n  DictationGrammar customDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation\");  \n  customDictationGrammar.Name = \"question dictation\";  \n  customDictationGrammar.Enabled = true;  \n  \n  // Create a SpeechRecognitionEngine object and add the grammars to it.  \n  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  \n  recoEngine.LoadGrammar(defaultDictationGrammar);  \n  recoEngine.LoadGrammar(spellingDictationGrammar);  \n  recoEngine.LoadGrammar(customDictationGrammar);  \n  \n  // Add a context to customDictationGrammar.  \n  customDictationGrammar.SetDictationContext(\"How do you\", null);  \n  \n  return recoEngine;  \n}  \n  \n```"
  syntax:
    content: 'public class DictationGrammar : System.Speech.Recognition.Grammar'
  inheritance:
  - System.Object
  - System.Speech.Recognition.Grammar
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> klasy dla gramatyki dyktowania domyślne zapewniany przez technologię mowy pulpitu systemu Windows."
  remarks: "Gramatyka dyktowania domyślne emuluje praktyki dyktowania standardowe, w tym znaków interpunkcyjnych. Nie obsługuje pisownię wyrazu."
  syntax:
    content: public DictationGrammar ();
    parameters: []
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> gramatyki dyktowania określonej klasy."
  remarks: "Platformy mowy używa specjalne składni identyfikatora URI w celu zdefiniowania dyktowania niestandardowe gramatyki. Wartość `grammar:dictation` wskazuje gramatyki dyktowania domyślne. Wartość `grammar:dictation#spelling` wskazuje gramatyki dyktowania pisowni."
  syntax:
    content: public DictationGrammar (string topic);
    parameters:
    - id: topic
      type: System.String
      description: "XML zgodne uniwersalnych zasobów identyfikator (URI), który określa gramatyki dyktowania albo `grammar:dictation` lub `grammar:dictation#spelling`."
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  id: SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Dodaje kontekst do gramatyki dyktowania, która została załadowana przez <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> lub <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> obiektu."
  remarks: "Domyślnie gramatyki dyktowania nie powoduje użycie słów i word, aby zidentyfikować i interpretować wejście audio. W przypadku kontekst jest dodawany do gramatyki dyktowania, korzysta z aparatu rozpoznawania `precedingText` i `subsequentText` do identyfikacji podczas interpretacji mowy jako dyktowania.      > [!NOTE] > Gramatyki dyktowania muszą zostać załadowane przez <xref:System.Speech.Recognition.SpeechRecognizer>lub <xref:System.Speech.Recognition.SpeechRecognitionEngine>obiekt przed SetDictationContext umożliwia dodawanie w kontekście.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer>       W poniższej tabeli opisano, jak aparat rozpoznawania ustalenie, kiedy należy używać gramatyki dyktowania używa dwóch parametrów.      | `precedingText`|`subsequentText`| Opis elementu |   |---------------------|----------------------|-----------------|   |not `null`|not `null`| Aparat rozpoznawania podstawie warunków nawiasów wyrażeń kandydatem. |   | `null`|not `null`| Korzysta z aparatu rozpoznawania `subsequentText` na zakończenie dyktowania. |   |not `null`|`null`| Korzysta z aparatu rozpoznawania `precedingText` uruchomić dyktowania. |   | `null`|`null`| Aparat rozpoznawania nie używa kontekstu, używając gramatyki dyktowania. |"
  syntax:
    content: public void SetDictationContext (string precedingText, string subsequentText);
    parameters:
    - id: precedingText
      type: System.String
      description: "Tekst, który wskazuje początek kontekstu dyktowania."
    - id: subsequentText
      type: System.String
      description: "Tekst, który wskazuje koniec kontekstu dyktowania."
  overload: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.Grammar
  isExternal: false
  name: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
- uid: System.Speech.Recognition.DictationGrammar.#ctor*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar
  nameWithType: DictationGrammar.DictationGrammar
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext
  nameWithType: DictationGrammar.SetDictationContext
