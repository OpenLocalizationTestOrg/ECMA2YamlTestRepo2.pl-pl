### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices
  id: LifetimeServices
  children:
  - System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor
  - System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  - System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  - System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  - System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  langs:
  - csharp
  name: LifetimeServices
  nameWithType: LifetimeServices
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices
  type: Class
  summary: "Formanty środowiska.NET remoting okres istnienia usługi."
  remarks: "Rozproszonej wyrzucanie elementów bezużytecznych jest odpowiedzialny za kontrolowanie okresy istnienia aplikacji serwera i ich usuwania, gdy wygasły ich życia. Tradycyjnym rozproszonej wyrzucanie elementów bezużytecznych używa liczby odwołań i polecenie ping dla formantu. Działa to również w przypadku kilku klientów dla każdego obiektu, ale nie działa dobrze w przypadku, gdy istnieją tysiące klientów dla każdego obiektu. Okres istnienia usługi można założyć funkcja tradycyjnych rozproszonej moduł Garbage Collector i skale sytuacji, gdy zwiększa liczby klientów.       Okres istnienia usługi kojarzy dzierżawy z każdego obiektu zdalnie aktywowane. Gdy dzierżawa wygaśnie, obiekt jest usunięty.      > [!NOTE] > Tej klasy sprawia, że żądanie łącza. SecurityException jest generowany, jeśli bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury. Zobacz [Linkdemand](~/add/includes/ajax-current-ext-md.md) Aby uzyskać więcej informacji."
  example:
  - >-
    [!code-cpp[System.Runtime.Remoting.Lifetime#2](~/add/codesnippet/cpp/t-system.runtime.remotin_69_1.cpp)]
     [!code-vb[System.Runtime.Remoting.Lifetime#2](~/add/codesnippet/visualbasic/t-system.runtime.remotin_69_1.vb)]
     [!code-cs[System.Runtime.Remoting.Lifetime#2](~/add/codesnippet/csharp/t-system.runtime.remotin_69_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class LifetimeServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: LifetimeServices()
  nameWithType: LifetimeServices.LifetimeServices()
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LifetimeServices()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Tworzy wystąpienie <xref href=&quot;System.Runtime.Remoting.Lifetime.LifetimeServices&quot;> </xref>."
  syntax:
    content: public LifetimeServices ();
    parameters: []
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  id: LeaseManagerPollTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: LeaseManagerPollTime
  nameWithType: LifetimeServices.LeaseManagerPollTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Pobiera lub ustawia odstęp czasu między Każda aktywacja Menedżera dzierżawy, aby wyczyścić Wygasłe dzierżawy."
  remarks: "Właściwość bieżącego definiuje częstotliwość jaką Menedżera dzierżawy staje się aktywny, aby wyczyścić Wygasłe dzierżawy. Na przykład jeśli LeaseManagerPollTime jest ustawiona na 100 sekund, na liście dzierżawy jest sprawdzane pod kątem czyszczenia i odnowienia co 100 sekund.       Wartość domyślna właściwości LeaseManagerPollTime to 10 sekund."
  syntax:
    content: public static TimeSpan LeaseManagerPollTime { get; set; }
    return:
      type: System.TimeSpan
      description: "Domyślna ilość czasu Menedżera dzierżawy jest w stanie uśpienia po sprawdzanie ważności dzierżawy."
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów. Ten wyjątek jest zgłaszany tylko wtedy, gdy wartość właściwości."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  id: LeaseTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: LeaseTime
  nameWithType: LifetimeServices.LeaseTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Pobiera lub ustawia zakres czasu inicjowania dzierżawy dla <xref href=&quot;System.AppDomain&quot;> </xref>."
  remarks: "Przedział czasu dzierżawy domyślna to 5 minut."
  syntax:
    content: public static TimeSpan LeaseTime { get; set; }
    return:
      type: System.TimeSpan
      description: "Inicjowania dzierżawy <xref:System.TimeSpan>dla obiektów, które mogą mieć dzierżaw w <xref href=&quot;System.AppDomain&quot;> </xref>.</xref:System.TimeSpan>"
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów. Ten wyjątek jest zgłaszany tylko wtedy, gdy wartość właściwości."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  id: RenewOnCallTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: RenewOnCallTime
  nameWithType: LifetimeServices.RenewOnCallTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Pobiera lub ustawia czas, przez którą dzierżawy został rozszerzony za każdym razem, gdy wywołanie jest dostarczany na obiekt serwera."
  remarks: "Czas przedłużenia domyślnego za pomocą którego został rozszerzony okres istnienia dzierżawy wynosi 2 minuty."
  example:
  - >-
    [!code-cpp[ILease_ILease#3](~/add/codesnippet/cpp/p-system.runtime.remotin_103_1.cpp)]
     [!code-cs[ILease_ILease#3](~/add/codesnippet/csharp/p-system.runtime.remotin_103_1.cs)]
     [!code-vb[ILease_ILease#3](~/add/codesnippet/visualbasic/p-system.runtime.remotin_103_1.vb)]
  syntax:
    content: public static TimeSpan RenewOnCallTime { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Przez który dzierżawy w bieżącym okresie istnienia <xref href=&quot;System.AppDomain&quot;> </xref> jest rozszerzony po każdym wywołaniu.</xref:System.TimeSpan>"
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów. Ten wyjątek jest zgłaszany tylko wtedy, gdy wartość właściwości."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  id: SponsorshipTimeout
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: SponsorshipTimeout
  nameWithType: LifetimeServices.SponsorshipTimeout
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Pobiera lub ustawia czas oczekiwania menedżera dzierżawy dla sponsor mają być zwracane z czas przedłużenia dzierżawy."
  remarks: "Domyślny czas, dopóki wywołania sponsor zostanie przekroczony limit czasu wynosi 2 minuty."
  example:
  - >-
    [!code-cpp[ILease_ILease#3](~/add/codesnippet/cpp/p-system.runtime.remotin_75_1.cpp)]
     [!code-cs[ILease_ILease#3](~/add/codesnippet/csharp/p-system.runtime.remotin_75_1.cs)]
     [!code-vb[ILease_ILease#3](~/add/codesnippet/visualbasic/p-system.runtime.remotin_75_1.vb)]
  syntax:
    content: public static TimeSpan SponsorshipTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Dostęp sponsorowany początkowej limit czasu."
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów. Ten wyjątek jest zgłaszany tylko wtedy, gdy wartość właściwości."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LifetimeServices()
  nameWithType: LifetimeServices.LifetimeServices()
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LifetimeServices()
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseManagerPollTime
  nameWithType: LifetimeServices.LeaseManagerPollTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseTime
  nameWithType: LifetimeServices.LeaseTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: RenewOnCallTime
  nameWithType: LifetimeServices.RenewOnCallTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: SponsorshipTimeout
  nameWithType: LifetimeServices.SponsorshipTimeout
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LifetimeServices
  nameWithType: LifetimeServices.LifetimeServices
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseManagerPollTime
  nameWithType: LifetimeServices.LeaseManagerPollTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseTime
  nameWithType: LifetimeServices.LeaseTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: RenewOnCallTime
  nameWithType: LifetimeServices.RenewOnCallTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: SponsorshipTimeout
  nameWithType: LifetimeServices.SponsorshipTimeout
