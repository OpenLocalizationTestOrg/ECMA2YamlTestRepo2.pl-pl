### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeInvoker
  id: XamlTypeInvoker
  children:
  - System.Xaml.Schema.XamlTypeInvoker.#ctor
  - System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  - System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  - System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  - System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  - System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  langs:
  - csharp
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
  type: Class
  summary: "Udostępnia punkt rozszerzenia, które można utworzyć wystąpienia typu XAML za pomocą metod innych niż odbicia i konstruktorów."
  remarks: "XamlTypeInvoker ma na celu Włącz rozszerzalny system typów języka XAML, schematów i działającego wykonawczego, które nie w pełni korzystają z funkcji CLR, takich jak atrybuty CLR, odbicia informacji za pośrednictwem <xref:System.Type>i <xref:System.Reflection.MemberInfo>itd.</xref:System.Reflection.MemberInfo> </xref:System.Type> Podklasy XamlTypeInvoker są używane jako parametry wejściowe dla alternatywnego konstruktorów klas schematu XAML, takich jak <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> Możesz podklasy <xref:System.Xaml.XamlType>i przekaż XamlTypeInvoker za pośrednictwem do konstruktora podstawowego.</xref:System.Xaml.XamlType> Wraz z Definiowanie XamlTypeInvoker dla konstruktora, musisz także podać zastąpień dla co najmniej niektóre `Lookup` metody <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType>       XamlTypeInvoker ma domyślną implementację. Domyślna implementacja następuje modelu podobne do implementacji domyślnej typów schematu XAML <xref:System.Xaml.XamlType>i <xref:System.Xaml.XamlMember>: system typów CLR służy do tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <xref:System.Type>i <xref:System.Reflection.MemberInfo>itd.</xref:System.Reflection.MemberInfo> </xref:System.Type> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>       XamlTypeInvoker udostępnia metody dla podstawowego wystąpienia (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) i metody, które są odpowiednie dla typów gdzie <xref:System.Xaml.XamlType>reprezentuje kolekcji, słownika lub tablicy (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A></xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A></xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A></xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A></xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A></xref:System.Xaml.XamlType></xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>"
  syntax:
    content: public class XamlTypeInvoker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> klasy."
  remarks: "Domyślna implementacja jest pusta.       Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A> Dla <xref:System.Xaml.Schema.XamlTypeInvoker>podklasy, oczekuje się, że możesz użyć <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>Podpis dla konstrukcji lub podaj zastąpienia, która wywołuje <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>jako podstawa.</xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> </xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> </xref:System.Xaml.Schema.XamlTypeInvoker> Zapewnianie <xref:System.Xaml.XamlType>implementuje domyślnego wzorca where <xref:System.Xaml.Schema.XamlTypeInvoker>nie można modyfikować.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType>"
  syntax:
    content: protected XamlTypeInvoker ();
    parameters: []
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker(XamlType)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> klasy oparte na podany <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Ten konstruktor jest wywoływana wewnętrznie na podstawie <xref:System.Xaml.XamlType>gdzie <xref:System.Xaml.Schema.XamlTypeInvoker>jest używany do budowy.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> `type` Podane w tym miejscu są odpowiednie do innej metody wymaga <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public XamlTypeInvoker (System.Xaml.XamlType type);
    parameters:
    - id: type
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> Wartość dla określonego typu XAML dotyczy to <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  id: AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToCollection(Object,Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Dodaje podany element do wystąpienia typu, który ma zastosowanie do tego <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  remarks: "Tej metody powinny wywoływać tylko na <xref:System.Xaml.XamlType>reprezentujący kolekcję.</xref:System.Xaml.XamlType>"
  syntax:
    content: public virtual void AddToCollection (object instance, object item);
    parameters:
    - id: instance
      type: System.Object
      description: "Wystąpienia typu określonego przez <xref href=&quot;System.Xaml.XamlType&quot;> </xref> użyte do konstruowania to <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
    - id: item
      type: System.Object
      description: "Element do dodania."
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wywołania tej metody na <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> opartego na nieznany <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.       **- lub -** wywołania tej metody na <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> gdzie odpowiedniego typu nie jest kolekcją."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: '&lt;XRef:system.XAML.Schema.XamlTypeInvoker.GetAddMethod%2a?displayProperty=fullName&gt; tego <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.'
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  id: AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToDictionary(Object,Object,Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Dodaje podana wartość dla klucza elementu do wystąpienia typu, który ma zastosowanie do tego <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  remarks: "Tej metody powinny wywoływać tylko na <xref:System.Xaml.XamlType>reprezentujący słownika.</xref:System.Xaml.XamlType>"
  syntax:
    content: public virtual void AddToDictionary (object instance, object key, object item);
    parameters:
    - id: instance
      type: System.Object
      description: "Wystąpienia typu określonego przez <xref href=&quot;System.Xaml.XamlType&quot;> </xref> użyte do konstruowania to <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
    - id: key
      type: System.Object
      description: "Słownik klucz elementu do dodania."
    - id: item
      type: System.Object
      description: "Wartość elementu do dodania."
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wywołania tej metody na <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> opartego na nieznany <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.       **- lub -** wywołania tej metody na <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> gdzie odpowiedniego typu nie jest słownikiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: '&lt;XRef:system.XAML.Schema.XamlTypeInvoker.GetAddMethod%2a?displayProperty=fullName&gt; tego <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.'
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(Object[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Tworzy wystąpienie obiektu oparte na inicjowanych konstrukcji <xref href=&quot;System.Xaml.XamlType&quot;> </xref> tego <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  syntax:
    content: public virtual object CreateInstance (object[] arguments);
    parameters:
    - id: arguments
      type: System.Object[]
      description: "Tablica obiektów, które dostarczają <xref uid=&quot;langword_csharp_x:ConstructorArgs&quot; name=&quot;x:ConstructorArgs&quot; href=&quot;&quot;> </xref> dla tego wystąpienia. Może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla typów, które nie wymagają ani nie używają <xref uid=&quot;langword_csharp_x:ConstructorArgs&quot; name=&quot;x:ConstructorArgs&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Utworzone wystąpienie oparte na inicjowanych konstrukcji <xref href=&quot;System.Xaml.XamlType&quot;> </xref> tego <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  exceptions:
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "Nie można rozpoznać konstruktora."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  id: GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Zwraca odpowiedniego <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> metodę <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> się do kolekcji lub słownika."
  remarks: "Ta metoda powinna zwrócić `null` w przypadkach, gdy <xref:System.Xaml.XamlType>to <xref:System.Xaml.Schema.XamlTypeInvoker>nie jest zapisywalny kolekcji lub słownika.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> W szczególności powinny zwrócić `null` w przypadkach, gdy <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>zwraca `None`.</xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>      > [!IMPORTANT] > Jeśli nie używasz pełni zaufany system typów języka XAML, ta metoda może potencjalnie false raport <xref:System.Reflection.MethodInfo>informacje dotyczące obiektów wywołujących.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);
    parameters:
    - id: contentType
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;></xref>dla typu elementu, który jest używany przez <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> metody."
    return:
      type: System.Reflection.MethodInfo
      description: "CLR <xref:System.Reflection.MethodInfo>informacje dotyczące <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> metody lub wartość null.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  id: GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Zwraca obiekt reprezentujący metodę, która może wyliczyć nad elementami."
  remarks: "Należy zwrócić `null` w przypadkach, gdy <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>zwraca `None`.</xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>      > [!IMPORTANT] > Jeśli nie używasz pełni zaufany system typów języka XAML, ta metoda może potencjalnie false raport <xref:System.Reflection.MethodInfo>informacje dotyczące obiektów wywołujących.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>dla metody modułu wyliczającego lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  id: GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Zwraca <xref:System.Collections.IEnumerator>obiekt reprezentujący zestaw elementów.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public virtual System.Collections.IEnumerator GetItems (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Wystąpienia typu określonego przez <xref href=&quot;System.Xaml.XamlType&quot;> </xref> użyte do konstruowania to <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> object, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wywołania tej metody na <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> opartego na nieznany <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.       **- lub -** wywołania tej metody na <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> gdzie odpowiedniego typu nie jest on kolekcją ani słownikiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  id: SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Pobiera program obsługi do użycia podczas <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> wywołuje zaimplementowanym <xref:System.Windows.Markup.MarkupExtension>.</xref:System.Windows.Markup.MarkupExtension>"
  remarks: "Program obsługi zdarzeń jest oparta na <xref:System.EventHandler%601>ograniczone z <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>danych zdarzenia.</xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> </xref:System.EventHandler%601>       Wartość zwracana wywołuje <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A>zachowanie <xref:System.Xaml.XamlType>który <xref:System.Xaml.Schema.XamlTypeInvoker>opiera się na.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A>       Wartość zwracana jest `null` dla <xref:System.Xaml.Schema.XamlTypeInvoker>opartego na nieznany <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> SetMarkupExtensionHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "Implementację programu obsługi, która obsługuje ten przypadek."
  overload: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  id: SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Pobiera program obsługi do użycia podczas <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> wywołuje zaimplementowana CLR <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>."
  remarks: "Program obsługi zdarzeń jest oparta na <xref:System.EventHandler%601>ograniczone z <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>danych zdarzenia.</xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> </xref:System.EventHandler%601>       Wartość zwracana wywołuje <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A>zachowanie <xref:System.Xaml.XamlType>który <xref:System.Xaml.Schema.XamlTypeInvoker>opiera się na.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A>       Wartość zwracana jest `null` dla <xref:System.Xaml.Schema.XamlTypeInvoker>opartego na nieznany <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> SetTypeConverterHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "Implementację programu obsługi, która obsługuje ten przypadek."
  overload: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Zawiera statyczny wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  remarks: "Udostępnia tę wartość dla <xref:System.Xaml.Schema.XamlTypeInvoker>parametru System.Xaml definicja interfejsu API będzie zazwyczaj powodują wywoływanego kodu zgłaszają wyjątki.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Statyczne wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Xaml.XamlSchemaException
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaException
  nameWithType: XamlSchemaException
  fullName: System.Xaml.XamlSchemaException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker()
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection(Object,Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(Object,Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary(Object,Object,Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(Object,Object,Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(XamlType)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod()
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems(Object)
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection
  nameWithType: XamlTypeInvoker.AddToCollection
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary
  nameWithType: XamlTypeInvoker.AddToDictionary
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance
  nameWithType: XamlTypeInvoker.CreateInstance
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod
  nameWithType: XamlTypeInvoker.GetAddMethod
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems
  nameWithType: XamlTypeInvoker.GetItems
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
