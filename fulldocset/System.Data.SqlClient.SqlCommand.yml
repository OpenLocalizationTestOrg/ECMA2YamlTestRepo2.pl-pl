### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommand
  id: SqlCommand
  children:
  - System.Data.SqlClient.SqlCommand.#ctor
  - System.Data.SqlClient.SqlCommand.#ctor(System.String)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.Cancel
  - System.Data.SqlClient.SqlCommand.Clone
  - System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlCommand.CommandText
  - System.Data.SqlClient.SqlCommand.CommandTimeout
  - System.Data.SqlClient.SqlCommand.CommandType
  - System.Data.SqlClient.SqlCommand.Connection
  - System.Data.SqlClient.SqlCommand.CreateDbParameter
  - System.Data.SqlClient.SqlCommand.CreateParameter
  - System.Data.SqlClient.SqlCommand.DbConnection
  - System.Data.SqlClient.SqlCommand.DbParameterCollection
  - System.Data.SqlClient.SqlCommand.DbTransaction
  - System.Data.SqlClient.SqlCommand.DesignTimeVisible
  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReader
  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteScalar
  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.Notification
  - System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  - System.Data.SqlClient.SqlCommand.Parameters
  - System.Data.SqlClient.SqlCommand.Prepare
  - System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  - System.Data.SqlClient.SqlCommand.StatementCompleted
  - System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  - System.Data.SqlClient.SqlCommand.Transaction
  - System.Data.SqlClient.SqlCommand.UpdatedRowSource
  langs:
  - csharp
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  type: Class
  summary: "Reprezentuje instrukcji języka Transact-SQL lub procedurę składowaną do wykonania na bazie danych programu SQL Server. Ta klasa nie może być dziedziczona."
  remarks: "Podczas tworzenia wystąpienia klasy SqlCommand właściwości odczytu/zapisu są ustawiane na wartości początkowe. Aby uzyskać listę tych wartości Zobacz konstruktora klasy SqlCommand.       SqlCommand funkcji następujące metody wykonywania poleceń w bazie danych programu SQL Server: | Element | Opis elementu |   |----------|-----------------|   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>| Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez ten SqlCommand zazwyczaj wykonywania poleceń, takich jak instrukcje INSERT, DELETE, aktualizacji i zestaw.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Każde wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>muszą łączyć się przy użyciu wywołania <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>, który zakończy działanie, zazwyczaj w oddzielnym wątku. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>| Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez ten SqlCommand i pobiera jeden lub więcej wyników ustawia z serwera.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Każde wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>muszą łączyć się przy użyciu wywołania <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>, który zakończy działanie, zazwyczaj w oddzielnym wątku. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>| Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez ten SqlCommand.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Każde wywołanie `BeginExecuteXmlReader` muszą łączyć się z wywołania `EndExecuteXmlReader`, który zakończy działanie, zazwyczaj w oddzielnym wątku i zwraca obiekt <xref:System.Xml.XmlReader>. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>| Wykonuje polecenia, które zwracają wierszy.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> </xref:System.Xml.XmlReader> Aby zwiększyć wydajność <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>wywołuje polecenia przy użyciu języka Transact-SQL `sp_executesql` systemu procedury składowanej.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> W związku z tym <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>może nie mieć efektu, jeśli używany do wykonania polecenia, takich jak instrukcji języka Transact-SQL, ustaw. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>| Wykonuje polecenia, takich jak instrukcje INSERT języka Transact-SQL, Usuń, aktualizacji i zestawu. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>| Pobiera pojedynczą wartość (na przykład wartości zagregowanej) z bazy danych. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>| Wysyła <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> <xref:System.Data.SqlClient.SqlCommand.Connection%2A>i tworzy obiekt <xref:System.Xml.XmlReader>. |       Można resetować <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>Właściwości i ponowne użycie obiekt SqlCommand.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Jednak należy zamknąć <xref:System.Data.SqlClient.SqlDataReader>przed wykonaniem polecenia nowy lub wcześniejszym.</xref:System.Data.SqlClient.SqlDataReader>       Jeśli <xref:System.Data.SqlClient.SqlException>jest generowany przez metodę wykonywania SqlCommand, <xref:System.Data.SqlClient.SqlConnection>pozostaje otwarty, gdy poziom ważności jest 19 lub mniej.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlException> Jeśli poziom ważności jest 20 lub większą, serwer zwykle zamyka <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> Jednak użytkownik może ponownie otworzyć połączenie i kontynuować.      > [!NOTE] > Nameless, nazywany również porządkowej, parametry nie są obsługiwane przez dostawcę danych .NET Framework dla programu SQL Server."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a SqlCommand, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.  \n  \n [!code-cs[Classic WebData SqlCommand Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._6_1.cs)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._6_1.vb)]  \n  \n The following sample shows how to create and execute different types of SqlCommand objects.  \n  \n First you must create the sample database, by executing the following script:  \n  \n```  \nUSE [master]  \nGO  \n  \nCREATE DATABASE [MySchool]  \nGO  \n  \nUSE [MySchool]  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE procedure [dbo].[CourseExtInfo] @CourseId int  \nas  \nselect c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  \nfrom Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  \nwhere c.CourseID=@CourseId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  \nas  \nselect @CourseCount=Count(c.CourseID)  \nfrom course as c  \nwhere c.DepartmentID=@DepartmentId  \n  \nselect d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  \nfrom Department as d  \nwhere d.DepartmentID=@DepartmentId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCreate PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   \n@Year int,@BudgetSum money output  \nAS  \nBEGIN  \n        SELECT @BudgetSum=SUM([Budget])  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year   \n  \nSELECT [DepartmentID]  \n      ,[Name]  \n      ,[Budget]  \n      ,[StartDate]  \n      ,[Administrator]  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year  \n  \nEND  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,  \n[Year] [smallint] NOT NULL,  \n[Title] [nvarchar](100) NOT NULL,  \n[Credits] [int] NOT NULL,  \n[DepartmentID] [int] NOT NULL,  \n CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   \n(  \n[CourseID] ASC,  \n[Year] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[Name] [nvarchar](50) NOT NULL,  \n[Budget] [money] NOT NULL,  \n[StartDate] [datetime] NOT NULL,  \n[Administrator] [int] NULL,  \n CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   \n(  \n[DepartmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Person](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[LastName] [nvarchar](50) NOT NULL,  \n[FirstName] [nvarchar](50) NOT NULL,  \n[HireDate] [datetime] NULL,  \n[EnrollmentDate] [datetime] NULL,  \n CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   \n(  \n[PersonID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[StudentGrade](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[CourseID] [nvarchar](10) NOT NULL,  \n[StudentID] [int] NOT NULL,  \n[Grade] [decimal](3, 2) NOT NULL,  \n CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   \n(  \n[EnrollmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate view [dbo].[EnglishCourse]  \nas  \nselect c.CourseID,c.Title,c.Credits,c.DepartmentID  \nfrom Course as c join Department as d on c.DepartmentID=d.DepartmentID  \nwhere d.Name=N'English'  \n  \nGO  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  \nSET IDENTITY_INSERT [dbo].[Department] ON   \n  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  \nSET IDENTITY_INSERT [dbo].[Department] OFF  \nSET IDENTITY_INSERT [dbo].[Person] ON   \n  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  \nSET IDENTITY_INSERT [dbo].[Person] OFF  \nSET IDENTITY_INSERT [dbo].[StudentGrade] ON   \n  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  \nSET IDENTITY_INSERT [dbo].[StudentGrade] OFF  \nALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  \nREFERENCES [dbo].[Department] ([DepartmentID])  \nGO  \nALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  \nGO  \nALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  \nREFERENCES [dbo].[Person] ([PersonID])  \nGO  \nALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  \nGO  \n```  \n  \n Next, compile and execute the following:  \n  \n```  \nusing System;  \nusing System.Data;  \nusing System.Data.SqlClient;  \nusing System.Threading.Tasks;  \n  \nclass Program {  \n  \n   static class SqlHelper {  \n      // Set the connection, command, and then execute the command with non query.  \n      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   \n               // type is only for OLE DB.    \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteNonQuery();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command and only return one value.  \n      public static Object ExecuteScalar(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteScalar();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command with query and return the reader.  \n      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         SqlConnection conn = new SqlConnection(connectionString);  \n  \n         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n            cmd.CommandType = commandType;  \n            cmd.Parameters.AddRange(parameters);  \n  \n            conn.Open();  \n            // When using CommandBehavior.CloseConnection, the connection will be closed when the   \n            // IDataReader is closed.  \n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  \n  \n            return reader;  \n         }  \n      }  \n   }  \n  \n   static void Main(string[] args) {  \n      String connectionString = \"Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;\";  \n  \n      CountCourses(connectionString, 2012);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Following result is the departments that started from 2007:\");  \n      GetDepartments(connectionString, 2007);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Add the credits when the credits of course is lower than 4.\");  \n      AddCredits(connectionString, 4);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Please press any key to exit...\");  \n      Console.ReadKey();  \n   }  \n  \n   static void CountCourses(String connectionString, Int32 year) {  \n      String commandText = \"Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year\";  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  \n      Int32 count;  \n      if (Int32.TryParse(oValue.ToString(), out count))  \n         Console.WriteLine(\"There {0} {1} course{2} in {3}.\", count > 1 ? \"are\" : \"is\", count, count > 1 ? \"s\" : null, year);  \n   }  \n  \n   // Display the Departments that start from the specified year.  \n   static void GetDepartments(String connectionString, Int32 year) {  \n      String commandText = \"dbo.GetDepartmentsOfSpecifiedYear\";  \n  \n      // Specify the year of StartDate  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      // When the direction of parameter is set as Output, you can get the value after   \n      // executing the command.  \n      SqlParameter parameterBudget = new SqlParameter(\"@BudgetSum\", SqlDbType.Money);  \n      parameterBudget.Direction = ParameterDirection.Output;  \n  \n      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  \n          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  \n         Console.WriteLine(\"{0,-20}{1,-20}{2,-20}{3,-20}\", \"Name\", \"Budget\", \"StartDate\",  \n             \"Administrator\");  \n         while (reader.Read()) {  \n            Console.WriteLine(\"{0,-20}{1,-20:C}{2,-20:d}{3,-20}\", reader[\"Name\"],  \n                reader[\"Budget\"], reader[\"StartDate\"], reader[\"Administrator\"]);  \n         }  \n      }  \n      Console.WriteLine(\"{0,-20}{1,-20:C}\", \"Sum:\", parameterBudget.Value);  \n   }  \n  \n   // If credits of course is lower than the certain value, the method will add the credits.  \n   static void AddCredits(String connectionString, Int32 creditsLow) {  \n      String commandText = \"Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits\";  \n  \n      SqlParameter parameterCredits = new SqlParameter(\"@Credits\", creditsLow);  \n  \n      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  \n  \n      Console.WriteLine(\"{0} row{1} {2} updated.\", rows, rows > 1 ? \"s\" : null, rows > 1 ? \"are\" : \"is\");  \n   }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasy."
  remarks: "Podstawowy Konstruktor inicjuje wszystkie pola z wartościami domyślnymi. W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| pusty ciąg (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Wartość null |       Można zmienić wartości dla żadnego z tych właściwości, za pomocą oddzielnego wywołania do właściwości.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._39_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._39_1.cs)]"
  syntax:
    content: public SqlCommand ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasy z tekstu zapytania."
  remarks: "Gdy wystąpienie klasy <xref:System.Data.SqlClient.SqlCommand>utworzono następujące właściwości są ustawione na wartości początkowe odczytu/zapisu.</xref:System.Data.SqlClient.SqlCommand>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| null |       Można zmienić wartości dla żadnego z tych właściwości, za pomocą oddzielnego wywołania do właściwości.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.  \n  \n [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._21_1.vb)]\n [!code-cs[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._21_1.cs)]"
  syntax:
    content: public SqlCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "Tekst zapytania."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasy tekst zapytania i <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Nowe <xref:System.Data.SqlClient.SqlConnection>to wartość `connection` parametru. |       Wartość dla każdego z tych parametrów można zmienić przez ustawienie właściwości pokrewnych.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/csharp/c858d494-4959-470c-91ba-_1.cs)]\n [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/visualbasic/c858d494-4959-470c-91ba-_1.vb)]"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "Tekst zapytania."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> reprezentujący połączenie z wystąpieniem programu SQL Server."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasy tekst zapytania, <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>i <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref>."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Nowe <xref:System.Data.SqlClient.SqlConnection>to wartość `connection` parametru. |       Wartość dla każdego z tych parametrów można zmienić przez ustawienie właściwości pokrewnych.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "Tekst zapytania."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> reprezentujący połączenie z wystąpieniem programu SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "<xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> w którym <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> wykonuje."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasy z tekstu określonego polecenia, połączenie transakcji i ustawienie szyfrowania."
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);
    parameters:
    - id: cmdText
      type: System.String
      description: "Tekst zapytania."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> reprezentujący połączenie z wystąpieniem programu SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "<xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> w którym <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> wykonuje."
    - id: columnEncryptionSetting
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "Ustawienie szyfrowania. Aby uzyskać więcej informacji, zobacz [zawsze zaszyfrowane](https://msdn.microsoft.com/library/mt163865.aspx)."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  id: BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Metoda BeginExecuteNonQuery uruchamia proces wykonywania asynchronicznie [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrukcji lub procedury składowanej, która nie zwraca wiersze, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji. Po ukończeniu instrukcji należy wywołać deweloperzy <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metodę, aby zakończyć operację.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Metoda BeginExecuteNonQuery natychmiast zwraca (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> nie ma wpływu na BeginExecuteNonQuery), ale dopóki kod wykonuje odpowiednie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>Wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>przed wykonanie polecenia jest wypełniony przyczyny <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów są wysyłane, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne.       Ponieważ to przeciążenie nie obsługuje procedura wywołania zwrotnego, deweloperzy musi albo sondowania w celu ustalenia, czy polecenie zostało wykonane, przy użyciu <xref:System.IAsyncResult.IsCompleted%2A>Właściwość <xref:System.IAsyncResult>zwracany przez metodę BeginExecuteNonQuery; lub poczekaj na zakończenie jednego lub więcej poleceń za pomocą <xref:System.IAsyncResult.AsyncWaitHandle%2A>Właściwości zwrócony <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>"
  example:
  - "The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously. In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text. Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._34_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.sqlclient._34_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania lub zaczekaj na wyniki lub obu; ta wartość jest także potrzebne podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, która zwraca liczbę wierszy odpowiednich.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  id: BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, procedury i stan informacje wywołania zwrotnego."
  remarks: "<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która nie zwraca wiersze, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Po ukończeniu instrukcji należy wywołać deweloperzy <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metodę, aby zakończyć operację.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>Metoda zwraca natychmiast (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> nie ma wpływu na BeginExecuteNonQuery), ale dopóki kod wykonuje odpowiednie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>Wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>przed wykonanie polecenia jest wypełniony przyczyny <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       `callback` Parametr umożliwia określenie <xref:System.AsyncCallback>delegata, który jest wywoływany, gdy instrukcja została ukończona.</xref:System.AsyncCallback> Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metody w ramach tej procedury delegata lub z innej lokalizacji w aplikacji.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Ponadto można przekazać dowolnego obiektu w `asyncStateObject` parametr, a procedura wywołania zwrotnego mogą pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A>Właściwości.</xref:System.IAsyncResult.AsyncState%2A>       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów są wysyłane, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne.       Ponieważ procedura wywołania zwrotnego jest wykonywana z w wątku w tle dostarczonych przez program Microsoft .NET środowiska CLR, jest bardzo ważne, wykonać rygorystyczne podejście w celu obsługi interakcji między wątkami od w aplikacji. Na przykład możesz musi współdziała z zawartość formularza z wewnątrz procedura wywołania zwrotnego; powinien mieć zaktualizować formularz, musisz przełączyć się do formularza wątku w celu pracy. W przykładzie w tym temacie pokazano to zachowanie.       Wszystkie błędy podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zapoznaj się z przykładem, w tym temacie, aby uzyskać więcej informacji dotyczących obsługi wyjątków w procedurze wywołania zwrotnego."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteNonQuery method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który jest wywoływany po zakończeniu wykonywania polecenia.</xref:System.AsyncCallback> Przekaż <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> programu Microsoft Visual Basic) wskazująca, że nie wywołanie zwrotne nie jest wymagane."
    - id: stateObject
      type: System.Object
      description: "Obiekt stanu użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobieranie tego obiektu wynikające ze w przy użyciu procedury wywołania zwrotnego <xref:System.IAsyncResult.AsyncState*>Właściwości.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania lub zaczekaj na wyniki lub obu; ta wartość jest także potrzebne podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, która zwraca liczbę wierszy odpowiednich.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  id: BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>i pobiera jeden lub więcej zestawów wyników z serwera."
  remarks: "Metoda BeginExecuteReader uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która zwraca wiersze, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji. Po ukończeniu instrukcji należy wywołać deweloperzy <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader>zwracanym przez polecenie.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Metoda BeginExecuteReader zwraca natychmiast, ale dopóki kod wykonuje odpowiednie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>Wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>przed wykonanie polecenia jest wypełniony przyczyny <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów są wysyłane, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne. Wykonanie polecenia jest asynchroniczne, pobieranie wartości jest nadal synchronicznego. Oznacza to, że wywołań <xref:System.Data.SqlClient.SqlDataReader.Read%2A>może zablokować, jeśli wymagane jest więcej danych i odnośnej sieci w blokach operacji odczytu.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Ponieważ to przeciążenie nie obsługuje procedura wywołania zwrotnego, deweloperzy musi albo sondowania w celu ustalenia, czy polecenie zostało wykonane, przy użyciu <xref:System.IAsyncResult.IsCompleted%2A>Właściwość <xref:System.IAsyncResult>zwracany przez metodę BeginExecuteReader; lub poczekaj na zakończenie jednego lub więcej poleceń za pomocą <xref:System.IAsyncResult.AsyncWaitHandle%2A>Właściwości zwrócony <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub BeginExecuteReader do dostępu do danych XML, SQL Server będzie zwracać wszystkie wyniki XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._4_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania lub zaczekaj na wyniki lub obu; ta wartość jest także potrzebne podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, która zwraca <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> wystąpienia, który może służyć do pobierania zwrócone wiersze.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  id: BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> przy użyciu jednej z <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości."
  remarks: "<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która zwraca wiersze, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Po ukończeniu instrukcji należy wywołać deweloperzy <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader>zwracanym przez polecenie.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>Metoda zwraca natychmiast, ale dopóki kod wykonuje odpowiednie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>Wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>przed wykonanie polecenia jest wypełniony przyczyny <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       `behavior` Parametr pozwala Określ opcje kontrolujące zachowanie polecenia i jego połączenia. Wartości te można łączyć ze sobą (przy użyciu języka programowania `OR` operatora); ogólnie rzecz biorąc, deweloperzy za pomocą `CommandBehavior.CloseConnection` wartość, aby upewnić się, że połączenie jest zamknięte przez środowisko uruchomieniowe przy <xref:System.Data.SqlClient.SqlDataReader>jest zamknięty.</xref:System.Data.SqlClient.SqlDataReader>       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów są wysyłane, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne. Wykonanie polecenia jest asynchroniczne, pobieranie wartości jest nadal synchronicznego. Oznacza to, że wywołań <xref:System.Data.SqlClient.SqlDataReader.Read%2A>może zablokować, jeśli wymagane jest więcej danych i odnośnej sieci w blokach operacji odczytu.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Ponieważ tego przeciążenia nie obsługuje procedura wywołania zwrotnego, deweloperzy musi albo sondowania w celu określenia, czy polecenie zostało wykonane, za pomocą <xref:System.IAsyncResult.IsCompleted%2A>właściwości <xref:System.IAsyncResult>zwrócony przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metodę; lub poczekaj na zakończenie jednego lub więcej poleceń za pomocą <xref:System.IAsyncResult.AsyncWaitHandle%2A>Właściwości zwrócony <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, program SQL Server zwraca wszystkie wyniki XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/visualbasic/d7d83823-a2e6-4b2d-a7a2-_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/csharp/d7d83823-a2e6-4b2d-a7a2-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Jeden z <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości, wskazując opcje pobierania instrukcji wykonywania i danych."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania, poczekaj, aż wyników i/lub; ta wartość jest także potrzebne podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, która zwraca <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> wystąpienia, który może służyć do pobierania zwrócone wiersze.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  id: BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> i pobiera jeden lub więcej zestawów wyników z serwera, procedury i stan informacje wywołania zwrotnego."
  remarks: "<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która zwraca wiersze, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Po ukończeniu instrukcji należy wywołać deweloperzy <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader>zwracanym przez polecenie.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>Metoda zwraca natychmiast, ale dopóki kod wykonuje odpowiednie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>Wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>przed zakończeniem wykonywania polecenia Przyczyna <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       `callback` Parametr umożliwia określenie <xref:System.AsyncCallback>delegata, który jest wywoływany, gdy instrukcja została ukończona.</xref:System.AsyncCallback> Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metody w ramach tej procedury delegata lub z innej lokalizacji w aplikacji.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Ponadto można przekazać dowolnego obiektu w `stateObject` parametr, a procedura wywołania zwrotnego mogą pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A>Właściwości.</xref:System.IAsyncResult.AsyncState%2A>       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów są wysyłane, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne. Wykonanie polecenia jest asynchroniczne, pobieranie wartości jest nadal synchronicznego. Oznacza to, że wywołań <xref:System.Data.SqlClient.SqlDataReader.Read%2A>może zablokować, jeśli wymagane jest więcej danych i odnośnej sieci w blokach operacji odczytu.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Ponieważ procedura wywołania zwrotnego jest wykonywana z w wątku w tle dostarczanych przez środowisko uruchomieniowe platformy Microsoft .NET, jest bardzo ważne, wykonać rygorystycznych podejście w celu obsługi interakcji między wątkami od w aplikacji. Na przykład możesz musi współdziała z zawartość formularza z wewnątrz procedura wywołania zwrotnego; powinien mieć zaktualizować formularz, musisz przełączyć się do formularza wątku w celu pracy. W przykładzie w tym temacie pokazano to zachowanie.       Wszystkie błędy podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zapoznaj się z przykładem, w tym temacie, aby uzyskać więcej informacji dotyczących obsługi wyjątków w procedurze wywołania zwrotnego.       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, program SQL Server zwraca wszystkie wyniki XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to BeginExecuteReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który jest wywoływany po zakończeniu wykonywania polecenia.</xref:System.AsyncCallback> Przekaż <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> programu Microsoft Visual Basic) wskazująca, że nie wywołanie zwrotne nie jest wymagane."
    - id: stateObject
      type: System.Object
      description: "Obiekt stanu użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobieranie tego obiektu wynikające ze w przy użyciu procedury wywołania zwrotnego <xref:System.IAsyncResult.AsyncState*>Właściwości.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania, poczekaj, aż wyników i/lub; ta wartość jest także potrzebne podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, która zwraca <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> wystąpienia, która może służyć do pobierania zwrócone wiersze.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  id: BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, przy użyciu jednej z <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref> wartości i pobierania co najmniej jeden powoduje zestawów z serwera, procedury i stan informacje wywołania zwrotnego."
  remarks: "<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która zwraca wiersze, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Po ukończeniu instrukcji należy wywołać deweloperzy <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader>zwracanym przez polecenie.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>Metoda zwraca natychmiast, ale dopóki kod wykonuje odpowiednie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>Wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>przed wykonanie polecenia jest wypełniony przyczyny <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       `callback` Parametr umożliwia określenie <xref:System.AsyncCallback>delegata, który jest wywoływany, gdy instrukcja została ukończona.</xref:System.AsyncCallback> Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metody w ramach tej procedury delegata lub z innej lokalizacji w aplikacji.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Ponadto można przekazać dowolnego obiektu w `stateObject` parametr, a procedura wywołania zwrotnego mogą pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A>Właściwości.</xref:System.IAsyncResult.AsyncState%2A>       `behavior` Parametr pozwala Określ opcje kontrolujące zachowanie polecenia i jego połączenia. Wartości te można łączyć ze sobą (przy użyciu języka programowania `Or` operatora); ogólnie rzecz biorąc, deweloperzy za pomocą `CloseConnection` wartość, aby upewnić się, że połączenie jest zamknięte przez środowisko uruchomieniowe przy <xref:System.Data.SqlClient.SqlDataReader>jest zamknięty.</xref:System.Data.SqlClient.SqlDataReader> Deweloperzy można także zoptymalizować zachowanie <xref:System.Data.SqlClient.SqlDataReader>określając `SingleRow` wartość, gdy jest ona znana wcześniej instrukcji języka Transact-SQL lub procedury składowanej tylko zwraca jeden wiersz.</xref:System.Data.SqlClient.SqlDataReader>       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów są wysyłane, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne. Wykonanie polecenia jest asynchroniczne, pobieranie wartości jest nadal synchronicznego. Oznacza to, że wywołań <xref:System.Data.SqlClient.SqlDataReader.Read%2A>może zablokować, jeśli wymagane jest więcej danych i odnośnej sieci w blokach operacji odczytu.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Ponieważ procedura wywołania zwrotnego jest wykonywana z w wątku w tle dostarczonych przez program Microsoft .NET środowiska CLR, jest bardzo ważne, wykonać rygorystyczne podejście w celu obsługi interakcji między wątkami od w aplikacji. Na przykład użytkownik nie może mieć interakcji na podstawie zawartości formularza w ramach procedury wywołania zwrotnego — powinien mieć do aktualizacji formularzy, musisz przełączyć się do formularza wątku w celu pracy. W przykładzie w tym temacie pokazano to zachowanie.       Wszystkie błędy podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zapoznaj się z przykładem, w tym temacie, aby uzyskać więcej informacji dotyczących obsługi wyjątków w procedurze wywołania zwrotnego.       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który jest wywoływany po zakończeniu wykonywania polecenia.</xref:System.AsyncCallback> Przekaż <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> programu Microsoft Visual Basic) wskazująca, że nie wywołanie zwrotne nie jest wymagane."
    - id: stateObject
      type: System.Object
      description: "Obiekt stanu użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobieranie tego obiektu wynikające ze w przy użyciu procedury wywołania zwrotnego <xref:System.IAsyncResult.AsyncState*>Właściwości.</xref:System.IAsyncResult.AsyncState*>"
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Jeden z <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości, wskazując opcje pobierania instrukcji wykonywania i danych."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania lub zaczekaj na wyniki lub obu; ta wartość jest także potrzebne podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, która zwraca <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> wystąpienia, która może służyć do pobierania zwrócone wiersze.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  id: BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> i zwraca wyniki w postaci <xref:System.Xml.XmlReader>obiektu.</xref:System.Xml.XmlReader>"
  remarks: "Metoda BeginExecuteXmlReader uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL, która zwraca wiersze w formacie XML, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji. Po ukończeniu instrukcji należy wywołać deweloperzy `EndExecuteXmlReader` metodę, aby zakończyć operację i pobrać kod XML zwrócony przez polecenie. Metoda BeginExecuteXmlReader zwraca natychmiast, ale dopóki kod wykonywany odpowiadającego `EndExecuteXmlReader` wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> Wywoływanie `EndExecuteXmlReader` przed wykonanie polecenia jest wypełniony przyczyny <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand>       <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>Właściwości zwykle określa instrukcji języka Transact-SQL z prawidłową klauzuli FOR XML.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Jednak `CommandText` można również określić instrukcję, która zwraca `ntext` danych, który zawiera prawidłowy kod XML.       Typowe <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>Zapytanie może być sformatowany jak w poniższym przykładzie C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` tej metody można również pobrać zestawu wyników pojedynczy wiersz, pojedynczej kolumny.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> W tym przypadku jeśli więcej niż jeden wiersz jest zwracany, `EndExecuteXmlReader` dołącza metody <xref:System.Xml.XmlReader>wartości w pierwszym wierszu i odrzucenia ustawić reszty wynik.</xref:System.Xml.XmlReader>       Wiele funkcji zestawu (MARS) aktywnych wyników umożliwia wielu akcji, użyj tego samego połączenia.       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów są wysyłane, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne. Wykonanie polecenia jest asynchroniczne, pobieranie wartości jest nadal synchronicznego.       Ponieważ to przeciążenie nie obsługuje procedura wywołania zwrotnego, deweloperzy muszą albo sondowania w celu określenia, czy polecenie zostało wykonane, przy użyciu <xref:System.IAsyncResult.IsCompleted%2A>Właściwość <xref:System.IAsyncResult>zwracany przez metodę BeginExecuteXmlReader; lub poczekaj na zakończenie jednego lub więcej poleceń za pomocą <xref:System.IAsyncResult.AsyncWaitHandle%2A>Właściwości zwrócony <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, program SQL Server zwraca wszystkie wyniki XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving XML data asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the XML and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._41_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania lub zaczekaj na wyniki lub obu; ta wartość jest także potrzebne podczas wywoływania <xref uid=&quot;langword_csharp_EndExecuteXmlReader&quot; name=&quot;EndExecuteXmlReader&quot; href=&quot;&quot;> </xref>, która zwraca pojedynczą wartość XML.</xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  id: BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje asynchroniczne wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która jest opisane przez to <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> i zwraca wyniki w postaci <xref:System.Xml.XmlReader>obiekt, za pomocą procedury wywołania zwrotnego.</xref:System.Xml.XmlReader>"
  remarks: "<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury przechowywanej, która zwraca wiersze w formacie XML, dzięki czemu inne zadania można uruchomić jednocześnie, gdy wykonanie instrukcji.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Po ukończeniu instrukcji należy wywołać deweloperzy <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metodę, aby zakończyć operację i pobierania żądanych danych XML.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>Metoda zwraca natychmiast, ale dopóki kod wykonuje odpowiednie <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>Wywołanie metody go nie wykonać inne wywołania, które rozpocząć wykonywania synchronicznego lub asynchronicznego w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand>obiektu.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>przed wykonanie polecenia jest wypełniony przyczyny <xref:System.Data.SqlClient.SqlCommand>obiekt, aby zablokować dopiero po zakończeniu wykonywania.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>Właściwości zwykle określa instrukcji języka Transact-SQL z prawidłową klauzuli FOR XML.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Jednak `CommandText` można również określić instrukcję, która zwraca dane, które zawiera prawidłowy kod XML. Tej metody można również pobrać zestawu wyników pojedynczy wiersz, pojedynczej kolumny. W tym przypadku jeśli więcej niż jeden wiersz jest zwracany, <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>dołącza metody <xref:System.Xml.XmlReader>wartości w pierwszym wierszu i odrzucenia ustawić reszty wynik.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       Typowe zapytania BeginExecuteXmlReader może być sformatowany jak w poniższym przykładzie C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` tej metody można również pobrać zestawu wyników pojedynczy wiersz, pojedynczej kolumny. W tym przypadku jeśli więcej niż jeden wiersz jest zwracany, <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>dołącza metody <xref:System.Xml.XmlReader>wartości w pierwszym wierszu i odrzucenia ustawić reszty wynik.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       Wiele funkcji zestawu (MARS) aktywnych wyników umożliwia wielu akcji, użyj tego samego połączenia.       `callback` Parametr umożliwia określenie <xref:System.AsyncCallback>delegata, który jest wywoływany, gdy instrukcja została ukończona.</xref:System.AsyncCallback> Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metody w ramach tej procedury delegata lub z innej lokalizacji w aplikacji.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> Ponadto można przekazać dowolnego obiektu w `stateObject` parametr, a procedura wywołania zwrotnego mogą pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A>Właściwości.</xref:System.IAsyncResult.AsyncState%2A>       Należy pamiętać, że tekst polecenia, a parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wielu parametrów, ta metoda może zablokować podczas operacji zapisu. Po wysłaniu polecenia, metoda zwraca się natychmiast bez oczekiwania na odpowiedź z serwera — to znaczy odczyty są asynchroniczne.       Wszystkie błędy podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zapoznaj się z przykładem, w tym temacie, aby uzyskać więcej informacji dotyczących obsługi wyjątków w procedurze wywołania zwrotnego.       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteXmlReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to BeginExecuteXmlReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który jest wywoływany po zakończeniu wykonywania polecenia.</xref:System.AsyncCallback> Przekaż <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> programu Microsoft Visual Basic) wskazująca, że nie wywołanie zwrotne nie jest wymagane."
    - id: stateObject
      type: System.Object
      description: "Obiekt stanu użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobieranie tego obiektu wynikające ze w przy użyciu procedury wywołania zwrotnego <xref:System.IAsyncResult.AsyncState*>Właściwości.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który może służyć do sondowania, poczekaj, aż wyników i/lub; ta wartość jest również wymagane, gdy <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*>jest wywoływana, które zwraca wyniki polecenia w formacie XML.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd, który wystąpił podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Pary nazwa/wartość &quot;przetwarzania asynchronicznego = true&quot; nie został dołączony w ramach definicji połączenia dla tego ciągu połączenia <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Cancel
  id: Cancel
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Próbuje anulować wykonywanie <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Jeśli nie ma nic do anulowania, nic się nie dzieje. Jednak jeśli jest poleceniem w procesie, a próba anulowania nie powiedzie się, zostanie wygenerowany żaden wyjątek.       Niektóre, czasami, jeśli wywołujesz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>wywoływać <xref:System.Data.SqlClient.SqlDataReader.Close%2A>(implicitily lub jawnie) przed wywołaniem Anuluj, a następnie wywołania Anuluj, polecenie cancel nie zostaną wysłane do programu SQL Server i zestawu wyników mogą w dalszym ciągu strumienia po wywołaniu metody <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A> </xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby tego uniknąć, upewnij się, że wywołujesz Anuluj przed zamknięciem czytnik lub połączenia."
  example:
  - "The following example demonstrates the use of the Cancel method.  \n  \n [!code-vb[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._13_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.sqlclient._13_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Clone
  id: Clone
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu, który jest kopią bieżącego wystąpienia."
  syntax:
    content: public System.Data.SqlClient.SqlCommand Clone ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Nowy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu, który jest kopią tego wystąpienia."
  overload: System.Data.SqlClient.SqlCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia ustawienie szyfrowania kolumny dla tego polecenia."
  syntax:
    content: public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }
    return:
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "Ustawienie szyfrowania kolumny dla tego polecenia."
  overload: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandText
  id: CommandText
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia instrukcji języka Transact-SQL, nazwy tabeli lub procedura składowana do wykonania w źródle danych."
  remarks: "Gdy <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>właściwość jest ustawiona na `StoredProcedure`, Właściwość CommandText należy ustawić nazwę procedury składowanej.</xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Użytkownik może być wymagany do użycia składni znaku ucieczki, jeśli nazwa procedury składowanej zawiera wszelkie znaki specjalne. Polecenie wykonuje tę procedurę składowaną, wywołując jedną z `Execute` metody.       Microsoft .NET Framework Data Provider dla programu SQL Server nie obsługuje przekazywania parametrów do instrukcji języka Transact-SQL lub procedura składowana wywoływana za pomocą polecenia programu symbolu zastępczego znak zapytania (?) `CommandType.Text`. W takim przypadku należy użyć parametrów nazwanych. Na przykład: ```   SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID   ``` uzyskać więcej informacji, zobacz [konfigurowania parametrów i typ danych parametru](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._56_1.vb)]\n [!code-cs[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._56_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "Instrukcji języka Transact-SQL lub procedury składowanej do wykonania. Wartość domyślna to ciąg pusty."
  overload: System.Data.SqlClient.SqlCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia czas oczekiwania przed zakończeniem próby wykonania polecenia i wygenerowaniem błędu."
  remarks: "Wartość 0 oznacza brak limitu (próba wykonania polecenia będzie czekać w nieskończoność).      > [!NOTE] > CommandTimeout właściwość będzie ignorowana podczas wywołań metod asynchronicznych, takich jak <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>       CommandTimeout nie obowiązuje, jeśli polecenie zostanie wykonane przed połączeniem kontekstu ( <xref:System.Data.SqlClient.SqlConnection>otworzyć za pomocą &quot;połączenia kontekstu = true&quot; w parametrach połączenia).</xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Ta właściwość jest zbiorcza limitu czasu (dla wszystkich sieci pakiety odczytanego podczas wywoływania metody) dla wszystkich sieci odczyty podczas wykonywania polecenia lub przetwarzania wyników. Limit czasu można nadal występują po pierwszego wiersza jest zwracany, a nie obejmuje czas przetwarzania użytkownika, tylko sieć czas odczytu.   >> Na przykład z czasem 30 sekund wychodzących, jeśli <xref:System.Data.SqlClient.SqlDataReader.Read%2A>wymaga dwóch pakietach sieciowych, a następnie do odczytu, zarówno pakietach sieciowych ma 30 sekund.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Jeśli należy wywołać <xref:System.Data.SqlClient.SqlDataReader.Read%2A>ponownie, będzie miał innego 30 sekund do żadnych danych, który jest wymagany do odczytu.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>      ```   using System;   using System.Data.SqlClient;   ///    public class A {      ///       public static void Main() {         string connectionString = &quot;&quot;;         // Wait for 5 second delay in the command         string queryString = &quot;waitfor delay &quot;00:00:05&quot;&quot;;         using (SqlConnection connection = new SqlConnection(connectionString)) {            connection.Open();            SqlCommand command = new SqlCommand(queryString, connection);            // Setting command timeout to 1 second            command.CommandTimeout = 1;            try {               command.ExecuteNonQuery();            }            catch (SqlException e) {               Console.WriteLine(&quot;Got expected SqlException due to command timeout &quot;);               Console.WriteLine(e);            }         }      }   }   ```"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "Czas w sekundach oczekiwania na wykonanie polecenia. Wartość domyślna to 30 sekund."
  overload: System.Data.SqlClient.SqlCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandType
  id: CommandType
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość wskazującą sposób <xref:System.Data.SqlClient.SqlCommand.CommandText*>właściwości mają być interpretowane.</xref:System.Data.SqlClient.SqlCommand.CommandText*>"
  remarks: "Jeśli zostanie ustawiona właściwość CommandType `StoredProcedure`, należy ustawić <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>właściwość na nazwę procedury składowanej.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Polecenie wykonuje tę procedurę składowaną podczas wywoływania jednej z metod wykonania.       Dostawcy danych programu Microsoft .NET Framework dla programu SQL Server nie obsługuje symbolu zastępczego znak zapytania (?) przekazywania parametrów do instrukcji SQL lub procedurę składowaną wywołana z CommandType <xref:System.Data.CommandType>.</xref:System.Data.CommandType> W takim przypadku należy użyć parametrów nazwanych. Na przykład: Wybierz * z klientów CustomerID WHERE = @CustomerID uzyskać więcej informacji, zobacz [konfigurowania parametrów i typ danych parametru](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._8_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._8_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Jeden z <xref href=&quot;System.Data.CommandType&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość nie jest prawidłowym <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> używane przez to wystąpienie <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Jeśli polecenie jest zarejestrowany w istniejącej transakcji, a połączenie zostanie zmieniona, próby wykonania polecenia zgłosi <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       Jeśli <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>właściwość nie jest pusty i transakcja została już zatwierdzona lub wycofana, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>jest ustawiony na wartość null.</xref:System.Data.SqlClient.SqlCommand.Transaction%2A> </xref:System.Data.SqlClient.SqlCommand.Transaction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._22_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._22_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlConnection Connection { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "Połączenie ze źródłem danych. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Właściwość połączenia został zmieniony, gdy polecenie została zarejestrowana w transakcji."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> obiektu."
  remarks: "Metoda tworzenie jest silnie typizowaną wersję <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.SqlClient.SqlParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameter
      description: "A <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość wskazującą, czy obiekt polecenia powinny być widoczne w formancie projektanta formularzy systemu Windows."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "Wartość wskazująca, czy obiekt polecenia powinny być widoczne w formancie. Wartość domyślna to **true**."
  overload: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  id: EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kończy działanie asynchroniczne instrukcji języka Transact-SQL."
  remarks: "Podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>wykonać [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrukcji, należy wywołać EndExecuteNonQuery w celu ukończenia tej operacji.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Jeśli proces wykonywania polecenia nie została jeszcze ukończona, ten uniemożliwia metody aż do zakończenia operacji. Użytkowników można sprawdzić, że polecenie zostało wykonane jego operacji za pomocą <xref:System.IAsyncResult>zwrócone przez wystąpienie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metody.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> Jeśli procedura wywołania zwrotnego został określony w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, ta metoda musi zostać wywołana.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteNonQuery method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.
  syntax:
    content: public int EndExecuteNonQuery (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Zwrócony przez wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Liczba zmodyfikowanych wierszy (jak <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>).</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>parametr ma wartość null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> programu Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteNonQuery została wywołana więcej niż raz do wykonywania pojedynczych poleceń lub metoda był niezgodny przed jej wykonanie metody (na przykład kod wywołuje EndExecuteNonQuery do ukończenia wykonywania wywołań do <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Czas określony w <> </> *> upłynął i operacja asynchroniczna określona z <> </> *> nie została ukończona.       W niektórych sytuacjach <xref:System.IAsyncResult>może być ustawiony na <xref uid=&quot;langword_csharp_IsCompleted&quot; name=&quot;IsCompleted&quot; href=&quot;&quot;> </xref> niepoprawnie.</xref:System.IAsyncResult> Dzieje się tak, jest nazywany EndExecuteNonQuery EndExecuteNonQuery mogą budzić błąd SqlException, jeśli czas określony w <> </> *> upłynął i operacja asynchroniczna określona z <> </> *> nie została ukończona. Aby naprawić tę sytuację, należy zwiększyć wartość CommandTimeout lub Zmniejsz ilość pracy wykonywana przez operację asynchroniczną."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  id: EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kończy działanie asynchroniczne instrukcji języka Transact-SQL, zwracając żądany <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>do wykonania instrukcji języka Transact-SQL, w celu ukończenia operacji należy wywołać EndExecuteReader.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Jeśli proces wykonywania polecenia nie została jeszcze ukończona, ten uniemożliwia metody aż do zakończenia operacji. Użytkowników można sprawdzić, że polecenie zostało wykonane jego operacji za pomocą <xref:System.IAsyncResult>zwrócone przez wystąpienie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metody.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.IAsyncResult> Jeśli procedura wywołania zwrotnego został określony w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, ta metoda musi zostać wywołana.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.
  syntax:
    content: public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Zwrócony przez wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> obiektu, który może służyć do pobierania żądanych wierszy."
  overload: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>parametr ma wartość null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> programu Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteReader została wywołana więcej niż raz do wykonywania pojedynczych poleceń lub metoda był niezgodny przed jej wykonanie metody (na przykład kod wywołuje EndExecuteReader do ukończenia wykonywania wywołań do <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  id: EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kończy działanie asynchroniczne instrukcji języka Transact-SQL, zwracając żądane dane w formacie XML."
  remarks: "Podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>do wykonania instrukcji języka Transact-SQL, w celu ukończenia operacji należy wywołać EndExecuteXmlReader.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Jeśli proces wykonywania polecenia nie została jeszcze ukończona, ten uniemożliwia metody aż do zakończenia operacji. Użytkowników można sprawdzić, czy polecenie zostało zakończone jego operacji za pomocą <xref:System.IAsyncResult>zwrócone przez wystąpienie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>metody.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.IAsyncResult> Jeśli procedura wywołania zwrotnego został określony w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, ta metoda musi zostać wywołana.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteXmlReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.
  syntax:
    content: public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Zwrócony przez wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Obiektu, który może służyć do pobierania danych XML.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>parametr ma wartość null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> programu Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteXmlReader została wywołana więcej niż raz do wykonywania pojedynczych poleceń lub metoda był niezgodny przed jej wykonanie metody (na przykład kod wywołuje EndExecuteXmlReader do ukończenia wykonywania wywołań do <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Do dodania."
    return:
      type: System.Data.Common.DbDataReader
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Do dodania."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Do dodania."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wykonuje instrukcję języka Transact-SQL w odniesieniu do połączenia i zwraca liczbę uwzględnionych wierszy."
  remarks: "Można użyć elementu ExecuteNonQuery w celu wykonania operacji katalogu (na przykład podczas badania struktury bazy danych lub tworzenie obiektów bazy danych, takich jak tabele) lub aby zmienić dane w bazie danych bez korzystania z <xref:System.Data.DataSet>, wykonując instrukcje AKTUALIZOWANIA, WSTAWIANIA lub usuwania.</xref:System.Data.DataSet>       Mimo że ExecuteNonQuery nie zwraca żadnych wierszy, parametrów wyjściowych ani wartości zwracanych mapowane na parametry są wypełniane przy użyciu danych.       Dla instrukcji UPDATE, INSERT i DELETE wartość zwracana jest liczba wierszy objętych polecenia. Gdy wyzwalacz istnieje w tabeli są wstawiane lub aktualizowane, zwracana wartość zawiera liczbę wierszy dotyczy zarówno operacja wstawiania lub aktualizacji oraz liczbę wierszy, wyzwalacza lub wyzwalaczy. Dla wszystkich innych typów instrukcji wartość zwracana jest wartość -1. W przypadku wycofywania -1 jest również wartość zwracaną."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._23_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._23_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Liczba zmodyfikowanych wierszy."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Wystąpił wyjątek podczas wykonywania polecenia przed wierszem zablokowanym. Ten wyjątek nie jest generowany, gdy jest używany program Microsoft .NET Framework w wersji 1.0.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>, który wykonuje [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrukcji w zakresie połączeń i zwraca liczbę wierszy wpływ.</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*> Token anulowania może służyć do żądania porzucony operację zanim upłynie limit czasu polecenia.  Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instrukcja anulowania."
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie ExecuteNonQueryAsync więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wysyła <> </> *> do <> </> *> i tworzy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Gdy <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>właściwość powinna być ustawiona na nazwę procedury składowanej.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Polecenie wykonuje tej procedury składowanej, gdy zostanie wywołana metoda ExecuteReader.      > [!NOTE] > Jeśli transakcja jest zakleszczone, nie może zostać zgłoszony wyjątek, aż do <xref:System.Data.SqlClient.SqlDataReader.Read%2A>jest wywoływana.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Wiele funkcji zestawu (MARS) aktywnych wyników umożliwia wielu akcji przy użyciu tego samego połączenia.       Jeśli używasz ExecuteReader lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._22_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._22_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Wystąpił wyjątek podczas wykonywania polecenia przed wierszem zablokowanym. Ten wyjątek nie jest generowany, gdy jest używany program Microsoft .NET Framework w wersji 1.0.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Bieżący stan połączenia jest zamknięty. ExecuteReader wymaga otwartego <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wysyła <> </> *> do <> </> *> i tworzy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> przy użyciu jednej z <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości."
  remarks: "Gdy <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>właściwość powinna być ustawiona na nazwę procedury składowanej.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Polecenie wykonuje tę procedurę składowaną podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>      > [!NOTE] > Użyj <xref:System.Data.CommandBehavior>można pobrać wartości dużych i danych binarnych.</xref:System.Data.CommandBehavior> W przeciwnym razie <xref:System.OutOfMemoryException>może wystąpić i połączenie zostanie zamknięte.</xref:System.OutOfMemoryException>       Wiele funkcji zestawu (MARS) aktywnych wyników umożliwia wielu akcji przy użyciu tego samego połączenia.       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.sqlclient._14_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._14_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Jeden z <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości."
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <> </> *>, który wysyła <> </> *> do <xref:System.Data.SqlClient.SqlCommand.Connection*>i tworzy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nieprawidłowy <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie ExecuteReaderAsync więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <> </> *>, który wysyła <> </> *> do <xref:System.Data.SqlClient.SqlCommand.Connection*>i tworzy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Opcje pobierania instrukcji wykonywania i danych.  Jeśli ustawiono <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>odczytuje cały wiersz przed zwróceniem wykonać zadania.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nieprawidłowy <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie ExecuteReaderAsync więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <> </> *>, który wysyła <> </> *> do <xref:System.Data.SqlClient.SqlCommand.Connection*>i tworzy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*>       Token anulowania może służyć do żądania porzucony operację zanim upłynie limit czasu polecenia.  Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instrukcja anulowania."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nieprawidłowy <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <> </> *>, który wysyła <> </> *> do <xref:System.Data.SqlClient.SqlCommand.Connection*>i tworzy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> token anulowania może służyć do żądania porzucony operację zanim upłynie limit czasu polecenia.</xref:System.Data.SqlClient.SqlCommand.Connection*>  Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Opcje pobierania instrukcji wykonywania i danych.  Jeśli ustawiono <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>odczytuje cały wiersz przed zwróceniem wykonać zadania.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instrukcja anulowania."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nieprawidłowy <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> wartości."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie ExecuteReaderAsync więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wykonuje zapytanie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconych przez kwerendę. Dodatkowe kolumny lub wiersze są ignorowane."
  remarks: "Metoda ExecuteScalar można pobrać pojedynczą wartość (na przykład wartości zagregowanej) z bazy danych. Wymaga to mniejsza ilość kodu niż przy użyciu <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>metody, a następnie wykonuje operacje, które są potrzebne do generowania pojedynczą wartość, przy użyciu danych zwróconych przez <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>       Typowe zapytania ExecuteScalar może być sformatowany jak w poniższym przykładzie C#:```   cmd.CommandText = &quot;SELECT COUNT(*) FROM dbo.region&quot;;   Int32 count = (Int32) cmd.ExecuteScalar();   ```"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteScalar. The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source. The function returns the new **Identity** column value if a new row was inserted, 0 on failure.  \n  \n [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Pierwszą kolumnę pierwszego wiersza w zestawie wyników, lub odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic), jeśli zestaw wyników jest pusty. Zwraca 2033 znaków."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Wystąpił wyjątek podczas wykonywania polecenia przed wierszem zablokowanym. Ten wyjątek nie jest generowany, gdy jest używany program Microsoft .NET Framework w wersji 1.0.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*>, które asynchronicznie wykonuje zapytania i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconych przez kwerendę.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*> Dodatkowe kolumny lub wiersze są ignorowane.       Token anulowania może służyć do żądania porzucony operację zanim upłynie limit czasu polecenia. Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instrukcja anulowania."
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie ExecuteScalarAsync więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  id: ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wysyła <> </> *> do <> </> *> i tworzy <xref:System.Xml.XmlReader>obiektu.</xref:System.Xml.XmlReader>"
  remarks: "<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>Właściwość zazwyczaj określa [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrukcję, określając prawidłową klauzuli FOR XML.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Jednak <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>można również określić instrukcję, która zwraca `ntext` lub `nvarchar` danych, który zawiera prawidłowy kod XML lub zawartości kolumny o `xml` typu danych.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A>       Typowe zapytania elementu ExecuteXmlReader może być sformatowany jak w poniższym przykładzie Microsoft Visual C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` tej metody można również pobrać zestawu wyników pojedynczy wiersz, pojedynczej kolumny zawierającej dane XML. W tym przypadku jeśli więcej niż jeden wiersz, jest zwracany, dołącza metody elementu ExecuteXmlReader <xref:System.Xml.XmlReader>wartości w pierwszym wierszu i odrzucenia ustawić reszty wynik.</xref:System.Xml.XmlReader>       Wiele funkcji zestawu (MARS) aktywnych wyników umożliwia wielu akcji przy użyciu tego samego połączenia.       Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>dostępu do danych XML, SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Aby uniknąć tego zachowania, należy użyć elementu ExecuteXmlReader lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>odczytać zapytaniach FOR XML.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Aby uzyskać więcej informacji zobacz artykuł Q310378, &quot;PRB: XML danych jest obcięte podczas możesz Użyj SqlDataReader,&quot; w bazie wiedzy Microsoft Knowledge Base pod adresem http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteXmlReader. The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._42_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._42_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader ExecuteXmlReader ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Obiektu.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Wystąpił wyjątek podczas wykonywania polecenia przed wierszem zablokowanym. Ten wyjątek nie jest generowany, gdy jest używany program Microsoft .NET Framework w wersji 1.0.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  id: ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <> </> *>, który wysyła <> </> *> do <xref:System.Data.SqlClient.SqlCommand.Connection*>i tworzy <xref:System.Xml.XmlReader>obiektu.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <> </> *>, który wysyła <> </> *> do <xref:System.Data.SqlClient.SqlCommand.Connection*>i tworzy <xref:System.Xml.XmlReader>obiektu.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       Token anulowania może służyć do żądania porzucony operację zanim upłynie limit czasu polecenia.  Wyjątki będą zgłaszane przez zwrócony obiekt zadania."
  remarks: "Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instrukcja anulowania."
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Zamknięty lub usunięty podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Wystąpił błąd podczas wykonywania tekst polecenia.       Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd podczas <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>lub <xref:System.IO.TextReader>obiektu podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.IO.Stream>, <xref:System.Xml.XmlReader>Lub <xref:System.IO.TextReader>obiekt został zamknięty podczas operacji przesyłania strumieniowego.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Notification
  id: Notification
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość określającą <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> obiekt powiązany z tym poleceniem."
  remarks: "Wartość dla tej właściwości należy ustawić przed wykonaniem polecenia dla niego zaczęły obowiązywać."
  syntax:
    content: public System.Data.Sql.SqlNotificationRequest Notification { get; set; }
    return:
      type: System.Data.Sql.SqlNotificationRequest
      description: "Gdy są ustawione na wartość null (ustawienie domyślne), można żądać prezentowane żadne powiadomienie."
  overload: System.Data.SqlClient.SqlCommand.Notification*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  id: NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość wskazującą, czy aplikacji powinien automatycznie otrzymywać powiadomień o zapytaniach wspólnego <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> obiektu."
  remarks: "Ta funkcja jest używana w aplikacjach ASP.NET, aby otrzymywać powiadomienia do wszystkich poleceń wykonania strony ASP na serwerze SQL. Dzięki temu program ASP.NET do pamięci podręcznej strony, dopóki dałby w efekcie różne wyniki zapytania, używane do renderowania strony. Automatyczne umieszczanie.       Ta właściwość dotyczy tylko wersji programu SQL Server, która obsługuje powiadomienia kwerendy. We wcześniejszych wersjach ustawienie tej właściwości na **true** nie ma wpływu na aplikację."
  syntax:
    content: public bool NotificationAutoEnlist { get; set; }
    return:
      type: System.Boolean
      description: '**wartość true,** czy aplikacja ma automatycznie otrzymywać powiadomień o zapytaniach; w przeciwnym razie **false**. Wartość domyślna to **true**.'
  overload: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Parameters
  id: Parameters
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the <xref href=&quot;System.Data.SqlClient.SqlParameterCollection&quot;></xref>."
  remarks: "Microsoft .NET Framework Data Provider dla programu SQL Server nie obsługuje przekazywania parametrów do instrukcji SQL lub procedura składowana wywoływana za pomocą polecenia programu symbolu zastępczego znak zapytania (?) `CommandType.Text`. W takim przypadku należy użyć parametrów nazwanych. Na przykład: Wybierz * z klientów CustomerID WHERE = @CustomerID > [!NOTE] > Jeśli parametrów w kolekcji nie są zgodne z wymaganiami zapytania do wykonania, może spowodować błąd.       Aby uzyskać więcej informacji, zobacz [konfigurowania parametrów i typ danych parametru](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.  \n  \n [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._32_1.vb)]\n [!code-cs[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/csharp/p-system.data.sqlclient._32_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlParameterCollection Parameters { get; }
    return:
      type: System.Data.SqlClient.SqlParameterCollection
      description: "Parametry instrukcji języka Transact-SQL lub procedury składowanej. Wartość domyślna to pustej kolekcji."
  overload: System.Data.SqlClient.SqlCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Prepare
  id: Prepare
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Utworzenie wersji przygotowanego polecenia w wystąpieniu programu SQL Server."
  remarks: "Jeśli <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>ma ustawioną wartość `StoredProcedure`, wywołanie Prepare powinien powiedzie się, chociaż może to spowodować op. nie</xref:System.Data.SqlClient.SqlCommand.CommandType%2A>       Przed wywołaniem Prepare, określ typ danych każdego parametru w instrukcji, aby móc przywrócić. Dla każdego parametru, który ma typ danych o zmiennej długości, należy ustawić <xref:System.Data.SqlClient.SqlParameter.Size%2A>właściwości do maksymalnego rozmiaru potrzebne.</xref:System.Data.SqlClient.SqlParameter.Size%2A> Przygotowanie zwraca błąd, jeśli te warunki nie są spełnione.      > [!NOTE] > Jeśli kontekst bazy danych zostanie zmieniona, wykonując języka Transact-SQL `USE <database>` instrukcji, lub przez wywołanie metody <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>metody, a następnie Prepare musi zostać wywołany po raz drugi.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>       Jeśli należy wywołać `Execute` metody po wywoływania Prepare, wszystkie wartości parametru, który jest większy niż wartość określoną przez <xref:System.Data.SqlClient.SqlParameter.Size%2A>Właściwości automatycznie jest obcinana do oryginalnego rozmiaru określonego parametru, a nie są zwracane nie błędy obcięcie.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Dane wyjściowe parametrów (czy przygotowane lub nie) musi być typu danych określonego użytkownika. Jeśli określisz typu danych o zmiennej długości, należy również określić maksymalną <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Przed Visual Studio 2010 przygotowanie wywołało wyjątek.  Począwszy od programu Visual Studio 2010, ta metoda nie zgłasza wyjątek."
  example:
  - "The following example demonstrates the use of the Prepare method.  \n  \n [!code-vb[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._45_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/csharp/m-system.data.sqlclient._45_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Resetuje <xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>Właściwości na wartość domyślną.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>"
  remarks: "Wartość domyślna <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>wynosi 30 sekund.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  id: StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Występuje po zakończeniu wykonywania instrukcji języka Transact-SQL."
  syntax:
    content: public event System.Data.StatementCompletedEventHandler StatementCompleted;
    return:
      type: System.Data.StatementCompletedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu, który jest kopią bieżącego wystąpienia."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiektu, który jest kopią tego wystąpienia."
  overload: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Transaction
  id: Transaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> w ramach którego <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> wykonuje."
  remarks: "Nie można ustawić właściwości transakcji, jeśli jest już ustawiony na określoną wartość, a polecenie jest w trakcie wykonywania. Jeśli ustawiono właściwość transaction <xref:System.Data.SqlClient.SqlTransaction>obiektu, który nie jest podłączony do tej samej <xref:System.Data.SqlClient.SqlConnection>jako <xref:System.Data.SqlClient.SqlCommand>obiekt jest zwracany wyjątek, przy następnym uruchomieniu próbował wykonać instrukcję.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlTransaction>"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction Transaction { get; set; }
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "The <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;></xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia sposób wyniki poleceń są stosowane do <xref href=&quot;System.Data.DataRow&quot;> </xref> gdy jest używana przez **aktualizacji** metody <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "Wartość domyślna <xref:System.Data.UpdateRowSource>wartość jest **zarówno** chyba, że polecenie jest generowana automatycznie (tak jak w przypadku liczby <xref:System.Data.SqlClient.SqlCommandBuilder>), w takim przypadku wartość domyślna to **Brak**.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.UpdateRowSource>       Aby uzyskać więcej informacji o korzystaniu z **przetwarzania wsadowego** właściwości, zobacz [parametry element DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Jeden z <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> wartości."
  overload: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlCommand.#ctor
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
- uid: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommandColumnEncryptionSetting
  nameWithType: SqlCommandColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.Cancel
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
- uid: System.Data.SqlClient.SqlCommand.Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommand.CommandType
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
- uid: System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.Common.DbDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<SqlDataReader>
  nameWithType: Task<SqlDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.SqlClient.SqlDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: SqlDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<XmlReader>
  nameWithType: Task<XmlReader>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Xml.XmlReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: XmlReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.Notification
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
- uid: System.Data.Sql.SqlNotificationRequest
  parent: System.Data.Sql
  isExternal: false
  name: SqlNotificationRequest
  nameWithType: SqlNotificationRequest
  fullName: System.Data.Sql.SqlNotificationRequest
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameterCollection
  nameWithType: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: System.Data.SqlClient.SqlCommand.Prepare
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
- uid: System.Data.StatementCompletedEventHandler
  parent: System.Data
  isExternal: false
  name: StatementCompletedEventHandler
  nameWithType: StatementCompletedEventHandler
  fullName: System.Data.StatementCompletedEventHandler
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlCommand.Transaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.SqlClient.SqlCommand.#ctor*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery
  nameWithType: SqlCommand.BeginExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader
  nameWithType: SqlCommand.BeginExecuteReader
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader
  nameWithType: SqlCommand.BeginExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.Cancel*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel
  nameWithType: SqlCommand.Cancel
- uid: System.Data.SqlClient.SqlCommand.Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone
  nameWithType: SqlCommand.Clone
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
- uid: System.Data.SqlClient.SqlCommand.CommandType*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: SqlCommand.CreateDbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter
  nameWithType: SqlCommand.CreateParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
- uid: System.Data.SqlClient.SqlCommand.Dispose*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose
  nameWithType: SqlCommand.Dispose
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery
  nameWithType: SqlCommand.EndExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader
  nameWithType: SqlCommand.EndExecuteReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader
  nameWithType: SqlCommand.EndExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: SqlCommand.ExecuteDbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: SqlCommand.ExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: SqlCommand.ExecuteNonQueryAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: SqlCommand.ExecuteReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: SqlCommand.ExecuteReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: SqlCommand.ExecuteScalar
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: SqlCommand.ExecuteScalarAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader
  nameWithType: SqlCommand.ExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync
  nameWithType: SqlCommand.ExecuteXmlReaderAsync
- uid: System.Data.SqlClient.SqlCommand.Notification*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlCommand.Prepare*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare
  nameWithType: SqlCommand.Prepare
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: SqlCommand.ResetCommandTimeout
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlCommand.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlCommand.Transaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
