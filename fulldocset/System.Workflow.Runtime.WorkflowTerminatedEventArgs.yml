### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  id: WorkflowTerminatedEventArgs
  children:
  - System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  langs:
  - csharp
  name: WorkflowTerminatedEventArgs
  nameWithType: WorkflowTerminatedEventArgs
  fullName: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&quot;> </xref> zdarzeń."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Wystąpienie przepływu pracy może zakończyć się w jednym z trzech sposobów: host może wywołać <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName>, <xref:System.Workflow.ComponentModel.TerminateActivity>działania mogą być przywoływane z wewnątrz wystąpienia przepływu pracy lub aparatu wykonawczego workflow może zakończyć wystąpienie z powodu nieobsługiwanego wyjątku.</xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName> W przypadku wystąpienia przepływu pracy zostało zakończone, aparatu środowiska uruchomieniowego przepływu pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>zdarzeń.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName> Host może subskrybować tego zdarzenia przez dodanie obsługi zdarzeń do <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>"
  example:
  - "The following code example demonstrates an event handler method that takes WorkflowTerminatedEventArgs as a parameter. The `OnWorkflowTerminated` method is called when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event is raised. The code uses the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A> property get the message associated with the exception that caused the workflow to terminate.  \n  \n This code example is part of the Sequential Workflow with Parameters SDK Sample from the Program.cs file. For more information, see [Sequential Workflow with Parameters](http://msdn.microsoft.com/en-us/17157f2d-8fed-4848-a386-e4efa381b66b).  \n  \n [!code-cs[WF_Samples#193](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#193)]\n [!code-vb[WF_Samples#193](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#193)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowTerminatedEventArgs : System.Workflow.Runtime.WorkflowEventArgs
  inheritance:
  - System.EventArgs
  - System.Workflow.Runtime.WorkflowEventArgs
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  id: Exception
  parent: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: WorkflowTerminatedEventArgs.Exception
  fullName: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Pobiera wyjątek, który spowodował wystąpienie przepływu pracy, który ma zostać zakończona."
  remarks: "Wystąpienie przepływu pracy zostało przerwane z powodu nieobsługiwanego wyjątku, wyjątków zawiera nieobsługiwany wyjątek.       Jeśli wystąpienie przepływu pracy zostało zakończone przez wywołanie hosta do <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName>lub <xref:System.Workflow.ComponentModel.TerminateActivity>zawiera wyjątek działania, <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>mający jego <xref:System.Exception.Message%2A>Właściwość Opis powodu dla zakończenia połączenia.</xref:System.Exception.Message%2A> </xref:System.Workflow.ComponentModel.WorkflowTerminatedException> </xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName> Jeśli host zakończy wystąpienia przepływu pracy, dostarcza mu ten opis w `string` parametr <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=fullName> Jeśli wystąpienie przepływu pracy zostało zakończone <xref:System.Workflow.ComponentModel.TerminateActivity>Opis jest dostarczana przez <xref:System.Workflow.ComponentModel.TerminateActivity.Error%2A?displayProperty=fullName>.</xref:System.Workflow.ComponentModel.TerminateActivity.Error%2A?displayProperty=fullName> </xref:System.Workflow.ComponentModel.TerminateActivity>      > [!NOTE] > Mimo że w przypadku <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>zdarzenia, które nie jest z powodu nieobsługiwanego wyjątku, aparatu wykonawczego workflow hermetyzuje opis przyczynie zakończenia w <xref:System.Exception.Message%2A>właściwości <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>, nie zgłasza niekoniecznie ten wyjątek.</xref:System.Workflow.ComponentModel.WorkflowTerminatedException> </xref:System.Exception.Message%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how you can use the Exception property to obtain information about an exception that caused a workflow to terminate. The `OnWorkflowTerminated` method takes a <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> as a parameter. This method is called when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event is raised. The code uses the Exception property get the message associated with the exception that caused the workflow to terminate.  \n  \n This code example is part of the Sequential Workflow with Parameters SDK Sample from the Program.cs file. For more information, see [Sequential Workflow with Parameters](http://msdn.microsoft.com/en-us/17157f2d-8fed-4848-a386-e4efa381b66b).  \n  \n [!code-cs[WF_Samples#193](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#193)]\n [!code-vb[WF_Samples#193](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#193)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>, Która spowodowała wystąpienie przepływu pracy, który ma zostać zakończona.</xref:System.Exception>"
  overload: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.WorkflowEventArgs
  isExternal: false
  name: System.Workflow.Runtime.WorkflowEventArgs
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
  parent: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: WorkflowTerminatedEventArgs.Exception
  fullName: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception*
  parent: System.Workflow.Runtime.WorkflowTerminatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: WorkflowTerminatedEventArgs.Exception
