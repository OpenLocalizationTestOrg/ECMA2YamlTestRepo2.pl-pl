### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectorySecurity
  id: ActiveDirectorySecurity
  children:
  - System.DirectoryServices.ActiveDirectorySecurity.#ctor
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  - System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  langs:
  - csharp
  name: ActiveDirectorySecurity
  nameWithType: ActiveDirectorySecurity
  fullName: System.DirectoryServices.ActiveDirectorySecurity
  type: Class
  summary: "Używa warstwy zabezpieczeń obiektu zarządzanej biblioteki list kontroli dostępu do opakowywania funkcje kontroli dostępu dla obiektów katalogu."
  syntax:
    content: 'public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.DirectoryObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ActiveDirectorySecurity()
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> klasy."
  syntax:
    content: public ActiveDirectorySecurity ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectorySecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  id: AccessRightType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera <xref:System.Type>obiekt, który reprezentuje dostępu prawa do tego obiektu.</xref:System.Type>"
  remarks: "Ta właściwość zawsze zwraca <xref:System.Type>z <xref:System.DirectoryServices.ActiveDirectoryRights>wyliczenie.</xref:System.DirectoryServices.ActiveDirectoryRights> </xref:System.Type>"
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Prawo dostępu.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Tworzy <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> obiektu z określonymi wartościami."
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, np. NTAccount obiekt, który jest rozpoznawany jako identyfikator zabezpieczeń (SID)."
    - id: accessMask
      type: System.Int32
      description: "<xref:System.Int32>Maską bitów zawiera uprawnienia dostępu do użycia.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>obiekt, który wskazuje, czy są dziedziczone ACE.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ACE są dziedziczone. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> Obiekt, który zawiera flagi dziedziczenia obiektu katalogu."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> obiekt, który zawiera flagi propagacji dziedziczenia obiektu katalogu."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> Obiekt, który zawiera typ wpisu kontroli dostępu."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> Odpowiadający <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> obiektu."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Tworzy <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> obiektu z określonymi wartościami."
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, np. NTAccount obiektu, który jest rozpoznawany jako identyfikator zabezpieczeń (SID)."
    - id: accessMask
      type: System.Int32
      description: "<xref:System.Int32>Maską bitów zawiera uprawnienia dostępu do użycia.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>obiekt, który wskazuje, czy są dziedziczone ACE.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Jeśli ACE są dziedziczone. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> Obiekt, który zawiera flagi dziedziczenia dla obiektu katalogu."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> obiekt, który zawiera flagi propagacji dziedziczenia dla obiektu katalogu."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> Obiekt, który zawiera typ wpisu kontroli dostępu."
    - id: objectGuid
      type: System.Guid
      description: "A <xref:System.Guid>obiekt, który zawiera identyfikator GUID obiektu katalogu.</xref:System.Guid>"
    - id: inheritedObjectGuid
      type: System.Guid
      description: "A <xref:System.Guid>obiekt, który zawiera identyfikator GUID obiektu katalogu dziedziczonych.</xref:System.Guid>"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> Odpowiadający <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> obiektu."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  id: AccessRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera <xref:System.Type>reprezentujący reguły dostępu dla tego obiektu.</xref:System.Type>"
  remarks: "Ta właściwość zawsze zwraca <xref:System.Type> <xref:System.DirectoryServices.ActiveDirectoryAccessRule>klasy.</xref:System.DirectoryServices.ActiveDirectoryAccessRule> </xref:System.Type>"
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Reguły dostępu.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AddAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Dodaje reguły dostępu do listy DACL obiektu."
  syntax:
    content: public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "<xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*>Obiekt, którego dotyczy ta operacja.</xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AddAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Dodaje regułę inspekcji SACL obiektu."
  syntax:
    content: public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAuditRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Tworzy <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> obiektu z określonymi wartościami."
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, np. NTAccount obiektu, który jest rozpoznawany jako identyfikator zabezpieczeń (SID)."
    - id: accessMask
      type: System.Int32
      description: "<xref:System.Int32>Maską bitów zawiera uprawnienia dostępu do użycia.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>obiekt, który wskazuje, czy są dziedziczone ACE.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ACE są dziedziczone. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> Obiekt, który zawiera flagi dziedziczenia obiektu katalogu."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> obiekt, który zawiera flagi propagacji dziedziczenia obiektu katalogu."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> Obiekt, który zawiera flagi inspekcji dla tego <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> obiektu."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> Odpowiadający <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> obiektu."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Tworzy <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> obiektu z określonymi wartościami."
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, np. NTAccount obiekt, który jest rozpoznawany jako identyfikator zabezpieczeń (SID)."
    - id: accessMask
      type: System.Int32
      description: "<xref:System.Int32>Maską bitów zawiera uprawnienia dostępu do użycia.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>obiekt, który wskazuje, czy są dziedziczone ACE.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ACE są dziedziczone. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> Obiekt, który zawiera flagi dziedziczenia obiektu katalogu."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> obiekt, który zawiera flagi propagacji dziedziczenia obiektu katalogu."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "<xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> Obiekt, który zawiera flagi inspekcji dla tego <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> obiektu."
    - id: objectGuid
      type: System.Guid
      description: "A <xref:System.Guid>obiekt, który zawiera Guido obiektu katalogu.</xref:System.Guid>"
    - id: inheritedObjectGuid
      type: System.Guid
      description: "A <xref:System.Guid>obiekt, który zawiera Guido obiektu katalogu dziedziczonych.</xref:System.Guid>"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> Odpowiadający <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> obiektu."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  id: AuditRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Pobiera <xref:System.Type>reprezentujący zasady inspekcji dla tego obiektu.</xref:System.Type>"
  remarks: "Ta właściwość zawsze zwraca <xref:System.Type> <xref:System.DirectoryServices.ActiveDirectoryAuditRule>klasy.</xref:System.DirectoryServices.ActiveDirectoryAuditRule> </xref:System.Type>"
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Zasady inspekcji.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Dotyczy określonej zmiany na określonym <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>."
  syntax:
    content: public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "Typ modyfikacji kontroli dostępu do wykonania."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do zmodyfikowania."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Dotyczy określonej zmiany na określonym <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>."
  syntax:
    content: public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "Zmiana do zastosowania."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "Reguła inspekcji, aby zmodyfikować."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  id: PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie reguły dostępu do skojarzonego z określonym <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Dla którego mają zostać usunięte wszystkie reguły dostępu."
  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wszystkie reguły dostępu, nie są Porządek kanoniczny."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  id: PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie inspekcji reguły skojarzone z określonym <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Dla którego mają zostać usunięte wszystkie zasady inspekcji."
  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wszystkie zasady inspekcji nie są w Porządek kanoniczny."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  id: RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccess(IdentityReference,AccessControlType)
  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie reguły dostępu, które mają określony <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu i <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> obiektu z listy DACL obiektu."
  syntax:
    content: public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, np. NTAccount obiektu, który jest rozpoznawany jako identyfikator zabezpieczeń (SID)."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "<xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> Obiekt, który zawiera typ wpisu kontroli dostępu."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie reguły dostępu, które zawierają tę samą zabezpieczeń dostępu i identyfikator maskę jako reguła dostępu określonego z listy DACL obiektu."
  syntax:
    content: public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli operacja zakończy się pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie reguły dostępu, które dokładnie odpowiadać reguła dostępu określonego z listy DACL obiektu."
  syntax:
    content: public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  id: RemoveAudit(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAudit(IdentityReference)
  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie reguły inspekcji, które mają określony <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu SACL obiektu."
  syntax:
    content: public void RemoveAudit (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, np. NTAccount obiektu, który jest rozpoznawany jako identyfikator zabezpieczeń (SID)."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie reguły inspekcji, które zawierają tę samą zabezpieczeń dostępu i identyfikator maskę inspekcji określonej reguły z systemu dostępu formantu listy (SACL) obiektu."
  syntax:
    content: public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli operacja zakończy się pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Usuwa wszystkie reguły inspekcji, które dokładnie zgodne z regułą określonego inspekcji z SACL obiektu."
  syntax:
    content: public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ResetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Wyszukuje POUFNEJ dostęp wszystkich reguł, które zawierają identyfikator zabezpieczeń (SID) zgodny z określony identyfikator SID w <code> rule </code> obiekt i zamienia wszystkie te reguły z regułami dostępu, które są zawarte w dostępu <code> rule </code> obiektu."
  remarks: "W przypadku ResetAccessRule należy zastąpić wszystkie reguły dostępu do określonego identyfikatora SID DACL obiektu reguł typu Zezwalaj i Odmów zostaną zastąpione.  Aby zamienić tylko reguł zezwalania bez wpływu na reguł odmowy lub Zastąp reguły odmowy bez wpływu na reguł zezwalania, użyj <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>zamiast.</xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>"
  syntax:
    content: public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: SetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Wyszukuje POUFNEJ dostęp wszystkich reguł, które zawierają identyfikator zabezpieczeń (SID) zgodny z określony identyfikator SID w <code> rule </code> obiekt i formantu typu dostępu (Zezwalaj lub Odmów) zgodny z typem określonym w <code> rule </code> obiekt i zamienia wszystkie te reguły z regułami dostępu, które są zawarte w dostępu <code> rule </code> obiektu."
  remarks: "Gdy SetAccessRule jest używany do zastępowania wszystkich reguł dostępu, które odpowiada konkretny identyfikator SID i uzyskiwać dostęp do typu formantu (Zezwalaj lub Odmów) DACL obiektu, wszystkie reguły w tym DACL z identyfikator SID i zgodne, identyfikator SID i dostęp typu kontrolować typ zawarty w `rule` obiektu zostają zastąpione.  Za pomocą tej metody, deweloper może zastąpić żadnych reguł zezwalania dla tego identyfikatora SID dla tego obiektu bez wpływu na istniejących reguł odmowy lub Zastąp wszystkich reguł odmowy dla tego identyfikatora SID dla tego obiektu bez wpływu na istniejących reguł zezwalania.  Aby zastąpić wszystkie reguły dla danego obiektu odnoszące się do określonego identyfikatora SID, niezależnie od tego typu, należy użyć <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>zamiast.</xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>"
  syntax:
    content: public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: SetAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Zamienia wszystkie zasady inspekcji zawierające tego samego identyfikatora zabezpieczeń zasady inspekcji określonej w SACL obiektu z regułą określonego inspekcji."
  syntax:
    content: public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> Obiekt, którego dotyczy ta operacja."
  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.DirectoryObjectSecurity
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ActiveDirectorySecurity()
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectoryAccessRule
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectoryAccessRule
  nameWithType: ActiveDirectoryAccessRule
  fullName: System.DirectoryServices.ActiveDirectoryAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectoryAuditRule
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectoryAuditRule
  nameWithType: ActiveDirectoryAuditRule
  fullName: System.DirectoryServices.ActiveDirectoryAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccess(IdentityReference,AccessControlType)
  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAudit(IdentityReference)
  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ResetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ActiveDirectorySecurity
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: ActiveDirectorySecurity.AddAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: ActiveDirectorySecurity.AddAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAccessRule
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAuditRule
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAccessRules
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAuditRules
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccess
  nameWithType: ActiveDirectorySecurity.RemoveAccess
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAudit
  nameWithType: ActiveDirectorySecurity.RemoveAudit
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: ActiveDirectorySecurity.ResetAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: ActiveDirectorySecurity.SetAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: ActiveDirectorySecurity.SetAuditRule
