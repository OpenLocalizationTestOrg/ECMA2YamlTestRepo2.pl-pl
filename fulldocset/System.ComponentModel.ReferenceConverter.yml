### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ReferenceConverter
  id: ReferenceConverter
  children:
  - System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  - System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  langs:
  - csharp
  name: ReferenceConverter
  nameWithType: ReferenceConverter
  fullName: System.ComponentModel.ReferenceConverter
  type: Class
  summary: "Udostępnia konwertera typu, aby przekonwertować odwołań do obiektów do i z innych oświadczenia."
  remarks: "ReferenceConverter jest zwykle używana w kontekście nieulokowane części lub w środowisku projektowym. Bez lokacji składnika i użyteczne <xref:System.ComponentModel.ITypeDescriptorContext>, ten konwerter jest rzadko używane.</xref:System.ComponentModel.ITypeDescriptorContext>       Ten konwerter konwertuje odwołanie obiektu, który implementuje <xref:System.ComponentModel.IComponent>interfejsu i wyświetla jego właściwości w **właściwości** okna.</xref:System.ComponentModel.IComponent>       Aby uzyskać więcej informacji na temat konwertery typu, zobacz <xref:System.ComponentModel.TypeConverter>Klasa podstawowa i [porady: implementacji konwertera typów](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Nigdy nie należy tworzyć wystąpienia klasy ReferenceConverter. Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>metody <xref:System.ComponentModel.TypeDescriptor>klasy.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Aby uzyskać więcej informacji zobacz przykłady w <xref:System.ComponentModel.TypeConverter>klasie podstawowej.</xref:System.ComponentModel.TypeConverter>       Ta klasa udostępnia <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A>metodę sprawdzania, czy konkretną wartość może być dodany do standardowego wartości z kolekcji.</xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> Jeśli nie chcesz dodać wartości do kolekcji, należy przesłonić tę metodę."
  syntax:
    content: 'public class ReferenceConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ReferenceConverter(Type)
  nameWithType: ReferenceConverter.ReferenceConverter(Type)
  fullName: System.ComponentModel.ReferenceConverter.ReferenceConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.ReferenceConverter&quot;> </xref> klasy."
  syntax:
    content: public ReferenceConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ do skojarzenia z on odwołania.</xref:System.Type>"
  overload: System.ComponentModel.ReferenceConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy ten konwerter można przekonwertować obiektu dla typu źródłowego danego obiektu odwołania przy użyciu określonego kontekstu."
  remarks: "`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Zapewnia kontekstu formatu."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>reprezentujący chcesz konwertować z typu.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten obiekt może dokonać konwersji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReferenceConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Konwertuje dany obiekt typu odwołania."
  remarks: "`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Zapewnia kontekstu formatu."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>, który określa kulturę używaną do reprezentowania czcionki.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do przekonwertowania.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący skonwertowany <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.ReferenceConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nie można wykonać konwersji."
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Konwertuje obiekt podanej wartości na typ referencyjny przy użyciu określonego kontekstu i argumentów."
  remarks: "Ta metoda konwertuje najczęściej typów do i z obiektów typu string.       `context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Zapewnia kontekstu formatu."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>, który określa kulturę używaną do reprezentowania czcionki.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do przekonwertowania.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "Typ docelowy konwersji obiektu do."
    return:
      type: System.Object
      description: "Przekonwertowany obiekt."
  overload: System.ComponentModel.ReferenceConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nie można wykonać konwersji."
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera kolekcję wartości domyślnych dla typu danych odwołania."
  remarks: "`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Zapewnia kontekstu formatu."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>który zawiera standardowy zestaw prawidłowych wartości lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli typem danych nie obsługuje standardowy zestaw wartości.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.ReferenceConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy lista standardowe wartości zwracane z <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>jest listą wyłącznego.</xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>"
  remarks: "`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Zapewnia kontekstu formatu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ponieważ <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>zwrócony z <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>jest to pełna lista możliwych wartości.</xref:System.ComponentModel.ReferenceConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Ta metoda nie zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy."
  remarks: "`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być `null`, dlatego należy zawsze sprawdzić. Ponadto może zwrócić właściwości obiektu context `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Zapewnia kontekstu formatu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ponieważ <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>można wywołać, aby znaleźć wspólny zbiór wartości obiekt obsługuje.</xref:System.ComponentModel.ReferenceConverter.GetStandardValues*> Ta metoda nie zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: IsValueAllowed(ITypeDescriptorContext,Object)
  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca wartość wskazującą, czy konkretną wartość może być dodany do kolekcji wartości domyślnych."
  remarks: "Ta metoda jest wywoływana dla każdej wartości zgodny z typem skojarzony z tym <xref:System.ComponentModel.ReferenceConverter>i dla każdego składnika znaleźć, który jest skojarzony typ.</xref:System.ComponentModel.ReferenceConverter> Domyślnie ta metoda zwraca `true`, czyli umożliwia dodanie wartości do kolekcji wartości domyślnych."
  syntax:
    content: protected virtual bool IsValueAllowed (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Zapewnia dodatkowy kontekst."
    - id: value
      type: System.Object
      description: "Wartość do sprawdzenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość jest dozwolone i można go dodać do kolekcji standardowych wartości; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli wartości nie można dodać do kolekcji wartości domyślnych."
  overload: System.ComponentModel.ReferenceConverter.IsValueAllowed*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ReferenceConverter(Type)
  nameWithType: ReferenceConverter.ReferenceConverter(Type)
  fullName: System.ComponentModel.ReferenceConverter.ReferenceConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: IsValueAllowed(ITypeDescriptorContext,Object)
  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.ReferenceConverter.#ctor*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ReferenceConverter
  nameWithType: ReferenceConverter.ReferenceConverter
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: ReferenceConverter.CanConvertFrom
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: ReferenceConverter.ConvertFrom
- uid: System.ComponentModel.ReferenceConverter.ConvertTo*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertTo
  nameWithType: ReferenceConverter.ConvertTo
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: ReferenceConverter.GetStandardValues
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: ReferenceConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: ReferenceConverter.GetStandardValuesSupported
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: IsValueAllowed
  nameWithType: ReferenceConverter.IsValueAllowed
