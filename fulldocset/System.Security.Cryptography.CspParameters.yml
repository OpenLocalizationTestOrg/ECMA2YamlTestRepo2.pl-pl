### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CspParameters
  id: CspParameters
  children:
  - System.Security.Cryptography.CspParameters.#ctor
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  - System.Security.Cryptography.CspParameters.CryptoKeySecurity
  - System.Security.Cryptography.CspParameters.Flags
  - System.Security.Cryptography.CspParameters.KeyContainerName
  - System.Security.Cryptography.CspParameters.KeyNumber
  - System.Security.Cryptography.CspParameters.KeyPassword
  - System.Security.Cryptography.CspParameters.ParentWindowHandle
  - System.Security.Cryptography.CspParameters.ProviderName
  - System.Security.Cryptography.CspParameters.ProviderType
  langs:
  - csharp
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
  type: Class
  summary: "Zawiera parametry, które są przekazywane do dostawcy usług kryptograficznych (CSP), który wykonuje operacje kryptograficzne. Ta klasa nie może być dziedziczona."
  remarks: "Klasa CspParameters reprezentuje parametry przekazywane do klasy kryptografii zarządzanych, które używają wewnętrznie Microsoft dostawcy usług kryptograficznych (CSP) z niezarządzanego API kryptografii firmy Microsoft (CAPI). Klasy, których nazwy kończą się w &quot;CryptoServiceProvider&quot; są kod zarządzany otok dla odpowiedniego dostawcy usług Kryptograficznych.       Użyj klasy CspParameters wykonać następujące czynności:-Określ określonego dostawcy usług Kryptograficznych, przekazując typ dostawcy do <xref:System.Security.Cryptography.CspParameters.ProviderType>lub <xref:System.Security.Cryptography.CspParameters.ProviderName>Właściwości.</xref:System.Security.Cryptography.CspParameters.ProviderName> </xref:System.Security.Cryptography.CspParameters.ProviderType>  Można również określić dostawcy usług Kryptograficznych za pomocą przeciążenia konstruktora.      -Utworzyć kontener kluczy przechowywania kluczy kryptograficznych.  Kontenery kluczy Podaj Najbezpieczniejszym sposobem utrwalić kluczy kryptograficznych i nie należy ich ujawniać złośliwego innych firm.  Aby uzyskać więcej informacji o tworzeniu kontenerów kluczy, zobacz [porady: magazyn kluczy asymetrycznych w kontenerze klucza](~/add/includes/ajax-current-ext-md.md).      — Określ, czy można utworzyć klucza asymetrycznego podpisu lub asymetrycznego wymiany klucza przy użyciu <xref:System.Security.Cryptography.CspParameters.KeyNumber>Właściwości.</xref:System.Security.Cryptography.CspParameters.KeyNumber>"
  example:
  - "The following code example creates a key container using the CspParameters class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/t-system.security.crypto_47_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/t-system.security.crypto_47_1.cs)]  \n  \n The following code example uses the CspParameters class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/t-system.security.crypto_47_2.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/t-system.security.crypto_47_2.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CspParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> klasy."
  remarks: "Inicjuje ten formularz CspParameters <xref:System.Security.Cryptography.CspParameters.ProviderType>pola na wartość `24`, która określa dostawcę, który PROV_RSA_AES.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Ten dostawca domyślny jest zgodny z <xref:System.Security.Cryptography.Aes>algorytmu.</xref:System.Security.Cryptography.Aes>       Informacje na temat innych typów dostawcy dla <xref:System.Security.Cryptography.CspParameters.ProviderType>pola.</xref:System.Security.Cryptography.CspParameters.ProviderType>"
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_108_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_108_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_108_1.cs)]"
  syntax:
    content: public CspParameters ();
    parameters: []
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> klasy z kodem typu określonego dostawcy."
  remarks: "Użyj konstruktora CspParameters, aby określić typ dostawcy przekazując wartość liczbową reprezentuje tego dostawcy.  Wartości liczbowe, reprezentujące domyślne typy dostawcy są zdefiniowane w pliku nagłówka WinCrypt.h: — Aby określić dostawcę zgodne z <xref:System.Security.Cryptography.RSA>algorytmu, przekazać wartość `1`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.RSA>      — W celu określenia dostawcy zgodnego z <xref:System.Security.Cryptography.DSA>algorytmu, przekazać wartość `13`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.DSA>       Informacje o innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType>pola.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Aby uzyskać więcej informacji na temat domyślne typy dostawcy i ich zachowania zobacz dokumentację interfejsu API kryptografii firmy Microsoft (CAPI) w bibliotece MSDN."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_129_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_129_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_129_1.cs)]"
  syntax:
    content: public CspParameters (int dwTypeIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Kod typu dostawcy, który określa typ dostawcy do utworzenia."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> z kod typu określonego dostawcy i nazwę."
  remarks: "Użyj konstruktora CspParameters, aby określić typ dostawcy i nazwę.       Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości liczbowe, reprezentujące domyślne typy dostawcy są zdefiniowane w pliku nagłówka WinCrypt.h: — Aby określić dostawcę zgodne z <xref:System.Security.Cryptography.RSA>algorytmu, przekazać wartość `1`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.RSA>      — W celu określenia dostawcy zgodnego z <xref:System.Security.Cryptography.DSA>algorytmu, przekazać wartość `13`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.DSA>       Informacje o innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType>pola.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Aby uzyskać więcej informacji na temat domyślne typy dostawcy i ich zachowania zobacz dokumentację interfejsu API kryptografii firmy Microsoft (CAPI) w bibliotece MSDN."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/3115faba-ad85-4109-97d8-_1.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/3115faba-ad85-4109-97d8-_1.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/3115faba-ad85-4109-97d8-_1.vb)]"
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Kod typu dostawcy, który określa typ dostawcy do utworzenia."
    - id: strProviderNameIn
      type: System.String
      description: "Nazwa dostawcy."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> klasy z kod typu określonego dostawcy i nazw i nazwę określonego kontenera."
  remarks: "Użyj konstruktora CspParameters, aby określić typ dostawcy, nazwa dostawcy i nazwę kontenera.       Nazwa kontenera służy do pobierania klucza w tym kontenerze.       Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości liczbowe, reprezentujące domyślne typy dostawcy są zdefiniowane w pliku nagłówka WinCrypt.h: — Aby określić dostawcę zgodne z <xref:System.Security.Cryptography.RSA>algorytmu, przekazać wartość `1`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.RSA>      — W celu określenia dostawcy zgodnego z <xref:System.Security.Cryptography.DSA>algorytmu, przekazać wartość `13`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.DSA>       Informacje o innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType>pola.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Aby uzyskać więcej informacji na temat domyślne typy dostawcy i ich zachowania zobacz dokumentację interfejsu API kryptografii firmy Microsoft (CAPI) w bibliotece MSDN."
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Kod typu dostawcy określa typ dostawcy do utworzenia."
    - id: strProviderNameIn
      type: System.String
      description: "Nazwa dostawcy."
    - id: strContainerNameIn
      type: System.String
      description: "Nazwa kontenera."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> przy użyciu typu dostawcy, nazwa dostawcy nazwy kontenera, uzyskiwanie dostępu do informacji i dojścia do okna dialogowego hasło niezarządzane karty inteligentnej."
  remarks: "Nazwa kontenera służy do pobierania klucza w tym kontenerze.       Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości liczbowe, reprezentujące domyślne typy dostawcy są zdefiniowane w pliku nagłówka WinCrypt.h: — Aby określić dostawcę zgodne z <xref:System.Security.Cryptography.RSA>algorytmu, przekazać wartość `1`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.RSA>      — W celu określenia dostawcy zgodnego z <xref:System.Security.Cryptography.DSA>algorytmu, przekazać wartość `13`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.DSA>       Informacje o innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType>pola.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Aby uzyskać więcej informacji na temat domyślne typy dostawcy i ich zachowania zobacz dokumentację interfejsu API kryptografii firmy Microsoft (CAPI) w bibliotece MSDN."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);
    parameters:
    - id: providerType
      type: System.Int32
      description: "Kod typu dostawcy określa typ dostawcy do utworzenia."
    - id: providerName
      type: System.String
      description: "Nazwa dostawcy."
    - id: keyContainerName
      type: System.String
      description: "Nazwa kontenera."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Zasady praw i Kontroluj dostęp do reprezentuje obiektu kontenera."
    - id: parentWindowHandle
      type: System.IntPtr
      description: "Dojście do nadrzędnego okna dla okna dialogowego hasła karty inteligentnej."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> przy użyciu typu dostawcy, nazwa dostawcy nazwy kontenera, uzyskiwanie dostępu do informacji i hasła skojarzonego z kluczem karty inteligentnej."
  remarks: "Nazwa kontenera służy do pobierania klucza w tym kontenerze.       Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości liczbowe, reprezentujące domyślne typy dostawcy są zdefiniowane w pliku nagłówka WinCrypt.h: — Aby określić dostawcę zgodne z <xref:System.Security.Cryptography.RSA>algorytmu, przekazać wartość `1`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.RSA>      — W celu określenia dostawcy zgodnego z <xref:System.Security.Cryptography.DSA>algorytmu, przekazać wartość `13`do `dwTypeIn` parametru.</xref:System.Security.Cryptography.DSA>       Informacje o innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType>pola.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Aby uzyskać więcej informacji na temat domyślne typy dostawcy i ich zachowania zobacz dokumentację interfejsu API kryptografii firmy Microsoft (CAPI) w bibliotece MSDN."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);
    parameters:
    - id: providerType
      type: System.Int32
      description: "Kod typu dostawcy określa typ dostawcy do utworzenia."
    - id: providerName
      type: System.String
      description: "Nazwa dostawcy."
    - id: keyContainerName
      type: System.String
      description: "Nazwa kontenera."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Zasady praw i Kontroluj dostęp do reprezentuje obiektu kontenera."
    - id: keyPassword
      type: System.Security.SecureString
      description: "Hasło skojarzone z kluczem karty inteligentnej."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  id: CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pobiera lub ustawia <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> czy reprezentuje prawa dostępu i inspekcji reguły dla kontenera obiektów."
  remarks: "Umożliwia określenie właściwości CryptoKeySecurity <xref:System.Security.AccessControl.CryptoKeySecurity>listy obiekt, który zarządza tworzeniem kontroli dostępu (DACL) i systemowe listy kontroli dostępu (SACL) dla kontenera.</xref:System.Security.AccessControl.CryptoKeySecurity>"
  syntax:
    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }
    return:
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "A <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> czy reprezentuje prawa dostępu i inspekcji reguły dla kontenera obiektów."
  overload: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.Flags
  id: Flags
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Reprezentuje flag <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> które modyfikują zachowanie dostawcy usług kryptograficznych (CSP)."
  syntax:
    content: public System.Security.Cryptography.CspProviderFlags Flags { get; set; }
    return:
      type: System.Security.Cryptography.CspProviderFlags
      description: "Wartość wyliczenia lub bitowe połączenie wartości wyliczenia."
  overload: System.Security.Cryptography.CspParameters.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość nie jest wartością prawidłowym wyliczeniem."
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Reprezentuje nazwę kontenera kluczy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Użyj pola NazwaKonteneraKlucza, aby określić nazwę użytkownika kontenera kluczy.  Nazwa kontenera umożliwia pobieranie utrwalonych klucza w tym kontenerze.       Aby uzyskać więcej informacji o tworzeniu kontenerów kluczy, zobacz [porady: magazyn kluczy asymetrycznych w kontenerze klucza](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/f-system.security.crypto_6_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/f-system.security.crypto_6_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/f-system.security.crypto_6_1.cs)]"
  syntax:
    content: public string KeyContainerName;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  id: KeyNumber
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Określa, czy klucz asymetryczny jest tworzony jako klucz podpisu lub wymiany klucza."
  remarks: "Inicjuje pola KeyNumber <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>właściwości podczas inicjowania <xref:System.Security.Cryptography.CspKeyContainerInfo>obiekt z <xref:System.Security.Cryptography.CspParameters>obiektu.</xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspKeyContainerInfo> </xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>       Klucz wymiany jest para kluczy asymetrycznych używany do szyfrowania kluczy sesji, dzięki czemu można je bezpiecznie przechowywane i wymieniane z innymi użytkownikami.  Można użyć <xref:System.Security.Cryptography.KeyNumber>wartość (`1`) do określenia klucza wymiany kluczy.</xref:System.Security.Cryptography.KeyNumber>  Ta wartość odpowiada `AT_KEYEXCHANGE` wartość używana w niezarządzanych Microsoft kryptograficznego interfejsu API (CAPI).       Klucz podpisu jest para kluczy asymetrycznych używany do uwierzytelniania wiadomości podpisanych cyfrowo lub plików.  Można użyć <xref:System.Security.Cryptography.KeyNumber>wartość (`2`) do określenia klucza podpisu.</xref:System.Security.Cryptography.KeyNumber>  Ta wartość odpowiada `AT_SIGNATURE` wartość używana w CAPI.       Domyślnie pole KeyNumber Określa klucz wymiany."
  example:
  - "The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \n  \n [!code-cs[Cryptography.KeyNumber#1](~/add/codesnippet/csharp/f-system.security.crypto_8_1.cs)]\n [!code-cpp[Cryptography.KeyNumber#1](~/add/codesnippet/cpp/f-system.security.crypto_8_1.cpp)]\n [!code-vb[Cryptography.KeyNumber#1](~/add/codesnippet/visualbasic/f-system.security.crypto_8_1.vb)]"
  syntax:
    content: public int KeyNumber;
    return:
      type: System.Int32
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  id: KeyPassword
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pobiera lub ustawia hasło skojarzone z kluczem karty inteligentnej."
  remarks: "Użyj właściwości KeyPassword podania hasła dla klucza karty inteligentnej.  Po określeniu hasła za pomocą tej właściwości, okno dialogowe hasło nie zostanie podana dla użytkownika."
  syntax:
    content: public System.Security.SecureString KeyPassword { get; set; }
    return:
      type: System.Security.SecureString
      description: "Hasło skojarzone z kluczem karty inteligentnej."
  overload: System.Security.Cryptography.CspParameters.KeyPassword*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Pobiera lub ustawia dojścia do okna nadrzędnego niezarządzane okno dialogowe Hasło karty inteligentnej."
  remarks: "Właściwość ParentWindowHandle umożliwia określenie dojścia do okna nadrzędnego niezarządzane okno dialogowe Hasło karty inteligentnej.  Po określeniu uchwyt, za pomocą tej właściwości, do użytkownika zostanie wyświetlone okno dialogowe Hasło karty inteligentnej.       Można uniknąć przedstawiający okno dialogowe Hasło karty inteligentnej, jawnie określając hasła przy użyciu <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>Właściwości.</xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>"
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    return:
      type: System.IntPtr
      description: "Dojście do nadrzędnego okna dla okna dialogowego hasła karty inteligentnej."
  overload: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderName
  id: ProviderName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Reprezentuje nazwę dostawcy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "W dokumentacji interfejsu API kryptografii firmy Microsoft (CAPI) w bibliotece MSDN, aby uzyskać więcej informacji o nazwach dostawcy."
  syntax:
    content: public string ProviderName;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderType
  id: ProviderType
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Reprezentuje kod typu dostawcy <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "W polu Typ dostawcy umożliwia określenie typu dostawcy przekazując wartość liczbową reprezentuje tego dostawcy.  Wartości liczbowe, reprezentujące domyślne typy dostawcy są zdefiniowane w pliku nagłówka WinCrypt.h: — Aby określić dostawcę zgodne z <xref:System.Security.Cryptography.RSA>klasy należy przekazać wartość `1`.</xref:System.Security.Cryptography.RSA>      — W celu określenia dostawcy zgodnego z <xref:System.Security.Cryptography.DSA>klasy należy przekazać wartość `13`.</xref:System.Security.Cryptography.DSA>       W poniższej tabeli wymieniono typy dostawcy i odpowiednie wartości liczbowe zdefiniowane w pliku nagłówka WinCrypt.h.      | Typ dostawcy | Wartość liczbowa |   |-------------------|-------------------|   | `PROV_RSA_FULL`|1|   | `PROV_RSA_SIG`|2|   | `PROV_DSS`|3|   | `PROV_FORTEZZA`|4|   | `PROV_MS_EXCHANGE`|5|   | `PROV_SSL`|6|   | `PROV_RSA_SCHANNEL`|12|   | `PROV_DSS_DH`|13|   | `PROV_EC_ECDSA_SIG`|14|   | `PROV_EC_ECNRA_SIG`|15|   | `PROV_EC_ECDSA_FULL`|16|   | `PROV_EC_ECNRA_FULL`|17|   | `PROV_DH_SCHANNEL`|18|   | `PROV_SPYRUS_LYNKS`|20|   | `PROV_RNG`|21|   | `PROV_INTEL_SEC`|22|   | `PROV_REPLACE_OWF`|23|   | `PROV_RSA_AES`|24|       Aby uzyskać więcej informacji na temat domyślne typy dostawcy i ich zachowania zobacz dokumentację interfejsu API kryptografii firmy Microsoft (CAPI) w bibliotece MSDN."
  syntax:
    content: public int ProviderType;
    return:
      type: System.Int32
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CspParameters.#ctor
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
- uid: System.Security.AccessControl.CryptoKeySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CryptoKeySecurity
  fullName: System.Security.AccessControl.CryptoKeySecurity
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
- uid: System.Security.Cryptography.CspProviderFlags
  parent: System.Security.Cryptography
  isExternal: false
  name: CspProviderFlags
  nameWithType: CspProviderFlags
  fullName: System.Security.Cryptography.CspProviderFlags
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
- uid: System.Security.Cryptography.CspParameters.ProviderName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
- uid: System.Security.Cryptography.CspParameters.ProviderType
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
- uid: System.Security.Cryptography.CspParameters.#ctor*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters.CspParameters
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
- uid: System.Security.Cryptography.CspParameters.KeyPassword*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
