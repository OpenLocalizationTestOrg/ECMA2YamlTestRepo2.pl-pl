### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML. Klasa XmlSchemaInference nie może być dziedziczona."
  remarks: "> [!IMPORTANT]> — Nie używaj schematów z nieznaną lub niezaufaną źródeł lub lokalizacji. W ten sposób spowoduje naruszenie zabezpieczeń kodu.   >-Schematów XML (w tym wbudowane schematy) są z założenia podatne na ataki; nie akceptuje tych postanowień w scenariuszach niezaufanych.   >-Schematu komunikatów o błędach i wyjątków może spowodować ujawnienie poufnych informacji o modelu zawartości lub identyfikator URI ścieżki do pliku schematu. Nie można więc ujawnić te informacje dotyczące obiektów wywołujących niezaufanych.       Klasa XmlSchemaInference w <xref:System.Xml.Schema?displayProperty=fullName>obszar nazw pozwala na potrzeby wnioskowania dotyczącego schematu języka definicji schematu XML (XSD) ze struktury dokumentu XML.</xref:System.Xml.Schema?displayProperty=fullName> Klasa XmlSchemaInference generuje schematu XML, który można sprawdzić poprawności dokumentu XML.       Klasa XmlSchemaInference obsługuje standardami W3C XML i schematów XML. Można go pobrać schematu nowego lub do zaktualizowania schematu."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;> </xref> klasy."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML zawartych w <xref:System.Xml.XmlReader>określony obiekt.</xref:System.Xml.XmlReader>"
  remarks: "Metoda InferSchema wnioskuje jedną lub więcej schematów języka definicji schematu W3C XML (XSD) z pliku XML wystąpienia zawarte w dokumencie <xref:System.Xml.XmlReader>określony obiekt.</xref:System.Xml.XmlReader> Jeśli dokument XML zawiera elementy i atrybuty z kilku obszarów nazw, a następnie wygenerowaniu wielu schematach: jeden dla każdej przestrzeni nazw w dokumencie. Podstawowy schemat jest schemat, który można sprawdzić poprawności całego dokumentu XML, a jego docelowego obszaru nazw jest taka sama jak przestrzeń nazw elementu dokumentu dokumentu XML.       Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę podczas korzystania z metody InferSchema.      — Metoda InferSchema ignoruje wszelkie `xsi:type`, `xsi:schemaLocation`, lub `xsi:noNamespaceSchemaLocation` atrybutów w dokumencie XML.      -Jeśli <xref:System.Xml.XmlReader>jest typu obiektu, informacje o typie zawiera jest ignorowane.</xref:System.Xml.XmlReader>      -Jeśli <xref:System.Xml.XmlReader>obiekt znajduje się w elemencie, który nie jest elementem głównym dokumentu w formacie XML, schemat jest wywnioskowany tylko tego elementu.</xref:System.Xml.XmlReader> Jeśli <xref:System.Xml.XmlReader>obiekt nie znajduje się w elemencie <xref:System.Xml.XmlReader.Read%2A>wywoływana jest metoda <xref:System.Xml.XmlReader>parametru aż do napotkania elementu (na przykład, gdy <xref:System.Xml.XmlReader.NodeType%2A>jest <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> W tym momencie proces wnioskowania rozpoczyna się od tego elementu. Jeśli żaden element nie jest napotkane do końca dokumentu, <xref:System.ArgumentException>jest generowany.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Obiekt, który zawiera kod XML dokumentu można pobrać schematu z.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Obiekt zawierający wnioskowany schematów."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Dokument XML nie jest poprawnie sformułowany."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "<xref:System.Xml.XmlReader>Obiekt nie znajduje się w węźle głównym lub w elemencie.</xref:System.Xml.XmlReader> Wystąpi błąd podczas wnioskowania schematu."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML zawartych w <xref:System.Xml.XmlReader>obiekt określone i udoskonalanie wnioskowany schematu za pomocą schematu w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> obiektu określony za pomocą tego samego docelowego obszaru nazw.</xref:System.Xml.XmlReader>"
  remarks: "Metoda InferSchema wnioskuje jedną lub więcej schematów języka definicji schematu W3C XML (XSD) z pliku XML wystąpienia zawarte w dokumencie <xref:System.Xml.XmlReader>określony obiekt.</xref:System.Xml.XmlReader> Jeśli dokument XML zawiera elementy i atrybuty z kilku obszarów nazw, wiele schematów są generowane: jeden dla każdej przestrzeni nazw w dokumencie. Podstawowy schemat jest schemat, który można sprawdzić poprawności całego dokumentu XML, a jego docelowego obszaru nazw jest taka sama jak przestrzeń nazw elementu dokumentu dokumentu XML.       Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę podczas korzystania z metody InferSchema.      — Metoda InferSchema ignoruje wszelkie `xsi:type`, `xsi:schemaLocation`, lub `xsi:noNamespaceSchemaLocation` atrybutów w dokumencie XML.      -Jeśli <xref:System.Xml.XmlReader>jest typu obiektu, informacje o typie zawiera jest ignorowane.</xref:System.Xml.XmlReader>      -Jeśli <xref:System.Xml.XmlReader>obiekt znajduje się w elemencie, który nie jest elementem głównym dokumentu w formacie XML, schemat jest wywnioskowany tylko tego elementu.</xref:System.Xml.XmlReader> Jeśli <xref:System.Xml.XmlReader>obiekt nie znajduje się w elemencie <xref:System.Xml.XmlReader.Read%2A>wywoływana jest metoda <xref:System.Xml.XmlReader>parametru aż do napotkania elementu (na przykład, gdy <xref:System.Xml.XmlReader.NodeType%2A>jest <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> W tym momencie proces wnioskowania rozpoczyna się od tego elementu. Jeśli żaden element nie jest napotkane do końca dokumentu, <xref:System.ArgumentException>jest generowany.</xref:System.ArgumentException>      -Jeśli <xref:System.Xml.Schema.XmlSchemaSet>obiekt został przekazany jako parametr i element, na którym <xref:System.Xml.XmlReader>obiekt znajduje się jest zdefiniowany w jednym ze schematów w <xref:System.Xml.Schema.XmlSchemaSet>, wywnioskowany schemat jest używany do zaktualizowania schematu w <xref:System.Xml.Schema.XmlSchemaSet>parametr o tej samej docelowego obszaru nazw; w przeciwnym razie jest wywnioskowany nowego schematu dla przestrzeni nazw.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Obiekt, który zawiera kod XML dokumentu można pobrać schematu z.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Obiekt zawierający schematu pozwala uściślić wnioskowany schematu."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Obiekt zawierający wnioskowany schematów."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Dokument XML nie jest poprawnie sformułowany."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "<xref:System.Xml.XmlReader>Obiekt nie znajduje się w węźle głównym lub w elemencie.</xref:System.Xml.XmlReader> Wystąpi błąd podczas wnioskowania schematu."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera lub ustawia <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>wartość, która wpływa na deklaracje wystąpienie schematu wywnioskować z dokumentu XML.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Jeśli ustawiono właściwość wystąpienie <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>pierwszych elementów czasu występują w dokumencie XML, deklaracja schematu jest wywnioskowany jako `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> W przypadku atrybutów są deklaracja schematu jest wywnioskowany jako `use=&quot;required&quot;`.       Jeśli ustawiono właściwość wystąpienie <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, deklaracji elementu schematu są wywnioskować jako `minOccurs=&quot;0&quot;`, i atrybutu deklaracji schematów są wywnioskować jako `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Wartość domyślna właściwości wystąpienia jest <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>Obiektu.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera lub ustawia <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>wartość, która wpływa na typy wywnioskować z dokumentu XML.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Jeśli ustawiono właściwość TypeInference <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, wnioskowany typ elementów i atrybutów w dokumencie XML z prostej zawartości jest zawsze `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Jeśli ustawiono właściwość TypeInference <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, więcej określonych typów są wywnioskować, takich jak `xs:date`, `xs:decimal`, `xs:unsignedByte`itd.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Wartość domyślna właściwości TypeInference to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>Obiektu.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
