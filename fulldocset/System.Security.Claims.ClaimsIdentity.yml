### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.ClaimsIdentity
  id: ClaimsIdentity
  children:
  - System.Security.Claims.ClaimsIdentity.#ctor
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.Actor
  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.AuthenticationType
  - System.Security.Claims.ClaimsIdentity.BootstrapContext
  - System.Security.Claims.ClaimsIdentity.Claims
  - System.Security.Claims.ClaimsIdentity.Clone
  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.CustomSerializationData
  - System.Security.Claims.ClaimsIdentity.DefaultIssuer
  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  - System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.IsAuthenticated
  - System.Security.Claims.ClaimsIdentity.Label
  - System.Security.Claims.ClaimsIdentity.Name
  - System.Security.Claims.ClaimsIdentity.NameClaimType
  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.RoleClaimType
  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
  type: Class
  summary: "Reprezentuje tożsamość usługi opartej na oświadczeniach."
  remarks: "Klasa ClaimsIdentity jest konkretną implementację tożsamości opartego na oświadczeniach; oznacza to, że tożsamość opisanego przez kolekcję oświadczeń. Oświadczenia jest oświadczenie o jednostki przez wystawcę, który opisuje właściwość, prawo, lub inne jakości tej jednostki. Podmiot jest określany jako przedmiotem reklamacji. Oświadczenia jest reprezentowany przez <xref:System.Security.Claims.Claim>klasę.</xref:System.Security.Claims.Claim> Jednostka, która reprezentuje odpowiedniego tożsamości, opisano oświadczeń zawartych w tożsamość ClaimsIdentity i może służyć do podjąć decyzje dotyczące autoryzacji i uwierzytelnianie. Modelu opartego na oświadczeniach dostępu ma wiele zalet w porównaniu z bardziej tradycyjnej modele dostępu, które opierają się wyłącznie w odniesieniu do ról. Na przykład oświadczenia zapewniają bardziej rozbudowane dużej ilości informacji o tożsamości reprezentują i może zostać obliczone dla uwierzytelniania lub autoryzacji w sposób znacznie bardziej szczegółowy.       Począwszy od programu .NET Framework 4.5, Windows Identity Foundation (WIF) i tożsamości opartego na oświadczeniach zostały pełni zintegrowane w programie .NET Framework. To oznacza, że wiele klas, które reprezentują tożsamość w programie .NET Framework teraz pochodzić od elementu ClaimsIdentity i opisano ich właściwości, za pomocą kolekcji oświadczeń. Ta lokalizacja jest inna z poprzednich wersji programu .NET Framework, w którym te klasy zaimplementowane <xref:System.Security.Principal.IIdentity>interfejsu bezpośrednio.</xref:System.Security.Principal.IIdentity> Kolekcja oświadczenia, które opisują tożsamości jest możliwy za pośrednictwem <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>Właściwości.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Klasa ClaimsIdentity udostępnia kilka metod do znajdowania i modyfikowania oświadczeń i w pełni obsługuje zintegrowane język zapytania (LINQ). W kodzie aplikacji ClaimsIdentity obiekty są zwykle dostępne za pośrednictwem <xref:System.Security.Claims.ClaimsPrincipal>obiektów; na przykład główny zwrócony przez <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsPrincipal>      > [!NOTE] > <xref:System.Security.Claims.ClaimsPrincipal>Klasa ma <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>również właściwość.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> W większości przypadków powinien uzyskiwać dostęp do oświadczeń użytkownika za pośrednictwem <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>kolekcji, a nie za pomocą <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>kolekcji.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> Konieczne będzie dostęp do oświadczeń poszczególnych ClaimsIdentity tylko w przypadkach, w których podmiot zabezpieczeń zawiera więcej niż jeden element ClaimsIdentity i należy ocenić lub zmodyfikować określonej tożsamości.      > [!IMPORTANT] > Aby dodać lub usunąć oświadczeń z <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>kolekcji, obiekt wywołujący musi mieć pełne zaufanie.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>       W modelu opartego na oświadczeniach <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>Właściwości i <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName>metody są implementowane przez obliczenia oświadczeń zawartych w tożsamości.</xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> Podstawowych implementacji w modelu opartego na oświadczeniach są dostarczane przez <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName>Właściwości i <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName>metody.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>Właściwości umożliwia określenia typu oświadczenia, które mają być używane do oceny oświadczeń zawartych przez tożsamość podczas przeprowadzania tych operacji.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>       Delegowanie scenariusze są obsługiwane przez <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>i <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>Właściwości.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ClaimsIdentity : System.Security.Principal.IIdentity
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasie z pustą oświadczeń kolekcji."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Pustej kolekcji. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity ();
    parameters: []
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> przy użyciu kolekcji wyliczeniowej z <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> obiektów."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Zainicjowana z `claims` parametru. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczeń, z którą ma zostać wypełnić tożsamość oświadczeń."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public ClaimsIdentity (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Do dodania."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasy z szeregowanego strumienia utworzone za pomocą <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Dane serializowane."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);
    parameters:
    - id: other
      type: System.Security.Claims.ClaimsIdentity
      description: "Do dodania."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> przy użyciu nazwy i uwierzytelniania typu z określonego <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>"
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.Actor` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Wartość `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>) właściwość jest używana. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.BootStrapContext` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, oświadczeń z `identity` są dodawane do nowego wystąpienia; w przeciwnym razie pustej kolekcji. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.Label` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Jeśli `identity` nie można przypisać elementu z <xref:System.Security.Claims.ClaimsIdentity>, nie jest `null`i ma <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>właściwość, która nie jest `null`; oświadczenia nazwy jest dodawany do nowego wystąpienia przy użyciu wartości <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>Właściwości.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.NameClaimType` właściwości jest używany; w przeciwnym razie jest używana <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.RoleClaimType` właściwość jest używany; w przeciwnym razie <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>jest używany. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Tożsamość, z którego mają zostać utworzone nowe tożsamości oświadczeń."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasy z pustą oświadczeń kolekcji i określonego typu uwierzytelniania."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Wartość `authenticationType` parametru.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Jeśli `authenticationType` parametr jest `null` lub pusty ciąg, wartość właściwości jest równa `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Pustej kolekcji. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (string authenticationType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "Typ uwierzytelniania."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> z określone oświadczenia i typ uwierzytelniania."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Wartość `authenticationType` parametru.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Jeśli `authenticationType` parametr jest `null` lub pusty ciąg, wartość właściwości jest równa `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Zainicjowana z `claims` parametru. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczeń, z którą ma zostać wypełnić tożsamość oświadczeń."
    - id: authenticationType
      type: System.String
      description: "Typ uwierzytelniania."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasy z szeregowanego strumienia utworzone za pomocą <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Dane serializowane."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontekst serializacji."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> przy użyciu określonego oświadczeń i określony <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>"
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.Actor` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `authenticationType` Parametru.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Jeśli `authenticationType` parametr jest `null` lub pusty ciąg, wartość `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>) właściwość jest używana. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.BootStrapContext` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Zainicjowana z `claims` parametru.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, oświadczeń z `identity` zostaną dodane do nowego wystąpienia przed określonych `claims` parametru. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.Label` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Jeśli `identity` nie można przypisać elementu z <xref:System.Security.Claims.ClaimsIdentity>, nie jest `null`i ma <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>właściwość, która nie jest `null`; oświadczenia nazwy jest dodawany do nowego wystąpienia przy użyciu wartości <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>Właściwości.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.NameClaimType` właściwości jest używany; w przeciwnym razie jest używana <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.RoleClaimType` właściwość jest używany; w przeciwnym razie <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>jest używany. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Tożsamość, z którego mają zostać utworzone nowe tożsamości oświadczeń."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczeń, z którą ma zostać wypełnić tożsamość oświadczeń."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> typu oświadczenia z podanego typu uwierzytelniania, nazwa typu oświadczenia i roli."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Wartość `authenticationType` parametru.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Jeśli `authenticationType` parametr jest `null` lub pusty ciąg, wartość właściwości jest równa `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Pustej kolekcji. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Wartość `nameType` parametru.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Jeśli `nameType` parametr ma wartość null lub pusty ciąg, wartość właściwości jest równa <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Wartość `roleType` parametru.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> Jeśli `roleType` parametr ma wartość null lub pusty ciąg, wartość właściwości jest równa <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (string authenticationType, string nameType, string roleType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "Typ uwierzytelniania."
    - id: nameType
      type: System.String
      description: "Typ oświadczenia używany dla nazwy oświadczenia."
    - id: roleType
      type: System.String
      description: "Typ oświadczenia używany dla oświadczeń roli."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> typu oświadczenia z określone oświadczenia, typ uwierzytelniania, nazwa typu oświadczenia i roli."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| Wartość `authenticationType` parametru.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Jeśli `authenticationType` parametr jest `null` lub pusty ciąg, wartość właściwości jest równa `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Zainicjowana z `claims` parametru. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Wartość `nameType` parametru.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Jednak jeśli `nameType` parametr jest `null` lub pusty ciąg, wartość właściwości jest równa <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Wartość `roleClaimType` parametru.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> Jednak jeśli `roleClaimType` parametr jest `null` lub pusty ciąg, wartość właściwości jest równa <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczeń, z którą ma zostać wypełnić tożsamość oświadczeń."
    - id: authenticationType
      type: System.String
      description: "Typ uwierzytelniania."
    - id: nameType
      type: System.String
      description: "Typ oświadczenia używany dla nazwy oświadczenia."
    - id: roleType
      type: System.String
      description: "Typ oświadczenia używany dla oświadczeń roli."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasy z określonego <xref:System.Security.Principal.IIdentity>przy użyciu określone oświadczenia, typ uwierzytelniania, nazwa typu oświadczenia i rola z oświadczeniem.</xref:System.Security.Principal.IIdentity>"
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Security.Claims.ClaimsIdentity>klasy.</xref:System.Security.Claims.ClaimsIdentity>      | Właściwość | Wartość |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.Actor` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `authenticationType` Parametru.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Jeśli `authenticationType` parametr jest `null` lub pusty ciąg, wartość `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>) właściwość jest używana. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.BootStrapContext` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Zainicjowana z `claims` parametru.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, oświadczeń z `identity` zostaną dodane do nowego wystąpienia przed określonych `claims` parametru. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>jest zwróconych na podstawie wartości właściwości <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Jeśli `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.Label` właściwość; w przeciwnym razie `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Jeśli `identity` nie można przypisać elementu z <xref:System.Security.Claims.ClaimsIdentity>, nie jest `null`i ma <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>właściwość, która nie jest `null`; oświadczenia nazwy jest dodawany do nowego wystąpienia przy użyciu wartości <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>Właściwości.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Uwaga:** podczas uzyskiwania dostępu do, wartość właściwości <xref:System.Security.Claims.ClaimsIdentity.Name%2A>jest zwróconych na podstawie <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>i kolekcji <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Wartość `nameType` parametru.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> Jednak jeśli wartość `nameType` parametr jest `null` lub ciąg pusty i `identity` można przypisać z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.NameClaimType` właściwości jest używany; w przeciwnym razie jest używana <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Wartość `roleClaimType` parametru.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> Jednak jeśli wartość `roleClaimType` parametr jest `null` lub pusty ciąg i tożsamości jest z <xref:System.Security.Claims.ClaimsIdentity>, wartość `identity.RoleClaimType` właściwość jest używany; w przeciwnym razie <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>jest używany. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Tożsamość, z którego mają zostać utworzone nowe tożsamości oświadczeń."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczeń, z którą ma zostać wypełnić nową tożsamość oświadczeń."
    - id: authenticationType
      type: System.String
      description: "Typ uwierzytelniania."
    - id: nameType
      type: System.String
      description: "Typ oświadczenia używany dla nazwy oświadczenia."
    - id: roleType
      type: System.String
      description: "Typ oświadczenia używany dla oświadczeń roli."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Actor
  id: Actor
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera lub ustawia tożsamość strony udzielonego uprawnienia delegowania."
  remarks: "Aplikacja ma dostęp do łańcucha delegowania, które doprowadziło do bieżącego wywołania przez rekursywnie badanie właściwości aktora. Token w imieniu którego jest delegowanie wywołanie jest możliwy za pośrednictwem <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>Właściwości.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Actor { get; set; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Strona wywoływania przyznano uprawnienia delegowania."
  overload: System.Security.Claims.ClaimsIdentity.Actor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Występuje, próba ustawienia właściwości do bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  id: AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Dodaje jedno oświadczenie do tego oświadczenia tożsamości."
  remarks: "Oświadczenie się zbadana i, gdy podmiot jest inny niż to oświadczeń tożsamości, <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>Metoda jest wywoływana z to oświadczeń tożsamości jako parametru, aby utworzyć nowe oświadczenie o poprawne podmiotu.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Ta metoda ma `SecurityCritical` atrybut zastosowany do sterowania jednostek, które można dodać oświadczeń tożsamości. Dodatkowo w dół potoku, decyzji dotyczących autoryzacji są wykonywane na podstawie oświadczenia, które znajdują się w <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>kolekcji.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "Oświadczenie do dodania."
  overload: System.Security.Claims.ClaimsIdentity.AddClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Dodaje się, że lista oświadczeń do tego oświadczenia tożsamości."
  remarks: "Każde oświadczenie się zbadana i, gdy podmiot jest inny niż to oświadczeń tożsamości, <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>Metoda jest wywoływana z to oświadczeń tożsamości jako parametru, aby utworzyć nowe oświadczenie o poprawne podmiotu.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Ta metoda ma `SecurityCritical` atrybut zastosowany do sterowania jednostek, które można dodać oświadczeń tożsamości. Dodatkowo w dół potoku, decyzji dotyczących autoryzacji są wykonywane na podstawie oświadczenia, które znajdują się w <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>kolekcji.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaims (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczenia do dodania."
  overload: System.Security.Claims.ClaimsIdentity.AddClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claims</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera typ uwierzytelniania."
  remarks: "Zazwyczaj jedną z wartości zdefiniowanych przez <xref:System.Security.Claims.AuthenticationTypes>klasę.</xref:System.Security.Claims.AuthenticationTypes>"
  syntax:
    content: public virtual string AuthenticationType { get; }
    return:
      type: System.String
      description: "Typ uwierzytelniania."
  overload: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  id: BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera lub ustawia token, który został użyty do utworzenia tego oświadczenia tożsamości."
  remarks: "The underlying object is an instance of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class.  \n  \n Set the `saveBootstrapContext` attribute on either the [\\&lt;identityConfiguration\\&gt;](../Topic/%3CidentityConfiguration%3E.md) or the [\\&lt;securityTokenHandlerConfiguration\\&gt;](../Topic/%3CsecurityTokenHandlerConfiguration%3E.md) element in a configuration file to specify whether the token used to generate the <xref:System.Security.Claims.ClaimsIdentity> should be preserved in the BootstrapContext property.  \n  \n If the BootstrapContext property is not `null`, applications can access the original token and the claims it produced through the properties and methods of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class."
  syntax:
    content: public object BootstrapContext { get; set; }
    return:
      type: System.Object
      description: "Kontekst ładowania początkowego."
  overload: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Claims
  id: Claims
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera oświadczenia skojarzonego z tym oświadczeń tożsamości."
  remarks: "Kolekcja może zawierać wpisów, które są `null`.       Jednostka, która jest reprezentowana przez <xref:System.Security.Claims.ClaimsIdentity>.</xref:System.Security.Claims.ClaimsIdentity> opisano oświadczeń zawartych w kolekcji oświadczeń zasadniczo Oświadczenia opisu właściwości i prawa posiadane przez podmiot i jest zbadanie przez aplikacje do podejmowania decyzji o uwierzytelnianiu i autoryzacji.      > [!NOTE] > <xref:System.Security.Claims.ClaimsPrincipal>Klasa ma <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>również właściwość.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> W większości przypadków powinien uzyskiwać dostęp do oświadczeń użytkownika za pośrednictwem <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>kolekcji, a nie za pomocą kolekcji oświadczeń.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> Konieczne będzie dostęp do oświadczeń indywidualnego <xref:System.Security.Claims.ClaimsIdentity>tylko w przypadkach, w których podmiot zabezpieczeń zawiera więcej niż jedną <xref:System.Security.Claims.ClaimsIdentity>i trzeba obliczyć lub zmodyfikować określonej tożsamości.</xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Kolekcja oświadczeń skojarzone z tym oświadczeń tożsamości."
  overload: System.Security.Claims.ClaimsIdentity.Claims*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Clone
  id: Clone
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Zwraca nowy <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> skopiowanych z to oświadczeń tożsamości."
  syntax:
    content: public virtual System.Security.Claims.ClaimsIdentity Clone ();
    parameters: []
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Kopię bieżącego wystąpienia."
  overload: System.Security.Claims.ClaimsIdentity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  id: CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Do dodania."
    return:
      type: System.Security.Claims.Claim
      description: "Do dodania."
  overload: System.Security.Claims.ClaimsIdentity.CreateClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: "Do dodania."
  overload: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  id: DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Wystawca domyślne; &quot;URZĄD LOKALNY&quot;."
  syntax:
    content: public const string DefaultIssuer;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  id: DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Nazwa domyślnego typu; oświadczenia <xref href=&quot;System.Security.Claims.ClaimTypes.Name&quot;></xref>."
  syntax:
    content: public const string DefaultNameClaimType;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  id: DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Domyślna rola oświadczeń typu. <xref href=&quot;System.Security.Claims.ClaimTypes.Role&quot;></xref>."
  syntax:
    content: public const string DefaultRoleClaimType;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  id: FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera wszystkie oświadczenia, które są dopasowane przez określony predykat."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "Funkcja, która wykonuje logika dopasowywania."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczenia zgodne. Lista jest tylko do odczytu."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  id: FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera wszystkie oświadczenia, które mają określonego typu oświadczenia."
  remarks: "Porównanie jest utworzone za pomocą liczby porządkowej przypadku wrażliwe na `type`."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (string type);
    parameters:
    - id: type
      type: System.String
      description: "Typ oświadczenia, względem którego odpowiadające oświadczeń."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Oświadczenia zgodne. Lista jest tylko do odczytu."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  id: FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera pierwszego oświadczenia dostosowanego przez określony predykat."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "Funkcja, która wykonuje logika dopasowywania."
    return:
      type: System.Security.Claims.Claim
      description: "Pierwszy dopasowywania oświadczeń lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeżeli nie znaleziono."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera pierwszego oświadczenia z określonego typu oświadczenia."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (string type);
    parameters:
    - id: type
      type: System.String
      description: "Typ oświadczenia do dopasowania."
    return:
      type: System.Security.Claims.Claim
      description: "Pierwszy dopasowywania oświadczeń lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeżeli nie znaleziono."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Wypełnia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> z dane potrzebne do serializacji bieżącego <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> obiektu."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Obiekt do wypełniania danych."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Lokalizacja docelowa tej serializacji. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Claims.ClaimsIdentity.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  id: HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Określa, czy oświadczenia tożsamości ma oświadczenie, które jest uwzględniony przez określony predykat."
  syntax:
    content: public virtual bool HasClaim (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "Funkcja, która wykonuje logika dopasowywania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli oświadczenie zgodne istnieje; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  id: HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Określa, czy oświadczenia tożsamości ma oświadczenia z określonym oświadczeń, typ i wartość."
  remarks: "Nie sprawdza <xref:System.Security.Claims.Claim.Issuer%2A>lub <xref:System.Security.Claims.Claim.OriginalIssuer%2A>Właściwości.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A> Porównanie jest utworzone za pomocą porządkową, z uwzględnieniem wielkości liter w wartości. w przypadku liter w typie."
  syntax:
    content: public virtual bool HasClaim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: "Typ oświadczenia do dopasowania."
    - id: value
      type: System.String
      description: "Wartość oświadczenia do dopasowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zostanie znaleziony odpowiednik; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**.       -or-       <code>value</code> is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera wartość wskazującą, czy została ona uwierzytelniona tożsamość."
  remarks: '`true`Jeśli <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>właściwość nie jest `null` ani pustym ciągiem.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>'
  syntax:
    content: public virtual bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli została ona uwierzytelniona tożsamość; w przeciwnym razie **false**."
  overload: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Label
  id: Label
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera lub ustawia etykietę dla tego oświadczenia tożsamości."
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "Etykieta."
  overload: System.Security.Claims.ClaimsIdentity.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Name
  id: Name
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera nazwę tego oświadczenia tożsamości."
  remarks: "Zwraca wartość pierwszego oświadczenia z typem, który odpowiada nazwie oświadczenie typu w <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>Właściwości.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> Jeśli żadnego oświadczenia zostanie znaleziony, który jest zgodny z typem oświadczenia nazwy, zwraca `null`."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "Nazwa lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  id: NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera typ oświadczenia, który służy do określania, jakie oświadczenia Podaj wartość dla <xref:System.Security.Claims.ClaimsIdentity.Name*>właściwości tego oświadczenia tożsamości.</xref:System.Security.Claims.ClaimsIdentity.Name*>"
  remarks: "Właściwość NameClaimType Określa typ oświadczenia (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) używany do określenia nazwy dla tej tożsamości.</xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> Nazwa jest dostępny za pośrednictwem <xref:System.Security.Claims.ClaimsIdentity.Name%2A>Właściwości.</xref:System.Security.Claims.ClaimsIdentity.Name%2A>       Ta właściwość jest ustawiana przez konstruktora."
  syntax:
    content: public string NameClaimType { get; }
    return:
      type: System.String
      description: "Nazwa typu oświadczenia."
  overload: System.Security.Claims.ClaimsIdentity.NameClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  id: RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Próbuje usunąć oświadczenia z tożsamości oświadczeń."
  remarks: "Istnieje możliwość, że oświadczenia nie można usunąć, ponieważ nie jest właścicielem tożsamości. Na przykład będzie to w przypadku oświadczeń roli, które są własnością podmiotu zabezpieczeń. W odróżnieniu od <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>metodę, która zwraca wartość logiczną, wskazującą, czy oświadczenie tak, aby zostały usunięte, RemoveClaim zgłasza wyjątek, jeśli nie można usunąć oświadczenia określone oświadczenie jest uwzględniony przez odwołanie do obiektu (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A> </xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>       Ta metoda ma `SecurityCritical` atrybut zastosowany do sterowania jednostek, które można usunąć oświadczenia z tożsamości. Dodatkowo w dół potoku, decyzji dotyczących autoryzacji są wykonywane na podstawie oświadczenia, które znajdują się w <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>kolekcji.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void RemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "Oświadczenie do usunięcia."
  overload: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie można usunąć oświadczenia."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  id: RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pobiera typ oświadczenia, który będzie interpretowana jako roli platformy .NET Framework między oświadczeń w tym oświadczenia tożsamości."
  remarks: "Typ oświadczenia roli jest typ oświadczenia (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) używanego podczas oceniania tej tożsamości dla <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>metody.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>Metoda jest wywoływana w celu ustalenia, czy bieżący podmiot zabezpieczeń znajduje się w określonej roli.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> Modelu opartego na oświadczeniach rozszerza ten test, aby użyć oświadczeń przedstawiony przez podmiot zabezpieczeń. A <xref:System.Security.Claims.ClaimsPrincipal>obiekt może zawierać jeden lub więcej <xref:System.Security.Claims.ClaimsIdentity>obiektów i każdego obiektu tożsamości może zawierać wiele <xref:System.Security.Claims.Claim>obiektów.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsPrincipal> Właściwość RoleClaimType Określa typ oświadczenia oświadczenia, które mają być używane do Podaj wartość dla roli, oceniając to <xref:System.Security.Claims.ClaimsIdentity>obiektu.</xref:System.Security.Claims.ClaimsIdentity> Właściwość jest ustawiona przez konstruktora. Typowe wartości to <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>.</xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>"
  syntax:
    content: public string RoleClaimType { get; }
    return:
      type: System.String
      description: "Typ oświadczenia roli."
  overload: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  id: TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Próbuje usunąć oświadczenia z tożsamości oświadczeń."
  remarks: "Istnieje możliwość, że oświadczenia nie można usunąć, ponieważ nie jest właścicielem tożsamości. Na przykład będzie to w przypadku oświadczeń roli, które są własnością podmiotu zabezpieczeń.       Określone oświadczenie jest uwzględniony przez odwołanie do obiektu (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A>       Ta metoda ma `SecurityCritical` atrybut zastosowany do sterowania jednostek, które można usunąć oświadczenia z tożsamości. Dodatkowo w dół potoku, decyzji dotyczących autoryzacji są wykonywane na podstawie oświadczenia, które znajdują się w <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>kolekcji.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "Oświadczenie do usunięcia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli oświadczenie został pomyślnie usunięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Do dodania."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Do dodania."
    - id: userData
      type: System.Byte[]
      description: "Do dodania."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.Actor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  isExternal: true
  name: Predicate<Claim>
  nameWithType: Predicate<Claim>
  fullName: System.Predicate<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
- uid: System.Security.Claims.ClaimsIdentity.#ctor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.Actor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim
  nameWithType: ClaimsIdentity.AddClaim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims
  nameWithType: ClaimsIdentity.AddClaims
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone
  nameWithType: ClaimsIdentity.Clone
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim
  nameWithType: ClaimsIdentity.CreateClaim
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
- uid: System.Security.Claims.ClaimsIdentity.FindAll*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll
  nameWithType: ClaimsIdentity.FindAll
- uid: System.Security.Claims.ClaimsIdentity.FindFirst*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst
  nameWithType: ClaimsIdentity.FindFirst
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData
  nameWithType: ClaimsIdentity.GetObjectData
- uid: System.Security.Claims.ClaimsIdentity.HasClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim
  nameWithType: ClaimsIdentity.HasClaim
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim
  nameWithType: ClaimsIdentity.RemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim
  nameWithType: ClaimsIdentity.TryRemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.WriteTo*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo
  nameWithType: ClaimsIdentity.WriteTo
