### YamlMime:ManagedReference
items:
- uid: System.ConsoleKeyInfo
  id: ConsoleKeyInfo
  children:
  - System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  - System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.Equals(System.Object)
  - System.ConsoleKeyInfo.GetHashCode
  - System.ConsoleKeyInfo.Key
  - System.ConsoleKeyInfo.KeyChar
  - System.ConsoleKeyInfo.Modifiers
  - System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  langs:
  - csharp
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
  type: Struct
  summary: "W tym artykule opisano klucz konsoli, który został naciśnięty, włączając znak reprezentowany przez klucz konsoli i stan klawisze modyfikujące SHIFT, ALT i CTRL."
  remarks: "Typ ConsoleKeyInfo nie mają zostać utworzone przez użytkowników. Zamiast tego jest zwracany do użytkownika w odpowiedzi na wywołanie <xref:System.Console.ReadKey%2A?displayProperty=fullName>metody.</xref:System.Console.ReadKey%2A?displayProperty=fullName>       Zawiera opis obiektu ConsoleKeyInfo <xref:System.ConsoleKey>stała i znak Unicode, który odpowiada klucz naciśniętego konsoli.</xref:System.ConsoleKey> Obiekt ConsoleKeyInfo opisuje również, z bitowego połączenia <xref:System.ConsoleModifiers>wartości, czy co najmniej jeden SHIFT, ALT i CTRL klawisze modyfikujące naciśnięto jednocześnie z kluczem konsoli.</xref:System.ConsoleModifiers>"
  example:
  - "The following example demonstrates using a ConsoleKeyInfo object in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/t-system.consolekeyinfo_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/t-system.consolekeyinfo_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/t-system.consolekeyinfo_1.vb)]"
  syntax:
    content: public struct ConsoleKeyInfo
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> struktury przy użyciu określony znak, klucza konsoli i klawisze modyfikujące."
  remarks: "Tego typu nie mają być tworzone przez użytkowników. Zamiast tego jest zwracany do użytkownika w odpowiedzi na wywołanie <xref:System.Console.ReadKey%2A?displayProperty=fullName>metody.</xref:System.Console.ReadKey%2A?displayProperty=fullName>       <xref:System.ConsoleKeyInfo>Typ określa, czy lewego lub prawego SHIFT, ALT i CTRL klawisz modyfikujący został naciśnięty.</xref:System.ConsoleKeyInfo>"
  syntax:
    content: public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);
    parameters:
    - id: keyChar
      type: System.Char
      description: "Znak Unicode, który odpowiada `key` parametru."
    - id: key
      type: System.ConsoleKey
      description: "Klucz konsoli, który odpowiada `keyChar` parametru."
    - id: shift
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że został naciśnięty klawisz SHIFT; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: alt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że został naciśnięty klawisz ALT; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że został naciśnięty klawisz CTRL; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość numeryczna <code> key </code> parametru jest mniejszy niż 0 lub większą niż 255."
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  id: Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą czy określonego <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiekt jest taki sam, jak bieżący <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
  remarks: "Dwa <xref:System.ConsoleKeyInfo>obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A>Właściwości są takie same.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>       Metody Equals wykonuje nieco lepszym rozwiązaniem niż <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>metody, ponieważ nie muszą być konwertowane `obj` do obiektu.</xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>"
  syntax:
    content: public bool Equals (ConsoleKeyInfo obj);
    parameters:
    - id: obj
      type: System.ConsoleKeyInfo
      description: "Obiekt do porównania z bieżącą <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> obj </code> jest taki sam, jak bieżący <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera wartość wskazującą, czy określony obiekt jest taki sam, jak bieżący <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
  remarks: "Dwa <xref:System.ConsoleKeyInfo>obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A>Właściwości są takie same.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  example:
  - "The following example demonstrates the Equals method.  \n  \n [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._0_1.cpp)]\n [!code-cs[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._0_1.cs)]\n [!code-vb[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do porównania z bieżącą <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> value </code> jest <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu i jest taki sam, jak bieżący <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.GetHashCode
  id: GetHashCode
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zwraca wartość skrótu dla bieżącego <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
  remarks: "Wartość zwrócona przez metodę GetHashCode nie nadaje się do rozróżniania jedną <xref:System.ConsoleKeyInfo>obiekt od drugiego.</xref:System.ConsoleKeyInfo> Jeśli aplikacja wymaga unikatową wartość skrótu, należy zastąpić metodę GetHashCode z własnej metody."
  example:
  - "The following example demonstrates the GetHashCode method.  \n  \n [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._1_1.vb)]\n [!code-cs[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._1_1.cs)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.ConsoleKeyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Key
  id: Key
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera klucz konsoli reprezentowany przez bieżący <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
  remarks: ''
  example:
  - "The following example demonstrates using a Key property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._0_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._0_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public ConsoleKey Key { get; }
    return:
      type: System.ConsoleKey
      description: "Wartość, która identyfikuje klucz konsoli, który został naciśnięty."
  overload: System.ConsoleKeyInfo.Key*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.KeyChar
  id: KeyChar
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera reprezentowany przez bieżący znak Unicode <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
  remarks: "Jeśli naciśnięto klawisz nie jest zmapowany na znak Unicode (na przykład w przypadku, gdy użytkownik naciśnie **F1** klucza lub **Home** klucza), wartość właściwości KeyChar jest \\U0000."
  example:
  - "The following example uses the KeyChar property to add the characters input by the user into a string. The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.  \n  \n [!code-cs[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._2_1.cs)]\n [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._2_1.vb)]"
  syntax:
    content: public char KeyChar { get; }
    return:
      type: System.Char
      description: "Obiekt, który odpowiada kluczowi konsoli reprezentowany przez bieżący <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiektu."
  overload: System.ConsoleKeyInfo.KeyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Modifiers
  id: Modifiers
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera bitowe połączenie <xref href=&quot;System.ConsoleModifiers&quot;> </xref> wartości, które określają jedną lub więcej klawisze modyfikujące jednocześnie naciśnięty klawisz konsoli."
  remarks: ''
  example:
  - "The following example demonstrates using a Modifiers property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._1_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._1_1.vb)]"
  syntax:
    content: public ConsoleModifiers Modifiers { get; }
    return:
      type: System.ConsoleModifiers
      description: "Bitowe połączenie wartości wyliczenia. Brak wartości domyślnej."
  overload: System.ConsoleKeyInfo.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "Wskazuje, czy określony <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiekty są takie same."
  remarks: "Dwa <xref:System.ConsoleKeyInfo>obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A>Właściwości są takie same.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Equality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "Pierwszy obiekt do porównania."
    - id: b
      type: System.ConsoleKeyInfo
      description: "Drugi obiekt do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "Wskazuje, czy określony <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> obiekty nie są takie same."
  remarks: "Dwa <xref:System.ConsoleKeyInfo>obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A>Właściwości są takie same.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Inequality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "Pierwszy obiekt do porównania."
    - id: b
      type: System.ConsoleKeyInfo
      description: "Drugi obiekt do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ConsoleKey
  parent: System
  isExternal: false
  name: ConsoleKey
  nameWithType: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ConsoleKeyInfo.GetHashCode
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ConsoleKeyInfo.Key
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
- uid: System.ConsoleModifiers
  parent: System
  isExternal: false
  name: ConsoleModifiers
  nameWithType: ConsoleModifiers
  fullName: System.ConsoleModifiers
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.#ctor*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals
  nameWithType: ConsoleKeyInfo.Equals
- uid: System.ConsoleKeyInfo.GetHashCode*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: ConsoleKeyInfo.GetHashCode
- uid: System.ConsoleKeyInfo.Key*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
- uid: System.ConsoleKeyInfo.op_Equality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality
  nameWithType: ConsoleKeyInfo.op_Equality
- uid: System.ConsoleKeyInfo.op_Inequality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality
  nameWithType: ConsoleKeyInfo.op_Inequality
