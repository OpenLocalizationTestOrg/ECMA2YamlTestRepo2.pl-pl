### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageSecurityOverMsmq
  id: MessageSecurityOverMsmq
  children:
  - System.ServiceModel.MessageSecurityOverMsmq.#ctor
  - System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  - System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  langs:
  - csharp
  name: MessageSecurityOverMsmq
  nameWithType: MessageSecurityOverMsmq
  fullName: System.ServiceModel.MessageSecurityOverMsmq
  type: Class
  summary: "Umożliwia ustawienie właściwości zabezpieczenia na poziomie komunikatu na <xref href=&quot;System.ServiceModel.NetMsmqBinding&quot;> </xref> powiązania."
  remarks: "Ten obiekt jest dostępny z powiązanie przez <xref:System.ServiceModel.NetMsmqBinding.Security%2A>właściwość, która zwraca <xref:System.ServiceModel.NetMsmqSecurity>obiektu.</xref:System.ServiceModel.NetMsmqSecurity> </xref:System.ServiceModel.NetMsmqBinding.Security%2A> Ten obiekt zawiera <xref:System.ServiceModel.NetMsmqSecurity.Message%2A>właściwość, która zawiera odwołanie do obiektu MessageSecurityOverMsmq.</xref:System.ServiceModel.NetMsmqSecurity.Message%2A>"
  example:
  - >-
    [!code-vb[UEMessageSecurityOverMsmq#1](~/add/codesnippet/visualbasic/t-system.servicemodel.me_1_1.vb)]
     [!code-cs[UEMessageSecurityOverMsmq#1](~/add/codesnippet/csharp/t-system.servicemodel.me_1_1.cs)]
  syntax:
    content: public sealed class MessageSecurityOverMsmq
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverMsmq.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageSecurityOverMsmq
  langs:
  - csharp
  name: MessageSecurityOverMsmq()
  nameWithType: MessageSecurityOverMsmq.MessageSecurityOverMsmq()
  fullName: System.ServiceModel.MessageSecurityOverMsmq.MessageSecurityOverMsmq()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.MessageSecurityOverMsmq&quot;> </xref> klasy."
  syntax:
    content: public MessageSecurityOverMsmq ();
    parameters: []
  overload: System.ServiceModel.MessageSecurityOverMsmq.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  id: AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverMsmq
  langs:
  - csharp
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverMsmq.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Określa pakiet algorytmów dla wiadomości zabezpieczeń na poziomie protokołu SOAP."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>definiuje różne algorytmy, takie jak zapewniania kanoniczności, Digest, KeyWrap, podpisu, szyfrowanie oraz keyderivation.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Ta właściwość jest najbardziej odpowiednie podczas pracy z platformą, który korzysta z zestawem algorytmów innych niż domyślne. Należy pamiętać o słabych algorytmów odpowiednich i podczas wprowadzania zmian do tej właściwości."
  example:
  - >-
    [!code-vb[UEMessageSecurityOverMsmq#2](~/add/codesnippet/visualbasic/p-system.servicemodel.me_1_1.vb)]
     [!code-cs[UEMessageSecurityOverMsmq#2](~/add/codesnippet/csharp/p-system.servicemodel.me_1_1.cs)]
  syntax:
    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "<xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> Ustawienia dla komunikatów wysyłanych za pośrednictwem <xref href=&quot;System.ServiceModel.NetMsmqBinding&quot;> </xref> powiązania."
  overload: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  id: ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverMsmq
  langs:
  - csharp
  name: ClientCredentialType
  nameWithType: MessageSecurityOverMsmq.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Pobiera lub ustawia <xref:System.ServiceModel.MessageCredentialType>Ustawienia zabezpieczeń dla komunikatów wysyłanych za pomocą transportu MSMQ.</xref:System.ServiceModel.MessageCredentialType>"
  remarks: "Tej właściwości można ustawić jedną z następujących wartości:- **Brak**: dzięki usłudze na współdziałanie z anonimowego klientów. Usługa ani klient wymagane jest podanie poświadczeń.      - **Windows**: umożliwia wymianę SOAP się pod uwierzytelnionego kontekstu poświadczenia systemu Windows. To jest zawsze przeprowadza uwierzytelnianie za pomocą protokołu Kerberos.      - **UserName**: dzięki temu usługi wymagać który uwierzytelnienia klienta przy użyciu poświadczeń UserName. To poświadczenie należy określić przy użyciu <xref:System.ServiceModel.Description.ClientCredentials>klasy.</xref:System.ServiceModel.Description.ClientCredentials>      > [!NOTE]  >   [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] nie obsługuje wysyłanie hasła klawiszy skrótu lub wyprowadzanie przy użyciu hasła i te klucze dla zabezpieczenia wiadomości. W efekcie [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] wymusza, że programu exchange jest zabezpieczone, korzystając z poświadczeń UserName. Ten tryb wymaga określenia certyfikatu usługi na kliencie przy użyciu `ClientCredential` zachowania i `serviceCertificate`:- `Certificate`: dzięki temu usługi wymagać który uwierzytelnienia klienta za pomocą certyfikatu. Poświadczenie klienta w takim przypadku należy określić przy użyciu <xref:System.ServiceModel.Description.ClientCredentials>klasy lub `ClientCredentials` zachowanie.</xref:System.ServiceModel.Description.ClientCredentials> Poświadczenia usługi w takim przypadku należy określić przy użyciu <xref:System.ServiceModel.Description.ClientCredentials>klasy lub `ClientCredentials` zachowanie, określając `serviceCertificate`.</xref:System.ServiceModel.Description.ClientCredentials>      - `InfoCard`: Dzięki temu usługi wymagać który uwierzytelnienia klienta za pomocą InfoCard. `serviceCertificate` Należy udostępnić w `ClientCredential` zachowanie.      -Poświadczenie certyfikatu dla `MessageSecurityOverMsmq` ma zastosowanie tylko wtedy, gdy tryb zabezpieczeń jest ustawiony na `Both` lub `Message`."
  example:
  - >-
    [!code-vb[UEMessageSecurityOverMsmq#3](~/add/codesnippet/visualbasic/p-system.servicemodel.me_4_1.vb)]
     [!code-cs[UEMessageSecurityOverMsmq#3](~/add/codesnippet/csharp/p-system.servicemodel.me_4_1.cs)]
  syntax:
    content: public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }
    return:
      type: System.ServiceModel.MessageCredentialType
      description: "<xref:System.ServiceModel.MessageCredentialType>Ustawienia zabezpieczeń dla komunikatów wysyłanych za pomocą transportu MSMQ.</xref:System.ServiceModel.MessageCredentialType>"
  overload: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.MessageSecurityOverMsmq.#ctor
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: MessageSecurityOverMsmq()
  nameWithType: MessageSecurityOverMsmq.MessageSecurityOverMsmq()
  fullName: System.ServiceModel.MessageSecurityOverMsmq.MessageSecurityOverMsmq()
- uid: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverMsmq.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverMsmq.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
- uid: System.ServiceModel.MessageCredentialType
  parent: System.ServiceModel
  isExternal: true
  name: MessageCredentialType
  nameWithType: MessageCredentialType
  fullName: System.ServiceModel.MessageCredentialType
- uid: System.ServiceModel.MessageSecurityOverMsmq.#ctor*
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: MessageSecurityOverMsmq
  nameWithType: MessageSecurityOverMsmq.MessageSecurityOverMsmq
- uid: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite*
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverMsmq.AlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType*
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverMsmq.ClientCredentialType
