### YamlMime:ManagedReference
items:
- uid: System.Reflection.TypeFilter
  id: TypeFilter
  langs:
  - csharp
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  summary: "Filtry klasy reprezentowane w tablicy <xref:System.Type>obiektów.</xref:System.Type>"
  remarks: "`TypeFilter` Delegata służy do filtrowania listy klas. W szczególności umożliwia ona filtrować klasy reprezentowane w tablicy <xref:System.Type>obiektów.</xref:System.Type> <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>Metoda używa tego obiektu delegowanego, aby filtrować listę interfejsów, które zwraca.</xref:System.Type.FindInterfaces%2A?displayProperty=fullName> Każda klasa pochodna z <xref:System.Delegate>i <xref:System.MulticastDelegate>ma Konstruktor i `DynamicInvoke` metody.</xref:System.MulticastDelegate> </xref:System.Delegate> Zapoznaj się z przykładem kodu Visual C++, podano w opisie `Delegate`."
  example:
  - "This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \n  \n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate bool TypeFilter(Type m, object filterCriteria);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
