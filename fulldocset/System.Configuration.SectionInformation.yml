### YamlMime:ManagedReference
items:
- uid: System.Configuration.SectionInformation
  id: SectionInformation
  children:
  - System.Configuration.SectionInformation.AllowDefinition
  - System.Configuration.SectionInformation.AllowExeDefinition
  - System.Configuration.SectionInformation.AllowLocation
  - System.Configuration.SectionInformation.AllowOverride
  - System.Configuration.SectionInformation.ConfigSource
  - System.Configuration.SectionInformation.ForceDeclaration
  - System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  - System.Configuration.SectionInformation.ForceSave
  - System.Configuration.SectionInformation.GetParentSection
  - System.Configuration.SectionInformation.GetRawXml
  - System.Configuration.SectionInformation.InheritInChildApplications
  - System.Configuration.SectionInformation.IsDeclarationRequired
  - System.Configuration.SectionInformation.IsDeclared
  - System.Configuration.SectionInformation.IsLocked
  - System.Configuration.SectionInformation.IsProtected
  - System.Configuration.SectionInformation.Name
  - System.Configuration.SectionInformation.OverrideMode
  - System.Configuration.SectionInformation.OverrideModeDefault
  - System.Configuration.SectionInformation.OverrideModeEffective
  - System.Configuration.SectionInformation.ProtectionProvider
  - System.Configuration.SectionInformation.ProtectSection(System.String)
  - System.Configuration.SectionInformation.RequirePermission
  - System.Configuration.SectionInformation.RestartOnExternalChanges
  - System.Configuration.SectionInformation.RevertToParent
  - System.Configuration.SectionInformation.SectionName
  - System.Configuration.SectionInformation.SetRawXml(System.String)
  - System.Configuration.SectionInformation.Type
  - System.Configuration.SectionInformation.UnprotectSection
  langs:
  - csharp
  name: SectionInformation
  nameWithType: SectionInformation
  fullName: System.Configuration.SectionInformation
  type: Class
  summary: "Zawiera metadane dotyczące poszczególnych sekcji w hierarchii konfiguracji. Ta klasa nie może być dziedziczona."
  remarks: "Obiekt SectionInformation zawiera metadane dotyczące poszczególnych sekcji w hierarchii konfiguracji. Ten obiekt może służyć do weryfikacji i zmiana właściwości poszczególnych sekcji."
  example:
  - "The following example shows how to get the SectionInformation metadata that is associated with a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#91](~/add/codesnippet/visualbasic/t-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#91](~/add/codesnippet/csharp/t-system.configuration.s_2_1.cs)]  \n  \n The following example is an excerpt of the configuration file that is used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <configSections>  \n    <section name=\"MyUrls\" type=\"Samples.AspNet.UrlsSection,  \n      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  \n      PublicKeyToken=null\" allowDefinition=\"Everywhere\"  \n      allowExeDefinition=\"MachineToApplication\"  \n      restartOnExternalChanges=\"true\" />  \n  </configSections>  \n  <MyUrls name=\"MyFavorites\">  \n    <simple name=\"Contoso\" url=\"http://www.contoso.com\" port=\"8080\" />  \n    <urls>  \n      <clear />  \n      <add name=\"Microsoft\" url=\"http://www.microsoft.com\" port=\"0\" />  \n    </urls>  \n  </MyUrls>  \n</configuration>  \n```"
  syntax:
    content: public sealed class SectionInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowDefinition
  id: AllowDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość, która wskazuje, gdzie w hierarchii pliku konfiguracji w sekcji konfiguracji skojarzone można zdefiniować."
  remarks: "AllowDefinition dotyczy tylko pliki konfiguracji aplikacji sieci Web. W przypadku aplikacji klienckich należy użyć <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_17_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_17_1.cs)]  \n  \n The following example gets the AllowDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#96](~/add/codesnippet/visualbasic/p-system.configuration.s_17_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#96](~/add/codesnippet/csharp/p-system.configuration.s_17_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowDefinition
      description: "Wartość wskazująca, gdzie w konfiguracji pliku hierarchii skojarzonych <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> mogą być deklarowane obiektu."
  overload: System.Configuration.SectionInformation.AllowDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Wybrana wartość konflikty z wartością, która jest już zdefiniowany."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  id: AllowExeDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość, która wskazuje, gdzie w hierarchii pliku konfiguracji w sekcji konfiguracji skojarzone mogą być deklarowane."
  remarks: "AllowExeDefinition dotyczy tylko pliki konfiguracji aplikacji klienckich. Dla aplikacji sieci Web należy użyć <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowExeDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_18_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_18_1.cs)]  \n  \n The following example gets the AllowExeDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#97](~/add/codesnippet/visualbasic/p-system.configuration.s_18_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#97](~/add/codesnippet/csharp/p-system.configuration.s_18_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowExeDefinition
      description: "Wartość wskazująca, gdzie w konfiguracji pliku hierarchii skojarzonych <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> obiektu mogą być deklarowane plików .exe."
  overload: System.Configuration.SectionInformation.AllowExeDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Wybrana wartość konflikty z wartością, która jest już zdefiniowany."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowLocation
  id: AllowLocation
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy sekcja konfiguracji umożliwia <xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;> </xref> atrybutu."
  remarks: "Jeśli wartość `false`, właściwość AllowLocation wskazuje, że sekcja jest dostępne czytników kodu natywnego. W związku z tym korzystanie z `location` atrybut nie jest dozwolony, ponieważ czytników kodu natywnego nie obsługują pojęcie `location`."
  example:
  - "The examples in this section show how to get the AllowLocation property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_6_1.cs)]  \n  \n The following example gets the AllowLocation value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#98](~/add/codesnippet/visualbasic/p-system.configuration.s_6_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#98](~/add/codesnippet/csharp/p-system.configuration.s_6_2.cs)]"
  syntax:
    content: public bool AllowLocation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;> </xref> atrybut jest dozwolony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.AllowLocation*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Wybrana wartość konflikty z wartością, która jest już zdefiniowany."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowOverride
  id: AllowOverride
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy sekcja konfiguracji skojarzone może zostać zastąpiona przez pliki konfiguracji na niższych poziomach."
  remarks: ''
  example:
  - "The examples in this section show how to get the AllowOverride property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_16_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_16_1.cs)]  \n  \n The following example gets the AllowOverride value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#99](~/add/codesnippet/visualbasic/p-system.configuration.s_16_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#99](~/add/codesnippet/csharp/p-system.configuration.s_16_2.cs)]"
  syntax:
    content: public bool AllowOverride { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli może zostać zastąpiona w sekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.AllowOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ConfigSource
  id: ConfigSource
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia nazwę dołączanego pliku, w którym jest zdefiniowany w sekcji konfiguracji skojarzone, jeśli plik jest dostępny."
  remarks: "Właściwością ConfigSource reprezentuje wartość `configSource` atrybut, który jest określony dla <xref:System.Configuration.ConfigurationSection>obiektu, z którym skojarzony jest <xref:System.Configuration.SectionInformation>obiektu.</xref:System.Configuration.SectionInformation> </xref:System.Configuration.ConfigurationSection>       A <xref:System.Configuration.ConfigurationSection>implementacji można opcjonalnie określić osobny plik, w którym zdefiniowano ustawienia konfiguracji dla tej sekcji.</xref:System.Configuration.ConfigurationSection> Może to być przydatne na wiele sposobów:-przy użyciu pliki dołączane może spowodować bardziej logiczne i moduły struktury plików konfiguracji.      — Zabezpieczenia dostępu do plików i uprawnienia może służyć do ograniczenia dostępu do sekcji ustawień konfiguracji.      -Ustawienia w pliku dołączenia, które nie są używane podczas inicjowania aplikacji można modyfikować i ponownie załadowany bez konieczności ponownego uruchamiania aplikacji.       W poniższym przykładzie pokazano, jak ten atrybut jest używany w pliku konfiguracji, aby określić, że `pages` sekcja jest zdefiniowana w pliku zewnętrznego dołączenia: `<pages configSource=&quot;pages.config&quot;/>` Jeśli którakolwiek z ustawienia w konfiguracji zawiera plik wymagane ponowne uruchomienie, gdy zostaną one zmienione, ustaw <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>właściwości `true`.</xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>       W aplikacjach ASP.NET w czasie wykonywania można przypisać z właściwością ConfigSource nazwę pliku alternatywnej konfiguracji. W takim przypadku zawartość pliku zostaną zastąpione przez domyślne informacje o parametrach połączenia, który jest zawarty w pliku Web.config. Występuje to także, gdy alternatywnych plik nie istnieje i jest tworzona w czasie wykonywania. Jeśli plik Web.config nie zawiera żadnych informacji o ciągu połączenia, pustą sekcję są dodawane do pliku alternatywnych."
  syntax:
    content: public string ConfigSource { get; set; }
    return:
      type: System.String
      description: "Nazwa pliku dołączanego, w którym skojarzonego <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> jest zdefiniowana, jeśli taki plik istnieje; w przeciwnym razie wartość pustego ciągu (&quot;&quot;)."
  overload: System.Configuration.SectionInformation.ConfigSource*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration
  id: ForceDeclaration
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wymusza sekcji konfiguracji skojarzone pojawią się w pliku konfiguracji."
  remarks: "Metoda ForceDeclaration wymusza to <xref:System.Configuration.SectionInformation>deklaracji są zapisywane w pliku konfiguracji.</xref:System.Configuration.SectionInformation>      > [!NOTE] > ForceDeclaration metody można wymusić <xref:System.Configuration.SectionInformation>deklaracji są zapisywane w pliku konfiguracji, nawet jeśli sekcji nie jest wymagana, ponieważ jest już zadeklarowany w pliku nadrzędnym.</xref:System.Configuration.SectionInformation> Przy użyciu metody ForceDeclaration wprowadzić plik konfiguracji przenośną z jednego komputera na inny. Umożliwia ona upewnij się, że sekcji istnieje, nawet jeśli nie masz kontrolę nad pliki konfiguracji nadrzędnej."
  syntax:
    content: public void ForceDeclaration ();
    parameters: []
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  id: ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wymusza sekcji konfiguracji skojarzone pojawią się w pliku konfiguracji lub usuwa istniejącej sekcji pliku konfiguracji."
  remarks: "Metoda ForceDeclaration wymusza to <xref:System.Configuration.SectionInformation>deklaracji są zapisywane w pliku konfiguracji, jeśli `force` jest `true`.</xref:System.Configuration.SectionInformation> Jeśli `force` jest `false`, ta akcja może być ignorowana, jeśli <xref:System.Configuration.SectionInformation>jest wymagane przez system.</xref:System.Configuration.SectionInformation>      > [!NOTE] > ForceDeclaration metody można wymusić <xref:System.Configuration.SectionInformation>deklaracji są zapisywane w pliku konfiguracji, nawet jeśli w tej sekcji nie jest wymagana, ponieważ jest już zadeklarowany w pliku nadrzędnym.</xref:System.Configuration.SectionInformation> Przy użyciu <xref:System.Configuration.SectionInformation.ForceDeclaration%2A>Metoda ułatwia konfiguracji pliku przenośną z jednego komputera na inny.</xref:System.Configuration.SectionInformation.ForceDeclaration%2A> Umożliwia to także upewnij się, że sekcji istnieje, nawet jeśli nie masz kontrolę nad pliki konfiguracji nadrzędnej."
  example:
  - "The following example shows how to use the ForceDeclaration method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#113](~/add/codesnippet/visualbasic/m-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#113](~/add/codesnippet/csharp/m-system.configuration.s_0_1.cs)]"
  syntax:
    content: public void ForceDeclaration (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli skojarzona sekcji mają być zapisywane w pliku konfiguracyjnym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>force</code>jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> sekcji skojarzone nie można wyeksportować do pliku konfiguracji podrzędnych i jest niezadeklarowany."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceSave
  id: ForceSave
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy sekcja konfiguracji skojarzone zostaną zapisane, nawet wtedy, gdy nie został zmodyfikowany."
  remarks: ''
  example:
  - "The following example shows how to use the ForceSave property of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#1](~/add/codesnippet/csharp/p-system.configuration.s_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#1](~/add/codesnippet/visualbasic/p-system.configuration.s_7_1.vb)]"
  syntax:
    content: public bool ForceSave { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli skojarzony <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> będzie można zapisać obiektu, nawet jeśli nie został zmodyfikowany, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       <div class=&quot;alert NOTE&quot;>    Zapisanie pliku konfiguracyjnego (nawet jeśli istnieją żadnych modyfikacji) ASP.NET uruchamia ponownie aplikację.      </div>"
  overload: System.Configuration.SectionInformation.ForceSave*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetParentSection
  id: GetParentSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera sekcji konfiguracji, który zawiera sekcja konfiguracji skojarzone z tym obiektem."
  remarks: "Jeśli ta <xref:System.Configuration.ConfigurationSection>obiekt ma sekcji nadrzędnej, metoda elementu GetParentSection zwraca taką samą wartość jak <xref:System.Configuration.SectionInformation.Name%2A>Właściwości.</xref:System.Configuration.SectionInformation.Name%2A> </xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to use the GetParentSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#92](~/add/codesnippet/visualbasic/m-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#92](~/add/codesnippet/csharp/m-system.configuration.s_5_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSection GetParentSection ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationSection
      description: "Sekcja konfiguracji, który zawiera <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> skojarzonego z tym <xref href=&quot;System.Configuration.SectionInformation&quot;> </xref> obiektu."
  overload: System.Configuration.SectionInformation.GetParentSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metoda jest wywoływana z sekcji nadrzędnej."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetRawXml
  id: GetRawXml
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Zwraca obiekt węzła XML, który reprezentuje obiekt skojarzone sekcji konfiguracji."
  remarks: ''
  example:
  - "The following example shows how to use the GetRawXml method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#93](~/add/codesnippet/visualbasic/m-system.configuration.s_4_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#93](~/add/codesnippet/csharp/m-system.configuration.s_4_1.cs)]"
  syntax:
    content: public string GetRawXml ();
    parameters: []
    return:
      type: System.String
      description: "Reprezentacja XML dla tej sekcji konfiguracji."
  overload: System.Configuration.SectionInformation.GetRawXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ten obiekt konfiguracji jest zablokowany i nie można go edytować."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  id: InheritInChildApplications
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy ustawienia, które są określone w sekcji konfiguracji skojarzone są dziedziczone przez aplikacje, które znajdują się w podkatalogu danej aplikacji."
  remarks: "Reprezentuje właściwości InheritInChildApplications `inheritInChildApplications`atrybut `location` w pliku konfiguracji.       Ustaw dla właściwości InheritInChildApplications `false` zapobiegające ustawień specyficznych wybranej lokalizacji (na przykład w katalogu głównym witryny sieci Web) z dziedziczone przez aplikacje, które istnieją w podkatalogach.       Poniższy przykład przedstawia użycie tego atrybutu w pliku konfiguracji do określenia ustawień zdefiniowanych w elemencie lokalizację dla katalogu głównego witryny sieci Web nie powinny być dziedziczone przez aplikacje podrzędne: `<location path=&quot;.&quot; inheritInChildApplications=&quot;false&quot;>` InheritInChildApplications właściwość ma zastosowanie tylko do lokalizacji ustawień konfiguracji."
  example:
  - "The following example shows how to get the InheritInChildApplications value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#100](~/add/codesnippet/visualbasic/p-system.configuration.s_13_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#100](~/add/codesnippet/csharp/p-system.configuration.s_13_1.cs)]"
  syntax:
    content: public bool InheritInChildApplications { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ustawienia określone w tym <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> obiektu są dziedziczone przez aplikacje podrzędne, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.InheritInChildApplications*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  id: IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą, czy sekcja konfiguracji musi zostać zadeklarowany w pliku konfiguracji."
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclarationRequired property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_0_1.cs)]  \n  \n The following example gets the IsDeclarationRequired value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#103](~/add/codesnippet/visualbasic/p-system.configuration.s_0_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#103](~/add/codesnippet/csharp/p-system.configuration.s_0_2.cs)]"
  syntax:
    content: public bool IsDeclarationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli skojarzony <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> obiekt musi być zadeklarowany w pliku konfiguracji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsDeclarationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclared
  id: IsDeclared
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą, czy sekcja konfiguracji skojarzone jest zadeklarowany w pliku konfiguracji."
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclared property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_2_1.cs)]  \n  \n The following example gets the IsDeclared value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#104](~/add/codesnippet/visualbasic/p-system.configuration.s_2_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#104](~/add/codesnippet/csharp/p-system.configuration.s_2_2.cs)]"
  syntax:
    content: public bool IsDeclared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> zadeklarowanych w pliku konfiguracji, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsDeclared*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsLocked
  id: IsLocked
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą, czy ma być zablokowana sekcja konfiguracji skojarzone."
  remarks: "Zwraca właściwości IsLocked `true` po pokrewne sekcja jest zablokowana przez <xref:System.Configuration.SectionInformation.AllowOverride%2A>lub <xref:System.Configuration.SectionInformation.AllowDefinition%2A>Właściwości.</xref:System.Configuration.SectionInformation.AllowDefinition%2A> </xref:System.Configuration.SectionInformation.AllowOverride%2A> Sekcja jest zablokowana, jeśli nie można zastąpić lub zdefiniowane w bieżącym pliku konfiguracji."
  example:
  - "The examples in this section show how to get the IsLocked property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_5_1.cs)]  \n  \n The following example gets the IsLocked value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#105](~/add/codesnippet/visualbasic/p-system.configuration.s_5_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#105](~/add/codesnippet/csharp/p-system.configuration.s_5_2.cs)]"
  syntax:
    content: public bool IsLocked { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli sekcja jest zablokowana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsLocked*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsProtected
  id: IsProtected
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą, czy sekcja konfiguracji skojarzone jest chroniony."
  remarks: "Sekcja konfiguracji chronionych są zaszyfrowane i tylko do odczytu.       Aby uzyskać więcej informacji o sekcji konfiguracyjnych chronionych, zobacz [szyfrowania informacji przy użyciu chronione Konfiguracja](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The examples in this section show how to get the IsProtected property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_14_1.cs)]  \n  \n The following example gets the IsProtected value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#106](~/add/codesnippet/visualbasic/p-system.configuration.s_14_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#106](~/add/codesnippet/csharp/p-system.configuration.s_14_2.cs)]"
  syntax:
    content: public bool IsProtected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> chronionych, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsProtected*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Name
  id: Name
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera nazwę sekcji konfiguracyjnej skojarzone."
  remarks: "Nazwa jest nazwą sekcji bez ścieżki."
  example:
  - "The following example shows how to get the Name value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#107](~/add/codesnippet/visualbasic/p-system.configuration.s_9_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#107](~/add/codesnippet/csharp/p-system.configuration.s_9_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Pełna nazwa sekcji konfiguracji."
  overload: System.Configuration.SectionInformation.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideMode
  id: OverrideMode
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> wartości wyliczenia, który określa, czy sekcja konfiguracji skojarzone może zostać przesłonięta przez podrzędnych plików konfiguracji."
  remarks: "<xref:System.Configuration.SectionInformation.AllowOverride%2A>Właściwość pobiera lub ustawia wartość wskazującą, czy zasoby deklarowane w `location` element może zostać przesłonięta przez pliki konfiguracji podrzędnych.</xref:System.Configuration.SectionInformation.AllowOverride%2A> Właściwość OverrideMode pobiera lub ustawia wartość, która określa zachowanie podobne, ale jest to element konfiguracji określonego lub grupy i korzysta z jednego z <xref:System.Configuration.OverrideMode>wartości wyliczenia.</xref:System.Configuration.OverrideMode> Właściwość OverrideMode umożliwia zachowanie jest dziedziczone z elementu nadrzędnego.       Nie można ustawić programowo zarówno <xref:System.Configuration.SectionInformation.AllowOverride%2A>i właściwość OverrideMode.</xref:System.Configuration.SectionInformation.AllowOverride%2A> Ustawienie <xref:System.Configuration.SectionInformation.AllowOverride%2A>właściwości `true` ustawia dla właściwości OverrideMode <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.SectionInformation.AllowOverride%2A> Ustawienie <xref:System.Configuration.SectionInformation.AllowOverride%2A>właściwości `false` ustawia właściwość OverrideMode `false`.</xref:System.Configuration.SectionInformation.AllowOverride%2A>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideMode { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "Jeden z <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> wartości wyliczenia."
  overload: System.Configuration.SectionInformation.OverrideMode*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Podjęto próbę zmiany zarówno <xref:System.Configuration.SectionInformation.AllowOverride*>i OverrideMode właściwości, które nie jest obsługiwane ze względu na zgodność.</xref:System.Configuration.SectionInformation.AllowOverride*>"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  id: OverrideModeDefault
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość, która określa domyślne zastąpienie zachowania sekcji konfiguracji przez pliki konfiguracji podrzędnych."
  remarks: "Właściwość OverrideModeDefault sekcji konfiguracyjnej można ustawić tylko <xref:System.Configuration.OverrideMode>lub <xref:System.Configuration.OverrideMode>wartość <xref:System.Configuration.OverrideMode>wyliczenie.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> Ustawienie właściwości OverrideModeDefault <xref:System.Configuration.OverrideMode>jest równoznaczne z ustawieniem wartości <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeDefault { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "Jeden z <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> wartości wyliczenia."
  overload: System.Configuration.SectionInformation.OverrideModeDefault*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Zastąpienie zachowanie jest określona w sekcji konfiguracji nadrzędnej."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  id: OverrideModeEffective
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera zachowanie zastąpienie sekcji konfiguracji, które z kolei bazuje na Określa, czy pliki konfiguracji podrzędne można zablokować sekcji konfiguracji."
  remarks: "Ta właściwość zwraca <xref:System.Configuration.OverrideMode>lub <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeEffective { get; }
    return:
      type: System.Configuration.OverrideMode
      description: "Jeden z <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> wartości wyliczenia."
  overload: System.Configuration.SectionInformation.OverrideModeEffective*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectionProvider
  id: ProtectionProvider
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera dostawcę chronionych konfiguracji dla sekcji konfiguracji skojarzone."
  remarks: "Dla tych częściach właściwość ProtectionProvider jest `null`.       Aby uzyskać więcej informacji o sekcji konfiguracyjnych chronionych, zobacz [szyfrowania informacji przy użyciu chronione Konfiguracja](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to get the <xref:System.Configuration.SectionInformation.ProtectSection%2A> value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#108](~/add/codesnippet/visualbasic/p-system.configuration.s_11_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#108](~/add/codesnippet/csharp/p-system.configuration.s_11_1.cs)]"
  syntax:
    content: public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }
    return:
      type: System.Configuration.ProtectedConfigurationProvider
      description: "Dostawca konfiguracji chronionych dla tego <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> obiektu."
  overload: System.Configuration.SectionInformation.ProtectionProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  id: ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Oznacza sekcję konfiguracji ochrony."
  remarks: "Metoda ProtectSection oznacza sekcji szyfrowania, więc zostanie zapisana w postaci zaszyfrowanej na dysku.       Następujących dostawców ochrony są domyślnie dołączone: <xref:System.Configuration.DpapiProtectedConfigurationProvider> <xref:System.Configuration.RsaProtectedConfigurationProvider>> [!NOTE] > można wywołać metody ProtectSection `null` parametrem lub ciągiem pustym <xref:System.Configuration.RsaProtectedConfigurationProvider>Klasa jest używana jako dostawca ochrony.</xref:System.Configuration.RsaProtectedConfigurationProvider> </xref:System.Configuration.RsaProtectedConfigurationProvider>       </xref:System.Configuration.DpapiProtectedConfigurationProvider>       Aby uzyskać więcej informacji o sekcji konfiguracyjnych chronionych, zobacz [szyfrowania informacji przy użyciu chronione Konfiguracja](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use the ProtectSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#94](~/add/codesnippet/visualbasic/m-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#94](~/add/codesnippet/csharp/m-system.configuration.s_3_1.cs)]"
  syntax:
    content: public void ProtectSection (string protectionProvider);
    parameters:
    - id: protectionProvider
      type: System.String
      description: "Nazwa dostawcy ochrony do użycia."
  overload: System.Configuration.SectionInformation.ProtectSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Configuration.SectionInformation.AllowLocation*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The target section is already a protected data section."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RequirePermission
  id: RequirePermission
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą, czy sekcja konfiguracji skojarzone wymaga uprawnień dostępu."
  remarks: "Gdy ma wartość RequirePermission `true`, `GetSection` metody są ograniczone przez poziom zaufania aplikacji. Oznacza to, że metody lub właściwości, które umożliwiają dostęp do obsługi sekcji konfiguracji są ograniczone przez poziom zaufania dla aplikacji sieci Web.      > [!NOTE] > Wysokiej i pełne zaufanie są tylko poziomy, które umożliwiają dostęp do plików spoza bieżącej domeny aplikacji, aplikacja może użyć obsługi sekcji konfiguracji tylko na te poziomy zaufania.       Gdy ma wartość RequirePermission `false`, dostęp do danych konfiguracji nie jest ograniczona przez ustawień poziomu zaufania aplikacji.      > [!NOTE] > Są nadal wymagane, bez względu na ustawienie RequirePermission uprawnienia listy kontroli dostępu (listy kontroli dostępu) odpowiedniego pliku. Listy ACL uprawnienia określają, kto ma dostęp do pliku konfiguracji."
  example:
  - "The following example shows two possible trust levels for a Web application when the RequirePermission property of the `appSettings` section is `true`.  \n  \n```  \n<system.web>  \n   // With the following trust value   \n   // the code below works.  \n  <trust level=\"Full\" />  \n</system.web>  \n  \n<system.web>  \n  // With the following trust value   \n  // the code below does not work.  \n  <trust level=\"Medium\" />  \n</system.web>  \n```  \n  \n The following example shows code that runs without errors when the trust level is set to full. Otherwise, the code results in an error.  \n  \n```c#  \nAppSettingsSection apSection =   \n  ConfigurationManager.GetSection(\"appSettings\") as AppSettingsSection;  \n  \nNameValueCollection apSectionCollection =  \n  ConfigurationManager.AppSettings;  \n```  \n  \n```vb#  \nDim apSection As AppSettingsSection = _   \n  TryCast(ConfigurationManager.GetSection(\"appSettings\"),   \n    AppSettingsSection)  \n  \n  Dim apSectionCollection As NameValueCollection = _   \n    ConfigurationManager.AppSettings  \n```"
  syntax:
    content: public bool RequirePermission { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref uid=&quot;langword_csharp_requirePermission&quot; name=&quot;requirePermission&quot; href=&quot;&quot;> </xref> atrybut ma ustawioną <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.RequirePermission*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Wybrana wartość konflikty z wartością, która jest już zdefiniowany."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  id: RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość określającą, czy uwzględniać zmiany w konfiguracji zewnętrznego pliku wymaga ponownego uruchomienia aplikacji."
  remarks: "Ustaw dla właściwości RestartOnExternalChanges `false` zapobiegające ponowne uruchomienie aplikacji po zmodyfikowaniu ustawień konfiguracji w pliku dołączanego zewnętrzne dla tego <xref:System.Configuration.ConfigurationSection>obiektu.</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to get the RestartOnExternalChanges property value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#109](~/add/codesnippet/visualbasic/p-system.configuration.s_1_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#109](~/add/codesnippet/csharp/p-system.configuration.s_1_1.cs)]"
  syntax:
    content: public bool RestartOnExternalChanges { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zmiany w konfiguracji zewnętrzny plik dołączany wymaga ponownego uruchomienia aplikacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.RestartOnExternalChanges*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Wybrana wartość konflikty z wartością, która jest już zdefiniowany."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RevertToParent
  id: RevertToParent
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Powoduje, że w sekcji konfiguracji skojarzone dziedziczenie jego wartości z sekcji nadrzędnej."
  syntax:
    content: public void RevertToParent ();
    parameters: []
  overload: System.Configuration.SectionInformation.RevertToParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie można wywołać tej metody poza tryb edycji."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SectionName
  id: SectionName
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera nazwę sekcji konfiguracyjnej skojarzone."
  remarks: "Wartość właściwości SectionName jest nazwa sekcji pełną, w tym konfiguracji hierarchii dziedziczenia."
  example:
  - "The following example shows how to get the SectionName value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#110](~/add/codesnippet/visualbasic/p-system.configuration.s_10_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#110](~/add/codesnippet/csharp/p-system.configuration.s_10_1.cs)]"
  syntax:
    content: public string SectionName { get; }
    return:
      type: System.String
      description: "Nazwa skojarzonego <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> obiektu."
  overload: System.Configuration.SectionInformation.SectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  id: SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Ustawia obiekt reprezentację XML sekcji konfiguracyjnej skojarzony w pliku konfiguracji."
  syntax:
    content: public void SetRawXml (string rawXml);
    parameters:
    - id: rawXml
      type: System.String
      description: "XML do użycia."
  overload: System.Configuration.SectionInformation.SetRawXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rawXml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Type
  id: Type
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia nazwę klasy sekcji."
  remarks: "Właściwość Type zwraca nazwę klasy sekcji, która obsługuje to wystąpienie <xref:System.Configuration.ConfigurationSection>klasy.</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to get the Type value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#111](~/add/codesnippet/visualbasic/p-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#111](~/add/codesnippet/csharp/p-system.configuration.s_3_1.cs)]"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "Nazwa klasy, który jest skojarzony z tym <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> sekcji."
  overload: System.Configuration.SectionInformation.Type*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wybrana wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;)."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Wybrana wartość konflikty z wartością, która jest już zdefiniowany."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.UnprotectSection
  id: UnprotectSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Usuwa szyfrowania chronionych konfiguracji z sekcji konfiguracji skojarzone."
  remarks: "Aby uzyskać więcej informacji o sekcji konfiguracyjnych chronionych, zobacz [szyfrowania informacji przy użyciu chronione Konfiguracja](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use this method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#112](~/add/codesnippet/visualbasic/m-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#112](~/add/codesnippet/csharp/m-system.configuration.s_6_1.cs)]"
  syntax:
    content: public void UnprotectSection ();
    parameters: []
  overload: System.Configuration.SectionInformation.UnprotectSection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SectionInformation.AllowDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
- uid: System.Configuration.ConfigurationAllowDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowDefinition
  nameWithType: ConfigurationAllowDefinition
  fullName: System.Configuration.ConfigurationAllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
- uid: System.Configuration.ConfigurationAllowExeDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowExeDefinition
  nameWithType: ConfigurationAllowExeDefinition
  fullName: System.Configuration.ConfigurationAllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SectionInformation.AllowOverride
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SectionInformation.ForceDeclaration
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
- uid: System.Configuration.SectionInformation.ForceSave
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
- uid: System.Configuration.ConfigurationSection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSection
  nameWithType: ConfigurationSection
  fullName: System.Configuration.ConfigurationSection
- uid: System.Configuration.SectionInformation.GetRawXml
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
- uid: System.Configuration.OverrideMode
  parent: System.Configuration
  isExternal: false
  name: OverrideMode
  nameWithType: OverrideMode
  fullName: System.Configuration.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
- uid: System.Configuration.ProtectedConfigurationProvider
  parent: System.Configuration
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
- uid: System.Configuration.SectionInformation.RequirePermission
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
- uid: System.Configuration.SectionInformation.SectionName
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
- uid: System.Configuration.SectionInformation.Type
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
- uid: System.Configuration.SectionInformation.AllowDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
- uid: System.Configuration.SectionInformation.AllowOverride*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
- uid: System.Configuration.SectionInformation.ForceDeclaration*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration
  nameWithType: SectionInformation.ForceDeclaration
- uid: System.Configuration.SectionInformation.ForceSave*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection
  nameWithType: SectionInformation.GetParentSection
- uid: System.Configuration.SectionInformation.GetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml
  nameWithType: SectionInformation.GetRawXml
- uid: System.Configuration.SectionInformation.InheritInChildApplications*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
- uid: System.Configuration.SectionInformation.ProtectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection
  nameWithType: SectionInformation.ProtectSection
- uid: System.Configuration.SectionInformation.RequirePermission*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent
  nameWithType: SectionInformation.RevertToParent
- uid: System.Configuration.SectionInformation.SectionName*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml
  nameWithType: SectionInformation.SetRawXml
- uid: System.Configuration.SectionInformation.Type*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection
  nameWithType: SectionInformation.UnprotectSection
