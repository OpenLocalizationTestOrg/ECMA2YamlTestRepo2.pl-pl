### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingBase
  id: BindingBase
  children:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  langs:
  - csharp
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
  type: Class
  summary: "Definiuje typowe cechy <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>, <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>, i <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> klasy."
  remarks: "Ponieważ <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>metody jest zapieczętowany, klasy niestandardowego powiązania, która pochodzi z BindingBase nie będą działać poprawnie jako [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] — rozszerzenie znaczników.</xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]

      public abstract class BindingBase : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.BindingGroupName
  id: BindingGroupName
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia nazwę <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> do której należy to powiązanie."
  remarks: "Jeśli nie ustawiono BindingGroupName, powiązania należy <xref:System.Windows.Data.BindingGroup>tylko wtedy, gdy źródło powiązania i <xref:System.Windows.FrameworkElement.DataContext%2A>elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup>są tego samego obiektu.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup>       Jeśli BindingGroupName jest ustawiona na wartość, należy powiązanie <xref:System.Windows.Data.BindingGroup>Jeśli są spełnione następujące warunki: - <xref:System.Windows.Data.BindingGroup.Name%2A>z <xref:System.Windows.Data.BindingGroup>i BindingGroupName są takie same.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup>      - <xref:System.Windows.Data.BindingGroup>Należy do elementu nadrzędnego elementu docelowego powiązania.</xref:System.Windows.Data.BindingGroup>       Jeśli ustawiono BindingGroupName `null`, powiązanie nigdy nie jest częścią <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup>       Mogą zawierać powiązań, które mają źródła, która różni się od <xref:System.Windows.FrameworkElement.DataContext%2A>elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup>przez ustawienie <xref:System.Windows.Data.BindingGroup.Name%2A>z <xref:System.Windows.Data.BindingGroup>i właściwość BindingGroupName powiązanie z taką samą wartość.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>  Można wykluczyć powiązania, które mają tego samego źródła jako <xref:System.Windows.FrameworkElement.DataContext%2A>elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup>przez ustawienie <xref:System.Windows.Data.BindingGroup.Name%2A>z <xref:System.Windows.Data.BindingGroup>i właściwości BindingGroupName powiązania różne wartości.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the BindingGroupName of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.  In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string BindingGroupName { get; set; }
    return:
      type: System.String
      description: "Nazwa <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> do której należy to powiązanie."
  overload: System.Windows.Data.BindingBase.BindingGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.Delay
  id: Delay
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia ilość czasu (w milisekundach) oczekiwania przed zaktualizowaniem źródle powiązania po wartości na zmiany docelowego."
  remarks: "Użycie powiązania do aktualizowania źródła powiązania przy każdej zmianie wartości właściwości w elemencie docelowym, ustaw <xref:System.Windows.Data.Binding.Mode%2A>dla właściwości <xref:System.Windows.Data.BindingMode>i <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>do <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding.Mode%2A>  W takiej sytuacji właściwości opóźnienie służy do określenia, czy powinno być opóźnienie między zmiany obiektu docelowego i po zaktualizowaniu źródła.  Jest to przydatne, gdy chcesz umożliwić użytkownikom na zmianę właściwości w obiekcie źródłowym, ale nie chcesz, aby każdej zmiany, które mają być natychmiast przekazane do źródła.  Na przykład załóżmy, że masz pola tekstowego, która jest powiązana z danymi dwukierunkowe do właściwości obiektu danych.  Gdy użytkownik zmieni wartość w polu tekstowym, źródło jest aktualizowana.  Aby włączyć w tym scenariuszu, należy ustawić <xref:System.Windows.Data.Binding.Mode%2A>właściwości <xref:System.Windows.Data.Binding>i <xref:System.Windows.Data.BindingMode> <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>do <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Mode%2A>  Aby uniknąć aktualizowania obiektu źródła z każdym naciśnięciu klawisza, należy ustawić właściwości opóźnienie rozsądną wartość spowodują powiązania do aktualizacji tylko, po upływie tego ilość czasu, ponieważ użytkownik zatrzymana, wpisując polecenie."
  syntax:
    content: public int Delay { get; set; }
    return:
      type: System.Int32
      description: "Ilość czasu (w milisekundach) oczekiwania przed zaktualizowaniem źródle powiązania."
  overload: System.Windows.Data.BindingBase.Delay*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.FallbackValue
  id: FallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość do użycia podczas wiązania nie może zwracać wartości."
  remarks: "Powiązanie zwraca pomyślnie wartość, jeśli: 1.  Ścieżka do źródła powiązanie rozpoznaje pomyślnie.      2.  Konwerter wartości, jeśli istnieje, jest w stanie można przekonwertować wartości wynikowej.      3.  Wartość wynikową jest prawidłowa dla właściwości docelowej (docelowy) powiązania.       Jeśli 1 i 2 zwraca <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>, właściwość target ma ustawioną wartość FallbackValue, jeśli jest dostępny.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> Jeśli nie ma żadnych FallbackValue, zostanie użyta domyślna wartość właściwości docelowej.       Wartość <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>nie jest uważana za pomyślnie wartości zwracanej.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>      <a name=&quot;xamlTextUsage_FallbackValue&quot;></a>## Użycie tekstu XAML ```   <object FallbackValue=&quot;fallbackValue&quot; />   ``` **- lub -** ```   <object>     <object.FallbackValue>       fallbackValue       </object.FallbackValue>   </object>   ``` <a name=&quot;xamlValues_FallbackValue&quot;> </a> ## wartości XAML *fallbackValue* wartości elementu lub atrybutu obiektu jako właściwość target tego samego typu.                    Zobacz dokumentację tego typu dla XAML informacje o użyciu. Tego typu może może nie obsługiwać Składnia atrybutu dla wartości, lub mogą lub może nie obsługiwać składni elementu obiektu (co wymaga konstruktora domyślnego dla tego typu). W związku z tym składni, których można użyć wartości właściwości FallbackValue będzie miała wpływ właściwości typu docelowego."
  syntax:
    content: public object FallbackValue { get; set; }
    return:
      type: System.Object
      description: "Wartość domyślna to <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>."
  overload: System.Windows.Data.BindingBase.FallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Zwraca obiekt, który powinien być ustawiony na właściwość którym to powiązanie i rozszerzenia są stosowane."
  remarks: "Ta implementacja zapewnia obsługę podstawowa składnia dla powiązania za pośrednictwem [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] dla wszystkich klas pochodnych praktyczne (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, i <xref:System.Windows.Data.MultiBinding>).</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>       <xref:System.Windows.Data.BindingBase>Powinien zwrócić wyrażenie obiektu, który jest wynikiem powiązanie klasy implementacja tej metody.</xref:System.Windows.Data.BindingBase> Powiązanie działania właściwości, wybierając w danym <xref:System.Windows.DependencyProperty>dniu danego <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyProperty> Te dwa rodzaje informacji są przekazywane przez wykonanie zapytania dotyczącego <xref:System.Windows.Markup.IProvideValueTarget>implementacji na `serviceProvider`, który [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] udostępnia czytnik podczas analizowania powiązania.</xref:System.Windows.Markup.IProvideValueTarget> Ta implementacja klasy podstawowej jest odpowiedzialny za sprawdzanie prawidłowe <xref:System.Windows.DependencyProperty>i <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyProperty> Jeśli zostaną one uznane rzeczywistego wykonania przekazujących wyrażenie powiązania spoczywa różnych klas pochodnych, zgodnie z implementacją przez wywołanie klasy podstawowej metody abstrakcyjnej wewnętrznej. W przeciwnym razie rozszerzenia zwraca samego obiektu powiązania. Zwracanie powiązania sam powoduje błąd niezgodności typów, ale nie powinno to nastąpić w normalnych okolicznościach.      > [!IMPORTANT] > Ponieważ składnia wiązania za pomocą [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] zgodnie z implementacją w tej metody polega na zaimplementowanie przesłonięcia wewnętrznych, a ponieważ ProvideValue sam jest zapieczętowany, klasa niestandardowego powiązania, który pochodzi z <xref:System.Windows.Data.BindingBase>nie będą działać poprawnie jako [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] — rozszerzenie znaczników.</xref:System.Windows.Data.BindingBase>"
  syntax:
    content: public override sealed object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Obiekt, który może zapewnić usługi rozszerzenia znaczników. Może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; więcej informacji w sekcji uwag."
    return:
      type: System.Object
      description: "Wartość można ustawić dla właściwości docelowej powiązania."
  overload: System.Windows.Data.BindingBase.ProvideValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  id: ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Zwraca wartość wskazującą, czy procesy serializacji powinny serializować wprowadzenia wartości <xref:System.Windows.Data.BindingBase.FallbackValue*>Właściwości dla wystąpień tej klasy.</xref:System.Windows.Data.BindingBase.FallbackValue*>"
  syntax:
    content: public bool ShouldSerializeFallbackValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.Data.BindingBase.FallbackValue*>wartość właściwości powinny być serializowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.BindingBase.FallbackValue*>"
  overload: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  id: ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Zwraca wartość wskazującą, czy <xref:System.Windows.Data.BindingBase.TargetNullValue*>właściwości powinny być serializowane.</xref:System.Windows.Data.BindingBase.TargetNullValue*>"
  syntax:
    content: public bool ShouldSerializeTargetNullValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.Data.BindingBase.TargetNullValue*>właściwość powinna być serializowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.BindingBase.TargetNullValue*>"
  overload: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.StringFormat
  id: StringFormat
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia ciąg, który określa sposób formatowania wiązanie, jeśli wyświetlana jest wartość powiązanej jako ciąg."
  remarks: "StringFormat — można wstępnie zdefiniowane, złożonych lub niestandardowy ciąg formatu. Aby uzyskać więcej informacji na temat formaty ciągu, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       Jeśli ustawisz <xref:System.Windows.Data.Binding.Converter%2A>i właściwości StringFormat konwerter zostanie zastosowana jako pierwsza wartość danych, a następnie jest stosowana StringFormat.</xref:System.Windows.Data.Binding.Converter%2A>       Podczas ustawiania StringFormat na <xref:System.Windows.Data.Binding>do formatu ciągu złożonego, można określić tylko jeden parametr.</xref:System.Windows.Data.Binding>       Jeśli używasz <xref:System.Windows.Data.MultiBinding>Właściwość StringFormat jest stosowana tylko wtedy, gdy jest ustawiona na <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding>  Wartość StringFormat ustawionej na wszystkich podrzędnych <xref:System.Windows.Data.Binding>obiektów jest ignorowana.</xref:System.Windows.Data.Binding>  Liczba parametrów w formacie ciągu złożonego nie może przekraczać liczbę podrzędnych <xref:System.Windows.Data.Binding>obiektów w <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding>       Jeśli używasz <xref:System.Windows.Data.PriorityBinding>, można ustawiać StringFormat <xref:System.Windows.Data.PriorityBinding>na obiekty podrzędne powiązania i/lub.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.PriorityBinding>  Jeśli StringFormat jest ustawiona na powiązanie podrzędne, które są stosowane, ta wartość jest używana.  Jeśli nie ustawiono StringFormat w elemencie podrzędnym powiązania stosowanego, StringFormat z <xref:System.Windows.Data.PriorityBinding>jest stosowana, jeśli jest ustawiona.</xref:System.Windows.Data.PriorityBinding>"
  example:
  - "The following example uses the StringFormat property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.  \n  \n [!code-xml[ContentStringSnippets#Binding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#binding)]  \n  \n The following example uses the StringFormat property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.  \n  \n [!code-xml[ContentStringSnippets#MultiBinding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#multibinding)]"
  syntax:
    content: public string StringFormat { get; set; }
    return:
      type: System.String
      description: "Ciąg, który określa sposób formatowania wiązanie, jeśli wyświetlana jest wartość powiązanej jako ciąg."
  overload: System.Windows.Data.BindingBase.StringFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.TargetNullValue
  id: TargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość, która jest używana w miejscu docelowym, jeśli znajduje się wartość źródła <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<a name=&quot;xamlTextUsage_TargetNullValue&quot;></a>## Użycie tekstu XAML ```   <object TargetNullValue=&quot;nullValue&quot; />   ``` **- lub -** ```   <object>     <object.TargetNullValue>       nullValue       </object.TargetNullValue>   </object>   ``` <a name=&quot;xamlValues_TargetNullValue&quot;> </a> ## wartości XAML *nullValue* wartości elementu lub atrybutu obiektu jako właściwość target tego samego typu.                    Zobacz dokumentację tego typu dla XAML informacje o użyciu. Tego typu może może nie obsługiwać Składnia atrybutu dla wartości, lub mogą lub może nie obsługiwać składni elementu obiektu (co wymaga konstruktora domyślnego dla tego typu)."
  example:
  - "The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.  If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays \"please enter a string.\"  \n  \n [!code-xml[BindingGroupSnippets#TargetNullValue](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#targetnullvalue)]"
  syntax:
    content: public object TargetNullValue { get; set; }
    return:
      type: System.Object
      description: "Wartość, która jest używana w celu, jeśli znajduje się wartość źródła <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingBase.TargetNullValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Data.BindingBase.BindingGroupName
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingBase.Delay
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.BindingBase.FallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
- uid: System.Windows.Data.BindingBase.StringFormat
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
- uid: System.Windows.Data.BindingBase.BindingGroupName*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
- uid: System.Windows.Data.BindingBase.Delay*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
- uid: System.Windows.Data.BindingBase.FallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
- uid: System.Windows.Data.BindingBase.ProvideValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue
  nameWithType: BindingBase.ProvideValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue
  nameWithType: BindingBase.ShouldSerializeFallbackValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue
  nameWithType: BindingBase.ShouldSerializeTargetNullValue
- uid: System.Windows.Data.BindingBase.StringFormat*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
