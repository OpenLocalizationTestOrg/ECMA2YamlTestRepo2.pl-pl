### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "Udostępnia mechanizm dla wyliczania dostępnych dostawców OLE DB w sieci lokalnej."
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Tworzy wystąpienie <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> klasy."
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Pobiera <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje dotyczące wszystkich widoczne dostawców OLE DB."
  remarks: "Tabela, która jest zwracana przez tę metodę zawiera następujące kolumny, które zawierają ciągi: | Numer kolumny | Kolumny | Opis elementu |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Niezmiennej nazwy natywnego źródła danych OLE DB lub modułu wyliczającego. |   |&1; | SOURCES_PARSENAME | Nazwę zrozumiałą dla użytkownika za pomocą natywnego interfejsu COM IParseDisplayName można przekonwertować na krótkiej nazwy. Odpowiada kolumnie SOURCES_PARSENAME zwrócony przez natywnego wierszy OLE DB w źródłach. |   |&2; | SOURCES_DESCRIPTION | Opis elementu natywnego źródła danych OLE DB. Odpowiada kolumnie SOURCES_DESCRIPTION zwrócony przez natywnego wierszy OLE DB w źródłach. |   |&3; | SOURCES_TYPE | Jedną z następujących członków wyliczenie: Binder (0), DataSource_MDP (1), DataSource_TDP (2), (3) modułu wyliczającego. Odpowiadają one wartości zwracane w kolumnie SOURCES_TYPE natywnego wierszy OLE DB w źródłach. |   |&4; | SOURCES_ISPARENT | Dotyczy tylko moduły wyliczające. Jeśli `true`, wskazuje, że wpis dotyczy tego samego modułu wyliczającego, na którym została wywołana GetSourcesRowset, co oznacza, jest on również dołączony w wyliczeniu podrzędnych. Odpowiada kolumnie SOURCES_ISPARENT natywnego wierszy źródeł OLE DB |   |&5; | SOURCES_CLSID | Nazwę zrozumiałą dla użytkownika, który może zostać przekonwertowany do krótkiej nazwy za pomocą natywnego interfejsu COM IParseDisplayName. Odpowiada kolumnie SOURCES_CLSID zwrócony przez natywnego wierszy OLE DB w źródłach. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Zwraca <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje dotyczące widoczne dostawcy OLE DB."
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Dostawca nie obsługuje ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Wystąpił wyjątek w podstawowym dostawcy."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Za pomocą określonego wyliczający OLE DB <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> zawierający informacje dotyczące aktualnie zainstalowanych dostawców OLE DB, bez konieczności wystąpienia <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> klasy."
  remarks: "Czytnik, która jest zwracana przez tę metodę zawiera następujące kolumny, które zawierają ciągi: | Kolumny o liczbie porządkowej | Kolumny | Opis elementu |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Niezmiennej nazwy natywnego źródła danych OLE DB lub modułu wyliczającego. |   |&1; | SOURCES_PARSENAME | Nazwę zrozumiałą dla użytkownika, która za pomocą natywnego interfejsu COM można przekonwertować na krótka nazwa **IParseDisplayName**. Odpowiada kolumnie SOURCES_PARSENAME zwrócony przez natywnego wierszy OLE DB w źródłach. |   |&2; | SOURCES_DESCRIPTION | Opis elementu natywnego źródła danych OLE DB. Odpowiada kolumnie SOURCES_DESCRIPTION zwrócony przez natywnego wierszy OLE DB w źródłach. |   |&3; | SOURCES_TYPE | Jedną z następujących członków wyliczenie: Binder (0), DataSource_MDP (1), DataSource_TDP (2), (3) modułu wyliczającego. Odpowiadają one wartości zwracane w kolumnie SOURCES_TYPE natywnego wierszy OLE DB w źródłach. |   |&4; | SOURCES_ISPARENT | Dotyczy tylko moduły wyliczające. Jeśli `true`, wskazuje, że wpis dotyczy tego samego modułu wyliczającego, na którym **GetSourcesRowset** została wywołana, co oznacza, jest on również dołączony w wyliczeniu podrzędne. Odpowiada kolumnie SOURCES_ISPARENT natywnego wierszy źródeł OLE DB |       OLE DB zawiera kilka składników modułu wyliczającego, w tym MSDAENUM, modułu wyliczającego MSDASQL SQLNCLI modułu wyliczającego, wyliczający SQLOLEDB i inne. Aby uzyskać więcej informacji na temat składników modułu wyliczającego i sposobu ich używania, zobacz [OLE DB Podręcznik programisty](http://go.microsoft.com/fwlink/?LinkId=45232)."
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Zwraca <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> zawierający informacje o żądanej dostawcy OLE DB, przy użyciu określonego modułu wyliczającego OLE DB."
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Dostawca nie obsługuje **ISourcesRowset**."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Wystąpił wyjątek w podstawowym dostawcy."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zwraca <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> zawierający informacje dotyczące aktualnie zainstalowanych dostawców OLE DB, bez konieczności wystąpienia <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> klasy."
  remarks: "Czytnik zwracane przez tę metodę zawiera następujące kolumny, które zawierają ciągi: | Numer kolumny | Kolumny | Opis elementu |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Niezmiennej nazwy natywnego źródła danych OLE DB lub modułu wyliczającego. |   |&1; | SOURCES_PARSENAME | Nazwę zrozumiałą dla użytkownika, która może zostać przekonwertowany na krótka nazwa za pomocą natywnego interfejsu COM IParseDisplayName. Odpowiada kolumnie SOURCES_PARSENAME zwrócony przez natywnego wierszy OLE DB w źródłach. |   |&2; | SOURCES_DESCRIPTION | Opis elementu natywnego źródła danych OLE DB. Odpowiada kolumnie SOURCES_DESCRIPTION zwrócony przez natywnego wierszy OLE DB w źródłach. |   |&3; | SOURCES_TYPE | Jedną z następujących członków wyliczenie: Binder (0), DataSource_MDP (1), DataSource_TDP (2), (3) modułu wyliczającego. Odpowiadają one wartości zwracane w kolumnie SOURCES_TYPE natywnego wierszy OLE DB w źródłach. |   |&4; | SOURCES_ISPARENT | Dotyczy tylko moduły wyliczające. Jeśli `true`, wskazuje, że wpis dotyczy tego samego modułu wyliczającego, na którym została wywołana GetSourcesRowset, co oznacza, jest on również dołączony w wyliczeniu podrzędnych. Odpowiada kolumnie SOURCES_ISPARENT natywnego wierszy źródeł OLE DB |   |&5; | SOURCES_CLSID | Nazwę zrozumiałą dla użytkownika, który może zostać przekonwertowany do krótkiej nazwy za pomocą natywnego interfejsu COM IParseDisplayName. Odpowiada kolumnie SOURCES_CLSID zwrócony przez natywnego wierszy OLE DB w źródłach. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Zwraca <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> zawierający informacje dotyczące widoczne dostawcy OLE DB."
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Dostawca nie obsługuje ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Wystąpił wyjątek w podstawowym dostawcy."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
