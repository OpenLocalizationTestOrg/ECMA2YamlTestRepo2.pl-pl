### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.EvidenceBase
  id: EvidenceBase
  children:
  - System.Security.Policy.EvidenceBase.#ctor
  - System.Security.Policy.EvidenceBase.Clone
  langs:
  - csharp
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
  type: Class
  summary: "Udostępnia klasę podstawową, z których wszystkie obiekty, która będzie używana jako dowód muszą pochodzić."
  remarks: "Przed [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], prawie każdego obiektu może być użyta jako obiekt dowód, jeśli chce zastosować go jako dowód hostingu kodu. Na przykład niektóre kod .NET Framework rozpoznany <xref:System.Uri?displayProperty=fullName>obiekty jako dowód.</xref:System.Uri?displayProperty=fullName> Środowisko uruchomieniowe języka wspólnego (CLR) traktowane jako dowód obiekty jako <xref:System.Object?displayProperty=fullName>odwołuje się i nie może zastosować zabezpieczenie żadnych typów do nich.</xref:System.Object?displayProperty=fullName>       Przedstawione problem, ponieważ było niejawne ograniczeń, na których można używać typów jako dowód obiektów. W szczególności dowolny obiekt używany jako dowód muszą być możliwy do serializacji i nie można go `null`. Jeśli te wymagania nie zostały spełnione, CLR zgłosiła wyjątek przy każdym wykonano operację, który wymagany jeden z tych założeń.       Klasa EvidenceBase wszystkie obiekty dowód muszą pochodzić od, została wprowadzona w systemie [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] można włączyć ograniczenia dotyczące typów obiektów, które mogą być używane jako dowód i zapewniają możliwość dodawania nowych funkcji i wymagań dla wszystkich obiektów dowód. Klasa EvidenceBase zapewnia, podczas tworzenia wystąpienia, czy obiekt dowód jest możliwy do serializacji. Ponadto umożliwia nowe wymagania dowód należy utworzyć przez dodanie nowych domyślnej implementacji do klasy podstawowej.       Wszystkie typy używane przez środowisko CLR jako dowód obiekty zostały zaktualizowane w [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] pochodzić z EvidenceBase."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EvidenceBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.#ctor
  id: '#ctor'
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Policy.EvidenceBase&quot;> </xref> klasy."
  remarks: "Wszystkie obiekty mają być używane jako dowód muszą podlegać serializacji. Należy oznaczyć wszystkie typy pochodne jako możliwy do serializacji, ponieważ atrybutowi serializable nie są propagowane do klas pochodnych."
  syntax:
    content: protected EvidenceBase ();
    parameters: []
  overload: System.Security.Policy.EvidenceBase.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Obiekt ma być używany jako dowód nie jest możliwy do serializacji."
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.Clone
  id: Clone
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Tworzy nowy obiekt, który jest pełną kopią bieżącego wystąpienia."
  remarks: "Duplikat jest kompletna kopia, która obejmuje wszystkie obiekty dowód w kolekcji."
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Kopię tego obiektu dowód."
  overload: System.Security.Policy.EvidenceBase.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Policy.EvidenceBase.#ctor
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
- uid: System.Security.Policy.EvidenceBase.Clone
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.#ctor*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.Clone*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone
  nameWithType: EvidenceBase.Clone
