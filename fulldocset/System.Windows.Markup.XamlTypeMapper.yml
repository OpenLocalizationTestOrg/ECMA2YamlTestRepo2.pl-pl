### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlTypeMapper
  id: XamlTypeMapper
  children:
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  - System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  - System.Windows.Markup.XamlTypeMapper.DefaultMapper
  - System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  langs:
  - csharp
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
  type: Class
  summary: "Mapuje nazwę elementu XAML na odpowiednie CLR <xref:System.Type>w zestawach.</xref:System.Type>"
  remarks: "XamlTypeMapper jest częścią zaawansowanym scenariuszu WPF, który dostarcza alternatywnym kontekście i <xref:System.Windows.Markup.XamlReader> <xref:System.Windows.Markup.XamlWriter>.</xref:System.Windows.Markup.XamlWriter> </xref:System.Windows.Markup.XamlReader> Aby uzyskać [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] aplikacje WPF, należy rozważyć zastępowanie <xref:System.Xaml.XamlSchemaContext>dla tego scenariusza, a nie podjęto próbę użycia XamlTypeMapper.</xref:System.Xaml.XamlSchemaContext>       XamlTypeMapper może służyć do zapewnienia analizator XAML z informacjami dotyczącymi mapowania niestandardowych za pomocą bardziej bezpośrednie techniki niż stosowania <xref:System.Windows.Markup.XmlnsDefinitionAttribute>wartości kodu zestawu.</xref:System.Windows.Markup.XmlnsDefinitionAttribute> Może to być przydatne do konsolidacji wszystkich nazw CLR w zestawie lub dla odwołania do typów, które są gotowe do XAML w istniejącego zestawu bez konieczności ponownego kompilowania go tak, aby dodać <xref:System.Windows.Markup.XmlnsDefinitionAttribute>Przypisywanie.</xref:System.Windows.Markup.XmlnsDefinitionAttribute>       Zwykle Utwórz wystąpienie XamlTypeMapper aby można było określić <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A>wartość właściwości dla <xref:System.Windows.Markup.ParserContext>.</xref:System.Windows.Markup.ParserContext> </xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> <xref:System.Windows.Markup.ParserContext>z kolei może być używana jako kontekst dla <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>wywołań.</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName> </xref:System.Windows.Markup.ParserContext>      ## Domyślne mapowanie można uzyskać mapowania domyślny, za pomocą <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A>właściwości statycznej.</xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> Domyślne mapowanie działa tylko na liście zestaw domyślnych. Nie określone informacje na temat zestawów (jak określono w konstruktorach XamlTypeMapper) jest używany.      <a name=&quot;xamlTextUsage_XamlTypeMapper&quot;></a>## Użycie tekstu języka XAML"
  syntax:
    content: public class XamlTypeMapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> nazwy klasy, określając tablicę zestawu, który <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> należy użyć."
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Tablica nazw zestawów <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> należy użyć."
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  id: '#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> przy użyciu określonej tablicy nazwy zestawu, a następnie mapuje określonego obszaru nazw."
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Tablica nazw zestawów <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> należy użyć."
    - id: namespaceMaps
      type: System.Windows.Markup.NamespaceMapEntry[]
      description: "Tablica nazw mapy <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> należy użyć."
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  id: AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Definiuje mapowanie między przestrzeni nazw XML i przestrzenie nazw CLR w zestawach i dodaje je do <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> informacji."
  remarks: "AddMappingProcessingInstruction jest programowy sposób dodać mapowania.  Na przykład różne części następujących instrukcji mapping XAML odpowiadają parametry AddMappingProcessingInstruction: ```   <Window xmlns:SDK=&quot;clr-namespace:Samples;assembly=SDKSamples&quot;>   ...   ``` `xmlNamespace` jest `SDK`, `clrNamespace` jest `Samples`i `assemblyName` jest `SDKSamples`."
  syntax:
    content: public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "Prefiks przestrzeni nazw XML."
    - id: clrNamespace
      type: System.String
      description: "Przestrzeń nazw środowiska CLR, która zawiera typy do mapowania."
    - id: assemblyName
      type: System.String
      description: "Zestaw, który zawiera przestrzeń nazw środowiska CLR."
  overload: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>clrNamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  id: AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Żąda uprawnienia dla <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> pochodzi z typu, który jest wywoływana w obszarze pełne zaufanie uzyskiwać dostęp do określonego typu wewnętrznego."
  remarks: "Jeśli nie została zastąpiona przez podklasy, AllowInternalType zawsze zwraca `false`.       Gdy przesłonięty przez podklasę, zachowanie powinny być czy AllowInternalType powinien zwrócić `true` jeśli wewnętrzny typ może być używane; w przeciwnym razie `false`."
  syntax:
    content: protected virtual bool AllowInternalType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Typ do uzyskania dostępu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wewnętrzny typ jest możliwy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  id: DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Pobiera wystąpienie elementu <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> do użycia, jeśli nie zostało określone."
  remarks: "Domyślne mapowanie działa tylko na liście zestaw domyślnych. Nie określone informacje na temat zestawów (jak określono w <xref:System.Windows.Markup.XamlTypeMapper>konstruktorów) jest używany.</xref:System.Windows.Markup.XamlTypeMapper> Bieżąca implementacja jest domyślnej listy zestawu: `WindowsBase`, `PresentationCore`, `PresentationFramework`.       Przy użyciu domyślnego mapowania nie oznacza, że nie można użyć niestandardowych zestawów/typy w języku XAML w ogóle. Tylko oznacza, że użycie typów/zestawów niestandardowych musi następnie używać, tworząc mapowania jako konwencjonalnej techniki XAML `xmlns` atrybutów w każdej strony XAML, gdzie są przywoływane typy/zestawów, zamiast mapowanie typu interfejsu API. Aby uzyskać więcej informacji, zobacz [przestrzeń nazw XAML i Namespace mapowanie WPF XAML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }
    return:
      type: System.Windows.Markup.XamlTypeMapper
      description: "Domyślne mapowanie typu."
  overload: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Pobiera środowisko CLR <xref:System.Type>zamapowanego danego elementu XAML, przy użyciu określonego obszaru nazw prefiks i elementu nazwa XML.</xref:System.Type>"
  remarks: "Jeśli nie można odnaleźć typu mapujący do informacji podanych `null` jest zwracany.       Nie dołączaj prefiks jako część `localName`. Dla żadnego prefiksem informacje o elementach XAML, oddzielić go do `xmlNamespace` i `localName` składników dla tego wywołania interfejsu API."
  syntax:
    content: public Type GetType (string xmlNamespace, string localName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "Określony prefiks przestrzeni nazw XML."
    - id: localName
      type: System.String
      description: "&quot;Lokalnie&quot; Nazwa elementu XAML można uzyskać zamapowanej <xref:System.Type>for.</xref:System.Type> Lokalny w tym kontekście oznacza mapowane w porównaniu z dostarczonych `xmlNamespace`."
    return:
      type: System.Type
      description: "<xref:System.Type>Dla obiekt, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli mapowanie nie można rozpoznać.</xref:System.Type>"
  overload: System.Windows.Markup.XamlTypeMapper.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>localName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  id: SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Określa ścieżkę do użycia podczas ładowania zestawu."
  syntax:
    content: public void SetAssemblyPath (string assemblyName, string assemblyPath);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Krótka nazwa zestawu bez rozszerzenia lub określona ścieżka (odpowiednikiem &lt;xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName&gt;)."
    - id: assemblyPath
      type: System.String
      description: "Ścieżka pliku zestawu. Ścieżka zestawu musi być pełną ścieżkę zawierającą rozszerzenie pliku."
  overload: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyPath</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Windows.Markup.XamlParseException
    commentId: T:System.Windows.Markup.XamlParseException
    description: "<code>assemblyName</code>jest <xref:System.String> - lub - <code>assemblyPath</code> jest <xref:System.String> - lub - <code>assemblyPath</code> nie jest pełną ścieżkę zawierającą rozszerzenie pliku."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.XamlParseException
  parent: System.Windows.Markup
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Windows.Markup.XamlParseException
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
- uid: System.Windows.Markup.NamespaceMapEntry[]
  parent: System.Windows.Markup
  isExternal: false
  name: NamespaceMapEntry
  nameWithType: NamespaceMapEntry
  fullName: System.Windows.Markup.NamespaceMapEntry[]
  spec.csharp:
  - uid: System.Windows.Markup.NamespaceMapEntry
    name: NamespaceMapEntry
    nameWithType: NamespaceMapEntry
    fullName: NamespaceMapEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper
  parent: System.Windows.Markup
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.#ctor*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType
  nameWithType: XamlTypeMapper.AllowInternalType
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType
  nameWithType: XamlTypeMapper.GetType
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath
  nameWithType: XamlTypeMapper.SetAssemblyPath
