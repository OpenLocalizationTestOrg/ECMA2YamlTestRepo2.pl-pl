### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.PublishLicense
  id: PublishLicense
  children:
  - System.Security.RightsManagement.PublishLicense.#ctor(System.String)
  - System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  - System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  - System.Security.RightsManagement.PublishLicense.ContentId
  - System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  - System.Security.RightsManagement.PublishLicense.ReferralInfoName
  - System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  - System.Security.RightsManagement.PublishLicense.ToString
  - System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  langs:
  - csharp
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
  type: Class
  summary: "Reprezentuje podpisem prawami zarządzać licencji publikowania."
  remarks: "PublishLicense definiuje dane zabezpieczeń dotyczące praw, użytkowników i innych informacji związanych z zabezpieczeniami.  Licencja definiuje użycia zawartości zarządzanej określonych praw określonego użytkownika na określonym komputerze.       Proces publikowania rozpoczyna się od autora dokumentu, który definiuje informacje praw w <xref:System.Security.RightsManagement.UnsignedPublishLicense>.</xref:System.Security.RightsManagement.UnsignedPublishLicense>  Następnie Autor tworzy PublishLicense podpisane przez wywołanie <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>metody <xref:System.Security.RightsManagement.UnsignedPublishLicense>.</xref:System.Security.RightsManagement.UnsignedPublishLicense> </xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>  Zserializowany formę podpisem PublishLicense następnie można podać dla użytkowników końcowych, którzy mogą używać do uzyskania dostępu <xref:System.Security.RightsManagement.UseLicense>przez wywołanie metody <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>metody PublishLicense.</xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> </xref:System.Security.RightsManagement.UseLicense>  Zwrócona <xref:System.Security.RightsManagement.UseLicense>następnie umożliwia aplikacji klienta praw, które zostały przyznane użytkownikowi.</xref:System.Security.RightsManagement.UseLicense>       W przypadku innych <xref:System.Security.RightsManagement>typów, PublishLicense jest tylko w pełni zaufane aplikacje.</xref:System.Security.RightsManagement>"
  example:
  - "The following example shows how to initialize a PublishLicense by using the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class PublishLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: PublishLicense(String)
  nameWithType: PublishLicense.PublishLicense(String)
  fullName: System.Security.RightsManagement.PublishLicense.PublishLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> klasy z określonej serializowane i podpisany <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref>."
  syntax:
    content: public PublishLicense (string signedPublishLicense);
    parameters:
    - id: signedPublishLicense
      type: System.String
      description: "A podpisane i serializacji licencji publikowania."
  overload: System.Security.RightsManagement.PublishLicense.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>signedPublishLicense</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "Licencja jest nieprawidłowa."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  id: AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: AcquireUseLicense(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(SecureEnvironment)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Próbuje pobrać <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> dla użytkownika lub grupy użytkowników w określonym <xref href=&quot;System.Security.RightsManagement.SecureEnvironment&quot;> </xref>."
  syntax:
    content: public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "Bezpieczne środowisko dla aktywacji licencji i powiązania."
    return:
      type: System.Security.RightsManagement.UseLicense
      description: "<xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> Dla użytkownika lub grupy użytkowników w określonym <code> secureEnvironment </code>."
  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>secureEnvironment</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "Uwierzytelnianie nie powiodło się."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  id: AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: AcquireUseLicenseNoUI(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Próbuje pobrać <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> dla użytkownika lub grupy użytkowników w określonym <xref href=&quot;System.Security.RightsManagement.SecureEnvironment&quot;> </xref>."
  remarks: "Metoda AcquireUseLicenseNoUI pomija okno dialogowe uwierzytelniania sieciowego systemu Windows. Jeśli żądanie licencji zostało odrzucone, ponieważ użytkownik nie ma uprawnień, AcquireUseLicenseNoUI uniemożliwia wyświetlanie okna dialogowego uwierzytelniania sieciowego. Umożliwia dyskretnej nabycia podczas próby uzyskania licencji w zadania w tle lub interfejs niezwiązanych z użytkownikiem, który może być wyświetlany myląca oknach dialogowych."
  syntax:
    content: public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "Bezpieczne środowisko dla aktywacji licencji i powiązania."
    return:
      type: System.Security.RightsManagement.UseLicense
      description: "<xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> Dla użytkownika lub grupy użytkowników w określonym <code> secureEnvironment </code>."
  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>secureEnvironment</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "Uwierzytelnianie nie powiodło się."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: PublishLicense.ContentId
  fullName: System.Security.RightsManagement.PublishLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Pobiera identyfikator zawartości utworzyć wydawcy."
  remarks: "Utwórz wydawców <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A>do identyfikowania zawartości chronionej.</xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A>"
  syntax:
    content: public Guid ContentId { get; }
    return:
      type: System.Guid
      description: "Utworzyć wydawcy identyfikator zawartości."
  overload: System.Security.RightsManagement.PublishLicense.ContentId*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  id: DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: DecryptUnsignedPublishLicense(CryptoProvider)
  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
  fullName: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Zwraca odszyfrowane <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref> wersja tej podpisany <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref>."
  remarks: "Metoda DecryptUnsignedPublishLicense umożliwia właściciela licencji i użytkowników, którzy zostały przyznane <xref:System.Security.RightsManagement.ContentRight>wyodrębnić oryginalne informacje, które były szyfrowane, gdy <xref:System.Security.RightsManagement.PublishLicense>został utworzony.</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.ContentRight>"
  syntax:
    content: public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Usługi rights management do użycia podczas odszyfrowywania licencji."
    return:
      type: System.Security.RightsManagement.UnsignedPublishLicense
      description: "Wersja odszyfrowane, bez znaku tej licencji."
  overload: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cryptoProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName
  id: ReferralInfoName
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ReferralInfoName
  nameWithType: PublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Pobiera nazwę kontaktu autora lub wydawcy zawartości."
  remarks: "Długość ciągu zwróconego przez właściwość ReferralInfoName nie są szyfrowane i jest dostępny nawet wtedy, gdy użytkownik nie ma jeszcze <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense>  Zwracany ciąg pozwala użytkownikom skontaktuj się z wydawcą, aby zażądać <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense>"
  syntax:
    content: public string ReferralInfoName { get; }
    return:
      type: System.String
      description: "Nazwa kontaktu autora lub wydawcy zawartości."
  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  id: ReferralInfoUri
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ReferralInfoUri
  nameWithType: PublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Pobiera kontakt [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] autora lub wydawcy zawartości."
  remarks: "Długość ciągu zwróconego przez właściwość ReferralInfoUri nie są szyfrowane i jest dostępny nawet wtedy, gdy użytkownik nie ma jeszcze <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense>  Zwracany ciąg pozwala użytkownikom skontaktuj się z wydawcą, aby zażądać <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense>"
  syntax:
    content: public Uri ReferralInfoUri { get; }
    return:
      type: System.Uri
      description: "Skontaktuj się z [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] autora lub wydawcy zawartości."
  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: PublishLicense.ToString()
  fullName: System.Security.RightsManagement.PublishLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Zwraca zserializowana [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] ciąg, który został użyty do utworzenia tej licencji."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Zserializowana [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] ciąg, który został użyty do utworzenia tej licencji."
  overload: System.Security.RightsManagement.PublishLicense.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  id: UseLicenseAcquisitionUrl
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: UseLicenseAcquisitionUrl
  nameWithType: PublishLicense.UseLicenseAcquisitionUrl
  fullName: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Pobiera [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] do użycia na potrzeby pobierania <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>."
  remarks: "Właściwość UseLicenseAcquisitionUrl jest używana przez <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>metodę, gdy użytkownik nabędzie <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>"
  syntax:
    content: public Uri UseLicenseAcquisitionUrl { get; }
    return:
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] Do użycia na potrzeby pobierania <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>."
  overload: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.RightsManagement.RightsManagementException
  parent: System.Security.RightsManagement
  isExternal: false
  name: RightsManagementException
  nameWithType: RightsManagementException
  fullName: System.Security.RightsManagement.RightsManagementException
- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: PublishLicense(String)
  nameWithType: PublishLicense.PublishLicense(String)
  fullName: System.Security.RightsManagement.PublishLicense.PublishLicense(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicense(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(SecureEnvironment)
- uid: System.Security.RightsManagement.UseLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicenseNoUI(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
- uid: System.Security.RightsManagement.PublishLicense.ContentId
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ContentId
  nameWithType: PublishLicense.ContentId
  fullName: System.Security.RightsManagement.PublishLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: DecryptUnsignedPublishLicense(CryptoProvider)
  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
  fullName: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
- uid: System.Security.RightsManagement.UnsignedPublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense
  fullName: System.Security.RightsManagement.UnsignedPublishLicense
- uid: System.Security.RightsManagement.CryptoProvider
  parent: System.Security.RightsManagement
  isExternal: false
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: PublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: PublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Security.RightsManagement.PublishLicense.ToString
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ToString()
  nameWithType: PublishLicense.ToString()
  fullName: System.Security.RightsManagement.PublishLicense.ToString()
- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: UseLicenseAcquisitionUrl
  nameWithType: PublishLicense.UseLicenseAcquisitionUrl
  fullName: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
- uid: System.Security.RightsManagement.PublishLicense.#ctor*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense.PublishLicense
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicense
  nameWithType: PublishLicense.AcquireUseLicense
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicenseNoUI
  nameWithType: PublishLicense.AcquireUseLicenseNoUI
- uid: System.Security.RightsManagement.PublishLicense.ContentId*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ContentId
  nameWithType: PublishLicense.ContentId
- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: DecryptUnsignedPublishLicense
  nameWithType: PublishLicense.DecryptUnsignedPublishLicense
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: PublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: PublishLicense.ReferralInfoUri
- uid: System.Security.RightsManagement.PublishLicense.ToString*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ToString
  nameWithType: PublishLicense.ToString
- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: UseLicenseAcquisitionUrl
  nameWithType: PublishLicense.UseLicenseAcquisitionUrl
