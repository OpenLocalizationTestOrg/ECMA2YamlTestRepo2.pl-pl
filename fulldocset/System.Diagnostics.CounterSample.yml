### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.CounterSample
  id: CounterSample
  children:
  - System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)
  - System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)
  - System.Diagnostics.CounterSample.BaseValue
  - System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.CounterFrequency
  - System.Diagnostics.CounterSample.CounterTimeStamp
  - System.Diagnostics.CounterSample.CounterType
  - System.Diagnostics.CounterSample.Empty
  - System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.Equals(System.Object)
  - System.Diagnostics.CounterSample.GetHashCode
  - System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.RawValue
  - System.Diagnostics.CounterSample.SystemFrequency
  - System.Diagnostics.CounterSample.TimeStamp
  - System.Diagnostics.CounterSample.TimeStamp100nSec
  langs:
  - csharp
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
  type: Struct
  summary: "Definiuje struktury, która przechowuje dane licznika wydajności."
  remarks: ''
  example:
  - "The following example demonstrates the use of the CounterSample class to display data for a performance counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.cou_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.cou_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.cou_2_1.vb)]"
  syntax:
    content: public struct CounterSample
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)'
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType)
  nameWithType: CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType)
  fullName: System.Diagnostics.CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury i zestawy <xref:System.Diagnostics.CounterSample.CounterTimeStamp*>Właściwości na 0 (zero).</xref:System.Diagnostics.CounterSample.CounterTimeStamp*>"
  remarks: "Użyj tego konstruktora, aby pobrać początkowej próbkę licznika wydajności. Monitor systemu dostarcza automatycznie wartości tych parametrów, wywołując <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>metody po raz pierwszy.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A>"
  syntax:
    content: public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType);
    parameters:
    - id: rawValue
      type: System.Int64
      description: "Wartość liczbowa skojarzone z próbka licznika wydajności."
    - id: baseValue
      type: System.Int64
      description: "Opcjonalne, podstawowe Nieprzetworzona wartość licznika można użyć tylko wtedy, gdy próbki jest oparta na wiele liczników."
    - id: counterFrequency
      type: System.Int64
      description: "Częstotliwość, z którym licznik jest do odczytu."
    - id: systemFrequency
      type: System.Int64
      description: "Częstotliwość, z którym system odczytuje licznika."
    - id: timeStamp
      type: System.Int64
      description: "Sygnatura czasowa raw."
    - id: timeStamp100nSec
      type: System.Int64
      description: "Sygnatura czasowa raw, o wysokiej wierności."
    - id: counterType
      type: System.Diagnostics.PerformanceCounterType
      description: "A <xref href=&quot;System.Diagnostics.PerformanceCounterType&quot;> </xref> obiektu, który wskazuje typ licznika, dla którego ten przykład jest to migawka."
  overload: System.Diagnostics.CounterSample.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)'
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType,Int64)
  nameWithType: CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType,Int64)
  fullName: System.Diagnostics.CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType,Int64)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury i ustawia <xref:System.Diagnostics.CounterSample.CounterTimeStamp*>na wartość, która została przekazana cali</xref:System.Diagnostics.CounterSample.CounterTimeStamp*>"
  remarks: "Ten konstruktor umożliwia pobieranie próbek po została już wykonana początkowa próbka licznika wydajności. Monitor systemu dostarcza automatycznie wartości tych parametrów, wywołując <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>metody.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A>"
  example:
  - "The following example demonstrates how to initialize a new <xref:System.Diagnostics.CounterSample> structure, passing in values for the `rawValue`, `baseValue`, `counterFrequency`, `systemFrequency`, `timeStamp`, `timeStamp100nSec`, `counterType`, and `counterTimeStamp` parameters. After creating the <xref:System.Diagnostics.CounterSample> structure, the example displays the property values for the <xref:System.Diagnostics.CounterSample> in the console window.  \n  \n [!code-cs[CounterSample_Ctor_2#1](~/add/codesnippet/csharp/aeaaf99a-6fd9-427d-9d0d-_1.cs)]\n [!code-vb[CounterSample_Ctor_2#1](~/add/codesnippet/visualbasic/aeaaf99a-6fd9-427d-9d0d-_1.vb)]\n [!code-cpp[CounterSample_Ctor_2#1](~/add/codesnippet/cpp/aeaaf99a-6fd9-427d-9d0d-_1.cpp)]  \n[!code-cs[CounterSample_Ctor_2#2](~/add/codesnippet/csharp/aeaaf99a-6fd9-427d-9d0d-_2.cs)]\n[!code-vb[CounterSample_Ctor_2#2](~/add/codesnippet/visualbasic/aeaaf99a-6fd9-427d-9d0d-_2.vb)]\n[!code-cpp[CounterSample_Ctor_2#2](~/add/codesnippet/cpp/aeaaf99a-6fd9-427d-9d0d-_2.cpp)]"
  syntax:
    content: public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType, long counterTimeStamp);
    parameters:
    - id: rawValue
      type: System.Int64
      description: "Wartość liczbowa skojarzone z próbka licznika wydajności."
    - id: baseValue
      type: System.Int64
      description: "Opcjonalne, podstawowe Nieprzetworzona wartość licznika można użyć tylko wtedy, gdy próbki jest oparta na wiele liczników."
    - id: counterFrequency
      type: System.Int64
      description: "Częstotliwość, z którym licznik jest do odczytu."
    - id: systemFrequency
      type: System.Int64
      description: "Częstotliwość, z którym system odczytuje licznika."
    - id: timeStamp
      type: System.Int64
      description: "Sygnatura czasowa raw."
    - id: timeStamp100nSec
      type: System.Int64
      description: "Sygnatura czasowa raw, o wysokiej wierności."
    - id: counterType
      type: System.Diagnostics.PerformanceCounterType
      description: "A <xref href=&quot;System.Diagnostics.PerformanceCounterType&quot;> </xref> obiektu, który wskazuje typ licznika, dla którego ten przykład jest to migawka."
    - id: counterTimeStamp
      type: System.Int64
      description: "Czas pobrania próbki."
  overload: System.Diagnostics.CounterSample.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.BaseValue
  id: BaseValue
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: BaseValue
  nameWithType: CounterSample.BaseValue
  fullName: System.Diagnostics.CounterSample.BaseValue
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera opcjonalne, podstawowe nieprzetworzonej wartości licznika."
  remarks: ''
  example:
  - "The following example displays the value of the BaseValue property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.cou_3_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.cou_3_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.cou_3_1.vb)]"
  syntax:
    content: public long BaseValue { get; }
    return:
      type: System.Int64
      description: "Podstawowy Nieprzetworzona wartość, która jest używana tylko wtedy, gdy próbki jest oparta na wiele liczników."
  overload: System.Diagnostics.CounterSample.BaseValue*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)
  id: Calculate(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Calculate(CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample)
  fullName: System.Diagnostics.CounterSample.Calculate(CounterSample)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Oblicza licznika, przy użyciu punktu pojedynczego przykładowe dane dotyczące wydajności. Ta metoda jest zwykle używana dla typów licznika wydajności nieobliczone."
  syntax:
    content: public static float Calculate (System.Diagnostics.CounterSample counterSample);
    parameters:
    - id: counterSample
      type: System.Diagnostics.CounterSample
      description: "<xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> Struktury do użycia jako podstawowy punkt obliczanie danych dotyczących wydajności."
    return:
      type: System.Single
      description: "Wartość wydajności obliczeniowej."
  overload: System.Diagnostics.CounterSample.Calculate*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Calculate(CounterSample,CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSample.Calculate(CounterSample,CounterSample)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Oblicza licznika, za pomocą dwa punkty przykładowe dane dotyczące wydajności. Ta metoda jest zwykle używana dla typów licznika wydajności obliczeniowej, takich jak średnie."
  syntax:
    content: public static float Calculate (System.Diagnostics.CounterSample counterSample, System.Diagnostics.CounterSample nextCounterSample);
    parameters:
    - id: counterSample
      type: System.Diagnostics.CounterSample
      description: "<xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> Struktury do użycia jako podstawowy punkt obliczanie danych dotyczących wydajności."
    - id: nextCounterSample
      type: System.Diagnostics.CounterSample
      description: "<xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> Struktury do użycia jako punkt końcowy obliczanie danych dotyczących wydajności."
    return:
      type: System.Single
      description: "Wartość wydajności obliczeniowej."
  overload: System.Diagnostics.CounterSample.Calculate*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.CounterFrequency
  id: CounterFrequency
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterFrequency
  nameWithType: CounterSample.CounterFrequency
  fullName: System.Diagnostics.CounterSample.CounterFrequency
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera częstotliwość pierwotnych liczników."
  remarks: ''
  example:
  - "The following example displays the value of the CounterFrequency property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.cou_8_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.cou_8_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.cou_8_1.vb)]"
  syntax:
    content: public long CounterFrequency { get; }
    return:
      type: System.Int64
      description: "Częstotliwość, z którym licznik jest do odczytu."
  overload: System.Diagnostics.CounterSample.CounterFrequency*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.CounterTimeStamp
  id: CounterTimeStamp
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterTimeStamp
  nameWithType: CounterSample.CounterTimeStamp
  fullName: System.Diagnostics.CounterSample.CounterTimeStamp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera wartość licznika sygnatury czasowej."
  remarks: ''
  example:
  - "The following example displays the value of the CounterTimeStamp property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.cou_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.cou_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.cou_2_1.vb)]"
  syntax:
    content: public long CounterTimeStamp { get; }
    return:
      type: System.Int64
      description: "Czas pobrania próbki."
  overload: System.Diagnostics.CounterSample.CounterTimeStamp*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.CounterType
  id: CounterType
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterType
  nameWithType: CounterSample.CounterType
  fullName: System.Diagnostics.CounterSample.CounterType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera typ licznika wydajności."
  syntax:
    content: public System.Diagnostics.PerformanceCounterType CounterType { get; }
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "A <xref href=&quot;System.Diagnostics.PerformanceCounterType&quot;> </xref> obiektu, który wskazuje typ licznika, dla którego ten przykład jest to migawka."
  overload: System.Diagnostics.CounterSample.CounterType*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.Empty
  id: Empty
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Empty
  nameWithType: CounterSample.Empty
  fullName: System.Diagnostics.CounterSample.Empty
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Definiuje próbka licznika wydajności puste, niezainicjowanej typu <xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Diagnostics.CounterSample Empty;
    return:
      type: System.Diagnostics.CounterSample
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)
  id: Equals(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Equals(CounterSample)
  nameWithType: CounterSample.Equals(CounterSample)
  fullName: System.Diagnostics.CounterSample.Equals(CounterSample)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wskazuje, czy określony <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury jest taki sam, jak bieżący <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury."
  remarks: "Dwa <xref:System.Diagnostics.CounterSample>struktury są takie same, jeśli mają identyczne wartości.</xref:System.Diagnostics.CounterSample>"
  syntax:
    content: public bool Equals (System.Diagnostics.CounterSample sample);
    parameters:
    - id: sample
      type: System.Diagnostics.CounterSample
      description: "<xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> Struktury do porównania z tym wystąpieniem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> sample </code> jest taki sam, jak bieżące wystąpienie w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.CounterSample.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CounterSample.Equals(Object)
  fullName: System.Diagnostics.CounterSample.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wskazuje, czy jest określonej struktury <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury i jest taki sam jak bieżący <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury."
  remarks: "Dwa <xref:System.Diagnostics.CounterSample>struktury są takie same, jeśli mają identyczne wartości.</xref:System.Diagnostics.CounterSample>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> Struktury ma zostać porównane z bieżącej struktury."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> o </code> jest <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury i jest taki sam jak bieżące wystąpienie w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.CounterSample.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.GetHashCode
  id: GetHashCode
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CounterSample.GetHashCode()
  fullName: System.Diagnostics.CounterSample.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera wartość skrótu dla bieżącego próbka licznika."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla bieżącego próbka licznika."
  overload: System.Diagnostics.CounterSample.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: op_Equality(CounterSample,CounterSample)
  nameWithType: CounterSample.op_Equality(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSample.op_Equality(CounterSample,CounterSample)
  type: Operator
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zwraca wartość wskazującą, czy dwa <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury są takie same."
  remarks: "Dwa <xref:System.Diagnostics.CounterSample>struktury są takie same, jeśli mają identyczne wartości.</xref:System.Diagnostics.CounterSample>"
  syntax:
    content: public static bool op_Equality (System.Diagnostics.CounterSample a, System.Diagnostics.CounterSample b);
    parameters:
    - id: a
      type: System.Diagnostics.CounterSample
      description: "A <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury."
    - id: b
      type: System.Diagnostics.CounterSample
      description: "Inny <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury do porównania z struktury określony przez `a` parametru."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> and <code>b</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.CounterSample.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: op_Inequality(CounterSample,CounterSample)
  nameWithType: CounterSample.op_Inequality(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSample.op_Inequality(CounterSample,CounterSample)
  type: Operator
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zwraca wartość wskazującą, czy dwa <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktur nie są takie same."
  remarks: "Dwa <xref:System.Diagnostics.CounterSample>struktur nie są takie same, jeśli którekolwiek z ich wartości są różne.</xref:System.Diagnostics.CounterSample>"
  syntax:
    content: public static bool op_Inequality (System.Diagnostics.CounterSample a, System.Diagnostics.CounterSample b);
    parameters:
    - id: a
      type: System.Diagnostics.CounterSample
      description: "A <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury."
    - id: b
      type: System.Diagnostics.CounterSample
      description: "Inny <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> struktury do porównania z struktury określony przez `a` parametru."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> and <code>b</code> are not equal; otherwise,<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Diagnostics.CounterSample.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.RawValue
  id: RawValue
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: RawValue
  nameWithType: CounterSample.RawValue
  fullName: System.Diagnostics.CounterSample.RawValue
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera wartość nieprzetworzoną licznika."
  remarks: ''
  example:
  - "The following example displays the value of the RawValue property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.cou_4_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.cou_4_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.cou_4_1.vb)]"
  syntax:
    content: public long RawValue { get; }
    return:
      type: System.Int64
      description: "Wartość liczbowa jest skojarzony z próbka licznika wydajności."
  overload: System.Diagnostics.CounterSample.RawValue*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.SystemFrequency
  id: SystemFrequency
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: SystemFrequency
  nameWithType: CounterSample.SystemFrequency
  fullName: System.Diagnostics.CounterSample.SystemFrequency
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera częstotliwość raw systemu."
  remarks: ''
  example:
  - "The following example displays the value of the SystemFrequency property for a counter..  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.cou_6_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.cou_6_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.cou_6_1.vb)]"
  syntax:
    content: public long SystemFrequency { get; }
    return:
      type: System.Int64
      description: "Częstotliwość, z którym system odczytuje licznika."
  overload: System.Diagnostics.CounterSample.SystemFrequency*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.TimeStamp
  id: TimeStamp
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: TimeStamp
  nameWithType: CounterSample.TimeStamp
  fullName: System.Diagnostics.CounterSample.TimeStamp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera sygnaturę czasową raw."
  remarks: ''
  example:
  - "The following example displays the value of the TimeStamp property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.cou_1_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.cou_1_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.cou_1_1.vb)]"
  syntax:
    content: public long TimeStamp { get; }
    return:
      type: System.Int64
      description: "Sygnatura czasowa systemu."
  overload: System.Diagnostics.CounterSample.TimeStamp*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSample.TimeStamp100nSec
  id: TimeStamp100nSec
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: TimeStamp100nSec
  nameWithType: CounterSample.TimeStamp100nSec
  fullName: System.Diagnostics.CounterSample.TimeStamp100nSec
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera sygnaturę czasową raw, o wysokiej wierności."
  remarks: ''
  example:
  - "The following example displays the value of the TimeStamp100nSec property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.cou_0_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.cou_0_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.cou_0_1.vb)]"
  syntax:
    content: public long TimeStamp100nSec { get; }
    return:
      type: System.Int64
      description: "System sygnaturę czasową, reprezentowane w 0,1 milisekund."
  overload: System.Diagnostics.CounterSample.TimeStamp100nSec*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType)
  nameWithType: CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType)
  fullName: System.Diagnostics.CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType,Int64)
  nameWithType: CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType,Int64)
  fullName: System.Diagnostics.CounterSample.CounterSample(Int64,Int64,Int64,Int64,Int64,Int64,PerformanceCounterType,Int64)
- uid: System.Diagnostics.CounterSample.BaseValue
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: BaseValue
  nameWithType: CounterSample.BaseValue
  fullName: System.Diagnostics.CounterSample.BaseValue
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Calculate(CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample)
  fullName: System.Diagnostics.CounterSample.Calculate(CounterSample)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Calculate(CounterSample,CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSample.Calculate(CounterSample,CounterSample)
- uid: System.Diagnostics.CounterSample.CounterFrequency
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterFrequency
  nameWithType: CounterSample.CounterFrequency
  fullName: System.Diagnostics.CounterSample.CounterFrequency
- uid: System.Diagnostics.CounterSample.CounterTimeStamp
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterTimeStamp
  nameWithType: CounterSample.CounterTimeStamp
  fullName: System.Diagnostics.CounterSample.CounterTimeStamp
- uid: System.Diagnostics.CounterSample.CounterType
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterType
  nameWithType: CounterSample.CounterType
  fullName: System.Diagnostics.CounterSample.CounterType
- uid: System.Diagnostics.CounterSample.Empty
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Empty
  nameWithType: CounterSample.Empty
  fullName: System.Diagnostics.CounterSample.Empty
- uid: System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Equals(CounterSample)
  nameWithType: CounterSample.Equals(CounterSample)
  fullName: System.Diagnostics.CounterSample.Equals(CounterSample)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.CounterSample.Equals(System.Object)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Equals(Object)
  nameWithType: CounterSample.Equals(Object)
  fullName: System.Diagnostics.CounterSample.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.CounterSample.GetHashCode
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: GetHashCode()
  nameWithType: CounterSample.GetHashCode()
  fullName: System.Diagnostics.CounterSample.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Equality(CounterSample,CounterSample)
  nameWithType: CounterSample.op_Equality(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSample.op_Equality(CounterSample,CounterSample)
- uid: System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Inequality(CounterSample,CounterSample)
  nameWithType: CounterSample.op_Inequality(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSample.op_Inequality(CounterSample,CounterSample)
- uid: System.Diagnostics.CounterSample.RawValue
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: RawValue
  nameWithType: CounterSample.RawValue
  fullName: System.Diagnostics.CounterSample.RawValue
- uid: System.Diagnostics.CounterSample.SystemFrequency
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: SystemFrequency
  nameWithType: CounterSample.SystemFrequency
  fullName: System.Diagnostics.CounterSample.SystemFrequency
- uid: System.Diagnostics.CounterSample.TimeStamp
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp
  nameWithType: CounterSample.TimeStamp
  fullName: System.Diagnostics.CounterSample.TimeStamp
- uid: System.Diagnostics.CounterSample.TimeStamp100nSec
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp100nSec
  nameWithType: CounterSample.TimeStamp100nSec
  fullName: System.Diagnostics.CounterSample.TimeStamp100nSec
- uid: System.Diagnostics.CounterSample.#ctor*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample.CounterSample
- uid: System.Diagnostics.CounterSample.BaseValue*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: BaseValue
  nameWithType: CounterSample.BaseValue
- uid: System.Diagnostics.CounterSample.Calculate*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Calculate
  nameWithType: CounterSample.Calculate
- uid: System.Diagnostics.CounterSample.CounterFrequency*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterFrequency
  nameWithType: CounterSample.CounterFrequency
- uid: System.Diagnostics.CounterSample.CounterTimeStamp*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterTimeStamp
  nameWithType: CounterSample.CounterTimeStamp
- uid: System.Diagnostics.CounterSample.CounterType*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterType
  nameWithType: CounterSample.CounterType
- uid: System.Diagnostics.CounterSample.Equals*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Equals
  nameWithType: CounterSample.Equals
- uid: System.Diagnostics.CounterSample.GetHashCode*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: GetHashCode
  nameWithType: CounterSample.GetHashCode
- uid: System.Diagnostics.CounterSample.op_Equality*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Equality
  nameWithType: CounterSample.op_Equality
- uid: System.Diagnostics.CounterSample.op_Inequality*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Inequality
  nameWithType: CounterSample.op_Inequality
- uid: System.Diagnostics.CounterSample.RawValue*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: RawValue
  nameWithType: CounterSample.RawValue
- uid: System.Diagnostics.CounterSample.SystemFrequency*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: SystemFrequency
  nameWithType: CounterSample.SystemFrequency
- uid: System.Diagnostics.CounterSample.TimeStamp*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp
  nameWithType: CounterSample.TimeStamp
- uid: System.Diagnostics.CounterSample.TimeStamp100nSec*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp100nSec
  nameWithType: CounterSample.TimeStamp100nSec
