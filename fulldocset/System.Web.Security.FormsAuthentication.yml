### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "Zarządza usługi uwierzytelniania formularzy dla aplikacji sieci Web. Ta klasa nie może być dziedziczona."
  remarks: "Uwierzytelnianie formularzy umożliwia użytkownika i sprawdzanie poprawności hasła dla aplikacji sieci Web, które nie wymagają uwierzytelniania systemu Windows. Za pomocą uwierzytelniania formularzy, informacje użytkownika są przechowywane w zewnętrznym źródłem danych, takich jak <xref:System.Web.Security.Membership>bazy danych, lub w pliku konfiguracyjnym aplikacji.</xref:System.Web.Security.Membership> Po uwierzytelnieniu użytkownika, uwierzytelnianie formularzy przechowuje biletu uwierzytelniania w pliku cookie lub adres URL, dzięki czemu uwierzytelniony użytkownik nie musi podać poświadczenia z każdym żądaniem.       Uwierzytelnianie formularzy jest włączone ustawienie `mode` atrybutu elementu konfiguracji, aby `Forms`. Można wymagać, że wszystkie żądania kierowane do aplikacji zawierają biletu uwierzytelniania prawidłowego użytkownika przy użyciu elementu konfiguracji odrzucanie żądania dowolny użytkownik nieznany, jak pokazano w poniższym przykładzie.      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```W poprzednim przykładzie wszystkie żądania dla strony platformy ASP.NET, która jest częścią aplikacji wymaga prawidłowej nazwy użytkownika, która jest dostarczana przez uwierzytelnianie oparte na formularzach. Jeśli istnieje nazwa użytkownika, żądanie jest przekierowywane do skonfigurowanego <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Klasa FormsAuthentication zapewnia dostęp do metody i właściwości, których można używać w aplikacji, która służy do uwierzytelniania użytkowników. <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>Metody przekierowania przeglądarki do skonfigurowanego <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>dla użytkowników zalogować się do aplikacji.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>Uwierzytelniony użytkownik ponownie oryginalny adres URL chronionych, który odebrał żądanie lub <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> przekierowuje — metoda</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Brak metody, które umożliwiają zarządzanie biletów uwierzytelniania formularzy, jeśli to konieczne."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasy."
  remarks: "Ten konstruktor nie jest przeznaczony do użycia w kodzie."
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Weryfikuje nazwy użytkownika i hasło dla poświadczeń przechowywanych w pliku konfiguracyjnym aplikacji."
  remarks: "Metoda uwierzytelniania weryfikuje poświadczenia użytkownika, które są przechowywane w sekcji pliku konfiguracji aplikacji. Alternatywnie można użyć członkostwa ASP.NET do przechowywania poświadczeń użytkownika i wywołanie <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>do zweryfikowania poświadczeń.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Aby uzyskać więcej informacji, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](~/add/includes/ajax-current-ext-md.md).       Ze względów bezpieczeństwa hasła przechowywane w pliku konfiguracyjnym aplikacji przy użyciu można zaszyfrować <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>metody.</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa użytkownika."
    - id: password
      type: System.String
      description: "Hasło dla użytkownika."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nazwa użytkownika i hasło są prawidłowe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość domeny pliku cookie uwierzytelniania formularzy."
  remarks: "Wartość właściwości CookieDomain jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `domain` atrybut elementu konfiguracji. Wartość właściwości CookieDomain Określa, <xref:System.Web.HttpCookie.Domain%2A>że plik cookie będzie używany for.</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "<xref:System.Web.HttpCookie.Domain*>Pliku cookie uwierzytelniania formularzy.</xref:System.Web.HttpCookie.Domain*> Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana na potrzeby uwierzytelniania formularzy bez plików cookie."
  remarks: "Właściwość CookieMode odzwierciedla wartość `cookieless` atrybut elementu konfiguracji. Właściwość CookieMode Określa, czy <xref:System.Web.Security.FormsAuthenticationTicket>wartości będą przechowywane w pliku cookie sesji w przeglądarce lub przechowywane w <xref:System.Web.HttpRequest.QueryString%2A>Właściwości.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      > [!NOTE] > Podczas <xref:System.Web.Security.FormsAuthenticationTicket>wartość jest przechowywana w identyfikatorze URI, długość wygenerowanego identyfikatora URI może być dłuższa niż maksymalna dozwolona długość.</xref:System.Web.Security.FormsAuthenticationTicket> Jest to najbardziej prawdopodobne podczas <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>właściwość jest ustawiona na nazwę aplikacji i jest długa nazwa aplikacji (co najmniej&40; znaków), gdy nazwy użytkownika w aplikacji jest długa lub gdy długie <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>ciągi są przechowywane w <xref:System.Web.Security.FormsAuthenticationTicket>wartość.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Jeśli wygenerowanego identyfikatora URI jest zbyt długi, serwer sieci Web zwróci `400 - Bad Request` błędu."
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Jeden z <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> wartości, które wskazuje, czy aplikacja jest skonfigurowana na potrzeby uwierzytelniania formularzy bez plików cookie. Wartość domyślna to <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana do obsługi uwierzytelniania formularzy bez plików cookie."
  remarks: "Właściwość CookiesSupported zwraca wartości na podstawie <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>wartość i możliwości przeglądarki.</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>właściwość jest ustawiona na <xref:System.Web.HttpCookieMode>, zwróci właściwości CookiesSupported `true`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>właściwość jest ustawiona na <xref:System.Web.HttpCookieMode>, zwróci właściwości CookiesSupported `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>właściwość jest ustawiona na <xref:System.Web.HttpCookieMode>, zwróci właściwości CookiesSupported `true` Jeśli przeglądarka obsługuje pliki cookie i pliki cookie są włączone; w przeciwnym razie wartość właściwości CookiesSupported zwróci `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>właściwość jest ustawiona na <xref:System.Web.HttpCookieMode>, zwróci właściwości CookiesSupported `true` Jeśli <xref:System.Web.HttpRequest.Browser%2A>dla bieżącego <xref:System.Web.HttpContext.Request%2A>obsługuje pliki cookie i przekierowanie z plików cookie; w przeciwnym razie zwróci właściwości CookiesSupported `false`.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Jeśli aplikacja jest skonfigurowana do obsługi uwierzytelniania formularzy cookieless; w przeciwnym razie <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> obiektu oparte na biletu uwierzytelniania formularzy zaszyfrowanych przekazywany do metody."
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "Bilet uwierzytelniania szyfrowanego."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. Jeśli <code> encryptedTicket </code> parametr nie jest prawidłowy bilet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> jest zwracany."
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera adres URL, który <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasy przekieruje, jeśli nie przekierowania określony adres URL."
  remarks: "Wartość właściwości DefaultUrl jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `defaultUrl` atrybut elementu konfiguracji. Właściwość DefaultUrl jest używana przez <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metodę, jeśli nie zwrotny adres URL jest zawarte w żądaniu.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Podobnie <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>metoda zwróci DefaultUrl, jeśli nie zwrotny adres URL jest uwzględniony w żądaniu.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "Adres URL który <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasy przekieruje, jeśli nie przekierowania określony adres URL. Wartość domyślna to &quot;default.aspx&quot;."
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy uwierzytelnieni użytkownicy mogą zostać przekierowane do adresów URL w innych aplikacjach sieci Web."
  remarks: "Wartość właściwości EnableCrossAppRedirects jest ustawiona, przy użyciu `enableCrossAppRedirects` atrybut elementu konfiguracji.       Właściwość EnableCrossAppRedirects jest zaznaczona w <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metodą podczas przekierowania adresu URL nie wskazuje stronę w bieżącej aplikacji.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> W przypadku EnableCrossAppRedirects `true`, a następnie przekierowania jest wykonywane; Jeśli jest EnableCrossAppRedirects `false`, przeglądarki zostanie przekierowany do strony, zdefiniowanych w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      > [!NOTE] > Podczas przekierowywania stron w aplikacjach, należy się upewnić, że określonych atrybutów w elemencie konfiguracji są duplikowane w aplikacjach uwierzytelniony. Aby uzyskać więcej informacji i przykład zobacz [uwierzytelniania formularzy w aplikacjach](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > Podczas przekierowania międzyaplikacyjnej są dozwolone, witryny jest narażony na zabezpieczeniach kieruje użytkowników do niebezpiecznej witryny sieci Web, która używa strony logowania w witrynie. Zawsze Sprawdź, czy adres URL przekierowania, który jest zwracany przez <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>Metoda jest adres URL, którego oczekujesz, dzięki czemu można upewnić się, że zezwalają przekierowania tylko zatwierdzone witryny sieci Web.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Należy także sprawdzić, czy adres URL przekierowania używa odpowiedni protokół (HTTP lub HTTPS). Aby wykonać te weryfikacji, można dodać obsługi zdarzenia odświeżania strony do strony logowania, lub można dodać obsługi dla <xref:System.Web.UI.WebControls.Login.LoggedIn>zdarzenie <xref:System.Web.UI.WebControls.Login>kontroli.</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli uwierzytelnieni użytkownicy mogą zostać przekierowane do adresów URL w innych aplikacji sieci Web. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Umożliwia uwierzytelnianie formularzy."
  remarks: "Jeśli <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>jest właściwość `null`, że właściwość jest ustawiona wartość domyślna adresu URL z `configurationData` parametru.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Jeśli <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>jest właściwość `null`, że właściwość jest ustawiona na wartość adresu URL logowania z `configurationData` parametru.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "Kolekcja nazwa wartość, która zawiera wartości &quot;defaultUrl&quot; lub &quot;loginUrl&quot;. Parametr może być wartość null, jeśli nie znajdują się wartości dla domyślnego adresu URL lub adres URL logowania."
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Aplikacja nie jest w fazie inicjowania przed uruchomieniem."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy ciąg zawierający bilet uwierzytelniania szyfrowanego formularze odpowiedniego do użycia w pliku cookie HTTP."
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> Obiektu, z którym ma zostać utworzony biletu uwierzytelniania formularzy zaszyfrowane."
    return:
      type: System.String
      description: "Ciąg zawierający biletu uwierzytelniania formularzy zaszyfrowane."
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera nazwę pliku cookie używanego do przechowywania biletu uwierzytelniania formularzy."
  remarks: "Wartość właściwości FormsCookieName jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `name` atrybut elementu konfiguracji. FormsCookieName jest używana do utworzenia odwołania plik cookie przechowujący <xref:System.Web.Security.FormsAuthenticationTicket>informacji.</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "Nazwa pliku cookie używanego do przechowywania biletu uwierzytelniania formularzy. Wartość domyślna to &quot;. ASPXAUTH&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera ścieżkę pliku cookie uwierzytelniania formularzy."
  remarks: "Wartość właściwości FormsCookiePath jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `path` atrybut elementu konfiguracji. Określa FormsCookiePath <xref:System.Web.HttpCookie.Path%2A>dla pliku cookie, która przechowuje <xref:System.Web.Security.FormsAuthenticationTicket>informacji.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "Ścieżka pliku cookie, w którym przechowywane są informacje biletu uwierzytelniania formularzy. Wartość domyślna to &quot;/&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy plik cookie uwierzytelniania dla danej nazwy użytkownika. To nie ustawia plik cookie jako część odpowiedzi wychodzącej, dzięki czemu aplikacja może mieć większą kontrolę nad jak plik cookie jest wystawiony."
  remarks: "Ścieżka pliku cookie jest określany przez <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Nazwa uwierzytelnionego użytkownika."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> Zawierający informacje o bilecie zaszyfrowanych uwierzytelniania formularzy. Wartość domyślna dla <xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>właściwość jest używana.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy plik cookie uwierzytelniania dla danej nazwy użytkownika. To nie ustawia plik cookie jako część odpowiedzi wychodzącej."
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Nazwa uwierzytelnionego użytkownika."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "<xref:System.Web.HttpCookie.Path*>Pliku cookie uwierzytelniania.</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> Zawierający informacje o bilecie zaszyfrowanych uwierzytelniania formularzy."
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Zwraca adres URL przekierowania oryginalnego żądania, który spowodował przekierowanie do strony logowania."
  remarks: "Można użyć tej metody, jeśli chcesz wykonać przekierowania w kodzie aplikacji zamiast <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metody.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       Metoda GetRedirectUrl zwraca adres URL podany w ciągu zapytania przy użyciu `ReturnURL` nazwy zmiennej. Na przykład w adresie URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, metoda GetRedirectUrl zwraca zwrotny adres URL `caller.aspx`. Jeśli `ReturnURL` zmienna nie istnieje, metoda GetRedirectUrl zwraca adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka jest przekierowywany na stronę logowania.       Domyślnie `ReturnUrl` zmiennej musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze, metody GetRedirectUrl zwraca adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Jeśli chcesz zezwolić zwrotny adres URL do odwoływania się do strony poza bieżącą aplikacją, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwości `true` przy użyciu `enableCrossAppRedirects` atrybut elementu konfiguracji.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Ustawienie <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwości `true` umożliwia międzyaplikacyjnej przekierowania jest potencjalnym zagrożeniem dla bezpieczeństwa.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Nazwa uwierzytelnionego użytkownika."
    - id: createPersistentCookie
      type: System.Boolean
      description: "Ten parametr jest ignorowany."
    return:
      type: System.String
      description: "Ciąg, który zawiera adres URL przekierowania."
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy skrót hasła odpowiedniego do przechowywania w pliku konfiguracji na podstawie określonego hasła i algorytm wyznaczania wartości skrótu."
  remarks: "Metoda HashPasswordForStoringInConfigFile tworzy wartość skrótu hasła, która może być używana podczas zapisywania poświadczeń uwierzytelniania formularzy w pliku konfiguracyjnym aplikacji.       Poświadczenia uwierzytelniania przechowywane w pliku konfiguracyjnym aplikacji są używane przez <xref:System.Web.Security.FormsAuthentication.Authenticate%2A>metody do weryfikowania haseł dla użytkowników aplikacji.</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Alternatywnie można użyć członkostwa ASP.NET do przechowywania poświadczeń użytkownika. Aby uzyskać więcej informacji, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "Hasło do wyznaczania wartości skrótu."
    - id: passwordFormat
      type: System.String
      description: "Algorytm wyznaczania wartości skrótu do użycia. `passwordFormat`jest <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> stanowi jeden z <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> wartości wyliczenia."
    return:
      type: System.String
      description: "Hasło w formie skrótu."
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>nie jest prawidłową <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicjuje <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> obiekt na podstawie konfiguracji ustawień dla aplikacji."
  remarks: "Metoda inicjowania jest wywoływane, gdy <xref:System.Web.Security.FormsAuthenticationModule>tworzone jest wystąpienie <xref:System.Web.Security.FormsAuthentication>klasy.</xref:System.Web.Security.FormsAuthentication> </xref:System.Web.Security.FormsAuthenticationModule> Ta metoda nie jest przeznaczona do wywoływania z kodu."
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy jest włączone uwierzytelnianie formularzy."
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli włączone jest uwierzytelnianie formularzy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera adres URL do strony logowania, która <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> nastąpi przekierowanie klasy."
  remarks: "Wartość właściwości LoginUrl jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `loginUrl` atrybut elementu konfiguracji. LoginUrl jest używany przez <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>metody.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "Adres URL logowania stronie <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> nastąpi przekierowanie klasy. Wartość domyślna to &quot;login.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Przekierowuje uwierzytelnionego użytkownika do pierwotnie żądanego adresu URL lub domyślnego adresu URL."
  remarks: "Metoda RedirectFromLoginPage przekierowuje do adresu URL określonego w ciągu zapytania przy użyciu `ReturnURL` nazwy zmiennej. Na przykład w adresie URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, metoda RedirectFromLoginPage przekierowuje do zwrotny adres URL `caller.aspx`. Jeśli `ReturnURL` zmienna nie istnieje, metoda RedirectFromLoginPage przekierowuje do adresu URL <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka jest przekierowywany na stronę logowania.       Domyślnie `ReturnUrl` zmiennej musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze, metody RedirectFromLoginPage przekierowania do adresu URL <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Jeśli chcesz zezwolić przekierowuje do strony poza bieżącą aplikacją, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwości `true` przy użyciu `enableCrossAppRedirects` atrybut elementu konfiguracji.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Ustawienie <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwości `true` umożliwia międzyaplikacyjnej przekierowania jest potencjalnym zagrożeniem dla bezpieczeństwa.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>właściwość jest `true`oraz `ReturnUrl` zmiennej znajduje się w bieżącej aplikacji lub <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwość jest `true`, następnie metoda RedirectFromLoginPage wystawia bilet uwierzytelnienia i umieszcza je w pliku cookie domyślne przy użyciu <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>— Metoda.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>jest `false` i ścieżce przekierowania do adresu URL w bieżącej aplikacji, biletu jest wydane jako część adresu URL przekierowania.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>jest `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>jest `true`, i Przekierowanie adresu URL nie odwołuje się do strony w bieżącej aplikacji, metoda RedirectFromLoginPage wystawia bilet uwierzytelnienia i umieszcza je w <xref:System.Web.HttpRequest.QueryString%2A>Właściwości.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Nazwa uwierzytelnionego użytkownika."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'Zwrotny adres URL określony w ciąg zapytania zawiera protokołu innego niż HTTP: lub HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Przekierowuje uwierzytelnionego użytkownika do pierwotnie żądanego adresu URL lub domyślny adres URL dla pliku cookie uwierzytelniania formularzy przy użyciu ścieżki określony plik cookie."
  remarks: "Metoda RedirectFromLoginPage przekierowuje do zwrotny adres URL określony w ciągu zapytania przy użyciu `ReturnURL` nazwy zmiennej. Na przykład w adresie URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, metoda RedirectFromLoginPage przekierowuje do zwrotny adres URL `caller.aspx`. Jeśli `ReturnURL` zmienna nie istnieje, metoda RedirectFromLoginPage przekierowuje do adresu URL <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka jest przekierowywany na stronę logowania.       Domyślnie `ReturnUrl` zmiennej musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze, RedirectFromLoginPage metody przekierowuje do adresu URL <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Jeśli chcesz zezwolić przekierowuje do strony poza bieżącą aplikacją, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwości `true` przy użyciu `enableCrossAppRedirects` atrybut elementu konfiguracji.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Ustawienie <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwości `true` umożliwia międzyaplikacyjnej przekierowania jest potencjalnym zagrożeniem dla bezpieczeństwa.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Właściwości.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>właściwość jest `true`oraz `ReturnUrl` zmiennej znajduje się w bieżącej aplikacji lub <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>właściwość jest `true`, następnie metoda RedirectFromLoginPage wystawia bilet uwierzytelnienia i umieszcza je w pliku cookie, określony przez `strCookiePath` przy użyciu parametru <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>— Metoda.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>jest `false` i ścieżce przekierowania do adresu URL w bieżącej aplikacji, biletu jest wydane jako część adresu URL przekierowania.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>jest `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>jest `true`, i Przekierowanie adresu URL nie odwołuje się do strony w bieżącej aplikacji, metoda RedirectFromLoginPage wystawia bilet uwierzytelnienia i umieszcza je w <xref:System.Web.HttpRequest.QueryString%2A>Właściwości.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Nazwa uwierzytelnionego użytkownika."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Ścieżka pliku cookie dla biletu uwierzytelniania formularzy."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'Zwrotny adres URL określony w ciąg zapytania zawiera protokołu innego niż HTTP: lub HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Przekierowuje przeglądarki do adresu URL logowania."
  remarks: "Metoda RedirectToLoginPage przekierowuje przeglądarki do <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Metoda RedirectToLoginPage nie czyści pliku cookie uwierzytelniania formularzy. Metoda RedirectToLoginPage w połączeniu z <xref:System.Web.Security.FormsAuthentication.SignOut%2A>metody do logowania jednego użytkownika i zezwolić inny użytkownik się zalogować.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Przekierowuje do adresu URL logowania określony ciąg zapytania przeglądarki."
  remarks: "Metoda RedirectToLoginPage przekierowuje przeglądarkę, aby <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>i zawiera `extraQueryString` wartość jako <xref:System.Management.ManagementQuery.QueryString%2A>dla adresu URL.</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Metoda RedirectToLoginPage nie czyści pliku cookie uwierzytelniania formularzy. Metoda RedirectToLoginPage w połączeniu z <xref:System.Web.Security.FormsAuthentication.SignOut%2A>metody do logowania jednego użytkownika i zezwolić inny użytkownik się zalogować.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "Ciąg zapytania do dołączenia do adresu URL przekierowania."
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Warunkowo aktualizacji problem daty i godziny i daty ważności oraz czas <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  remarks: "Metoda RenewTicketIfOld aktualizacji, datę wygaśnięcia i godzina podana <xref:System.Web.Security.FormsAuthenticationTicket>Jeśli bieżąca data i godzina minus <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>wartość jest większa niż <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>wartość minus bieżącą datę i godzinę.</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       Bilet został zaktualizowany o <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>bieżącą datę i godzinę ustawioną właściwość i <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>Właściwość do bieżącej daty i czasu oraz oryginalnej <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>wartość minus oryginalnej <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>wartość.</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Bilet uwierzytelniania formularzy do zaktualizowania."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Zaktualizowany interfejs <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy plik cookie uwierzytelniania formularzy wymaga protokołu SSL w celu zwrócenia na serwer."
  remarks: "Wartość właściwości parametru RequireSSL jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `requireSSL` atrybut elementu konfiguracji. Można określić w pliku Web.config dla aplikacji ASP.NET czy SSL (Secure Sockets Layer) jest wymagany do zwrócenia pliku cookie uwierzytelniania formularzy do serwera przez ustawienie `requireSSL` atrybutu. Aby uzyskać więcej informacji zobacz <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       Zalecane jest konfigurując `requireSSL` jako `false`, można także skonfigurować `slidingExpiration` jako `false`, aby zmniejszyć ilość czasu, dla którego biletu jest nieprawidłowy."
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli protokół SSL jest wymagany, aby przywrócić plik cookie uwierzytelniania formularzy z serwerem; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy bilet uwierzytelnienia z podaną nazwą użytkownika i dodaje go do kolekcji plików cookie odpowiedzi lub adres URL, jeśli używasz bez plików cookie uwierzytelniania."
  remarks: "Metoda SetAuthCookie dodaje biletu uwierzytelniania formularzy do zbierania plików cookie lub adres URL Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>jest `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Biletu uwierzytelniania formularzy zapewnia uwierzytelnianie formularzy informacje dla następnego żądania przez przeglądarkę. Z uwierzytelniania formularzy używając metody SetAuthCookie można uwierzytelnić użytkownika, ale nadal zachowanie kontroli nad nawigacji z przekierowywaniem."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Nazwa uwierzytelnionego użytkownika. Nie ma do mapowania na konto systemu Windows."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy bilet uwierzytelnienia nazwy użytkownika i dodaje go do kolekcji plików cookie odpowiedzi, za pomocą ścieżki dostarczonego pliku cookie lub adres URL, jeśli używasz bez plików cookie uwierzytelniania."
  remarks: "Metoda SetAuthCookie dodaje biletu uwierzytelniania formularzy do zbierania plików cookie lub adres URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>jest `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Biletu uwierzytelniania formularzy zapewnia uwierzytelnianie formularzy informacje dla następnego żądania przez przeglądarkę. Z uwierzytelniania formularzy używając metody SetAuthCookie można uwierzytelnić użytkownika, ale nadal zachowanie kontroli nad nawigacji z przekierowywaniem."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Nazwa uwierzytelnionego użytkownika."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Ścieżka pliku cookie dla biletu uwierzytelniania formularzy."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Usuwa biletu uwierzytelniania formularzy z przeglądarki."
  remarks: "Metoda wylogowanie usuwa dane biletu uwierzytelniania formularzy z pliku cookie lub adres URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>jest `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Metoda wylogowanie w połączeniu z <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>metody do logowania jednego użytkownika i zezwolić inny użytkownik się zalogować.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       Uruchom wyłącznie w trybie bez plików cookie, lub jeśli obsługuje zarówno uwierzytelnionych i anonimowych użytkowników, należy jawnie kontrolować przekierowanie do strony logowania, jeśli wymagana logiki biznesowej specjalne można wykonać w wyniku usunięcia anonimowy identyfikator.       Gdy wywoływana jest metoda Wyloguj się, przekierowanie do strony logowania aplikacji zostało utworzone przez wywołanie <xref:System.Web.HttpResponse.Redirect%2A>metody z `endResponse` ustawiona `false`.</xref:System.Web.HttpResponse.Redirect%2A> Przekierowanie odbywa się, dopóki bieżąca strona zakończono wykonywanie, co dodatkowy kod może być uruchamiane. Jeśli kod zawiera jawne przekierowania do innej strony, użytkownik jest przekierowywany na stronę logowania w pliku konfiguracji aplikacji.       Wywołanie metody wylogowanie powoduje usunięcie tylko pliku cookie uwierzytelniania formularzy. Serwer sieci Web nie przechowuje biletów uwierzytelniania prawidłowe i wygasłe do późniejszego porównania. Dzięki temu lokacji narażony na atak powtarzania złośliwy użytkownik uzyska pliku cookie uwierzytelniania formularzy prawidłowe. Aby zwiększyć bezpieczeństwo, korzystając z pliku cookie uwierzytelniania formularzy, należy wykonać następujące czynności:-Użyj wygaśnięcia bezwzględne plików cookie uwierzytelniania formularzy, ustawiając <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>właściwości `false`.</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Ogranicza to okno odtworzone hijacked pliku cookie.      -Tylko wystawiania i akceptowania plików cookie uwierzytelniania za pośrednictwem Secure Sockets Layer (SSL), ustawiając <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>właściwości `true` i uruchamiając całej witryny sieci Web w ramach protokołu SSL.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Ustawienie <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>właściwości `true` gwarantuje, że ASP.NET nigdy nie przesyła pliku cookie uwierzytelniania w przeglądarce za pośrednictwem połączenia bez użycia protokołu SSL; jednak klient nie może być przestrzegać zabezpieczone ustawienie w pliku cookie.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Oznacza to, że klient może wysyłać pliku cookie uwierzytelniania formularzy przy użyciu połączenia bez użycia protokołu SSL, w związku z tym pozostawienie podatne na przejęcie kontroli. Aby zapobiec klient wysyła pliku cookie uwierzytelniania formularzy w wyczyść uruchamiając całej witryny sieci Web w ramach protokołu SSL.      -Użyj magazynu trwałego na serwerze do rejestrowania, gdy użytkownik zaloguje się poza witrynę sieci Web, a następnie użyj zdarzeń aplikacji, takich jak <xref:System.Web.HttpApplication.PostAuthenticateRequest>zdarzenia w celu określenia, czy bieżący użytkownik został uwierzytelniony za pomocą uwierzytelniania formularzy.</xref:System.Web.HttpApplication.PostAuthenticateRequest> Jeśli użytkownik został uwierzytelniony za pomocą uwierzytelniania formularzy i informacji w magazynie trwały wskazuje wylogowaniem użytkownika, niezwłocznie wyczyść pliku cookie uwierzytelniania i przekierowania przeglądarki z powrotem do strony logowania. Po pomyślnym zalogowaniu aktualizacji magazynu, aby uwzględnić, czy użytkownik jest zalogowany. Możesz użyć tej metody, aplikacja musi śledzić stan zalogowanego użytkownika i należy wymusić bezczynnych użytkowników do logowania."
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy przedłużanie ważności jest włączone."
  remarks: "Wartość właściwości SlidingExpiration jest ustawiana za pomocą `slidingExpiration` atrybut elementu konfiguracji.       Przedłużanie ważności resetuje czas wygaśnięcia prawidłowy plik cookie Jeśli żądań i ponad połowa limit czasu upłynął. Jeśli plik cookie wygasa, użytkownik musi zostać ponownie uwierzytelnione. Ustawienie właściwości SlidingExpiration `false` zwiększyć bezpieczeństwo aplikacji poprzez ograniczenie czasu, dla którego plik cookie uwierzytelniania jest prawidłowy, oparte na skonfigurowanego `timeout` wartość.       Zalecamy, aby po skonfigurowaniu `requireSSL` jako `false`, można także skonfigurować `slidingExpiration` jako `false`, aby zmniejszyć ilość czasu, dla którego biletu jest nieprawidłowy."
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli przedłużanie ważności jest włączone; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy ma być używany uniwersalny czas koordynowany (UTC) lub czas lokalny dla daty wygaśnięcia biletu."
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "Wartość, która wskazuje, czy ma być używany uniwersalny czas koordynowany (UTC) lub czas lokalny dla daty wygaśnięcia biletu."
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera czas wygaśnięcia biletu uwierzytelniania."
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "Wygasa czas przed bilet uwierzytelnienia."
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
