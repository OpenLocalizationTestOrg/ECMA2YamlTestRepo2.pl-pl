### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable
  id: IWebPartTable
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  langs:
  - csharp
  name: IWebPartTable
  nameWithType: IWebPartTable
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable
  type: Interface
  summary: "Definiuje interfejs dostawcy do łączenia dwóch formantów serwera przy użyciu całej tabeli danych."
  remarks: "Ten interfejs jest przeznaczony do użycia z połączeń części sieci Web. W przypadku połączenia składników Web Part dwóch formantów serwera, które znajdują się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy ustanowić połączenie i udziału danych, z jeden formant, który działa jako klient i inne kontrolki pełnią funkcję dostawcy.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Mechanizm udostępnianie danych w połączeniu składników Web Part jest wystąpienie interfejsu, który dostawca służy do konsumenta za pomocą metody wywołania zwrotnego. Nawiązanie połączenia klienta i dostawcy musi działać z tego samego typu interfejsu udostępnianie danych. Jeśli klient nie rozpoznaje typ interfejsu wysyłane przez dostawcę, jest nadal możliwe nawiązanie formantów za pomocą transformatora ( <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>obiektu) konwertujący wystąpienie interfejsu wysyłane przez dostawcę do typu, który rozpoznaje konsumenta.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Szczegółowe informacje dotyczące połączenia, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>i [Omówienie połączeń części sieci Web](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       Interfejs IWebPartTable to interfejs dostawcy dołączonego kontroli części sieci Web, Ustaw jako standardowy interfejs do tworzenia połączeń z tabeli danych. Można również tworzyć niestandardowe interfejsy do korzystania z połączeń części sieci Web, ale w wielu opartych na danych aplikacji sieci Web, jest przydatne do utworzenia połączenia na podstawie typowe pola (Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartField>interfejsu), wiersz (Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>interfejsu), lub tabeli ze źródła danych.</xref:System.Web.UI.WebControls.WebParts.IWebPartRow> </xref:System.Web.UI.WebControls.WebParts.IWebPartField> W związku z typowych <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolować działając jako dostawcę może implementować interfejs IWebPartTable i zapewnić wystąpienie interfejsu do odbiorców w metodzie specjalne wywołania zwrotnego.</xref:System.Web.UI.WebControls.WebParts.WebPart> Na przykład dostawca może implementować interfejsu IWebPartTable dla tabeli, która zawiera dane dotyczące wydajności finansowych. Inny <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli działania specjalnej metody do odbierania wystąpienie interfejsu można wyodrębnić danych i renderowania wykresu, aby wyświetlić wynikowe informacje zdefiniowane konsumenta.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Interfejs IWebPartTable ma dwa narażonych elementów członkowskich. <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>Właściwość zwraca schematu informacji o tabeli danych z <xref:System.ComponentModel.PropertyDescriptorCollection>obiektu.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>Metoda deklaruje metody, która używa implementujący (takich jak kontrola dostawcy) można pobrać danych tabeli wystąpienie interfejsu po wywołaniu metody wywołania zwrotnego.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartTable interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartTable interface, with one control acting as the provider and the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartTable interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method in the provider, to retrieve the actual data and write it to the page.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_208_1.cs)]\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_208_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-vb[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_208_2.aspx)]\n [!code-cs[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_208_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified table, which the provider makes available through an instance of the IWebPartTable interface."
  syntax:
    content: public interface IWebPartTable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  id: GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  langs:
  - csharp
  name: GetTableData(TableCallback)
  nameWithType: IWebPartTable.GetTableData(TableCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(TableCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca dane dla tabeli, który jest używany przez interfejs jako podstawa połączenie między dwiema <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Użyj tej metody do pobierania wartości tabeli danych przekazany przez interfejs. Dostawca implementuje tę metodę, a klient wywołuje go w punkcie gdy klient jest gotowy do przetwarzania lub renderowania danych."
  example:
  - "The following code example shows the implementation and use of the GetTableData method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. The provider control implements the GetTableData method, returning the data in the specified table. The consumer control calls the GetTableData method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/csharp/dd87fd75-1dde-4c55-8fa1-_1.cs)]\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/visualbasic/dd87fd75-1dde-4c55-8fa1-_1.vb)]"
  syntax:
    content: public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.TableCallback
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.TableCallback&quot;> </xref> delegata, który zawiera adres metodę, która odbiera dane."
  overload: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartTable.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera informacje o schemacie dla tabeli danych, który jest używany do udostępniania danych między dwiema <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Ta właściwość zawiera informacje dotyczące właściwości danych w <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>wystąpienia.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Brak niejawne kontraktu między schematu odwołuje się właściwość schemat i dane w tabeli. Kontrakt jest to, że dla każdego <xref:System.ComponentModel.PropertyDescriptor>obiekt we właściwości schematu można wywołać <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>w elemencie danych tabeli można pobrać wartości w kolumnie lub wiersza tabeli.</xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> </xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. The provider control implements the Schema property. Then the consumer control, in its `RenderContents` method, queries the Schema property to retrieve information about the table as it writes the table data to the page.  \n  \n [!code-cs[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1346_1.cs)]\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1346_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> opisujący dane."
  overload: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: GetTableData(TableCallback)
  nameWithType: IWebPartTable.GetTableData(TableCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(TableCallback)
- uid: System.Web.UI.WebControls.WebParts.TableCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TableCallback
  nameWithType: TableCallback
  fullName: System.Web.UI.WebControls.WebParts.TableCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: Schema
  nameWithType: IWebPartTable.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData*
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: GetTableData
  nameWithType: IWebPartTable.GetTableData
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: Schema
  nameWithType: IWebPartTable.Schema
