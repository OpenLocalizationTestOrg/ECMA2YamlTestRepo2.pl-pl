### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.GenerateMetadata
  id: GenerateMetadata
  children:
  - System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  - System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  - System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  langs:
  - csharp
  name: GenerateMetadata
  nameWithType: GenerateMetadata
  fullName: System.EnterpriseServices.Internal.GenerateMetadata
  type: Class
  summary: "Generuje wspólnych języka wspólnego (CLR) metadanych dla składnika modelu COM +."
  remarks: "W razie potrzeby GenerateMetadata generuje zestaw, który zawiera metadanych CLR dla biblioteki określonego typu.       GenerateMetadata jest używana wewnętrznie przez program .NET Framework. Nie trzeba użyć klasy bezpośrednio w kodzie."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013ff1-730b-45e2-ba24-874b7242c425")]

      public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComSoapMetadata
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.EnterpriseServices.Internal.GenerateMetadata&quot;> </xref> klasy."
  syntax:
    content: public GenerateMetadata ();
    parameters: []
  overload: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  id: Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Generuje lub lokalizuje zestaw, który zawiera wspólnych języka wspólnego (CLR) metadanych dla składnika modelu COM + reprezentowany przez określonej biblioteki typów."
  remarks: "Jeśli to konieczne, metoda Generowanie generuje zestaw, który zawiera metadanych CLR dla określonego typu biblioteki. Aby zrobić to przetwarzanie, wywołuje <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>metody.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>       Te metody nie trzeba należy wywoływać bezpośrednio w kodzie."
  syntax:
    content: public string Generate (string strSrcTypeLib, string outPath);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "Nazwa biblioteki typów, do których chcesz wygenerować zestawu."
    - id: outPath
      type: System.String
      description: "Folder, w którym można wygenerować zestawu lub zlokalizować już istniejącego zestawu."
    return:
      type: System.String
      description: "Nazwa zestawu wygenerowanego; w przeciwnym razie wartość pustego ciągu, jeśli dane wejściowe są nieprawidłowe."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  id: GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Generuje lub lokalizuje zestaw, który zawiera typowe języka wspólnego (CLR) metadane dla składnika modelu COM + reprezentowany przez określonej biblioteki typów, podpisuje zestaw z pary kluczy o silnych nazwach i instaluje je w pamięci podręcznej GAC."
  remarks: "Jeśli to konieczne, metoda GenerateMetaData generuje zestaw, który zawiera metadanych CLR dla biblioteki określonego typu. Nie generuje ona zestawu Jeśli zespół wygenerowana nazwa już istnieje w ciągu `outPath` folderu.       GenerateMetaData nie musi być wywoływany bezpośrednio w kodzie. Jest wywoływana zarówno przez <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>i <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>metody.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> </xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>       Jeśli zostaną wywołane przez <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, GenerateMetaData również generuje parę kluczy o silnych nazwach, podpisuje zestawu i instaluje je w pamięci podręcznej GAC.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>"
  syntax:
    content: public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "Nazwa biblioteki typów, do których chcesz wygenerować zestawu."
    - id: outPath
      type: System.String
      description: "Folder, w którym można wygenerować zestawu lub zlokalizować już istniejącego zestawu."
    - id: PublicKey
      type: System.Byte[]
      description: "Klucz publiczny używany do importowania informacji o typie biblioteki do zestawu."
    - id: KeyPair
      type: System.Reflection.StrongNameKeyPair
      description: "O silnych nazwach pary kluczy używany do podpisywania wygenerowanym zestawie."
    return:
      type: System.String
      description: "Nazwa zestawu wygenerowanego; w przeciwnym razie wartość pustego ciągu, jeśli dane wejściowe są nieprawidłowe."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  id: GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Generuje lub lokalizuje zestaw, który zawiera typowe języka wspólnego (CLR) metadane dla składnika modelu COM + reprezentowany przez określonej biblioteki typów, podpisuje zestaw z pary kluczy o silnych nazwach i instaluje je w pamięci podręcznej GAC."
  remarks: "Jeśli to konieczne, metoda GenerateSigned generuje zestaw, który zawiera metadanych CLR dla biblioteki określonego typu. Ponadto generuje parę kluczy o silnych nazwach i podpisuje zestawu.       Aby zrobić to przetwarzanie, wywołuje <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>metody.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> Te metody nie trzeba należy wywoływać bezpośrednio w kodzie.       `InstallGac` Parametr wskazuje, czy zainstalować zestawu w globalnej pamięci podręcznej zestawów. Jednak implementacja ignoruje tę wartość i zawsze próbuje zainstalować podpisanych zestawów w globalnej pamięci podręcznej zestawów."
  syntax:
    content: public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "Nazwa biblioteki typów, do których chcesz wygenerować zestawu."
    - id: outPath
      type: System.String
      description: "Folder, w którym można wygenerować zestawu lub zlokalizować już istniejącego zestawu."
    - id: InstallGac
      type: System.Boolean
      description: "Ignorowane."
    - id: Error
      type: System.String
      description: "Ciąg, do którego mogą być zapisywane komunikat o błędzie."
    return:
      type: System.String
      description: "Nazwa zestawu wygenerowanego; w przeciwnym razie wartość pustego ciągu, jeśli dane wejściowe są nieprawidłowe."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  id: SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Wyszukuje określony plik w określonej ścieżce."
  remarks: "Aby uzyskać więcej informacji, zobacz dokumentację zestawu SDK platformy o SearchPath na [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)."
  syntax:
    content: public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka wyszukiwania pliku."
    - id: fileName
      type: System.String
      description: "Nazwa pliku do wyszukania."
    - id: extension
      type: System.String
      description: "Rozszerzenie do dodania do nazwy pliku podczas wyszukiwania plików."
    - id: numBufferChars
      type: System.Int32
      description: "Rozmiar buforu, który odbiera prawidłową ścieżkę i nazwę pliku."
    - id: buffer
      type: System.String
      description: "Bufor, który odbiera ścieżkę i nazwę pliku, znaleziono."
    - id: filePart
      type: System.Int32[]
      description: "Zmienna, która odbiera adres ostatni składnik prawidłową ścieżkę i nazwę pliku."
    return:
      type: System.Int32
      description: "Jeśli wyszukiwanie powiedzie się, że zwracana wartość jest długość ciągu skopiowane do <code> buffer </code>. Jeśli wyszukiwanie nie powiedzie się, zwracana wartość to 0."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata
  nameWithType: GenerateMetadata.GenerateMetadata
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate
  nameWithType: GenerateMetadata.Generate
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData
  nameWithType: GenerateMetadata.GenerateMetaData
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned
  nameWithType: GenerateMetadata.GenerateSigned
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath
  nameWithType: GenerateMetadata.SearchPath
