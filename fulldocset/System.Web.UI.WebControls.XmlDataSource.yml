### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSource
  id: XmlDataSource
  children:
  - System.Web.UI.WebControls.XmlDataSource.#ctor
  - System.Web.UI.WebControls.XmlDataSource.CacheDuration
  - System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  - System.Web.UI.WebControls.XmlDataSource.Data
  - System.Web.UI.WebControls.XmlDataSource.DataFile
  - System.Web.UI.WebControls.XmlDataSource.EnableCaching
  - System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  - System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  - System.Web.UI.WebControls.XmlDataSource.Save
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.WebControls.XmlDataSource.Transform
  - System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  - System.Web.UI.WebControls.XmlDataSource.TransformFile
  - System.Web.UI.WebControls.XmlDataSource.Transforming
  - System.Web.UI.WebControls.XmlDataSource.XPath
  langs:
  - csharp
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
  type: Class
  summary: "Reprezentuje źródło danych XML do formantów powiązanych z danymi."
  remarks: "W tym temacie:- [wprowadzenie](#introduction)      -   [źródeł danych XML](#source_of_xml_data)      -   [danych XML aktualizacji](#updating_xml_data)      -   [określenie transformacji XSL](#specifying_an_xsl_transformation)      -   [filtrowania, za pomocą wyrażenia XPath](#filtering_using_an_xpath_expression)      -   [buforowanie](#caching)      -   [dodatkowe funkcje](#additional_features)      -   [obiektu widoku danych](#data_view_object)      -   [składni deklaratywnej](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## formantu XmlDataSource wprowadzenie jest prezentuje danych XML do formantów powiązanych z danymi formantu źródła danych.       Można formantu XmlDataSource przez formanty powiązane z danymi do wyświetlania danych zarówno hierarchiczne i tabelarycznych. Formantu XmlDataSource zwykle jest używana do wyświetlania hierarchiczne dane XML w scenariuszach tylko do odczytu. Ponieważ rozszerza formantu XmlDataSource <xref:System.Web.UI.HierarchicalDataSourceControl>klasy, działa on z danymi hierarchicznymi.</xref:System.Web.UI.HierarchicalDataSourceControl> Implementuje również formantu XmlDataSource <xref:System.Web.UI.IDataSource>interfejsu i współdziała z tabelarycznych, lub styl listy, dane.</xref:System.Web.UI.IDataSource>      > [!NOTE] > Ze względów bezpieczeństwa, brak XmlDataSource właściwości formantu są przechowywane w widoku stanu. Ponieważ jest to technicznie możliwe do zdekodowania zawartość widoku stanu na komputerze klienckim, przechowywania poufnych informacji o strukturze danych lub jego zawartość może doprowadzić do zagrożenia ujawnieniem informacji. Należy pamiętać, że jeśli potrzebujesz do przechowywania informacji, takich jak <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>Właściwości w widoku stanu, można włączyć szyfrowanie w celu ochrony zawartości przez ustawienie <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>na `@ Page` dyrektywa.</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Deweloperzy strony używać formantu XmlDataSource do wyświetlania danych XML za pomocą formantów powiązanych z danymi.      <a name=&quot;source_of_xml_data&quot;></a>## Źródeł danych XML — XmlDataSource zazwyczaj ładuje dane XML z pliku XML, która jest określana przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> Dane XML mogą też być przechowywane bezpośrednio przez formant źródła danych za pomocą formularza ciąg <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> Jeśli chcesz transformacji danych XML, zanim zostanie wyświetlony przez formant powiązany z danymi, musisz podać arkusza stylów Extensible Stylesheet Language (XSL), transformacji. Zgodnie z danymi XML zwykle załadować z pliku arkusza stylów, wskazane przez <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Właściwości, ale można również przechowywać go w postaci ciągu bezpośrednio przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>      <a name=&quot;updating_xml_data&quot;></a>## Aktualizowanie formantu XmlDataSource danych XML to powszechnie używane w scenariuszach danych tylko do odczytu gdzie formantu powiązanego z danymi wyświetla dane XML. Jednak umożliwia także formantu XmlDataSource do edytowania danych XML. Aby edytować dane XML, należy wywołać <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>Metoda pobierania <xref:System.Xml.XmlDataDocument>obiektu, który znajduje się w pamięci reprezentację danych XML.</xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> Można użyć model obiektowy udostępniany przez <xref:System.Xml.XmlDataDocument>i <xref:System.Xml.XmlNode>obiektów zawiera, lub użyj filtrowania wyrażenia XPath do manipulowania danymi w dokumencie.</xref:System.Xml.XmlNode> </xref:System.Xml.XmlDataDocument> Po wprowadzeniu zmian do reprezentacji w pamięci danych XML, możesz zapisać plik na dysku przez wywołanie metody <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metody.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>       Istnieją pewne ograniczenia do możliwości edycji formantu XmlDataSource:-dane XML muszą zostać załadowane z pliku XML, który jest wskazywany przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>Właściwości, a nie z wbudowanym kodzie XML określono w <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -Brak przekształcenia XSLT, który może zostać określony w <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>lub <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      - <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>— Metoda nie obsługuje równoczesnych operacji zapisywania innego żądania.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Jeśli więcej niż jeden użytkownik edytuje plik XML za pomocą formantu XmlDataSource, nie ma żadnej gwarancji, że wszyscy użytkownicy działają z tymi samymi danymi. Istnieje również możliwość <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>operację, aby zakończyć się niepowodzeniem z powodu te same kwestie współbieżności.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>      <a name=&quot;specifying_an_xsl_transformation&quot;></a>## Określanie transformacji XSL A operacji typowe przeprowadzane przy użyciu danych XML jest przekształcania z jednego zestawu danych XML do innego. Przekształcanie XML za pomocą obsługuje formantu XmlDataSource <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>i <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Właściwości, które określają arkusza stylów XSL do zastosowania do danych XML, zanim zostanie przekazany do formantu powiązanego z danymi, i <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>Właściwości, dzięki czemu można podać argumentów arkusz stylów XSLT dynamicznych do użycia przez arkusz stylów XSL podczas transformacji.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Jeśli określisz filtrowania, za pomocą wyrażenia XPath <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>właściwość jest stosowana po wystąpieniu transformacja.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      > [!NOTE] > Klasy elementu XmlDataSource używa przestarzałe <xref:System.Xml.Xsl.XslTransform>klasę, aby wykonywać transformacje XSL.</xref:System.Xml.Xsl.XslTransform> Jeśli chcesz korzystać z funkcji arkusza stylów, wprowadzonych po <xref:System.Xml.Xsl.XslTransform>klasa została uznana za przestarzałą, zastosowanie transformacji ręcznie, przy użyciu <xref:System.Xml.Xsl.XslCompiledTransform>klasy.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>      <a name=&quot;filtering_using_an_xpath_expression&quot;></a>## Filtrowania, za pomocą wyrażenia XPath przez domyślnie XmlDataSource kontroli ładuje wszystkie dane XML w pliku XML, identyfikowane przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>Właściwości lub znaleziono wbudowany w <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>Właściwości, ale można filtrować dane za pomocą wyrażenia XPath.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>Właściwość obsługuje filtr XPath składni są stosowane po załadowane i transformacji danych XML.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      <a name=&quot;caching&quot;></a>## Buforowania dla celów wydajności, buforowanie jest domyślnie włączona dla formantu XmlDataSource. Otwieranie i Odczyt pliku XML na serwerze, za każdym razem, gdy żądana strona może zmniejszyć wydajność aplikacji. Buforowanie pozwala zmniejszyć obciążenie przetwarzania na serwerze kosztem pamięci na serwerze sieci Web; w większości przypadków jest to dobry zależność. Formantu XmlDataSource automatycznie buforuje dane w przypadku <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>właściwość jest ustawiona na `true`i <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>właściwość jest ustawiona na liczbę sekund, które pamięć podręczna przechowuje dane przed unieważnienia pamięci podręcznej.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> Można użyć <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>dopasować zachowania buforowania danych kontroli źródła.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>      <a name=&quot;additional_features&quot;></a>## Dodatkowe funkcje w poniższej tabeli wymieniono dodatkowe funkcje, które są obsługiwane przez formant XmlDataSource.      | Możliwość | Opis elementu |   |----------------|-----------------|   | Sortowanie | Nie jest obsługiwana przez kontrolkę XmlDataSource. |   | Filtrowanie | Właściwość <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>może służyć do filtrowania danych XML przy użyciu odpowiedniego wyrażenia XPath. |   | Stronicowanie | Nie jest obsługiwana przez kontrolkę XmlDataSource. |   | Aktualizowanie | Obsługiwane przez bezpośrednie manipulowanie <xref:System.Xml.XmlDataDocument>, a następnie wywołania metody <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |   | Usuwanie | Obsługiwane przez bezpośrednie manipulowanie <xref:System.Xml.XmlDataDocument>, a następnie wywołania metody <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |   | Wstawianie | Obsługiwane przez bezpośrednie manipulowanie <xref:System.Xml.XmlDataDocument>, a następnie wywołania metody <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |   | Buforowanie | Domyślnie włączone, z właściwością <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>równa 0 (infinite) i zestaw do <xref:System.Web.UI.DataSourceCacheExpiry>właściwości <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>. |      <a name=&quot;data_view_object&quot;> </a> ## Danych widoku obiektu ponieważ formantu XmlDataSource obsługuje formanty powiązane z danymi, które wyświetlają hierarchiczne dane, a także formanty, które wyświetlają dane tabelaryczne, kontroli źródła danych obsługuje wiele typów obiektów widoku źródła danych w danych XML. </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A></xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Formantu XmlDataSource pobiera jeden o nazwie <xref:System.Web.UI.WebControls.XmlDataSourceView>obiektu, gdy jest używany z formant powiązany z danymi, który wyświetla dane tabelaryczne.</xref:System.Web.UI.WebControls.XmlDataSourceView> <xref:System.Web.UI.IDataSource.GetViewNames%2A>Metody identyfikuje tego jednego o nazwie Widok.</xref:System.Web.UI.IDataSource.GetViewNames%2A> W przypadku użycia z formantu powiązanego z danymi wyświetlającą hierarchiczne dane, pobiera formantu XmlDataSource <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>dla dowolną unikatową ścieżkę hierarchiczną przekazanego do <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>metody.</xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>      <a name=&quot;declarative_syntax&quot;></a>## Składnia deklaratywne```   <asp:XmlDataSource       CacheDuration=&quot;string|Infinite&quot;       CacheExpirationPolicy=&quot;Absolute|Sliding&quot;       CacheKeyDependency=&quot;string&quot;       DataFile=&quot;string&quot;       EnableCaching=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnTransforming=&quot;Transforming event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformArgumentList=&quot;string&quot;       TransformFile=&quot;string&quot;       Visible=&quot;True|False&quot;       XPath=&quot;string&quot;   >       <Data>string</Data>       <Transform>string</Transform>   </asp:XmlDataSource>   ```"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data from the sample XML file. The second example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data.  \n  \n The following code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data. The XmlDataSource loads XML data from the XML file identified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```  \n  \n The following code example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data. The <xref:System.Web.UI.WebControls.Repeater> control uses an XPath data-binding expression to bind to data items within the XML document that the XmlDataSource represents. For more information about `XPath` and `XPathSelect` data-binding syntax, see the <xref:System.Web.UI.XPathBinder> class.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_2.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>John</firstn>  \n         <lastn>Smith</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Transforming")]

      [System.ComponentModel.DefaultProperty("DataFile")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.HierarchicalDataSourceControl
  implements:
  - System.ComponentModel.IListSource
  - System.Web.UI.IDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.HierarchicalDataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.HierarchicalDataSourceControl.ClientID
  - System.Web.UI.HierarchicalDataSourceControl.ClientIDMode
  - System.Web.UI.HierarchicalDataSourceControl.Controls
  - System.Web.UI.HierarchicalDataSourceControl.CreateControlCollection
  - System.Web.UI.HierarchicalDataSourceControl.EnableTheming
  - System.Web.UI.HierarchicalDataSourceControl.FindControl(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Focus
  - System.Web.UI.HierarchicalDataSourceControl.HasControls
  - System.Web.UI.HierarchicalDataSourceControl.OnDataSourceChanged(System.EventArgs)
  - System.Web.UI.HierarchicalDataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HierarchicalDataSourceControl.SkinID
  - System.Web.UI.HierarchicalDataSourceControl.System#Web#UI#IHierarchicalDataSource#GetHierarchicalView(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> klasy."
  syntax:
    content: public XmlDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  id: CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia czas, w sekundach, jaki kontroli źródła danych przechowuje dane, które ma on pobrany."
  remarks: "<xref:System.Web.UI.WebControls.XmlDataSource>Formant automatycznie buforuje dane w przypadku stosuje się następujące: - <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>ma ustawioną właściwość `true`.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.XmlDataSource>      -Właściwość CacheDuration ma ustawioną wartość większą niż 0, co oznacza liczbę sekund, które pamięć podręczna przechowuje dane przed unieważnienia pamięci podręcznej.       Wszelkie zmiany do <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>Właściwości lub zawartość pliku, który zawiera dane XML powoduje, że pamięć podręczna unieważnienie.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       Domyślnie właściwość CacheDuration jest ustawiona na 0, co oznacza nieograniczonego pamięci podręcznej, i źródła danych będą dane z pamięci podręcznej do momentu zmiany plik XML, który zależy.       Zachowanie pamięci podręcznej podlega przy użyciu kombinacji czas trwania i <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>ustawienie.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>ma ustawioną wartość <xref:System.Web.UI.DataSourceCacheExpiry>, <xref:System.Web.UI.WebControls.XmlDataSource>kontroli buforuje dane w pierwszej operacji pobierania danych, przechowuje go w pamięci przez czas określony przez CacheDuration i unieważnia jego po Czas wygasł.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Pamięć podręczna jest następnie odświeżone przy następnej operacji. Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>ma ustawioną wartość <xref:System.Web.UI.DataSourceCacheExpiry>, kontroli źródła danych buforuje dane w pierwszej operacji pobierania danych, ale resetuje przedział czasu, który przechowuje w pamięci podręcznej po każdej kolejnej operacji.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Pamięć podręczna wygaśnie tylko, jeśli nic się nie na czas równy CacheDuration od czasu ostatniego pobierania danych."
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the CacheDuration is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_928_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_928_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual int CacheDuration { get; set; }
    return:
      type: System.Int32
      description: "Liczba sekund, które <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> kontroli buforuje wyniki operacji pobierania danych. Wartość domyślna to 0."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  id: CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia zasady wygasania pamięci podręcznej, która jest połączona z czas buforowania do opisywania zachowania buforowania w pamięci podręcznej, która korzysta z kontroli źródła danych."
  remarks: "Zachowanie pamięci podręcznej podlega przy użyciu kombinacji <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>i ustawienia CacheExpirationPolicy.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Jeśli ustawiono CacheExpirationPolicy <xref:System.Web.UI.DataSourceCacheExpiry>, <xref:System.Web.UI.WebControls.XmlDataSource>buforuje dane w pierwszej operacji pobierania danych, przechowuje go w pamięci przez czas określony przez <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>i unieważnia jego po Czas wygasł.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> Pamięć podręczna jest następnie odświeżone przy następnej operacji. Jeśli ustawiono CacheExpirationPolicy <xref:System.Web.UI.DataSourceCacheExpiry>, kontroli źródła danych buforuje dane w pierwszej operacji pobierania danych, ale resetuje przedział czasu, który przechowuje w pamięci podręcznej po każdej kolejnej operacji.</xref:System.Web.UI.DataSourceCacheExpiry> Pamięć podręczna wygaśnie tylko wtedy, gdy nic się nie dzieje na czas równy <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>od czasu ostatniego pobierania danych.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_427_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_427_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }
    return:
      type: System.Web.UI.DataSourceCacheExpiry
      description: "Jeden z <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> wartości. Domyślne ustawienie zasady wygasania pamięci podręcznej to <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  id: CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość klucza pamięci podręcznej dla formantu źródła danych z widoku stanu lub dodaje klucz pamięci podręcznej, aby wyświetlić stan."
  remarks: "Właściwość CacheKeyContext umożliwia ręczne tworzenie klucz pamięci podręcznej dla <xref:System.Web.UI.WebControls.XmlDataSource>kontroli.</xref:System.Web.UI.WebControls.XmlDataSource> Jest to wymagane tylko wtedy, gdy przypisujesz obiekt, który zawiera dane XML lub XSLT do formantu zamiast określania plik zawierający dane. Po przypisaniu danych do formantu danych nie jest używany do wygenerowania klucza pamięci podręcznej. Zamiast tego musisz ręcznie wygenerować klucz pamięci podręcznej unikatowy planowania można zaktualizować obiektu danych."
  syntax:
    content: public virtual string CacheKeyContext { get; set; }
    return:
      type: System.String
      description: "Wartość klucza pamięci podręcznej lub ciąg pusty, jeśli klucz pamięci podręcznej nie jest w stanie widoku."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  id: CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia zależność klucza użytkownika połączonego do wszystkich obiektów pamięci podręcznej danych, utworzonych przez formant źródła danych. Wszystkie obiekty w pamięci podręcznej jawnie wygasają po klucz wygaśnie."
  remarks: "<xref:System.Web.UI.WebControls.XmlDataSource>Sterowanie obsługuje buforowanie danych.</xref:System.Web.UI.WebControls.XmlDataSource> Gdy dane są buforowane, <xref:System.Web.UI.WebControls.XmlDataSource>pobiera dane z pamięci podręcznej, a nie z podstawowego pliku danych.</xref:System.Web.UI.WebControls.XmlDataSource> Po wygaśnięciu pamięci podręcznej, pobiera dane z pliku źródłowego i ponownie buforuje dane.       Można ustawić właściwości CacheKeyDependency, aby utworzyć zależność między wszystkie wpisy w pamięci podręcznej utworzone przez <xref:System.Web.UI.WebControls.XmlDataSource>kontroli i klucza.</xref:System.Web.UI.WebControls.XmlDataSource> Można programowo unieważnienie wszystkich wpisów pamięci podręcznej w dowolnym momencie poprzez wygaszenie klucza.       Z powodu właściwości używany do tworzenia CacheKeyDependency, możliwe jest wiele <xref:System.Web.UI.WebControls.XmlDataSource>formanty można użyć tej samej pamięci podręcznej w scenariuszach, gdzie załadować samego dane z tego samego pliku XML i pliku przekształcenia i tej samej <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>i <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>ustawiony.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: public virtual string CacheKeyDependency { get; set; }
    return:
      type: System.String
      description: "Klucz identyfikujący wszystkich obiektów w pamięci podręcznej utworzone przez <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formantu."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  id: Data
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia bloku danych XML, która wiąże formantu źródła danych."
  remarks: "W scenariuszach deklaratywne właściwości danych jest określony jako właściwość multiline wewnętrzny <xref:System.Web.UI.WebControls.XmlDataSource>obiektu.</xref:System.Web.UI.WebControls.XmlDataSource> Właściwości wewnętrznej jest zgodny z danych XML, ponieważ pozwala na format danych XML w jakikolwiek sposób i Ignoruj znak dopełnienia problemów, na przykład dopełnienie znaków cudzysłowu.       Jeśli oba <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>i danych właściwości są ustawione, <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>właściwości ma pierwszeństwo przed i danych w pliku XML jest używany zamiast danych XML określony we właściwości danych.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>       W przypadku zmiany wartości właściwości danych <xref:System.Web.UI.IDataSource.DataSourceChanged>zdarzenie jest wywoływane.</xref:System.Web.UI.IDataSource.DataSourceChanged> Jeśli jest włączone buforowanie i zmień wartość danych, unieważnienia pamięci podręcznej."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display inline XML data contained by the Data property with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_378_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_378_1.aspx)]"
  syntax:
    content: public virtual string Data { get; set; }
    return:
      type: System.String
      description: "Ciąg w danych XML w tekście który <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> wiąże formantu. Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Data*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Trwa ładowanie dokumentu."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  id: DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa nazwę pliku w pliku XML, który wiąże ze źródłem danych."
  remarks: "Jeśli zarówno pliku danych i <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>Właściwości są ustawione, pierwszeństwo ma właściwość DataFile i danych w pliku XML jest używany zamiast określone w danych XML <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       W przypadku zmiany wartości właściwości DataFile <xref:System.Web.UI.IDataSource.DataSourceChanged>zdarzenie jest wywoływane.</xref:System.Web.UI.IDataSource.DataSourceChanged> Jeśli jest włączone buforowanie, zmień wartość DataFile unieważnienia pamięci podręcznej."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display XML data contained in a file with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_472_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_472_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual string DataFile { get; set; }
    return:
      type: System.String
      description: "Bezwzględna ścieżka fizyczna lub ścieżki względnej pliku XML, który zawiera dane, które <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> kontrolować reprezentuje. Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.DataFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Trwa ładowanie dokumentu."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formantu jest włączone buforowanie danych."
  remarks: "<xref:System.Web.UI.WebControls.XmlDataSource>Kontroli automatycznie buforuje dane, gdy ustawiono właściwość EnableCaching `true`.</xref:System.Web.UI.WebControls.XmlDataSource> Domyślnie <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>Właściwości jest równa 0, co oznacza nieograniczonego pamięci podręcznej, a źródła danych będą dane z pamięci podręcznej do momentu zmiany plik XML, który zależy on od.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Jeśli ustawisz <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>Właściwości na wartość większą niż 0, pamięć podręczna przechowuje dane dla wybranej liczby sekund przed pobraniem nowy zestaw.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>       Jeśli ustawiono właściwość EnableCaching `true` i <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>właściwość jest ustawiona, wpisy w pamięci podręcznej nie są automatycznie unieważniona parametry zmiany na liście argumentów przekształceń.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> W takim przypadku należy napisać kod w celu unieważnienia pamięci podręcznej przez ustawienie <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the EnableCaching property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_365_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_365_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli do kontroli źródła danych; jest włączone buforowanie danych w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  id: GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera obiekt widoku źródła danych dla <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formantu. <code> viewPath </code> Parametr może być wyrażenie XPath."
  remarks: "Należy wywołać metodę GetHierarchicalView, aby pobrać <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>obiekt skojarzony z <xref:System.Web.UI.WebControls.XmlDataSource>kontroli.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> Jeśli określisz `viewPath` wartość <xref:System.Web.UI.WebControls.XmlDataSource>kontroli zwraca obiekt widoku źródła danych, reprezentujący widok w węźle identyfikowane przez `viewPath`, wraz z jego węzłów podrzędnych.</xref:System.Web.UI.WebControls.XmlDataSource> Jeśli ustawisz `viewPath` do <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Web.UI.WebControls.XmlDataSource>kontrolować kontroli <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>Właściwości w celu określenia węzeł główny, z którego można utworzyć widoku źródła danych.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.String.Empty?displayProperty=fullName> Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>właściwość jest ustawiona, <xref:System.Web.UI.WebControls.XmlDataSource>kontroli używa go do zwrócenia widoku źródła danych w taki sam sposób `viewPath` wyrażenie jest używane.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>nie ustawiono właściwości <xref:System.Web.UI.WebControls.XmlDataSource>kontroli zwraca widok wszystkich węzłów w danych XML.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>"
  syntax:
    content: protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);
    parameters:
    - id: viewPath
      type: System.String
      description: "Wyrażenie XPath, które identyfikuje węzeł, z którego jest wbudowana bieżący widok hierarchicznej."
    return:
      type: System.Web.UI.HierarchicalDataSourceView
      description: "Zwraca <xref href=&quot;System.Web.UI.WebControls.XmlHierarchicalDataSourceView&quot;> </xref> obiekt, który reprezentuje jednolity obraz danych, począwszy od węzła danych identyfikowany przez <code> viewPath </code>."
  overload: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  id: GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ładuje dane XML do pamięci, bezpośrednio z źródłowy magazyn danych lub w pamięci podręcznej i zwraca go w formie <xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> obiektu."
  remarks: "Metoda GetXmlDocument uzyskać bezpośredni dostęp do reprezentacji w pamięci danych XML.       Można manipulować zwróconego <xref:System.Xml.XmlDataDocument>obiekt, a następnie wywołać <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>Aby utrwalić zmiany w pliku XML określonego przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> Kilka wymagań muszą zostać spełnione przed <xref:System.Xml.XmlDataDocument>obiekt może zostać zapisany pomyślnie.</xref:System.Xml.XmlDataDocument> Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metody.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>"
  example:
  - "This section contains two code examples. The first example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the GetXmlDocument method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> retrieved by the GetXmlDocument method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n```"
  syntax:
    content: public System.Xml.XmlDocument GetXmlDocument ();
    parameters: []
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> Obiekt, który reprezentuje określone w pliku XML <> </> *> właściwości lub w pliku identyfikowane przez <> </> *> właściwości z dowolnych przekształceń i <xref:System.Web.UI.WebControls.XmlDataSource.XPath*>zapytań zastosowane.</xref:System.Web.UI.WebControls.XmlDataSource.XPath*>"
  overload: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Adres URL jest określony dla <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>Właściwości; jednak <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formant nie ma odpowiednie uprawnienia do zasobów sieci Web.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not support caching when client impersonation is enabled."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Odmowa dostępu do ścieżki określonej dla <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  id: OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.XmlDataSource.Transforming&quot;> </xref> zdarzeń przed <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> kontroli wykonuje transformację XSLT na jego dane XML."
  remarks: "Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnTransforming umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at runtime. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler, which is identified by name of the method set for the OnTransforming method.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_60_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_60_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XML transformation is performed using the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: protected virtual void OnTransforming (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  id: Save
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zapisuje dane XML obecnie przechowywane w pamięci przez <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> sterowania na dysku, jeżeli <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>właściwość jest ustawiona.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.XmlDataSource>formant jest zwykle używany w scenariuszach powiązania danych tylko do odczytu, można użyć <xref:System.Web.UI.WebControls.XmlDataSource>formant do edytowania danych XML w podstawowym pliku danych XML.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> W tych scenariuszach dane XML są ładowane z pliku XML według <xref:System.Web.UI.WebControls.XmlDataSource>kontroli.</xref:System.Web.UI.WebControls.XmlDataSource> Możesz zmodyfikować <xref:System.Xml.XmlDataDocument>przy użyciu pamięci <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>metody, a następnie zapisz do pliku danych XML, wywołując metodę Save.</xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> </xref:System.Xml.XmlDataDocument> W tym scenariuszu można edytować XML jest możliwe, gdy są spełnione następujące warunki:-dane XML są ładowane z pliku XML wskazywany przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>Właściwości nie z określone w danych XML wbudowanego <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -Brak przekształcenie XSLT jest określona w <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>lub <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>       Metody Zapisz nie obsługuje równoczesnych operacji zapisywania innego żądania. Jeśli więcej niż jeden użytkownik edytuje plik XML za pomocą <xref:System.Web.UI.WebControls.XmlDataSource>kontrolować, nie ma żadnej gwarancji, że wszyscy użytkownicy działają z tymi samymi danymi.</xref:System.Web.UI.WebControls.XmlDataSource> Istnieje również możliwość zakończyć się niepowodzeniem z powodu te same kwestie współbieżności operacji zapisywania."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> object retrieved by the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XML data was loaded using the <xref:System.Web.UI.WebControls.XmlDataSource.Data*> property instead of the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property.  \n  \n \\- or -  \n  \n A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not have the correct permissions for the Web resource."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Odmowa dostępu do ścieżki określonej dla <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.ComponentModel.IListSource.ContainsListCollection*>.</xref:System.ComponentModel.IListSource.ContainsListCollection*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.XmlDataSource>wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource>interfejsu.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolekcja jest kolekcją <xref:System.Collections.IList>obiekty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.ComponentModel.IListSource.GetList*>.</xref:System.ComponentModel.IListSource.GetList*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.XmlDataSource>wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource>interfejsu.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "Implementacja obiektu <xref:System.Collections.IList>może być powiązana ze źródłem danych.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  id: System#Web#UI#IDataSource#GetView(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera widok źródła danych o nazwie skojarzony z formantem źródła danych."
  syntax:
    content: System.Web.UI.DataSourceView IDataSource.GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "Nazwa widoku do pobrania. Jeśli &lt;xref:System.String?displayProperty=fullName&gt; jest określony, widok domyślny <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> jest pobierany formant."
    return:
      type: System.Web.UI.DataSourceView
      description: "Zwraca nazwany <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref> obiekt skojarzony z <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formantu."
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  id: System#Web#UI#IDataSource#GetViewNames
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.Web.UI.IDataSource.GetViewNames*>.</xref:System.Web.UI.IDataSource.GetViewNames*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.XmlDataSource>wystąpienia jest rzutowane na <xref:System.Web.UI.IDataSource>interfejsu.</xref:System.Web.UI.IDataSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.ICollection IDataSource.GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Implementacja obiektu <xref:System.Collections.ICollection>zawierający nazwy reprezentujący listę wyświetlanie obiektów skojarzonych z <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> obiektu.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  id: Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia bloku danych arkusza stylów języka XSL (Extensible), który określa transformację XSLT do wykonania w danych XML zarządzanych przez <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formantu."
  remarks: "W scenariuszach deklaratywne właściwości Transform jest określony jako właściwość multiline wewnętrzny <xref:System.Web.UI.WebControls.XmlDataSource>obiektu.</xref:System.Web.UI.WebControls.XmlDataSource> Właściwości wewnętrznej jest zgodny z danych arkusza stylów XSL, ponieważ umożliwia ona formatowania arkusza stylów w jakikolwiek sposób i Ignoruj znak dopełnienia problemy, takie jak uzupełnianie znaków cudzysłowu.       Jeśli oba <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>i przekształcenie właściwości są ustawione, <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>właściwości ma pierwszeństwo przed i danych w pliku arkusza stylów XSL (XSL) jest używany zamiast elementy arkusza stylów określonego we właściwości Transform.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> Jeśli wyrażenie XPath jest ustawiany za pomocą <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>właściwość jest stosowana po danych XML jest przekształcana.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       W przypadku zmiany wartości właściwości Transform <xref:System.Web.UI.IDataSource.DataSourceChanged>zdarzenie jest wywoływane.</xref:System.Web.UI.IDataSource.DataSourceChanged> Jeśli jest włączone buforowanie, zmień wartość transformacji unieważnienia pamięci podręcznej.      > [!NOTE] > <xref:System.Web.UI.WebControls.XmlDataSource>Klasy używa przestarzałe <xref:System.Xml.Xsl.XslTransform>klasę, aby wykonywać transformacje XSL.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Jeśli chcesz korzystać z funkcji arkusza stylów, wprowadzonych po <xref:System.Xml.Xsl.XslTransform>klasa została uznana za przestarzałą, zastosowanie transformacji ręcznie, przy użyciu <xref:System.Xml.Xsl.XslCompiledTransform>klasy.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display transformed XML data. The style sheet that performs the transformation is defined inline by the Transform property of the data source control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>Todd</firstn>  \n         <lastn>Rowe</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: public virtual string Transform { get; set; }
    return:
      type: System.String
      description: "Ciąg XSL, który definiuje transformacji XML na dane znajdujące się w tekście <> </> *> lub <> </> *> właściwości. Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Trwa ładowanie dokumentu."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zawiera listę argumentów XSLT, które są używane przez arkusz stylów zdefiniowanych przez <> </> *> lub <> </> *> właściwości przekształcenie w danych XML."
  remarks: "Ustaw właściwość TransformArgumentList podczas <xref:System.Web.UI.WebControls.XmlDataSource.Transforming>zdarzenie jest wywoływane, aby upewnić się, w tym czasie stosowany transformację XSLT do danych XML są dostępne parametry XSLT.</xref:System.Web.UI.WebControls.XmlDataSource.Transforming>       Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>ma ustawioną właściwość `true` i właściwość TransformArgumentList jest ustawiona, wpisy w pamięci podręcznej nie są automatycznie unieważniona parametry zmiany na liście argumentów przekształceń.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> W takim przypadku należy napisać kod w celu unieważnienia pamięci podręcznej przez ustawienie <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_437_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_437_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> Obiekt, który zawiera parametry XSLT i obiekty, które ma zostać zastosowany do danych XML, gdy jest ładowany przez <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formantu. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  id: TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa nazwę pliku, plik arkusza stylów języka XSL (Extensible) (XSL), który definiuje transformację XSLT do wykonania w danych XML zarządzanych przez <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> formantu."
  remarks: "Jeśli oba TransformFile i <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>Właściwości są ustawione, pierwszeństwo ma właściwości TransformFile i danych w pliku arkusza stylów XSL (XSL) jest używany zamiast elementy arkusza stylów określonego w <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>Właściwości.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Jeśli wyrażenie XPath jest ustawiany za pomocą <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>właściwość jest stosowana po danych XML jest przekształcana.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       W przypadku zmiany wartości <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>Właściwość <xref:System.Web.UI.IDataSource.DataSourceChanged>zdarzenie jest wywoływane.</xref:System.Web.UI.IDataSource.DataSourceChanged> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Jeśli jest włączone buforowanie i zmień wartość <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, pamięci podręcznej zostało unieważnione.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      > [!NOTE] > <xref:System.Web.UI.WebControls.XmlDataSource>Klasy używa przestarzałe <xref:System.Xml.Xsl.XslTransform>klasę, aby wykonywać transformacje XSL.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Jeśli chcesz korzystać z funkcji arkusza stylów, wprowadzonych po <xref:System.Xml.Xsl.XslTransform>klasa została uznana za przestarzałą, zastosowanie transformacji ręcznie, przy użyciu <xref:System.Xml.Xsl.XslCompiledTransform>klasy.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control and a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data on a Web form. The transformation is performed using the style sheet indicated by the TransformFile property. You can optionally supply transformation arguments for the style sheet using an <xref:System.Xml.Xsl.XsltArgumentList>. For more information, see the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_625_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_625_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XSL style sheet that performs the XML transformation has the following structure:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"price\">  \n       <xsl:value-of select=\"price\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual string TransformFile { get; set; }
    return:
      type: System.String
      description: "Bezwzględna ścieżka fizyczna lub ścieżki względnej pliku arkusza stylów XSL, który definiuje transformacji XML na dane zawarte w <> </> *> lub <> </> *> właściwości. Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Trwa ładowanie dokumentu."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  id: Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje przed arkusza stylów, który jest zdefiniowany przez <> </> *> właściwości lub zostały rozpoznane przez <> </> *> właściwość jest stosowana do danych XML."
  remarks: "Obsługuj zdarzenie Transforming można ustawić <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>właściwości o <xref:System.Xml.Xsl.XsltArgumentList>obiekt przed <xref:System.Web.UI.WebControls.XmlDataSource>formant sprawdza transformacji XML.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Xml.Xsl.XsltArgumentList> </xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the Transforming event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_49_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_49_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public event EventHandler Transforming;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  id: XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa wyrażenie XPath ma zostać zastosowany do danych XML zawiera <> </> *> właściwości lub pliku XML, wskazywany przez <> </> *> właściwości."
  remarks: "Aby uzyskać więcej informacji na XPath wyrażenia wiązania danych, zobacz [tabelarycznym formant do formantu XmlDataSource](http://msdn.microsoft.com/en-us/d6bf202f-6454-45fd-9424-e17f6c7eafe8)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data that has been filtered using an XPath expression. In this example, XPath syntax is used to filter the XML data when the XPath property of the data source control is set, and also binds elements of the <xref:System.Web.UI.WebControls.Repeater> control template to the XML data.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_422_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_422_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```"
  syntax:
    content: public virtual string XPath { get; set; }
    return:
      type: System.String
      description: "Ciąg, który reprezentuje wyrażenie XPath, który może służyć do filtrowania danych zawarty w <> </> *> właściwości lub pliku XML, wskazywany przez <> </> *> właściwości. Wartość domyślna to &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.XPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Trwa ładowanie dokumentu."
  platform:
  - net462
references:
- uid: System.Web.UI.HierarchicalDataSourceControl
  isExternal: false
  name: System.Web.UI.HierarchicalDataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.DataSourceCacheExpiry
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCacheExpiry
  nameWithType: DataSourceCacheExpiry
  fullName: System.Web.UI.DataSourceCacheExpiry
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
- uid: System.Web.UI.HierarchicalDataSourceView
  parent: System.Web.UI
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource.XmlDataSource
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView
  nameWithType: XmlDataSource.GetHierarchicalView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument
  nameWithType: XmlDataSource.GetXmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming
  nameWithType: XmlDataSource.OnTransforming
- uid: System.Web.UI.WebControls.XmlDataSource.Save*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save
  nameWithType: XmlDataSource.Save
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames
- uid: System.Web.UI.WebControls.XmlDataSource.Transform*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.XPath*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
