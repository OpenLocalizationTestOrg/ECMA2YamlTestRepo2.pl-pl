### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlClientPermission
  id: SqlClientPermission
  children:
  - System.Data.SqlClient.SqlClientPermission.#ctor
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.SqlClient.SqlClientPermission.Copy
  langs:
  - csharp
  name: SqlClientPermission
  nameWithType: SqlClientPermission
  fullName: System.Data.SqlClient.SqlClientPermission
  type: Class
  summary: "Umożliwia dostawcy danych programu .NET Framework dla programu SQL Server upewnić się, że użytkownik ma wystarczające, aby uzyskiwać dostęp do źródła danych poziomu zabezpieczeń."
  remarks: "<xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>Właściwość ma wyższy priorytet niż <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>Właściwości.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> W związku z tym Jeśli ustawisz <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>do `false`, należy także ustawić <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>do `false` aby uniemożliwić użytkownikowi połączenie przy użyciu pustego hasła.</xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>      > [!NOTE] > Korzystając z uprawnień zabezpieczeń dostępu kodu dla ADO.NET, poprawne wzorzec jest rozpoczynać się od przypadku najbardziej restrykcyjne (nie uprawnienia we wszystkich), a następnie dodaj określone uprawnienia, które są wymagane dla określonego zadania, które musi wykonać kod. Wzorzec przeciwnej, następnie odrzuciła określone uprawnienia, począwszy od wszystkie uprawnienia nie jest bezpieczne, ponieważ istnieje wiele sposobów wyrażenia te same parametry połączenia. Na przykład, jeśli rozpoczynać wszystkie uprawnienia, a następnie spróbuj zezwolić na korzystanie z parametrów połączenia &quot;serwera = someserver&quot;, ciąg &quot;server=someserver.mycompany.com&quot; nadal będzie dozwolony. Należy zawsze uruchomić przyznając w ogóle nie ma uprawnień, można zmniejszyć prawdopodobieństwo, że istnieją luk w zestaw uprawnień."
  syntax:
    content: 'public sealed class SqlClientPermission : System.Data.Common.DBDataPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Data.Common.DBDataPermission
  implements: []
  inheritedMembers:
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klasy."
  syntax:
    content: public SqlClientPermission ();
    parameters: []
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klasy."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Jeden z <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klasy."
  remarks: "<xref:System.Security.Permissions.PermissionState>Wyliczenie ma pierwszeństwo przed <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>Właściwości.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Security.Permissions.PermissionState> W związku z tym Jeśli ustawisz <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>do `false`, należy także ustawić <xref:System.Security.Permissions.PermissionState>do `None` aby uniemożliwić użytkownikowi połączenie przy użyciu pustego hasła.</xref:System.Security.Permissions.PermissionState> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> Na przykład pokazuje sposób użycia żądania kontroli zabezpieczeń, zobacz [zabezpieczenia dostępu kodu i ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Jeden z <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
    - id: allowBlankPassword
      type: System.Boolean
      description: "Wskazuje, czy puste hasło jest dozwolone."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Dodaje nowe parametry połączenia i zestaw ograniczeniami słów kluczowych <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> obiektu."
  remarks: "Użyj tej metody, aby skonfigurować parametry połączenia, które są dozwolone przez obiekt określone uprawnienie. Na przykład użyć następującego fragmentu kodu, jeśli chcesz zezwolić tylko określony ciąg połączenia i niczego poza: `permission.Add(&quot;server=MyServer; database=MyDatabase; Integrated Security=true&quot;, &quot;&quot;, KeyRestrictionBehavior.AllowOnly)` poniższy przykład umożliwia parametry połączeń używające wszystkie bazy danych, ale tylko na serwerze o nazwie MójSerwer, o dowolnej kombinacji użytkownika i hasła i nie inne słowa kluczowe parametrów połączenia: `permission.Add(&quot;server=MyServer;&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)` w poniższym przykładzie używa tego samego scenariusz jako powyżej, ale pozwala na serwer partnerski trybu failover, używaną podczas nawiązywania połączenia z serwerów skonfigurowanych dublowania : `permission.Add(&quot;server=MyServer; failover partner=MyMirrorServer&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)`       >  [!NOTE] > Korzystając z uprawnień zabezpieczeń dostępu kodu dla ADO.NET, poprawne wzorzec jest rozpoczynać się od przypadku najbardziej restrykcyjne (nie uprawnienia we wszystkich), a następnie dodaj określone uprawnienia, które są wymagane dla określonego zadania, które musi wykonać kod. Wzorzec przeciwnej, począwszy od wszystkie uprawnienia, a następnie ponawiając odrzucanie określone uprawnienia nie jest bezpieczne, ponieważ istnieje wiele sposobów wyrażenia te same parametry połączenia. Na przykład, jeśli rozpoczynać wszystkie uprawnienia, a następnie spróbuj zezwolić na korzystanie z parametrów połączenia &quot;serwera = someserver&quot;, ciąg &quot;server=someserver.mycompany.com&quot; nadal będzie dozwolony. Należy zawsze uruchomić przyznając w ogóle nie ma uprawnień, można zmniejszyć prawdopodobieństwo, że istnieją luk w zestaw uprawnień."
  syntax:
    content: public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "Parametry połączenia."
    - id: restrictions
      type: System.String
      description: "Ograniczenia klucza."
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "Jeden z <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref> wyliczenia."
  overload: System.Data.SqlClient.SqlClientPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  id: Copy
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> as an <xref href=&quot;System.Security.IPermission&quot;></xref>."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Kopię bieżącego obiektu uprawnień."
  overload: System.Data.SqlClient.SqlClientPermission.Copy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DBDataPermission
  isExternal: false
  name: System.Data.Common.DBDataPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission
  nameWithType: SqlClientPermission.SqlClientPermission
- uid: System.Data.SqlClient.SqlClientPermission.Add*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add
  nameWithType: SqlClientPermission.Add
- uid: System.Data.SqlClient.SqlClientPermission.Copy*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy
  nameWithType: SqlClientPermission.Copy
