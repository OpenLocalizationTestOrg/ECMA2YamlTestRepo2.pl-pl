### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ControlTemplate
  id: ControlTemplate
  children:
  - System.Windows.Controls.ControlTemplate.#ctor
  - System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  - System.Windows.Controls.ControlTemplate.TargetType
  - System.Windows.Controls.ControlTemplate.Triggers
  - System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: ControlTemplate
  nameWithType: ControlTemplate
  fullName: System.Windows.Controls.ControlTemplate
  type: Class
  summary: "Określa strukturę visual i behawioralnej aspektów <xref href=&quot;System.Windows.Controls.Control&quot;> </xref> mogą być współużytkowane przez wiele wystąpień formantu."
  remarks: "ControlTemplate służy do określenia struktury visual formantu. Tworzenie formantu można zdefiniować domyślny ControlTemplate, autor aplikacji można zmienić ControlTemplate odtworzenie visual struktury formantu.       Formant tworzenia szablonów jest jednym z wielu funkcji oferowanych przez [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] stylami i tworzenia szablonów modelu. Model stylami i tworzenia szablonów zapewnia takie dużą elastyczność w wielu przypadkach konieczne do zapisania własne kontrolki. Jeśli jesteś Autor aplikacji, które chce zmienić wizualizację formantu lub Zastąp ControlTemplate formant, zobacz [stylami i tworzenia szablonów](~/add/includes/ajax-current-ext-md.md) tematu Przykłady i szczegółowe omówienie.       Jeśli piszesz własnego formantu, zobacz &quot;Tworzenie formant niestandardowy&quot; w [informacje o formancie tworzenia](~/add/includes/ajax-current-ext-md.md).       ControlTemplate ma być samodzielna jednostka szczegółów implementacji, która jest niewidoczna dla poza użytkowników i obiektów, w tym style. Jedynym sposobem modyfikowania zawartości szablonu kontroli pochodzi z wewnątrz tego samego szablonu formantu.      <a name=&quot;xamlObjectElementUsage_VisualTree&quot;></a>## Użycie elementu właściwości języka XAML ```   <ControlTemplate>     <VisualTreeRootNode > VisualTreeNodeContents     </VisualTreeRootNode >   </ControlTemplate>   ``` <a name=&quot;xamlValues_VisualTree&quot;> </a> ## wartości XAML *ControlTemplate* element Object ControlTemplate lub klasy pochodnej.             *VisualTreeRootNode* pojedynczy [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] element jako element podrzędny natychmiastowego ControlTemplate (lub klasy pochodnej). Szablony musi mieć na jednym węźle głównym. Aby wygenerować przydatne szablonu, jako element *VisualTreeRootNode* ma obsługiwać model zawartości własnych, często modelu, który obsługuje wielu elementów podrzędnych.       *VisualTreeNodeContents* jeden lub więcej elementów, które ukończenia odpowiedniego szablonu. Jeśli wybrana jako element *VisualTreeRootNode* obsługuje tylko pojedynczy element potomny, następnie może tylko jeden element jest zadeklarowany jako *VisualTreeNodeContents*. Istnieje również możliwość (jeśli jest to rzadko) zapewnienie zawartości tekstowej, jeśli wybrana *VisualTreeRootNode* obsługuje właściwości zawartości tekstu."
  example:
  - "The following shows a <xref:System.Windows.Controls.Button> <xref:System.Windows.Style> that sets the ControlTemplate of a <xref:System.Windows.Controls.Button>:  \n  \n [!code-xml[StylingIntroSample_snip#ButtonCT](~/add/codesnippet/xaml/t-system.windows.control_3_1.xaml)]  \n  \n When this gets applied, the <xref:System.Windows.Controls.Button> appears as an <xref:System.Windows.Shapes.Ellipse>:  \n  \n ![Button ControlTemplate sample](~/add/media/stylingintro-buttoncontroltemplate.png \"Button ControlTemplate sample\")  \n  \n When you set the <xref:System.Windows.Controls.Control.Template%2A> property of a <xref:System.Windows.Controls.Control> to a new ControlTemplate as in the above example, you are replacing the entire template. What the <xref:System.Windows.Controls.Button> looks like when it is in focus or pressed is all part of the default appearance of the button that you are replacing. Therefore, depending on your needs, you may want to put in your definition what your button should look like when it is pressed, and so on, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#1](~/add/codesnippet/xaml/controltemplateexamples/resources/button.xaml#1)]  \n  \n Note that this example references resources that are not shown here. For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041). That sample provides examples of control templates for many controls and is the best way for you to get started with creating control templates."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.DictionaryKeyProperty("TargetType")]

      public class ControlTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> klasy."
  syntax:
    content: public ControlTemplate ();
    parameters: []
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> klasy typu określonego obiektu docelowego."
  syntax:
    content: public ControlTemplate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Typ ten szablon jest przeznaczony dla."
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.TargetType
  id: TargetType
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera lub ustawia typ, dla której ta <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> ma."
  remarks: "Jeśli masz autonomiczny <xref:System.Windows.Controls.ControlTemplate>w sekcji zasobów z właściwością TargetType wartości na typ <xref:System.Windows.Controls.ControlTemplate>nie zostać zastosowane do tego typu automatycznie.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.ControlTemplate> Zamiast tego należy określić `x:Key` i jawnie Zastosuj szablon.       Należy również zauważyć, że właściwości TargetType jest wymagana w <xref:System.Windows.Controls.ControlTemplate>przypadku definicji szablonu zawiera <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.Controls.ControlTemplate>      <a name=&quot;xamlAttributeUsage_TargetType&quot;></a>## Użycie atrybutu XAML ```   <object  TargetType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_TargetType&quot;> </a> ## wartości XAML *typeName* nazwę typu klasy.       Aby odwołać się do <xref:System.Type>Nazwa klasy, użyj [rozszerzenia znaczników i WPF XAML](~/add/includes/ajax-current-ext-md.md).</xref:System.Type>"
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#Label](~/add/codesnippet/xaml/controltemplateexamples/resources/label.xaml#label)]  \n  \n The above example uses the following resource:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public Type TargetType { get; set; }
    return:
      type: System.Type
      description: "Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ControlTemplate.TargetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Właściwości TargetType nie może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli definicja szablonu ma <xref href=&quot;System.Windows.Controls.ContentPresenter&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określonych typów nie są prawidłowe. Element TargetType elementu <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> musi być lub dziedziczyć <xref href=&quot;System.Windows.Controls.Control&quot;> </xref>, <xref href=&quot;System.Windows.Controls.Page&quot;> </xref>, lub <xref href=&quot;System.Windows.Navigation.PageFunctionBase&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.Triggers
  id: Triggers
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> obiektów, które stosuje zmiany właściwości lub wykonywać działania na podstawie określonych warunkach."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.Triggers>       oneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> ## wartości XAML *oneOrMoreTriggers* co najmniej jeden <xref:System.Windows.TriggerBase>obiektów (zazwyczaj są to <xref:System.Windows.Trigger>).</xref:System.Windows.Trigger> </xref:System.Windows.TriggerBase>      "
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#ToolTip](~/add/codesnippet/xaml/controltemplateexamples/resources/tooltip.xaml#tooltip)]  \n  \n The above example uses the following resources:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Kolekcja <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> obiektów. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ControlTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sprawdza, czy opartego na szablonie nadrzędnego pod kątem zestawu reguł."
  remarks: "Metody stosowane są następujące reguły: 1. `templatedParent` Nie może być typu <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement>       2. `templatedParent` Nie może być typu, <xref:System.Windows.FrameworkElement>który jest nie <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> </xref:System.Windows.FrameworkElement>       3. `templatedParent` Nie może być <xref:System.Windows.Controls.Control>nie jest skojarzona z <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.Control>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "Element ten szablon jest stosowany do."
  overload: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>templatedParent</code> must not be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Musisz skojarzyć <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> z <xref href=&quot;System.Windows.Controls.Control&quot;> </xref> przez ustawienie &lt;xref:System.Windows.Controls.Control.Template%2A?displayProperty=fullName&gt; właściwości przed użyciem <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> na <xref href=&quot;System.Windows.Controls.Control&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.ControlTemplate.#ctor
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Controls.ControlTemplate.TargetType
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.ControlTemplate.#ctor*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate
  nameWithType: ControlTemplate.ControlTemplate
- uid: System.Windows.Controls.ControlTemplate.TargetType*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: ControlTemplate.ValidateTemplatedParent
