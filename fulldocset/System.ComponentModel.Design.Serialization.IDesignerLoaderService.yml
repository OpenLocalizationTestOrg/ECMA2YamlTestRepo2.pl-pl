### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  id: IDesignerLoaderService
  children:
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  langs:
  - csharp
  name: IDesignerLoaderService
  nameWithType: IDesignerLoaderService
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  type: Interface
  summary: "Udostępnia interfejs, który można rozszerzać program ładujący projektanta do obsługi asynchroniczne ładowanie składników zewnętrznych."
  remarks: "A <xref:System.ComponentModel.Design.Serialization.DesignerLoader>może zawierać implementację tego interfejsu do zarządzania ładowania projektanta, która obejmuje składniki zewnętrzne.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> Ten interfejs umożliwia również składników zewnętrznych do zainicjowania przez wywołanie metody <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A> ponownie załadować powierzchnię projektu Program ładujący projektanta nie musi zawierać implementację tego interfejsu, jeśli nie wymaga pomocy technicznej dla Ładowanie asynchroniczne.       Podczas ładowania przy użyciu projektanta niestandardowej implementacji IDesignerLoaderService może występować w na różne sposoby. Czasami zewnętrzne składniki uczestniczą w procesie ładowania. Aby ułatwić ładowanie z zależnościami zewnętrznymi, interfejs usługi program ładujący projektanta zapewnia mechanizm, który określa, po ukończeniu ładowania i umożliwia każda część ładowania, która sygnalizuje, że zostało ukończone. IDesignerLoaderService zwykle określa, kiedy ładowania jest ukończone testując licznika, który śledzi liczbę pozostałych zależności obciążenia. Po ukończeniu każda część obciążenia <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>jest wywoływana i zmniejsza usługi licznika.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> Aby ustawić liczbę procesów ładowania zależnego, należy wywołać <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>jednokrotnie dla każdego procesu obciążenia, który wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>po zakończeniu jego ładowania.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> Po zakończeniu ładowania końcowego, usługa wywołania <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>na hoście modułu ładującego.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>"
  syntax:
    content: public interface IDesignerLoaderService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  id: AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Rejestruje składnik zewnętrzny jako część procesu obciążenia zarządzany przez ten interfejs."
  remarks: "Wywołania AddLoadDependency raz dla każdego obiektu zewnętrznego uczestnictwa w procesie obciążenia. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>jest wywoływana po zakończeniu pracy proces ładowania.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>"
  syntax:
    content: public void AddLoadDependency ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  id: DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Sygnalizuje, że zależny obciążenia zostało zakończone."
  remarks: "Ta metoda jest wywoływana w celu zasygnalizowania Ukończono operację ładowania zależnego. Wywołanie DependentLoadComplete raz dla każdego procesu, który został zarejestrowany przez wywołanie metody <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, która została już zakończona.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>       Jeśli zależna obciążenia zakończy się powodzeniem, wywołujący ustawia `successful` parametr `true` i przekazuje pustej kolekcji lub `null` do `errorCollection` parametru. Zależne obciążenia wystąpią błędy, wywołujący ustawia `successful` parametr `false` i przekazuje zbieranie wyjątków, wskazujące przyczynę lub przyczyny niepowodzenia do `errorCollection` parametru."
  syntax:
    content: public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obciążenie projektanta zakończy się pomyślnie; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli błędy uniemożliwiły obciążenia od zakończenia."
    - id: errorCollection
      type: System.Collections.ICollection
      description: "Kolekcja błędów, które wystąpiły podczas ładowania, jeśli istnieje. Jeśli nie wystąpiły żadne błędy, Przekaż pustej kolekcji lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  id: Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Ponownie ładuje dokument projektowy."
  remarks: "Dowolnego obiektu można wywołać tej metody, aby zażądać ponowne załadowanie modułu ładującego dokument projektowy. Jeśli moduł ładujący obsługuje ponowne załadowanie i jest zgodny z Załaduj ponownie, program ładujący projektanta może zwrócić `true`. W przeciwnym razie zwraca `false`, co oznacza, że nie nastąpi ponowne załadowanie. Obiekty wywołujące, nie można użyć przeładowania wykonywane bezpośrednio; Program ładujący projektanta można zaplanować to na innym razem lub może próbować ponownie załadować jednocześnie.       Obiekt wywołujący można wyświetlić wiadomość do użytkownika, gdy nie można ponownie załadować projektanta."
  syntax:
    content: public bool Reload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli żądanie ponownego załadowania jest akceptowany, lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli moduł ładujący nie zezwala na ponowne załadowanie."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency
  nameWithType: IDesignerLoaderService.AddLoadDependency
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete
  nameWithType: IDesignerLoaderService.DependentLoadComplete
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload
  nameWithType: IDesignerLoaderService.Reload
