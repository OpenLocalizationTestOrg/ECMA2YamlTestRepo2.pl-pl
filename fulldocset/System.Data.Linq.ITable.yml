### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.ITable
  id: ITable
  children:
  - System.Data.Linq.ITable.Attach(System.Object)
  - System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  - System.Data.Linq.ITable.Attach(System.Object,System.Object)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  - System.Data.Linq.ITable.Context
  - System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  - System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  - System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  - System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  - System.Data.Linq.ITable.IsReadOnly
  langs:
  - csharp
  name: ITable
  nameWithType: ITable
  fullName: System.Data.Linq.ITable
  type: Interface
  summary: "Używany w scenariuszach lekko typu zapytania."
  remarks: "Aby uzyskać więcej informacji na temat metod zobacz <xref:System.Data.Linq.Table%601>.</xref:System.Data.Linq.Table%601>"
  syntax:
    content: 'public interface ITable : System.Collections.IEnumerable, System.Linq.IQueryable'
  implements:
  - System.Collections.IEnumerable
  - System.Linq.IQueryable
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object)
  id: Attach(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Dołącza jednostce <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> w stanie bez modyfikacji."
  remarks: "Aby uzyskać więcej informacji o sposobie używania tej metody, zobacz [pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Jednostka jest dołączony."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  id: Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Dołącza wszystkie jednostki w kolekcji do <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> w stanie zmodyfikowany lub bez modyfikacji."
  remarks: "Aby uzyskać więcej informacji o sposobie używania tej metody, zobacz [pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity, bool asModified);
    parameters:
    - id: entity
      type: System.Object
      description: "Zestaw jednostek."
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby dołączyć jednostek zmienione."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  id: Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Dołącza jednostce <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> w obu stanie zmodyfikowany lub zmodyfikowane przez określenie zarówno jednostki i oryginalnego stanu."
  remarks: "Aby uzyskać więcej informacji o sposobie używania tej metody, zobacz [pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity, object original);
    parameters:
    - id: entity
      type: System.Object
      description: "Jednostka jest dołączony."
    - id: original
      type: System.Object
      description: "Wystąpienie typu jednostki z elementów członkowskich danych, które zawierają oryginalnych wartości."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  id: AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Dołącza wszystkie jednostki w kolekcji do <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> w stanie zmodyfikowany lub bez modyfikacji."
  remarks: "Aby uzyskać więcej informacji o sposobie używania tej metody, zobacz [pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Zestaw jednostek."
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  id: AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Dołącza wszystkie jednostki w kolekcji do <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> w stanie zmodyfikowany lub bez modyfikacji."
  remarks: "Aby uzyskać więcej informacji o sposobie używania tej metody, zobacz [pobierania danych i CUD operacje w aplikacjach warstwowych (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities, bool asModified);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Zestaw jednostek."
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby dołączyć jednostek zmienione."
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Context
  id: Context
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Pobiera <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> który został użyty do pobrania to <xref href=&quot;System.Data.Linq.ITable&quot;> </xref>."
  syntax:
    content: public System.Data.Linq.DataContext Context { get; }
    return:
      type: System.Data.Linq.DataContext
      description: "<xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> Używane do pobierania <xref href=&quot;System.Data.Linq.ITable&quot;> </xref>."
  overload: System.Data.Linq.ITable.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  id: DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Umieszcza wszystkie obiekty z kolekcji do <xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;> </xref> stanu."
  remarks: "Wywołanie <xref:System.Data.Linq.DataContext.SubmitChanges%2A>w celu wykonania rzeczywiste usunięcie w bazie danych.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Kolekcja, z których wszystkie elementy są usuwane."
  overload: System.Data.Linq.ITable.DeleteAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  id: DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Umieszcza jednostki z tej tabeli do <xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;> </xref> stanu."
  remarks: "Musi być dołączony odłączonych jednostek, aby można było usunąć. Wywołanie <xref:System.Data.Linq.DataContext.SubmitChanges%2A>w celu wykonania rzeczywiste usunięcie w bazie danych.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Jednostka, która ma zostać usunięty."
  overload: System.Data.Linq.ITable.DeleteOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  id: GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Zwraca tablicę zmodyfikowane elementy członkowskie, które zawierają ich bieżących i oryginalnych wartości."
  syntax:
    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Jednostka, z którego można pobrać tablicy."
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: "Zwraca tablicę zmodyfikowane elementy członkowskie, które zawierają ich bieżących i oryginalnych wartości."
  overload: System.Data.Linq.ITable.GetModifiedMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  id: GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Pobiera oryginalnych wartości."
  remarks: "Należy pamiętać, że:-argument jednostki musi być inne niż null. W przeciwnym razie jest zgłaszany wyjątek argumentu o wartości null.      — W odniesieniu silnie typizowaną (`TEntity`), typ musi być zamapowana i musi być typu jednostki. Oznacza to musi on mieć informacji o identyfikatorze obiektu jego mapowanie. W przeciwnym razie niewłaściwego typu wyjątku."
  syntax:
    content: public object GetOriginalEntityState (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Jednostka, w których pierwotna wartość ma być pobrana."
    return:
      type: System.Object
      description: "Kopia oryginalna jednostka. Ma wartość null, jeśli jednostka przekazano nie są śledzone. Odłączonych jednostek odesłana przez klienta musi być dołączony przed <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> rozpocząć śledzenie stanu. &quot;Pierwotnego stanu&quot; nowo dołączona jednostki jest określana na podstawie wartości dostarczany przez klienta. Kontekst danych nie śledzi stan odłączonych jednostek."
  overload: System.Data.Linq.ITable.GetOriginalEntityState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  id: InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Dodaje wszystkie jednostki w kolekcji do <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> w <xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;> </xref> stanu."
  remarks: "Wywołanie <xref:System.Data.Linq.DataContext.SubmitChanges%2A>przeprowadzić rzeczywiste wstawiania do bazy danych.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Jednostki do dodania."
  overload: System.Data.Linq.ITable.InsertAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  id: InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Dodaje jednostki w <xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;> </xref> stanu do tej tabeli."
  remarks: "Wywołanie <xref:System.Data.Linq.DataContext.SubmitChanges%2A>przeprowadzić rzeczywiste wstawiania do bazy danych.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Jednostka do dodania."
  overload: System.Data.Linq.ITable.InsertOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Wskazuje, jeśli typ jednostek zawarty w tym <xref href=&quot;System.Data.Linq.ITable&quot;> </xref> wystąpienie ma klucz podstawowy."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli typ jednostki nie ma klucza podstawowego; w przeciwnym razie wartość false."
  overload: System.Data.Linq.ITable.IsReadOnly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.ITable.Attach(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
- uid: System.Data.Linq.ITable.Context
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
- uid: System.Data.Linq.DataContext
  parent: System.Data.Linq
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: System.Data.Linq.DataContext
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
- uid: System.Data.Linq.ModifiedMemberInfo[]
  parent: System.Data.Linq
  isExternal: false
  name: ModifiedMemberInfo
  nameWithType: ModifiedMemberInfo
  fullName: System.Data.Linq.ModifiedMemberInfo[]
  spec.csharp:
  - uid: System.Data.Linq.ModifiedMemberInfo
    name: ModifiedMemberInfo
    nameWithType: ModifiedMemberInfo
    fullName: ModifiedMemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
- uid: System.Data.Linq.ITable.IsReadOnly
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
- uid: System.Data.Linq.ITable.Attach*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach
  nameWithType: ITable.Attach
- uid: System.Data.Linq.ITable.AttachAll*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll
  nameWithType: ITable.AttachAll
- uid: System.Data.Linq.ITable.Context*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit
  nameWithType: ITable.DeleteAllOnSubmit
- uid: System.Data.Linq.ITable.DeleteOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit
  nameWithType: ITable.DeleteOnSubmit
- uid: System.Data.Linq.ITable.GetModifiedMembers*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers
  nameWithType: ITable.GetModifiedMembers
- uid: System.Data.Linq.ITable.GetOriginalEntityState*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState
  nameWithType: ITable.GetOriginalEntityState
- uid: System.Data.Linq.ITable.InsertAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit
  nameWithType: ITable.InsertAllOnSubmit
- uid: System.Data.Linq.ITable.InsertOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit
  nameWithType: ITable.InsertOnSubmit
- uid: System.Data.Linq.ITable.IsReadOnly*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
