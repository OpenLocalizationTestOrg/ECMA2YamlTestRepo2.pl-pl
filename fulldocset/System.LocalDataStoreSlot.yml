### YamlMime:ManagedReference
items:
- uid: System.LocalDataStoreSlot
  id: LocalDataStoreSlot
  children:
  - System.LocalDataStoreSlot.Finalize
  langs:
  - csharp
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
  type: Class
  summary: "Hermetyzuje pamięci miejsca do przechowywania danych lokalnych. Ta klasa nie może być dziedziczona."
  remarks: "Platforma .NET Framework zapewnia dwa mechanizmy przy użyciu lokalny magazyn wątków (TLS): powiązane z wątkiem pola statyczne i gniazda danych.      -Powiązane z wątkiem pola statyczne są `static` pola (`Shared` pól w języku Visual Basic) o <xref:System.ThreadStaticAttribute>atrybutu.</xref:System.ThreadStaticAttribute> Zapewnić lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.      -Data miejsca są wolniejszy i bardziej nieodpowiednich w użyciu niż powiązane z wątkiem pola statyczne. Ponadto dane są przechowywane jako typ <xref:System.Object>więc należy rzutować go do poprawnego typu przed użyciem go.</xref:System.Object> Można jednak użyć gniazda danych, jeśli masz za mało informacji w czasie kompilacji do przydzielenia pola statyczne.       Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [magazynu lokalnego wątku: powiązane z wątkiem pola statyczne i gniazda danych](~/add/includes/ajax-current-ext-md.md).       Podobnie, .NET Framework zapewnia dwa mechanizmy korzystanie z magazynu lokalnego kontekstu: kontekstu statycznego miejsc pól i danych. Kontekst z wątkiem pola statyczne są pól statycznych, które są oznaczone ikoną z <xref:System.ContextStaticAttribute>atrybutu.</xref:System.ContextStaticAttribute> Kompromis między przy użyciu tych dwóch mechanizmów są podobne do skutków ubocznych między przy użyciu statycznych miejsc pola i dane powiązane z wątkiem.       Struktura LocalDataStoreSlot służy jako mechanizm pamięci lokalny magazyn wątków i konteksty umożliwiają przechowywanie danych właściwych dla wątku i zależne od kontekstu, odpowiednio. Środowisko uruchomieniowe języka wspólnego przydziela tablicą magazynu danych z wieloma do każdego procesu podczas jego tworzenia. Wywołania thread lub context różnych funkcji do przydzielenia miejsca w magazynie danych dane, do przechowywania i pobierania wartości danych w miejscu i wolne gniazdo danych ponownie wykorzystać po wygaśnięciu obiektu thread lub context.       Gniazda danych są unikatowe w każdym thread lub context; wartości nie są współdzielone między obiektami thread lub context. Przydzielanie gniazda danych według nazwy lub numer indeksu.       Aby uzyskać więcej informacji o zapisywaniu danych lokalnych zobacz <xref:System.Threading.Thread>lub <xref:System.Runtime.Remoting.Contexts.Context>.</xref:System.Runtime.Remoting.Contexts.Context> </xref:System.Threading.Thread> Klasa LocalDataStoreSlot jest używana z metod, takich jak <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Threading.Thread.GetData%2A?displayProperty=fullName>, i <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName>; nie ma żadnych metod własną tego należy użyć.</xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName> </xref:System.Threading.Thread.GetData%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName> </xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class LocalDataStoreSlot
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.LocalDataStoreSlot.Finalize
  id: Finalize
  parent: System.LocalDataStoreSlot
  langs:
  - csharp
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Gwarantuje, że zasoby są zwalniane i inne operacje oczyszczania są wykonywane, gdy moduł garbage collector zwraca <xref href=&quot;System.LocalDataStoreSlot&quot;> </xref> obiektu."
  remarks: "Moduł zbierający elementy bezużyteczne wywołuje Finalize, gdy bieżący obiekt jest gotowy do przetwarzania."
  syntax:
    content: ~LocalDataStoreSlot ();
    parameters: []
  overload: System.LocalDataStoreSlot.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.LocalDataStoreSlot.Finalize
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
- uid: System.LocalDataStoreSlot.Finalize*
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize
  nameWithType: LocalDataStoreSlot.Finalize
