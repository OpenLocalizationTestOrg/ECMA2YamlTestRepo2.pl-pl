### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  id: SecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  langs:
  - csharp
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
  type: Class
  summary: "Reprezentuje dostawcę tokenów zabezpieczających, która obsługuje tokeny zabezpieczające nadawcy wiadomości protokołu SOAP."
  remarks: "Gdy wymagane są tokeny zabezpieczające niestandardowe, należy użyć klasy obiekt SecurityTokenProvider. Rola dostawcy tokenów zabezpieczających jest uzyskanie tokenu zabezpieczającego podczas komunikatu protokołu SOAP są wysyłane przez klienta i token zabezpieczający jest używany do uwierzytelniania klienta lub do ochrony wiadomości protokołu SOAP. W szczególności <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>Metoda jest wywoływana w celu pobrania tokenu zabezpieczeń.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> Aby anulować i odnawianie zabezpieczeń przy użyciu również można wywołać dostawcy tokenów zabezpieczających <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>i <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       Klasy, które pochodzą z <xref:System.IdentityModel.Selectors.SecurityTokenManager>implementacji klasy <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A>metodę, aby ustalić zabezpieczeń dostawcy tokenu jest wymagana dla tokenu zabezpieczeń.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> </xref:System.IdentityModel.Selectors.SecurityTokenManager>       <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>i <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>klasy Podaj domyślnej implementacji zabezpieczeń wbudowane typy tokenów.</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> W przypadku scenariuszy tokenu zabezpieczeń niestandardowe klasy musi pochodzić z jednego z <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>, lub <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>klas i dostarczenie tej funkcji można utworzyć dostawcy tokenów zabezpieczających, wystawcę uwierzytelnienia tokenów zabezpieczających i Serializator tokenu zabezpieczającego dla tokenu zabezpieczającego niestandardowych.</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> </xref:System.IdentityModel.Selectors.SecurityTokenManager> [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Tworzenie tokenu niestandardowego, zobacz [porady: Tworzenie niestandardowego tokenu](~/add/includes/ajax-current-ext-md.md)."
  example:
  - >-
    [!code-vb[SecurityTokenProvider#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_9_1.vb)]
     [!code-cs[SecurityTokenProvider#0](~/add/codesnippet/csharp/t-system.identitymodel.s_9_1.cs)]
  syntax:
    content: public abstract class SecurityTokenProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> klasy."
  syntax:
    content: protected SecurityTokenProvider ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Rozpoczyna operację asynchroniczną, aby anulować tokenu zabezpieczającego."
  remarks: "Token zabezpieczający, który można anulować, taki jak wystawiony, umożliwia klientowi, który żądany token zabezpieczający, aby je anulować, gdy odbywa się z nim."
  syntax:
    content: public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który anuluje tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Do anulowania."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja asynchronicznego anulowania.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Rozpoczyna operację asynchroniczną, aby anulować tokenu zabezpieczającego."
  remarks: "Token zabezpieczający, który można anulować, taki jak wystawiony, umożliwia klientowi, który żądany token zabezpieczający, aby je anulować, gdy odbywa się z nim."
  syntax:
    content: protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który anuluje tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Do anulowania."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja asynchronicznego anulowania.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Rozpoczyna operację asynchroniczną można pobrać tokenu zabezpieczającego."
  remarks: "Wywołania metody BeginGetToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który pobiera token zabezpieczający.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się asynchroniczną operację zamknięcia.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Rozpoczyna operację asynchroniczną można pobrać tokenu zabezpieczającego."
  remarks: "Przy dziedziczeniu z <xref:System.IdentityModel.Selectors.SecurityTokenProvider>nie należy do przesłonięcia metod asynchronicznych jako klasa <xref:System.IdentityModel.Selectors.SecurityTokenProvider>klasy podstawowej obsługuje asynchroniczne ustalane na podstawie metod synchronicznych.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> W związku z tym nie należy zastąpić metodę BeginGetTokenCore, chyba że musisz podać asynchroniczne implementacji.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>Metoda wywołuje metodę BeginGetTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który pobiera token zabezpieczający.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja asynchroniczna.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Rozpoczyna operację asynchroniczną, który odnawia tokenu zabezpieczającego."
  remarks: "Wywołania metody BeginRenewToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który odnawia tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Odnowienia."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja asynchroniczna.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Rozpoczyna operację asynchroniczną, który odnawia tokenu zabezpieczającego."
  remarks: "Przy dziedziczeniu z <xref:System.IdentityModel.Selectors.SecurityTokenProvider>nie należy do przesłonięcia metod asynchronicznych jako klasa <xref:System.IdentityModel.Selectors.SecurityTokenProvider>klasy podstawowej obsługuje asynchroniczne ustalane na podstawie metod synchronicznych.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> W związku z tym nie należy zastąpić metodę BeginRenewTokenCore, chyba że musisz podać asynchroniczne implementacji.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>Metoda wywołuje metodę BeginRenewTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który odnawia tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Odnowienia."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja asynchroniczna.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Anuluje tokenu zabezpieczającego."
  remarks: "Token zabezpieczający, który można anulować, taki jak wystawiony, umożliwia klientowi, który żądany token zabezpieczający, aby je anulować, gdy odbywa się z nim.       Wywołania metody CancelToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>"
  syntax:
    content: public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który anuluje tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Do anulowania."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Anuluje tokenu zabezpieczającego."
  remarks: "Token zabezpieczający, który można anulować, taki jak wystawiony, umożliwia klientowi, który żądany token zabezpieczający, aby je anulować, gdy odbywa się z nim.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>Metoda wywołuje metodę CancelTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       Gdy metody CancelTokenCore i nie można anulować tokenu zabezpieczającego przekazany parametr tokenu, throw <xref:System.IdentityModel.Tokens.SecurityTokenException>wyjątek.</xref:System.IdentityModel.Tokens.SecurityTokenException>"
  syntax:
    content: protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który anuluje tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Do anulowania."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  id: EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Kończy operację asynchroniczną, aby anulować tokenu zabezpieczającego."
  remarks: "Token zabezpieczający, który można anulować, taki jak wystawiony, umożliwia klientowi, który żądany token zabezpieczający, aby je anulować, gdy odbywa się z nim.       Wywołania metody EndCancelToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>"
  syntax:
    content: public void EndCancelToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który jest zwracany przez wywołanie do <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  id: EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Kończy operację asynchroniczną, aby anulować tokenu zabezpieczającego."
  remarks: "Token zabezpieczający, który można anulować, taki jak wystawiony, umożliwia klientowi, który żądany token zabezpieczający, aby je anulować, gdy odbywa się z nim.       Przy dziedziczeniu z <xref:System.IdentityModel.Selectors.SecurityTokenProvider>nie należy do przesłonięcia metod asynchronicznych jako klasa <xref:System.IdentityModel.Selectors.SecurityTokenProvider>klasy podstawowej obsługuje asynchroniczne ustalane na podstawie metod synchronicznych.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> W związku z tym nie należy zastąpić metodę EndCancelTokenCore, chyba że musisz podać asynchroniczne implementacji.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>Metoda wywołuje metodę EndCancelTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>"
  syntax:
    content: protected virtual void EndCancelTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który jest zwracany przez wywołanie do <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  id: EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Kończy operację asynchroniczną można pobrać tokenu zabezpieczającego."
  remarks: "Wywołania metody EndGetToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który jest zwracany przez wywołanie do <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący tokenu zabezpieczającego."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  id: EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Kończy operację asynchroniczną można pobrać tokenu zabezpieczającego."
  remarks: "Przy dziedziczeniu z <xref:System.IdentityModel.Selectors.SecurityTokenProvider>nie należy do przesłonięcia metod asynchronicznych jako klasa <xref:System.IdentityModel.Selectors.SecurityTokenProvider>klasy podstawowej obsługuje asynchroniczne ustalane na podstawie metod synchronicznych.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> W związku z tym nie należy zastąpić metodę EndGetTokenCore, chyba że musisz podać asynchroniczne implementacji.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>Metoda wywołuje metodę EndGetTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który jest zwracany przez wywołanie do <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący tokenu zabezpieczającego."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  id: EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Kończy operację asynchroniczną do odnawiania tokenu zabezpieczeń."
  remarks: "Wywołania metody EndRenewToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który jest zwracany przez wywołanie do <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący token zabezpieczający, który jest odnawiany."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  id: EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Kończy operację asynchroniczną do odnawiania tokenu zabezpieczeń."
  remarks: "Przy dziedziczeniu z <xref:System.IdentityModel.Selectors.SecurityTokenProvider>nie należy do przesłonięcia metod asynchronicznych jako klasa <xref:System.IdentityModel.Selectors.SecurityTokenProvider>klasy podstawowej obsługuje asynchroniczne ustalane na podstawie metod synchronicznych.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> W związku z tym nie należy zastąpić metodę EndRenewTokenCore, chyba że musisz podać asynchroniczne implementacji.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>Metoda wywołuje metodę EndRenewTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Który jest zwracany przez wywołanie do <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący token zabezpieczający, który jest odnawiany."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  id: GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera token zabezpieczający."
  remarks: "GetToken — metoda jest wywoływana przez <xref:System.ServiceModel.Description.ClientCredentials>klasy, gdy klient wysyła wiadomości protokołu SOAP i token zabezpieczający jest wymagany.</xref:System.ServiceModel.Description.ClientCredentials>       GetToken wywołania metody <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>       W większości przypadków `timeout` parametr nie jest używany przez klas pochodnych <xref:System.IdentityModel.Selectors.SecurityTokenProvider>takich jak <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Jednak czasami pobierania tokenu zabezpieczeń wymaga rozproszonej obsługi wiadomości. Na przykład <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider>używany przez usługę federacyjną.</xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> W takich przypadkach `timeout` parametr jest używany w celu uniknięcia wyjątków spowodowanych awarie sieci, utrata wiadomości i innych błędów."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który pobiera token zabezpieczający.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący można pobrać tokenu zabezpieczającego."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera token zabezpieczający."
  remarks: "Gdy metody GetTokenCore i nie można uzyskać tokenu zabezpieczającego przekazany parametr tokenu, throw <xref:System.IdentityModel.Tokens.SecurityTokenException>wyjątek.</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>Metoda jest wywoływana przez <xref:System.ServiceModel.Description.ClientCredentials>klasy, gdy klient wysyła wiadomości protokołu SOAP i token zabezpieczający jest wymagany.</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>Metoda wywołuje metodę GetTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>"
  example:
  - >-
    [!code-vb[SecurityTokenProvider#1](~/add/codesnippet/visualbasic/501effc0-dded-4b3b-893a-_1.vb)]
     [!code-cs[SecurityTokenProvider#1](~/add/codesnippet/csharp/501effc0-dded-4b3b-893a-_1.cs)]
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który pobiera token zabezpieczający.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący można pobrać tokenu zabezpieczającego."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Odnawia tokenu zabezpieczającego."
  remarks: "Token zabezpieczeń, który może być wznawiane umożliwia klientowi Odnów go, gdy token zabezpieczający wkrótce lub jego ważność wygasła.       Wywołania metody RenewToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który odnawia tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Odnowienia."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący token zabezpieczający, który jest odnawiany."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Odnawia tokenu zabezpieczającego."
  remarks: "Token zabezpieczeń, który może być wznawiane umożliwia klientowi Odnów go, gdy token zabezpieczający wkrótce lub jego ważność wygasła.       Gdy metody RenewTokenCore i nie można odnowić tokenu zabezpieczającego przekazany parametr tokenu, throw <xref:System.IdentityModel.Tokens.SecurityTokenException>wyjątek.</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>Metoda wywołuje metodę RenewTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, który określa wartość limitu czasu dla komunikatu, który odnawia tokenu zabezpieczającego.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Odnowienia."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Reprezentujący token zabezpieczający, który jest odnawiany."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  id: SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera wartość wskazującą, czy token zabezpieczający można anulować."
  remarks: "Token zabezpieczający, który można anulować, taki jak wystawiony, umożliwia klientowi, który żądany token zabezpieczający, aby je anulować, gdy odbywa się z nim."
  syntax:
    content: public virtual bool SupportsTokenCancellation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli token zabezpieczający można anulować; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  id: SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera wartość wskazującą, czy token zabezpieczający jest odnawialne."
  remarks: "Token zabezpieczeń, który może być wznawiane umożliwia klientowi Odnów go, gdy token zabezpieczający wkrótce lub jego ważność wygasła."
  syntax:
    content: public virtual bool SupportsTokenRenewal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli token zabezpieczający mogą być odnawiane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken
  nameWithType: SecurityTokenProvider.BeginCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken
  nameWithType: SecurityTokenProvider.BeginGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore
  nameWithType: SecurityTokenProvider.BeginGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken
  nameWithType: SecurityTokenProvider.BeginRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken
  nameWithType: SecurityTokenProvider.CancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore
  nameWithType: SecurityTokenProvider.CancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken
  nameWithType: SecurityTokenProvider.EndCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore
  nameWithType: SecurityTokenProvider.EndCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken
  nameWithType: SecurityTokenProvider.EndGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore
  nameWithType: SecurityTokenProvider.EndGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken
  nameWithType: SecurityTokenProvider.EndRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore
  nameWithType: SecurityTokenProvider.EndRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken
  nameWithType: SecurityTokenProvider.GetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: SecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken
  nameWithType: SecurityTokenProvider.RenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore
  nameWithType: SecurityTokenProvider.RenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
