### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  id: DataControlFieldCollection
  children:
  - System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  - System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  - System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  - System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  - System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  - System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
  type: Class
  summary: "Reprezentuje kolekcję <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektów, które są używane przez formanty powiązane z danymi, takich jak <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> i <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>."
  remarks: "Klasa DataControlFieldCollection reprezentuje kolekcję <xref:System.Web.UI.WebControls.DataControlField>używanych przez formanty powiązane z danymi, aby określić, jak są prezentowane ich formantów podrzędnych obiektów.</xref:System.Web.UI.WebControls.DataControlField> Pochodną klasy DataControlFieldCollection <xref:System.Web.UI.StateManagedCollection>, klasy abstrakcyjnej kolekcji podstawowy używany w szczególności do przechowywania <xref:System.Web.UI.IStateManager>obiektów.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.StateManagedCollection>       A <xref:System.Web.UI.StateManagedCollection>obiekt ma wpływ na zachowanie obiektu DataControlFieldCollection.</xref:System.Web.UI.StateManagedCollection> <xref:System.Web.UI.WebControls.DataControlField>obiekty, które są dodawane dynamicznie do kolekcji będą ponownie dodać do formantu, gdy jest przywracany stan.</xref:System.Web.UI.WebControls.DataControlField> Oznacza to, że pole musi dodane, usunięte lub zmienione tylko raz, zamiast z każdej strony wymagać większość typów kolekcji w programie ASP.NET.       ( <xref:System.Web.UI.WebControls.DataControlField>Klasa implementuje <xref:System.Web.UI.IStateManager>interfejsu, co umożliwia przechowywanie stanu w stan widoku programu ASP.NET.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.DataControlField> ) Użyj klasy DataControlFieldCollection do programowego zarządzania zestaw <xref:System.Web.UI.WebControls.DataControlField>obiektów.</xref:System.Web.UI.WebControls.DataControlField> Należy pamiętać, że częściej do deklaratywnego definiowania tych pól.       Możesz dodać, wstawianie i usuwanie <xref:System.Web.UI.WebControls.DataControlField>obiektów przy użyciu odpowiednich metod klasy DataControlFieldCollection.</xref:System.Web.UI.WebControls.DataControlField> Programowo pobrać <xref:System.Web.UI.WebControls.DataControlField>obiektów z kolekcji, użyj jednej z następujących metod:-Użyj indeksatora, aby pobrać pojedynczy <xref:System.Web.UI.WebControls.DataControlField>obiekt z kolekcji przy użyciu tablicy notacji.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField>      -Użyj <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>metodę w celu utworzenia <xref:System.Collections.IEnumerator?displayProperty=fullName>-zaimplementowanych obiektu, którego można użyć do uzyskania elementu z kolekcji.</xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>       <xref:System.Web.UI.StateManagedCollection.Count%2A>Właściwość określa całkowitą liczbę elementów w kolekcji i jest najczęściej używany do określenia górna granica kolekcji.</xref:System.Web.UI.StateManagedCollection.Count%2A> Możesz dodać elementy do i usuwanie elementów z kolekcji przy użyciu <xref:System.Web.UI.WebControls.DataControlFieldCollection.Add%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A>, i <xref:System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt%2A>metody.</xref:System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Add%2A>       Jeśli używasz <xref:System.Web.UI.WebControls.GridView>lub <xref:System.Web.UI.WebControls.DetailsView>kontroli, <xref:System.Web.UI.WebControls.DataControlField>obiektów, które są tworzone automatycznie (na przykład, gdy <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>jest właściwość `true`) nie są przechowywane w kolekcji fields publicznie.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Można jedynie dostępu i manipulowania <xref:System.Web.UI.WebControls.DataControlField>obiektów, które nie są automatycznie generowane.</xref:System.Web.UI.WebControls.DataControlField>       W poniższej tabeli wymieniono klasy pola formantu danych i sposobu ich używania.      | Parametr klasy | Opis elementu |   |---------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField>| Abstrakcyjna klasa podstawowa dla wszystkich pól. |   | <xref:System.Web.UI.WebControls.BoundField>| Pole formantu powiązanego z danymi, które jest używane dla wiązania tekst lub dane pobrane z kontroli źródła danych ASP.NET. |   | <xref:System.Web.UI.WebControls.ButtonFieldBase>| Pole formantu powiązanego z danymi, które hermetyzuje funkcjonalność przycisk ogólne.</xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField> <xref:System.Web.UI.WebControls.ButtonField>i <xref:System.Web.UI.WebControls.CheckBoxField>są pochodzić od niego. |   | <xref:System.Web.UI.WebControls.ButtonField>| Pola powiązane z danymi formantu zawierającego co najmniej jeden z przycisków. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| Pola powiązane z danymi formantu zawierającego kontrolkę <xref:System.Web.UI.WebControls.CheckBox>. |   | <xref:System.Web.UI.WebControls.CommandField>| Pole formantu powiązanego z danymi, które wyświetla działania, które można wykonać na dane wyświetlane przez wiersza (lub kolumny), takich jak edytowanie, update lub delete. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| Pola powiązane z danymi formantu zawierającego kontrolkę <xref:System.Web.UI.WebControls.HyperLink>. |   | <xref:System.Web.UI.WebControls.ImageField>| Pola powiązane z danymi formantu zawierającego kontrolkę <xref:System.Web.UI.WebControls.Image>. |   | <xref:System.Web.UI.WebControls.TemplateField>| Pole powiązane z danymi formantu, które wyświetla zawartość niestandardowe w formancie powiązane z danymi. |</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.ImageField> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.CheckBoxField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.CheckBoxField></xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: 'public sealed class DataControlFieldCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: DataControlFieldCollection()
  nameWithType: DataControlFieldCollection.DataControlFieldCollection()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.DataControlFieldCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> klasy."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie <xref:System.Web.UI.WebControls.DataControlFieldCollection>klasy.</xref:System.Web.UI.WebControls.DataControlFieldCollection>      > [!NOTE] > Ten konstruktor jest używany głównie przez deweloperów kontroli."
  syntax:
    content: public DataControlFieldCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlFieldCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  id: Add(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Add(DataControlField)
  nameWithType: DataControlFieldCollection.Add(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Add(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Dołącza określony <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiekt do końca kolekcji."
  remarks: "Użyj metody Add dołączyć <xref:System.Web.UI.WebControls.DataControlField>obiekt do końca kolekcji.</xref:System.Web.UI.WebControls.DataControlField> Ta implementacja metody przyjmuje <xref:System.Web.UI.WebControls.DataControlField>obiekt określony przez `field` parametru i dołącza go do kolekcji.</xref:System.Web.UI.WebControls.DataControlField>"
  example:
  - "The following code example demonstrates how to use the Add method to dynamically add a <xref:System.Web.UI.WebControls.CheckBoxField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CheckBoxFieldCtor#1](~/add/codesnippet/csharp/6b1fdd6c-f2f2-4668-8119-_1.aspx)]\n [!code-vb[CheckBoxFieldCtor#1](~/add/codesnippet/visualbasic/6b1fdd6c-f2f2-4668-8119-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Do dołączenia do kolekcji."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  id: CloneFields
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CloneFields()
  nameWithType: DataControlFieldCollection.CloneFields()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy kopię bieżącej kolekcji."
  remarks: "Metoda CloneFields umożliwia utworzenie kopii bieżącej kolekcji. Ta metoda jest używana głównie przez czasu projektowania okien dialogowych do zaimplementowania wycofywania zachowanie, gdy operacja została anulowana."
  syntax:
    content: public System.Web.UI.WebControls.DataControlFieldCollection CloneFields ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> zawierający kopię w każdym polu formantu danych w bieżącej kolekcji."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  id: Contains(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Contains(DataControlField)
  nameWithType: DataControlFieldCollection.Contains(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Contains(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa, czy <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> kolekcja zawiera konkretny <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu."
  remarks: "Ta metoda wykonuje wyszukiwanie liniowe. Określa równości przez wywołanie metody <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Do zlokalizowania w <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> zawiera określony pole; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CopyTo(DataControlField[],Int32)
  nameWithType: DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopiuje całą <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> kolekcji do jednowymiarowego zgodnego <xref:System.Array>, rozpoczynając od określonego indeksu tablicy docelowej.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.DataControlField[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.DataControlField[]
      description: "Jednowymiarowa <xref:System.Array>który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>jest wielowymiarowy.       - lub - liczba pól w źródle <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> kolekcji jest większa niż dostępne miejsce od <code>index</code> do końca tablicy docelowej."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: DataControlFieldCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Do dodania."
    return:
      type: System.Object
      description: "Do dodania."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  id: FieldsChanged
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: FieldsChanged
  nameWithType: DataControlFieldCollection.FieldsChanged
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy pola w kolekcji, zmienić, zazwyczaj w wyniku <> </> *>, <> </> *>, <> </> *> lub <> </> *> wywołania metody. To zdarzenie jest również zgłaszane w dowolnym momencie <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> w kolekcji zgłasza jego <xref uid=&quot;langword_csharp_FieldChanged&quot; name=&quot;FieldChanged&quot; href=&quot;&quot;> </xref> zdarzeń."
  remarks: "FieldsChanged zdarzenie jest wywoływane podczas <xref:System.Web.UI.StateManagedCollection.Clear%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A>, lub <xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A>Metoda jest wywoływana.</xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A> </xref:System.Web.UI.StateManagedCollection.Clear%2A>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler FieldsChanged;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: DataControlFieldCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Do dodania."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  id: IndexOf(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: IndexOf(DataControlField)
  nameWithType: DataControlFieldCollection.IndexOf(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa indeks określonej <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu w kolekcji."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Do zlokalizowania w kolekcji."
    return:
      type: System.Int32
      description: "Indeks <code> field </code> parametru, jeśli jest ona znaleziony w kolekcji; w przeciwnym razie wartość -1."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  id: Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Insert(Int32,DataControlField)
  nameWithType: DataControlFieldCollection.Insert(Int32,DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Insert(Int32,DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Wstawia określony <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiekt do <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> kolekcji pod określonym indeksem."
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> dodaje się."
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Do wstawienia."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than 0.  \n  \n \\- or -  \n  \n <code>index</code> is greater than <xref:System.Web.UI.StateManagedCollection.Count*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataControlFieldCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu pod określonym indeksem w kolekcji."
  remarks: "Użyj tego indeksatora, aby pobrać <xref:System.Web.UI.WebControls.DataControlField>obiekt z <xref:System.Web.UI.WebControls.DataControlFieldCollection>kolekcji w określonym indeksie, używając notacji tablicy.</xref:System.Web.UI.WebControls.DataControlFieldCollection> </xref:System.Web.UI.WebControls.DataControlField>"
  example:
  - "The following code example demonstrates how to use the Item indexer to access the fields of a <xref:System.Web.UI.WebControls.GridView> control when the user clicks a button in the control.  \n  \n [!code-cs[ButtonFieldBaseCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1071_1.aspx)]\n [!code-vb[ButtonFieldBaseCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1071_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DataControlField this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> można pobrać z kolekcji."
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Pod określonym indeksem w kolekcji."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  id: OnClearComplete
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: DataControlFieldCollection.OnClearComplete()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClearComplete ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Do dodania."
    - id: value
      type: System.Object
      description: "Do dodania."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Do dodania."
    - id: value
      type: System.Object
      description: "Do dodania."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: DataControlFieldCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Do dodania."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  id: Remove(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Remove(DataControlField)
  nameWithType: DataControlFieldCollection.Remove(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Remove(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Usuwa określoną <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiekt z <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> kolekcji."
  syntax:
    content: public void Remove (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Do usunięcia z <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataControlFieldCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Usuwa <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu o określonym indeksie z <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> kolekcji."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeks <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> do usunięcia."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: DataControlFieldCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Do dodania."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: DataControlFieldCollection()
  nameWithType: DataControlFieldCollection.DataControlFieldCollection()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.DataControlFieldCollection()
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Add(DataControlField)
  nameWithType: DataControlFieldCollection.Add(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Add(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CloneFields()
  nameWithType: DataControlFieldCollection.CloneFields()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields()
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Contains(DataControlField)
  nameWithType: DataControlFieldCollection.Contains(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Contains(DataControlField)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CopyTo(DataControlField[],Int32)
  nameWithType: DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(DataControlField[],Int32)
- uid: System.Web.UI.WebControls.DataControlField[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataControlField
    name: DataControlField
    nameWithType: DataControlField
    fullName: DataControlField[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: DataControlFieldCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: FieldsChanged
  nameWithType: DataControlFieldCollection.FieldsChanged
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: DataControlFieldCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: IndexOf(DataControlField)
  nameWithType: DataControlFieldCollection.IndexOf(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Insert(Int32,DataControlField)
  nameWithType: DataControlFieldCollection.Insert(Int32,DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Insert(Int32,DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataControlFieldCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Item(Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: DataControlFieldCollection.OnClearComplete()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete()
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(Int32,Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: DataControlFieldCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Remove(DataControlField)
  nameWithType: DataControlFieldCollection.Remove(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Remove(DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataControlFieldCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: DataControlFieldCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Add
  nameWithType: DataControlFieldCollection.Add
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CloneFields
  nameWithType: DataControlFieldCollection.CloneFields
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Contains
  nameWithType: DataControlFieldCollection.Contains
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataControlFieldCollection.CopyTo
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: DataControlFieldCollection.CreateKnownType
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: DataControlFieldCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataControlFieldCollection.IndexOf
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Insert
  nameWithType: DataControlFieldCollection.Insert
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Item
  nameWithType: DataControlFieldCollection.Item
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: DataControlFieldCollection.OnClearComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: DataControlFieldCollection.OnInsertComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: DataControlFieldCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnValidate
  nameWithType: DataControlFieldCollection.OnValidate
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Remove
  nameWithType: DataControlFieldCollection.Remove
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataControlFieldCollection.RemoveAt
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: DataControlFieldCollection.SetDirtyObject
