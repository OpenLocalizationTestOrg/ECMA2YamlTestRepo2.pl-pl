### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ExpressionBuilder
  id: ExpressionBuilder
  children:
  - System.Web.Compilation.ExpressionBuilder.#ctor
  - System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder
  fullName: System.Web.Compilation.ExpressionBuilder
  type: Class
  summary: "Oblicza wyrażeń podczas analizy strony."
  remarks: "Klasa ExpressionBuilder jest klasą bazową dla konstruktorów wyrażeń, takich jak <xref:System.Web.Compilation.AppSettingsExpressionBuilder>klasy, który tworzenie wyrażeń kodu podczas analizy strony.</xref:System.Web.Compilation.AppSettingsExpressionBuilder>       Konstruktorów wyrażeń analizowanie deklaratywne wyrażeń i tworzenia kodu można pobrać wartości powiązana z właściwością formantu. W scenariuszach kompilacji nie Konstruktor wyrażeń, który obsługuje funkcję kompilacji nie oblicza wyrażenie w czasie wykonywania.       Gdy analizator strony napotka wyrażenie rozdzielana z ciągiem `<%$ %>`, tworzy Konstruktor wyrażeń dla wyrażenia na podstawie prefiksu w ciągu. Prefiks jest częścią ciąg, który jest w lewo dwukropka (:). Na przykład, jeśli analizator napotka ciąg `<%$ ConnectionStrings:MessageDB %>`, tworzy <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>obiektu.</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> Prefiksy są skojarzone z konstruktorów wyrażeń w pliku Web.config w <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>sekcji.</xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>       Po prawej stronie wyrażenia deklaratywne jest przekazywany do Konstruktora wyrażeń w wersji ewaluacyjnej. Zastąpienie <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>metody do generowania kodu, który zostanie skompilowany ze stroną.</xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>       Jeśli chcesz, aby Konstruktor wyrażeń niestandardowych będzie aktywny na stronach, które nie są kompilowane, musi także zastępować <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>Metoda zwraca obiekt reprezentujący wynik wyrażenia.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Należy również zmienić <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>Właściwości, aby wskazać, że Konstruktor wyrażeń niestandardowych obsługuje kompilacji nie stron.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>       Można zdefiniować zbiór właściwości i metody wyboru i obliczenia wyrażenia skojarzonego z właściwości formantu w czasie projektowania zaimplementowanie edytora wyrażeń. Edytor jest oznaczona na Konstruktor wyrażeń za pośrednictwem poziomie klasy metadanych. Aby uzyskać więcej informacji zobacz <xref:System.Web.UI.Design.ExpressionEditor>.</xref:System.Web.UI.Design.ExpressionEditor>"
  example:
  - "The following code examples demonstrate how to build a custom expression builder by implementing the ExpressionBuilder abstract class. This implementation of ExpressionBuilder returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \n  \n```  \n<configuration>  \n    <system.web>  \n       <compilation>  \n          <expressionBuilders>  \n              <add expressionPrefix=\"MyCustomExpression\"  \n               type=\"MyCustomExpressionBuilder\"/>  \n          </expressionBuilders>  \n       </compilation>  \n    </system.web>  \n</configuration>  \n```  \n  \n The second code example demonstrates how to reference the expression in an .aspx file.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"   \nText=\"<%$ MyCustomExpression:Hello, world! %>\" />  \n```  \n  \n The third code example demonstrates how to develop a customized expression builder by deriving from ExpressionBuilder. To run this code example, you must place the class in the App_Code folder.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract class ExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> klasy."
  remarks: "Ponieważ <xref:System.Web.Compilation.ExpressionBuilder>Klasa jest abstrakcyjna, nie można utworzyć wystąpienia <xref:System.Web.Compilation.ExpressionBuilder>bezpośrednio za pomocą konstruktora ExpressionBuilder.</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: protected ExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca obiekt reprezentujący obliczane wyrażenie."
  remarks: "Jeśli chcesz z <xref:System.Web.Compilation.ExpressionBuilder>obiektów jako aktywnych na stronie, która obsługuje funkcję kompilacji nie można zastąpić metodę EvaluateExpression i <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>Właściwości.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> </xref:System.Web.Compilation.ExpressionBuilder> Metoda EvaluateExpression powinna zwrócić obliczania bieżącego wyrażenia."
  example:
  - "The following code example demonstrates how to use the overridden EvaluateExpression method to return an evaluated expression.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "Obiekt zawierający wyrażenie."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Obiekt, który reprezentuje informacje dotyczące właściwości powiązany z wyrażeniem."
    - id: parsedData
      type: System.Object
      description: "Obiekt zawierający przeanalizowany danych zwrócony przez <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informacje kontekstowe oceny wyrażenia."
    return:
      type: System.Object
      description: "Obiekt reprezentujący obliczane wyrażenie; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli inheritor nie implementuje EvaluateExpression."
  overload: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca kod, który jest używany podczas wykonywania strony do uzyskania obliczane wyrażenie."
  remarks: "Klasy, które dziedziczą z <xref:System.Web.Compilation.ExpressionBuilder>Klasa musi implementować metody abstrakcyjnej GetCodeExpression.</xref:System.Web.Compilation.ExpressionBuilder>"
  example:
  - "The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the GetCodeExpression method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Obiekt, który reprezentuje informacje dotyczące właściwości powiązany z wyrażeniem."
    - id: parsedData
      type: System.Object
      description: "Obiekt zawierający przeanalizowany danych zwrócony przez <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informacje kontekstowe oceny wyrażenia."
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> używanego do przypisania właściwości."
  overload: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca obiekt, który reprezentuje wyrażenie przeanalizowany."
  remarks: "W przypadku przesłonięcia w klasie pochodnej, ta metoda analizuje wyrażenia i zwraca go jako obiekt, który może służyć jako `parsedData` parametru w <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>lub <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metody.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> </xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>"
  syntax:
    content: public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "Wartość deklaratywne wyrażenia."
    - id: propertyType
      type: System.Type
      description: "Typ właściwości jest powiązana z wyrażeniem."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informacje kontekstowe oceny wyrażenia."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający przeanalizowana reprezentacja wyrażenia; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli ParseExpression nie jest zaimplementowana.</xref:System.Object>"
  overload: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Po przesłonięciu w klasie pochodnej zwraca wartość wskazującą czy bieżące <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> stron kompilacji nie obsługuje obiektu."
  remarks: "Wartość domyślna właściwości SupportsEvaluate to `false`. Do obsługi stron nie kompilacji, należy zastąpić zarówno <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metody i właściwości SupportsEvaluate.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>"
  example:
  - "The following code example demonstrates how to use the SupportsEvaluate property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> obsługuje Obliczanie wyrażenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder.ExpressionBuilder
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
