### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.DateAndTime
  id: DateAndTime
  children:
  - Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.DateString
  - Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  - Microsoft.VisualBasic.DateAndTime.Now
  - Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.TimeOfDay
  - Microsoft.VisualBasic.DateAndTime.Timer
  - Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.TimeString
  - Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Today
  - Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  langs:
  - csharp
  name: DateAndTime
  nameWithType: DateAndTime
  fullName: Microsoft.VisualBasic.DateAndTime
  type: Class
  summary: "<xref uid=&quot;langword_csharp_DateAndTime&quot; name=&quot;DateAndTime&quot; href=&quot;&quot;> </xref> Moduł zawiera procedury i właściwości używane w operacjach daty i godziny."
  remarks: "Ten moduł obsługuje słów kluczowych języka Visual Basic i elementy członkowskie biblioteki wykonawczej, które pobrać bieżącą datę lub godzinę, obliczeń daty, zwróć daty lub godziny, ustawić daty lub godziny lub czas trwania procesu."
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n```  \nDim thisDate As Date  \nthisDate = Today   \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class DateAndTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  id: DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość zawierającą wartość daty i godziny, do której dodano określony interwał."
  remarks: "Można użyć `DateAdd` funkcji Dodaj lub usuń ustalony czas od podanej daty. Na przykład można obliczyć daty 30 dni od dziś lub czas 45 minut przed teraz.       Aby dodać dni `DateValue`, można użyć `DateInterval.Day`, `DateInterval.DayOfYear`, lub `DateInterval.Weekday`. Są one traktowane jako równoważne, ponieważ `DayOfYear` i `Weekday` nie są przedziały czasu łatwy do rozpoznania.       `DateAdd` Funkcja nigdy nie zwraca nieprawidłową datę. W razie potrzeby dzień część wynikowy daty jest skorygowana w dół do ostatniego dnia wynikowy miesiąc roku wynikowy. W poniższym przykładzie dodano miesiąc do 31 stycznia: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` w tym przykładzie `DateAdd` zwraca `#2/28/1995#`, a nie `#2/31/1995#`. Jeśli `DateValue` jest `#1/31/1996#`, zwraca `#2/29/1996#` ponieważ 1996 jest rokiem przestępnym.      > [!NOTE]  >   `DateAdd` zostaną użyte bieżące ustawienia kalendarza <xref:System.Globalization.CultureInfo.CurrentCulture%2A>Właściwość <xref:System.Globalization.CultureInfo>klasy w <xref:System.Globalization>przestrzeni nazw.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Wartość domyślna <xref:System.Globalization.CultureInfo.CurrentCulture%2A>wartości są określane przez **Panelu sterowania** ustawień.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime>struktury, jego metody zapewniają dodatkowe opcje podczas dodawania odstępach czasu.</xref:System.DateTime> Na przykład można dodać ułamkowych liczbę dni, zaokrąglona do najbliższej milisekund, do `Date` zmiennej w następujący sposób: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` `Interval` argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Ciąg | Jednostkę czasu interwału do dodania |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Dzień; skrócona do całkowitej wartości |   | `DateInterval.DayOfYear`|y| Dzień; skrócona do całkowitej wartości |   | `DateInterval.Hour`|h| Godzina; zaokrąglona do najbliższej milisekund |   | `DateInterval.Minute`|n| Minuty; zaokrąglona do najbliższej milisekund |   | `DateInterval.Month`|m| Miesiąc; skrócona do całkowitej wartości |   | `DateInterval.Quarter`|q| Kwartał; skrócona do całkowitej wartości |   | `DateInterval.Second`|s| Drugie; zaokrąglona do najbliższej milisekund |   | `DateInterval.Weekday`|w| Dzień; skrócona do całkowitej wartości |   | `DateInterval.WeekOfYear`|ww| Tydzień; skrócona do całkowitej wartości |   | `DateInterval.Year`|yyyy| Rok; skrócona do całkowitej wartości |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/1a306149-706d-46fd-9b1a-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Wymagany. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Wartość wyliczenia lub <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> reprezentujący przedział czasu, które chcesz dodać."
    - id: Number
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Zmiennoprzecinkowe reprezentujący liczbę interwałów, które chcesz dodać. `Number`może być liczbą dodatnią (do pobrania wartości daty/godziny w przyszłości) lub ujemną (Aby uzyskać wartości daty/godziny w przeszłości). Może zawierać ułamkową część kiedy `Interval` określa godzin, minut i sekund. Dla innych wartości `Interval`, any ułamkową część `Number` jest ignorowana."
    - id: DateValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Wyrażenie reprezentujący datę i godzinę, do której ma zostać dodana interwał. `DateValue`sam nie ulega zmianie w program wywołujący."
    return:
      type: System.DateTime
      description: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość zawierającą wartość daty i godziny, do której dodano określony interwał."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>nie jest taki sam jak <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>nie jest prawidłowy."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obliczonej daty jest przed 00:00:00 w dniu 1 stycznia roku, 1 lub nowszej niż 23:59:59 31 grudnia 9999 r."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  id: DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość zawierającą wartość daty i godziny, do której dodano określony interwał."
  remarks: "Można użyć `DateAdd` funkcji Dodaj lub usuń ustalony czas od podanej daty. Na przykład można obliczyć daty 30 dni od dziś lub czas 45 minut przed teraz.       Aby dodać dni `DateValue`, można użyć `DateInterval.Day`, `DateInterval.DayOfYear`, lub `DateInterval.Weekday`. Są one traktowane jako równoważne, ponieważ `DayOfYear` i `Weekday` nie są przedziały czasu łatwy do rozpoznania.       `DateAdd` Funkcja nigdy nie zwraca nieprawidłową datę. W razie potrzeby dzień część wynikowy daty jest skorygowana w dół do ostatniego dnia wynikowy miesiąc roku wynikowy. W poniższym przykładzie dodano miesiąc do 31 stycznia: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` w tym przykładzie `DateAdd` zwraca `#2/28/1995#`, a nie `#2/31/1995#`. Jeśli `DateValue` jest `#1/31/1996#`, zwraca `#2/29/1996#` ponieważ 1996 jest rokiem przestępnym.      > [!NOTE]  >   `DateAdd` zostaną użyte bieżące ustawienia kalendarza <xref:System.Globalization.CultureInfo.CurrentCulture%2A>Właściwość <xref:System.Globalization.CultureInfo>klasy w <xref:System.Globalization>przestrzeni nazw.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Wartość domyślna <xref:System.Globalization.CultureInfo.CurrentCulture%2A>wartości są określane przez **Panelu sterowania** ustawień.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime>struktury, jego metody zapewniają dodatkowe opcje podczas dodawania odstępach czasu.</xref:System.DateTime> Na przykład można dodać ułamkowych liczbę dni, zaokrąglona do najbliższej milisekund, do `Date` zmiennej w następujący sposób: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` `Interval` argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Ciąg | Jednostkę czasu interwału do dodania |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Dzień; skrócona do całkowitej wartości |   | `DateInterval.DayOfYear`|y| Dzień; skrócona do całkowitej wartości |   | `DateInterval.Hour`|h| Godzina; zaokrąglona do najbliższej milisekund |   | `DateInterval.Minute`|n| Minuty; zaokrąglona do najbliższej milisekund |   | `DateInterval.Month`|m| Miesiąc; skrócona do całkowitej wartości |   | `DateInterval.Quarter`|q| Kwartał; skrócona do całkowitej wartości |   | `DateInterval.Second`|s| Drugie; zaokrąglona do najbliższej milisekund |   | `DateInterval.Weekday`|w| Dzień; skrócona do całkowitej wartości |   | `DateInterval.WeekOfYear`|ww| Tydzień; skrócona do całkowitej wartości |   | `DateInterval.Year`|yyyy| Rok; skrócona do całkowitej wartości |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/8ee426fa-d573-45a5-a0f5-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (string Interval, double Number, object DateValue);
    parameters:
    - id: Interval
      type: System.String
      description: "Wymagany. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Wartość wyliczenia lub <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> reprezentujący przedział czasu, które chcesz dodać."
    - id: Number
      type: System.Double
      description: "Wymagany. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Zmiennoprzecinkowe reprezentujący liczbę interwałów, które chcesz dodać. `Number`może być liczbą dodatnią (do pobrania wartości daty/godziny w przyszłości) lub ujemną (Aby uzyskać wartości daty/godziny w przeszłości). Może zawierać ułamkową część kiedy `Interval` określa godzin, minut i sekund. Dla innych wartości `Interval`, any ułamkową część `Number` jest ignorowana."
    - id: DateValue
      type: System.Object
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Wyrażenie reprezentujący datę i godzinę, do której ma zostać dodana interwał. `DateValue`sam nie ulega zmianie w program wywołujący."
    return:
      type: System.DateTime
      description: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość zawierającą wartość daty i godziny, do której dodano określony interwał."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>nie jest taki sam jak <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>nie jest prawidłowy."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obliczonej daty jest przed 00:00:00 w dniu 1 stycznia roku, 1 lub nowszej niż 23:59:59 31 grudnia 9999 r."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> wartość określającą liczbę interwałów czasu między dwoma <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  remarks: "Można użyć `DateDiff` funkcji, aby określić, ile określonych interwałów czasu między dwiema wartościami daty/godziny. Na przykład może użyć `DateDiff` do obliczenia liczbę dni między datami lub liczbę tygodni od dnia dzisiejszego koniec roku.      ## Zachowanie - **traktowania parametrów.** `DateDiff`odejmuje wartość `Date1` od wartości `Date2` do produkcji różnicy. Żadna wartość została zmieniona w program wywołujący.      - **Zwracają wartości.** Ponieważ `Date1` i `Date2` są `Date` typu danych, posiadają wartości daty i godziny z dokładnością do 100-nanosekundowych impulsów na czasomierz systemu. Jednak `DateDiff` zawsze zwraca liczbę interwałów czasu jako `Long` wartość.           Jeśli `Date1` reprezentuje nowsze datę i godzinę niż `Date2`, `DateDiff` zwraca wartość ujemną.      - **Dni.** Jeśli `Interval` ustawiono `DateInterval.DayOfYear`, jest ona traktowana taka sama jak `DateInterval.Day`, ponieważ `DayOfYear` nie jest zrozumiały jednostek interwału czasu.      - **Interwałów tygodnia.** Jeśli `Interval` ustawiono `DateInterval.WeekOfYear`, zwracana wartość reprezentuje liczbę tygodni od pierwszego dnia tygodnia zawierający `Date1` i pierwszy dzień tygodnia zawierający `Date2`. W poniższym przykładzie pokazano, jak to daje różne wyniki z `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_1.vb) ] w poprzednim przykładzie `DateDiff` zwraca wartość 0, aby `wD` ponieważ różnicę między dwoma datami jest mniejsza niż 7 dni, ale zwraca 1, aby `wY` ponieważ występuje różnica siedmiu dni od pierwszego dni tygodnia odpowiednich kalendarza.      - **Większych odstępach czasu.** Jeśli `Interval` ustawiono `DateInterval.Year`, zwracana wartość jest obliczana wyłącznie na podstawie części roku `Date1` i `Date2`. Podobnie, wartość zwracana `DateInterval.Month` jest obliczana wyłącznie na podstawie części rok i miesiąc argumentów, a dla `DateInterval.Quarter` z kwartałów zawierający dwoma datami.           Na przykład podczas porównywania następnego roku, 1 stycznia do 31 grudnia `DateDiff` zwraca wartość 1 `DateInterval.Year`, `DateInterval.Quarter`, lub `DateInterval.Month`, mimo że upłynął co najwyżej tylko jeden dzień.           Dla kultury, takie jak japoński, który ma wiele Arial `DateDiff` — metoda nie zwraca różnicę w lat. Jeśli różnica obejmuje dwa lub więcej Arial. Zamiast tego można obliczyć różnica w wartości zwracanych przez <xref:System.DateTime.Year%2A>Właściwości, jak pokazano w poniższym przykładzie: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Innych odstępach czasu.** Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime>struktury, jego metody zapewniają dodatkowe opcje w znajdowaniu odstępach czasu.</xref:System.DateTime> Na przykład można użyć `Subtract` w jednej z jego formularze przeciążonej metody: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>odejmuje <xref:System.TimeSpan>z `Date` zmienną do zwrócenia innego `Date` wartości, i <xref:System.DateTime.Subtract%2A?displayProperty=fullName>odejmuje `Date` wartość zwracana <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Pozwala czas procesu, aby dowiedzieć się, liczbę milisekund przyjmuje, jak przedstawiono na poniższym przykładzie.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_2.vb) ] `Interval` argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość ciągu | Jednostka odstęp czasu |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Dzień |   | `DateInterval.DayOfYear`|&quot; y &quot;| Dzień |   | `DateInterval.Hour`|&quot; h &quot;| Godzina |   | `DateInterval.Minute`|&quot; n &quot;| Minuty |   | `DateInterval.Month`|&quot; m &quot;| Miesiąc |   | `DateInterval.Quarter`|&quot; q &quot;| Kwartał |   | `DateInterval.Second`|&quot; s &quot;| Drugi |   | `DateInterval.Weekday`|&quot; w &quot;| Tydzień |   | `DateInterval.WeekOfYear`|&quot; TT &quot;| Tydzień |   | `DateInterval.Year`|&quot; yyyy &quot;| Rok |       `DayOfWeek` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Pierwszy dzień tygodnia, określonego w ustawieniach systemu |   | `FirstDayOfWeek.Sunday`|1| Niedzieli (ustawienie domyślne) |   | `FirstDayOfWeek.Monday`|2| Poniedziałek (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Wtorek |   | `FirstDayOfWeek.Wednesday`|4| Środa |   | `FirstDayOfWeek.Thursday`|5| Czwartek |   | `FirstDayOfWeek.Friday`|6| Piątek |   | `FirstDayOfWeek.Saturday`|7| Sobota |       `WeekOfYear` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Pierwszy tydzień roku określonego w ustawieniach systemu |   | `FirstWeekOfYear.Jan1`|1| Tygodnia, w którym występuje dzień 1 stycznia (ustawienie domyślne) |   | `FirstWeekOfYear.FirstFourDays`|2| Tydzień, który ma co najmniej czterech dni w roku new (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Pierwszy tydzień pełną nowego roku |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_3.vb)]"
  syntax:
    content: public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Wymagany. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Wartość wyliczenia lub <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> reprezentujący interwał ma być używany jako jednostki różnica między `Date1` i `Date2`."
    - id: Date1
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Pierwsza wartość daty/godziny, który ma być używany w obliczeniach."
    - id: Date2
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Druga wartość daty/godziny, który ma być używany w obliczeniach."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> wyliczenia, która określa pierwszy dzień tygodnia. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> jest używany."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> wyliczenie określająca pierwszy tydzień roku. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> jest używany."
    return:
      type: System.Int64
      description: "Zwraca <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> wartość określającą liczbę interwałów czasu między dwoma <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, lub <code>DayofWeek</code> jest poza zakresem."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>lub <code>Date2</code> jest nieprawidłowego typu."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> wartość określającą liczbę interwałów czasu między dwoma <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  remarks: "Można użyć `DateDiff` funkcji, aby określić, ile określonych interwałów czasu między dwiema wartościami daty/godziny. Na przykład może użyć `DateDiff` do obliczenia liczbę dni między datami lub liczbę tygodni od dnia dzisiejszego koniec roku.      ## Zachowanie - **traktowania parametrów.** `DateDiff`odejmuje wartość `Date1` od wartości `Date2` do produkcji różnicy. Żadna wartość została zmieniona w program wywołujący.      - **Zwracają wartości.** Ponieważ `Date1` i `Date2` są `Date` typu danych, posiadają wartości daty i godziny z dokładnością do 100-nanosekundowych impulsów na czasomierz systemu. Jednak `DateDiff` zawsze zwraca liczbę interwałów czasu jako `Long` wartość.           Jeśli `Date1` reprezentuje nowsze datę i godzinę niż `Date2`, `DateDiff` zwraca wartość ujemną.      - **Dni.** Jeśli `Interval` ustawiono `DateInterval.DayOfYear`, jest ona traktowana taka sama jak `DateInterval.Day`, ponieważ `DayOfYear` nie jest zrozumiały jednostek interwału czasu.      - **Interwałów tygodnia.** Jeśli `Interval` ustawiono `DateInterval.WeekOfYear`, zwracana wartość reprezentuje liczbę tygodni od pierwszego dnia tygodnia zawierający `Date1` i pierwszy dzień tygodnia zawierający `Date2`. W poniższym przykładzie pokazano, jak to daje różne wyniki z `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_1.vb) ] w poprzednim przykładzie `DateDiff` zwraca wartość 0, aby `wD` ponieważ różnicę między dwoma datami jest mniejsza niż 7 dni, ale zwraca 1, aby `wY` ponieważ występuje różnica siedmiu dni od pierwszego dni tygodnia odpowiednich kalendarza.      - **Większych odstępach czasu.** Jeśli `Interval` ustawiono `DateInterval.Year`, zwracana wartość jest obliczana wyłącznie na podstawie części roku `Date1` i `Date2`. Podobnie, wartość zwracana `DateInterval.Month` jest obliczana wyłącznie na podstawie części rok i miesiąc argumentów, a dla `DateInterval.Quarter` z kwartałów zawierający dwoma datami.           Na przykład podczas porównywania następnego roku, 1 stycznia do 31 grudnia `DateDiff` zwraca wartość 1 `DateInterval.Year`, `DateInterval.Quarter`, lub `DateInterval.Month`, mimo że upłynął co najwyżej tylko jeden dzień.           Dla kultury, takie jak japoński, który ma wiele Arial `DateDiff` — metoda nie zwraca różnicę w lat. Jeśli różnica obejmuje dwa lub więcej Arial. Zamiast tego można obliczyć różnica w wartości zwracanych przez <xref:System.DateTime.Year%2A>Właściwości, jak pokazano w poniższym przykładzie: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Innych odstępach czasu.** Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime>struktury, jego metody zapewniają dodatkowe opcje w znajdowaniu odstępach czasu.</xref:System.DateTime> Na przykład można użyć `Subtract` w jednej z jego formularze przeciążonej metody: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>odejmuje <xref:System.TimeSpan>z `Date` zmienną do zwrócenia innego `Date` wartości, i <xref:System.DateTime.Subtract%2A?displayProperty=fullName>odejmuje `Date` wartość zwracana <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Pozwala czas procesu, aby dowiedzieć się, liczbę milisekund przyjmuje, jak przedstawiono na poniższym przykładzie.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_2.vb) ] `Interval` argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość ciągu | Jednostka odstęp czasu |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Dzień |   | `DateInterval.DayOfYear`|&quot; y &quot;| Dzień |   | `DateInterval.Hour`|&quot; h &quot;| Godzina |   | `DateInterval.Minute`|&quot; n &quot;| Minuty |   | `DateInterval.Month`|&quot; m &quot;| Miesiąc |   | `DateInterval.Quarter`|&quot; q &quot;| Kwartał |   | `DateInterval.Second`|&quot; s &quot;| Drugi |   | `DateInterval.Weekday`|&quot; w &quot;| Tydzień |   | `DateInterval.WeekOfYear`|&quot; TT &quot;| Tydzień |   | `DateInterval.Year`|&quot; yyyy &quot;| Rok |       `DayOfWeek` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Pierwszy dzień tygodnia, określonego w ustawieniach systemu |   | `FirstDayOfWeek.Sunday`|1| Niedzieli (ustawienie domyślne) |   | `FirstDayOfWeek.Monday`|2| Poniedziałek (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Wtorek |   | `FirstDayOfWeek.Wednesday`|4| Środa |   | `FirstDayOfWeek.Thursday`|5| Czwartek |   | `FirstDayOfWeek.Friday`|6| Piątek |   | `FirstDayOfWeek.Saturday`|7| Sobota |       `WeekOfYear` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Pierwszy tydzień roku określonego w ustawieniach systemu |   | `FirstWeekOfYear.Jan1`|1| Tygodnia, w którym występuje dzień 1 stycznia (ustawienie domyślne) |   | `FirstWeekOfYear.FirstFourDays`|2| Tydzień, który ma co najmniej czterech dni w roku new (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Pierwszy tydzień pełną nowego roku |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_3.vb)]"
  syntax:
    content: public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Wymagany. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Wartość wyliczenia lub <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> reprezentujący interwał ma być używany jako jednostki różnica między `Date1` i `Date2`."
    - id: Date1
      type: System.Object
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Pierwsza wartość daty/godziny, który ma być używany w obliczeniach."
    - id: Date2
      type: System.Object
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Druga wartość daty/godziny, który ma być używany w obliczeniach."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> wyliczenia, która określa pierwszy dzień tygodnia. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> jest używany."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> wyliczenie określająca pierwszy tydzień roku. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> jest używany."
    return:
      type: System.Int64
      description: "Zwraca <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> wartość określającą liczbę interwałów czasu między dwoma <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, lub <code>DayofWeek</code> jest poza zakresem."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>lub <code>Date2</code> jest nieprawidłowego typu."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość zawierającą wskazany składnik danej <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  remarks: "Można użyć `DatePart` funkcji, aby obliczyć wartości daty/godziny oraz zwracać określonego składnika. Na przykład może użyć `DatePart` do obliczenia dzień tygodnia lub bieżącej godziny.       Jeśli wybierzesz `DateInterval.Weekday` dla `Interval` argumentu, zwracana wartość jest zgodne z wartościami `FirstDayOfWeek` wyliczenia. Jeśli wybierzesz `DateInterval.WeekOfYear`, `DatePart` używa <xref:System.Globalization.Calendar>i <xref:System.Globalization.CultureInfo>klasy <xref:System.Globalization>przestrzeni nazw w celu określenia bieżących ustawień.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       `FirstDayOfWeekValue` Argument ma wpływ na obliczenia, które używają `DateInterval.Weekday` i `DateInterval.WeekOfYear` `Interval` ustawienia. `FirstWeekOfYearValue` Argument ma wpływ na obliczenia, które określają `DateInterval.WeekOfYear` dla `Interval`.       Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime>struktury, jego metody zapewniają dodatkowe opcje podczas pobierania części daty/godziny.</xref:System.DateTime> Na przykład można uzyskać wartość Data cały `Date` zmiennej o wartości czasu przyjmowana północ, w następujący sposób: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` `Interval` argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Ciąg | Część wartości daty/godziny, aby zwrócić |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Dzień miesiąca (od 1 do 31) |   | `DateInterval.DayOfYear`|y| Dzień roku (od 1 do 366) |   | `DateInterval.Hour`|h| Godzina |   | `DateInterval.Minute`|n| Minuty |   | `DateInterval.Month`|m| Miesiąc |   | `DateInterval.Quarter`|q| Kwartał |   | `DateInterval.Second`|s| Drugi |   | `DateInterval.Weekday`|w| Dzień tygodnia (od 1 do 7) |   | `DateInterval.WeekOfYear`|ww| Tydzień roku (1-53) |   | `DateInterval.Year`|yyyy| Rok |       `FirstDayOfWeekValue` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Pierwszy dzień tygodnia, określonego w ustawieniach systemu |   | `FirstDayOfWeek.Sunday`|1| Niedzieli (ustawienie domyślne) |   | `FirstDayOfWeek.Monday`|2| Poniedziałek (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Wtorek |   | `FirstDayOfWeek.Wednesday`|4| Środa |   | `FirstDayOfWeek.Thursday`|5| Czwartek |   | `FirstDayOfWeek.Friday`|6| Piątek |   | `FirstDayOfWeek.Saturday`|7| Sobota |       `FirstWeekOfYearValue` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Pierwszy tydzień roku określonego w ustawieniach systemu |   | `FirstWeekOfYear.Jan1`|1| Tygodnia, w którym występuje dzień 1 stycznia (ustawienie domyślne) |   | `FirstWeekOfYear.FirstFourDays`|2| Tydzień, który ma co najmniej czterech dni w roku new (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Pierwszy tydzień pełną w nowego roku |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/982d49dd-7819-40e1-9b19-_1.vb)]"
  syntax:
    content: public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Wymagany. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Wartość wyliczenia lub <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> reprezentujący część wartości daty/godziny, aby wrócić."
    - id: DateValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, która ma zostać oceniona."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> wyliczenia, która określa pierwszy dzień tygodnia. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> jest używany."
    - id: FirstWeekOfYearValue
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> wyliczenie określająca pierwszy tydzień roku. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> jest używany."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość zawierającą wskazany składnik danej <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>nie jest prawidłowy."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>nie jest taki sam jak <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość zawierającą wskazany składnik danej <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  remarks: "Można użyć `DatePart` funkcji, aby obliczyć wartości daty/godziny oraz zwracać określonego składnika. Na przykład może użyć `DatePart` do obliczenia dzień tygodnia lub bieżącej godziny.       Jeśli wybierzesz `DateInterval.Weekday` dla `Interval` argumentu, zwracana wartość jest zgodne z wartościami `FirstDayOfWeek` wyliczenia. Jeśli wybierzesz `DateInterval.WeekOfYear`, `DatePart` używa <xref:System.Globalization.Calendar>i <xref:System.Globalization.CultureInfo>klasy <xref:System.Globalization>przestrzeni nazw w celu określenia bieżących ustawień.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       `FirstDayOfWeekValue` Argument ma wpływ na obliczenia, które używają `DateInterval.Weekday` i `DateInterval.WeekOfYear` `Interval` ustawienia. `FirstWeekOfYearValue` Argument ma wpływ na obliczenia, które określają `DateInterval.WeekOfYear` dla `Interval`.       Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime>struktury, jego metody zapewniają dodatkowe opcje podczas pobierania części daty/godziny.</xref:System.DateTime> Na przykład można uzyskać wartość Data cały `Date` zmiennej o wartości czasu przyjmowana północ, w następujący sposób: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` `Interval` argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Ciąg | Część wartości daty/godziny, aby zwrócić |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Dzień miesiąca (od 1 do 31) |   | `DateInterval.DayOfYear`|y| Dzień roku (od 1 do 366) |   | `DateInterval.Hour`|h| Godzina |   | `DateInterval.Minute`|n| Minuty |   | `DateInterval.Month`|m| Miesiąc |   | `DateInterval.Quarter`|q| Kwartał |   | `DateInterval.Second`|s| Drugi |   | `DateInterval.Weekday`|w| Dzień tygodnia (od 1 do 7) |   | `DateInterval.WeekOfYear`|ww| Tydzień roku (1-53) |   | `DateInterval.Year`|yyyy| Rok |       `FirstDayOfWeekValue` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Pierwszy dzień tygodnia, określonego w ustawieniach systemu |   | `FirstDayOfWeek.Sunday`|1| Niedzieli (ustawienie domyślne) |   | `FirstDayOfWeek.Monday`|2| Poniedziałek (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Wtorek |   | `FirstDayOfWeek.Wednesday`|4| Środa |   | `FirstDayOfWeek.Thursday`|5| Czwartek |   | `FirstDayOfWeek.Friday`|6| Piątek |   | `FirstDayOfWeek.Saturday`|7| Sobota |       `FirstWeekOfYearValue` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Pierwszy tydzień roku określonego w ustawieniach systemu |   | `FirstWeekOfYear.Jan1`|1| Tygodnia, w którym występuje dzień 1 stycznia (ustawienie domyślne) |   | `FirstWeekOfYear.FirstFourDays`|2| Tydzień, który ma co najmniej czterech dni w roku new (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Pierwszy tydzień pełną w nowego roku |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/682455c0-1619-4c4c-8238-_1.vb)]"
  syntax:
    content: public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Wymagany. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Wartość wyliczenia lub <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> reprezentujący część wartości daty/godziny, aby wrócić."
    - id: DateValue
      type: System.Object
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, która ma zostać oceniona."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> wyliczenia, która określa pierwszy dzień tygodnia. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> jest używany."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> wyliczenie określająca pierwszy tydzień roku. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> jest używany."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość zawierającą wskazany składnik danej <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartości."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>jest nieprawidłowy."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>nie jest taki sam jak <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  id: DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą określony rok, miesiąc i dzień, gdzie czasu jest przyjmowana północ (00:&00;:00)."
  remarks: "W obszarze Windows 98 lub Windows 2000 rokiem dwucyfrowym dla `Year` argument interpretowania zgodnie z ustawieniami komputera użytkownika. Ustawienia domyślne są wartości z zakresu od 0 do 29 są interpretowane jako lata 2000 – 2029, czy wartości od 30 do 99 są interpretowane jako lata 1930 – 1999. Dla wszystkich innych `Year` argumenty, użyj czterocyfrowy rok, na przykład 1924.       Wcześniejsze wersje systemu Windows interpretacji lat zgodnie z ustawieniami domyślnymi opisanych powyżej. Aby upewnić się, że funkcja zwraca poprawnej wartości, należy użyć czterech cyfr `Year`.       W poniższym przykładzie pokazano ujemna, zero i wartości argumentów dodatnią. W tym miejscu `DateSerial` funkcja zwraca `Date` reprezentującą dzień przed pierwszego dnia marca roku 10 lat przed rokiem bieżącym; innymi słowy, ostatni dzień lutego 10 lat temu.      ```vb#   Dim EndFeb As Date = DateSerial(-10, 3, 0)   ```Jeśli dowolny `Month` lub `Day` przekracza jej normalny zakres, zostanie zastosowane na następny większy jednostki zależnie od potrzeb. Na przykład jeśli określisz 32 dni, wartość jest szacowana jako jeden miesiąc i od jednej do czterech dni, w zależności od wartości `Month`. Jeśli `Year` jest większa niż 9999, lub jeśli któryś argument jest spoza zakresu -2,147,483,648 do 2 147 483 647, <xref:System.ArgumentException>występuje błąd.</xref:System.ArgumentException> Jeżeli data określona przez trzech argumentów jest wcześniejsza od 00:00:00 w dniu 1 stycznia roku, 1 lub nowszej niż 23:59:59 31 grudnia 9999 <xref:System.ArgumentOutOfRangeException>występuje błąd.</xref:System.ArgumentOutOfRangeException>       `Date` Typ danych obejmuje składniki czasu. `DateSerial`Ustawia wszystkie te 0, dlatego zwracana wartość reprezentuje na początku dnia obliczeniowej.       Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime>struktury, jego metody zapewniają dodatkowe opcje w zebrania `Date` wartość.</xref:System.DateTime> Na przykład można użyć jednej z przeciążone <xref:System.DateTime.%23ctor%2A>konstruktorów do wypełnienia `Date` zmiennej przy użyciu kombinacji odpowiednie składniki.</xref:System.DateTime.%23ctor%2A> W poniższym przykładzie `NewDateTime` do 6 maja 1978, dziesiątego jednej sekundy przed 8:30 w nocy:```vb#   Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "This example uses the `DateSerial` function to return the date for the specified year, month, and day.  \n  \n [!code-vb[VbVbalrFunctions#28](~/add/codesnippet/visualbasic/2c6c2f83-8b90-492d-bf33-_1.vb)]"
  syntax:
    content: public static DateTime DateSerial (int Year, int Month, int Day);
    parameters:
    - id: Year
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>Wyrażenie z zakresu od 1 do 9999. Jednak również są akceptowane wartości poniżej tego zakresu. Jeśli `Year` to od 0 do 99, jest interpretowany jako między 1930 i 2029, jak wyjaśniono w poniższej sekcji &quot;Uwagi&quot;. Jeśli `Year` jest mniejszy niż 1 jest odejmowany od bieżącego roku."
    - id: Month
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>wyrażenie od 1 do 12. Jednak również są akceptowane wartości poza tym zakresem. Wartość `Month` jest przesunięty 1 i stosowane do stycznia obliczeniowej roku. Innymi słowy (`Month` - 1) jest dodawany do stycznia. Rok jest obliczany, jeśli to konieczne. W tym celu zilustrowania następujące wyniki: Jeśli `Month` 1, wynikiem jest stycznia obliczeniowej roku.       Jeśli `Month` wynosi 0, wynik grudnia zeszłego roku.       Jeśli `Month` wynosi -1, wynikiem jest listopada zeszłego roku.       Jeśli `Month` 13, wynik jest stycznia następnego roku."
    - id: Day
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>wyrażenie od 1 do 31. Jednak również są akceptowane wartości poza tym zakresem. Wartość `Day` jest przesunięty 1 i stosowane do pierwszego dnia miesiąca obliczeniowej. Innymi słowy (`Day` - 1) jest dodawany do pierwszego dnia miesiąca. Miesiąc i rok są obliczane ponownie, jeśli to konieczne. W tym celu zilustrowania następujące wyniki: Jeśli `Day` 1, wynikiem jest pierwszy dzień miesiąca obliczeniowej.       Jeśli `Day` wynosi 0, wynik ostatni dzień minionego miesiąca.       Jeśli `Day` wynosi -1, wynikiem jest przedostatni dzień minionego miesiąca.       Jeśli `Day` jest koniec bieżącego miesiąca, wynik jest odpowiedni dzień następnego miesiąca. Na przykład jeśli `Month` to 4 i `Day` 31, wynik może 1."
    return:
      type: System.DateTime
      description: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą określony rok, miesiąc i dzień, gdzie czasu jest przyjmowana północ (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateSerial*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  id: DateString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną datę ustawioną w systemie."
  remarks: "`DateString`Zwraca datę systemową w formacie MM-dd rrrr, który używa nazwy skróconej miesiąca. M-d rrrr, są akceptowane formaty daty M-d-y, M/d/rrrr i m/y. Dotyczy to wszystkich ustawień regionalnych systemu, z wyjątkiem tych, które korzystają z zestawem znaków dwubajtowych (DBCS). Jeśli ustawienia regionalne systemu korzysta z zestawem znaków dwubajtowych `DateString` zwraca datę systemową w formacie RRRR MM-dd. Ustawienia regionalne systemu jest ustawiony za pomocą **zegar, język i Region** elementu **Panelu sterowania**.       **Uwaga** `DateString` właściwość zwraca datę systemową tylko w formacie RRRR MM-dd `zh` (chiński uproszczony), `ko` (koreański) i `ja` ustawień regionalnych systemu (japoński), jeśli używasz programu Visual Basic w ramach programu Silverlight.       Można pobrać lub ustawić bieżący czas systemowy jako `String`, użyj <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Aby uzyskać bieżący system daty i godziny w formacie ustawień regionalnych, lub w niestandardowym formacie, podaj <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>właściwości <xref:Microsoft.VisualBasic.Strings.Format%2A>Funkcja Określanie formatu daty/godziny wstępnie zdefiniowanych lub zdefiniowanych przez użytkownika.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> W poniższym przykładzie pokazano to.      ```   MsgBox(&quot;The formatted date is &quot; & Format(Now, &quot;dddd, d MMM yyyy&quot;))   ```Aby dostęp do bieżącej systemowej daty jako `Date`, użyj <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > Ustawienie systemu daty lub godziny wymaga uprawnień kodu niezarządzanego, co może wpływać na jej wykonanie w sytuacjach częściowego zaufania. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission>i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example uses the `DateString` property to display the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#1](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#1)]"
  syntax:
    content: public static string DateString { get; set; }
    return:
      type: System.String
      description: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną datę ustawioną w systemie."
  overload: Microsoft.VisualBasic.DateAndTime.DateString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Nieprawidłowy format używany do ustawiania wartości <xref uid=&quot;langword_csharp_DateString&quot; name=&quot;DateString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  id: DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość zawierającą informacje o dacie reprezentowane przez ciąg, z czasu jest przyjmowana północ (00:&00;:00)."
  remarks: "Jeśli `StringDate` obejmuje tylko liczb od 1 do 12 oddzielone separatorów prawidłową datę `DateValue` przyjmuje kolejność dzień, miesiąc i rok zgodnie z określonym w systemie format daty krótkiej. `DateValue`zostaną użyte bieżące ustawienia kalendarza <xref:System.Globalization.CultureInfo.CurrentCulture%2A>Właściwość <xref:System.Globalization.CultureInfo>klasy w <xref:System.Globalization>przestrzeni nazw.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Wartość domyślna <xref:System.Globalization.CultureInfo.CurrentCulture%2A>wartości są określane przez **Panelu sterowania** ustawień.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> Format daty krótkiej można zastąpić, ustawiając <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>Właściwość <xref:System.Globalization.DateTimeFormatInfo>klasy w <xref:System.Globalization>przestrzeni nazw.</xref:System.Globalization> </xref:System.Globalization.DateTimeFormatInfo> </xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>       `DateValue`rozpoznaje nazwy miesięcy w formie długich, skróconej i liczbowych. Na przykład w oraz rozpoznawaniu 12/30/1991 i 12/30/91 `DateValue` rozpoznaje także 30 grudnia 1991 i 30 gru 1991.       Jeśli część roku `StringDate` zostanie pominięty, `DateValue` używa bieżącego roku z komputera daty systemowej.       Jeśli `StringDate` argument zawiera informacje o czasie `DateValue` nie ma go w zwracanej wartości. Jednak jeśli `StringDate` zawiera nieprawidłową wartość czas informacje, takie jak &quot;89:&98;&quot; <xref:System.InvalidCastException>występuje błąd.</xref:System.InvalidCastException>"
  example:
  - "This example uses the `DateValue` function to convert a string to a date. You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.  \n  \n [!code-vb[VbVbalrFunctions#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._84_1.vb)]"
  syntax:
    content: public static DateTime DateValue (string StringDate);
    parameters:
    - id: StringDate
      type: System.String
      description: "Wymagany. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>wyrażenie reprezentujący wartość daty/godziny od 00:00:00 w dniu 1 stycznia roku 1 do 23:59:59 31 grudnia 9999 r."
    return:
      type: System.DateTime
      description: "<xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>Wartość zawierająca informacje o dacie reprezentowane przez ciąg, z czasu jest przyjmowana północ (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringDate</code>zawiera nieprawidłowe informacje o godzinie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  id: Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 1 do 31 reprezentująca dzień miesiąca."
  remarks: "Jeśli używasz `Day` funkcji, może być konieczne kwalifikuj z `Microsoft.VisualBasic` przestrzeni nazw, ponieważ <xref:System.Windows.Forms>definiuje przestrzeń nazw <xref:System.Windows.Forms.Day>jako wyliczenie.</xref:System.Windows.Forms.Day> </xref:System.Windows.Forms> W poniższym przykładzie przedstawiono sposób kwalifikujących `Day` rozpoznaje tę niejednoznaczność: ```vb#   Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)   ``` dzień miesiąca można również uzyskać przez wywołanie metody `DatePart` i określając `DateInterval.Day` dla *interwał* argumentu."
  example:
  - "The following example uses the `Day` function to obtain the day of the month from a specified date. In the development environment, the date literal is displayed in standard short format (such as \"02/12/1969\") using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#30](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._126_1.vb)]  \n  \n `Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=fullName> enumeration."
  syntax:
    content: public static int Day (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, z którego mają zostać wyodrębnione dnia."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 1 do 31 reprezentująca dzień miesiąca."
  overload: Microsoft.VisualBasic.DateAndTime.Day*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  id: Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 0 do 23 reprezentująca godzinę dnia."
  remarks: "Możesz również uzyskać godzinę dnia, wywołując `DatePart` i określając `DateInterval.Hour` dla `Interval` argumentu."
  example:
  - "This example uses the `Hour` function to obtain the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#32](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._192_1.vb)]"
  syntax:
    content: public static int Hour (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, z którego mają zostać wyodrębnione godzinę."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 0 do 23 reprezentująca godzinę dnia."
  overload: Microsoft.VisualBasic.DateAndTime.Hour*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  id: Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 0 do 59 reprezentującą minutę godziny."
  remarks: "Możesz również uzyskać minuty, godziny, wywołując `DatePart` i określając `DateInterval.Minute` dla `Interval` argumentu."
  example:
  - "This example uses the `Minute` function to obtain the minute of the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#42](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._195_1.vb)]"
  syntax:
    content: public static int Minute (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, z którego mają zostać wyodrębnione minutę."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 0 do 59 reprezentującą minutę godziny."
  overload: Microsoft.VisualBasic.DateAndTime.Minute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  id: Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 1 do 12 reprezentująca miesiąc w roku."
  remarks: "Możesz również uzyskać miesiąc w roku, wywołując `DatePart` i określając `DateInterval.Month` dla `Interval` argumentu."
  example:
  - "This example uses the `Month` function to obtain the month from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#43](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._213_1.vb)]"
  syntax:
    content: public static int Month (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, z którego mają zostać wyodrębnione miesiąca."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 1 do 12 reprezentująca miesiąc w roku."
  overload: Microsoft.VisualBasic.DateAndTime.Month*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  id: MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> zawierający nazwę podanego miesiąca."
  remarks: "Długość ciągu zwróconego przez `MonthName` zależy nie tylko argumenty wejściowe, ale także na **Opcje regionalne** ustawienia określone w oknach **Panelu sterowania**.      > [!NOTE]  >   `MonthName` zostaną użyte bieżące ustawienia kalendarza <xref:System.Globalization.CultureInfo.CurrentCulture%2A>Właściwość <xref:System.Globalization.CultureInfo>klasy w <xref:System.Globalization>przestrzeni nazw.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Wartość domyślna <xref:System.Globalization.CultureInfo.CurrentCulture%2A>wartości są określane przez **Panelu sterowania** ustawień.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>"
  example:
  - "This example uses the `MonthName` function to determine the name of the month, by the integer given. The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.  \n  \n [!code-vb[VbVbalrFunctions#44](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._194_1.vb)]"
  syntax:
    content: public static string MonthName (int Month, bool Abbreviate = false);
    parameters:
    - id: Month
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Liczbowe oznaczenie miesiąca, z zakresu od 1 do 13; wartość 1 oznacza styczeń, a 12 wskazuje grudnia. Możesz użyć wartości 13 z kalendarzem 13 miesięcy. Jeśli system używa 12-miesięczny kalendarz i `Month` jest 13, <xref uid=&quot;langword_csharp_MonthName&quot; name=&quot;MonthName&quot; href=&quot;&quot;> </xref> zwraca pusty ciąg."
    - id: Abbreviate
      type: System.Boolean
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>Wartość wskazująca, czy nazwa miesiąca ma być skrócona. W przypadku pominięcia będzie używana wartość domyślna to <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, co oznacza, że ta nazwa nie jest skrócona."
    return:
      type: System.String
      description: "Zwraca <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> zawierający nazwę podanego miesiąca."
  overload: Microsoft.VisualBasic.DateAndTime.MonthName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Month</code>jest mniejsza niż 1 lub większą niż 13."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Now
  id: Now
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> zawierający bieżącą datę i godzinę ustawioną w systemie."
  remarks: "Aby ustawić daty systemowej, użyj <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A> Aby ustawić czas systemowy, użyj <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>"
  example:
  - "The following example uses the `Now` property to return the current system date and time.  \n  \n [!code-vb[VbVbalrDateProperties#4](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#4)]"
  syntax:
    content: public static DateTime Now { get; }
    return:
      type: System.DateTime
      description: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> zawierający bieżącą datę i godzinę ustawioną w systemie."
  overload: Microsoft.VisualBasic.DateAndTime.Now*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  id: Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 0 do 59 reprezentującą sekundę minuty."
  remarks: "Możesz również uzyskać sekundy, minuty, wywołując `DatePart` i określając `DateInterval.Second` dla `Interval` argumentu."
  example:
  - "The following example uses the `Second` function to obtain the second of the minute from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#46](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public static int Second (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, z którego mają zostać wyodrębnione drugiego."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 0 do 59 reprezentującą sekundę minuty."
  overload: Microsoft.VisualBasic.DateAndTime.Second*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  id: TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną porę dnia ustawioną w systemie."
  remarks: "`Date` Typ danych obejmuje składniki daty. Gdy zwracany jest czas systemowy `TimeOfDay` Ustawia wszystkie 1, dlatego zwracana wartość reprezentuje pierwszego dnia roku 1. Podczas ustawiania czasu systemowego `TimeOfDay` ignoruje składniki daty.       Bieżący czas systemowy jako dostępu do `String`, użyj <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Aby pobrać lub ustawić bieżącej systemowej daty, należy użyć <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > Ustawienie systemu daty lub godziny wymaga uprawnień kodu niezarządzanego, co może wpływać na jej wykonanie w sytuacjach częściowego zaufania. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission>i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeOfDay` property to return the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#3](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#3)]"
  syntax:
    content: public static DateTime TimeOfDay { get; set; }
    return:
      type: System.DateTime
      description: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną porę dnia ustawioną w systemie."
  overload: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  id: Timer
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> wartość reprezentującą liczbę sekund, jaka upłynęła od północy."
  remarks: "`Timer` Właściwość zwraca zarówno w sekundach i milisekundach od ostatniego północy. Sekundy znajdują się w części całkowitej wartości zwracanej, a w część ułamkowa milisekund."
  example:
  - "This example uses the `Timer` property to pause the application. It can perform other processing during the pause.  \n  \n [!code-vb[VbVbalrTimerProperty#1](~/add/codesnippet/visualbasic/VbVbalrTimerProperty/Form1.vb#1)]  \n  \n Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=fullName> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=fullName>, <xref:System.Timers?displayProperty=fullName>, and <xref:System.Windows.Forms?displayProperty=fullName> namespaces."
  syntax:
    content: public static double Timer { get; }
    return:
      type: System.Double
      description: "Zwraca <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> wartość reprezentującą liczbę sekund, jaka upłynęła od północy."
  overload: Microsoft.VisualBasic.DateAndTime.Timer*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  id: TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą określoną godzinę, minutę i sekundę, gdzie informacje o dacie przyjmowany 1 stycznia 1 roku."
  remarks: "W poniższym przykładzie pokazano ujemna, zero i wartości argumentów dodatnią. `TimeSerial` Funkcja zwraca czas, reprezentujący 15 minut przed trzy godziny przed południe lub 8:45:00.      ```vb#   Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)   ```Jeśli dowolny `Minute` lub `Second` przekracza jej normalny zakres, zostanie zastosowane na następny większy jednostki zależnie od potrzeb. Na przykład jeśli określisz 75 minut jest oceniane co godzinę i 15 minut.       `TimeSerial`zmniejsza modulo 86,400, łączną liczbę sekund, czyli liczbę sekund w ciągu jednego dnia. W związku z tym czas zwracane jest zawsze pomiędzy 00:00:00 i 23:59:59.       `Date` Typ danych obejmuje składniki daty. `TimeSerial`Ustawia wszystkie te 1, dlatego zwracana wartość reprezentuje pierwszego dnia roku 1. Jednak jeśli wartości argumentów spowoduje obliczony czas przekraczać 24 godziny, dnia jest zwiększany niezbędne. W poniższym przykładzie wartości `Hour` i `Minute` spowodować łączny czas dłuższy niż 24 godzin.      ```vb#   MsgBox(TimeSerial(23, 75, 0))    &quot; The preceding statement displays &quot;1/2/0001 12:15:00 AM&quot;.   ```Jeśli wartości argumentów oznacza ujemna czas obliczeniowej, informacje o dacie ma ustawioną wartość 1/1/0001 i informacje o godzinie dostosowuje się pomiędzy 00:00:00 i 23:59:59. Jednak jeśli obliczony czas jest mniejsza niż ujemna 24 godziny, <xref:System.ArgumentOutOfRangeException>występuje błąd.</xref:System.ArgumentOutOfRangeException>       Ponieważ każdy `Date` wartość jest obsługiwana przez <xref:System.DateTime?displayProperty=fullName>struktury, jego metody zapewniają dodatkowe opcje w zebrania `Date` wartość.</xref:System.DateTime?displayProperty=fullName> Na przykład można użyć jednej z przeciążone <xref:System.DateTime.%23ctor%2A>konstruktorów do wypełnienia `Date` zmiennej przy użyciu kombinacji odpowiednie składniki.</xref:System.DateTime.%23ctor%2A> W poniższym przykładzie `newDateTime` do 6 maja 1978, dziesiątego jednej sekundy przed 8:30 w nocy:```vb#   Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.  \n  \n [!code-vb[VbVbalrFunctions#50](~/add/codesnippet/visualbasic/4788d161-48a1-4476-aa26-_1.vb)]"
  syntax:
    content: public static DateTime TimeSerial (int Hour, int Minute, int Second);
    parameters:
    - id: Hour
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>Wyrażenie z zakresu od 0 do 23. Jednak również są akceptowane wartości poza tym zakresem."
    - id: Minute
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>Wyrażenie z zakresu od 0 do 59. Jednak również są akceptowane wartości poza tym zakresem. Wartość `Minute` jest dodawany do obliczeniowej godzinę, więc minut przed tym godziny określa wartość ujemną."
    - id: Second
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>Wyrażenie z zakresu od 0 do 59. Jednak również są akceptowane wartości poza tym zakresem. Wartość `Second` zostanie dodany na minutę obliczeniowej, więc wartości ujemnej określa w sekundach przed tym minutę."
    return:
      type: System.DateTime
      description: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą określoną godzinę, minutę i sekundę, gdzie informacje o dacie przyjmowany 1 stycznia 1 roku."
  overload: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Argument jest spoza zakresu -2,147,483,648 do 2 147 483 647"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obliczony czas jest krótszy niż 24 godziny ujemna."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  id: TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną porę dnia ustawioną w systemie."
  remarks: "`TimeString`zawsze zwraca czas systemowy jako &quot;Ss&quot;, która jest w formacie 24-godzinnym. Ten format jest kultury niezmiennej, co oznacza nie ulega zmianie, nawet w przypadku zmiany **Opcje regionalne** w **Panelu sterowania**.       Można pobrać lub ustawić bieżącej systemowej daty jako `String`, użyj <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Aby uzyskać bieżący system daty i godziny w formacie ustawień regionalnych, lub w niestandardowym formacie, podaj <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>właściwości <xref:Microsoft.VisualBasic.Strings.Format%2A>Funkcja Określanie formatu daty/godziny wstępnie zdefiniowanych lub zdefiniowanych przez użytkownika.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> W poniższym przykładzie pokazano to.      ```   MsgBox(&quot;The formatted time is &quot; & Format(Now, &quot;hh.mm.ss.fff tt&quot;))   ```Bieżący czas systemowy jako dostępu do `Date`, użyj <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > Ustawienie systemu daty lub godziny wymaga uprawnień kodu niezarządzanego, co może wpływać na jej wykonanie w sytuacji, w częściowej relacji zaufania. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission>i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeString` property to display the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#2](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#2)]"
  syntax:
    content: public static string TimeString { get; set; }
    return:
      type: System.String
      description: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną porę dnia ustawioną w systemie."
  overload: Microsoft.VisualBasic.DateAndTime.TimeString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Nieprawidłowy format używany do ustawiania wartości <xref uid=&quot;langword_csharp_TimeString&quot; name=&quot;TimeString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  id: TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość zawierającą informacje o godzinie reprezentowane przez ciąg, gdzie informacje o dacie przyjmowany 1 stycznia 1 roku."
  remarks: "Możesz wprowadzić prawidłowe godziny przy użyciu zegara 12-godzinnym lub 24-godzinnym. Na przykład `&quot;2:24 P.M.&quot;` i `&quot;14:24&quot;` są prawidłowe `StringTime` argumentów.       Jeśli `StringTime` argument zawiera informacje o dacie, `TimeValue` nie ma go w zwracanej wartości. Jednak jeśli `StringTime` zawiera nieprawidłowe informacje o dacie, na przykład &quot;stycznia 32&quot; <xref:System.InvalidCastException>występuje błąd.</xref:System.InvalidCastException>"
  example:
  - "The following example uses the `TimeValue` function to convert a string to a time. You can also use date literals to directly assign a time to a `Date` variable.  \n  \n [!code-vb[VbVbalrFunctions#51](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._232_1.vb)]"
  syntax:
    content: public static DateTime TimeValue (string StringTime);
    parameters:
    - id: StringTime
      type: System.String
      description: "Wymagany. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>wyrażenie reprezentujący wartość daty/godziny od 00:00:00 w dniu 1 stycznia roku 1 do 23:59:59 31 grudnia 9999 r."
    return:
      type: System.DateTime
      description: "Zwraca <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość zawierającą informacje o godzinie reprezentowane przez ciąg, gdzie informacje o dacie przyjmowany 1 stycznia 1 roku."
  overload: Microsoft.VisualBasic.DateAndTime.TimeValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringTime</code>zawiera nieprawidłowe informacje o dacie."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Today
  id: Today
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną datę ustawioną w systemie."
  remarks: "`Date` Typ danych obejmuje składniki czasu. Gdy zwracany jest daty systemowej `Today` Ustawia wszystkie te 0, dlatego zwracana wartość oznacza północ (00: 00:00). Podczas ustawiania datę systemową `Today` ignoruje składniki czasu.       Aby dostęp do bieżącej systemowej daty jako `String`, użyj <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Aby pobrać lub ustawić bieżący czas systemowy, należy użyć <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>Właściwości.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > Ustawienie systemu daty lub godziny wymaga uprawnień kodu niezarządzanego, co może wpływać na jej wykonanie w sytuacjach częściowego zaufania. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.SecurityPermission>i [uprawnienia dostępu do kodu](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#5](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#5)]"
  syntax:
    content: public static DateTime Today { get; set; }
    return:
      type: System.DateTime
      description: "Zwraca lub konfiguruje <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> wartość reprezentującą aktualną datę ustawioną w systemie."
  overload: Microsoft.VisualBasic.DateAndTime.Today*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  id: Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość zawierającą liczbę reprezentującą dzień tygodnia."
  remarks: "Wartość zwrócona przez `Weekday` funkcja odpowiada wartości `FirstDayOfWeek` wyliczenie; to, że wartość 1 oznacza niedzielę i 7 wskazuje sobotę.      > [!NOTE]  >   `Weekday` zostaną użyte bieżące ustawienia kalendarza <xref:System.Globalization.CultureInfo.CurrentCulture%2A>Właściwość <xref:System.Globalization.CultureInfo>klasy w <xref:System.Globalization>przestrzeni nazw.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Wartość domyślna <xref:System.Globalization.CultureInfo.CurrentCulture%2A>wartości są określane przez **Panelu sterowania** ustawień.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       `DayOfWeek` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Pierwszy dzień tygodnia, określonego w ustawieniach systemu |   | `FirstDayOfWeek.Sunday`|1| Niedzieli (ustawienie domyślne) |   | `FirstDayOfWeek.Monday`|2| Poniedziałek (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Wtorek |   | `FirstDayOfWeek.Wednesday`|4| Środa |   | `FirstDayOfWeek.Thursday`|5| Czwartek |   | `FirstDayOfWeek.Friday`|6| Piątek |   | `FirstDayOfWeek.Saturday`|7| Sobota |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date.  \n  \n [!code-vb[VbVbalrFunctions#57](~/add/codesnippet/visualbasic/369e7ed8-1790-4eb8-9e17-_1.vb)]"
  syntax:
    content: public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, dla której chcesz określić dzień tygodnia."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> wyliczenia, która określa pierwszy dzień tygodnia. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> jest używany."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość zawierającą liczbę reprezentującą dzień tygodnia."
  overload: Microsoft.VisualBasic.DateAndTime.Weekday*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>DayOfWeek</code>jest mniejsza niż 0 lub więcej niż 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  id: WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> zawierający nazwę podanego dnia tygodnia."
  remarks: "Długość ciągu zwróconego przez `WeekdayName` zależy nie tylko argumenty wejściowe, ale także na **Opcje regionalne** ustawienia określone w oknach **Panelu sterowania**.      > [!NOTE]  >   `WeekdayName` zostaną użyte bieżące ustawienia kalendarza <xref:System.Globalization.CultureInfo.CurrentCulture%2A>Właściwość <xref:System.Globalization.CultureInfo>klasy w <xref:System.Globalization>przestrzeni nazw.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Wartość domyślna <xref:System.Globalization.CultureInfo.CurrentCulture%2A>wartości są określane przez **Panelu sterowania** ustawień.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       `FirstDayOfWeekValue` Argument może zawierać jeden z następujących ustawień.      | Wartość wyliczenia | Wartość | Opis elementu |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Pierwszy dzień tygodnia określony w systemie ustawienia (ustawienie domyślne) |   | `FirstDayOfWeek.Sunday`|1| Niedziela |   | `FirstDayOfWeek.Monday`|2| Poniedziałek (jest zgodny z normą ISO 8601 standardowe, sekcji 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Wtorek |   | `FirstDayOfWeek.Wednesday`|4| Środa |   | `FirstDayOfWeek.Thursday`|5| Czwartek |   | `FirstDayOfWeek.Friday`|6| Piątek |   | `FirstDayOfWeek.Saturday`|7| Sobota |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.  \n  \n [!code-vb[VbVbalrFunctions#58](~/add/codesnippet/visualbasic/3ef2fbeb-749b-412a-a8c7-_1.vb)]"
  syntax:
    content: public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);
    parameters:
    - id: Weekday
      type: System.Int32
      description: "Wymagany. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Liczbowe oznaczenie dzień tygodnia, od 1 do 7; wartość 1 oznacza pierwszy dzień tygodnia i 7 wskazuje ostatni dzień tygodnia. Tożsamości dni imię i nazwisko są zależne od ustawienia `FirstDayOfWeekValue`."
    - id: Abbreviate
      type: System.Boolean
      description: "Opcjonalny. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>Wartość wskazująca, czy ma być skrócona nazwa dnia tygodnia. W przypadku pominięcia będzie używana wartość domyślna to <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, co oznacza, że nazwa dnia tygodnia nie jest skrócona."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Opcjonalny. Wartość wybranego spośród <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> wyliczenia, która określa pierwszy dzień tygodnia. Jeśli nie zostanie określony, <xref uid=&quot;langword_csharp_FirstDayOfWeek.System&quot; name=&quot;FirstDayOfWeek.System&quot; href=&quot;&quot;> </xref> jest używany."
    return:
      type: System.String
      description: "Zwraca <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> zawierający nazwę podanego dnia tygodnia."
  overload: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Weekday</code>jest mniejsza niż 1 lub większą niż 7, lub <code>FirstDayOfWeekValue</code> jest mniejsza niż 0 lub większą niż 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  id: Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 1 do 9999 reprezentującą rok."
  remarks: "Możesz również uzyskać roku, wywołując `DatePart` i określając `DateInterval.Year` dla `Interval` argumentu."
  example:
  - "The following example uses the `Year` function to obtain the year from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#59](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._223_1.vb)]"
  syntax:
    content: public static int Year (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Wymagany. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>wartość, z którego mają zostać wyodrębnione roku."
    return:
      type: System.Int32
      description: "Zwraca <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> wartość z zakresu od 1 do 9999 reprezentującą rok."
  overload: Microsoft.VisualBasic.DateAndTime.Year*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateInterval
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateInterval
  nameWithType: DateInterval
  fullName: Microsoft.VisualBasic.DateInterval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FirstDayOfWeek
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstDayOfWeek
  nameWithType: FirstDayOfWeek
  fullName: Microsoft.VisualBasic.FirstDayOfWeek
- uid: Microsoft.VisualBasic.FirstWeekOfYear
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstWeekOfYear
  nameWithType: FirstWeekOfYear
  fullName: Microsoft.VisualBasic.FirstWeekOfYear
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.DateAndTime.Now
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Today
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd
  nameWithType: DateAndTime.DateAdd
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff
  nameWithType: DateAndTime.DateDiff
- uid: Microsoft.VisualBasic.DateAndTime.DatePart*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart
  nameWithType: DateAndTime.DatePart
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial
  nameWithType: DateAndTime.DateSerial
- uid: Microsoft.VisualBasic.DateAndTime.DateString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue
  nameWithType: DateAndTime.DateValue
- uid: Microsoft.VisualBasic.DateAndTime.Day*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day
  nameWithType: DateAndTime.Day
- uid: Microsoft.VisualBasic.DateAndTime.Hour*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour
  nameWithType: DateAndTime.Hour
- uid: Microsoft.VisualBasic.DateAndTime.Minute*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute
  nameWithType: DateAndTime.Minute
- uid: Microsoft.VisualBasic.DateAndTime.Month*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month
  nameWithType: DateAndTime.Month
- uid: Microsoft.VisualBasic.DateAndTime.MonthName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName
  nameWithType: DateAndTime.MonthName
- uid: Microsoft.VisualBasic.DateAndTime.Now*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second
  nameWithType: DateAndTime.Second
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial
  nameWithType: DateAndTime.TimeSerial
- uid: Microsoft.VisualBasic.DateAndTime.TimeString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue
  nameWithType: DateAndTime.TimeValue
- uid: Microsoft.VisualBasic.DateAndTime.Today*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday
  nameWithType: DateAndTime.Weekday
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName
  nameWithType: DateAndTime.WeekdayName
- uid: Microsoft.VisualBasic.DateAndTime.Year*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year
  nameWithType: DateAndTime.Year
