### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService
  id: MemberRelationshipService
  children:
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  langs:
  - csharp
  name: MemberRelationshipService
  nameWithType: MemberRelationshipService
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService
  type: Class
  summary: "Udostępnia klasę podstawową dla dotyczących jednego członka."
  remarks: "Projektanci serializować się do kodu przez aparat przeszuka wartości właściwości na żywo obiektów, który generuje te wartości jako kodu. Tak na przykład tekst przycisku jest generowany w następującym formacie.      ```c#   this.okButton.Text = &quot;OK&quot;;   ```Jednym z ograniczeń ten schemat jest jest trudne do pobierania właściwości z innej lokalizacji. Na przykład jest bardzo trudne wyemitować kodu w następującym formacie, ponieważ jedyną operacją generatora kodu może polegać na jest wartością we właściwości.      ```c#   this.titleLabel.Text = this.Text;   ```"
  example:
  - "The MemberRelationshipService simplifies retrieval of a property value from another location. A designer can access this service to dictate that one member is assigned the value of another. The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value. Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.  \n  \n```c#  \nobject titleLabel, form;  \nPropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)[\"Text\"];  \nPropertyDescriptor formText = TypeDescriptor.GetProperties(form)[\"Text\"];  \nMemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  \nms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  \n```"
  syntax:
    content: public abstract class MemberRelationshipService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: MemberRelationshipService()
  nameWithType: MemberRelationshipService.MemberRelationshipService()
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.MemberRelationshipService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationshipService&quot;> </xref> klasy."
  syntax:
    content: protected MemberRelationshipService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  id: GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: GetRelationship(MemberRelationship)
  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Pobiera relacji do relacji źródłowej."
  remarks: "Domyślna implementacja przechowuje relacje ze słownika przy użyciu słabe odwołania, więc tabeli relacji nie podtrzymywania obiektów."
  syntax:
    content: protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Relacji źródłowej."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Relacja do <code> source </code>, lub <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;> </xref> Jeśli żadna relacja nie istnieje."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  id: Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: Item(MemberRelationship)
  nameWithType: MemberRelationshipService.Item(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(MemberRelationship)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Ustanawia relację między obiektem źródłowym i docelowym."
  remarks: "Jeśli <xref:System.ComponentModel.Design.Serialization.MemberRelationship>jest przypisany do źródła, żadnych istniejących relacji zostanie usunięta.</xref:System.ComponentModel.Design.Serialization.MemberRelationship>"
  syntax:
    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Relacji źródłowej. Jest to po lewej stronie przypisania relacji."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Bieżący relacji skojarzone z <code> source </code>, lub <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;> </xref> , jeśli nie ma żadnych zależności."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>jest pusta, lub relacji nie jest obsługiwane przez usługę."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  id: Item(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: Item(Object,MemberDescriptor)
  nameWithType: MemberRelationshipService.Item(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(Object,MemberDescriptor)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Ustanawia relację między obiektem źródłowym i docelowym."
  syntax:
    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }
    parameters:
    - id: sourceOwner
      type: System.Object
      description: "Właściciel relacji źródłowej."
    - id: sourceMember
      type: System.ComponentModel.MemberDescriptor
      description: "Element członkowski relacji źródłowej."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;> </xref> struktury hermetyzując relacja między obiektem źródłowa i docelowa lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie ma żadnych zależności."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceOwner</code>or <code>sourceMember</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceOwner</code>lub <code>sourceMember</code> jest pusta, lub relacji nie jest obsługiwane przez usługę."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  id: SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: SetRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Tworzy relację między źródła obiektu i obiekt docelowy relacji."
  remarks: "Metoda SetRelationship usuwa żadnych istniejących relacji, jeśli parametr relacji jest <xref:System.ComponentModel.Design.Serialization.MemberRelationship>.</xref:System.ComponentModel.Design.Serialization.MemberRelationship> Domyślna implementacja przechowuje relacje w słowniku, używając słabego odwołania do tabeli relacji nie podtrzymywania obiektów."
  syntax:
    content: protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Relacji źródłowej."
    - id: relationship
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Relacja można ustawić w źródle."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja nie jest obsługiwana przez usługę."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  id: SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: SupportsRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Pobiera wartość wskazującą, czy dana relacja jest obsługiwana."
  syntax:
    content: public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Relacji źródłowej."
    - id: relationship
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Relacja można ustawić w źródle."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli relacja między tymi dwoma obiektami danego jest obsługiwany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: MemberRelationshipService()
  nameWithType: MemberRelationshipService.MemberRelationshipService()
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.MemberRelationshipService()
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: GetRelationship(MemberRelationship)
  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationship
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: MemberRelationship
  nameWithType: MemberRelationship
  fullName: System.ComponentModel.Design.Serialization.MemberRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item(MemberRelationship)
  nameWithType: MemberRelationshipService.Item(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item(Object,MemberDescriptor)
  nameWithType: MemberRelationshipService.Item(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SetRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SupportsRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: MemberRelationshipService
  nameWithType: MemberRelationshipService.MemberRelationshipService
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: GetRelationship
  nameWithType: MemberRelationshipService.GetRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item
  nameWithType: MemberRelationshipService.Item
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SetRelationship
  nameWithType: MemberRelationshipService.SetRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SupportsRelationship
  nameWithType: MemberRelationshipService.SupportsRelationship
