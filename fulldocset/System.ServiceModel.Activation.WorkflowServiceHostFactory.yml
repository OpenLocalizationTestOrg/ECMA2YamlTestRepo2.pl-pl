### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory
  id: WorkflowServiceHostFactory
  children:
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  langs:
  - csharp
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory
  type: Class
  summary: "Fabryka, która zapewnia wystąpienia <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> w zarządzanych środowiskach, w którym hosta jest tworzone wystąpienie dynamicznie w odpowiedzi na komunikaty przychodzące hostingu."
  remarks: "Zarządzanych środowiskach hostingu obsługujących aktywację dynamiczne są Internet Information Services (IIS) i usługi aktywacji procesów systemu Windows (WAS).       Jeśli zaimplementowano niestandardowych pochodną <xref:System.ServiceModel.WorkflowServiceHost>, rozważ zaimplementowanie również fabrykę, która jest pochodną klasy. Metoda WorkflowServiceHostFactory</xref:System.ServiceModel.WorkflowServiceHost>       Jeśli zaimplementowano niestandardowych pochodną <xref:System.ServiceModel.ServiceHostBase>zamiast tego należy następnie rozważyć również wdrożenie fabryki, która pochodzi z fabryki z <xref:System.ServiceModel.Activation.ServiceHostFactoryBase>bezpośrednio.</xref:System.ServiceModel.Activation.ServiceHostFactoryBase> </xref:System.ServiceModel.ServiceHostBase>"
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class WorkflowServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase
  inheritance:
  - System.Object
  - System.ServiceModel.Activation.ServiceHostFactoryBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Activation.WorkflowServiceHostFactory&quot;> </xref> klasy."
  syntax:
    content: public WorkflowServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  id: CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "Tworzy <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> z ciąg, który zawiera plik nazwy pliku znaczników przepływu pracy lub nazwa typu typu usługi przepływu pracy i adres podstawowy usługi określona."
  remarks: "`constructorString` Argument może być w pełni kwalifikowana przepływu wpisz nazwę lub go może być względna ścieżka pliku definicji przepływu pracy zadeklarowany w pliku SVC, w którym <xref:System.ServiceModel.Activation.ServiceHostFactory>dyrektywy są umieszczane.</xref:System.ServiceModel.Activation.ServiceHostFactory>      > [!NOTE] > Aby skojarzyć definicję reguły z definicji przepływu pracy, nazwij plik definicji reguły taką samą nazwę jak plik definicji przepływu pracy z rozszerzeniem Rules i umieścić go w tym samym katalogu co plik definicji przepływu pracy. Na przykład plik definicji reguły CalculatorServiceWorkflow.rules musi być w tym samym katalogu co CalculatorServiceWorkflow.xoml."
  example:
  - "The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow\" %>  \n```  \n  \n The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow.xoml\" %>  \n```"
  syntax:
    content: public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);
    parameters:
    - id: constructorString
      type: System.String
      description: "Nazwa pliku w pliku znaczników przepływu pracy, który definiuje usługi przepływu pracy lub nazwa typu usługi przepływu pracy typu."
    - id: baseAddresses
      type: System.Uri[]
      description: "Tablica typu <xref:System.Uri>zawierający adres podstawowy usługi hostowanej.</xref:System.Uri>"
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "A <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> obiekt skojarzony z usługi przepływu pracy. Domyślna implementacja zwraca <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> obiektu o określony adres podstawowy."
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: System.ServiceModel.Activation.ServiceHostFactoryBase
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost
