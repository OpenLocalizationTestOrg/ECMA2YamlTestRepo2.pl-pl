### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageHandlerFactory
  id: PageHandlerFactory
  children:
  - System.Web.UI.PageHandlerFactory.#ctor
  - System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  - System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  langs:
  - csharp
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory
  fullName: System.Web.UI.PageHandlerFactory
  type: Class
  summary: "Tworzy wystąpienia klas, które dziedziczą z <xref href=&quot;System.Web.UI.Page&quot;> </xref> klasy i wdrożenie <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfejsu. Wystąpienia są tworzone dynamicznie do obsługi żądań dla plików programu ASP.NET. Klasa PageHandlerFactory jest domyślna implementacja fabryki obsługi dla stron ASP.NET."
  remarks: "Implementuje klasy PageHandlerFactory <xref:System.Web.IHttpHandlerFactory>interfejsu zapewnienie domyślny program obsługi HTTP dla plików programu ASP.NET.</xref:System.Web.IHttpHandlerFactory> PageHandlerFactory wywołuje ASP.NET system kompilacji do kompilacji, jeśli to konieczne i zwróć dokładnego typu odpowiadającej adresowi URL, a następnie tworzy wystąpienie tego typu. Typ strony dziedziczy <xref:System.Web.UI.Page>klasy i implementuje <xref:System.Web.IHttpHandler>interfejsu.</xref:System.Web.IHttpHandler> </xref:System.Web.UI.Page>       Aby zbudować fabryki obsługi niestandardowej strony, zaimplementuj <xref:System.Web.IHttpHandlerFactory>i rejestrowanie w pliku Web.config dla aplikacji w niestandardowej klasy PageHandlerFactory [httpHandlers — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) sekcji konfiguracyjnej.</xref:System.Web.IHttpHandlerFactory>"
  syntax:
    content: public class PageHandlerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.#ctor
  id: '#ctor'
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.PageHandlerFactory&quot;> </xref> klasy."
  remarks: "Konstruktor PageHandlerFactory konstruktora domyślnego i inicjuje wszystkie pola z wartościami domyślnymi."
  syntax:
    content: protected PageHandlerFactory ();
    parameters: []
  overload: System.Web.UI.PageHandlerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca wystąpienie klasy <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfejsu można przetworzyć żądanego zasobu."
  remarks: "Metoda GetHandler jest wywoływana przez platformę ASP.NET, czas wykonywania i zwraca prawidłowe wystąpienie klasy <xref:System.Web.IHttpHandler>interfejsu lub `null`.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Wystąpienie <xref href=&quot;System.Web.HttpContext&quot;> </xref> klasy, która zawiera odwołania do wewnętrznych obiektów serwera (na przykład żądania, odpowiedzi sesji i Server) używane do obsługi żądań HTTP."
    - id: requestType
      type: System.String
      description: "Transferu danych HTTP — metoda (GET lub POST) używanego przez klienta."
    - id: virtualPath
      type: System.String
      description: "Ścieżka wirtualna do żądanego zasobu."
    - id: path
      type: System.String
      description: "<xref:System.Web.HttpRequest.PhysicalApplicationPath*>Właściwości do żądanego zasobu.</xref:System.Web.HttpRequest.PhysicalApplicationPath*>"
    return:
      type: System.Web.IHttpHandler
      description: "Nowy <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> przetwarza żądanie, które; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.PageHandlerFactory.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  id: ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Umożliwia fabrykę do ponownego użycia istniejącego wystąpienia programu obsługi."
  syntax:
    content: public virtual void ReleaseHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> Do ponownego użycia."
  overload: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.PageHandlerFactory.#ctor
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
- uid: System.Web.UI.PageHandlerFactory.#ctor*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory.PageHandlerFactory
- uid: System.Web.UI.PageHandlerFactory.GetHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler
  nameWithType: PageHandlerFactory.GetHandler
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler
  nameWithType: PageHandlerFactory.ReleaseHandler
