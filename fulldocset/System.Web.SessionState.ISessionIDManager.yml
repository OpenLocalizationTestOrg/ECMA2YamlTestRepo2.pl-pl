### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.ISessionIDManager
  id: ISessionIDManager
  children:
  - System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.Initialize
  - System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: ISessionIDManager
  nameWithType: ISessionIDManager
  fullName: System.Web.SessionState.ISessionIDManager
  type: Interface
  summary: "Definiuje kontrakt, które należy wdrożyć w Menedżerze niestandardowy identyfikator stanu sesji."
  remarks: "Interfejs ISessionIDManager identyfikuje metody, które musi implementować, aby utworzyć niestandardowe Menedżera wartości identyfikatora sesji. Implementacji interfejsu ISessionIDManager tworzy i sprawdza poprawność wartości identyfikatora sesji i zarządza magazynu identyfikatora sesji w odpowiedzi HTTP, a także pobierania wartości identyfikatora sesji z żądania HTTP. Włącz menedżera niestandardowy identyfikator sesji przy użyciu `sessionIDManagerType` atrybutu [sessionState — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element konfiguracji.       Jeśli implementacji interfejsu ISessionIDManager będzie obsługiwać identyfikatorów sesji bez plików cookie, należy wdrożyć rozwiązanie do wysyłania i pobierania identyfikatory sesji w adresie URL, na przykład filtr ISAPI.       Jeśli chcesz podać wartości niestandardowe identyfikator sesji ma być używany przez stanu sesji ASP.NET, można utworzyć klasy, która dziedziczy <xref:System.Web.SessionState.SessionIDManager>klasy i Przesłoń tylko <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>i <xref:System.Web.SessionState.SessionIDManager.Validate%2A>metody o niestandardowych implementacji.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> Dzięki temu można podać własne wartości identyfikatora sesji podczas jednostki uzależnionej na podstawie <xref:System.Web.SessionState.SessionIDManager>klasy do przechowywania wartości do odpowiedzi HTTP i pobierania wartości z żądania HTTP.</xref:System.Web.SessionState.SessionIDManager> Przykład zastępowanie <xref:System.Web.SessionState.SessionIDManager>klasy i wdrażanie tych metod, zapoznaj się z przykładem podane dla <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>metody <xref:System.Web.SessionState.SessionIDManager>klasy.</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  example:
  - "The following code example shows a class that implements a cookie-based session-ID manager.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_1_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/csharp/t-system.web.sessionstat_1_1.cs)]"
  syntax:
    content: public interface ISessionIDManager
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Tworzy identyfikator unikatowy sesji."
  remarks: "Metoda CreateSessionID służy do generowania identyfikatora sesji unikatowy który <xref:System.Web.SessionState.SessionStateModule>obiektu będzie używany do identyfikowania nowej sesji.</xref:System.Web.SessionState.SessionStateModule> Wartość zwrócona przez CreateSessionID musi być unikatowa i musi zawierać prawidłowe znaki, które mogą być przechowywane w odpowiedzi HTTP i żądania. Jeśli to możliwe, że wartość zwracana przez implementacji CreateSessionID zawiera znaki, które nie są prawidłowe w żądania lub odpowiedzi HTTP, należy użyć <xref:System.Web.HttpUtility.UrlEncode%2A>do kodowania wartość identyfikatora sesji w sieci <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>implementacji metody i <xref:System.Web.HttpUtility.UrlDecode%2A>metody do zdekodowania wartości identyfikatora sesji w sieci <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>implementacji metody.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A>"
  example:
  - "The following code example implements the CreateSessionID method. The method creates a new <xref:System.Guid> to be used as a session identifier.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/visualbasic/873b6fcc-0b1f-453f-806c-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/csharp/873b6fcc-0b1f-453f-806c-_1.cs)]"
  syntax:
    content: public string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Bieżący <xref href=&quot;System.Web.HttpContext&quot;> </xref> obiektu, który odwołuje się do obiektów serwera używane do przetwarzania żądań HTTP (na przykład <> </> *> i <> </> *> właściwości)."
    return:
      type: System.String
      description: "Identyfikator unikatowy sesji."
  overload: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera identyfikator sesji w kontekście bieżącego żądania HTTP."
  remarks: "Metoda GetSessionID jest wywoływana przez <xref:System.Web.SessionState.SessionStateModule>podczas <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>i <xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName>zdarzeń.</xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> Jeśli nie można pobrać identyfikatora sesji prawidłowe z żądania HTTP, zwróć `null`. Jeśli <xref:System.Web.SessionState.SessionStateModule>odbiera `null` z metody GetSessionID wywoła <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>metody można pobrać identyfikatora nowej sesji dla nowej sesji.</xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Jeśli jest to możliwe, że wartość zwracana przez użytkownika <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>implementacji zawiera znaki, które nie są prawidłowe w żądania lub odpowiedzi HTTP, należy użyć <xref:System.Web.HttpUtility.UrlEncode%2A>do kodowania wartość identyfikatora sesji w sieci <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>implementacji metody i <xref:System.Web.HttpUtility.UrlDecode%2A>metody w celu zdekodowania wartości identyfikatora sesji w implementacji metody GetSessionID.</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented GetSessionID method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/visualbasic/m-system.web.sessionstat_10_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/csharp/m-system.web.sessionstat_10_1.cs)]"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Bieżący <xref href=&quot;System.Web.HttpContext&quot;> </xref> obiektu, który odwołuje się do obiektów serwera używane do przetwarzania żądań HTTP (na przykład <> </> *> i <> </> *> właściwości)."
    return:
      type: System.String
      description: "Identyfikator bieżącej sesji, wysyłane z żądania HTTP."
  overload: System.Web.SessionState.ISessionIDManager.GetSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inicjuje <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> obiektu."
  remarks: "Metoda inicjowania zainicjować <xref:System.Web.SessionState.ISessionIDManager>obiektu.</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.ISessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Wykonuje inicjowanie na żądanie <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> obiektu."
  remarks: "Dla każdego żądania obsługiwane przez wywoływana jest metoda InitializeRequest <xref:System.Web.SessionState.ISessionIDManager>obiektu.</xref:System.Web.SessionState.ISessionIDManager> Inicjowanie danych na żądanie przy użyciu metody InitializeRequest <xref:System.Web.SessionState.SessionIDManager>obiektu.</xref:System.Web.SessionState.SessionIDManager>       Gdy `suppressAutoDetectRedirect` parametr jest `true`, <xref:System.Web.SessionState.ISessionIDManager>obiekt nie należy używać przekierowania do określenia, czy przeglądarka obsługuje pliki cookie.</xref:System.Web.SessionState.ISessionIDManager>       `supportSessionIDReissue` Parametr powinien być zwracany `false` przypadku pliki cookie są używane do identyfikacji sesji; w przeciwnym razie zwraca `true` Jeśli Twoje <xref:System.Web.SessionState.ISessionIDManager>Implementacja obsługuje ponownie wystawiających certyfikaty identyfikatory sesji.</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Obiekt, który zawiera informacje o bieżącym żądaniu."
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli identyfikator sesji Menedżera powinna kierować do określenia obsługę plików cookie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> do pomijania automatyczne przekierowanie do określenia obsługę plików cookie."
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "Po powrocie z tej metody zawiera wartość logiczna wskazująca, czy <xref href=&quot;System.Web.SessionState.ISessionIDManager&quot;> </xref> obiektu obsługuje wystawiającego nowe identyfikatory sesji, gdy pierwotny identyfikator jest nieaktualny. Ten parametr jest przekazywany jako niezainicjowany.       Ponowne użycie identyfikator sesji jest odpowiednie, gdy identyfikator stanu sesji jest zakodowany przy użyciu adresu URL i potencjalnych istnieje adres URL udostępnionych lub pocztą e-mail.       Jeśli cookie partycje implementacja niestandardowa stanu sesji za pomocą ścieżki wirtualnej, należy również obsługiwane stanu sesji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, czy inicjowania wykonywana przekierowanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Usuwa identyfikator sesji z pliku cookie lub z adresu URL."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Wywołania <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>metody podczas <xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName>zdarzenia do usunięcia identyfikatora sesji z <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>kolekcji, jeśli został utworzony, ale nie została użyta w nowej sesji.</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> </xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - "The following code example implements the RemoveSessionID method.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/visualbasic/ee24c797-ce26-45a5-8119-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/csharp/ee24c797-ce26-45a5-8119-_1.cs)]"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Bieżący <xref href=&quot;System.Web.HttpContext&quot;> </xref> obiektu, który odwołuje się do obiektów serwera używane do przetwarzania żądań HTTP (na przykład <> </> *> i <> </> *> właściwości)."
  overload: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Identyfikator sesji nowo utworzony jest zapisywany do odpowiedzi HTTP."
  remarks: "Metoda SaveSessionID jest wywoływana przez <xref:System.Web.SessionState.SessionStateModule>obiektu podczas <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>zdarzeń.</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> Metoda SaveSessionID przechowuje identyfikator sesji w adresie URL (gdy stan sesji bez plików cookie jest używany) lub w innej niż wygasa plik cookie sesji.       Jeśli jest to możliwe, że wartość zwracana z Twojej <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>implementacji zawiera znaki, które nie są prawidłowe w żądania lub odpowiedzi HTTP, należy użyć <xref:System.Web.HttpUtility.UrlEncode%2A>do kodowania wartość identyfikatora sesji w implementacji metody SaveSessionID i <xref:System.Web.HttpUtility.UrlDecode%2A>metody do zdekodowania wartości identyfikatora sesji w sieci <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>implementacji metody.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/visualbasic/c9e7b38d-d963-4c81-9ebb-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/csharp/c9e7b38d-d963-4c81-9ebb-_1.cs)]"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Bieżący <xref href=&quot;System.Web.HttpContext&quot;> </xref> obiektu, który odwołuje się do obiektów serwera używane do przetwarzania żądań HTTP (na przykład <> </> *> i <> </> *> właściwości)."
    - id: id
      type: System.String
      description: "Identyfikator sesji."
    - id: redirected
      type: System.Boolean
      description: "Po powrocie z tej metody zawiera wartość logiczna, która jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli odpowiedź jest przekierowanie do bieżącego adresu URL z identyfikatorem sesji, dodane do adresu URL; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: cookieAdded
      type: System.Boolean
      description: "Po powrocie z tej metody zawiera wartość logiczna, która jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli plik cookie został dodany do odpowiedzi HTTP; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Potwierdza, że identyfikator sesji podany jest prawidłowy."
  remarks: "Metoda weryfikacji sprawdza, czy podana `id` jest identyfikatorem prawidłowej sesji.       Twoje <xref:System.Web.SessionState.ISessionIDManager>implementacji należy wywołać metodę Validate z <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>metody podczas pobierania identyfikatora sesji z żądania HTTP zapewnienie, sesji podany identyfikator jest poprawnie sformatowana.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.SessionState.ISessionIDManager>"
  example:
  - "The following code example implements the Validate method and ensures the session-identifier value is a valid <xref:System.Guid>.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_0_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/csharp/m-system.web.sessionstat_0_1.cs)]"
  syntax:
    content: public bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "Identyfikator sesji, aby sprawdzić poprawność."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli identyfikator sesji jest nieprawidłowy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: ISessionIDManager.CreateSessionID
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: ISessionIDManager.GetSessionID
- uid: System.Web.SessionState.ISessionIDManager.Initialize*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: ISessionIDManager.Initialize
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: ISessionIDManager.InitializeRequest
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: ISessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: ISessionIDManager.SaveSessionID
- uid: System.Web.SessionState.ISessionIDManager.Validate*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate
  nameWithType: ISessionIDManager.Validate
