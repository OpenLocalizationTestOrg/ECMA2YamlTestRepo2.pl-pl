### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs
  id: AuthenticatingEventArgs
  children:
  - System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  - System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  - System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  - System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  - System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  langs:
  - csharp
  name: AuthenticatingEventArgs
  nameWithType: AuthenticatingEventArgs
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Web.ApplicationServices.AuthenticationService.Authenticating&quot;> </xref> zdarzeń."
  remarks: "Utwórz program obsługi <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>zdarzenie, gdy chcesz dostosować sposób uwierzytelniania poświadczeń użytkownika w czasie wykonywania.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Klasa AuthenticatingEventArgs dostarcza wartości dla każdego <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>obsługi zdarzeń.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Za pomocą właściwości dostępne w tej klasie, można pobrać poświadczeń użytkownika, aby dostosować uwierzytelniania.       <xref:System.Web.ApplicationServices.AuthenticationService>Klasy zgłasza <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>zdarzeń przed sprawdzanie poprawności poświadczeń użytkownika.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> </xref:System.Web.ApplicationServices.AuthenticationService> <xref:System.Web.ApplicationServices.AuthenticationService>Klasy tworzy wystąpienie obiektu AuthenticatingEventArgs i przekazuje je do dowolnego <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>obsługi zdarzeń.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> </xref:System.Web.ApplicationServices.AuthenticationService>       Można użyć <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>, <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>i <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>Właściwości można pobrać poświadczeń użytkownika.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>Właściwość może zawierać dodatkowe wartości, które są wymagane do uwierzytelniania, takie jak numer identyfikacyjny.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>       <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>Właściwość wskazuje, czy poświadczenia użytkownika są prawidłowe.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> Możesz ustawić <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>Właściwości wyniku niestandardowe uwierzytelnianie.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> Ponadto należy ustawić <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>właściwości `true` Jeśli zaznaczono poświadczenia użytkownika i nie chcesz <xref:System.Web.ApplicationServices.AuthenticationService>klasy, aby sprawdzić poświadczenia użytkownika przy użyciu domyślnego dostawcy członkostwa.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>"
  example:
  - "The following example shows an event handler that passes the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/t-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/t-system.web.application_3_1.asax)]"
  syntax:
    content: 'public class AuthenticatingEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  id: Authenticated
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Pobiera lub ustawia wartość wskazującą, czy poświadczenia użytkownika są prawidłowe."
  remarks: "Jeśli uwierzytelnianie poświadczeń użytkownika w obsłudze zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>zdarzeń, ustaw właściwość uwierzytelniany, aby wskazać, czy poświadczenia użytkownika są prawidłowe.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Jeśli poświadczenia użytkownika są prawidłowe i nie dodatkowe sprawdzenie poprawności jest niezbędne, ustawioną uwierzytelniany `true` i <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>do `true`.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> Możesz ustawić <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>Właściwość wskazująca, czy usługi uwierzytelniania należy pominąć domyślne kroków w celu uwierzytelniania użytkownika.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> Wartość w uwierzytelniany jest używana przez <xref:System.Web.ApplicationServices.AuthenticationService>tylko wtedy, gdy klasa <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>ustawiono `true`.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Jeśli <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>jest `false`, <xref:System.Web.ApplicationServices.AuthenticationService>klasy wywołuje domyślnego dostawcę członkostwa można sprawdzić poprawności poświadczeń użytkownika i spowoduje zastąpienie wartości w uwierzytelnione.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>"
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets Authenticated to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/p-system.web.application_4_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/p-system.web.application_4_1.asax)]"
  syntax:
    content: public bool Authenticated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli poświadczenia użytkownika są prawidłowe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  id: AuthenticationIsComplete
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Pobiera lub ustawia wartość wskazującą, czy poświadczenia użytkownika zostały uwierzytelnione."
  remarks: "Można ustawić właściwości AuthenticationIsComplete, aby wskazać, czy <xref:System.Web.ApplicationServices.AuthenticationService>klasy musi uwierzytelnić poświadczeń użytkownika.</xref:System.Web.ApplicationServices.AuthenticationService> Jeśli jest AuthenticationIsComplete `true`, <xref:System.Web.ApplicationServices.AuthenticationService>klasy nie można zweryfikować poświadczeń użytkownika za pomocą domyślnego dostawcy członkostwa.</xref:System.Web.ApplicationServices.AuthenticationService> Zamiast tego używa wartości w <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>do ustalenia, czy można utworzyć pliku cookie uwierzytelniania.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>       Jeśli jest AuthenticationIsComplete `false`, <xref:System.Web.ApplicationServices.AuthenticationService>klasy weryfikuje poświadczenia użytkownika przy użyciu domyślnego dostawcę członkostwa i zastępuje wartość <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>Właściwości.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> </xref:System.Web.ApplicationServices.AuthenticationService>"
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets AuthenticationIsComplete to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/db2b0263-dafe-4889-a472-_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/db2b0263-dafe-4889-a472-_1.asax)]"
  syntax:
    content: public bool AuthenticationIsComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zostały wykonane wszystkie kroki sprawdzanie poprawności poświadczeń użytkownika; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  id: CustomCredential
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Pobiera użytkownika dodatkowe wartości dla uwierzytelniania."
  remarks: "Właściwość CustomCredential służy do pobierania wartości uwierzytelniania inne niż nazwa użytkownika i hasła podczas <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>zdarzeń.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Na przykład aplikacja może być skonfigurowany do sprawdzania poprawności numer identyfikacyjny oraz nazwy użytkownika i hasła. W takim przypadku przekazano numer identyfikacyjny `CustomCredential` parametr <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>metody.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Następnie można pobrać niestandardowej wartości za pośrednictwem właściwości CustomCredential.       Właściwość CustomCredential zawiera dostosowanych wartości w tym samym formacie, ponieważ są one przekazywane do <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>metody.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> W <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>program obsługi zdarzeń, jeśli więcej niż jedną wartość jest przechowywana we właściwości, można przeanalizować wartości właściwości CustomCredential można pobrać wartości.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event that parses two authentication values from the CustomCredential property. It passes the two values and the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/p-system.web.application_10_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/p-system.web.application_10_1.asax)]"
  syntax:
    content: public string CustomCredential { get; }
    return:
      type: System.String
      description: "Wartości wymagane do uwierzytelniania inne niż nazwa użytkownika i hasło."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  id: Password
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Pobiera hasło dla użytkownika."
  remarks: "Użyj właściwości hasła w celu pobrania hasła podczas <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>zdarzeń.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>"
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and Password values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/p-system.web.application_1_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/p-system.web.application_1_1.asax)]"
  syntax:
    content: public string Password { get; }
    return:
      type: System.String
      description: "Hasło do zweryfikowania."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  id: UserName
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Pobiera nazwę uwierzytelniania użytkownika."
  remarks: "Nazwa uwierzytelniania podczas pobierania za pomocą właściwości UserName <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>zdarzeń.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>"
  example:
  - "The following example shows an event handler that selects a membership provider to use based on the value of the UserName property. The handler passes UserName and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to the custom membership provider to validate the user credentials. It sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/p-system.web.application_5_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/p-system.web.application_5_1.asax)]"
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "Nazwa użytkownika do zweryfikowania."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
