### YamlMime:ManagedReference
items:
- uid: System.Net.WebProxy
  id: WebProxy
  children:
  - System.Net.WebProxy.#ctor
  - System.Net.WebProxy.#ctor(System.String)
  - System.Net.WebProxy.#ctor(System.Uri)
  - System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Int32)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.Address
  - System.Net.WebProxy.BypassArrayList
  - System.Net.WebProxy.BypassList
  - System.Net.WebProxy.BypassProxyOnLocal
  - System.Net.WebProxy.Credentials
  - System.Net.WebProxy.GetDefaultProxy
  - System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.GetProxy(System.Uri)
  - System.Net.WebProxy.IsBypassed(System.Uri)
  - System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.UseDefaultCredentials
  langs:
  - csharp
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
  type: Class
  summary: "Zawiera ustawienia serwera proxy HTTP dla <xref:System.Net.WebRequest>klasy.</xref:System.Net.WebRequest>"
  remarks: "Klasa WebProxy zawiera ustawienia serwera proxy który <xref:System.Net.WebRequest>wystąpień umożliwia określenie, czy serwer proxy sieci Web jest używana do wysyłania żądań.</xref:System.Net.WebRequest> Globalne sieci Web, można określić ustawienia serwera proxy na maszynie i pliki konfiguracji aplikacji i aplikacje mogą umożliwia dostosowywanie użycia serwera proxy sieci Web wystąpienia klasy obiektu WebProxy. Klasa WebProxy jest podstawowa implementacja <xref:System.Net.IWebProxy>interfejsu.</xref:System.Net.IWebProxy>       Aby uzyskać wystąpienia klasy serwera proxy sieci Web, można użyć dowolnej z następujących metod: - <xref:System.Net.WebProxy.%23ctor%2A>konstruktora.</xref:System.Net.WebProxy.%23ctor%2A>      - <xref:System.Net.WebProxy.GetDefaultProxy%2A>Metody.</xref:System.Net.WebProxy.GetDefaultProxy%2A>      - <xref:System.Net.GlobalProxySelection.Select%2A>Metody.</xref:System.Net.GlobalProxySelection.Select%2A>       Te metody dostarczania wystąpienia obiektu WebProxy, który można dostosować; Różnica między nimi polega na tym, jak wystąpienie jest zainicjowany przed zwróceniem do aplikacji. <xref:System.Net.WebProxy.%23ctor%2A>Konstruktor Zwraca wystąpienie klasy z obiektu WebProxy <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.%23ctor%2A> Jeśli żądanie używa wystąpienia obiektu WebProxy w tym stanie, bez serwera proxy służy do wysyłania żądania.       <xref:System.Net.WebProxy.GetDefaultProxy%2A>Metoda zwraca wystąpienie klasy z obiektu WebProxy <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, i <xref:System.Net.WebProxy.BypassList%2A>Właściwości ustawione na wartości używane przez program Internet Explorer 5.5 lub nowszy.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.GetDefaultProxy%2A>       <xref:System.Net.GlobalProxySelection.Select%2A>Metoda zwraca wystąpienie klasy WebProxy z nim właściwości ustawione zgodnie z kombinacją programu Internet Explorer i pliku ustawień konfiguracji.</xref:System.Net.GlobalProxySelection.Select%2A>       Klasa WebProxy obsługuje automatycznego wykrywania i wykonywania skryptów konfiguracji serwera proxy. Ta funkcja jest nazywana autowykrywania serwera Proxy sieci Web (WPAD). Podczas korzystania z automatycznej konfiguracji serwera proxy, skrypt konfiguracji, zwykle o nazwie Wpad.dat, musi być znajduje się, pobrane skompilowany i uruchom. Jeśli te operacje zostały wykonane pomyślnie, skrypt zwraca serwery proxy, które mogą być używane dla żądania."
  example:
  - "The following code example assigns a WebProxy instance to a <xref:System.Net.WebRequest> instance. The <xref:System.Net.WebRequest> instance uses the proxy to connect to external Internet resources. (For an example that demonstrates using the WPAD feature, see the documentation for the <xref:System.Net.IWebProxyScript> class.)  \n  \n [!code-cpp[Classic WebProxy Example#1](~/add/codesnippet/cpp/t-system.net.webproxy_1.cpp)]\n [!code-vb[Classic WebProxy Example#1](~/add/codesnippet/visualbasic/t-system.net.webproxy_1.vb)]\n [!code-cs[Classic WebProxy Example#1](~/add/codesnippet/csharp/t-system.net.webproxy_1.cs)]"
  syntax:
    content: 'public class WebProxy : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor
  id: '#ctor'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje puste wystąpienie <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy."
  remarks: "Konstruktor domyślny inicjuje puste wystąpienie <xref:System.Net.WebProxy>klasy z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>       Gdy <xref:System.Net.WebProxy.Address%2A>właściwość jest `null`, <xref:System.Net.WebProxy.IsBypassed%2A>Metoda zwraca `true` i <xref:System.Net.WebProxy.GetProxy%2A>Metoda zwraca adres docelowy.</xref:System.Net.WebProxy.GetProxy%2A> </xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.Address%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#1](~/add/codesnippet/cpp/m-system.net.webproxy.sh_3_1.cpp)]\n [!code-cs[NCLWebProxy#1](~/add/codesnippet/csharp/m-system.net.webproxy.sh_3_1.cs)]"
  syntax:
    content: public WebProxy ();
    parameters: []
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy z określonym identyfikatorem URI."
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość <xref:System.Uri>zawierające wystąpienie `Address`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#6](~/add/codesnippet/cpp/m-system.net.webproxy.sh_1_1.cpp)]\n [!code-cs[NCLWebProxy#6](~/add/codesnippet/csharp/m-system.net.webproxy.sh_1_1.cs)]"
  syntax:
    content: public WebProxy (string Address);
    parameters:
    - id: Address
      type: System.String
      description: "Identyfikator URI serwera proxy."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> jest nieprawidłowym identyfikatorem URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy z określonego <xref:System.Uri>wystąpienia.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość `Address` parametru.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.sh_0_1.cpp)]\n [!code-cs[NCLWebProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.sh_0_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>wystąpienia zawierający adres serwera proxy.</xref:System.Uri>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> przy użyciu wcześniej serializacji zawartości."
  remarks: "Ta metoda jest wywoływana przez system do deserializacji <xref:System.Net.WebProxy>wystąpienia; nie aplikacje nie mogą wywoływać go.</xref:System.Net.WebProxy>"
  syntax:
    content: protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Dane serializacji."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontekst dla danych serializacji."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy z określonego identyfikatora URI i obejście ustawienie."
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość <xref:System.Uri>wystąpienia, które zawiera `Address` i <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>ustawioną właściwość `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/m-system.net.webproxy.sh_4_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/m-system.net.webproxy.sh_4_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.String
      description: "Identyfikator URI serwera proxy."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> jest nieprawidłowym identyfikatorem URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> z określonego hosta i numer portu."
  remarks: '<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość <xref:System.Uri>wystąpienia w formie http:// `Host` : `Port`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>'
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#5](~/add/codesnippet/cpp/m-system.net.webproxy.sh_6_1.cpp)]\n [!code-cs[NCLWebProxy#5](~/add/codesnippet/csharp/m-system.net.webproxy.sh_6_1.cs)]"
  syntax:
    content: public WebProxy (string Host, int Port);
    parameters:
    - id: Host
      type: System.String
      description: "Nazwa hosta serwera proxy."
    - id: Port
      type: System.Int32
      description: "Numer portu na `Host` do użycia."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Identyfikator URI utworzony przez połączenie <code> Host </code> i <code> Port </code> nie jest prawidłowym identyfikatorem URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy z <xref:System.Uri>wystąpienia i obejście ustawienie.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość `Address` i <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>ustawioną właściwość `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#3](~/add/codesnippet/cpp/m-system.net.webproxy.sh_7_1.cpp)]\n [!code-cs[NCLWebProxy#3](~/add/codesnippet/csharp/m-system.net.webproxy.sh_7_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>wystąpienia zawierający adres serwera proxy.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  id: '#ctor(System.String,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> z określonego identyfikatora URI, ustawienie obejścia i listy identyfikatorów URI, aby pominąć."
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość <xref:System.Uri>wystąpienia, które zawiera `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>ustawioną właściwość `BypassOnLocal`i <xref:System.Net.WebProxy.BypassList%2A>ustawioną właściwość `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#8](~/add/codesnippet/cpp/m-system.net.webproxy.sh_2_1.cpp)]\n [!code-cs[NCLWebProxy#8](~/add/codesnippet/csharp/m-system.net.webproxy.sh_2_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.String
      description: "Identyfikator URI serwera proxy."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Tablica ciągów wyrażenie regularne, które zawierają identyfikatory URI serwerów, aby pominąć."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> jest nieprawidłowym identyfikatorem URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  id: '#ctor(System.Uri,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy z określonym <xref:System.Uri>wystąpienia, ustawienie obejścia i listy identyfikatorów URI, aby pominąć.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>ustawioną właściwość `BypassOnLocal`i <xref:System.Net.WebProxy.BypassList%2A>ustawioną właściwość `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#4](~/add/codesnippet/cpp/m-system.net.webproxy.sh_5_1.cpp)]\n [!code-cs[NCLWebProxy#4](~/add/codesnippet/csharp/m-system.net.webproxy.sh_5_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>wystąpienia zawierający adres serwera proxy.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Tablica ciągów wyrażeń regularnych, który zawiera identyfikatory URI serwerów, aby pominąć."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy z określonego identyfikatora URI, Pomiń ustawienie listy identyfikatorów URI obejścia, a poświadczenia."
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość <xref:System.Uri>wystąpienia, które zawiera `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>ustawioną właściwość `BypassOnLocal`, <xref:System.Net.WebProxy.BypassList%2A>ustawioną właściwość `BypassList`i <xref:System.Net.WebProxy.Credentials%2A>ustawioną właściwość `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#9](~/add/codesnippet/cpp/25929c39-89a2-4ac3-bf8d-_1.cpp)]\n [!code-cs[NCLWebProxy#9](~/add/codesnippet/csharp/25929c39-89a2-4ac3-bf8d-_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.String
      description: "Identyfikator URI serwera proxy."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Tablica ciągów wyrażeń regularnych, który zawiera identyfikatory URI serwerów, aby pominąć."
    - id: Credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>Wystąpienia można przesłać do serwera proxy w celu uwierzytelnienia.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> jest nieprawidłowym identyfikatorem URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasy z określonym <xref:System.Uri>wystąpienia, Pomiń ustawienie listy identyfikatorów URI obejścia, a poświadczenia.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>Wystąpienie jest inicjowane z <xref:System.Net.WebProxy.Address%2A>ustawioną właściwość `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>ustawioną właściwość `BypassOnLocal`, <xref:System.Net.WebProxy.BypassList%2A>ustawioną właściwość `BypassList`i <xref:System.Net.WebProxy.Credentials%2A>ustawioną właściwość `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#13](~/add/codesnippet/cpp/35b6ace3-e60e-4d11-a417-_1.cpp)]\n [!code-cs[NCLWebProxy#13](~/add/codesnippet/csharp/35b6ace3-e60e-4d11-a417-_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>wystąpienia zawierający adres serwera proxy.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Tablica ciągów wyrażeń regularnych, który zawiera identyfikatory URI serwerów, aby pominąć."
    - id: Credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>Wystąpienia można przesłać do serwera proxy w celu uwierzytelnienia.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Address
  id: Address
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia adres serwera proxy."
  remarks: "Właściwość Address zawiera adres serwera proxy. Podczas wykrywania automatyczną serwera proxy nie jest włączona, a nie skryptu automatycznej konfiguracji określono, właściwość Address i <xref:System.Net.WebProxy.BypassList%2A>określić serwer proxy używane dla żądania.</xref:System.Net.WebProxy.BypassList%2A>       Gdy właściwość Address jest `null`, żądań pominąć serwer proxy i bezpośrednie łączenie się z hosta docelowego."
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its Address.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.ad_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.ad_1.cpp)]"
  syntax:
    content: public Uri Address { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>wystąpienia zawierający adres serwera proxy.</xref:System.Uri>"
  overload: System.Net.WebProxy.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassArrayList
  id: BypassArrayList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera listę adresów, które nie korzystają z serwera proxy."
  remarks: "<xref:System.Net.WebProxy.BypassList%2A>Jest wyświetlana lista tablicy ciągów wyrażenie regularne, które opisują identyfikatory URI który <xref:System.Net.WebRequest>wystąpienia, uzyskuje dostęp do bezpośrednio zamiast z za pośrednictwem serwera proxy.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  syntax:
    content: public System.Collections.ArrayList BypassArrayList { get; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> Zawierający listę <xref:System.Net.WebProxy.BypassList*>tablice reprezentujące identyfikatory URI, które nie korzystają z serwera proxy podczas uzyskiwania dostępu do.</xref:System.Net.WebProxy.BypassList*>"
  overload: System.Net.WebProxy.BypassArrayList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassList
  id: BypassList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia tablicę adresów, które nie korzystają z serwera proxy."
  remarks: "Właściwość bypasslist — zawiera tablicę wyrażeń regularnych, które opisują identyfikatorów URI który <xref:System.Net.WebRequest>wystąpienia, uzyskuje dostęp do bezpośrednio zamiast z za pośrednictwem serwera proxy.</xref:System.Net.WebRequest>"
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its BypassList property.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.by_0_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.by_0_1.cpp)]"
  syntax:
    content: public string[] BypassList { get; set; }
    return:
      type: System.String[]
      description: "Zawiera listę wyrażeń regularnych, które opisują identyfikatory URI nie korzystających z serwera proxy podczas uzyskiwania dostępu do tablicy."
  overload: System.Net.WebProxy.BypassList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia wartość wskazującą, czy pominąć serwer proxy dla adresów lokalnych."
  remarks: "Ustawienie właściwości BypassProxyOnLocal Określa, czy <xref:System.Net.WebRequest>wystąpień Użyj serwera proxy podczas uzyskiwania dostępu do zasobów Internetu lokalnych.</xref:System.Net.WebRequest>       Jeśli jest BypassProxyOnLocal `true`, żądań lokalnych zasobów w Internecie, nie należy używać serwera proxy. Żądań lokalnych są identyfikowane przez brak kropki (.) w identyfikatorze URI, tak jak http://webserver/, lub dostępu do serwera lokalnego, w tym http://localhost, http://loopback lub http://127.0.0.1. Gdy jest BypassProxyOnLocal `false`, wszystkie żądania internetowe są nawiązywane przy użyciu serwera proxy.      > [!NOTE] > Żądań do hosta lokalnego z identyfikatorem URI zawierających okres Użyj serwera proxy. Aby uniknąć przy użyciu serwera proxy w tych przypadkach, Utwórz wpis dla hosta w <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A>"
  example:
  - "The following code example demonstrates calling a constructor that sets this property and getting the value of this property.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/p-system.net.webproxy.by_1_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/p-system.net.webproxy.by_1_1.cs)]"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Credentials
  id: Credentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia poświadczenia, aby przesłać do serwera proxy w celu uwierzytelnienia."
  remarks: "Właściwość poświadczeń zawiera poświadczenia uwierzytelniania do wysyłania do serwera proxy w odpowiedzi na kod stanu HTTP 407 (proxy autoryzacji). W większości przypadków klienta, należy użyć <xref:System.Net.CredentialCache.DefaultCredentials%2A>, które są poświadczeń aktualnie zalogowanego użytkownika.</xref:System.Net.CredentialCache.DefaultCredentials%2A> Aby to zrobić, ustaw <xref:System.Net.WebProxy.UseDefaultCredentials%2A>właściwości `true` zamiast ustawienie dla tej właściwości.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>      > [!NOTE] > Po ustawieniu właściwości poświadczenia do poświadczeń innych niż <xref:System.Net.CredentialCache.DefaultCredentials%2A>, ustawienie <xref:System.Net.WebProxy.UseDefaultCredentials%2A>właściwości `true` powoduje, że <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.WebProxy.UseDefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> Aby tego uniknąć, należy ustawić właściwość Credentials `null` przed ustawieniem <xref:System.Net.WebProxy.UseDefaultCredentials%2A>właściwości `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A> Podobnie, nie można ustawić tej właściwości do żadnej wartości, gdy <xref:System.Net.WebProxy.UseDefaultCredentials%2A>jest `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>Wystąpienia, które zawiera poświadczenia, aby przesłać do serwera proxy w celu uwierzytelnienia.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić tę właściwość podczas <xref:System.Net.WebProxy.UseDefaultCredentials*>ustawiono właściwość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Net.WebProxy.UseDefaultCredentials*>"
  platform:
  - net462
- uid: System.Net.WebProxy.GetDefaultProxy
  id: GetDefaultProxy
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Odczytuje ustawienia serwera proxy w przypadku programu Internet Explorer."
  remarks: "GetDefaultProxy metoda odczytuje ustawienia serwera proxy w przypadku przechowywane przez program Internet Explorer 5.5 lub nowszy i tworzy <xref:System.Net.WebProxy>wystąpienia przy użyciu tych ustawień.</xref:System.Net.WebProxy>       Metoda GetDefaultProxy nie odbiera dynamicznymi ustawieniami, generowanych przez skrypty uruchamiane przez program Internet Explorer, pozycje konfiguracji automatycznej lub wyszukiwań DHCP lub DNS.       Aplikacje powinny używać <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>Właściwości i <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName>metody zamiast metody GetDefaultProxy.</xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName> </xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NCLWebProxy#11](~/add/codesnippet/cpp/m-system.net.webproxy.ge_0_1.cpp)]\n [!code-cs[NCLWebProxy#11](~/add/codesnippet/csharp/m-system.net.webproxy.ge_0_1.cs)]"
  syntax:
    content: public static System.Net.WebProxy GetDefaultProxy ();
    parameters: []
    return:
      type: System.Net.WebProxy
      description: "A <xref href=&quot;System.Net.WebProxy&quot;> </xref> wystąpienia, który zawiera ustawienia serwera proxy w przypadku z programu Internet Explorer 5.5 lub nowszy."
  overload: System.Net.WebProxy.GetDefaultProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Wypełnia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> z danymi, które są potrzebne do zserializowania obiektu docelowego."
  remarks: "Wszystkie obiekty zawarte w <xref:System.Runtime.Serialization.SerializationInfo>automatycznie są śledzone i serializowany przez program formatujący.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Do wypełniania danych."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>Określa, że lokalizacja docelowa tej serializacji.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  id: GetProxy(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zwraca identyfikator URI przekazywane przez serwer proxy dla żądania."
  remarks: "GetProxy — metoda zwraca identyfikator URI <xref:System.Net.WebRequest>wystąpienia używana do uzyskiwania dostępu do zasobu internetowego.</xref:System.Net.WebRequest>       Porównuje GetProxy `destination` z zawartością <xref:System.Net.WebProxy.BypassList%2A>za pomocą <xref:System.Net.WebProxy.IsBypassed%2A>metody.</xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.BypassList%2A> Jeśli <xref:System.Net.WebProxy.IsBypassed%2A>zwraca `true`, zwraca GetProxy `destination` i <xref:System.Net.WebRequest>wystąpienia nie używa serwera proxy.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.IsBypassed%2A>       Jeśli `destination` nie znajduje się w <xref:System.Net.WebProxy.BypassList%2A>, <xref:System.Net.WebRequest>wystąpienie używa serwera proxy i <xref:System.Net.WebProxy.Address%2A>zwracana jest właściwość.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to get the proxy that is selected for a resource.  \n  \n [!code-cs[NCLAutoProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.ge_1_1.cs)]\n [!code-cpp[NCLAutoProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.ge_1_1.cpp)]"
  syntax:
    content: public Uri GetProxy (Uri destination);
    parameters:
    - id: destination
      type: System.Uri
      description: "<xref:System.Uri>Wystąpienia żądanego zasobu internetowego.</xref:System.Uri>"
    return:
      type: System.Uri
      description: "<xref:System.Uri>Wystąpienia zasobu internetowego, jeśli zasób znajduje się na liście obejścia; w przeciwnym razie <xref:System.Uri>instancję serwera proxy.</xref:System.Uri> </xref:System.Uri>"
  overload: System.Net.WebProxy.GetProxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destination</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  id: IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Wskazuje, czy do korzystania z serwera proxy dla określonego hosta."
  remarks: "Metoda IsBypassed jest używana do określenia, czy pominąć serwer proxy podczas uzyskiwania dostępu do zasobu internetowego.       <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>i <xref:System.Net.WebProxy.BypassList%2A>Właściwości formantu wartość zwracaną przez metodę IsBypassed.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A>       Zwraca IsBypassed `true` we wszystkich następujących warunków: - Jeśli <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>jest `true` i `host` jest lokalny identyfikator URI.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> Żądań lokalnych są identyfikowane przez brak kropki (.) w identyfikatorze URI, jak &quot;http://webserver/&quot;.      -Jeśli `host` odpowiada wyrażeniu regularnemu w <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A>      -   If <xref:System.Net.WebProxy.Address%2A> is `null`.</xref:System.Net.WebProxy.Address%2A>       Zwróć wszystkie inne warunki `false`."
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to check whether the bypass list is properly set.  \n  \n [!code-cpp[NCLWebProxy#12](~/add/codesnippet/cpp/m-system.net.webproxy.is_1.cpp)]\n [!code-cs[NCLWebProxy#12](~/add/codesnippet/csharp/m-system.net.webproxy.is_1.cs)]"
  syntax:
    content: public bool IsBypassed (Uri host);
    parameters:
    - id: host
      type: System.Uri
      description: "<xref:System.Uri>Wystąpienia hosta, aby sprawdzić, czy używany serwer proxy.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli serwer proxy nie powinna być używana dla <code> host </code>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.IsBypassed*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>host</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Tworzy dane serializacji i kontekstu, które są używane przez system do serializacji <xref href=&quot;System.Net.WebProxy&quot;> </xref> obiektu."
  remarks: "System wywołuje tę metodę do serializacji obiektu; aplikacje nie wywołują go bezpośrednio."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Obiektu, aby wypełnić z danymi."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>struktury, która wskazuje, lokalizacja docelowa tej serializacji.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia <xref:System.Boolean>Określa, czy wartość tej kontrolki <xref:System.Net.CredentialCache.DefaultCredentials*>są wysyłane z żądania.</xref:System.Net.CredentialCache.DefaultCredentials*> </xref:System.Boolean>"
  remarks: "Ta właściwość jest ustawiana `true` nawiązaniem żądań to <xref:System.Net.WebProxy>obiektu Jeśli jest to wymagane przez serwer, uwierzytelniania przy użyciu poświadczeń aktualnie zalogowanego użytkownika.</xref:System.Net.WebProxy> Aplikacje klienckie jest to zachowanie w większości przypadków. Dla aplikacji warstwy środkowej, takich jak aplikacje ASP.NET, zamiast używać tej właściwości można zwykle ustawić <xref:System.Net.WebProxy.Credentials%2A>właściwości do poświadczeń klienta w imieniu którego żądań.</xref:System.Net.WebProxy.Credentials%2A>       W poniższej tabeli przedstawiono wpływ ustawienie wartości UseDefaultCredentials, na podstawie wartości z <xref:System.Net.WebProxy.Credentials%2A>Właściwości.</xref:System.Net.WebProxy.Credentials%2A>      | wartość <xref:System.Net.WebProxy.Credentials%2A>| Wartość UseDefaultCredentials | Efekt |   |----------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `true`| Nie działa. |   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `false`| ustawiono <xref:System.Net.WebProxy.Credentials%2A> `null`. |   | `null`|`true`|<xref:System.Net.WebProxy.Credentials%2A> is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A>.|   | Wartości innej niż <xref:System.Net.CredentialCache.DefaultCredentials%2A>lub `null` | `true` lub `false`| Ustawienie UseDefaultCredentials zgłasza wyjątek. |       Jeśli jest UseDefaultCredentials `false`, można zmienić <xref:System.Net.WebProxy.Credentials%2A>właściwość, aby wszystkie poświadczenia.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> Jeśli jest UseDefaultCredentials `true`, zmiana <xref:System.Net.WebProxy.Credentials%2A>Właściwości z <xref:System.Net.CredentialCache.DefaultCredentials%2A>(wartość, która jest ustawiona, jeśli ustawiono właściwość UseDefaultCredentials `true`) spowoduje zgłoszenie wyjątku.</xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli są używane domyślne poświadczenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Próbowano ustawić tę właściwość podczas <xref:System.Net.WebProxy.Credentials*>właściwość zawiera poświadczeń innych niż domyślne poświadczenia.</xref:System.Net.WebProxy.Credentials*> Aby uzyskać więcej informacji zobacz sekcję uwag."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.WebProxy.#ctor
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
- uid: System.Net.WebProxy.#ctor(System.String)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebProxy.#ctor(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
- uid: System.Net.WebProxy.Address
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Net.WebProxy.BypassList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
- uid: System.Net.WebProxy
  parent: System.Net
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.UseDefaultCredentials
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
- uid: System.Net.WebProxy.#ctor*
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy.WebProxy
- uid: System.Net.WebProxy.Address*
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
- uid: System.Net.WebProxy.BypassList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy
  nameWithType: WebProxy.GetDefaultProxy
- uid: System.Net.WebProxy.GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData
  nameWithType: WebProxy.GetObjectData
- uid: System.Net.WebProxy.GetProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy
  nameWithType: WebProxy.GetProxy
- uid: System.Net.WebProxy.IsBypassed*
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed
  nameWithType: WebProxy.IsBypassed
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.WebProxy.UseDefaultCredentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
