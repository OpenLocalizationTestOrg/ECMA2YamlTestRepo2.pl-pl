### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebHeartbeatEvent
  id: WebHeartbeatEvent
  children:
  - System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)
  - System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  langs:
  - csharp
  name: WebHeartbeatEvent
  nameWithType: WebHeartbeatEvent
  fullName: System.Web.Management.WebHeartbeatEvent
  type: Class
  summary: "Definiuje te monitorowanie kondycji zdarzenia wywoływane okresowe interwałem."
  remarks: "Monitorowanie kondycji ASP.NET umożliwia pracownikom produkcyjnego i operacji zarządzania wdrożonej aplikacji sieci Web. <xref:System.Web.Management>Przestrzeń nazw zawiera typy kondycji zdarzenie odpowiedzialnych za tworzenie pakietów danych stanu kondycji aplikacji i typów dostawcy odpowiedzialna za przetwarzanie tych danych.</xref:System.Web.Management> Zawiera ona także pomocnicze typy, które pomagają w trakcie zarządzania zdarzenia kondycji.       Zdarzenia monitorowania kondycji pulsu służyć jako czasomierza monitorowanie kondycji systemu programu ASP.NET. Są one generowane w odstępach czasu zdefiniowanych przez `heartBeatInterval` atrybutu `healthMonitoring` sekcji konfiguracji. Używa WebHeartbeatEvent <xref:System.Web.Management.WebProcessStatistics>klasę, aby uzyskać informacje o procesach.</xref:System.Web.Management.WebProcessStatistics>      > [!NOTE] > W większości przypadków będzie można korzystać z typów monitorowanie kondycji programu ASP.NET, zgodnie z implementacją i sterowania monitorowanie kondycji systemu, podając wartości w `healthMonitoring` sekcji konfiguracji. Można również pochodną typy monitorowanie kondycji, aby utworzyć własne niestandardowe zdarzenia i dostawców."
  example:
  - "The following configuration file excerpt shows the configuration for the <xref:System.Web.Management.EventLogWebEventProvider> so it can handle heartbeat health events.  \n  \n> [!NOTE]\n>  The <xref:System.Web.Management.EventLogWebEventProvider> and the heartbeat health event types to monitor are configured by default. The only thing you need to do is to define the rule to monitor the heartbeat health events. Remember that by default only the failure audits are logged.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartbeatInterval=\"100\">  \n  <rules>  \n    <add name=\"Heart Beat Events\"  \n      eventName=\"Heartbeats\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"  \n      minInterval=\"00:01:00\" />  \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebHeartbeatEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.IncrementPerfCounters
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Web.Management.WebHeartbeatEvent
  langs:
  - csharp
  name: WebHeartbeatEvent(String,Int32)
  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
  fullName: System.Web.Management.WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Management.WebHeartbeatEvent&quot;> </xref> klasy z podanego kodu komunikat i zdarzeń."
  syntax:
    content: protected WebHeartbeatEvent (string message, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "Opis zdarzenia."
    - id: eventCode
      type: System.Int32
      description: "Kod skojarzone ze zdarzeniem. Po zaimplementowaniu zdarzenia niestandardowego kodu zdarzenia musi być większa niż <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebHeartbeatEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  id: ProcessStatistics
  parent: System.Web.Management.WebHeartbeatEvent
  langs:
  - csharp
  name: ProcessStatistics
  nameWithType: WebHeartbeatEvent.ProcessStatistics
  fullName: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Zawiera najważniejsze informacje na temat uruchomionego procesu."
  syntax:
    content: public System.Web.Management.WebProcessStatistics ProcessStatistics { get; }
    return:
      type: System.Web.Management.WebProcessStatistics
      description: "<xref href=&quot;System.Web.Management.WebProcessStatistics&quot;> </xref> Dla uruchomionego procesu."
  overload: System.Web.Management.WebHeartbeatEvent.ProcessStatistics*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: WebHeartbeatEvent(String,Int32)
  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
  fullName: System.Web.Management.WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: ProcessStatistics
  nameWithType: WebHeartbeatEvent.ProcessStatistics
  fullName: System.Web.Management.WebHeartbeatEvent.ProcessStatistics
- uid: System.Web.Management.WebProcessStatistics
  parent: System.Web.Management
  isExternal: false
  name: WebProcessStatistics
  nameWithType: WebProcessStatistics
  fullName: System.Web.Management.WebProcessStatistics
- uid: System.Web.Management.WebHeartbeatEvent.#ctor*
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: WebHeartbeatEvent
  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent
- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics*
  parent: System.Web.Management.WebHeartbeatEvent
  isExternal: false
  name: ProcessStatistics
  nameWithType: WebHeartbeatEvent.ProcessStatistics
