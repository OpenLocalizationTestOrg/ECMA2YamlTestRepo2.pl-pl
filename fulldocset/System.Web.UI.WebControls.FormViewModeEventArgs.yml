### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewModeEventArgs
  id: FormViewModeEventArgs
  children:
  - System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  - System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  - System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  langs:
  - csharp
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> zdarzeń."
  remarks: "<xref:System.Web.UI.WebControls.FormView.ModeChanging>Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.FormView>kontroli próbuje przełączyć się między edycji, wstawiania i tryb tylko do odczytu, ale przed faktycznie zmiany trybu.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowe, takie jak konfigurowanie <xref:System.Web.UI.WebControls.FormView>kontroli dla określonego trybu lub anulowanie zmiana trybu przy każdym wystąpieniu tego zdarzenia.</xref:System.Web.UI.WebControls.FormView>       A <xref:System.Web.UI.WebControls.FormViewInsertEventArgs>obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić trybu, do którego <xref:System.Web.UI.WebControls.FormView>kontroli zmienia się, aby określić, czy <xref:System.Web.UI.WebControls.FormView.ModeChanging>wywołano zdarzenie wyniku użytkownika anulowanie operacji edycji lub Wstaw lub wskaż, czy zmiana trybu powinno być anulowane.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertEventArgs> Aby określić nowy tryb, użyj <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Można również użyć <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>programowo Określ alternatywny tryb, dla której chcesz zmienić, ustawiając go na jedną z właściwości <xref:System.Web.UI.WebControls.FormViewMode>wartości wyliczenia.</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Użyj <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>właściwości do określania, czy to zdarzenie został zgłoszony jako wynik użytkownika Anulowanie edycji lub operacji wstawiania.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> Aby anulować zmianę trybu, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>właściwości `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Aby uzyskać listę początkowe wartości właściwości dla wystąpienia klasy FormViewModeEventArgs, zobacz <xref:System.Web.UI.WebControls.FormViewModeEventArgs.%23ctor%2A>konstruktora.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewModeEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ModeChanging> event to hide the pager row when the <xref:System.Web.UI.WebControls.FormView> control transitions to edit mode.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_17_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_17_1.aspx)]"
  syntax:
    content: 'public class FormViewModeEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)'
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: FormViewModeEventArgs(FormViewMode,Boolean)
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.FormViewModeEventArgs&quot;> </xref> klasy."
  remarks: "Ten konstruktor umożliwia inicjuje nowe wystąpienie <xref:System.Web.UI.WebControls.FormViewModeEventArgs>klasy.</xref:System.Web.UI.WebControls.FormViewModeEventArgs>       W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewModeEventArgs>klasy.</xref:System.Web.UI.WebControls.FormViewModeEventArgs>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>| Wartość `cancelingEdit` parametru. |   | <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>| Wartość `mode` parametru. |      > [!NOTE] > Ten konstruktor jest używany głównie przez deweloperów kontroli, gdy wywoływanie zdarzeń.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>"
  syntax:
    content: public FormViewModeEventArgs (System.Web.UI.WebControls.FormViewMode mode, bool cancelingEdit);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.FormViewMode
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> wartości wyliczenia."
    - id: cancelingEdit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> zdarzeń został podniesiony wyniku użytkownik anuluje operację edycji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  id: CancelingEdit
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> wywołano zdarzenie wyniku użytkownik anuluje operację edycji."
  remarks: "<xref:System.Web.UI.WebControls.FormView.ModeChanging>Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.FormView>kontroli próbuje przełączyć się między edycji, wstawiania i tryb tylko do odczytu, ale przed faktycznie zmiany trybu.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> Właściwość CancelingEdit umożliwia określenie, czy <xref:System.Web.UI.WebControls.FormView.ModeChanging>wywołano zdarzenie wyniku użytkownika anulowanie operacji edycji lub Wstaw.</xref:System.Web.UI.WebControls.FormView.ModeChanging> Na przykład możesz chcieć zresetować <xref:System.Web.UI.WebControls.FormView>formant zawsze, gdy użytkownik anulował operację edycji.</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the CancelingEdit property to determine whether a mode change is the result of the user canceling an edit operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_623_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_623_1.aspx)]"
  syntax:
    content: public bool CancelingEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> zdarzeń został podniesiony wyniku użytkownik anuluje operację edycji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  id: NewMode
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tryb, do którego <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> jest zmiana kontroli."
  remarks: "Aby określić tryb, do którego należy użyć właściwości NewMode <xref:System.Web.UI.WebControls.FormView>kontroli jest zmieniany.</xref:System.Web.UI.WebControls.FormView> Na przykład można skonfigurować <xref:System.Web.UI.WebControls.FormView>formant oparty na tryb, który zmienia.</xref:System.Web.UI.WebControls.FormView> Umożliwia także tej właściwości można określić tryb, do którego <xref:System.Web.UI.WebControls.FormView>kontroli zmian przez ustawienie jej na jeden z <xref:System.Web.UI.WebControls.FormViewMode>wartości wyliczenia.</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the NewMode property to determine the mode to which the <xref:System.Web.UI.WebControls.FormView> control is transitioning.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_376_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_376_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FormViewMode NewMode { get; set; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> wartości wyliczenia."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: FormViewModeEventArgs(FormViewMode,Boolean)
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
- uid: System.Web.UI.WebControls.FormViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewMode
  nameWithType: FormViewMode
  fullName: System.Web.UI.WebControls.FormViewMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
