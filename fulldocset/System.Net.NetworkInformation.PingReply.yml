### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.PingReply
  id: PingReply
  children:
  - System.Net.NetworkInformation.PingReply.Address
  - System.Net.NetworkInformation.PingReply.Buffer
  - System.Net.NetworkInformation.PingReply.Options
  - System.Net.NetworkInformation.PingReply.RoundtripTime
  - System.Net.NetworkInformation.PingReply.Status
  langs:
  - csharp
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
  type: Class
  summary: "Zawiera informacje o stanie oraz dane wynikowe <> </> *> lub <> </> *> operacji."
  remarks: "<xref:System.Net.NetworkInformation.Ping>Klasa próbuje wysłać żądanie echa protokołu komunikatu sterowania Internetem (ICMP) do komputera zdalnego i otrzymywanie informacji z komputera za pośrednictwem komunikatu odpowiedzi echa ICMP.</xref:System.Net.NetworkInformation.Ping> <xref:System.Net.NetworkInformation.Ping>Klasa korzysta z wystąpienia klasy PingReply do zwracania informacji dotyczących operacji, takich jak jego stan i czas potrzebny do wysyłania żądania i odbierania odpowiedzi.</xref:System.Net.NetworkInformation.Ping>       <xref:System.Net.NetworkInformation.Ping.Send%2A>Metody zwrócić wystąpienia klasy PingReply bezpośrednio.</xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Metody zwracają PingReply w <xref:System.Net.NetworkInformation.PingCompletedEventHandler>metody <xref:System.Net.NetworkInformation.PingCompletedEventArgs>parametru.</xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> PingReply jest dostępny za pośrednictwem <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>Właściwości.</xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>       Jeśli wartość <xref:System.Net.NetworkInformation.PingReply.Status%2A>nie jest <xref:System.Net.NetworkInformation.IPStatus>, nie należy używać wartości zwracanych przez <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>lub <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>Właściwości.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>Właściwość, którą będzie zwracać zera, <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>zwraca pustą tablicę, właściwości i <xref:System.Net.NetworkInformation.PingReply.Options%2A>właściwość, którą będzie zwracać `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_6_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_6_1.cpp)]"
  syntax:
    content: public class PingReply
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Address
  id: Address
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pobiera adres hosta, który wysyła odpowiedź echa protokołu komunikatu sterowania Internetem (ICMP)."
  remarks: "Adres zwrócony przez <xref:System.Net.NetworkInformation.Ping.Send%2A>przeciążenia może pochodzi z komputerem zdalnym złośliwego.</xref:System.Net.NetworkInformation.Ping.Send%2A> Nie należy nawiązywać połączenia z komputerem zdalnym przy użyciu tego adresu. Korzystania z serwera DNS, aby określić adres IP komputera, z którym chcesz się połączyć."
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the value of this property.  \n  \n [!code-cs[NclPingSampler#2](~/add/codesnippet/csharp/p-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NclPingSampler#2](~/add/codesnippet/cpp/p-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.IPAddress Address { get; }
    return:
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>Zawierający docelowe dla komunikatu echa protokołu ICMP.</xref:System.Net.IPAddress>"
  overload: System.Net.NetworkInformation.PingReply.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Buffer
  id: Buffer
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pobiera buforu dane otrzymane w wiadomości odpowiedzi echa protokołu komunikatu sterowania Internetem (ICMP)."
  remarks: "Bufor danych wysyłane z żądania echa protokołu ICMP jest zwracana do nadawcy w odpowiedzi echa, można obliczyć czasu podróży pakietu rozmiaru znane. Bufor danych połączone z <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>opcji, może być używany w celu odnalezienia maksymalna jednostka transmisji do ścieżki sieciowej między komputerem źródłowym a docelowym.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Aby uzyskać dodatkowe informacje zobacz &quot;Traceroute&quot; w specyfikacji RFC 1574, sekcji 3.2 dostępne pod adresem http://www.ietf.org.       Bufor domyślne używane z <xref:System.Net.NetworkInformation.Ping.Send%2A>i <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>zawiera 32 bajtów danych.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_1_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_1_1.cpp)]"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica zawierająca dane otrzymane w wiadomości odpowiedzi echa ICMP lub pusta tablica, jeśli nie otrzymano odpowiedzi.</xref:System.Byte>"
  overload: System.Net.NetworkInformation.PingReply.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Options
  id: Options
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pobiera opcje używane do przesyłania do odpowiedzi na żądanie echa protokołu komunikatu sterowania Internetem (ICMP)."
  remarks: "Czas wygaśnięcia definiuje, ile razy węzłów może przekazywać pakietu podczas przekazywania między jego źródłowym i docelowym. Jeśli liczba przekazuje przeskoków, nazywany również przekracza wartość określona dla czas wygaśnięcia, pakiet uważa, że nie można dostarczyć i zostaną odrzucone.       <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Wartości określonej w fragmentacji pakietów formantów żądania echa protokołu ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Jeśli <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar pakietu przekracza maksymalna jednostka transmisji ścieżki sieciowej wykonywaną przez pakiet, pakiet zostanie odrzucony i <xref:System.Net.NetworkInformation.IPStatus>jest zwracany błąd.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.  \n  \n [!code-cs[NclPingSampler#3](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\n [!code-cpp[NclPingSampler#3](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingOptions Options { get; }
    return:
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> obiekt, który zawiera czas wygaśnięcia (TTL) i używana do przesyłania odpowiedzi, jeśli dyrektywa fragmentacji <xref:System.Net.NetworkInformation.PingReply.Status*>jest <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.NetworkInformation.PingReply.Status*>"
  overload: System.Net.NetworkInformation.PingReply.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  id: RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pobiera liczbę milisekund potrzebnych do wysyłania żądania echa protokołu komunikatu sterowania Internetem (ICMP) i odbierania odpowiedniego komunikatu odpowiedzi echa ICMP."
  remarks: "W przypadku niepowodzenia żądania echa czasu RoundtripTime został zgłoszony jako 0, który jest również prawidłową wartość, gdy żądanie zakończy się pomyślnie. Należy sprawdzić <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustalenie, czy wartość zwrócona przez tę właściwość, należy ją ignorować.</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_4_1.cpp)]"
  syntax:
    content: public long RoundtripTime { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>Czas obiegu, który określa w milisekundach.</xref:System.Int64>"
  overload: System.Net.NetworkInformation.PingReply.RoundtripTime*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Status
  id: Status
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pobiera stan próba wysyłania żądania echa protokołu komunikatu sterowania Internetem (ICMP) i odbierania odpowiedniego komunikatu odpowiedzi echa ICMP."
  remarks: "Jeśli wartość stanu nie jest <xref:System.Net.NetworkInformation.IPStatus>, nie należy używać wartości zwracanych przez <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>lub <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>Właściwości.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>i <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>Właściwości zwraca zero i <xref:System.Net.NetworkInformation.PingReply.Options%2A>właściwość, którą będzie zwracać `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/p-system.net.networkinfo_8_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/p-system.net.networkinfo_8_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.IPStatus Status { get; }
    return:
      type: System.Net.NetworkInformation.IPStatus
      description: "<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> Wskazująca wynik żądania."
  overload: System.Net.NetworkInformation.PingReply.Status*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.PingReply.Address
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.PingReply.Buffer
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.PingReply.Options
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.PingReply.Status
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
- uid: System.Net.NetworkInformation.IPStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPStatus
  nameWithType: IPStatus
  fullName: System.Net.NetworkInformation.IPStatus
- uid: System.Net.NetworkInformation.PingReply.Address*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
- uid: System.Net.NetworkInformation.PingReply.Buffer*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
- uid: System.Net.NetworkInformation.PingReply.Options*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
- uid: System.Net.NetworkInformation.PingReply.Status*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
