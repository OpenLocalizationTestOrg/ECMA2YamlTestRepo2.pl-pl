### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DrawTreeNodeEventArgs
  id: DrawTreeNodeEventArgs
  children:
  - System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  - System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  - System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  - System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  - System.Windows.Forms.DrawTreeNodeEventArgs.Node
  - System.Windows.Forms.DrawTreeNodeEventArgs.State
  langs:
  - csharp
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Windows.Forms.TreeView.DrawNode&quot;> </xref> zdarzeń."
  remarks: "Użyj <xref:System.Windows.Forms.TreeView.DrawNode>zdarzeń, aby dostosować wygląd węzłów w <xref:System.Windows.Forms.TreeView>formantu przy użyciu Rysowanie przez właściciela.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode>       <xref:System.Windows.Forms.TreeView.DrawNode>Zdarzenie jest wywoływane przez <xref:System.Windows.Forms.TreeView>decyduje o jego <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>lub <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>i węzeł jest wyświetlany lub aktualizowany.</xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode> DrawTreeNodeEventArgs przekazywane do programu obsługi zdarzeń zawiera informacje o węźle do rysowania, a także udostępnia metody, aby narysować węzeł.       Użyj <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>lub <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>Właściwości, aby pobrać informacje o węźle do rysowania.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Użyj <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A>nie rzeczywista z zakresu określonego przez właściwość <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>Właściwości.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> Aby narysować węzeł, który musi być rysowane przez właściciela systemu operacyjnego, ustaw <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>właściwości `true`.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>       Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, obszarze wskazywanym przez <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>właściwość zawiera części etykiety, węzła tylko.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>ma ustawioną wartość właściwości <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>obszar obejmuje całą węzła, w tym obszarze zwykle używany w przypadku ikony, pola wyboru, plus lub minus znaków i linie łączące węzły.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n Additionally, a handler for the <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event provides hit-testing. By default, a node can be selected only by clicking the region around its label. The <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event handler selects a node that is clicked anywhere within this region or within the region around a node tag, if present.  \n  \n [!code-vb[TreeViewOwnerDraw#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_20_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#1](~/add/codesnippet/cpp/t-system.windows.forms.d_20_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#1](~/add/codesnippet/csharp/t-system.windows.forms.d_20_1.cs)]"
  syntax:
    content: 'public class DrawTreeNodeEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  id: '#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)'
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Forms.DrawTreeNodeEventArgs&quot;> </xref> klasy."
  syntax:
    content: public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> Powierzchni, na którym ma zostać narysowany."
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do rysowania."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> w ramach którego ma zostać narysowany."
    - id: state
      type: System.Windows.Forms.TreeNodeStates
      description: "Bitowe połączenie <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> wartości wskazująca bieżący stan <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> do rysowania."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  id: Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera rozmiar i położenie <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> do rysowania."
  remarks: "Lokalizacji określonej przez właściwość ta jest określana względem lewego górnego rogu <xref:System.Windows.Forms.TreeView>kontroli.</xref:System.Windows.Forms.TreeView>       Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode>obszarze określonej przez właściwość granice to region, w którym można kliknąć węzeł aby go zaznaczyć.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Po narysowaniu poza tym regionie testu trafienia powinien zapewnić swoim własnym kodem do wybranie węzła, gdy zostanie kliknięty ich widoczny obszar. Można również podać własne testu trafienia kodu, gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>wartość właściwości jest równa <xref:System.Windows.Forms.TreeViewDrawMode>.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> W tym trybie właściwości granice węzła całego obejmuje wchodzące w skład szerokość całego <xref:System.Windows.Forms.TreeView>kontrolować, zamiast region testu trafienia właśnie.</xref:System.Windows.Forms.TreeView>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_14_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_14_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_14_1.cs)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> reprezentujący granice <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> do rysowania."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  id: DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> ma być rysowany przez system operacyjny, a nie są rysowane przez właściciela."
  remarks: "Ta właściwość jest ustawiana `true` dla węzłów, które chcesz dostosować w przypadku obsługi <xref:System.Windows.Forms.TreeView.DrawNode>zdarzeń.</xref:System.Windows.Forms.TreeView.DrawNode> Na przykład jest to przydatne, gdy chcesz dostosować tylko węzły, które znajdują się w określonym stanie."
  example:
  - "The following code example demonstrates the use of this property. In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tag and a custom highlight color manually for the selected node. Nodes that are not selected do not need customization. For unselected nodes, the DrawDefault property is set to `true` so that they will be drawn by the operating system and will not have a customized appearance.  \n  \n> [!NOTE]\n>  If you draw a node manually and also set the DrawDefault property to `true`, some or all of what you draw may be overwritten by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_319_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_319_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_319_1.cs)]"
  syntax:
    content: public bool DrawDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli węzeł ma być rysowany przez system operacyjny; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli węzeł zostanie narysowana programu obsługi zdarzeń. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  id: Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera <xref href=&quot;System.Drawing.Graphics&quot;> </xref> obiekt używany do rysowania <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  remarks: "<xref:System.Drawing.Graphics>Klasa udostępnia właściwości i metody, które są przydatne do rysowania na urządzenia wyświetlającego.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_326_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_326_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_326_1.cs)]"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to draw the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  id: Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> do rysowania."
  remarks: "Ta właściwość służy do uzyskania dostępu <xref:System.Windows.Forms.TreeNode>obiektu do rysowania.</xref:System.Windows.Forms.TreeNode> Jest to przydatne podczas <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>właściwość nie ma wystarczających informacji do własnych potrzeb.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>Właściwość zapewnia tylko podstawowe informacje o stanie pomocne, na przykład, aby ustalić, czy węzeł jest zaznaczona, zaznaczone lub fokus.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Właściwość węzła z drugiej strony, zezwala na dostęp do wszystkich elementów członkowskich <xref:System.Windows.Forms.TreeNode>obiektu.</xref:System.Windows.Forms.TreeNode> Należy uruchomić węzeł bezpośrednio, na przykład, jeśli chcesz określić jego stanu rozszerzenia."
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_198_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_198_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_198_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNode Node { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do rysowania."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  id: State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera bieżący stan <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> do rysowania."
  remarks: "Użyj tej właściwości, aby sprawdzić czy <xref:System.Windows.Forms.TreeNode>obiekt do rysowania znajduje się w określonym stanie.</xref:System.Windows.Forms.TreeNode> Ta właściwość zapewnia tylko podstawowe informacje o stanie dotyczące węzła. Tej właściwości, na przykład służy do sprawdzenia, czy węzeł jest zaznaczone, zaznaczone, fokus. Jeśli potrzebujesz dowiedzieć się więcej, należy pobrać węzła za pośrednictwem <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>Właściwości.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> Na przykład, aby ustalić, czy węzeł jest rozwinięty, należy pobrać węzeł i sprawdź <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>Właściwości.</xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_85_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_85_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_85_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNodeStates State { get; }
    return:
      type: System.Windows.Forms.TreeNodeStates
      description: "Bitowe połączenie <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> wartości wskazująca bieżący stan <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.TreeNodeStates
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNodeStates
  nameWithType: TreeNodeStates
  fullName: System.Windows.Forms.TreeNodeStates
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
