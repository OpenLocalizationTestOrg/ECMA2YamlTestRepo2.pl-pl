### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileInfoCollection
  id: ProfileInfoCollection
  children:
  - System.Web.Profile.ProfileInfoCollection.#ctor
  - System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  - System.Web.Profile.ProfileInfoCollection.Clear
  - System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  - System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  - System.Web.Profile.ProfileInfoCollection.Count
  - System.Web.Profile.ProfileInfoCollection.GetEnumerator
  - System.Web.Profile.ProfileInfoCollection.IsSynchronized
  - System.Web.Profile.ProfileInfoCollection.Item(System.String)
  - System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  - System.Web.Profile.ProfileInfoCollection.SetReadOnly
  - System.Web.Profile.ProfileInfoCollection.SyncRoot
  langs:
  - csharp
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
  type: Class
  summary: "Kolekcja <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektów."
  remarks: "Obiekt ProfileInfoCollection zawiera <xref:System.Web.Profile.ProfileInfo>obiekty reprezentujące profilów użytkownika z źródła danych.</xref:System.Web.Profile.ProfileInfo> ProfileInfoCollection jest zwracana z <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>oraz <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>metod <xref:System.Web.Profile.ProfileProvider>.</xref:System.Web.Profile.ProfileProvider> </xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>       ProfileInfoCollection mogą być dostarczane do <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>metodę, aby usunąć informacje o profilu i właściwości ze źródła danych.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>"
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> and <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> methods. The user can pass the ProfileInfoCollection returned by the `find` methods to the <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method to delete the associated profiles from the data source.  \n  \n [!code-vb[System.Web.Profile.SqlProfileProvider#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_3_1.aspx)]\n [!code-cs[System.Web.Profile.SqlProfileProvider#4](~/add/codesnippet/csharp/t-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: 'public sealed class ProfileInfoCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: ProfileInfoCollection()
  nameWithType: ProfileInfoCollection.ProfileInfoCollection()
  fullName: System.Web.Profile.ProfileInfoCollection.ProfileInfoCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Tworzy nowy, pusty <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>."
  remarks: "A <xref:System.Web.Profile.ProfileInfoCollection>jest tworzony przez implementacje dostawcy profilu i zwrócony z <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>oraz <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>metod <xref:System.Web.Profile.ProfileProvider>klasy abstrakcyjnej.</xref:System.Web.Profile.ProfileProvider> </xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>"
  example:
  - For an example of a <xref:System.Web.Profile.ProfileProvider> implementation that creates a <xref:System.Web.Profile.ProfileInfoCollection> for user profiles in a data store, see [Implementing a Profile Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public ProfileInfoCollection ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  id: Add(System.Web.Profile.ProfileInfo)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Add(ProfileInfo)
  nameWithType: ProfileInfoCollection.Add(ProfileInfo)
  fullName: System.Web.Profile.ProfileInfoCollection.Add(ProfileInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Dodaje określony <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektu do kolekcji."
  remarks: "Metoda Add jest najczęściej używany przy implementacji dostawcy profilu do wypełnienia <xref:System.Web.Profile.ProfileInfoCollection>do zwrócenia z <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>, lub <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>metody <xref:System.Web.Profile.ProfileProvider>klasy abstrakcyjnej.</xref:System.Web.Profile.ProfileProvider> </xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>"
  example:
  - For an example of a <xref:System.Web.Profile.ProfileProvider> implementation that creates a <xref:System.Web.Profile.ProfileInfoCollection> for user profiles in a data store, see [Implementing a Profile Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public void Add (System.Web.Profile.ProfileInfo profileInfo);
    parameters:
    - id: profileInfo
      type: System.Web.Profile.ProfileInfo
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiekt do dodania do kolekcji."
  overload: System.Web.Profile.ProfileInfoCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiekt o takim samym <xref:System.Web.Profile.ProfileInfo.UserName*>wartość jako <code> profileInfo </code> już istnieje w kolekcji.</xref:System.Web.Profile.ProfileInfo.UserName*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profileInfo</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Web.Profile.ProfileInfo.UserName*> property of <code>profileInfo</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Clear
  id: Clear
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ProfileInfoCollection.Clear()
  fullName: System.Web.Profile.ProfileInfoCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Usuwa wszystkie <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektów z kolekcji."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ProfileInfoCollection.CopyTo(Array,Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Kopie <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> z tablicą jednowymiarową."
  remarks: "Ta metoda używa <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>do kopii <xref:System.Web.Profile.ProfileInfo>obiektów do określonego <xref:System.Array>.</xref:System.Array> </xref:System.Web.Profile.ProfileInfo> </xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Jednowymiarowa <xref:System.Array>który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Rozpoczyna się od zera indeks w tablicy, od których kopiowanie."
  overload: System.Web.Profile.ProfileInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  id: CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: CopyTo(ProfileInfo[],Int32)
  nameWithType: ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Kopie <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> z tablicą jednowymiarową typu <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref>."
  remarks: "Ta metoda używa <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>do skopiowania <xref:System.Web.Profile.ProfileInfo>obiektów do określonej tablicy.</xref:System.Web.Profile.ProfileInfo> </xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (System.Web.Profile.ProfileInfo[] array, int index);
    parameters:
    - id: array
      type: System.Web.Profile.ProfileInfo[]
      description: "Jednowymiarowa tablica typu <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>. Tablica musi mieć indeksowania liczony od zera."
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Web.Profile.ProfileInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Count
  id: Count
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Count
  nameWithType: ProfileInfoCollection.Count
  fullName: System.Web.Profile.ProfileInfoCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Pobiera liczbę <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektów w kolekcji."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektów w kolekcji."
  overload: System.Web.Profile.ProfileInfoCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ProfileInfoCollection.GetEnumerator()
  fullName: System.Web.Profile.ProfileInfoCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Pobiera moduł wyliczający, który można wykonać iterację <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>."
  remarks: "Moduły wyliczające Zezwalaj tylko na odczytywanie danych w kolekcji. Wyliczenia nie można zmodyfikować kolekcji źródłowej. Aby uzyskać więcej informacji zobacz <xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Dla całego <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.Profile.ProfileInfoCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
  fullName: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Pobiera wartość wskazującą, czy kolekcja informacje o profilu jest wątku jest bezpieczne."
  remarks: "Kod aplikacji nie korzysta z zwykle tej właściwości."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Zawsze <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, ponieważ kolekcje informacji o profilu obsługującej wielowątkowość nie są obsługiwane."
  overload: System.Web.Profile.ProfileInfoCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileInfoCollection.Item(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Pobiera <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektu w kolekcji, odwołuje się określony <xref:System.Web.Profile.ProfileInfo.UserName*>.</xref:System.Web.Profile.ProfileInfo.UserName*>"
  syntax:
    content: public System.Web.Profile.ProfileInfo this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Web.Profile.ProfileInfo.UserName*>z <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektu można pobrać z kolekcji.</xref:System.Web.Profile.ProfileInfo.UserName*>"
    return:
      type: System.Web.Profile.ProfileInfo
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektu dla określonej nazwy użytkownika. Jeśli nazwa nie zostanie znaleziony w kolekcji, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> jest zwracany."
  overload: System.Web.Profile.ProfileInfoCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ProfileInfoCollection.Remove(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Usuwa <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiektu z określonej nazwy użytkownika z kolekcji."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Web.Profile.ProfileInfo.UserName*>z <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> obiekt ma zostać usunięty z kolekcji.</xref:System.Web.Profile.ProfileInfo.UserName*>"
  overload: System.Web.Profile.ProfileInfoCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kolekcja jest tylko do odczytu."
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ProfileInfoCollection.SetReadOnly()
  fullName: System.Web.Profile.ProfileInfoCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Udostępnia zawartość <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> tylko do odczytu."
  remarks: "Znaczniki metody SetReadOnly <xref:System.Web.Profile.ProfileInfoCollection>jako tylko do odczytu, aby <xref:System.Web.Profile.ProfileInfo>obiektów nie może być dodany do ani usunąć z kolekcji.</xref:System.Web.Profile.ProfileInfo> </xref:System.Web.Profile.ProfileInfoCollection> Po wywołaniu metody SetReadOnly, nie można zmienić <xref:System.Web.Profile.ProfileInfoCollection>do odczytu/zapisu.</xref:System.Web.Profile.ProfileInfoCollection>"
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Web.Profile.ProfileInfoCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.Profile.ProfileInfoCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
  fullName: System.Web.Profile.ProfileInfoCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Pobiera głównego synchronizacji."
  remarks: "Kod aplikacji nie korzysta z zwykle tej właściwości."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Zawsze <xref uid=&quot;langword_csharp_this&quot; name=&quot;this&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Me&quot; name=&quot;Me&quot; href=&quot;&quot;> </xref> w języku Visual Basic), ponieważ synchronizacja <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> obiektów nie jest obsługiwane."
  overload: System.Web.Profile.ProfileInfoCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Profile.ProfileInfoCollection.#ctor
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: ProfileInfoCollection()
  nameWithType: ProfileInfoCollection.ProfileInfoCollection()
  fullName: System.Web.Profile.ProfileInfoCollection.ProfileInfoCollection()
- uid: System.Web.Profile.ProfileInfoCollection.Add(System.Web.Profile.ProfileInfo)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Add(ProfileInfo)
  nameWithType: ProfileInfoCollection.Add(ProfileInfo)
  fullName: System.Web.Profile.ProfileInfoCollection.Add(ProfileInfo)
- uid: System.Web.Profile.ProfileInfo
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfo
  nameWithType: ProfileInfo
  fullName: System.Web.Profile.ProfileInfo
- uid: System.Web.Profile.ProfileInfoCollection.Clear
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Clear()
  nameWithType: ProfileInfoCollection.Clear()
  fullName: System.Web.Profile.ProfileInfoCollection.Clear()
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ProfileInfoCollection.CopyTo(Array,Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo(System.Web.Profile.ProfileInfo[],System.Int32)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo(ProfileInfo[],Int32)
  nameWithType: ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
  fullName: System.Web.Profile.ProfileInfoCollection.CopyTo(ProfileInfo[],Int32)
- uid: System.Web.Profile.ProfileInfo[]
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfo
  nameWithType: ProfileInfo
  fullName: System.Web.Profile.ProfileInfo[]
  spec.csharp:
  - uid: System.Web.Profile.ProfileInfo
    name: ProfileInfo
    nameWithType: ProfileInfo
    fullName: ProfileInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileInfoCollection.Count
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Count
  nameWithType: ProfileInfoCollection.Count
  fullName: System.Web.Profile.ProfileInfoCollection.Count
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ProfileInfoCollection.GetEnumerator()
  fullName: System.Web.Profile.ProfileInfoCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
  fullName: System.Web.Profile.ProfileInfoCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileInfoCollection.Item(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Item(String)
  nameWithType: ProfileInfoCollection.Item(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileInfoCollection.Remove(System.String)
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ProfileInfoCollection.Remove(String)
  fullName: System.Web.Profile.ProfileInfoCollection.Remove(String)
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ProfileInfoCollection.SetReadOnly()
  fullName: System.Web.Profile.ProfileInfoCollection.SetReadOnly()
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
  fullName: System.Web.Profile.ProfileInfoCollection.SyncRoot
- uid: System.Web.Profile.ProfileInfoCollection.#ctor*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection.ProfileInfoCollection
- uid: System.Web.Profile.ProfileInfoCollection.Add*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Add
  nameWithType: ProfileInfoCollection.Add
- uid: System.Web.Profile.ProfileInfoCollection.Clear*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Clear
  nameWithType: ProfileInfoCollection.Clear
- uid: System.Web.Profile.ProfileInfoCollection.CopyTo*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProfileInfoCollection.CopyTo
- uid: System.Web.Profile.ProfileInfoCollection.Count*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Count
  nameWithType: ProfileInfoCollection.Count
- uid: System.Web.Profile.ProfileInfoCollection.GetEnumerator*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ProfileInfoCollection.GetEnumerator
- uid: System.Web.Profile.ProfileInfoCollection.IsSynchronized*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProfileInfoCollection.IsSynchronized
- uid: System.Web.Profile.ProfileInfoCollection.Item*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Item
  nameWithType: ProfileInfoCollection.Item
- uid: System.Web.Profile.ProfileInfoCollection.Remove*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: Remove
  nameWithType: ProfileInfoCollection.Remove
- uid: System.Web.Profile.ProfileInfoCollection.SetReadOnly*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ProfileInfoCollection.SetReadOnly
- uid: System.Web.Profile.ProfileInfoCollection.SyncRoot*
  parent: System.Web.Profile.ProfileInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProfileInfoCollection.SyncRoot
