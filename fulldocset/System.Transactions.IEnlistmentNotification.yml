### YamlMime:ManagedReference
items:
- uid: System.Transactions.IEnlistmentNotification
  id: IEnlistmentNotification
  children:
  - System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  - System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  langs:
  - csharp
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
  type: Interface
  summary: "Opisuje interfejs, który Menedżer zasobów powinien implementować zapewnienie wywołania zwrotne dwie fazy zatwierdzania powiadomień dla Menedżera transakcji na rejestrowanie udziału."
  remarks: "Aby Menedżera zasobów do udziału w transakcji musisz zarejestrować w transakcji za pośrednictwem Menedżera transakcji. <xref:System.Transactions.Transaction>Klasa definiuje zestaw metod, których nazwy zaczynają się od `Enlist` tę funkcję, która udostępnia.</xref:System.Transactions.Transaction> Różnych `Enlist` metody odpowiadają różne rodzaje rejestracji, który mógł zostać maanger zasobów.       Ta klasa Opisuje interfejs, który Menedżer zasobów powinien implementować zapewnienie wywołania zwrotne dwie fazy zatwierdzania powiadomień dla Menedżera transakcji na rejestrowanie udziału. Dla każdego Menedżera zasobów implementacji interfejsu IEnlistmentNotification, należy zarejestrować je przy użyciu <xref:System.Transactions.Transaction.EnlistVolatile%2A>metody lub <xref:System.Transactions.Transaction.EnlistDurable%2A>metody <xref:System.Transactions.Transaction>klasy, w zależności od tego, czy zasób jest nietrwałe lub trwałe.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A> Aby uzyskać więcej informacji o rejestracji i 2PC, zobacz [rejestrowanie zasobów jako uczestnicy transakcji](~/add/includes/ajax-current-ext-md.md) i [Zatwierdzanie transakcji w jednofazowy i wielu fazy](~/add/includes/ajax-current-ext-md.md) odpowiednio.       Menedżer transakcji powiadamia obiektu zarejestrowane na różnych etapach protokołu dwie fazy zatwierdzić za pomocą następujących metod.      | Metoda | Opis elementu |   |------------|-----------------|   | <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>| Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w pierwszej fazie transakcji, gdy Menedżer transakcji zapyta uczestników, czy można zatwierdzić transakcji. |   | <xref:System.Transactions.IEnlistmentNotification.Commit%2A>| Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja zostanie zatwierdzone. |   | <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>| Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja została przerwana, (tj. przywróceniu). |   | <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>| Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja jest wątpliwa. |      > [!NOTE] > Należy zwrócić uwagę, że może nie być wysyłane powiadomienia sekwencyjnie i w określonej kolejności.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>"
  example:
  - "The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/t-system.transactions.ie_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/t-system.transactions.ie_1.vb)]"
  syntax:
    content: public interface IEnlistmentNotification
  implements: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  id: Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Powiadamia zarejestrowane obiekt, że transakcja zostaje zatwierdzona."
  remarks: "Menedżer transakcji wywołuje ta metoda obiektu zarejestrowane w drugiej fazie zobowiązań, gdy go powoduje, że wszystkie osoby uczestniczące w niej można zatwierdzić transakcji.       Menedżer zasobów wykonać pracę, wymagane do Zakończ transakcję, a następnie powiadamia TM, który zakończył się przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A>Metoda `enlistment` parametru.</xref:System.Transactions.Enlistment.Done%2A>       Jeśli Menedżer zasobów został zarejestrowany trwałym, ale nie odpowiada wywołując <xref:System.Transactions.Enlistment.Done%2A>metody Menedżera transakcji jest nie wiesz, że Menedżer zasobów odebrał wywołanie zatwierdzania.</xref:System.Transactions.Enlistment.Done%2A> Tak Menedżer transakcji śledzi oczekiwania na odpowiedź i przechowuje informacje dotyczące tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A>jest nigdy nie wywołuje się, ta część informacji jest przechowywana wokół przez nieograniczony czas w pamięci lub zasobów całego systemu.</xref:System.Transactions.Enlistment.Done%2A> Powoduje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonych może to ostatecznie wypełnienia dziennika usługi MSDTC, który przerywa proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowo i ciągłe wzrost zużycia pamięci procesu Menedżera zasobów.</xref:System.Transactions> W związku z tym jest niezwykle ważny, należy wywołać <xref:System.Transactions.Enlistment.Done%2A>metody po wykonuje się za pomocą Menedżera zasobów z Praca przygotować.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Commit (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "<xref href=&quot;System.Transactions.Enlistment&quot;> </xref> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji."
  overload: System.Transactions.IEnlistmentNotification.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  id: InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Powiadamia zarejestrowane obiektu, który stan transakcji jest wątpliwa."
  remarks: "Ta metoda jest wywoływana volatile zasobów, gdy Menedżera transakcji została wywołana w operacji przekazywania jednej fazie do pojedynczego zasobu trwałe, a następnie trwałe zasobów utracono połączenie przed pobierania wyników transakcji. W tym momencie wynik transakcji nie można bezpiecznie określić.       Jak InDoubt jest uznawany za stan końcowy dla transakcji, należy nie wywołują <xref:System.Transactions.IEnlistmentNotification.Commit%2A>lub <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>po wywołaniu metody InDoubt.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A>      > [!NOTE] > Implementacji tej metody dla zasobu volatile powinno wprowadzić niezależnie od siebie operacji odzyskiwania lub zawierania w odpowiednich danych.  Należy także wywołać <xref:System.Transactions.Enlistment.Done%2A>Metoda na `enlistment` parametru po zakończeniu pracy.</xref:System.Transactions.Enlistment.Done%2A>       Jeśli Menedżer zasobów został zarejestrowany trwałym, ale nie odpowiada przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A>metody Menedżera transakcji jest nie wiesz, że Menedżer zasobów odebrał wywołanie InDoubt.</xref:System.Transactions.Enlistment.Done%2A> Tak Menedżer transakcji śledzi oczekiwania na odpowiedź i przechowuje informacje dotyczące tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A>jest nigdy nie wywołuje się, ta część informacji jest przechowywana wokół przez nieograniczony czas w pamięci lub zasobów całego systemu.</xref:System.Transactions.Enlistment.Done%2A> Powoduje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonych może to ostatecznie wypełnienia dziennika usługi MSDTC, który przerywa proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowo i ciągłe wzrost zużycia pamięci procesu Menedżera zasobów.</xref:System.Transactions> W związku z tym jest niezwykle ważny, należy wywołać <xref:System.Transactions.Enlistment.Done%2A>metody po wykonuje się za pomocą Menedżera zasobów z Praca przygotować.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void InDoubt (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "<xref href=&quot;System.Transactions.Enlistment&quot;> </xref> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji."
  overload: System.Transactions.IEnlistmentNotification.InDoubt*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  id: Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Powiadamia zarejestrowane obiektu przygotowanym transakcji dla zobowiązań."
  remarks: "Menedżer transakcji wywołanie tej metody zasobów Menedżera podczas fazy 1 zobowiązania, gdy sprawdza, czy uczestników Określa, czy można zatwierdzić transakcji.       Podczas wdrażania Menedżera zasobów trwałe, należy rejestrować Twojej przygotowanie rekordu w tej fazie. Rekord powinien zawierać wszystkie informacje niezbędne do wykonania odzyskiwania. Dotyczy to również <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>właściwość, która została przekazana do Menedżera transakcji w <xref:System.Transactions.TransactionManager.Reenlist%2A>metody podczas odzyskiwania.</xref:System.Transactions.TransactionManager.Reenlist%2A> </xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> Aby uzyskać więcej informacji dotyczących odzyskiwania, zobacz [wykonywania odzyskiwania](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       Menedżera zasobów, należy wykonać wszystkie pracy, które muszą zostać ukończone przed wywołaniem <xref:System.Transactions.PreparingEnlistment.Prepared%2A>metody `preparingEnlistment` parametr, aby wskazać jej głos dla zobowiązań.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Należy upewnić się, że jest to zrobić przed rozpoczęciem odbierania powiadomienia Faza 2 takich jak zatwierdzić wycofania lub wątpliwe. Jest to spowodowane powiadomienia Faza 2 może się zdarzyć wbudowany w tym samym wątku, który wywołał <xref:System.Transactions.PreparingEnlistment.Prepared%2A>metody w kroku 1.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> W efekcie nie powinien wykonać pracę po <xref:System.Transactions.PreparingEnlistment.Prepared%2A>połączenia (na przykład zwolnić blokady), który można oczekiwać na ukończenie przed odbieranie powiadomień Faza 2.</xref:System.Transactions.PreparingEnlistment.Prepared%2A>       Możesz także wywołać metodę `preparingEnlistment` parametr, aby wskazać głos na potrzeby wycofywania.       Jeśli chcesz obiektu jedynie przestrzegać i reagowania na postęp transakcji, bez uczestniczące w niej implementacji tej metody należy wywołać <xref:System.Transactions.Enlistment.Done%2A>metody `preparingEnlistment` parametru po zakończeniu pracy.</xref:System.Transactions.Enlistment.Done%2A> W ten sposób Menedżera zasobów nie otrzyma powiadomienia Faza 2."
  syntax:
    content: public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);
    parameters:
    - id: preparingEnlistment
      type: System.Transactions.PreparingEnlistment
      description: "A <xref href=&quot;System.Transactions.PreparingEnlistment&quot;> </xref> obiekt używany do wysyłania odpowiedzi do Menedżera transakcji."
  overload: System.Transactions.IEnlistmentNotification.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  id: Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Powiadamia zarejestrowane obiektu, który transakcji jest wycofywana (przerwana)."
  remarks: "Menedżer transakcji wywołuje tę metodę, zarejestrowane obiektu, gdy transakcja jest wycofywana (zostało przerwane) z powodu jednego lub więcej uczestników transakcji niemożność zatwierdzić transakcji.       Menedżer zasobów wykonać pracę, wymagane do Zakończ transakcję, a następnie powiadamia TM, który zakończył się przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A>Metoda `enlistment` parametru.</xref:System.Transactions.Enlistment.Done%2A>       Jeśli Menedżer zasobów został zarejestrowany trwałym, ale nie odpowiada przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A>metody Menedżera transakcji jest nie wiesz, że Menedżer zasobów odebrał wywołanie wycofywania.</xref:System.Transactions.Enlistment.Done%2A> Tak Menedżer transakcji śledzi oczekiwania na odpowiedź i przechowuje informacje dotyczące tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A>jest nigdy nie wywołuje się, ta część informacji jest przechowywana wokół przez nieograniczony czas w pamięci lub zasobów całego systemu.</xref:System.Transactions.Enlistment.Done%2A> Powoduje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonych może to ostatecznie wypełnienia dziennika usługi MSDTC, który przerywa proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowo i ciągłe wzrost zużycia pamięci procesu Menedżera zasobów.</xref:System.Transactions> W związku z tym jest niezwykle ważny, należy wywołać <xref:System.Transactions.Enlistment.Done%2A>metody po wykonuje się za pomocą Menedżera zasobów z Praca przygotować.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Rollback (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "A <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> obiekt używany do wysyłania odpowiedzi do Menedżera transakcji."
  overload: System.Transactions.IEnlistmentNotification.Rollback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
- uid: System.Transactions.PreparingEnlistment
  parent: System.Transactions
  isExternal: false
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Commit*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit
  nameWithType: IEnlistmentNotification.Commit
- uid: System.Transactions.IEnlistmentNotification.InDoubt*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt
  nameWithType: IEnlistmentNotification.InDoubt
- uid: System.Transactions.IEnlistmentNotification.Prepare*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare
  nameWithType: IEnlistmentNotification.Prepare
- uid: System.Transactions.IEnlistmentNotification.Rollback*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback
  nameWithType: IEnlistmentNotification.Rollback
