### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.HttpListenerElement
  id: HttpListenerElement
  children:
  - System.Net.Configuration.HttpListenerElement.#ctor
  - System.Net.Configuration.HttpListenerElement.Properties
  - System.Net.Configuration.HttpListenerElement.Timeouts
  - System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  langs:
  - csharp
  name: HttpListenerElement
  nameWithType: HttpListenerElement
  fullName: System.Net.Configuration.HttpListenerElement
  type: Class
  summary: "Reprezentuje element HttpListener w pliku konfiguracji. Ta klasa nie może być dziedziczona."
  remarks: "This class corresponds to the \\<httpListener> Element (Network Settings) configuration element. This class provides programmatic access to information that can be stored in configuration files.  \n  \n The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.  \n  \n When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property.  \n  \n The `http.sys` service exposes two request URI strings:  \n  \n-   Raw URI  \n  \n-   Converted URI  \n  \n The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:  \n  \n `GET /path/`  \n  \n `Host: www.contoso.com`  \n  \n The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\". This represents the string following the HTTP verb as it was sent over the network.  \n  \n The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) structure.  \n  \n In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:  \n  \n `http://www.contoso.com/path/`  \n  \n The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:  \n  \n-   Un-escapes all percent encoded values.  \n  \n-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).  \n  \n-   Executes other normalization steps, like path compression.  \n  \n Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.  \n  \n Therefore `http.sys` provides two registry keys for modifying the process:  \n  \n|Registry Key|Default Value|Description|  \n|------------------|-------------------|-----------------|  \n|EnableNonUTF8|1|If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.|  \n|FavorUTF8|1|If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|  \n  \n When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \n  \n There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":  \n  \n `http://www.contoso.com/Customer('1%2F3812')/`  \n  \n Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.  \n  \n Passing the string to Uri constructor will lead to the following URI:  \n  \n `http://www.contoso.com/Customer('1/3812')/`  \n  \n Splitting the path into its segments would result in the following elements:  \n  \n `Customer('1`  \n  \n `3812')`  \n  \n This is not the intent of the sender of the request.  \n  \n If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property."
  syntax:
    content: 'public sealed class HttpListenerElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: System.Net.Configuration.HttpListenerElement.HttpListenerElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Configuration.HttpListenerElement&quot;> </xref> klasy."
  syntax:
    content: public HttpListenerElement ();
    parameters: []
  overload: System.Net.Configuration.HttpListenerElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.Properties
  id: Properties
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: System.Net.Configuration.HttpListenerElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Do dodania."
  overload: System.Net.Configuration.HttpListenerElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  id: Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: System.Net.Configuration.HttpListenerElement.Timeouts
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Pobiera domyślny limit czasu elementów używanych do <xref href=&quot;System.Net.HttpListener&quot;> </xref> obiektu."
  syntax:
    content: public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }
    return:
      type: System.Net.Configuration.HttpListenerTimeoutsElement
      description: "Returns <xref href=&quot;System.Net.Configuration.HttpListenerTimeoutsElement&quot;></xref>.       Elementów limitu czasu używanych do <xref href=&quot;System.Net.HttpListener&quot;> </xref> obiektu."
  overload: System.Net.Configuration.HttpListenerElement.Timeouts*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  id: UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Net.HttpListener&quot;> </xref> używa raw URI niezmienionym znaczeniu zamiast przekonwertowanego identyfikatora URI."
  remarks: "Właściwość UnescapeRequestUrl wskazuje, czy <xref:System.Net.HttpListener>używa raw URI niezmienionym znaczeniu zamiast przekonwertowanego identyfikatora URI, gdzie wartości procent, kodowane są konwertowane, i są pobierane z procedurą normalizacji.</xref:System.Net.HttpListener>       Gdy <xref:System.Net.HttpListener>wystąpienia odbiera żądanie za pośrednictwem `http.sys` usługi, tworzy wystąpienie ciągu identyfikatora URI dostarczonych przez `http.sys`i uwidacznia go jako <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName>Właściwości.</xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> </xref:System.Net.HttpListener>       `http.sys` Usługi udostępnia dwa ciągi identyfikatora URI żądania: - Raw URI - przekonwertować identyfikator URI raw identyfikatora URI jest <xref:System.Uri?displayProperty=fullName>dostępne w wierszu żądania żądania HTTP: `GET /path/` `Host: www.contoso.com` raw udostępniane przez identyfikator URI `http.sys` dla żądania wymienionych powyżej, jest &quot;/ path /&quot;.       </xref:System.Uri?displayProperty=fullName> Reprezentuje ciąg następujący zlecenie HTTP, jak została wysłana przez sieć.       `http.sys` Usługi tworzy przekonwertowanego identyfikatora URI na podstawie informacji dostępnych w żądaniu za pomocą identyfikatora URI, dostępne w wierszu żądania HTTP i powinny zostać przekazane nagłówek hosta, aby określić serwer pochodzenia żądania. Jest to realizowane przez porównanie informacji z żądania z zestawem zarejestrowanych prefiksów identyfikatorów URI. W dokumentacji zestawu SDK serwera HTTP, który odwołuje się do tego przekonwertowanego identyfikatora URI jako [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) struktury.       Aby można było porównać żądanie z zarejestrowanych prefiksów identyfikatorów URI, należy jednak wykonać niektóre normalizacji na żądanie. Na przykład powyżej przekonwertowanego identyfikatora URI może się następująco: `http://www.contoso.com/path/` `http.sys` usługi łączy <xref:System.Uri.Host%2A?displayProperty=fullName>wartość właściwości i ciąg w wierszu żądania do utworzenia identyfikatora URI przekonwertowana.</xref:System.Uri.Host%2A?displayProperty=fullName> Ponadto `http.sys` i <xref:System.Uri?displayProperty=fullName>klasy również wykonać następujące czynności:-Un specjalne procent wszystkich wartości zakodowanej.</xref:System.Uri?displayProperty=fullName>      -Konwertuje znaki spoza zestawu ASCII procent, kodowane reprezentacji znaków UTF-16. Należy pamiętać, że oraz znaków Unicode (kodowanie Unicode w formacie % uXXXX) są obsługiwane znaki UTF-8 i ANSI/zestawów znaków Dwubajtowych.      -Wykonuje inne czynności normalizacji, takie jak ścieżka kompresji.       Ponieważ żądanie nie zawiera żadnych informacji o kodowanie używane z algorytmem procent wartości, nie może być określić poprawne kodowanie właśnie, analizując kodowany w formacie procent wartości.       W związku z tym `http.sys` zawiera dwa klucze rejestru do modyfikowania proces: | Klucz rejestru | Wartość domyślna | Opis elementu |   |------------------|-------------------|-----------------|   | EnableNonUTF8 |&1; | Jeśli zero, `http.sys` akceptuje tylko adresy URL algorytmem UTF-8.<br /><br /> Jeśli niezerową, `http.sys` również akceptuje kodowaniu ANSI lub kodowany w formacie DBCS adresów URL w żądaniach. |   | FavorUTF8 |&1; | Jeśli niezerową, `http.sys` zawsze próbuje dekodowanie adresu URL jako UTF-8 najpierw; Jeśli tej konwersji nie powiedzie się i EnableNonUTF8 jest różna od zera, sterownik Http.sys, a następnie próbuje zdekodować kodowaniu ANSI lub zestawów znaków Dwubajtowych.<br /><br /> Jeśli zero (i EnableNonUTF8 jest różna od zera) `http.sys` podejmuje próbę zdekodowania kodowaniu ANSI lub DBCS; Jeśli się nie powiedzie, próby konwersji UTF-8. |       Gdy <xref:System.Net.HttpListener>odbiera żądanie, używa przekonwertowanego identyfikatora URI z `http.sys` jako wejściowych do <xref:System.Net.HttpListenerRequest.Url%2A>Właściwości.</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Net.HttpListener>       Istnieje potrzeba do obsługi znaki oprócz znaków i liczb w identyfikatorów URI. Przykładem jest następujący identyfikator URI, który służy do pobierania informacji klienta dla klienta &quot;1/3812&quot; number: `http://www.contoso.com/Customer(&quot;1%2F3812&quot;)/` należy zwrócić uwagę ukośnika procent, kodowane w identyfikatorze Uri (%&2;F). Jest to konieczne, ponieważ w takim przypadku znaku ukośnika reprezentuje danych i nie ogranicznik ścieżki.       Przekazywanie ciągu identyfikatora Uri konstruktora doprowadzi do następującego identyfikatora URI: `http://www.contoso.com/Customer(&quot;1/3812&quot;)/` dzielenia na jego segmenty ścieżki spowoduje następujące elementy: `Customer(&quot;1` `3812&quot;)` nie jest celem nadawca żądania.              Jeśli właściwość UnescapeRequestUrl jest ustawiona na wartość false, a następnie po <xref:System.Net.HttpListener>odbiera żądanie, używa raw URI zamiast przekonwertowanego identyfikatora URI z `http.sys` jako wejściowych do <xref:System.Net.HttpListenerRequest.Url%2A>Właściwości.</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Net.HttpListener>"
  syntax:
    content: public bool UnescapeRequestUrl { get; }
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy <xref href=&quot;System.Net.HttpListener&quot;> </xref> używa raw URI niezmienionym znaczeniu zamiast przekonwertowanego identyfikatora URI."
  overload: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: System.Net.Configuration.HttpListenerElement.HttpListenerElement()
- uid: System.Net.Configuration.HttpListenerElement.Properties
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: System.Net.Configuration.HttpListenerElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: System.Net.Configuration.HttpListenerElement.Timeouts
- uid: System.Net.Configuration.HttpListenerTimeoutsElement
  parent: System.Net.Configuration
  isExternal: false
  name: HttpListenerTimeoutsElement
  nameWithType: HttpListenerTimeoutsElement
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.HttpListenerElement.#ctor*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement
  nameWithType: HttpListenerElement.HttpListenerElement
- uid: System.Net.Configuration.HttpListenerElement.Properties*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
- uid: System.Net.Configuration.HttpListenerElement.Timeouts*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
