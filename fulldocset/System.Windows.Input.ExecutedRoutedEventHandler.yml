### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  id: ExecutedRoutedEventHandler
  langs:
  - csharp
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
  type: Delegate
  summary: "Reprezentuje metodę, która będzie obsługiwać <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> i <xref href=&quot;System.Windows.Input.CommandBinding.PreviewExecuted&quot;> </xref> zdarzenia rozsyłane, a także powiązane dołączone zdarzenia."
  remarks: "Ten delegat zawiera logikę implementacji <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand>  Oddzielanie logika implementacji polecenia umożliwia polecenie do wywołania z różnych źródeł i typów i umożliwia centralizacji logiki polecenia.       Ten delegat jest również używane do <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>i <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>, które są dołączone zdarzenia na <xref:System.Windows.Input.CommandManager>klasy, która implementuje wiele sterująca infrastruktury.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Ale obsługi najbardziej praktyczne będzie obsługiwać <xref:System.Windows.Input.CommandBinding.Executed>zdarzenia z określonego <xref:System.Windows.Input.CommandBinding>, zamiast niż działania na <xref:System.Windows.Input.CommandManager>poziom.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       W ramach <xref:System.Windows.Input.ExecutedRoutedEventArgs>, następujące właściwości są zazwyczaj przydatne podczas pisania program obsługi zdarzeń dla zdarzenia routingiem, będącą wynikiem wykonanego polecenia:- <xref:System.Windows.RoutedEventArgs.Source%2A>Raporty docelowej, gdy polecenie zostało wykonane.</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.Input.ExecutedRoutedEventArgs> Po wykonaniu polecenia, można również traktować <xref:System.Windows.RoutedEventArgs.Source%2A>więcej zazwyczaj w kierowane zdarzenia warunków, jako obiekt, który wywołał kierowanego zdarzenia.</xref:System.Windows.RoutedEventArgs.Source%2A>      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>zgłasza polecenie wykonane.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> Ta właściwość jest przydatna, jeśli używasz polecenia wiązania i podczas pisania obsług, które potencjalnie obsłużyć wielu poleceń.      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>zgłasza wszystkie parametry specyficzne dla danego polecenia, które zostały przekazane przez wykonywanego polecenia.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> Nie wszystkie polecenia użyj lub oczekiwane parametry specyficzne dla danego polecenia.      - <xref:System.Windows.RoutedEventArgs.Handled%2A>zgłasza czy kierowanego zdarzenia, który spowodował wykonanie polecenia już został obsłużony przez inny element marszruty.</xref:System.Windows.RoutedEventArgs.Handled%2A> Dla programów obsługi kierowanego zdarzenia, jest zalecanym rozwiązaniem ma obsługi, które pracy przydatne podczas obsługi zdarzeń, aby ustawić <xref:System.Windows.RoutedEventArgs.Handled%2A>do `true`.</xref:System.Windows.RoutedEventArgs.Handled%2A> Zapobiega to typowe programy obsługi dla zdarzenia obsługi zdarzenia ponownie dalej w tym samym trasy. Aby uzyskać więcej informacji dotyczących obsługi kierowane zdarzenia, zobacz [oznaczenie kierowane zdarzenia jako Handled i obsługa klasy](~/add/includes/ajax-current-ext-md.md).       Ten delegat reprezentuje również obsługę <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>i <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName>, które są dołączone zdarzenia na <xref:System.Windows.Input.CommandManager>klasy, która implementuje wiele sterująca infrastruktury.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Ale obsługi najbardziej praktyczne będzie obsługiwać <xref:System.Windows.Input.CommandBinding.Executed>zdarzenia z określonego <xref:System.Windows.Input.CommandBinding>, zamiast niż działania na <xref:System.Windows.Input.CommandManager>poziom.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       Aby uzyskać więcej informacji na wydawanie poleceń, zobacz [droższe omówienie](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example creates an ExecutedRoutedEventHandler that sets a visual property on the target when the command is executed. The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.  \n  \n [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/visualbasic/custom_routedcommand/window1.xaml.vb#custom_routedcommandhandlers)]\n [!code-cs[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/csharp/Custom_RoutedCommand/Window1.xaml.cs#custom_routedcommandhandlers)]"
  syntax:
    content: public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
