### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventArgs
  id: RequestBringIntoViewEventArgs
  children:
  - System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RequestBringIntoViewEventArgs.TargetObject
  - System.Windows.RequestBringIntoViewEventArgs.TargetRect
  langs:
  - csharp
  name: RequestBringIntoViewEventArgs
  nameWithType: RequestBringIntoViewEventArgs
  fullName: System.Windows.RequestBringIntoViewEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> kierowanego zdarzenia."
  remarks: "<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>Zdarzenie jest zgłaszane przez składniki po wywołaniu <xref:System.Windows.FrameworkElement.BringIntoView%2A>od tego elementu.</xref:System.Windows.FrameworkElement.BringIntoView%2A> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> Ogólnie rzecz biorąc to kierowanego zdarzenia nie jest obsługiwane przez źródło. Pośredni klasy, które nie implementują przewijanego regionów lub podobne zagadnienia obcina zawartości nie powinna obsługiwać zdarzenia.  Zdarzenia powinny mieć możliwość bąbelkowy do elementy nadrzędne, które implementuje przewijanego region lub określ, w przeciwnym razie <xref:System.Windows.UIElement.ClipToBounds%2A> `false`.</xref:System.Windows.UIElement.ClipToBounds%2A> Takie elementy nadrzędne zwykle zapewniają obsługę dla klasy <xref:System.Windows.FrameworkElement.RequestBringIntoView>zdarzeń, czyli gdzie logiki niezbędne renderowania występuje zawsze, gdy dany element żądań, że on widoczny w obrębie regionu wycinka.</xref:System.Windows.FrameworkElement.RequestBringIntoView>       Elementy zawartości mogą powodować zdarzenia do wywołania przez hosty z ich zawartości (za pośrednictwem wywołania <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>i wywoływanie <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>z hosta zawartości).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> Podobnie możesz poprosić elementy drzewa logicznego wprowadzanych do widoku przy użyciu metody pomocnika <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>       <xref:System.Windows.Controls.ListBox>Implementuje powiązane, ale inną metodę <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> </xref:System.Windows.Controls.ListBox>"
  syntax:
    content: 'public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Wywołuje procedury obsługi zdarzeń w sposób określonego typu, co może zwiększyć wydajność systemu zdarzeń."
  remarks: "Ta implementacja rzutuje obsługi ogólnej jako <xref:System.Windows.RequestBringIntoViewEventHandler>, a następnie wywołuje go.</xref:System.Windows.RequestBringIntoViewEventHandler> Szczegółowe informacje dotyczące tego wzorca implementacji i przyczyny, zobacz <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>i [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "Ogólny program obsługi do wywołania w sposób określonego typu."
    - id: genericTarget
      type: System.Object
      description: "Element docelowy może wywołać programu obsługi."
  overload: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  id: TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera obiekt, który powinien być widoczne w odpowiedzi na zdarzenia."
  remarks: "Ten obiekt jest zwykle ten sam obiekt zwrócony przez <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>.</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.DependencyObject TargetObject { get; }
    return:
      type: System.Windows.DependencyObject
      description: "Obiekt, który wywołuje <xref:System.Windows.FrameworkElement.BringIntoView*>.</xref:System.Windows.FrameworkElement.BringIntoView*>"
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  id: TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera prostokątny regionu w przestrzeni współrzędnych obiektu, które powinny być widoczne."
  remarks: "Jeśli podpis <xref:System.Windows.FrameworkElement.BringIntoView%2A>który został wywołany aby wywołać zdarzenie nie określono docelowego prostokąta, ta właściwość może być <xref:System.Windows.Rect.Empty%2A>wartość <xref:System.Windows.Rect>struktury.</xref:System.Windows.Rect> </xref:System.Windows.Rect.Empty%2A> </xref:System.Windows.FrameworkElement.BringIntoView%2A>"
  syntax:
    content: public System.Windows.Rect TargetRect { get; }
    return:
      type: System.Windows.Rect
      description: "Żądane miejsce prostokątny."
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
