### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RIPEMD160Managed
  id: RIPEMD160Managed
  children:
  - System.Security.Cryptography.RIPEMD160Managed.#ctor
  - System.Security.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.RIPEMD160Managed.HashFinal
  - System.Security.Cryptography.RIPEMD160Managed.Initialize
  langs:
  - csharp
  name: RIPEMD160Managed
  nameWithType: RIPEMD160Managed
  fullName: System.Security.Cryptography.RIPEMD160Managed
  type: Class
  summary: "Oblicza <xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;> </xref> wartość skrótu dla danych wejściowych przy użyciu biblioteki zarządzanej."
  remarks: "RIPEMD 160 jest funkcją 160-bitowy skrót kryptograficzny. Jest on przeznaczony do użycia jako bezpieczne zastąpienie dla funkcji 128-bitowy skrót MD4, MD5 i RIPEMD. RIPEMD został opracowany w ramach projektu UE RIPE (WYŚCIGU integralności podstawowych szacowania 1988-1992).      > [!NOTE] > RIPEMD160Managed została zastąpiona przez Secure Hash algorytmów SHA-256, SHA-512 i ich pochodne. <xref:System.Security.Cryptography.SHA256Managed>i <xref:System.Security.Cryptography.SHA512Managed>oferują lepsze bezpieczeństwo i wydajność niż RIPEMD160Managed.</xref:System.Security.Cryptography.SHA512Managed></xref:System.Security.Cryptography.SHA256Managed> Użyj RIPEMD160Managed tylko w celu zapewnienia zgodności z starszych aplikacji i danych."
  example:
  - "The following code example shows how to encode a file using the RIPEMD160Managed class and then how to decode the file.  \n  \n [!code-cpp[RIPEMD160#1](~/add/codesnippet/cpp/t-system.security.crypto_87_1.cpp)]\n [!code-vb[RIPEMD160#1](~/add/codesnippet/visualbasic/t-system.security.crypto_87_1.vb)]\n [!code-cs[RIPEMD160#1](~/add/codesnippet/csharp/t-system.security.crypto_87_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class RIPEMD160Managed : System.Security.Cryptography.RIPEMD160
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.RIPEMD160
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.RIPEMD160.Create
  - System.Security.Cryptography.RIPEMD160.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.RIPEMD160Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RIPEMD160Managed
  langs:
  - csharp
  name: RIPEMD160Managed()
  nameWithType: RIPEMD160Managed.RIPEMD160Managed()
  fullName: System.Security.Cryptography.RIPEMD160Managed.RIPEMD160Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;> </xref> klasy."
  remarks: "Skrót jest używana jako unikatowy o stałym rozmiarze reprezentujący dużej ilości danych. Skróty dwóch zestawów danych powinien być zgodny tylko wtedy, gdy zgodny odpowiednich danych. Niewielkie zmiany w wyniku danych w dużych zmian nieprzewidywalne mieszania.       Rozmiar wyznaczania wartości skrótu dla <xref:System.Security.Cryptography.RIPEMD160>algorytm jest 160 bitów.</xref:System.Security.Cryptography.RIPEMD160>"
  example:
  - "The following code example computes the <xref:System.Security.Cryptography.RIPEMD160Managed> class hash for all files in a directory.  \n  \n [!code-cpp[RIPEMD160#1](~/add/codesnippet/cpp/m-system.security.crypto_65_1.cpp)]\n [!code-vb[RIPEMD160#1](~/add/codesnippet/visualbasic/m-system.security.crypto_65_1.vb)]\n [!code-cs[RIPEMD160#1](~/add/codesnippet/csharp/m-system.security.crypto_65_1.cs)]"
  syntax:
    content: public RIPEMD160Managed ();
    parameters: []
  overload: System.Security.Cryptography.RIPEMD160Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Zasady nie są zgodne z algorytmu FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RIPEMD160Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: RIPEMD160Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RIPEMD160Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "W przypadku przesłonięcia w klasie pochodnej, kieruje dane zapisywane do obiektu do <xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;> </xref> algorytmem wyznaczania wartości skrótu obliczania skrótu."
  remarks: "Ta metoda nie jest wywoływany przez kod aplikacji.       Ta metoda abstrakcyjna wykonuje obliczenia wyznaczania wartości skrótu. Każdego zapisu do obiektu strumienia kryptograficznego przekazuje dane za pomocą tej metody. Dla każdego bloku danych ta metoda aktualizacji stanu obiektu skrótu, toteż zwracana jest wartość skrótu poprawne na koniec strumienia danych."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Dane wejściowe."
    - id: ibStart
      type: System.Int32
      description: "Przesunięcie do tablicy typu byte, z którego można rozpocząć korzystanie z danych."
    - id: cbSize
      type: System.Int32
      description: "Liczba bajtów w tablicy, która ma być używana jako dane."
  overload: System.Security.Cryptography.RIPEMD160Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RIPEMD160Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.RIPEMD160Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: RIPEMD160Managed.HashFinal()
  fullName: System.Security.Cryptography.RIPEMD160Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "W przypadku przesłonięcia w klasie pochodnej, kończenie znajdujących się w obliczania skrótu po przetworzeniu ostatniego danych przez obiekt strumienia kryptograficznego."
  remarks: "Ta metoda nie jest wywoływany przez kod aplikacji. Ta metoda Kończenie znajdujących się w dowolnej częściowe obliczeń i zwraca wartość skrótu poprawne strumienia danych."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Kod obliczoną wartość mieszania w tablicy bajtów."
  overload: System.Security.Cryptography.RIPEMD160Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RIPEMD160Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.RIPEMD160Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: RIPEMD160Managed.Initialize()
  fullName: System.Security.Cryptography.RIPEMD160Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje wystąpienie klasy <xref href=&quot;System.Security.Cryptography.RIPEMD160Managed&quot;> </xref> przy użyciu biblioteki zarządzanej."
  remarks: "RIPEMD 160 jest funkcją 160-bitowy skrót kryptograficzny. Jest on przeznaczony do użycia jako bezpieczne zastąpienie dla funkcji 128-bitowy skrót MD4, MD5 i RIPEMD. RIPEMD został opracowany w ramach projektu UE RIPE (WYŚCIGU integralności podstawowych szacowania 1988-1992)."
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.RIPEMD160Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RIPEMD160
  isExternal: false
  name: System.Security.Cryptography.RIPEMD160
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.RIPEMD160Managed.#ctor
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: RIPEMD160Managed()
  nameWithType: RIPEMD160Managed.RIPEMD160Managed()
  fullName: System.Security.Cryptography.RIPEMD160Managed.RIPEMD160Managed()
- uid: System.Security.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: RIPEMD160Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RIPEMD160Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RIPEMD160Managed.HashFinal
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: HashFinal()
  nameWithType: RIPEMD160Managed.HashFinal()
  fullName: System.Security.Cryptography.RIPEMD160Managed.HashFinal()
- uid: System.Security.Cryptography.RIPEMD160Managed.Initialize
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: Initialize()
  nameWithType: RIPEMD160Managed.Initialize()
  fullName: System.Security.Cryptography.RIPEMD160Managed.Initialize()
- uid: System.Security.Cryptography.RIPEMD160Managed.#ctor*
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: RIPEMD160Managed
  nameWithType: RIPEMD160Managed.RIPEMD160Managed
- uid: System.Security.Cryptography.RIPEMD160Managed.HashCore*
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: HashCore
  nameWithType: RIPEMD160Managed.HashCore
- uid: System.Security.Cryptography.RIPEMD160Managed.HashFinal*
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: HashFinal
  nameWithType: RIPEMD160Managed.HashFinal
- uid: System.Security.Cryptography.RIPEMD160Managed.Initialize*
  parent: System.Security.Cryptography.RIPEMD160Managed
  isExternal: false
  name: Initialize
  nameWithType: RIPEMD160Managed.Initialize
