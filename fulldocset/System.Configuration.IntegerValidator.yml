### YamlMime:ManagedReference
items:
- uid: System.Configuration.IntegerValidator
  id: IntegerValidator
  children:
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  - System.Configuration.IntegerValidator.CanValidate(System.Type)
  - System.Configuration.IntegerValidator.Validate(System.Object)
  langs:
  - csharp
  name: IntegerValidator
  nameWithType: IntegerValidator
  fullName: System.Configuration.IntegerValidator
  type: Class
  summary: "Zapewnia weryfikację <xref:System.Int32>wartość.</xref:System.Int32>"
  remarks: "Klasa IntegerValidator służy do sprawdzenia, czy całkowitą spełnia określone kryteria. Po utworzeniu wystąpienia klasy IntegerValidator ustanawiane są kryteria weryfikacji. <xref:System.Configuration.IntegerValidator.%23ctor%2A>Konstruktora z dwoma parametrami gwarantuje, że liczba całkowita, Trwa weryfikowanie opiera się na wartość maksymalna i minimalna.</xref:System.Configuration.IntegerValidator.%23ctor%2A> <xref:System.Configuration.IntegerValidator.%23ctor%2A>Konstruktora z trzema parametrami sprawdza minimalne i maksymalne <xref:System.Int32>wartości, a także czy jest wartość do sprawdzenia poprawności określonego zakresu.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A> <xref:System.Configuration.IntegerValidator.%23ctor%2A>Konstruktora o parametrach cztery sprawdza czy poprzednie trzy parametry, a także kontroli <xref:System.Int32>wartość jest równa określonej rozdzielczości.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A>       <xref:System.Configuration.IntegerValidator.CanValidate%2A>Metoda określa, czy typ obiektu, sprawdzana jest zgodny z typem oczekiwanym.</xref:System.Configuration.IntegerValidator.CanValidate%2A> Obiekt sprawdzany został przekazany jako parametr <xref:System.Configuration.IntegerValidator.Validate%2A>metody.</xref:System.Configuration.IntegerValidator.Validate%2A>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator type.  \n  \n [!code-vb[System.Configuration.IntegerValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.i_3_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#1](~/add/codesnippet/csharp/t-system.configuration.i_3_1.cs)]"
  syntax:
    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> klasy."
  remarks: "Ten konstruktor IntegerValidator gwarantuje, że liczba całkowita, Trwa weryfikowanie działa zgodnie z maksymalną długość i minimalna."
  syntax:
    content: public IntegerValidator (int minValue, int maxValue);
    parameters:
    - id: minValue
      type: System.Int32
      description: "<xref:System.Int32>Obiekt, który określa minimalną wartość.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "<xref:System.Int32>Obiekt, który określa maksymalną wartość.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Boolean)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> klasy."
  remarks: "Podczas tworzenia wystąpienia <xref:System.Configuration.IntegerValidator>Klasa, ten konstruktor IntegerValidator sprawdza minimalne i maksymalne <xref:System.Int32>wartości, a także czy zakresu walidacji jest na wyłączność.</xref:System.Int32> </xref:System.Configuration.IntegerValidator> Gdy `rangeIsExclusive` ustawiono parametr `true`, <xref:System.Int32>nie musi mieć wartość między `minValue` i `maxValue` wartości parametrów.</xref:System.Int32>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#2](~/add/codesnippet/visualbasic/39b5b9f2-305e-4ede-8502-_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#2](~/add/codesnippet/csharp/39b5b9f2-305e-4ede-8502-_1.cs)]"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int32
      description: "<xref:System.Int32>Obiekt, który określa minimalną wartość.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "<xref:System.Int32>Obiekt, który określa maksymalną wartość.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby określić, że zakres sprawdzania poprawności jest wyłączne. Wraz z wartościami granicznymi oznacza wartość do sprawdzenia poprawności musi należeć do zakresu określonego; wyłączny oznacza, że musi być mniejszy niż minimalny lub powyżej maksymalną."
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> klasy."
  remarks: "<xref:System.Int32>Sprawdzana wartość musi być równa `resolution` wartość celu przeszedł pomyślnie weryfikacji.</xref:System.Int32>"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);
    parameters:
    - id: minValue
      type: System.Int32
      description: "<xref:System.Int32>Obiekt, który określa minimalną długość wartości całkowitej.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "<xref:System.Int32>Obiekt, który określa maksymalną długość wartości całkowitej.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy zakres sprawdzania poprawności jest na wyłączność.</xref:System.Boolean>"
    - id: resolution
      type: System.Int32
      description: "<xref:System.Int32>Obiekt, który określa wartość, które muszą być zgodne.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>minValue</code> is greater than <code>maxValue</code>."
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Określa, czy można zweryfikować typ obiektu."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.i_1_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#3](~/add/codesnippet/csharp/m-system.configuration.i_1_1.cs)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Typ obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> type </code> odpowiada parametru <xref:System.Int32>wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Określa, czy wartość obiektu jest nieprawidłowy."
  remarks: "<xref:System.Configuration.IntegerValidator>Obiekt zawiera zasady, które są niezbędne do weryfikacji obiektu liczby całkowitej.</xref:System.Configuration.IntegerValidator> Reguły są połączenia, gdy wystąpienie klasy <xref:System.Configuration.IntegerValidator>Klasa jest tworzona.</xref:System.Configuration.IntegerValidator> Liczba całkowita obiektu do weryfikacji jest przekazywany jako parametru metody sprawdzania poprawności."
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.i_6_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#4](~/add/codesnippet/csharp/m-system.configuration.i_6_1.cs)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Wartość do sprawdzenia poprawności."
  overload: System.Configuration.IntegerValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.IntegerValidator.#ctor*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator
  nameWithType: IntegerValidator.IntegerValidator
- uid: System.Configuration.IntegerValidator.CanValidate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate
  nameWithType: IntegerValidator.CanValidate
- uid: System.Configuration.IntegerValidator.Validate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate
  nameWithType: IntegerValidator.Validate
