### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.ActivityCollection
  id: ActivityCollection
  children:
  - System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Clear
  - System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Count
  - System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  - System.Workflow.ComponentModel.ActivityCollection.ListChanged
  - System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: ActivityCollection
  nameWithType: ActivityCollection
  fullName: System.Workflow.ComponentModel.ActivityCollection
  type: Class
  summary: "Modele silnie typizowaną <xref:System.Collections.ICollection>typu <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Ta klasa jest używana do reprezentowania listę działań podrzędnych dla <xref:System.Workflow.ComponentModel.CompositeActivity>.</xref:System.Workflow.ComponentModel.CompositeActivity>      > [!NOTE] > Wywoływać tylko metody pochodną <xref:System.Collections.Generic.IList%601>i nie <xref:System.Collections.Generic.List%601>, takie jak <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>Dodawanie działań zamiast <xref:System.Collections.Generic.List%601.AddRange%2A>.</xref:System.Collections.Generic.List%601.AddRange%2A> </xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> przy użyciu</xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.IList%601> Wywołanie metod pochodną <xref:System.Collections.Generic.List%601>będzie mieć nieoczekiwane skutki.</xref:System.Collections.Generic.List%601>"
  example:
  - "The following example shows access of the ActivityCollection which is the member of a composite activity class containing all child activities. This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCollectionMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ActivityCollection : System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>
  inheritance:
  - System.Collections.Generic.List`1
  implements:
  - System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>
  - System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>
  - System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  id: '#ctor(System.Workflow.ComponentModel.Activity)'
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: ActivityCollection(Activity)
  nameWithType: ActivityCollection.ActivityCollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.ActivityCollection(Activity)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.ComponentModel.ActivityCollection&quot;> </xref> klasy inicjowanie właściciela <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  remarks: "Przykład"
  syntax:
    content: public ActivityCollection (System.Workflow.ComponentModel.Activity owner);
    parameters:
    - id: owner
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> Wyznaczony jako będącej właścicielem tego wystąpienia."
  overload: System.Workflow.ComponentModel.ActivityCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>owner</code>nie jest elementem podrzędnym <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  id: Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Add(Activity)
  nameWithType: ActivityCollection.Add(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Add(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Dodaje <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> do <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: ''
  example:
  - "The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities. This example illustrates the use of Add. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public void Add (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> Mają zostać dodane do <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear
  id: Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ActivityCollection.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.Clear()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Usuwa co <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> z <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  id: Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Contains(Activity)
  nameWithType: ActivityCollection.Contains(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Contains(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Udostępnia testu dla członkostwa <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "To <xref:System.Collections.ICollection>jest bezpieczne.</xref:System.Collections.ICollection> Wyjątek czasu wykonywania jest uruchamiany, jeśli element nie jest typu <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public bool Contains (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> Testowana pod kątem członkostwa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> należy <xref:System.Collections.ICollection>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Count
  id: Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Count
  nameWithType: ActivityCollection.Count
  fullName: System.Workflow.ComponentModel.ActivityCollection.Count
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera liczbę elementów członkowskich <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba członków <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ActivityCollection.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Implementuje interfejs do <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> — wyliczenie"
  remarks: "Moduły wyliczające włączyć tylko odczytywanie danych w kolekcji. Za pomocą wyliczenia nie można zmodyfikować kolekcji źródłowej.       Aby rozpocząć, moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.IEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.IEnumerator.Reset%2A> At to pozycja, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.IEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Po zakończeniu kolekcji jest moduł wyliczający jest rozmieszczanych za ostatnim elementem w kolekcji i wywoływania <xref:System.Collections.IEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A>zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Aby ustawić `Current` aby pierwszym elementem kolekcji ponownie, należy wywołać `Reset` następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie nieważne, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A>lub `Reset` zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A>i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>zwróci element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne wątkowo procedurą. Nawet jeśli kolekcja jest synchronizowane, inne wątki nadal można modyfikować kolekcji. Powoduje to, że moduł wyliczający zgłosić wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
      description: "Zwraca moduł wyliczający, który można wykonać iterację <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> wystąpienia."
  overload: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  id: IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: IndexOf(Activity)
  nameWithType: ActivityCollection.IndexOf(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.IndexOf(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera indeks <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "Ta kolekcja jest bezpieczne. Wyjątek czasu wykonywania zostanie wygenerowany, jeśli element nie jest typu <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public int IndexOf (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "Działanie, dla którego można uzyskać indeksu."
    return:
      type: System.Int32
      description: "Indeks <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> W przeciwnym razie -1 (Jeśli <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> nie znajduje się w <xref:System.Collections.ICollection>).</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  id: Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Insert(Int32,Activity)
  nameWithType: ActivityCollection.Insert(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Insert(Int32,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Wstawia element pod indeksem <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "To <xref:System.Collections.ICollection>jest typu są bezpieczne.</xref:System.Collections.ICollection> Wyjątek czasu wykonywania jest uruchamiany, jeśli element nie jest typu <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public void Insert (int index, System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks kolekcji, w którym ma zostać wstawiony element."
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> Ma zostać wstawiony do kolekcji."
  overload: System.Workflow.ComponentModel.ActivityCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ActivityCollection.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera lub ustawia działanie w <xref:System.Collections.ICollection>oparte na indeks.</xref:System.Collections.ICollection>"
  syntax:
    content: public System.Workflow.ComponentModel.Activity this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Działania elementu członkowskiego <xref:System.Collections.ICollection>, którego indeks w <xref:System.Collections.ICollection>została określona w wywołaniu.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>nie jest prawidłowym indeksem w <xref:System.Collections.IList>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Właściwość jest ustawiona i <xref:System.Collections.IList>jest tylko do odczytu.</xref:System.Collections.IList>"
  - type: System.Exception
    commentId: T:System.Exception
    description: "Podjęto próbę ustawienia <xref:System.Object>nie jest to <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Object>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ActivityCollection.Item(String)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(String)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera działania w <xref:System.Collections.ICollection>oparte na ciąg, który jest unikatowy klucz.</xref:System.Collections.ICollection>"
  remarks: "W przypadku nie <xref:System.Workflow.ComponentModel.Activity>w <xref:System.Collections.ICollection>z określonym kluczem, jest wyjątek.</xref:System.Collections.ICollection> </xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public System.Workflow.ComponentModel.Activity this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "Unikatowy identyfikator dla działania w <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Element członkowski <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> z <xref:System.Collections.ICollection>; klucz w <xref:System.Collections.ICollection>którego została określona w wywołaniu.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  id: ListChanged
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: ListChanged
  nameWithType: ActivityCollection.ListChanged
  fullName: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Wywoływane po każdej zmianie zawartości tego <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  remarks: "W tym kontekście Dodawanie lub usuwanie elementów członkowskich wywołuje zdarzenie. Modyfikowanie element członkowski nie wygenerował tego zdarzenia.       Po utworzeniu <xref:System.Workflow.ComponentModel.ActivityCollection>delegata, należy określić metodę, która obsłuży zdarzenie.</xref:System.Workflow.ComponentModel.ActivityCollection> Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia delegata zdarzenia. Program obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie, o ile nie usuniesz delegata. Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [NIB: zdarzenia i delegatów](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs> ListChanged;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  id: Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: Remove(Activity)
  nameWithType: ActivityCollection.Remove(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Remove(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Usuwa określone w wywołaniu z <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> działania"
  remarks: "To <xref:System.Collections.ICollection>jest typu są bezpieczne.</xref:System.Collections.ICollection> Wyjątek czasu wykonywania jest uruchamiany, jeśli element nie jest typu <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public bool Remove (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "Działanie, aby usunąć z <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli operacja zakończyła się pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ActivityCollection.RemoveAt(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Usuwa <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> w <xref:System.Collections.ICollection>pod określonym <code> index </code>.</xref:System.Collections.ICollection>"
  remarks: "Wyjątek czasu wykonywania występuje, gdy indeks jest nieprawidłowy (poza zakresem)."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Pozycja w liczony od zera indeks, aby usunąć działania z kolekcji."
  overload: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.Add (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection()
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool ICollection<Activity>.Contains (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity[],Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void ICollection<Activity>.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Workflow.ComponentModel.Activity[]
      description: "Do dodania."
    - id: arrayIndex
      type: System.Int32
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: int System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count { get; }
    return:
      type: System.Int32
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: bool ICollection<Activity>.Remove (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> IEnumerable<Activity>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable<System#Workflow#ComponentModel#Activity>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: int IList<Activity>.IndexOf (System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "Do dodania."
    return:
      type: System.Int32
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32,Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void IList<Activity>.Insert (int index, System.Workflow.ComponentModel.Activity item);
    parameters:
    - id: index
      type: System.Int32
      description: "Do dodania."
    - id: item
      type: System.Workflow.ComponentModel.Activity
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: System.Workflow.ComponentModel.Activity System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Do dodania."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: void IList<Activity>.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Do dodania."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Kopiuje elementy <xref:System.Collections.ICollection>do <xref:System.Array>, rozpoczynając od określonego <xref:System.Array>indeksu.</xref:System.Array> </xref:System.Array> </xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>Co jest obiekt docelowy operacji kopiowania.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w <xref:System.Collections.ICollection>gdzie rozpoczyna się kopiowanie.</xref:System.Collections.ICollection>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera wartość wskazującą, czy dostęp do &lt;xref:System.Collections.Generic.ICollection%601&gt; jest synchronizowane, czyli wątkowo."
  remarks: "<xref:System.Collections.ICollection.SyncRoot%2A>Zwraca obiekt, który może służyć do synchronizujący dostęp do <xref:System.Collections.Generic.ICollection%601>.</xref:System.Collections.Generic.ICollection%601></xref:System.Collections.ICollection.SyncRoot%2A>       Większość kolekcji klas w <xref:System.Collections?displayProperty=fullName>przestrzeń nazw również implementować `Synchronized` metodę, która udostępnia otokę zsynchronizowane kolekcja podstawowa.</xref:System.Collections?displayProperty=fullName>       Wyliczanie za pomocą kolekcji leżą nie jest procedurą wątkowo. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do &lt;xref:System.Collections.Generic.ICollection%601&gt; jest synchronizowane, to znaczy wątkowo; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do &lt;xref:System.Collections.Generic.ICollection%601&gt;."
  remarks: "Dla kolekcji, w których Magazyn nie jest publicznie dostępna oczekiwano implementacja jest aby powrócić do bieżącego wystąpienia. Należy pamiętać, że wskaźnik do bieżącego wystąpienia nie może być wystarczający do kolekcji, które otaczają innych kolekcji; te powinny zwrócić odpowiednia Kolekcja <xref:System.Collections.ICollection.SyncRoot%2A>Właściwości.</xref:System.Collections.ICollection.SyncRoot%2A>       Większość kolekcji klas w <xref:System.Collections?displayProperty=fullName>przestrzeń nazw również implementować `Synchronized` metodę, która udostępnia otokę zsynchronizowane kolekcja podstawowa.</xref:System.Collections?displayProperty=fullName> Jednak klasy pochodne zapewniają własne zsynchronizowanej wersji przy użyciu kolekcji <xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A>Właściwości.</xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A> Synchronizowanie kodu musi wykonywać operacje <xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A>Właściwości kolekcji, a nie bezpośrednio w kolekcji.</xref:System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot%2A> Zapewnia to poprawne działanie kolekcje, które pochodzą od innych obiektów. W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie wystąpienie kolekcji."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Obiekt, który może służyć do synchronizujący dostęp do &lt;xref:System.Collections.Generic.ICollection%601&gt;."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Zwraca, <xref:System.Collections.IEnumerator>który iteruje po podstawowej <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Collections.IEnumerator>"
  remarks: "<xref:System.Collections.IEnumerator>Tylko umożliwia odczytywanie danych w kolekcji.</xref:System.Collections.IEnumerator> Nie można użyć <xref:System.Collections.IEnumerator>można zmodyfikować kolekcji źródłowej.</xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Który może służyć do iterowania po kolekcji.</xref:System.Collections.IEnumerator>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Add(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Dodaje obiekt, aby <xref:System.Collections.IList>w końcu <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Collections.IList>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Aby dodać do <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>       Liczony od zera indeks <xref:System.Object>który został dodany.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ActivityCollection.System.Collections.IList.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Usuwa wszystkie <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> z <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Contains(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera wartość wskazującą, czy <xref:System.Object>jest członkiem kolekcji.</xref:System.Object>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Aby zlokalizować <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli <code> value </code> znajduje się w kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Boolean>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera liczony od zera indeks <xref:System.Object>w źródłowej kolekcji działań.</xref:System.Object>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do indeksowania.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Liczony od zera indeks <code> value </code> w źródłowej kolekcji działania lub -1, jeśli nie można odnaleźć w kolekcji."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> value </code> Nie jest typu <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> i obiekt wyjątku zawiera komunikat o błędzie &quot;Error_InvalidListItem&quot;."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Wstawia <xref:System.Object>do <xref:System.Collections.IList>w określonym indeksie liczony od zera.</xref:System.Collections.IList> </xref:System.Object>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera pozycja wstawiania."
    - id: value
      type: System.Object
      description: "Obiekt do wstawienia. Musi być typu <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera wartość wskazującą czy <xref:System.Collections.IList>ma stały rozmiar.</xref:System.Collections.IList>"
  remarks: "Kolekcja o stałym rozmiarze nie zezwala na dodawanie i usuwanie elementów po utworzeniu kolekcji, ale umożliwia modyfikowanie istniejących elementów."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Collections.IList>ma ustalony rozmiar; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera wartość wskazującą czy &lt;xref:System.Collections.Generic.ICollection%601&gt; jest tylko do odczytu."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli &lt;xref:System.Collections.Generic.ICollection%601&gt; jest tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Boolean>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ActivityCollection.System.Collections.IList.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Pobiera lub ustawia działanie w <xref:System.Collections.ICollection>oparte na indeks.</xref:System.Collections.ICollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
    return:
      type: System.Object
      description: "Zwraca <xref:System.Object>, elementu członkowskiego działania <xref:System.Collections.ICollection>, którego indeks w <xref:System.Collections.ICollection>została określona w wywołaniu.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Workflow.ComponentModel.ActivityCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Remove(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Usuwa pierwsze wystąpienie określonego obiektu z <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  remarks: "Elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Aby usunąć z <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Collections.IList>Jest tylko do odczytu.</xref:System.Collections.IList>       <xref:System.Collections.IList>ma stały rozmiar.</xref:System.Collections.IList>"
  platform:
  - net462
references:
- uid: System.Collections.Generic.List`1
  isExternal: false
  name: System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ActivityCollection(Activity)
  nameWithType: ActivityCollection.ActivityCollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.ActivityCollection(Activity)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Add(Activity)
  nameWithType: ActivityCollection.Add(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Add(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Clear()
  nameWithType: ActivityCollection.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.Clear()
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Contains(Activity)
  nameWithType: ActivityCollection.Contains(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Contains(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.ActivityCollection.Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Count
  nameWithType: ActivityCollection.Count
  fullName: System.Workflow.ComponentModel.ActivityCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ActivityCollection.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Activity>
  nameWithType: IEnumerator<Activity>
  fullName: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: IndexOf(Activity)
  nameWithType: ActivityCollection.IndexOf(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.IndexOf(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Insert(Int32,Activity)
  nameWithType: ActivityCollection.Insert(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Insert(Int32,Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ActivityCollection.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item(String)
  nameWithType: ActivityCollection.Item(String)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ListChanged
  nameWithType: ActivityCollection.ListChanged
  fullName: System.Workflow.ComponentModel.ActivityCollection.ListChanged
- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ActivityCollectionChangeEventArgs>
  nameWithType: EventHandler<ActivityCollectionChangeEventArgs>
  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
    name: ActivityCollectionChangeEventArgs
    nameWithType: ActivityCollectionChangeEventArgs
    fullName: ActivityCollectionChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Remove(Activity)
  nameWithType: ActivityCollection.Remove(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.Remove(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ActivityCollection.RemoveAt(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection()
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity[],Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity[],Int32)
- uid: System.Workflow.ComponentModel.Activity[]
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity[]
  spec.csharp:
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.ICollection(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IEnumerable()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32,Activity)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32,Activity)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList(Int32)
  nameWithType: ActivityCollection.System.Collections.Generic.IList(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.Generic.IList(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Add(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Add(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ActivityCollection.System.Collections.IList.Clear()
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Clear()
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Contains(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Contains(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ActivityCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsFixedSize
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ActivityCollection.System.Collections.IList.Item(Int32)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Item(Int32)
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ActivityCollection.System.Collections.IList.Remove(Object)
  fullName: System.Workflow.ComponentModel.ActivityCollection.System.Collections.IList.Remove(Object)
- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: ActivityCollection
  nameWithType: ActivityCollection.ActivityCollection
- uid: System.Workflow.ComponentModel.ActivityCollection.Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Add
  nameWithType: ActivityCollection.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Clear
  nameWithType: ActivityCollection.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Contains
  nameWithType: ActivityCollection.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.Count*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Count
  nameWithType: ActivityCollection.Count
- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ActivityCollection.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: IndexOf
  nameWithType: ActivityCollection.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Insert
  nameWithType: ActivityCollection.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Item
  nameWithType: ActivityCollection.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: Remove
  nameWithType: ActivityCollection.Remove
- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ActivityCollection.RemoveAt
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#CopyTo*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Count*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#IsReadOnly*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove
  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable<System#Workflow#ComponentModel#Activity>#GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator
  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#RemoveAt*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt
  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ActivityCollection.System.Collections.IList.Add
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ActivityCollection.System.Collections.IList.Clear
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ActivityCollection.System.Collections.IList.Contains
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ActivityCollection.System.Collections.IList.IndexOf
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ActivityCollection.System.Collections.IList.Insert
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ActivityCollection.System.Collections.IList.Item
- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*
  parent: System.Workflow.ComponentModel.ActivityCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ActivityCollection.System.Collections.IList.Remove
