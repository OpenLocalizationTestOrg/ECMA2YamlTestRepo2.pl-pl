### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.HttpWebRequestElement
  id: HttpWebRequestElement
  children:
  - System.Net.Configuration.HttpWebRequestElement.#ctor
  - System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength
  - System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength
  - System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength
  - System.Net.Configuration.HttpWebRequestElement.PostDeserialize
  - System.Net.Configuration.HttpWebRequestElement.Properties
  - System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing
  langs:
  - csharp
  name: HttpWebRequestElement
  nameWithType: HttpWebRequestElement
  fullName: System.Net.Configuration.HttpWebRequestElement
  type: Class
  summary: "Reprezentuje maksymalną długość nagłówków odpowiedzi. Ta klasa nie może być dziedziczona."
  remarks: "This class corresponds to the `maximumResponseHeadersLength` attribute of the [\\&lt;httpWebRequest\\&gt; Element (Network Settings)](../Topic/%3ChttpWebRequest%3E%20Element%20\\(Network%20Settings\\).md) configuration element.  \n  \n The information in this class applies to responses to requests made with the <xref:System.Net.WebRequest> and <xref:System.Net.WebClient> classes.  \n  \n This class provides programmatic access to information that can be stored in configuration files."
  syntax:
    content: 'public sealed class HttpWebRequestElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.HttpWebRequestElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.HttpWebRequestElement
  langs:
  - csharp
  name: HttpWebRequestElement()
  nameWithType: HttpWebRequestElement.HttpWebRequestElement()
  fullName: System.Net.Configuration.HttpWebRequestElement.HttpWebRequestElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Configuration.HttpWebRequestElement&quot;> </xref> klasy."
  remarks: "Ten konstruktor dodaje <xref:System.Configuration.ConfigurationProperty>obiekt, który reprezentuje <xref:System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength%2A>do <xref:System.Configuration.ConfigurationElement.Properties%2A>kolekcji.</xref:System.Configuration.ConfigurationElement.Properties%2A> </xref:System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength%2A> </xref:System.Configuration.ConfigurationProperty>"
  syntax:
    content: public HttpWebRequestElement ();
    parameters: []
  overload: System.Net.Configuration.HttpWebRequestElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength
  id: MaximumErrorResponseLength
  parent: System.Net.Configuration.HttpWebRequestElement
  langs:
  - csharp
  name: MaximumErrorResponseLength
  nameWithType: HttpWebRequestElement.MaximumErrorResponseLength
  fullName: System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Pobiera lub ustawia maksymalną dopuszczalną długość odpowiedzi błędu."
  syntax:
    content: public int MaximumErrorResponseLength { get; set; }
    return:
      type: System.Int32
      description: "32-bitowa liczba całkowita zawierająca maksymalną długość odpowiedzi na błąd w kilobajtach (1024 bajty). Wartość domyślna to 64."
  overload: System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength
  id: MaximumResponseHeadersLength
  parent: System.Net.Configuration.HttpWebRequestElement
  langs:
  - csharp
  name: MaximumResponseHeadersLength
  nameWithType: HttpWebRequestElement.MaximumResponseHeadersLength
  fullName: System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Pobiera lub ustawia maksymalną dopuszczalną długość nagłówków odpowiedzi."
  remarks: "Długość jest mierzony w kilobajtach (1024 bajty), a także wiersz stanu odpowiedzi i nagłówkami odpowiedzi, a także wszystkie znaki dodatkowe kontrolki otrzymane w ramach protokołu HTTP.       Wartość-1 oznacza, że limit nie nakłada się na nagłówki odpowiedzi; wartość 0 oznacza, że wszystkie żądania zakończy się niepowodzeniem."
  syntax:
    content: public int MaximumResponseHeadersLength { get; set; }
    return:
      type: System.Int32
      description: "32-bitowa liczba całkowita zawierająca maksymalna długość w kilobajtach (1024 bajty) nagłówków odpowiedzi. Wartość domyślna to 64."
  overload: System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength
  id: MaximumUnauthorizedUploadLength
  parent: System.Net.Configuration.HttpWebRequestElement
  langs:
  - csharp
  name: MaximumUnauthorizedUploadLength
  nameWithType: HttpWebRequestElement.MaximumUnauthorizedUploadLength
  fullName: System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Pobiera lub ustawia maksymalną długość przekazywania w odpowiedzi na błąd nieautoryzowanego kodu."
  syntax:
    content: public int MaximumUnauthorizedUploadLength { get; set; }
    return:
      type: System.Int32
      description: "32-bitowe całkowita zawierająca długość maksymalna (w wielu jednostkach 1024 bajtów) przekazywania w odpowiedzi na kod błędu nieautoryzowanego. Wartość -1 wskazuje, że nie ma limitu rozmiaru będzie nakładać na przekazywanie. Ustawienie właściwości MaximumUnauthorizedUploadLength wszelkie inne wartości tylko będzie wysyłać treści żądania, jeśli jest mniejszy niż liczba określona w bajtach. Tak, aby wysyłać treści żądania, tylko jeśli jest mniejszy niż 1024 bajty wskazuje wartość 1.       Wartość domyślna dla tej właściwości wynosi -1."
  overload: System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpWebRequestElement.PostDeserialize
  id: PostDeserialize
  parent: System.Net.Configuration.HttpWebRequestElement
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: HttpWebRequestElement.PostDeserialize()
  fullName: System.Net.Configuration.HttpWebRequestElement.PostDeserialize()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override void PostDeserialize ();
    parameters: []
  overload: System.Net.Configuration.HttpWebRequestElement.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpWebRequestElement.Properties
  id: Properties
  parent: System.Net.Configuration.HttpWebRequestElement
  langs:
  - csharp
  name: Properties
  nameWithType: HttpWebRequestElement.Properties
  fullName: System.Net.Configuration.HttpWebRequestElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Do dodania."
  overload: System.Net.Configuration.HttpWebRequestElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing
  id: UseUnsafeHeaderParsing
  parent: System.Net.Configuration.HttpWebRequestElement
  langs:
  - csharp
  name: UseUnsafeHeaderParsing
  nameWithType: HttpWebRequestElement.UseUnsafeHeaderParsing
  fullName: System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Ustawienie tej właściwości ignoruje błędy sprawdzania poprawności, jakie występują podczas analizowania HTTP."
  remarks: "Jeśli ta właściwość jest równa `false`, następujących sprawdzań poprawności są wykonywane podczas analizowania HTTP:-w kodzie końca wiersza, użyj CRLF; przy użyciu Karetki i wysuwu wiersza wyłącznie nie jest dozwolone.      -Headers nazwy nie powinna mieć spacje.      — Jeśli istnieje wiele wierszy stanu, wszystkie linie dodatkowy stan są traktowane jako pary nazwa/wartość nagłówka nieprawidłowo sformułowany.      -Wiersz stanu musi mieć opis stanu, oprócz kod stanu.      -Nazwy nagłówków nie może mieć znaków innych niż ASCII w nich. Tej weryfikacji, czy ta właściwość jest ustawiona na `true` lub `false`.       Gdy naruszenie protokołu wystąpienia <xref:System.Net.WebException>wyjątku z stan <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException> Jeśli `UseUnsafeHeaderParsing` właściwość jest ustawiona na `true`, błędy sprawdzania poprawności są ignorowane.       Ustawienie tej właściwości na `true` ma wpływ na bezpieczeństwo, dlatego należy je wykonywać tylko, jeśli zgodność z poprzednimi wersjami z serwerem jest wymagane."
  syntax:
    content: public bool UseUnsafeHeaderParsing { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy ta właściwość została ustawiona."
  overload: System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.HttpWebRequestElement.#ctor
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: HttpWebRequestElement()
  nameWithType: HttpWebRequestElement.HttpWebRequestElement()
  fullName: System.Net.Configuration.HttpWebRequestElement.HttpWebRequestElement()
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: MaximumErrorResponseLength
  nameWithType: HttpWebRequestElement.MaximumErrorResponseLength
  fullName: System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: MaximumResponseHeadersLength
  nameWithType: HttpWebRequestElement.MaximumResponseHeadersLength
  fullName: System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: MaximumUnauthorizedUploadLength
  nameWithType: HttpWebRequestElement.MaximumUnauthorizedUploadLength
  fullName: System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength
- uid: System.Net.Configuration.HttpWebRequestElement.PostDeserialize
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: HttpWebRequestElement.PostDeserialize()
  fullName: System.Net.Configuration.HttpWebRequestElement.PostDeserialize()
- uid: System.Net.Configuration.HttpWebRequestElement.Properties
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: Properties
  nameWithType: HttpWebRequestElement.Properties
  fullName: System.Net.Configuration.HttpWebRequestElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: UseUnsafeHeaderParsing
  nameWithType: HttpWebRequestElement.UseUnsafeHeaderParsing
  fullName: System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.HttpWebRequestElement.#ctor*
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: HttpWebRequestElement
  nameWithType: HttpWebRequestElement.HttpWebRequestElement
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength*
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: MaximumErrorResponseLength
  nameWithType: HttpWebRequestElement.MaximumErrorResponseLength
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength*
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: MaximumResponseHeadersLength
  nameWithType: HttpWebRequestElement.MaximumResponseHeadersLength
- uid: System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength*
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: MaximumUnauthorizedUploadLength
  nameWithType: HttpWebRequestElement.MaximumUnauthorizedUploadLength
- uid: System.Net.Configuration.HttpWebRequestElement.PostDeserialize*
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: PostDeserialize
  nameWithType: HttpWebRequestElement.PostDeserialize
- uid: System.Net.Configuration.HttpWebRequestElement.Properties*
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: Properties
  nameWithType: HttpWebRequestElement.Properties
- uid: System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing*
  parent: System.Net.Configuration.HttpWebRequestElement
  isExternal: false
  name: UseUnsafeHeaderParsing
  nameWithType: HttpWebRequestElement.UseUnsafeHeaderParsing
