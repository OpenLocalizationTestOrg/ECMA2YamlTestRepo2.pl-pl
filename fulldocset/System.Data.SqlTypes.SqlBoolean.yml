### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlBoolean
  id: SqlBoolean
  children:
  - System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)
  - System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)
  - System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.ByteValue
  - System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlBoolean.Equals(System.Object)
  - System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.False
  - System.Data.SqlTypes.SqlBoolean.GetHashCode
  - System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.IsFalse
  - System.Data.SqlTypes.SqlBoolean.IsNull
  - System.Data.SqlTypes.SqlBoolean.IsTrue
  - System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Null
  - System.Data.SqlTypes.SqlBoolean.One
  - System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)
  - System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Parse(System.String)
  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlBoolean.ToSqlByte
  - System.Data.SqlTypes.SqlBoolean.ToSqlDecimal
  - System.Data.SqlTypes.SqlBoolean.ToSqlDouble
  - System.Data.SqlTypes.SqlBoolean.ToSqlInt16
  - System.Data.SqlTypes.SqlBoolean.ToSqlInt32
  - System.Data.SqlTypes.SqlBoolean.ToSqlInt64
  - System.Data.SqlTypes.SqlBoolean.ToSqlMoney
  - System.Data.SqlTypes.SqlBoolean.ToSqlSingle
  - System.Data.SqlTypes.SqlBoolean.ToSqlString
  - System.Data.SqlTypes.SqlBoolean.ToString
  - System.Data.SqlTypes.SqlBoolean.True
  - System.Data.SqlTypes.SqlBoolean.Value
  - System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  - System.Data.SqlTypes.SqlBoolean.Zero
  langs:
  - csharp
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
  type: Struct
  summary: "Reprezentuje wartość całkowitą, 1 lub 0, które mają być przechowywane w lub pobrać z bazy danych."
  remarks: "Dowolna wartość inną niż zero jest interpretowana jako 1.       Klucza różnica między struktury SqlBoolean i wartość logiczną standardowe jest fakt, że w przypadku, gdy standardowe wartość logiczna ma dwa możliwe wartości, `true` i `false`, struktura SqlBoolean ma trzema możliwymi wartościami <xref:System.Data.SqlTypes.SqlBoolean.True>, <xref:System.Data.SqlTypes.SqlBoolean.False>, lub <xref:System.Data.SqlTypes.SqlBoolean.Null>.</xref:System.Data.SqlTypes.SqlBoolean.Null> </xref:System.Data.SqlTypes.SqlBoolean.False> </xref:System.Data.SqlTypes.SqlBoolean.True>"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlBoolean : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: SqlBoolean(Boolean)
  nameWithType: SqlBoolean.SqlBoolean(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury przy użyciu podana wartość logiczną."
  syntax:
    content: public SqlBoolean (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Wartość dla nowej <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury; albo <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: SqlBoolean(Int32)
  nameWithType: SqlBoolean.SqlBoolean(Int32)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury przy użyciu określonej liczby całkowitej."
  syntax:
    content: public SqlBoolean (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Liczba całkowita, którego wartość ma być używany dla nowego <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  overload: System.Data.SqlTypes.SqlBoolean.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: And(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.And(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.And(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza operacji i dwa określone <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean And (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Wynik operacji logicznej i."
  overload: System.Data.SqlTypes.SqlBoolean.And*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ByteValue
  id: ByteValue
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ByteValue
  nameWithType: SqlBoolean.ByteValue
  fullName: System.Data.SqlTypes.SqlBoolean.ByteValue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury w postaci bajtów."
  remarks: "Wartość bajtu będzie równa 0 lub 1."
  syntax:
    content: public byte ByteValue { get; }
    return:
      type: System.Byte
      description: "Bajt reprezentujący wartość <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  overload: System.Data.SqlTypes.SqlBoolean.ByteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)
  id: CompareTo(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: CompareTo(SqlBoolean)
  nameWithType: SqlBoolean.CompareTo(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dostarczony obiekt <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> obiektu i zwraca dane dotyczące ich względne wartości."
  remarks: "Wszystkie wystąpienia <xref:System.Data.SqlTypes.SqlBoolean>, niezależnie od jego wartość jest uznawany za większy niż odwołanie o wartości null (`Nothing` w języku Visual Basic).</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlBoolean value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> obiekt do porównania, lub odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
    return:
      type: System.Int32
      description: "Liczba podpisem, która określa względne wartości wystąpienia i wartości.       <table><thead><tr><th> Wartość       </th><th> Opis       </th></tr></thead><tbody><tr><td> Ujemna liczba całkowita       </td><td> To wystąpienie jest mniejsza niż <code> value </code>.       </td></tr><tr><td> Zero       </td><td> To wystąpienie jest równe <code> value </code>.       </td></tr><tr><td> Dodatnia liczba całkowita       </td><td> To wystąpienie jest większa niż <code> value </code>.       - lub - <code> value </code> jest odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlBoolean.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlBoolean.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do określonego obiektu i zwraca dane dotyczące ich względne wartości."
  remarks: "Wszystkie wystąpienia <xref:System.Data.SqlTypes.SqlBoolean>, niezależnie od jego wartość jest uznawany za większy niż odwołanie o wartości null (`Nothing` w języku Visual Basic).</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do porównania, lub odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
    return:
      type: System.Int32
      description: "Liczba podpisem, która określa względne wartości wystąpienia i wartości.       <table><thead><tr><th> Wartość       </th><th> Opis       </th></tr></thead><tbody><tr><td> Ujemna liczba całkowita       </td><td> To wystąpienie jest mniejsza niż <code> value </code>.       </td></tr><tr><td> Zero       </td><td> To wystąpienie jest równe <code> value </code>.       </td></tr><tr><td> Dodatnia liczba całkowita       </td><td> To wystąpienie jest większa niż <code> value </code>.       - lub - <code> value </code> jest odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlBoolean.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlBoolean.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje parametru podanego obiektu <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt jest wystąpieniem <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> i są takie same; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Equals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Equals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury tak, aby sprawdzić, czy są równe."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia są równe lub <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia nie są równe. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.False
  id: "False"
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: "False"
  nameWithType: SqlBoolean.False
  fullName: System.Data.SqlTypes.SqlBoolean.False
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Reprezentuje wartość false, które mogą być przypisane do <xref:System.Data.SqlTypes.SqlBoolean.Value*>właściwości wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "False pole jest stałą dla <xref:System.Data.SqlTypes.SqlBoolean>struktury.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean False;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlBoolean.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBoolean.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.Data.SqlTypes.SqlBoolean.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBoolean.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBoolean.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Zwraca język definicji schematu XML (XSD) z określonym <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> wartość, która wskazuje XSD określonego <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> do ustalenia, czy pierwszy jest większa od drugiej."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest większy niż drugie wystąpienie w przeciwnym <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> do ustalenia, czy pierwszy jest większa niż lub równe drugiemu."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.IsFalse
  id: IsFalse
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: IsFalse
  nameWithType: SqlBoolean.IsFalse
  fullName: System.Data.SqlTypes.SqlBoolean.IsFalse
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wskazuje, czy bieżący <xref:System.Data.SqlTypes.SqlBoolean.Value*>jest <xref href=&quot;System.Data.SqlTypes.SqlBoolean.False&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "Jeśli <xref:System.Data.SqlTypes.SqlBoolean.Value%2A>jest <xref:System.Data.SqlTypes.SqlBoolean.Null>, ta właściwość będzie miał `false`.</xref:System.Data.SqlTypes.SqlBoolean.Null> </xref:System.Data.SqlTypes.SqlBoolean.Value%2A>"
  syntax:
    content: public bool IsFalse { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref> is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.IsFalse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlBoolean.IsNull
  fullName: System.Data.SqlTypes.SqlBoolean.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wskazuje, czy to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury ma wartość null."
  remarks: "Aby uzyskać więcej informacji, zobacz [Obsługa wartości zerowych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktura jest wartość null; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.IsTrue
  id: IsTrue
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: IsTrue
  nameWithType: SqlBoolean.IsTrue
  fullName: System.Data.SqlTypes.SqlBoolean.IsTrue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wskazuje, czy bieżący <xref:System.Data.SqlTypes.SqlBoolean.Value*>jest <xref href=&quot;System.Data.SqlTypes.SqlBoolean.True&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "Jeśli <xref:System.Data.SqlTypes.SqlBoolean.Value%2A>jest <xref:System.Data.SqlTypes.SqlBoolean.Null>, ta właściwość będzie miał `false`.</xref:System.Data.SqlTypes.SqlBoolean.Null> </xref:System.Data.SqlTypes.SqlBoolean.Value%2A>"
  syntax:
    content: public bool IsTrue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref> is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.IsTrue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ustalenie, czy pierwsze jest mniejsze od drugiego."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: LessThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ustalenie, czy pierwsze jest mniejsze niż drugi."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż lub równa drugie wystąpienie w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: NotEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> pod kątem równości."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia nie są równe lub <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia są równe. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlBoolean.Null
  fullName: System.Data.SqlTypes.SqlBoolean.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Reprezentuje <xref href=&quot;System.DBNull&quot;> </xref> który można przypisać do tego wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  remarks: "W polu wartość Null jest stałą dla <xref:System.Data.SqlTypes.SqlBoolean>struktury.</xref:System.Data.SqlTypes.SqlBoolean> Aby uzyskać więcej informacji, zobacz [Obsługa wartości zerowych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean Null;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.One
  id: One
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: One
  nameWithType: SqlBoolean.One
  fullName: System.Data.SqlTypes.SqlBoolean.One
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Reprezentuje jedną wartość, którą można przypisać do <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>właściwości wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury.</xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>"
  remarks: "Jedno pole jest stałą dla <xref:System.Data.SqlTypes.SqlBoolean>struktury.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean One;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)
  id: OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.OnesComplement(SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje jeden jego dopełnieniem operację na podane <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean OnesComplement (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Swoich dodatkowe podane <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_BitwiseAnd(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza operacji i dwa określone <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_BitwiseAnd (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Wynik operacji logicznej i."
  overload: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_BitwiseOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza wartości bitowe lub argumentów."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_BitwiseOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Wyniki operacji lub logicznej."
  overload: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Equality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> pod kątem równości."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia są równe lub <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia nie są równe. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_ExclusiveOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Operacja wykonywana przez bitowej OR wyłączne (XOR) na podanych parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_ExclusiveOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Wynik operacji XOR logicznej."
  overload: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlBoolean.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static bool op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlByte)
  nameWithType: SqlBoolean.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlBoolean.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlBoolean.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlInt16)
  nameWithType: SqlBoolean.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlInt32)
  nameWithType: SqlBoolean.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlBoolean.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlBoolean.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlBoolean.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlBoolean.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)
  id: op_False(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_False(SqlBoolean)
  nameWithType: SqlBoolean.op_False(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_False(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "False operator może służyć do testowania <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> do określenia, czy ma wartość false.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  syntax:
    content: public static bool op_False (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Struktury ma zostać przetestowana."
    return:
      type: System.Boolean
      description: "Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli podany parametr jest <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ma wartość false, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inaczej."
  overload: System.Data.SqlTypes.SqlBoolean.op_False*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury tak, aby ustalić, czy pierwszy jest większa od drugiej."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury tak, aby ustalić, czy pierwszy jest większa niż lub równe drugiemu."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)
  id: op_Implicit(System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Implicit(Boolean)
  nameWithType: SqlBoolean.op_Implicit(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Implicit(Boolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Implicit (bool x);
    parameters:
    - id: x
      type: System.Boolean
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlBoolean.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_Inequality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ustalenie, czy nie są takie same."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia nie są równe lub <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia są równe. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ustalenie, czy pierwsze jest mniejsze od drugiego."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje dwa wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ustalenie, czy pierwsze jest mniejsze niż drugi."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest null, wartość <xref:System.Data.SqlTypes.SqlBoolean>będzie mieć wartość null.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż lub równa drugie wystąpienie w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  id: op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_LogicalNot(SqlBoolean)
  nameWithType: SqlBoolean.op_LogicalNot(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Operacja wykonywana przez nie na <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LogicalNot (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , Na którym nie będzie można wykonać operacji."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> z <xref:System.Data.SqlTypes.SqlBoolean.Value*> <xref href=&quot;System.Data.SqlTypes.SqlBoolean.True&quot;> </xref> ma wartość true, jeśli argument <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref> Jeśli argument miał wartość null, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean.False&quot;> </xref> inaczej.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlBoolean.op_LogicalNot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  id: op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.op_OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje jeden jego dopełnieniem operację na podane <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_OnesComplement (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Swoich dodatkowe podane <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.op_OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)
  id: op_True(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: op_True(SqlBoolean)
  nameWithType: SqlBoolean.op_True(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_True(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "True — operator może służyć do testowania <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> do określenia, czy są spełnione.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  syntax:
    content: public static bool op_True (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Struktury ma zostać przetestowana."
    return:
      type: System.Boolean
      description: "Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli podany parametr jest <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> ma wartość true, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inaczej."
  overload: System.Data.SqlTypes.SqlBoolean.op_True*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Or(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Or(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Or(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje operację bitowej OR na dwóch określonych <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Or (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury, którego wartość jest wynikiem lub operacji."
  overload: System.Data.SqlTypes.SqlBoolean.Or*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlBoolean.Parse(String)
  fullName: System.Data.SqlTypes.SqlBoolean.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje określony <xref:System.String>reprezentacja wartości logicznej do jego <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> równoważne.</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>Do skonwertowania.</xref:System.String>"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> strukturę, która zawiera przeanalizowane wartości."
  overload: System.Data.SqlTypes.SqlBoolean.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader " name="XmlReader " href=""></xref>
  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter " name="XmlWriter " href=""></xref>
  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlBoolean.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, nowe <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> struktury wartość to 1. W przeciwnym razie nowy <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlBoolean.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> następnie nowe <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> struktury wartość to 1. W przeciwnym razie nowy <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlBoolean.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> następnie nowe <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> struktury wartość to 1. W przeciwnym razie nowy <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlBoolean.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Nowy <xref uid=&quot;langword_csharp_SqlInt16&quot; name=&quot;SqlInt16&quot; href=&quot;&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> następnie nowe <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> struktury wartość to 1. W przeciwnym razie nowy <xref uid=&quot;langword_csharp_SqlInt16&quot; name=&quot;SqlInt16&quot; href=&quot;&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlBoolean.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Nowy <xref uid=&quot;langword_csharp_SqlInt32&quot; name=&quot;SqlInt32&quot; href=&quot;&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, nowe <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref> struktury wartość to 1. W przeciwnym razie nowy <xref uid=&quot;langword_csharp_SqlInt32&quot; name=&quot;SqlInt32&quot; href=&quot;&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlBoolean.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref uid=&quot;langword_csharp_SqlInt64&quot; name=&quot;SqlInt64&quot; href=&quot;&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, nowe <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury wartość to 1. W przeciwnym razie nowy <xref uid=&quot;langword_csharp_SqlInt64&quot; name=&quot;SqlInt64&quot; href=&quot;&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlBoolean.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, nowe <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> wartość to 1. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, nowe <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> wartość jest równa 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury wartość nie jest 1 lub 0, nowe <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> wartość jest <xref href=&quot;System.Data.SqlTypes.SqlMoney.Null&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlBoolean.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> struktury, którego wartość wynosi 1 lub 0.       Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury wartość jest równa true, nowa <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> struktury wartość to 1; w przeciwnym razie nowy <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlBoolean.ToSqlString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> struktury, którego wartość wynosi 1 lub 0. Jeśli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury jest równa <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> następnie <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> struktury wartość to 1. W przeciwnym razie nowy <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> struktury wartość jest równa 0."
  overload: System.Data.SqlTypes.SqlBoolean.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlBoolean.ToString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury na ciąg."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg zawierający wartość <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wartość jest równa null, ciąg będzie zawierał &quot;null&quot;."
  overload: System.Data.SqlTypes.SqlBoolean.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.True
  id: "True"
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: "True"
  nameWithType: SqlBoolean.True
  fullName: System.Data.SqlTypes.SqlBoolean.True
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Reprezentuje wartość true, które mogą być przypisane do <xref:System.Data.SqlTypes.SqlBoolean.Value*>właściwości wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  remarks: "Wartość True, pole jest stałą dla <xref:System.Data.SqlTypes.SqlBoolean>struktury.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean True;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Value
  id: Value
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Value
  nameWithType: SqlBoolean.Value
  fullName: System.Data.SqlTypes.SqlBoolean.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> wartość struktury. Ta właściwość jest tylko do odczytu."
  syntax:
    content: public bool Value { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref> is <xref href=&quot;System.Data.SqlTypes.SqlBoolean.True&quot;></xref>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBoolean.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "Właściwość jest ustawiona na wartość null."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  id: Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Xor(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Xor(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Xor(SqlBoolean,SqlBoolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje operację bitowej OR wyłączne na podanych parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Xor (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Wynik operacji XOR logicznej."
  overload: System.Data.SqlTypes.SqlBoolean.Xor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBoolean.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlBoolean
  langs:
  - csharp
  name: Zero
  nameWithType: SqlBoolean.Zero
  fullName: System.Data.SqlTypes.SqlBoolean.Zero
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Reprezentuje wartość zerową przypisana do <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>właściwości wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktury.</xref:System.Data.SqlTypes.SqlBoolean.ByteValue*>"
  remarks: "Zero pole jest stałą dla <xref:System.Data.SqlTypes.SqlBoolean>struktury.</xref:System.Data.SqlTypes.SqlBoolean>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBoolean Zero;
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlNullValueException
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: SqlBoolean(Boolean)
  nameWithType: SqlBoolean.SqlBoolean(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: SqlBoolean(Int32)
  nameWithType: SqlBoolean.SqlBoolean(Int32)
  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: And(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.And(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.And(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlBoolean.ByteValue
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ByteValue
  nameWithType: SqlBoolean.ByteValue
  fullName: System.Data.SqlTypes.SqlBoolean.ByteValue
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: CompareTo(SqlBoolean)
  nameWithType: SqlBoolean.CompareTo(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlBoolean.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlBoolean.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(Object)
- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Equals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Equals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Equals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.False
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: "False"
  nameWithType: SqlBoolean.False
  fullName: System.Data.SqlTypes.SqlBoolean.False
- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlBoolean.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBoolean.GetHashCode()
- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBoolean.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBoolean.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.IsFalse
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsFalse
  nameWithType: SqlBoolean.IsFalse
  fullName: System.Data.SqlTypes.SqlBoolean.IsFalse
- uid: System.Data.SqlTypes.SqlBoolean.IsNull
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsNull
  nameWithType: SqlBoolean.IsNull
  fullName: System.Data.SqlTypes.SqlBoolean.IsNull
- uid: System.Data.SqlTypes.SqlBoolean.IsTrue
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsTrue
  nameWithType: SqlBoolean.IsTrue
  fullName: System.Data.SqlTypes.SqlBoolean.IsTrue
- uid: System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThanOrEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: NotEquals(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Null
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: "Null"
  nameWithType: SqlBoolean.Null
  fullName: System.Data.SqlTypes.SqlBoolean.Null
- uid: System.Data.SqlTypes.SqlBoolean.One
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: One
  nameWithType: SqlBoolean.One
  fullName: System.Data.SqlTypes.SqlBoolean.One
- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.OnesComplement(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseAnd(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Equality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_ExclusiveOr(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlBoolean.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlByte)
  nameWithType: SqlBoolean.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlBoolean.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlBoolean.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlInt16)
  nameWithType: SqlBoolean.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlInt32)
  nameWithType: SqlBoolean.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlBoolean.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlBoolean.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlBoolean.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlBoolean.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_False(SqlBoolean)
  nameWithType: SqlBoolean.op_False(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_False(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Implicit(Boolean)
  nameWithType: SqlBoolean.op_Implicit(Boolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Implicit(Boolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Inequality(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThan(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LogicalNot(SqlBoolean)
  nameWithType: SqlBoolean.op_LogicalNot(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_OnesComplement(SqlBoolean)
  nameWithType: SqlBoolean.op_OnesComplement(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_True(SqlBoolean)
  nameWithType: SqlBoolean.op_True(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.op_True(SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Or(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Or(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Or(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Parse(System.String)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Parse(String)
  nameWithType: SqlBoolean.Parse(String)
  fullName: System.Data.SqlTypes.SqlBoolean.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlBoolean.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlByte()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlBoolean.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlBoolean.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlBoolean.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlBoolean.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlBoolean.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlBoolean.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlBoolean.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlBoolean.ToSqlString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlString()
- uid: System.Data.SqlTypes.SqlBoolean.ToString
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToString()
  nameWithType: SqlBoolean.ToString()
  fullName: System.Data.SqlTypes.SqlBoolean.ToString()
- uid: System.Data.SqlTypes.SqlBoolean.True
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: "True"
  nameWithType: SqlBoolean.True
  fullName: System.Data.SqlTypes.SqlBoolean.True
- uid: System.Data.SqlTypes.SqlBoolean.Value
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Value
  nameWithType: SqlBoolean.Value
  fullName: System.Data.SqlTypes.SqlBoolean.Value
- uid: System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Xor(SqlBoolean,SqlBoolean)
  nameWithType: SqlBoolean.Xor(SqlBoolean,SqlBoolean)
  fullName: System.Data.SqlTypes.SqlBoolean.Xor(SqlBoolean,SqlBoolean)
- uid: System.Data.SqlTypes.SqlBoolean.Zero
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Zero
  nameWithType: SqlBoolean.Zero
  fullName: System.Data.SqlTypes.SqlBoolean.Zero
- uid: System.Data.SqlTypes.SqlBoolean.#ctor*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean.SqlBoolean
- uid: System.Data.SqlTypes.SqlBoolean.And*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: And
  nameWithType: SqlBoolean.And
- uid: System.Data.SqlTypes.SqlBoolean.ByteValue*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ByteValue
  nameWithType: SqlBoolean.ByteValue
- uid: System.Data.SqlTypes.SqlBoolean.CompareTo*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: CompareTo
  nameWithType: SqlBoolean.CompareTo
- uid: System.Data.SqlTypes.SqlBoolean.Equals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Equals
  nameWithType: SqlBoolean.Equals
- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetHashCode
  nameWithType: SqlBoolean.GetHashCode
- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GetXsdType
  nameWithType: SqlBoolean.GetXsdType
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThan
  nameWithType: SqlBoolean.GreaterThan
- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: GreaterThanOrEquals
  nameWithType: SqlBoolean.GreaterThanOrEquals
- uid: System.Data.SqlTypes.SqlBoolean.IsFalse*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsFalse
  nameWithType: SqlBoolean.IsFalse
- uid: System.Data.SqlTypes.SqlBoolean.IsNull*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsNull
  nameWithType: SqlBoolean.IsNull
- uid: System.Data.SqlTypes.SqlBoolean.IsTrue*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: IsTrue
  nameWithType: SqlBoolean.IsTrue
- uid: System.Data.SqlTypes.SqlBoolean.LessThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThan
  nameWithType: SqlBoolean.LessThan
- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: LessThanOrEquals
  nameWithType: SqlBoolean.LessThanOrEquals
- uid: System.Data.SqlTypes.SqlBoolean.NotEquals*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: NotEquals
  nameWithType: SqlBoolean.NotEquals
- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: OnesComplement
  nameWithType: SqlBoolean.OnesComplement
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseAnd
  nameWithType: SqlBoolean.op_BitwiseAnd
- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_BitwiseOr
  nameWithType: SqlBoolean.op_BitwiseOr
- uid: System.Data.SqlTypes.SqlBoolean.op_Equality*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Equality
  nameWithType: SqlBoolean.op_Equality
- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_ExclusiveOr
  nameWithType: SqlBoolean.op_ExclusiveOr
- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Explicit
  nameWithType: SqlBoolean.op_Explicit
- uid: System.Data.SqlTypes.SqlBoolean.op_False*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_False
  nameWithType: SqlBoolean.op_False
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlBoolean.op_GreaterThan
- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlBoolean.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Implicit
  nameWithType: SqlBoolean.op_Implicit
- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_Inequality
  nameWithType: SqlBoolean.op_Inequality
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThan
  nameWithType: SqlBoolean.op_LessThan
- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlBoolean.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_LogicalNot
  nameWithType: SqlBoolean.op_LogicalNot
- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_OnesComplement
  nameWithType: SqlBoolean.op_OnesComplement
- uid: System.Data.SqlTypes.SqlBoolean.op_True*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: op_True
  nameWithType: SqlBoolean.op_True
- uid: System.Data.SqlTypes.SqlBoolean.Or*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Or
  nameWithType: SqlBoolean.Or
- uid: System.Data.SqlTypes.SqlBoolean.Parse*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Parse
  nameWithType: SqlBoolean.Parse
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlBoolean.ToSqlByte
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlBoolean.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlBoolean.ToSqlDouble
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlBoolean.ToSqlInt16
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlBoolean.ToSqlInt32
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlBoolean.ToSqlInt64
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlBoolean.ToSqlMoney
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlBoolean.ToSqlSingle
- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToSqlString
  nameWithType: SqlBoolean.ToSqlString
- uid: System.Data.SqlTypes.SqlBoolean.ToString*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: ToString
  nameWithType: SqlBoolean.ToString
- uid: System.Data.SqlTypes.SqlBoolean.Value*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Value
  nameWithType: SqlBoolean.Value
- uid: System.Data.SqlTypes.SqlBoolean.Xor*
  parent: System.Data.SqlTypes.SqlBoolean
  isExternal: false
  name: Xor
  nameWithType: SqlBoolean.Xor
