### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.XsdDataContractExporter
  id: XsdDataContractExporter
  children:
  - System.Runtime.Serialization.XsdDataContractExporter.#ctor
  - System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  - System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})
  - System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)
  - System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  - System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})
  - System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)
  - System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)
  - System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)
  - System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)
  - System.Runtime.Serialization.XsdDataContractExporter.Options
  - System.Runtime.Serialization.XsdDataContractExporter.Schemas
  langs:
  - csharp
  name: XsdDataContractExporter
  nameWithType: XsdDataContractExporter
  fullName: System.Runtime.Serialization.XsdDataContractExporter
  type: Class
  summary: "Umożliwia przekształcania zestawu [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] typy, które są używane w kontraktach danych do pliku schematu XML (XSD)."
  remarks: "Po utworzeniu usługi sieci Web, która będzie zawierała dane reprezentowane przez typowych języka wspólnego (CLR) i należy wyeksportować schematów XML dla każdego typu być używane przez inne usługi sieci Web, należy użyć klasy xsddatacontractexporter —. Oznacza to, że xsddatacontractexporter — przekształca zestaw typów CLR w schematów XML. (Aby uzyskać więcej informacji o typach, które mogą być używane, zobacz [typy obsługiwane przez serializator kontraktu danych](~/add/includes/ajax-current-ext-md.md).) Następnie można uwidocznić schematów za pomocą dokumentu Web Services Description Language (WSDL) w celu użycia przez innych użytkowników, którzy potrzebują na potrzeby współdziałania z usługą.       Z drugiej strony, jeśli tworzysz usługi sieci Web konieczna jest współpraca z istniejącej usługi sieci Web, użyj <xref:System.Runtime.Serialization.XsdDataContractImporter>przekształcenia schematów XML i tworzenia typów CLR, które zawierają dane w wybranym języku programowania.</xref:System.Runtime.Serialization.XsdDataContractImporter>       Generuje xsddatacontractexporter — <xref:System.Xml.Schema.XmlSchemaSet>obiektu, który zawiera kolekcję schematów.</xref:System.Xml.Schema.XmlSchemaSet> Korzystać z zestawu schematów za pośrednictwem <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>Właściwości.</xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>      > [!NOTE] > Aby szybko generować pliki definicji (XSD) schematów XML, które mogą korzystać z innych usług sieci Web, użyj xsddatacontractexporter —.      ## Eksportowanie schematów w obiekcie XmlSchemaSet do utworzenia wystąpienia <xref:System.Xml.Schema.XmlSchemaSet>klasę, która zawiera pliki schematów XML, należy pamiętać o następujących.</xref:System.Xml.Schema.XmlSchemaSet>       Zestaw typów, których dane są eksportowane są rejestrowane jako wewnętrzne zbiór kontraktów danych. W związku z tym można wywołać <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A>metody kilka razy, aby dodać nowe typy do schematu bez zmniejszenie wydajności, ponieważ tylko nowe typy zostaną dodane do zestawu.</xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> Podczas <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>operacji nowych schematów dodawane są porównywane istniejących schematów.</xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> Jeśli występują konflikty, zostanie zgłoszony wyjątek. Konflikt jest zazwyczaj wykrywany, jeśli dwa typy danych o tej samej kontraktu nazwę, ale różne kontrakty (inne elementy członkowskie) są eksportowane przez to samo wystąpienie xsddatacontractexporter —.      ## Za pomocą eksportera zalecany sposób używania tej klasy jest następująca: 1.  Użyj jednej z <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A>przeciążenia, aby określić, czy określony typ lub zestaw typów mogą być eksportowane.</xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> Użyj jednego z przeciążeń, które jest odpowiednie do własnych potrzeb.      2.  Wywołaj odpowiadającego <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>metody.</xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>      3.  Pobrać schematów z <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>Właściwości.</xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>"
  example:
  - "The following example creates an instance of the XsdDataContractExporter and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.  \n  \n [!code-vb[XsdDataContractExporter#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_12_1.vb)]\n [!code-cs[XsdDataContractExporter#0](~/add/codesnippet/csharp/t-system.runtime.seriali_12_1.cs)]"
  syntax:
    content: public class XsdDataContractExporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: XsdDataContractExporter()
  nameWithType: XsdDataContractExporter.XsdDataContractExporter()
  fullName: System.Runtime.Serialization.XsdDataContractExporter.XsdDataContractExporter()
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.XsdDataContractExporter&quot;> </xref> klasy."
  syntax:
    content: public XsdDataContractExporter ();
    parameters: []
  overload: System.Runtime.Serialization.XsdDataContractExporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)
  id: '#ctor(System.Xml.Schema.XmlSchemaSet)'
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: XsdDataContractExporter(XmlSchemaSet)
  nameWithType: XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.XsdDataContractExporter&quot;> </xref> klasy przy użyciu określonego zestawu schematów."
  remarks: "Użyj tego przeciążenia, jeśli masz istniejącą <xref:System.Xml.Schema.XmlSchemaSet>do której chcesz dodać nowych schematów.</xref:System.Xml.Schema.XmlSchemaSet> Po utworzymy <xref:System.Runtime.Serialization.XsdDataContractExporter>o tego przeciążenia wywołań <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>metody w celu dodania nowych typów do istniejącego zestawu.</xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> </xref:System.Runtime.Serialization.XsdDataContractExporter>"
  syntax:
    content: public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Zawierającego schematy do wyeksportowania."
  overload: System.Runtime.Serialization.XsdDataContractExporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  id: CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: CanExport(ICollection<Assembly>)
  nameWithType: XsdDataContractExporter.CanExport(ICollection<Assembly>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.CanExport(ICollection<Assembly>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość wskazującą, czy zestaw typów .common języka wspólnego (CLR) zawartych w zestawie zestawy mogą być eksportowane."
  syntax:
    content: public bool CanExport (System.Collections.Generic.ICollection<System.Reflection.Assembly> assemblies);
    parameters:
    - id: assemblies
      type: System.Collections.Generic.ICollection{System.Reflection.Assembly}
      description: "A &lt;xref:System.Collections.Generic.ICollection%601&gt; z <xref:System.Reflection.Assembly>zawierający zestawy z typami do wyeksportowania.</xref:System.Reflection.Assembly>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli można wyeksportować typy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractExporter.CanExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})
  id: CanExport(System.Collections.Generic.ICollection{System.Type})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: CanExport(ICollection<Type>)
  nameWithType: XsdDataContractExporter.CanExport(ICollection<Type>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.CanExport(ICollection<Type>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość wskazującą, czy zestaw .common języka wspólnego (CLR) typów zawartych w &lt;xref:System.Collections.Generic.ICollection%601&gt; mogą być eksportowane."
  syntax:
    content: public bool CanExport (System.Collections.Generic.ICollection<Type> types);
    parameters:
    - id: types
      type: System.Collections.Generic.ICollection{System.Type}
      description: "A &lt;xref:System.Collections.Generic.ICollection%601&gt; zawierający określonych typów do wyeksportowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli można wyeksportować typy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractExporter.CanExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)
  id: CanExport(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: CanExport(Type)
  nameWithType: XsdDataContractExporter.CanExport(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.CanExport(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość wskazującą, czy określony typ środowiska uruchomieniowego (języka wspólnego CLR) języka wspólnego mogą być eksportowane."
  remarks: ''
  example:
  - "The following example calls the CanExport method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.  \n  \n [!code-vb[XsdDataContractExporter#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_1_1.vb)]\n [!code-cs[XsdDataContractExporter#1](~/add/codesnippet/csharp/m-system.runtime.seriali_1_1.cs)]"
  syntax:
    content: public bool CanExport (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Do wyeksportowania.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli typ można wyeksportować; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractExporter.CanExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  id: Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: Export(ICollection<Assembly>)
  nameWithType: XsdDataContractExporter.Export(ICollection<Assembly>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Export(ICollection<Assembly>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Przekształca typy zawarte w określonej kolekcji i zestawów."
  syntax:
    content: public void Export (System.Collections.Generic.ICollection<System.Reflection.Assembly> assemblies);
    parameters:
    - id: assemblies
      type: System.Collections.Generic.ICollection{System.Reflection.Assembly}
      description: "A &lt;xref:System.Collections.Generic.ICollection%601&gt; (z <xref:System.Reflection.Assembly>) zawiera typy do wyeksportowania.</xref:System.Reflection.Assembly>"
  overload: System.Runtime.Serialization.XsdDataContractExporter.Export*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>assemblies</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Reflection.Assembly>w kolekcji jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.Assembly>"
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})
  id: Export(System.Collections.Generic.ICollection{System.Type})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: Export(ICollection<Type>)
  nameWithType: XsdDataContractExporter.Export(ICollection<Type>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Export(ICollection<Type>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Przekształca typów zawartych w &lt;xref:System.Collections.Generic.ICollection%601&gt; przekazany do tej metody."
  syntax:
    content: public void Export (System.Collections.Generic.ICollection<Type> types);
    parameters:
    - id: types
      type: System.Collections.Generic.ICollection{System.Type}
      description: "A &lt;xref:System.Collections.Generic.ICollection%601&gt; (z <xref:System.Type>) zawiera typy do wyeksportowania.</xref:System.Type>"
  overload: System.Runtime.Serialization.XsdDataContractExporter.Export*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>types</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ w kolekcji jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)
  id: Export(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: Export(Type)
  nameWithType: XsdDataContractExporter.Export(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Export(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Przekształca określony [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] typu do schematu XML schema definition language (XSD)."
  remarks: "Wywołanie <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A>ustalenie, czy można wyeksportować typu.</xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> Po wywołaniu metody eksportu, można pobrać schematu za pomocą <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>Właściwości.</xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>"
  syntax:
    content: public void Export (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Do przekształcania schematu XML.</xref:System.Type>"
  overload: System.Runtime.Serialization.XsdDataContractExporter.Export*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)
  id: GetRootElementName(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: GetRootElementName(Type)
  nameWithType: XsdDataContractExporter.GetRootElementName(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Zwraca nazwę najwyższego poziomu i przestrzeni nazw dla <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public System.Xml.XmlQualifiedName GetRootElementName (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Do zapytania.</xref:System.Type>"
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>Reprezentujący najwyższego poziomu nazwę i przestrzeń nazw dla tego <xref:System.Type>, które są zapisywane do strumienia podczas pisania tego obiektu.</xref:System.Type> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)
  id: GetSchemaType(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: GetSchemaType(Type)
  nameWithType: XsdDataContractExporter.GetSchemaType(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Zwraca typ schematu XML dla określonego typu."
  remarks: "Głównym celem tej metody jest umożliwienie typy anonimowe w schemacie XML do reprezentacji. Ponieważ typy anonimowe nie ma nazwy kontraktu i przestrzeni nazw, ich nie można przeszukiwać przy użyciu <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> Ta metoda zwraca <xref:System.Xml.Schema.XmlSchemaType>definicji dla takich typów.</xref:System.Xml.Schema.XmlSchemaType> Typy, dla którego <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>Metoda zwraca prawidłową nazwę, ta metoda zwraca `null`.</xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Typ do zwrócenia schemat."
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> Zawierający schematu XML."
  overload: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)
  id: GetSchemaTypeName(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: GetSchemaTypeName(Type)
  nameWithType: XsdDataContractExporter.GetSchemaTypeName(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Zwraca nazwę i kontraktu przestrzeń nazw kontraktu dla <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Który został wyeksportowany.</xref:System.Type>"
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>Reprezentujący typ i jego przestrzeni nazw Nazwa kontraktu.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.Options
  id: Options
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: Options
  nameWithType: XsdDataContractExporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Options
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera lub ustawia <xref href=&quot;System.Runtime.Serialization.ExportOptions&quot;> </xref> zawiera opcje, które można ustawić dla operacji eksportowania."
  syntax:
    content: public System.Runtime.Serialization.ExportOptions Options { get; set; }
    return:
      type: System.Runtime.Serialization.ExportOptions
      description: "<xref href=&quot;System.Runtime.Serialization.ExportOptions&quot;> </xref> Zawiera opcje używane w celu dostosowania sposobu typy są eksportowane do schematów."
  overload: System.Runtime.Serialization.XsdDataContractExporter.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractExporter.Schemas
  id: Schemas
  parent: System.Runtime.Serialization.XsdDataContractExporter
  langs:
  - csharp
  name: Schemas
  nameWithType: XsdDataContractExporter.Schemas
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Schemas
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Pobiera kolekcję schematów XML wyeksportowane."
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet Schemas { get; }
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Zawierającego schematy przekształcone z zestawu typowych języka wspólnego (CLR) po wywołaniu <xref:System.Runtime.Serialization.XsdDataContractExporter.Export*>metody.</xref:System.Runtime.Serialization.XsdDataContractExporter.Export*>"
  overload: System.Runtime.Serialization.XsdDataContractExporter.Schemas*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: XsdDataContractExporter()
  nameWithType: XsdDataContractExporter.XsdDataContractExporter()
  fullName: System.Runtime.Serialization.XsdDataContractExporter.XsdDataContractExporter()
- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: XsdDataContractExporter(XmlSchemaSet)
  nameWithType: XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: CanExport(ICollection<Assembly>)
  nameWithType: XsdDataContractExporter.CanExport(ICollection<Assembly>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.CanExport(ICollection<Assembly>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Assembly>
  nameWithType: ICollection<Assembly>
  fullName: System.Collections.Generic.ICollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: CanExport(ICollection<Type>)
  nameWithType: XsdDataContractExporter.CanExport(ICollection<Type>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.CanExport(ICollection<Type>)
- uid: System.Collections.Generic.ICollection{System.Type}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Type>
  nameWithType: ICollection<Type>
  fullName: System.Collections.Generic.ICollection<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: CanExport(Type)
  nameWithType: XsdDataContractExporter.CanExport(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.CanExport(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Export(ICollection<Assembly>)
  nameWithType: XsdDataContractExporter.Export(ICollection<Assembly>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Export(ICollection<Assembly>)
- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Export(ICollection<Type>)
  nameWithType: XsdDataContractExporter.Export(ICollection<Type>)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Export(ICollection<Type>)
- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Export(Type)
  nameWithType: XsdDataContractExporter.Export(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Export(Type)
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: GetRootElementName(Type)
  nameWithType: XsdDataContractExporter.GetRootElementName(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(Type)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: GetSchemaType(Type)
  nameWithType: XsdDataContractExporter.GetSchemaType(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(Type)
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: GetSchemaTypeName(Type)
  nameWithType: XsdDataContractExporter.GetSchemaTypeName(Type)
  fullName: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(Type)
- uid: System.Runtime.Serialization.XsdDataContractExporter.Options
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractExporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Options
- uid: System.Runtime.Serialization.ExportOptions
  parent: System.Runtime.Serialization
  isExternal: false
  name: ExportOptions
  nameWithType: ExportOptions
  fullName: System.Runtime.Serialization.ExportOptions
- uid: System.Runtime.Serialization.XsdDataContractExporter.Schemas
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Schemas
  nameWithType: XsdDataContractExporter.Schemas
  fullName: System.Runtime.Serialization.XsdDataContractExporter.Schemas
- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: XsdDataContractExporter
  nameWithType: XsdDataContractExporter.XsdDataContractExporter
- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: CanExport
  nameWithType: XsdDataContractExporter.CanExport
- uid: System.Runtime.Serialization.XsdDataContractExporter.Export*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Export
  nameWithType: XsdDataContractExporter.Export
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: GetRootElementName
  nameWithType: XsdDataContractExporter.GetRootElementName
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: GetSchemaType
  nameWithType: XsdDataContractExporter.GetSchemaType
- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: GetSchemaTypeName
  nameWithType: XsdDataContractExporter.GetSchemaTypeName
- uid: System.Runtime.Serialization.XsdDataContractExporter.Options*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractExporter.Options
- uid: System.Runtime.Serialization.XsdDataContractExporter.Schemas*
  parent: System.Runtime.Serialization.XsdDataContractExporter
  isExternal: false
  name: Schemas
  nameWithType: XsdDataContractExporter.Schemas
