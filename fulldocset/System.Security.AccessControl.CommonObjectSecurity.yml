### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonObjectSecurity
  id: CommonObjectSecurity
  children:
  - System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  langs:
  - csharp
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity
  fullName: System.Security.AccessControl.CommonObjectSecurity
  type: Class
  summary: "Kontroluje dostęp do obiektów bez bezpośredniej list kontroli dostępu (ACL). Ta klasa jest abstrakcyjna klasa podstawowa dla <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> klasy."
  syntax:
    content: 'public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> klasy."
  syntax:
    content: protected CommonObjectSecurity (bool isContainer);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nowy obiekt jest obiektem kontenera."
  overload: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  id: AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Dodaje regułę dostępu określonego do poufnej listy kontroli dostępu (DACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  remarks: "Dodawanie reguły dostępu może spowodować reguły dostępu do istniejącej listy DACL do scalenia.       Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca."
  syntax:
    content: protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do dodania."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  id: AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Dodaje reguła inspekcji określony do listy kontroli dostępu do systemu (SACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  remarks: "Dodawanie reguły inspekcji może spowodować istniejących reguł dostępu SACL do scalenia."
  syntax:
    content: protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "Reguła inspekcji, aby dodać."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Pobiera kolekcję zasad dostępu skojarzonych z identyfikatorem określonym zabezpieczeń."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić dostęp reguły jawnie ustaw dla obiekt."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby dołączyć dziedziczone reguły dostępu."
    - id: targetType
      type: System.Type
      description: "Określa, czy identyfikator zabezpieczeń, do których chcesz pobrać zasady dostępu do elementu typu T:System.Security.Principal.SecurityIdentifier lub T:System.Security.Principal.NTAccount. Wartość tego parametru musi być typem, który można przekonwertować na <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> typu."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "Kolekcja reguł dostępu do skojarzonego z określonym <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> obiektu."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Pobiera kolekcję zasad inspekcji skojarzonych z identyfikatorem określonym zabezpieczeń."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić inspekcji reguły jawnie ustaw dla obiekt."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby dołączyć dziedziczone zasady inspekcji."
    - id: targetType
      type: System.Type
      description: "Identyfikator zabezpieczeń, do których chcesz pobrać zasady inspekcji. Musi to być obiekt, który można rzutować jako <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> obiektu."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "Kolekcja reguł inspekcja skojarzonego z określonym <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> obiektu."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Dotyczy określonej zmiany do poufnej dostępu formantu listy (DACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  remarks: "Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca."
  syntax:
    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "Zmiana do zastosowania do listy DACL."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do zmodyfikowania."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli lista DACL jest pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli lista DACL jest pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Dotyczy określonej zmiany do systemu dostępu formantu listy (SACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  syntax:
    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "Zmiana do zastosowania do Lista SACL."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "Reguła inspekcji, aby zmodyfikować."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli Lista SACL jest pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli Lista SACL jest pomyślnie zmodyfikował; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa reguł dostępu, które zawierają tej samej maski dostępu i identyfikator zabezpieczeń jako reguła dostępu określonego z poufnej listy kontroli dostępu (DACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  remarks: "Usunięcie dostępu odbywa się przy użyciu algorytmu złożonych, który może być dodany regułami kontroli dostępu, oprócz ich usunięcie.       Ta metoda nie powiedzie się usunąć regułę dostępu i zwraca `false` Jeśli reguły dziedziczenia skojarzone z reguły dostępu są zbyt złożone dla algorytmu usunięcie powiodło się.       Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca."
  syntax:
    content: protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do usunięcia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli reguła dostępu został pomyślnie usunięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie reguły dostępu z tego samego identyfikatora zabezpieczeń, jak reguły dostępu określonego z poufnej listy kontroli dostępu (DACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  remarks: "Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca."
  syntax:
    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do usunięcia."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkich reguł dostępu, które dokładnie odpowiadać reguła dostępu określonego z DACL dostępu formantu listy (DACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  remarks: "Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca."
  syntax:
    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do usunięcia."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa zasady inspekcji, zawierające tej samej maski dostępu i identyfikator zabezpieczeń inspekcji określonej reguły z listy kontroli dostępu (SACL) systemu skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  remarks: "Usuwanie inspekcji odbywa się przy użyciu algorytmu złożonych, który może być dodany regułami kontroli inspekcji oprócz ich usunięcie.       Ta metoda nie powiedzie się usunąć regułę inspekcji i zwraca `false` Jeśli reguły dziedziczenia skojarzone z zasadą inspekcji są zbyt złożone dla algorytmu usunięcie powiodło się."
  syntax:
    content: protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "Reguła inspekcji do usunięcia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zasady inspekcji został pomyślnie usunięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie zasady inspekcji mających taki sam identyfikator zabezpieczeń inspekcji określonej reguły z listy kontroli dostępu (SACL) systemu skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  syntax:
    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "Reguła inspekcji do usunięcia."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie reguły inspekcji, które dokładnie zgodne z regułą określonego inspekcji z systemu dostępu formantu listy (SACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiektu."
  syntax:
    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "Reguła inspekcji do usunięcia."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  id: ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie reguły dostępu w DACL dostępu formantu listy (DACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiekt, a następnie dodaje regułę dostępu określony."
  remarks: "Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca."
  syntax:
    content: protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do zresetowania."
  overload: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  id: SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie reguły dostępu, zawierające te same identyfikator zabezpieczeń i kwalifikator reguły dostępu określonego w poufnej listy kontroli dostępu (DACL) skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiekt, a następnie dodaje regułę dostępu określony."
  remarks: "Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca."
  syntax:
    content: protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Reguły dostępu do ustawienia."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  id: SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie zasady inspekcji zawierające te same identyfikator zabezpieczeń i kwalifikator inspekcji określonej reguły listy kontroli dostępu (SACL) systemu skojarzony z tym <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> obiekt, a następnie dodaje reguła inspekcji określony."
  syntax:
    content: protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "Reguła inspekcji, które można ustawić."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.AuthorizationRuleCollection
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRuleCollection
  nameWithType: AuthorizationRuleCollection
  fullName: System.Security.AccessControl.AuthorizationRuleCollection
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity.CommonObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: CommonObjectSecurity.AddAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: CommonObjectSecurity.AddAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules
  nameWithType: CommonObjectSecurity.GetAccessRules
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules
  nameWithType: CommonObjectSecurity.GetAuditRules
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess
  nameWithType: CommonObjectSecurity.ModifyAccess
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit
  nameWithType: CommonObjectSecurity.ModifyAudit
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: CommonObjectSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: CommonObjectSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: CommonObjectSecurity.ResetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: CommonObjectSecurity.SetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: CommonObjectSecurity.SetAuditRule
