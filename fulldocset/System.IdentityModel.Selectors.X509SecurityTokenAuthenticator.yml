### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  id: X509SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  type: Class
  summary: "Uwierzytelnia <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>."
  remarks: "Klasa X509SecurityTokenAuthenticator służy do uwierzytelniania <xref:System.IdentityModel.Tokens.X509SecurityToken>tokenów zabezpieczających.</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: 'public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> klasy."
  remarks: "Gdy <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>Metoda jest wywoływana w celu uwierzytelnienia tokenu, certyfikat X.509 nie jest mapowany na tożsamość systemu Windows i certyfikat zostanie zweryfikowany przy użyciu łańcucha certyfikatów.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: public X509SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> przy użyciu modułu sprawdzania poprawności określonego certyfikatu."
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator>Klasy zawiera zestaw wstępnie zdefiniowanych certyfikatu weryfikacji modeli, takie jak <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>Właściwości.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Te modele weryfikacji mogą zostać przekazane do `validator` parametru. Jeśli aplikacja wymaga metody niestandardowego sprawdzania poprawności, klasa wyprowadzona z <xref:System.IdentityModel.Selectors.X509CertificateValidator>i zastąpić <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metody.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Domyślnie <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>certyfikat X.509 nie jest zmapowany na tożsamość systemu Windows.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> które sprawdza, czy certyfikat jest prawidłowy."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> przy użyciu określonego certyfikatu metody weryfikacji i wskazuje, czy tożsamość certyfikat jest mapowany na tożsamość systemu Windows."
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator>Klasy zawiera zestaw wstępnie zdefiniowanych certyfikatu weryfikacji modeli, takie jak <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>Właściwości.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Te modele weryfikacji mogą zostać przekazane do `validator` parametru. Jeśli aplikacja wymaga metody niestandardowego sprawdzania poprawności, klasa wyprowadzona z <xref:System.IdentityModel.Selectors.X509CertificateValidator>i zastąpić <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metody.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Gdy <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>Metoda jest wywoływana w celu uwierzytelnienia tokenu i `mapToWindows` jest `true`, certyfikat X.509 jest mapowany na konto systemu Windows i oświadczenia są dodawane do <xref:System.IdentityModel.Policy.EvaluationContext>z grupy systemu Windows, do których należy użytkownik.</xref:System.IdentityModel.Policy.EvaluationContext> </xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> Jak certyfikatu X.509 jest mapowany na konto systemu Windows zależy od typu tokenu zabezpieczeń: — token zabezpieczający jest typu <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, ma zamapowany certyfikat X.509, za pomocą <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>Właściwości.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>      -Gdy token zabezpieczający jest typu `X509SecurityToken`, certyfikat X.509 jest mapowany na konto systemu Windows przy użyciu nazwy głównej użytkownika (UPN)."
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> które sprawdza, czy certyfikat jest prawidłowy."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do mapowania tożsamości certyfikatu tożsamości systemu Windows; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> przy użyciu określonego certyfikatu metody weryfikacji i wskazuje, czy tożsamość certyfikat jest mapowany na tożsamość systemu Windows, a użytkownik należy do grup systemu Windows."
  remarks: "Przekaż `false` do `includeWindowsGroups` parametr informacji grupowania systemu Windows nie jest wymagany do zwiększenia wydajności.       <xref:System.IdentityModel.Selectors.X509CertificateValidator>Klasa ma kilka właściwości statyczne, takie jak <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>Właściwości, które mogą zostać przekazane do `validator` parametru.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Właściwości te zapewniają typowe metody weryfikacji certyfikatów X.509. Gdy wymagana jest metoda niestandardowego sprawdzania poprawności, klasa wyprowadzona z <xref:System.IdentityModel.Selectors.X509CertificateValidator>i zastąpić <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metody.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Gdy `true` została przekazana do `mapToWindows` parametru certyfikat X.509 jest mapowany na konto systemu Windows i odpowiednie oświadczenia są dodawane do <xref:System.IdentityModel.Policy.EvaluationContext>, takie jak grup systemu Windows, które użytkownik należy do.</xref:System.IdentityModel.Policy.EvaluationContext> Jeśli token zabezpieczający jest typu <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>Właściwości jest przy użyciu tożsamości, która została określona w tokenie; w przeciwnym razie certyfikatu X.509 jest mapowany na tożsamość systemu Windows przy użyciu logowania S4U protokołu Kerberos, na podstawie rozszerzenia SubjectAltNames głównej nazwy użytkownika certyfikatu X.509.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> które sprawdza, czy certyfikat jest prawidłowy."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do mapowania tożsamości certyfikatu tożsamości systemu Windows; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeWindowsGroups
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić grupy systemu Windows użytkownik należy do w <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>właściwość, która jest zbudowany przez cały proces uwierzytelniania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera wartość wskazującą, czy można zweryfikować tokenu zabezpieczającego określonego przez wystawcę uwierzytelnienia tokenów to zabezpieczeń."
  remarks: "Metoda CanValidateTokenCore nie uwierzytelnia tokenu zabezpieczającego; które jest wykonywane przez <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>metody.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Do sprawdzenia poprawności."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>gdy <code> token </code> jest <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> tokenu zabezpieczającego lub klasą pochodzącą z <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  id: MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera wartość wskazującą, czy w celu zmapowania certyfikatu X.509 do konta systemu Windows."
  remarks: "Właściwość MapCertificateToWindowsAccount można ustawić tylko w konstruktorze.       Jeśli używane zabezpieczenia na poziomie transportu protokołu SSL lub HTTPS i mapowanie już podano przez podstawowy kanał zabezpieczeń lub Internet Information Services (IIS), mapowania jest stosowana z nie weryfikacji łańcucha. W przeciwnym razie przed wykonaniem mapowanie, certyfikat zostanie zweryfikowany przy użyciu łańcucha certyfikatów, a certyfikat muszą być powiązane z tożsamością NT_AUTHORITY. Struktura łańcucha używana odpowiada CERT_CHAIN_POLICY_NT_AUTH zgodnie z definicją w `CertVerifyCertificateChainPolicy` — funkcja (zobacz [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) funkcji w zestawie SDK Cryptography). Problem ten występuje tylko w przypadku mapowania certyfikatu na konto systemu Windows."
  syntax:
    content: public bool MapCertificateToWindowsAccount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w celu zmapowania certyfikatu X.509 do konta systemu Windows; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Uwierzytelnia tokenu zabezpieczającego określonego i zwraca zestaw elementów zasady autoryzacji dla tokenu zabezpieczającego."
  remarks: "W przypadku przesłonięcia metody ValidateTokenCore przestrzegać następujących wytycznych: — przekazany token zabezpieczający `token` parametr nie może być weryfikowane, throw <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>wyjątek.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      — Jeśli nie ma żadnych zasad autoryzacji dla tej aplikacji, zwróć pustą <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>typu <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       Gdy `null` jest zwracana przez tę metodę [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] zgłasza <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>wyjątek.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       Wywołania metody ValidateTokenCore <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>metody metody weryfikacji, określonym w Konstruktorze do uwierzytelniania `token` parametru.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Do sprawdzenia poprawności."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; typu <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> zawierający zestaw zasad autoryzacji dla tej aplikacji."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore
