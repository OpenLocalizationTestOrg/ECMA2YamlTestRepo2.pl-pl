### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlSecureResolver
  id: XmlSecureResolver
  children:
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  - System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  - System.Xml.XmlSecureResolver.Credentials
  - System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver
  fullName: System.Xml.XmlSecureResolver
  type: Class
  summary: "Pomaga zabezpieczyć inną implementację <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> zawijania <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> obiektu i ograniczania zasobów który odpowiadającego <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> ma dostęp do."
  remarks: "<xref:System.Xml.XmlUrlResolver>Klasa jest domyślny program rozpoznawania nazw dla wszystkich klas w <xref:System.Xml>przestrzeni nazw.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> Służy do ładowanie dokumentów XML oraz do zasobów zewnętrznych, takich jak jednostki, definicje DTD i schematy, rozwiąż i zaimportować lub zawiera dyrektywy, które.       Można zastąpić to ustawienie domyślne, określając <xref:System.Xml.XmlResolver>obiekt ma być używany.</xref:System.Xml.XmlResolver> Na przykład, jeśli chcesz ograniczyć zasoby, do którego odpowiadającego <xref:System.Xml.XmlResolver>może uzyskać dostęp, można użyć obiektu XmlSecureResolver.</xref:System.Xml.XmlResolver>       XmlSecureResolver zawija się wokół konkretną implementację <xref:System.Xml.XmlResolver>i ogranicza zasoby który odpowiadającego <xref:System.Xml.XmlResolver>ma dostęp do.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver> Na przykład XmlSecureResolver ma możliwość zakazać przekierowania między domenami, co następuje z osadzonego odwołania jednolity identyfikator zasobów (URI).       Podczas konstruowania obiektu XmlSecureResolver, podania prawidłowej <xref:System.Xml.XmlResolver>implementacji wraz z adresu URL, wystąpienia obiektu dowód lub zestaw uprawnień, który jest używany przez XmlSecureResolver w celu określenia zabezpieczeń.</xref:System.Xml.XmlResolver> Albo <xref:System.Security.PermissionSet?displayProperty=fullName>wygenerowaniu lub istniejące co najmniej jedna jest używana i <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName>jest wywoływana w celu zabezpieczania <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> odpowiadającego</xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> </xref:System.Security.PermissionSet?displayProperty=fullName>      > [!IMPORTANT] > XmlSecureResolver obiekty mogą zawierać poufne informacje, takie jak poświadczenia użytkownika. Należy zachować ostrożność podczas buforowania XmlSecureResolver obiektów i nie powinno przekazać obiekt XmlSecureResolver do niezaufany składnik.      > [!IMPORTANT] > Istnieją różnice w infrastrukturze zabezpieczeń dla kodu uruchomionego na .NET Framework środowisko uruchomieniowe języka wspólnego (CLR) i kod działający na CLR, która jest zintegrowana w ramach programu Microsoft SQL Server 2005. Może to prowadzić do przypadków, gdy kod opracowanych dla środowiska CLR platformy .NET Framework działa inaczej w przypadku użycia programu SQL Server zintegrowane CLR. Jedną z tych różnic wpływa klasy XmlSecureResolver, gdy masz dowód, który jest oparty na adres URL (to znaczy, jeśli używasz <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29>metody lub <xref:System.Xml.XmlSecureResolver.%23ctor%2A>konstruktora).</xref:System.Xml.XmlSecureResolver.%23ctor%2A> </xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> Zasady rozwiązania CLR zintegrowane mechanizmu programu SQL Server nie używa <xref:System.Security.Policy.Url>lub <xref:System.Security.Policy.Zone>informacji.</xref:System.Security.Policy.Zone> </xref:System.Security.Policy.Url> Zamiast tego przyznaje ona uprawnienia oparte na identyfikator GUID, który serwer dodaje podczas zestawy zostały załadowane. Jeśli używasz XmlSecureResolver w programie SQL Server zintegrowane CLR, wymagane udowodnić bezpośrednio za pomocą określonego <xref:System.Security.PermissionSet>.</xref:System.Security.PermissionSet>      ## Aby używać bezpiecznego 1 program rozpoznawania nazw.  Utwórz XmlSecureResolver z zestawem odpowiednie uprawnienia.      2.  Utwórz <xref:System.Xml.XmlReaderSettings>obiekt, który używa obiektu XmlSecureResolver.</xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples #5a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)][!code-cs[XmlSecureResolver_Samples #5a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs) ] 3.        Przekaż <xref:System.Xml.XmlReaderSettings>do obiektu <xref:System.Xml.XmlReader.Create%2A>metody podczas tworzenia <xref:System.Xml.XmlReader>obiektu.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)][!code-cs[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs) ] ##, aby ograniczyć dostęp za pomocą Użyj adresu URL <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>konstruktora w celu utworzenia obiektu XmlSecureResolver, który może uzyskiwać dostęp do witryny lokalny intranet.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>             [!code-vb[XmlSecureResolver_Samples #3](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)][!code-cs[XmlSecureResolver_Samples #3](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs) ] ##, aby ograniczyć dostęp za pomocą uprawnień wartość 1.    Utwórz <xref:System.Net.WebPermission>obiektu.</xref:System.Net.WebPermission>           [!code-vb[XmlSecureResolver_Samples #4a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)][!code-cs[XmlSecureResolver_Samples #4a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs) ] 2.        Określ adresy URL, które chcesz zezwolić na dostęp do.           [!code-vb[XmlSecureResolver_Samples #4b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)][!code-cs[XmlSecureResolver_Samples #4b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs) ] 3.        Dodaj uprawnienia sieci web do <xref:System.Security.PermissionSet>obiektu.</xref:System.Security.PermissionSet>           [!code-vb[C# 4 XmlSecureResolver_Samples](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)][!code-cs[XmlSecureResolver_Samples #4 c](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs) ] 4.        Użyj <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>konstruktora w celu utworzenia obiektu XmlSecureResolver przy użyciu zestawu uprawnień.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>           [!code-vb[XmlSecureResolver_Samples&#4; d](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)][!code-cs[XmlSecureResolver_Samples&#4; d](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs) ] zobacz <xref:System.Xml.XmlSecureResolver.%23ctor%2A>Strona referencyjna innym przykładem.</xref:System.Xml.XmlSecureResolver.%23ctor%2A>            ## Aby ograniczyć dostęp za pomocą dowód możesz ograniczyć dostęp za pomocą <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>konstruktora i określając <xref:System.Security.Policy.Evidence>.</xref:System.Security.Policy.Evidence> </xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> <xref:System.Security.Policy.Evidence>Służy do tworzenia, <xref:System.Security.PermissionSet>która jest stosowana do podstawowej <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> </xref:System.Security.PermissionSet> </xref:System.Security.Policy.Evidence> Wywołania XmlSecureResolver <xref:System.Security.PermissionSet.PermitOnly%2A>na utworzony <xref:System.Security.PermissionSet>przed otwarciem żadnych zasobów.</xref:System.Security.PermissionSet> </xref:System.Security.PermissionSet.PermitOnly%2A>       Poniżej przedstawiono kilka typowych scenariuszy i typ dowodu zapewnienie dla każdego: — Jeśli pracujesz w pełni zaufanym środowisku, umożliwiają utworzenie dowody używanemu zestawowi: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs) ] — Jeśli pracujesz w środowisku częściowo zaufany kod i dane pochodzące ze źródła zewnętrznego i znasz pochodzenie źródła zewnętrznego i masz zweryfikowania identyfikatora URI , użyj identyfikatora URI, aby utworzyć dowody: [!code-vb [XmlSecureResolver_Samples&#2;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)][!code-cs[XmlSecureResolver_Samples&#2;](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs) ] — Jeśli pracujesz w środowisku częściowo zaufany kod i dane pochodzące ze źródła zewnętrznego, ale nie znasz albo pochodzenie źródła zewnętrznego: Ustaw `evidence` parametr `null`.             Dzięki temu Brak dostępu do zasobów.           - lub — jeśli aplikacja wymaga dostęp do zasobów, poproś dowód wywołującego.      ## Na potrzeby bezpiecznego rozpoznawania załaduj arkusz stylów XSLT 1.  Utwórz XmlSecureResolver z zestawem odpowiednie uprawnienia.      2.  Przekaż XmlSecureResolver do <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>metody.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>           [!code-vb[XmlSecureResolver_Samples&#6;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)][!code-cs[XmlSecureResolver_Samples&#6;      ](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)]"
  syntax:
    content: 'public class XmlSecureResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  id: '#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> klasy z <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> i <xref href=&quot;System.Security.PermissionSet&quot;> </xref> określony."
  remarks: ''
  example:
  - "The following example constructs an <xref:System.Xml.XmlSecureResolver> object by using a customized permission set.  \n  \n [!code-cs[XmlSecureResolver.cctor#1](~/add/codesnippet/csharp/e6fb0edb-66a8-45c7-82d0-_1.cs)]\n [!code-cpp[XmlSecureResolver.cctor#1](~/add/codesnippet/cpp/e6fb0edb-66a8-45c7-82d0-_1.cpp)]\n [!code-vb[XmlSecureResolver.cctor#1](~/add/codesnippet/visualbasic/e6fb0edb-66a8-45c7-82d0-_1.vb)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Program rozpoznawania nazw XML, który jest opakowany przez <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "Ustaw uprawnienia, aby zastosować do odpowiadającego <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Wywołania &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; metody uprawnienie ustawić przed wywołaniem <xref:System.Xml.XmlSecureResolver.GetEntity*>Metoda podstawowego rozpoznawania nazw XML.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: '#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> klasy z <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> i <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> określony."
  remarks: "Poniżej przedstawiono kilka możliwych scenariuszy i typ dowodu zapewnienie dla każdego scenariusza: - Jeśli pracujesz w pełni zaufanym środowisku, umożliwiają utworzenie dowody używanemu zestawowi: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs) ] — Jeśli pracujesz w środowisku częściowo zaufany kod i dane pochodzące ze źródła zewnętrznego i znasz pochodzenie źródła zewnętrznego i masz zweryfikowania identyfikatora URI , użyj identyfikatora URI, aby utworzyć dowody: [!code-vb [XmlSecureResolver_Samples&#2;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)][!code-cs[XmlSecureResolver_Samples&#2;](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs) ] — Jeśli pracujesz w środowisku częściowo zaufany kod i dane pochodzące ze źródła zewnętrznego, ale nie znasz albo pochodzenie źródła zewnętrznego: Ustaw `evidence` parametr `null`.             Dzięki temu Brak dostępu do zasobów.           - lub — jeśli aplikacja wymaga dostęp do zasobów, poproś dowód wywołującego."
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Program rozpoznawania nazw XML, który jest opakowany przez <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Dowód używany do tworzenia <xref href=&quot;System.Security.PermissionSet&quot;> </xref> zastosowanych do odpowiadającego <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Wywołania &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; metoda utworzony <xref href=&quot;System.Security.PermissionSet&quot;> </xref> przed wywołaniem <xref:System.Xml.XmlSecureResolver.GetEntity*>na podstawowych <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  id: '#ctor(System.Xml.XmlResolver,System.String)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> klasy z <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> i podanego adresu URL."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> method or the XmlSecureResolver constructor). The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  example:
  - "This example uses the XmlSecureResolver constructor to create an <xref:System.Xml.XmlSecureResolver> object that is allowed to access your local intranet site only.  \n  \n [!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/m-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/m-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Program rozpoznawania nazw XML, który jest opakowany przez <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: securityUrl
      type: System.String
      description: "Adres URL używany do tworzenia <xref href=&quot;System.Security.PermissionSet&quot;> </xref> zastosowanych do odpowiadającego <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Wywołania &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; na utworzony <xref href=&quot;System.Security.PermissionSet&quot;> </xref> przed wywołaniem <xref:System.Xml.XmlSecureResolver.GetEntity*>na podstawowych <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  id: CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Tworzy dowód przy użyciu podanego adresu URL."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the CreateEvidenceForUrl method or the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor). The policy resolution mechanism of the SQL Server integrated CLR doesn't use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  syntax:
    content: public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);
    parameters:
    - id: securityUrl
      type: System.String
      description: "Adres URL używany do tworzenia dowody."
    return:
      type: System.Security.Policy.Evidence
      description: "Dowody wygenerowane z podanego adresu URL, zgodnie z definicją w domyślnych zasad."
  overload: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ustawia poświadczenia używane do uwierzytelniania żądań sieci web."
  remarks: ''
  example:
  - "The following example uses an <xref:System.Xml.XmlSecureResolver> with default credentials to resolve and open network resources needed by the <xref:System.Xml.XmlTextReader>.  \n  \n [!code-cpp[XmlSecureResolver.Credentials#1](~/add/codesnippet/cpp/p-system.xml.xmlsecurere_1.cpp)]\n [!code-vb[XmlSecureResolver.Credentials#1](~/add/codesnippet/visualbasic/p-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver.Credentials#1](~/add/codesnippet/csharp/p-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Poświadczenia, które ma być używany do uwierzytelniania żądań sieci web. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Ustawia poświadczenia odpowiadającego <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Jeśli ta właściwość nie jest ustawiona, domyślnie przyjmowana jest wartość <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> nie poświadczeniami użytkownika."
  overload: System.Xml.XmlSecureResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Identyfikator URI jest mapowany na obiekt, który zawiera zasobów. Ta metoda tymczasowo ustawia <xref href=&quot;System.Security.PermissionSet&quot;> </xref> utworzone w Konstruktorze przez wywołanie &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; przed wywołaniem <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> na podstawowych <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> można otworzyć zasobu."
  remarks: >-
    > [!IMPORTANT]

    >  Your application can mitigate memory denial of service threats to the GetEntity method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI, który jest zwracany z <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Obecnie nieużywane."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. Zwraca tylko bieżącą wersję <xref:System.IO.Stream>obiektów.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Strumień zwrócony przez wywołanie metody <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> na podstawowych <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Jeśli typ innych niż <xref:System.IO.Stream>jest określony, metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>nie jest ani <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ani <xref:System.IO.Stream> typu."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Określony identyfikator URI nie jest bezwzględnym identyfikatorem URI."
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Istnieje błąd w czasie wykonywania (na przykład połączenie serwera przerwania)."
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynchronicznie identyfikatora URI jest mapowany na obiekt, który zawiera zasobów."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI zwrócony z <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Obecnie nieużywane."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. Zwraca tylko bieżącą wersję <xref:System.IO.Stream>obiektów.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Strumień zwrócony przez wywołanie metody <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> na podstawowych <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Jeśli typ innych niż <xref:System.IO.Stream>jest określony, metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Jest rozpoznawany jako bezwzględny identyfikator URI z podstawową i względne identyfikatory URI, wywołując <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> na podstawowych <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI używany do rozpoznania względnym identyfikatorem URI."
    - id: relativeUri
      type: System.String
      description: "Identyfikator URI do rozpoznania. Identyfikator URI może być bezwzględny lub względny. Jeśli bezwzględne, ta wartość skutecznie zastępuje `baseUri` wartość. Jeśli względną, składa się z `baseUri` być bezwzględnym identyfikatorem URI."
    return:
      type: System.Uri
      description: "Bezwzględny identyfikator URI lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli względny identyfikator URI nie można rozpoznać (zwrócony przez wywołanie metody <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> na podstawowych <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>)."
  overload: System.Xml.XmlSecureResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
- uid: System.Xml.XmlSecureResolver.Credentials
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlSecureResolver.#ctor*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver.XmlSecureResolver
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl
- uid: System.Xml.XmlSecureResolver.Credentials*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
- uid: System.Xml.XmlSecureResolver.GetEntity*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlSecureResolver.GetEntity
- uid: System.Xml.XmlSecureResolver.GetEntityAsync*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlSecureResolver.GetEntityAsync
- uid: System.Xml.XmlSecureResolver.ResolveUri*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlSecureResolver.ResolveUri
