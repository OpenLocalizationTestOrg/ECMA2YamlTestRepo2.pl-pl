### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaChildrenColumn
  id: MetaChildrenColumn
  children:
  - System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaChildrenColumn.ChildTable
  - System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  - System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)
  - System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)
  - System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)
  - System.Web.DynamicData.MetaChildrenColumn.Initialize
  - System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  langs:
  - csharp
  name: MetaChildrenColumn
  nameWithType: MetaChildrenColumn
  fullName: System.Web.DynamicData.MetaChildrenColumn
  type: Class
  summary: "Reprezentuje pole bazy danych, która wskazuje relacji jeden do wielu."
  remarks: "W aplikacjach danych dynamicznych platformy ASP.NET klasa MetaChildrenColumn reprezentuje pole bazy danych, która wskazuje relacji jeden do wielu lub relacji nadrzędny podrzędny.       Klasa MetaChildrenColumn reprezentuje pole w tabeli nadrzędnej w relacji jeden do wielu. Jednak można dostępu do obiektu tabeli podrzędnej przy użyciu <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A>Właściwości.</xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> Pole klucza obcego w tabeli podrzędnej można również pobrać za pomocą <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A>Właściwości.</xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A>"
  syntax:
    content: 'public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn'
  inheritance:
  - System.Object
  - System.Web.DynamicData.MetaColumn
  implements: []
  inheritedMembers:
  - System.Web.DynamicData.MetaColumn.AllowInitialValue
  - System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
  - System.Web.DynamicData.MetaColumn.Attributes
  - System.Web.DynamicData.MetaColumn.BuildAttributeCollection
  - System.Web.DynamicData.MetaColumn.ColumnType
  - System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
  - System.Web.DynamicData.MetaColumn.DataFormatString
  - System.Web.DynamicData.MetaColumn.DataTypeAttribute
  - System.Web.DynamicData.MetaColumn.DefaultValue
  - System.Web.DynamicData.MetaColumn.Description
  - System.Web.DynamicData.MetaColumn.DisplayName
  - System.Web.DynamicData.MetaColumn.EntityTypeProperty
  - System.Web.DynamicData.MetaColumn.FilterUIHint
  - System.Web.DynamicData.MetaColumn.HtmlEncode
  - System.Web.DynamicData.MetaColumn.IsBinaryData
  - System.Web.DynamicData.MetaColumn.IsCustomProperty
  - System.Web.DynamicData.MetaColumn.IsFloatingPoint
  - System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
  - System.Web.DynamicData.MetaColumn.IsGenerated
  - System.Web.DynamicData.MetaColumn.IsInteger
  - System.Web.DynamicData.MetaColumn.IsLongString
  - System.Web.DynamicData.MetaColumn.IsPrimaryKey
  - System.Web.DynamicData.MetaColumn.IsReadOnly
  - System.Web.DynamicData.MetaColumn.IsRequired
  - System.Web.DynamicData.MetaColumn.IsString
  - System.Web.DynamicData.MetaColumn.MaxLength
  - System.Web.DynamicData.MetaColumn.Model
  - System.Web.DynamicData.MetaColumn.Name
  - System.Web.DynamicData.MetaColumn.NullDisplayText
  - System.Web.DynamicData.MetaColumn.Prompt
  - System.Web.DynamicData.MetaColumn.Provider
  - System.Web.DynamicData.MetaColumn.RequiredErrorMessage
  - System.Web.DynamicData.MetaColumn.ResetMetadata
  - System.Web.DynamicData.MetaColumn.Scaffold
  - System.Web.DynamicData.MetaColumn.ShortDisplayName
  - System.Web.DynamicData.MetaColumn.SortExpression
  - System.Web.DynamicData.MetaColumn.Table
  - System.Web.DynamicData.MetaColumn.ToString
  - System.Web.DynamicData.MetaColumn.TypeCode
  - System.Web.DynamicData.MetaColumn.UIHint
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: '#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)'
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: MetaChildrenColumn(MetaTable,ColumnProvider)
  nameWithType: MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.MetaChildrenColumn&quot;> </xref> klasy."
  syntax:
    content: public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);
    parameters:
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Tabela meta."
    - id: entityMember
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "Dostawca kolumny."
  overload: System.Web.DynamicData.MetaChildrenColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.ChildTable
  id: ChildTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: ChildTable
  nameWithType: MetaChildrenColumn.ChildTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ChildTable
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera obiekt reprezentujący tabeli podrzędnej w relacji jeden do wielu."
  remarks: "Użyj właściwości ChildTable, aby pobrać obiekt, który reprezentuje tabeli podrzędnej w relacji jeden do wielu. Dostęp do tabeli nadrzędnej przy użyciu <xref:System.Web.DynamicData.MetaColumn.Table%2A>Właściwości.</xref:System.Web.DynamicData.MetaColumn.Table%2A>"
  syntax:
    content: public System.Web.DynamicData.MetaTable ChildTable { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Obiekt, który reprezentuje tabeli podrzędnej w relacji jeden do wielu."
  overload: System.Web.DynamicData.MetaChildrenColumn.ChildTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  id: ColumnInOtherTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: ColumnInOtherTable
  nameWithType: MetaChildrenColumn.ColumnInOtherTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera obiekt, który reprezentuje pole klucza obcego w tabeli podrzędnej."
  remarks: "Właściwość ColumnInOtherTable można odwołać się do pola w tabeli podrzędnej."
  syntax:
    content: public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Obiekt, który reprezentuje pole klucza obcego w tabeli podrzędnej."
  overload: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)
  id: GetChildrenListPath(System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: GetChildrenListPath(Object)
  nameWithType: MetaChildrenColumn.GetChildrenListPath(Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera ścieżkę strony listy akcji dla tabeli podrzędnej."
  remarks: "Metoda GetChildrenListPath można pobrać strony listy akcji dla tabeli podrzędnej przy użyciu określonego wiersza jako elementu nadrzędnego. Ścieżka są uzyskiwane przez dołączenie wartości ciągu zapytania do adresu URL, zawierający pole klucza obcego wartości określonej w `row` parametru.       Przy użyciu metody GetChildrenListPath jest taka sama jak wywoływanie <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29>— Metoda i przekazywanie <xref:System.Web.DynamicData.PageAction.List%2A>akcji jako pierwszym parametrem.</xref:System.Web.DynamicData.PageAction.List%2A> </xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29>"
  syntax:
    content: public string GetChildrenListPath (object row);
    parameters:
    - id: row
      type: System.Object
      description: "Wiersz, który zawiera pole klucza obcego."
    return:
      type: System.String
      description: "Ścieżka strony listy akcji dla tabeli podrzędnej."
  overload: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)
  id: GetChildrenPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: GetChildrenPath(String,Object)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera ścieżkę strony określonej akcji tabeli podrzędnej."
  remarks: "Metoda GetChildrenPath zwraca ścieżkę strony określonej akcji dla tabeli podrzędnej. W ścieżce zwracanej jest oparta na trasach zdefiniowanych na podstawie danych dynamicznych platformy ASP.NET i ma określony wiersz jako elementu nadrzędnego. Ścieżka są uzyskiwane przez dołączenie wartości ciągu zapytania do adresu URL, zawierający pole klucza obcego wartości określonej w `row` parametru.       Jeśli `row` jest `null`, jego metoda zwraca pusty ciąg.       Można użyć z wartościami zdefiniowanymi w <xref:System.Web.DynamicData.PageAction>klasy dla `action` parametru.</xref:System.Web.DynamicData.PageAction>"
  syntax:
    content: public string GetChildrenPath (string action, object row);
    parameters:
    - id: action
      type: System.String
      description: "Akcję docelową."
    - id: row
      type: System.Object
      description: "Wiersz, który zawiera pole klucza obcego."
    return:
      type: System.String
      description: "Ścieżka strony określonej akcji tabeli podrzędnej."
  overload: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)
  id: GetChildrenPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: GetChildrenPath(String,Object,String)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera ścieżkę do strony określonej akcji tabeli podrzędnej."
  remarks: "Metoda GetChildrenPath zwraca ścieżkę strony określonej akcji dla tabeli podrzędnej. Ta ścieżka jest oparta na określonej ścieżce z określonego wiersza jako elementu nadrzędnego. Ścieżka są uzyskiwane przez dołączenie wartości ciągu zapytania do adresu URL, zawierający pole klucza obcego wartości określonej w `row` parametru.       Jeśli `row` jest `null`, ta metoda zwraca pusty ciąg. Jeśli `path` jest `null`, GetChildrenPath metoda zwraca ścieżkę na podstawie tras zdefiniowanych w aplikacji danych dynamicznych platformy ASP.NET.       Można użyć z wartościami zdefiniowanymi w <xref:System.Web.DynamicData.PageAction>klasy dla `action` parametru.</xref:System.Web.DynamicData.PageAction>"
  syntax:
    content: public string GetChildrenPath (string action, object row, string path);
    parameters:
    - id: action
      type: System.String
      description: "Akcję docelową."
    - id: row
      type: System.Object
      description: "Wiersz, który zawiera pole klucza obcego."
    - id: path
      type: System.String
      description: "Strona docelowa."
    return:
      type: System.String
      description: "Ścieżka strony określonej akcji tabeli podrzędnej."
  overload: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.Initialize
  id: Initialize
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: MetaChildrenColumn.Initialize()
  fullName: System.Web.DynamicData.MetaChildrenColumn.Initialize()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje dane, które mogą być niedostępne podczas wywołania konstruktora."
  remarks: "Tej metody nie można wywołać bezpośrednio. Aby dostosować inicjowania, może dziedziczyć po tej klasie i Przesłoń `Initialize` metody. Razie przesłonięcia tej metody należy wywołać kontrolki podstawowej `Initialize` metody."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.DynamicData.MetaChildrenColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  id: IsManyToMany
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: IsManyToMany
  nameWithType: MetaChildrenColumn.IsManyToMany
  fullName: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość, która wskazuje stan relacji wiele do wielu kolumny."
  syntax:
    content: public bool IsManyToMany { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku kolumn relacji wiele do wielu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: MetaChildrenColumn(MetaTable,ColumnProvider)
  nameWithType: MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.ColumnProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: ColumnProvider
  nameWithType: ColumnProvider
  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider
- uid: System.Web.DynamicData.MetaChildrenColumn.ChildTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: ChildTable
  nameWithType: MetaChildrenColumn.ChildTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ChildTable
- uid: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: ColumnInOtherTable
  nameWithType: MetaChildrenColumn.ColumnInOtherTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenListPath(Object)
  nameWithType: MetaChildrenColumn.GetChildrenListPath(Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenPath(String,Object)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object)
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenPath(String,Object,String)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object,String)
- uid: System.Web.DynamicData.MetaChildrenColumn.Initialize
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: Initialize()
  nameWithType: MetaChildrenColumn.Initialize()
  fullName: System.Web.DynamicData.MetaChildrenColumn.Initialize()
- uid: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: IsManyToMany
  nameWithType: MetaChildrenColumn.IsManyToMany
  fullName: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaChildrenColumn.#ctor*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: MetaChildrenColumn
  nameWithType: MetaChildrenColumn.MetaChildrenColumn
- uid: System.Web.DynamicData.MetaChildrenColumn.ChildTable*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: ChildTable
  nameWithType: MetaChildrenColumn.ChildTable
- uid: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: ColumnInOtherTable
  nameWithType: MetaChildrenColumn.ColumnInOtherTable
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenListPath
  nameWithType: MetaChildrenColumn.GetChildrenListPath
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenPath
  nameWithType: MetaChildrenColumn.GetChildrenPath
- uid: System.Web.DynamicData.MetaChildrenColumn.Initialize*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: Initialize
  nameWithType: MetaChildrenColumn.Initialize
- uid: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: IsManyToMany
  nameWithType: MetaChildrenColumn.IsManyToMany
