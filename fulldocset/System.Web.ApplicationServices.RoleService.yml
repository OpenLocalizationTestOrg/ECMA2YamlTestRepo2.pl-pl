### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "Zapewnia dostęp do dostawcy ról ASP.NET jako usługę sieci WCF Web."
  remarks: "Obiekt elementu RoleService umożliwia czytanie role użytkownika za pośrednictwem usługi Windows Communication Foundation (WCF). Do korzystania z usługi roli, należy włączyć usługę roli serwera sieci Web, a następnie połącz aplikację klienta WCF zgodnego z usługą sieci Web. Aby uzyskać informacje o sposobie konfigurowania usługi roli, zobacz [jak: Włącz usługę roli usługi WCF](~/add/includes/ajax-current-ext-md.md).       Użytkownik musi zostać uwierzytelniony do odczytu ról użytkownika. Usługa roli współpracuje z żadnego rodzaju uwierzytelniania ASP.NET. Aby uzyskać informacje dotyczące logowania użytkowników w za pomocą usługi WCF, zobacz [Omówienie usługi uwierzytelniania Windows Communication Foundation](~/add/includes/ajax-current-ext-md.md).       Klasa elementu RoleService udostępnia dwie metody, które powinni mieć dostęp tylko za pośrednictwem usługi WCF: <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>— Metoda i <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metody.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> </xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>Metoda zwraca wszystkie role dla zalogowanego użytkownika.</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>Metoda określa, czy użytkownik ma określoną rolę.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       Wywołuje obiekt elementu RoleService <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>zdarzeń.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider> Utwórz program obsługi zdarzeń dla <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>zdarzeń, aby zaznaczyć co dostawcy roli do użycia w czasie wykonywania.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>       Na przykład sposobu korzystania z aplikacji konsoli usługi roli usługi WCF, zobacz [wskazówki: Korzystanie z usługi aplikacji ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> klasy."
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Zwraca wszystkie role dla zalogowanego użytkownika."
  remarks: "Metoda GetRolesForCurrentUser zwraca wszystkie role dla użytkownika. Można użyć metody GetRolesForCurrentUser podczas musi sprawdzić, czy zachowana wszystkie role użytkownika w celu określenia, jakie zasoby są dostępne dla użytkownika. Ta metoda służy do wielu połączeń w celu uniknięcia <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metody.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       Wywołanie metody GetRolesForCurrentUser zgłasza <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>zdarzeń.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Nie należy wywoływać metody GetRolesForCurrentUser z kodu, który jest wykonywany na serwerze sieci Web. Należy wywołać metodę GetRolesForCurrentUser tylko jako część usługi WCF. Aby uzyskać więcej informacji na temat serwera odczytał role użytkownika w kodzie, który jest wykonywany na serwerze sieci Web, zobacz <xref:System.Web.Security.Roles.GetRolesForUser%2A>metody.</xref:System.Web.Security.Roles.GetRolesForUser%2A>"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "Tablica nazwy ról, których należy użytkownik."
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Nie włączono zarządzania rolami."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Określa, czy zalogowany użytkownik należy do określonej roli."
  remarks: "Metoda IsCurrentUserInRole sprawdza, czy zalogowany użytkownik należy do określonej roli. Wywołuje metodę IsCurrentUserInRole <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>zdarzeń.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Nie należy wywoływać metody IsCurrentUserInRole z kodu, który jest wykonywany na serwerze sieci Web. Należy wywołać metodę IsCurrentUserInRole tylko jako część usługi WCF. Aby uzyskać więcej informacji dotyczących sposobu sprawdzania, czy użytkownik należy do określonej grupy wykonywanie kodu na serwerze sieci Web, zobacz <xref:System.Web.Security.Roles.IsUserInRole%2A>metody.</xref:System.Web.Security.Roles.IsUserInRole%2A>"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Nazwa roli do sprawdzenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli użytkownik znajduje się w określonej roli; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub użytkownik nie jest zalogowany."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Nie włączono zarządzania rolami."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Występuje, gdy <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> wystąpienia określa, który dostawca roli należy używać sprawdzania ról użytkownika."
  remarks: "<xref:System.Web.ApplicationServices.RoleService>Klasa wywołuje zdarzenie SelectingProvider, gdy ustali, który dostawca roli do użycia w celu pobrania ról użytkownika.</xref:System.Web.ApplicationServices.RoleService> Można utworzyć program obsługi zdarzeń dla zdarzenia SelectingProvider wybrać w czasie wykonywania, który dostawca roli do użycia."
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
