### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerName
  id: PeerName
  children:
  - System.Net.PeerToPeer.PeerName.#ctor(System.String)
  - System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  - System.Net.PeerToPeer.PeerName.Authority
  - System.Net.PeerToPeer.PeerName.Classifier
  - System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  - System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  - System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerName.Equals(System.Object)
  - System.Net.PeerToPeer.PeerName.GetHashCode
  - System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.IsSecured
  - System.Net.PeerToPeer.PeerName.PeerHostName
  - System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.ToString
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
  type: Class
  summary: "Określa wartości, które definiują obiektu PeerName peer-to-peer. Nazwa elementu równorzędnego jest zwykle ciąg używany do identyfikacji zasobu elementów równorzędnych."
  syntax:
    content: 'public class PeerName : IEquatable<System.Net.PeerToPeer.PeerName>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Net.PeerToPeer.PeerName>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicjuje nowy obiekt typu <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> o podanej nazwie FQDN równorzędnej <xref:System.String>wartość.</xref:System.String>"
  syntax:
    content: public PeerName (string remotePeerName);
    parameters:
    - id: remotePeerName
      type: System.String
      description: "Zawiera nazwę elementu równorzędnego do kodowania jako <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> wystąpienia."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>Podane nie jest prawidłową <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>remotePeerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Wypełnia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> obiektu o dane potrzebne do serializacji <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "Ten konstruktor jest wymagany do deserializacji tego typu."
  syntax:
    content: protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Odwołanie do obiektu, który zawiera dane potrzebne do deserializacji tego wystąpienia."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontekst, który udostępnia środki do deserializowania danych. Określane jako źródło danych serializacji."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub więcej parametrów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  id: '#ctor(System.String,System.Net.PeerToPeer.PeerNameType)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> klasy."
  remarks: "Ten konstruktor zwraca obiekt typu <xref:System.Net.PeerToPeer.PeerName>zawierający w pełni kwalifikowana nazwa elementu równorzędnego.</xref:System.Net.PeerToPeer.PeerName> Określa również czy nazwa elementu równorzędnego jest zabezpieczone lub niezabezpieczone.       To wystąpienie używa domyślną tożsamość elementu równorzędnego dla bieżącego użytkownika i określonego <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, oprócz typu nazwa elementu równorzędnego, aby utworzyć za pomocą klasyfikatora określony i typu.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A>"
  syntax:
    content: public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);
    parameters:
    - id: classifier
      type: System.String
      description: "<xref:System.String>zawiera nazwę elementu równorzędnego do kodowania jako <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.String>"
    - id: peerNameType
      type: System.Net.PeerToPeer.PeerNameType
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameType&quot;></xref>Wartość wyliczenia określający typ nazwa elementu równorzędnego do utworzenia."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>Zawiera co najmniej jeden niedozwolony znak.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub więcej parametrów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Domyślna tożsamość użyta jako podstawę <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> nie można pobrać.      - <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Nie mógł zostać utworzony."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Authority
  id: Authority
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Zwraca ciąg, który określa jako źródło używanych przez to <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu."
  remarks: "Tylko właściciel lub hosta równorzędnej, można zarejestrować nazwę zabezpieczonych elementu równorzędnego. Nazwa elementu równorzędnego jest uważany za zabezpieczony, jeśli nie jest obsługiwana przez certyfikatu z podpisem własnym.       Nazwy elementów równorzędnych jest rozróżniana wielkość liter i jest w formacie nazwa elementu równorzędnego: *Authority.Classifier*. Na przykład &quot;0.MyPeerName&quot; jest nazwą elementu równorzędnego poprawnie sformułowany."
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: "Ciąg, który zawiera składnik uwierzytelniania określonego <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>. Dla nazwy zabezpieczonych elementów równorzędnych ta właściwość zawiera klucz publiczny jako czterdzieści znakowym ciągiem szesnastkowym. Nazwy elementów równorzędnych niezabezpieczoną tej właściwości jest równa zero (0)."
  overload: System.Net.PeerToPeer.PeerName.Authority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Classifier
  id: Classifier
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Zwraca ciąg zawierający Klasyfikator dla peer-to-peer <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "The format of a peer name is: *Authority.Classifier*. The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` (\"\\0\") terminator. Peer name strings are case-sensitive.  \n  \n For secured peer names, the classifier and the dot (period) after the authority are optional. For unsecured peer names, the classifier is not optional."
  syntax:
    content: public string Classifier { get; }
    return:
      type: System.String
      description: "Ciąg, który zawiera części klasyfikatora używany do identyfikowania nazwy elementu równorzędnego dla <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> bądź rozpoznawanie nazw w protokole PNRP <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.       Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla typów referencyjnych i zero (0) dla właściwości typu <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Classifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  id: CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Tworzy nowe wystąpienie określonego <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>obiektu przy użyciu nazwy hosta określonej równorzędnej.</xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  remarks: "Host peer-to-peer jest węzeł&quot;seed&quot; odpowiedzialny za Inicjowanie sesji sieci peer-to-peer, zwracając równorzędnymi użytkownikami brać udziału w aplikacji, dla których ten typ łączności sieciowej jest najbardziej odpowiednie dla komunikacji, takie jak rozmowa grup lub gier sesji.       Ta metoda może służyć do tworzenia <xref:System.Net.PeerToPeer.PeerName>na podstawie obiektu <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A>Właściwości.</xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> </xref:System.Net.PeerToPeer.PeerName> Ta nazwa elementu równorzędnego nie jest skojarzony z tożsamością wywołującego węzłów."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);
    parameters:
    - id: peerHostName
      type: System.String
      description: "Ciąg zawierający nazwę kwalifikowaną DNS hosta."
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiekt, który reprezentuje nazwę hosta określonego elementu równorzędnego."
  overload: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>Podane nie jest ciąg nazwy hosta prawidłowy równorzędnej.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Net.PeerToPeer.PeerName.PeerHostName&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> nie można utworzyć z podana<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  id: CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Tworzy nowy <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> zastępując <xref:System.Net.PeerToPeer.PeerName.Classifier*>zdefiniowane na podane pole <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu z wartości ciągu określonej klasyfikatora.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  remarks: "<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>Jest dołączany do istniejącej <xref:System.Net.PeerToPeer.PeerName.Authority%2A>części <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerName.Authority%2A> </xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Ten ciąg jest nie więcej niż 149 znaków, łącznie z `null` terminator. Określ `null` do zwracania nazwy elementu równorzędnego tożsamości."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Obiektu, w którym można ustawić nową wartość ciągu klasyfikatora."
    - id: classifier
      type: System.String
      description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>Można ustawić w zwróconym <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Nowy <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiekt, który zawiera zaktualizowane klasyfikatora."
  overload: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>Podane nie jest klasyfikatora nazwy elementów prawidłową równorzędnych.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub więcej parametrów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> nie można utworzyć z podana<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  id: Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Przeprowadza porównanie z uwzględnieniem wielkości liter bieżącego <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> i nazwę określonego elementu równorzędnego."
  remarks: "Dwie nazwy elementów równorzędnych są traktowane jako równe, jeśli zawierają one identyczne znaki w ich <xref:System.Net.PeerToPeer.PeerName.Authority%2A>i <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>składników.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A> </xref:System.Net.PeerToPeer.PeerName.Authority%2A>       Nie normalizations są wykonywane na ciągi przed porównania.  Wszystkie normalizacji powinien zostały ukończone podczas lub przed konstruowanie obiektów nazwa elementu równorzędnego."
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.PeerName other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.PeerName
      description: "Nazwa elementu równorzędnego do porównania z tym <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Zwraca <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Jeśli określonego <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> identyfikuje tego samego zasobu do bieżącego obiektu nazwa elementu równorzędnego; w przeciwnym razie ta metoda zwraca <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.       Ta metoda zwraca również wartość <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> Jeśli <code> other </code> ustawiono <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Określa, czy zawartość tego <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> jest równa zawartości innego obiektu."
  remarks: "Ta metoda dziedziczy domyślny podpis i zachowania <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Do porównania z bieżącym <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> i obiekt porównania zawiera te same informacje; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Zastępuje <xref:System.Object.GetHashCode*>metody.</xref:System.Object.GetHashCode*>"
  remarks: "Dwa obiekty są traktowane jako równe, jeśli ta metoda zwraca tej samej wartości skrótu dla obu z nich."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartości skrótu dla bieżącego <xref:System.Object>.</xref:System.Object>"
  overload: System.Net.PeerToPeer.PeerName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Wypełnia obiekt informacje serializacji dane potrzebne do serializacji <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "Typ pochodny musi wywołać typu podstawowego <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>metody.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Przechowuje dane serializowane skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Zawiera miejsce docelowe dla serializowanym strumieniu skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu."
  overload: System.Net.PeerToPeer.PeerName.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  id: IsSecured
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera wartość logiczna określająca, czy jest to nazwa elementu równorzędnego zabezpieczonych."
  remarks: "Nazwa elementu równorzędnego jest uważany za zabezpieczony, jeśli nie jest obsługiwana przez certyfikatu z podpisem własnym.       Tylko właściciel można zarejestrować nazwy elementu równorzędnego zabezpieczonych w usłudze PNRP."
  syntax:
    content: public bool IsSecured { get; }
    return:
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, ta nazwa elementu równorzędnego jest zabezpieczony z prywatnej klucza / public pary kluczy. Nazwa zawiera klucz publiczny certyfikatu użytkownika z tym równorzędną maszynę skrótu Secure Hash Algorithm (SHA). W przeciwnym razie, jeśli <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, nazwa elementu równorzędnego nie ma żadnych skojarzonych tożsamość.       Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla typów referencyjnych i zero (0) dla właściwości typu <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  id: PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera nazwę hosta peer-to-peer. To jest wersja kodowany w formacie DNS <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> który jest odpowiednikiem PeerHostName są oba identyfikatory.  Różnica między nimi jest wizualną reprezentację."
  remarks: "Host peer-to-peer jest węzeł&quot;seed&quot; odpowiedzialny za Inicjowanie sesji sieci peer-to-peer, zwracając równorzędnymi użytkownikami brać udziału w aplikacji, dla których ten typ łączności sieciowej jest najbardziej odpowiednie dla komunikacji, takie jak rozmowa grup lub gier sesji.       Właściwość PeerHostName Określa nazwę elementu równorzędnego, który utworzył sesji sieci peer-to-peer, i który jest uznawany za hosta sesji.  Host sesji sieci peer-to-peer może zbierać elementów równorzędnych w więcej niż jeden <xref:System.Net.PeerToPeer.Cloud>.</xref:System.Net.PeerToPeer.Cloud> Ponadto elementu równorzędnego jednocześnie może być obsługiwany przez więcej niż jednego hosta elementu równorzędnego."
  syntax:
    content: public string PeerHostName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>wartość nazwy hosta peer-to-peer.</xref:System.String> Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla typów odwołań."
  overload: System.Net.PeerToPeer.PeerName.PeerHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Implementuje <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interfejsu i zwraca dane potrzebne do serializacji <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> wystąpienia."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Przechowuje dane serializowane skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Zawiera miejsce docelowe dla serializowanym strumieniu skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu."
  overload: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.ToString
  id: ToString
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Zwraca reprezentację ciągu bieżącego <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu."
  remarks: "Ta metoda dziedziczy domyślny podpis i zachowania <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: 'Ciąg reprezentujący bieżące <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>, a określona w następującym formacie: *Authority.Classifier*. Na przykład &quot;0.MyInternetPeer&quot;.'
  overload: System.Net.PeerToPeer.PeerName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
- uid: System.Net.PeerToPeer.PeerNameType
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
- uid: System.Net.PeerToPeer.PeerName.Authority
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.ToString
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
- uid: System.Net.PeerToPeer.PeerName.#ctor*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName
  nameWithType: PeerName.PeerName
- uid: System.Net.PeerToPeer.PeerName.Authority*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName
  nameWithType: PeerName.CreateFromPeerHostName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName
  nameWithType: PeerName.CreateRelativePeerName
- uid: System.Net.PeerToPeer.PeerName.Equals*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals
  nameWithType: PeerName.Equals
- uid: System.Net.PeerToPeer.PeerName.GetHashCode*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode
  nameWithType: PeerName.GetHashCode
- uid: System.Net.PeerToPeer.PeerName.GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData
  nameWithType: PeerName.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.IsSecured*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.ToString*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString
  nameWithType: PeerName.ToString
