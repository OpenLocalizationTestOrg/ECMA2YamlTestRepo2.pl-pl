### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.UrlParameterWriter
  id: UrlParameterWriter
  children:
  - System.Web.Services.Protocols.UrlParameterWriter.#ctor
  - System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])
  langs:
  - csharp
  name: UrlParameterWriter
  nameWithType: UrlParameterWriter
  fullName: System.Web.Services.Protocols.UrlParameterWriter
  type: Class
  summary: "Zapisuje wyjściowego przechodzi parametry żądania dla usług sieci Web implementowane przy użyciu protokołu HTTP z pary nazwa wartość zakodowane w adresie URL, ciąg zapytania, a nie jako wiadomości protokołu SOAP."
  remarks: "UrlParameterWriter and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.  \n  \n The UrlParameterWriter class provides a client-side method, [GetRequestUrl(String, Object\\[\\])](assetId:///M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])?qualifyHint=False&autoUpgrade=True), to encode parameters name/value pairs into an HTTP request URL's query string. For example, in the URL `http://contoso.com?a=1&b=2`, `a` and `b` are parameter names, and `1` and `2` are their values.  \n  \n You typically will not need to use UrlParameterWriter directly. Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET implementation, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> property to UrlParameterWriter."
  syntax:
    content: 'public class UrlParameterWriter : System.Web.Services.Protocols.UrlEncodedParameterWriter'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeParameterWriter
  - System.Web.Services.Protocols.UrlEncodedParameterWriter
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeParameterWriter.InitializeRequest(System.Net.WebRequest,System.Object[])
  - System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest
  - System.Web.Services.Protocols.MimeParameterWriter.WriteRequest(System.IO.Stream,System.Object[])
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlParameterWriter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.UrlParameterWriter
  langs:
  - csharp
  name: UrlParameterWriter()
  nameWithType: UrlParameterWriter.UrlParameterWriter()
  fullName: System.Web.Services.Protocols.UrlParameterWriter.UrlParameterWriter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Services.Protocols.UrlParameterWriter&quot;> </xref> klasy."
  syntax:
    content: public UrlParameterWriter ();
    parameters: []
  overload: System.Web.Services.Protocols.UrlParameterWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])
  id: GetRequestUrl(System.String,System.Object[])
  parent: System.Web.Services.Protocols.UrlParameterWriter
  langs:
  - csharp
  name: GetRequestUrl(String,Object[])
  nameWithType: UrlParameterWriter.GetRequestUrl(String,Object[])
  fullName: System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(String,Object[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Zapisuje metody sieci Web wartości parametrów ciągu zapytania żądania HTTP."
  remarks: "Metoda GetRequestUrl koduje pary nazw i wartości parametrów w ciągu zapytania adres URL żądania HTTP. Na przykład w adresie URL `http://contoso.com?a=1&b=2`, `a` i `b` są nazwy parametrów i `1` i `2` są ich wartości. Nowy ciąg adresu URL, wszystkie parametry zakodowanej, jest zwracana."
  syntax:
    content: public override string GetRequestUrl (string url, object[] parameters);
    parameters:
    - id: url
      type: System.String
      description: "Oryginalny adres URL żądania HTTP."
    - id: parameters
      type: System.Object[]
      description: "Wartości parametrów metody sieci Web do dodania do adresu URL, jeśli to konieczne."
    return:
      type: System.String
      description: "A <xref:System.String>obiekt, który zawiera ciąg zapytania i wartości parametrów.</xref:System.String>"
  overload: System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: System.Web.Services.Protocols.UrlEncodedParameterWriter
- uid: System.Web.Services.Protocols.UrlParameterWriter.#ctor
  parent: System.Web.Services.Protocols.UrlParameterWriter
  isExternal: false
  name: UrlParameterWriter()
  nameWithType: UrlParameterWriter.UrlParameterWriter()
  fullName: System.Web.Services.Protocols.UrlParameterWriter.UrlParameterWriter()
- uid: System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])
  parent: System.Web.Services.Protocols.UrlParameterWriter
  isExternal: false
  name: GetRequestUrl(String,Object[])
  nameWithType: UrlParameterWriter.GetRequestUrl(String,Object[])
  fullName: System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(String,Object[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.UrlParameterWriter.#ctor*
  parent: System.Web.Services.Protocols.UrlParameterWriter
  isExternal: false
  name: UrlParameterWriter
  nameWithType: UrlParameterWriter.UrlParameterWriter
- uid: System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl*
  parent: System.Web.Services.Protocols.UrlParameterWriter
  isExternal: false
  name: GetRequestUrl
  nameWithType: UrlParameterWriter.GetRequestUrl
