### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHost
  id: ServiceHost
  children:
  - System.ServiceModel.ServiceHost.#ctor
  - System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  - System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  langs:
  - csharp
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
  type: Class
  summary: "Zapewnia hosta usługi."
  remarks: "Implementuje hosta używane przez [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] model programowania modelu usługi.       Do konfiguracji i ekspozycji usługi do użycia przez aplikacje klienckie, gdy nie używasz usług Internet Information Services (IIS) lub usługi aktywacji systemu Windows (WAS) do udostępnienia usługi, należy użyć klasy ServiceHost. Zarówno usług IIS i WAS interakcji z obiektem ServiceHost w Twoim imieniu.       Do udostępnienia usługi do użycia przez obiekty wywołujące, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] wymaga opisu usługi pełną (reprezentowane przez <xref:System.ServiceModel.Description.ServiceDescription>klasy).</xref:System.ServiceModel.Description.ServiceDescription> Tworzy klasę ServiceHost <xref:System.ServiceModel.Description.ServiceDescription>z informacje dotyczące typu i konfiguracji usługi, a następnie używa opis, aby utworzyć <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>obiektów dla każdego punktu końcowego w opisie.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.Description.ServiceDescription>       Obiekt ServiceHost używany do załadowania usługi, skonfiguruj punkty końcowe, Zastosuj ustawienia zabezpieczeń i uruchom odbiorników do obsługi żądań przychodzących."
  example:
  - >-
    [!code-cs[S_SelfHost#1](~/add/codesnippet/csharp/t-system.servicemodel.se_0_1.cs)]
     [!code-vb[S_SelfHost#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_0_1.vb)]
  syntax:
    content: 'public class ServiceHost : System.ServiceModel.ServiceHostBase'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost()
  nameWithType: ServiceHost.ServiceHost()
  fullName: System.ServiceModel.ServiceHost.ServiceHost()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> klasy."
  remarks: "Istnieją dwa konstruktory użyty do utworzenia wystąpienia <xref:System.ServiceModel.ServiceHost>klasy.</xref:System.ServiceModel.ServiceHost> Użyj [ServiceHost (typ, identyfikator Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&autoUpgrade=False) konstruktora, który przyjmuje jako parametr wejściowy, w większości przypadków typu usługi. Host umożliwia to tworzenie nowych usług zgodnie z potrzebami. Użyj [ServiceHost (obiektu, identyfikator Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) Konstruktor zamiast niego tylko wtedy, gdy chcesz używać określonego pojedyncze wystąpienie usługi host usługi."
  syntax:
    content: protected ServiceHost ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  id: '#ctor(System.Object,System.Uri[])'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost(Object,Uri[])
  nameWithType: ServiceHost.ServiceHost(Object,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> klasy z wystąpienia usługi i jego adres podstawowy określony."
  remarks: "Użyj tego konstruktora jako alternatywę do wdrażania niestandardowego <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>gdy chcesz podać wystąpienie określonego obiektu do użytku przez usługi singleton.</xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> Można użyć tego przeciążenia z typem implementacji usługi jest trudne do skonstruowania (na przykład, jeśli nie implementuje domyślnego konstruktora publicznego, który nie ma parametrów).       Należy pamiętać, że jeśli obiekt został dostarczony do tego przeciążenia, niektóre funkcje jest powiązany z [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] inaczej wystąpień pracy zachowanie. Na przykład wywołanie elementu <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName>nie obowiązują, gdy wystąpienie dobrze znanego obiektu jest realizowane przy użyciu tego przeciążenia konstruktora.</xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> Podobnie inny mechanizm wersji wystąpienia jest ignorowana. <xref:System.ServiceModel.ServiceHost>Zawsze zachowuje się tak, jakby <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName>ma ustawioną wartość właściwości <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName>dla wszystkich operacji.</xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> </xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> </xref:System.ServiceModel.ServiceHost>"
  example:
  - >-
    [!code-cs[S_UEServiceHost2#1](~/add/codesnippet/csharp/m-system.servicemodel.se_2_1.cs)]
     [!code-vb[S_UEServiceHost2#1](~/add/codesnippet/visualbasic/m-system.servicemodel.se_2_1.vb)]
  syntax:
    content: public ServiceHost (object singletonInstance, Uri[] baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: "Wystąpienie usługi hostowanej."
    - id: baseAddresses
      type: System.Uri[]
      description: "<xref:System.Array>Typu <xref:System.Uri>zawierający adres podstawowy usługi hostowanej.</xref:System.Uri> </xref:System.Array>"
  overload: System.ServiceModel.ServiceHost.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>singletonInstance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost(Type,Uri[])
  nameWithType: ServiceHost.ServiceHost(Type,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> klasy z typem usługi i jego adres podstawowy określony."
  remarks: "Użyj tego konstruktora, gdy typ usługi, możesz utworzyć nowe wystąpienia klasy ją w razie potrzeby, nawet jeśli wymagane jest pojedyncze wystąpienie. Użyj [ServiceHost (obiektu, identyfikator Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) Konstruktor zamiast niego tylko wtedy, gdy chcesz używać określonego pojedyncze wystąpienie usługi host usługi."
  example:
  - "This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:  \n  \n [!code-vb[S_UEServiceHost#1](~/add/codesnippet/visualbasic/m-system.servicemodel.se_1_1.vb)]\n [!code-cs[S_UEServiceHost#1](~/add/codesnippet/csharp/m-system.servicemodel.se_1_1.cs)]"
  syntax:
    content: public ServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi hostowanej."
    - id: baseAddresses
      type: System.Uri[]
      description: "Tablica typu <xref:System.Uri>zawierający adres podstawowy usługi hostowanej.</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHost.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Dodaje punkt końcowy usługi do usługi hostowanej z określonego kontrakt, powiązanie i adres punktu końcowego."
  remarks: ''
  example:
  - >-
    [!code-vb[S_UEServiceHost#3](~/add/codesnippet/visualbasic/70b66628-f847-4088-a4ea-_1.vb)]
     [!code-cs[S_UEServiceHost#3](~/add/codesnippet/csharp/70b66628-f847-4088-a4ea-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>Kontraktu punktu końcowego dodany.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>Dodać punktu końcowego.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "Adres punktu końcowego dodane."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>Dodane do usługi hostowanej.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Dodaje punkt końcowy usługi do usługi hostowanej z określonym kontraktu, powiązania i identyfikator URI zawierający adres punktu końcowego."
  remarks: ''
  example:
  - >-
    [!code-vb[S_UEServiceHost#4](~/add/codesnippet/visualbasic/8e2cc351-67c1-445b-afad-_1.vb)]
     [!code-cs[S_UEServiceHost#4](~/add/codesnippet/csharp/8e2cc351-67c1-445b-afad-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>Kontraktu punktu końcowego dodany.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>Dodać punktu końcowego.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>Zawierający adres punktu końcowego dodany.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>Dodane do usługi hostowanej.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Dodaje punkt końcowy usługi do usługi hostowanej z określonego kontrakt, powiązanie adresu punktu końcowego i identyfikatora URI, na którym nasłuchuje usługa."
  remarks: "Użyj tej wersji metody, jeśli masz wiele punktów końcowych, które należy do nasłuchiwania na tym samym określony identyfikator URI."
  example:
  - >-
    [!code-vb[S_UEServiceHost#5](~/add/codesnippet/visualbasic/53ef03a0-4eb7-4902-b7b1-_1.vb)]
     [!code-cs[S_UEServiceHost#5](~/add/codesnippet/csharp/53ef03a0-4eb7-4902-b7b1-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>Kontraktu punktu końcowego dodany.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>Dodać punktu końcowego.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "Adres punktu końcowego usługi."
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>Na można nasłuchiwać punktów końcowych usługi.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>Dodane do usługi hostowanej.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Dodaje punkt końcowy usługi do usługi hostowanej z określonego kontrakt, powiązanie, identyfikator URI zawierający adres punktu końcowego i identyfikatora URI, na którym nasłuchuje usługa."
  remarks: "Użyj tej wersji metody, jeśli masz wiele punktów końcowych, które należy do nasłuchiwania na tym samym określony identyfikator URI."
  example:
  - >-
    [!code-vb[S_UEServiceHost#6](~/add/codesnippet/visualbasic/681d17d9-9f10-449e-a378-_1.vb)]
     [!code-cs[S_UEServiceHost#6](~/add/codesnippet/csharp/681d17d9-9f10-449e-a378-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>Kontraktu punktu końcowego dodany.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>Dodać punktu końcowego.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>Zawierający adres punktu końcowego dodany.</xref:System.Uri>"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>Na można nasłuchiwać punktów końcowych usługi.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>Dodane do usługi hostowanej.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie zainicjowano umów lub nie można odnaleźć kluczy kontraktu."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHost.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ładuje opisu usługi z pliku konfiguracji i stosuje je do środowiska wykonawczego tworzona."
  syntax:
    content: protected override void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Tworzy opis usługi hostowanej."
  remarks: "Ta metoda jest używana do konstruowania opisy umowy z dostosowanych modele programowania. Zastąp metodę odpowiedniej klasy podstawowej <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, aby zaimplementować dostosowane modelu.</xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>"
  syntax:
    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;Xref:System.Collections.Generic.IDictionary%602&gt; z parami kluczy typu (<xref:System.String>, <xref:System.ServiceModel.Description.ContractDescription>) zawierający keyed umów usługi hostowanej, które zostały wdrożone.</xref:System.ServiceModel.Description.ContractDescription> </xref:System.String>"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "A <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> usługi hostowanej."
  overload: System.ServiceModel.ServiceHost.CreateDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Typ usługi hostowanej jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: InitializeDescription(Object,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicjuje opis usługi hostowanej na podstawie jego wystąpieniu i określonej podstawowej adresów."
  syntax:
    content: protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: "Wystąpienie usługi hostowanej."
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "<xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref> Zawierający adres podstawowy usługi hostowanej."
  overload: System.ServiceModel.ServiceHost.InitializeDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>singletonInstance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: InitializeDescription(Type,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicjuje opis usługi hostowanej na podstawie jego typu i określonej podstawowej adresów."
  syntax:
    content: protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "<xref:System.Type>Usługi hostowanej.</xref:System.Type>"
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "<xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref> Zawierający adres podstawowy usługi hostowanej."
  overload: System.ServiceModel.ServiceHost.InitializeDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHost.OnClosed()
  fullName: System.ServiceModel.ServiceHost.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Usuwa jednorazowe usług, które są obsługiwane, gdy host usługi jest zamknięty."
  remarks: "W przypadku przesłaniania metody OnClosed musi zapewnić podstawowym. Wywoływana jest metoda OnClosed, nawet jeśli wystąpi wyjątek. Poniższy kod ilustruje sposób to zrobić.      ```   protected override void OnClosed()   {       try       {           if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)           {               FaultFlagService.faultFlag = ThrowDuring.Never;               throw new ServiceActivationException(&quot;Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed&quot;);           }       }       finally       {           base.OnClosed();       }   }      ```"
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.SingletonInstance
  id: SingletonInstance
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
  fullName: System.ServiceModel.ServiceHost.SingletonInstance
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Pobiera pojedyncze wystąpienie usługi hostowanej."
  remarks: "Użyj [ServiceHost (obiektu, identyfikator Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) konstruktora w celu zainicjowania pojedyncze wystąpienie usługi, która ma być obsługiwana, gdy użytkownik chce sterować tym wystąpieniem usługi, która jest używana."
  syntax:
    content: public object SingletonInstance { get; }
    return:
      type: System.Object
      description: "Obiekt usługi hostowanej."
  overload: System.ServiceModel.ServiceHost.SingletonInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.ServiceModel.ServiceHostBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.ServiceHost.#ctor
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost()
  nameWithType: ServiceHost.ServiceHost()
  fullName: System.ServiceModel.ServiceHost.ServiceHost()
- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost(Object,Uri[])
  nameWithType: ServiceHost.ServiceHost(Object,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost(Type,Uri[])
  nameWithType: ServiceHost.ServiceHost(Type,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHost.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription(Object,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription(Type,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
- uid: System.ServiceModel.ServiceHost.OnClosed
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHost.OnClosed()
  fullName: System.ServiceModel.ServiceHost.OnClosed()
- uid: System.ServiceModel.ServiceHost.SingletonInstance
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
  fullName: System.ServiceModel.ServiceHost.SingletonInstance
- uid: System.ServiceModel.ServiceHost.#ctor*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost
  nameWithType: ServiceHost.ServiceHost
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHost.AddServiceEndpoint
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHost.ApplyConfiguration
- uid: System.ServiceModel.ServiceHost.CreateDescription*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHost.CreateDescription
- uid: System.ServiceModel.ServiceHost.InitializeDescription*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHost.InitializeDescription
- uid: System.ServiceModel.ServiceHost.OnClosed*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHost.OnClosed
- uid: System.ServiceModel.ServiceHost.SingletonInstance*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
