### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  id: X509Certificate2
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  - System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  langs:
  - csharp
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  type: Class
  summary: "Reprezentuje certyfikat X.509."
  remarks: "Struktura X.509 pochodzi Międzynarodowej Organizacji Normalizacyjnej (ISO) grup roboczych. Ta struktura może być używana do reprezentowania różnych typów informacji, łącznie z atrybutami tożsamości, uprawnienia i posiadacz (uprawnienia, wiek, płeć, lokalizacji, przynależności i tak dalej). Choć zawierający najwięcej informacji w strukturze samego specyfikacji ISO, klasa X509Certificate2 jest przeznaczona do modelu scenariusze użycia zdefiniowane w specyfikacji wystawiony przez Internet Engineering Task Force (IETF) Public Key Infrastructure w grupie roboczej X.509 (PKIX). Najbardziej szczegółowy specyfikacji RFC 3280, jest &quot;[certyfikat i profil listy odwołania certyfikatów](http://go.microsoft.com/fwlink/?LinkId=45286).&quot;      > [!IMPORTANT] > Począwszy [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)], ten typ implementuje <xref:System.IDisposable>interfejsu.</xref:System.IDisposable> Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego. Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A>metody w `try` / `catch` bloku.</xref:System.IDisposable.Dispose%2A> Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic). Aby uzyskać więcej informacji, zobacz sekcję &quot;Przy użyciu obiektu który implementuje interfejs IDisposable&quot; w <xref:System.IDisposable>tematu interfejsu.</xref:System.IDisposable>   >> Dla aplikacji, które odnoszą się do [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] i wcześniejszych wersjach X509Certificate2 klasa nie implementuje <xref:System.IDisposable>interfejsu i dlatego nie ma `Dispose` metody.</xref:System.IDisposable>"
  example:
  - "The following example demonstrates how to use an X509Certificate2 object to encrypt and decrypt a file.  \n  \n [!code-vb[X509Certificate2#1](~/add/codesnippet/visualbasic/t-system.security.crypto_122_1.vb)]\n [!code-cs[X509Certificate2#1](~/add/codesnippet/csharp/t-system.security.crypto_122_1.cs)]  \n  \n The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/t-system.security.crypto_122_2.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/t-system.security.crypto_122_2.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/t-system.security.crypto_122_2.vb)]"
  syntax:
    content: 'public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate'
  inheritance:
  - System.Object
  - System.Security.Cryptography.X509Certificates.X509Certificate
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2()
  nameWithType: X509Certificate2.X509Certificate2()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2()
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> klasy."
  remarks: "Ten konstruktor tworzy pustą <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiektu, w przeciwieństwie do innych konstruktorów dla tej klasy, które używają informacji o certyfikacie z tablicy bajtów, wskaźnika lub pliku certyfikatu.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/m-system.security.crypto_122_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/m-system.security.crypto_122_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/m-system.security.crypto_122_1.cpp)]"
  syntax:
    content: public X509Certificate2 ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[])
  nameWithType: X509Certificate2.X509Certificate2(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu informacji z tablicy bajtów."
  remarks: "Ten konstruktor tworzy nową <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiektu przy użyciu informacji o certyfikacie z tablicy bajtów.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Tablica bajtów może być zakodowane pliku binarnego (DER) lub danych X.509 z kodowaniem Base64. Tablica bajtów można też PKCS7 (Authenticode) podpisanego pliku. certyfikat podpisujący jest używany do utworzenia obiektu.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów zawierająca dane z certyfikatu X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(IntPtr)
  nameWithType: X509Certificate2.X509Certificate2(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(IntPtr)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu dojścia niezarządzanego."
  remarks: "Ten konstruktor tworzy nową <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>kontekstu kryptograficznego interfejsu API Microsoft certyfikatu, przy użyciu dojścia `PCCERT_CONTEXT`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Należy pamiętać, że bezpośredniego obiektu wywołującego tego konstruktora musi mieć uprawnienie do kodu niezarządzanego.      > [!IMPORTANT] > Konstruktora tworzy kopię kontekstu certyfikatu. Zakłada się, że struktura kontekstu, przekazanych do konstruktora jest nieprawidłowy; może zostać zwolniony. Można uzyskać kopię bieżącego `PCCERT_CONTEXT` struktury z <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>Właściwości, ale jest prawidłowa tylko w czasie trwania <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiektu.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>"
  syntax:
    content: public X509Certificate2 (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "Wskaźnik do kontekstu certyfikatu za pomocą kodu niezarządzanego. Struktura C nosi nazwę <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(X509Certificate)
  nameWithType: X509Certificate2.X509Certificate2(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(X509Certificate)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> obiektu."
  remarks: "Ta metoda tworzy nowe wystąpienie klasy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>przy użyciu <xref:System.Security.Cryptography.X509Certificates.X509Certificate>obiektu.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> Obiektu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String)
  nameWithType: X509Certificate2.X509Certificate2(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu nazwy pliku certyfikatu."
  remarks: "Ten konstruktor tworzy nową <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>przy użyciu nazwy pliku certyfikatu.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Obsługuje ona kodowanie binarne (DER) lub kodowania Base64.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],SecureString)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu tablicy bajtów i hasła."
  remarks: "Ten konstruktor jest używany z plikami PKCS12 (PFX), które zawierają klucz prywatny certyfikatu. Ten konstruktor podania prawidłowego hasła podczas wywoływania odszyfrowuje klucz prywatny i zapisze go do kontenera kluczy.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera dane z certyfikatu X.509."
    - id: password
      type: System.Security.SecureString
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],String)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu tablicy bajtów i hasła."
  remarks: "Ten konstruktor tworzy nową <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>przy użyciu tablicy bajtów i hasło, które jest wymagane do uzyskania dostępu do danych certyfikatu.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Pliki PKCS12 (PFX), które zawierają klucz prywatny certyfikatu jest używany. Ten konstruktor podania prawidłowego hasła podczas wywoływania odszyfrowuje klucz prywatny i zapisze go do kontenera kluczy.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów zawierająca dane z certyfikatu X.509."
    - id: password
      type: System.String
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu określonego informacje o kontekście serializacji i strumienia."
  syntax:
    content: protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Informacje o serializacji wymaganego do deserializacji nowe <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Informacje kontekstowe dotyczące źródła strumienia do zdeserializowania."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,SecureString)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu nazwy pliku certyfikatu i hasła."
  remarks: "Ten konstruktor jest używany z plikami PKCS12 (PFX), które zawierają klucz prywatny certyfikatu. Ten konstruktor podania prawidłowego hasła podczas wywoływania odszyfrowuje klucz prywatny i zapisze go do kontenera kluczy.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
    - id: password
      type: System.Security.SecureString
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,String)
  nameWithType: X509Certificate2.X509Certificate2(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu nazwy pliku certyfikatu i hasło używane do dostępu do certyfikatu."
  remarks: "Ten konstruktor tworzy nową <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>przy użyciu nazwy pliku certyfikatu i hasła wymagane do dostępu do certyfikatu.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Pliki PKCS12 (PFX), które zawierają klucz prywatny certyfikatu jest używany. Ten konstruktor podania prawidłowego hasła podczas wywoływania odszyfrowuje klucz prywatny i zapisze go do kontenera kluczy.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
    - id: password
      type: System.String
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu tablicy bajtów, hasło i flagę magazynu kluczy."
  remarks: "Ten konstruktor jest używany z plikami PKCS12 (PFX), które zawierają klucz prywatny certyfikatu. Ten konstruktor podania prawidłowego hasła podczas wywoływania odszyfrowuje klucz prywatny i zapisuje je do firmy Microsoft kryptograficznego interfejsu API usługi dostawcy Kryptograficznych.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera dane z certyfikatu X.509."
    - id: password
      type: System.Security.SecureString
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu tablicy bajtów, hasło i flagę magazynu kluczy."
  remarks: "Ten konstruktor tworzy nową <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tablicy obiektu przy użyciu typu byte, hasło, które jest potrzebne do dostępu do danych certyfikatu i flagę magazynu kluczy.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Pliki PKCS12 (PFX), które zawierają klucz prywatny certyfikatu jest używany. Ten konstruktor podania prawidłowego hasła podczas wywoływania odszyfrowuje klucz prywatny i zapisuje je do firmy Microsoft kryptograficznego interfejsu API usługi dostawcy Kryptograficznych.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów zawierająca dane z certyfikatu X.509."
    - id: password
      type: System.String
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu nazwy pliku certyfikatu, hasło i flagę magazynu kluczy."
  remarks: "W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
    - id: password
      type: System.Security.SecureString
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> nazwę klasy przy użyciu pliku certyfikatu, hasło używane do dostępu do certyfikatu i flagę magazynu kluczy."
  remarks: "Ten konstruktor tworzy nową <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>name obiektu przy użyciu pliku certyfikatu, hasło potrzebne do dostępu do certyfikatu i flagę magazynu kluczy.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.       W przypadku utworzenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certyfikatu za pośrednictwem sklepu podpisany plik PKCS7 dla `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jest tworzony dla certyfikatu, który podpisał magazynu, a nie dla każdego certyfikaty w magazynie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
    - id: password
      type: System.String
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Występuje błąd z certyfikatem. Na przykład:-plik certyfikatu, który nie istnieje.      -Certyfikat jest nieprawidłowy.      — Hasło do certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  id: Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Archived
  nameWithType: X509Certificate2.Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera lub ustawia wartość wskazującą, że certyfikat X.509 zostaną zarchiwizowane."
  remarks: "Ta właściwość jest ustawiona tylko dla certyfikatu, który jest skojarzony z magazynem. Jeśli właściwość jest ustawiona, i dodaniu certyfikatu do magazynu certyfikatów, wartość jest trwały. Jeśli właściwość jest ustawiona na certyfikat pobrany z magazynu, wartość jest trwały natychmiast.       W magazynie X.509 zarchiwizowane certyfikaty nie są uwzględniane w zwróconym <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>obiektów, chyba że ma ustawioną właściwość zarchiwizowany `true`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> Brak fizycznego aktywności archiwizacji występuje, gdy wartość zarchiwizowany jest ustawiona lub nie ustawiono."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_26_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_26_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public bool Archived { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli certyfikat jest zarchiwizowany, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli certyfikat nie zostaną zarchiwizowane."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  id: Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Extensions
  nameWithType: X509Certificate2.Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera kolekcję <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Extension&quot;> </xref> obiektów."
  remarks: "Rozszerzenia zdefiniowane w formacie certyfikatu X.509 v3 Zezwalaj na dodatkowe dane mają być uwzględnione w certyfikacie. Szereg rozszerzeń są definiowane przez ISO w definicji X.509 v3, a także PKIX w dokumencie RFC 3280, &quot;[certyfikat i profil listy odwołania certyfikatów](http://go.microsoft.com/fwlink/?LinkId=45286).&quot; Typowe rozszerzenia zawierają informacje dotyczące użycia klucza (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), klucz identyfikatorów (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), zasad, informacje o odwołaniu (rozszerzenie punkt dystrybucji listy CRL) i innych celów certyfikatu.</xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> </xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_97_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_97_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_97_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509ExtensionCollection&quot;> </xref> Obiektu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera lub ustawia skojarzone alias dla certyfikatu."
  remarks: "Przyjazne nazwy są właściwościami w magazynie certyfikatów X.509, który można ustawić. Są one używane, aby umożliwić użytkownikowi kojarzenie aliasy za pomocą certyfikatów, aby można je łatwo zidentyfikować.       Jeśli nie podano przyjaznej nazwy istnieje dla certyfikatu, ciąg pusty (&quot;&quot;) jest zwracany."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_16_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_16_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_16_1.vb)]"
  syntax:
    content: public string FriendlyName { get; set; }
    return:
      type: System.String
      description: "Przyjazna nazwa certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  id: GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetCertContentType(Byte[])
  nameWithType: X509Certificate2.GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wskazuje typ certyfikatu jest zawarty w tablicy bajtów."
  remarks: "Ta metoda umożliwia odnalezienie typu certyfikatu w pliku."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/a34c0539-d23c-4bd1-9b29-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/a34c0539-d23c-4bd1-9b29-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/a34c0539-d23c-4bd1-9b29-_1.cpp)]"
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów zawierająca dane z certyfikatu X.509."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> Obiektu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rawData</code>o zerowej długości lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  id: GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetCertContentType(String)
  nameWithType: X509Certificate2.GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(String)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wskazuje typ certyfikatu jest zawarty w pliku."
  remarks: "Ta metoda umożliwia odnalezienie typu certyfikatu w pliku."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> Obiektu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  id: GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetNameInfo(X509NameType,Boolean)
  nameWithType: X509Certificate2.GetNameInfo(X509NameType,Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(X509NameType,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera podmiot i Wystawca nazwy z certyfikatu."
  remarks: "Ta metoda zawsze należy używać zamiast analizy certyfikatu, ponieważ wiele wartości nazw może znajdować się w wielu lokalizacjach. Za pomocą tej metody gwarantuje, że zwracana jest nazwa odpowiednie."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/3126ffa7-3ffc-4612-bfb2-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/3126ffa7-3ffc-4612-bfb2-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/3126ffa7-3ffc-4612-bfb2-_1.cpp)]"
  syntax:
    content: public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);
    parameters:
    - id: nameType
      type: System.Security.Cryptography.X509Certificates.X509NameType
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509NameType&quot;> </xref> Wartości podmiotu."
    - id: forIssuer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić nazwę wystawcy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Nazwa certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  id: HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiektów zawiera klucz prywatny."
  syntax:
    content: public bool HasPrivateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiekt zawiera prywatnej klucza; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Kontekst certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate2.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wypełnia <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiektu z danych z tablicy bajtów."
  remarks: "Ta metoda może służyć do podjęcia bajtowych tablicę certyfikat X.509 i wypełnić <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiektu skojarzone z nim wartości.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Ponieważ ta metoda przyjmuje tablicy bajtów, może służyć tylko dla typów certyfikatów, które nie wymagają hasła, w tym certyfikat x.509 szyfrowany algorytmem Base64 lub algorytmem DER lub certyfikatu PFX/PKCS12. Należy pamiętać, że certyfikat PFX/PKCS12 może zawierać więcej niż jeden certyfikat. W takim przypadku służy pierwszy certyfikat skojarzony z kluczem prywatnym, lub jeśli zostanie znaleziony żaden klucz prywatny, pierwszy certyfikat jest używany."
  syntax:
    content: public override void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów zawierająca dane z certyfikatu X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate2.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wypełnia <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiektu o informacje z pliku certyfikatu."
  remarks: "Ta metoda używa pliku certyfikatu, takie jak plik z rozszerzeniem cer, reprezentuje certyfikatu X.509, który wypełnia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiektu z certyfikatów, plik zawiera.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Tej metody można użyć z kilku typów certyfikatów, tym certyfikaty x.509 szyfrowany algorytmem Base64 lub algorytmem DER, certyfikaty PFX/PKCS12 i podpisujący certyfikaty, jak Authenticode. Należy pamiętać, że certyfikat PFX/PKCS12 może zawierać więcej niż jeden certyfikat. W takim przypadku służy pierwszy certyfikat skojarzony z kluczem prywatnym, lub jeśli zostanie znaleziony żaden klucz prywatny, pierwszy certyfikat jest używany."
  syntax:
    content: public override void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wypełnia <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu danych z tablicy bajtów, hasło i flagę magazynu kluczy."
  remarks: "Ta metoda służy do typów certyfikatów, takich jak certyfikaty x.509 szyfrowany algorytmem Base64 lub algorytmem DER lub certyfikatów PFX/PKCS12. Należy pamiętać, że certyfikat PFX/PKCS12 może zawierać więcej niż jeden certyfikat. W takim przypadku służy pierwszy certyfikat skojarzony z kluczem prywatnym, lub jeśli zostanie znaleziony żaden klucz prywatny, pierwszy certyfikat jest używany.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  syntax:
    content: public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera dane z certyfikatu X.509."
    - id: password
      type: System.Security.SecureString
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wypełnia <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> przy użyciu danych z tablicy bajtów, hasło i flag określając sposób importowania klucza prywatnego."
  remarks: "Ta metoda służy do wypełniania <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>przy użyciu hasła certyfikatu reprezentowany przez tablicy bajtów.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>Wartość może być używana do sterowania, jak i gdzie można zaimportować klucza prywatnego.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>       Ta metoda przyjmuje tablicę bajtów i może służyć do typów certyfikatów, takich jak certyfikaty x.509 szyfrowany algorytmem Base64 lub algorytmem DER lub certyfikatów PFX/PKCS12. Należy pamiętać, że certyfikat PFX/PKCS12 może zawierać więcej niż jeden certyfikat. W takim przypadku służy pierwszy certyfikat skojarzony z kluczem prywatnym, lub jeśli zostanie znaleziony żaden klucz prywatny, pierwszy certyfikat jest używany.      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/af855297-61a6-47ed-8dcb-_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/af855297-61a6-47ed-8dcb-_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/af855297-61a6-47ed-8dcb-_1.vb)]"
  syntax:
    content: public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Tablica bajtów zawierająca dane z certyfikatu X.509."
    - id: password
      type: System.String
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wypełnia <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiektu informacjami uzyskanymi z pliku certyfikatu, hasła oraz flagę magazynu kluczy."
  remarks: '**Uwaga dotycząca zabezpieczeń** kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.'
  syntax:
    content: public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
    - id: password
      type: System.Security.SecureString
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wypełnia <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiektu o informacje z pliku certyfikatu hasła, a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&quot;> </xref> wartości."
  remarks: "Ta metoda może być używana wypełnić <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiektu o informacje z pliku certyfikatu, hasło i <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>wartość.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Kodu nigdy nie silne hasło w kodzie źródłowym.  Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/add/includes/ajax-current-ext-md.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe."
  syntax:
    content: public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku certyfikatu."
    - id: password
      type: System.String
      description: "Hasło wymagane do uzyskania dostępu do danych certyfikatu X.509."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Bitowe połączenie wyliczenia wartości tego formantu, jak i gdzie można zaimportować certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  id: IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera nazwa wyróżniająca wystawcy certyfikatu."
  remarks: "Ta właściwość zawiera nazwę urzędu certyfikacji (CA), który wystawił certyfikat. Aby uzyskać nazwę certyfikatu, należy użyć <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>metody.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>       Nazwa wyróżniająca dla certyfikatu jest tekstową reprezentację wartości podmiotu certyfikatu lub wystawcy. Taka reprezentacja składa się z atrybutami name (na przykład &quot;CN = Mójużytkownik, OU = Moja_jednostka_org, C = US&quot;)."
  example:
  - "The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_20_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_20_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_20_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X500DistinguishedName&quot;> </xref> Obiekt, który zawiera nazwy wystawcy certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Kontekst certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  id: NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera Data według czasu lokalnego, po której certyfikat nie jest już prawidłowy."
  remarks: "Ta właściwość wskazuje datę wygaśnięcia, na którym certyfikat jest nieprawidłowy."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_116_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_116_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_116_1.vb)]"
  syntax:
    content: public DateTime NotAfter { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>obiekt reprezentujący datę wygaśnięcia certyfikatu.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  id: NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera Data według czasu lokalnego, od której zaczyna obowiązywać certyfikat."
  remarks: "Ta właściwość wskazuje Data, od której zaczyna obowiązywać certyfikat."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_85_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_85_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_85_1.vb)]"
  syntax:
    content: public DateTime NotBefore { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>obiekt, który reprezentuje wejścia w życie certyfikatu.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  id: PrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera lub ustawia <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> obiekt, który reprezentuje klucz prywatny skojarzony z certyfikatem."
  remarks: "Obecnie ta właściwość obsługuje tylko kluczy RSA lub DSA, tak aby zwracało albo <xref:System.Security.Cryptography.RSACryptoServiceProvider>lub <xref:System.Security.Cryptography.DSACryptoServiceProvider>obiektu.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider> Jeśli klucza prywatnego, nie ma skojarzonego z certyfikatem, zwraca `null`.      > [!WARNING] > Jeśli ta właściwość jest ustawiona na `null` lub do innego klucza bez uprzedniego usunięcia pliku klucza prywatnego pozostaje na dysku.       Aby prawidłowo usunąć klucz prywatny skojarzony z tą właściwością, ustaw `PersistKeyInCsp` do `false`, a następnie wywołać <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>— Metoda.</xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_115_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_115_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_115_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "<xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> Obiektu, który jest RSA albo DSA dostawcy usług kryptograficznych."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość tego klucza nie jest kluczem RSA lub DSA lub klucz jest niemożliwe do odczytania."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ustawienie dla tej właściwości jest wartości <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Algorytm klucza klucz prywatny nie jest obsługiwane."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "Klucze X.509 nie pasują do siebie."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Klucz dostawcy usług kryptograficznych jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera obiekt PublicKey skojarzonego z certyfikatem."
  remarks: "Ta właściwość zwraca obiekt PublicKey, który zawiera identyfikator obiektu (<xref:System.Security.Cryptography.Oid>) reprezentujący algorytm klucza publicznego, parametry kodowany w formacie ASN.1 i kodowany w formacie ASN.1 wartość klucza.</xref:System.Security.Cryptography.Oid>       Możesz również uzyskać klucz jako <xref:System.Security.Cryptography.AsymmetricAlgorithm>obiektu za pomocą odwołań do właściwości PublicKey.</xref:System.Security.Cryptography.AsymmetricAlgorithm> Ta właściwość obsługuje tylko kluczy RSA lub DSA, tak aby zwracało albo <xref:System.Security.Cryptography.RSACryptoServiceProvider>lub <xref:System.Security.Cryptography.DSACryptoServiceProvider>obiekt, który reprezentuje klucz publiczny.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_120_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_120_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_120_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.PublicKey
      description: "Obiekt PublicKey."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Wartość tego klucza nie jest kluczem RSA lub DSA lub klucz jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  id: RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: RawData
  nameWithType: X509Certificate2.RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera dane pierwotne certyfikatu."
  remarks: ''
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_59_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_59_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_59_1.cpp)]"
  syntax:
    content: public byte[] RawData { get; }
    return:
      type: System.Byte[]
      description: "Dane pierwotne certyfikatu w postaci tablicy bajtów."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate2.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Resetuje stan <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiektu."
  remarks: "Ta metoda umożliwia resetowanie stanu certyfikatu. Zwalnia wszystkie zasoby skojarzone z certyfikatem."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  id: SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera numer seryjny certyfikatu."
  remarks: "Numer seryjny certyfikatu jest częścią oryginalnego protokołu X.509. Numer seryjny jest unikatowy numer wystawiony przez wystawcy certyfikatu, który jest również nazywany certyfikatu urzędu certyfikacji."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_114_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_114_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_114_1.vb)]"
  syntax:
    content: public string SerialNumber { get; }
    return:
      type: System.String
      description: "Numer seryjny certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera algorytm używany do tworzenia podpisu certyfikatu."
  remarks: "Identyfikator obiektu (<xref:System.Security.Cryptography.Oid>) określa typ algorytmu sygnatury używanego przez certyfikat.</xref:System.Security.Cryptography.Oid>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/6cab3ad3-94fb-4ecd-9a6c-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/6cab3ad3-94fb-4ecd-9a6c-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/6cab3ad3-94fb-4ecd-9a6c-_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.Oid SignatureAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "Zwraca identyfikator obiektu (<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>) algorytmu podpisu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  id: SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera nazwa wyróżniająca podmiotu z certyfikatu."
  remarks: "Nazwa wyróżniająca podmiotu jest nazwa użytkownika certyfikatu. Nazwa wyróżniająca dla certyfikatu jest tekstową reprezentację wartości podmiotu lub wystawcy certyfikatu. Taka reprezentacja składa się z atrybutami name, na przykład &quot;CN = Mójużytkownik, OU = Moja_jednostka_org, C = US&quot;."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_80_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_80_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_80_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X500DistinguishedName&quot;> </xref> Obiekt, który reprezentuje nazwę podmiotu certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Kontekst certyfikatu jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  id: Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera odcisk palca certyfikatu."
  remarks: "Odcisk palca dynamicznie jest generowany przy użyciu algorytmu SHA1 i nie istnieje fizycznie w certyfikacie. Ponieważ odcisk palca jest unikatową wartość dla certyfikatu, jest często używana można znaleźć określonego certyfikatu w magazynie certyfikatów."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_51_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_51_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_51_1.vb)]"
  syntax:
    content: public string Thumbprint { get; }
    return:
      type: System.String
      description: "Odcisk palca certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate2.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wyświetla certyfikat X.509 w formacie tekstowym."
  remarks: "Jak w przypadku wszystkich `ToString` metod, dane wyjściowe może nie być spójność w ramach wersji programu .NET Framework, więc wyników — metoda nie powinna być analizowana pod kątem zawartości. Użyj właściwości na <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiekt, aby uzyskać dokładne informacje o zawartości lub użyj <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>metodę, aby uzyskać informacje o certyfikacie.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Ta metoda Wyświetla certyfikatu w formacie tekstowym."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/m-system.security.crypto_81_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/m-system.security.crypto_81_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/m-system.security.crypto_81_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Informacje o certyfikacie."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate2.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Wyświetla certyfikat X.509 w formacie tekstowym."
  remarks: "Jak w przypadku wszystkich `ToString` metod, dane wyjściowe może nie być spójność w ramach wersji programu .NET Framework, więc wyników — metoda nie powinna być analizowana pod kątem zawartości. Użyj właściwości na <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>obiekt, aby uzyskać dokładne informacje.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Ta metoda Wyświetla certyfikatu w formacie tekstowym. Jeśli `verbose` ustawiono parametr `true`, wyświetlanie tekstu zawiera klucz publiczny, klucz prywatny i rozszerzenia. Jeśli `verbose` ma ustawioną wartość `false`, wyświetlanie tekstu zawiera te pola, które są dostępne z certyfikatu X.509, w tym odciskiem palca, numer seryjny, nazwy podmiotu i wystawcy i informacje o dacie ważności."
  example:
  - "The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/38d69126-bcaf-4cee-a89b-_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/38d69126-bcaf-4cee-a89b-_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/38d69126-bcaf-4cee-a89b-_1.vb)]"
  syntax:
    content: public override string ToString (bool verbose);
    parameters:
    - id: verbose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wyświetlić klucz publiczny, klucz prywatny, rozszerzenia i tak dalej; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> do wyświetlania informacji, która jest podobna do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> klasy, w tym odciskiem palca, numer seryjny, nazwy podmiotu i wystawcy i tak dalej."
    return:
      type: System.String
      description: "Informacje o certyfikacie."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  id: Verify
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Verify()
  nameWithType: X509Certificate2.Verify()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Sprawdza poprawność łańcucha X.509, za pomocą zasad podstawowe sprawdzanie poprawności."
  remarks: "Ta metoda tworzy prosty łańcucha certyfikatu i stosuje podstawowe zasady do tego łańcucha. Aby uzyskać więcej informacji na temat niepowodzenia weryfikacji certyfikatu bezpośrednio przy użyciu <xref:System.Security.Cryptography.X509Certificates.X509Chain>obiektu.</xref:System.Security.Cryptography.X509Certificates.X509Chain>       Należy pamiętać, że domyślne łańcucha aparat można zastąpić przy użyciu <xref:System.Security.Cryptography.CryptoConfig>klasy.</xref:System.Security.Cryptography.CryptoConfig> Microsoft Windows Server 2003, domyślny aparat zgodny ze specyfikacją opisanego w RFC3280, &quot;[certyfikat i profil listy odwołania certyfikatów](http://go.microsoft.com/fwlink/?LinkId=45286).&quot;"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/m-system.security.crypto_98_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/m-system.security.crypto_98_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/m-system.security.crypto_98_1.cpp)]"
  syntax:
    content: public bool Verify ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli weryfikacja zakończy się pomyślnie; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> w przypadku niepowodzenia weryfikacji."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  id: Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Version
  nameWithType: X509Certificate2.Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Pobiera wersja formatu X.509 certyfikatu."
  remarks: "Dostępne są różne wersje certyfikatów X.509. Ta właściwość określa, który format używa certyfikatu. Na przykład &quot;3&quot; jest zwracana certyfikatu w wersji 3."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_37_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_37_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_37_1.vb)]"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "Format certyfikatu."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Version*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certyfikat jest niemożliwe do odczytania."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2()
  nameWithType: X509Certificate2.X509Certificate2()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[])
  nameWithType: X509Certificate2.X509Certificate2(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(IntPtr)
  nameWithType: X509Certificate2.X509Certificate2(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(X509Certificate)
  nameWithType: X509Certificate2.X509Certificate2(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String)
  nameWithType: X509Certificate2.X509Certificate2(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],SecureString)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],String)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,SecureString)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,String)
  nameWithType: X509Certificate2.X509Certificate2(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Archived
  nameWithType: X509Certificate2.Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Extensions
  nameWithType: X509Certificate2.Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
- uid: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ExtensionCollection
  nameWithType: X509ExtensionCollection
  fullName: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType(Byte[])
  nameWithType: X509Certificate2.GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType(String)
  nameWithType: X509Certificate2.GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetNameInfo(X509NameType,Boolean)
  nameWithType: X509Certificate2.GetNameInfo(X509NameType,Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(X509NameType,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509NameType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509NameType
  nameWithType: X509NameType
  fullName: System.Security.Cryptography.X509Certificates.X509NameType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate2.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate2.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
- uid: System.Security.Cryptography.X509Certificates.X500DistinguishedName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X500DistinguishedName
  nameWithType: X500DistinguishedName
  fullName: System.Security.Cryptography.X509Certificates.X500DistinguishedName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
- uid: System.Security.Cryptography.X509Certificates.PublicKey
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: PublicKey
  nameWithType: PublicKey
  fullName: System.Security.Cryptography.X509Certificates.PublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: RawData
  nameWithType: X509Certificate2.RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate2.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate2.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate2.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Verify()
  nameWithType: X509Certificate2.Verify()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Version
  nameWithType: X509Certificate2.Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Archived
  nameWithType: X509Certificate2.Archived
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Extensions
  nameWithType: X509Certificate2.Extensions
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType
  nameWithType: X509Certificate2.GetCertContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetNameInfo
  nameWithType: X509Certificate2.GetNameInfo
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import
  nameWithType: X509Certificate2.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: RawData
  nameWithType: X509Certificate2.RawData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Reset
  nameWithType: X509Certificate2.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString
  nameWithType: X509Certificate2.ToString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Verify
  nameWithType: X509Certificate2.Verify
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Version
  nameWithType: X509Certificate2.Version
