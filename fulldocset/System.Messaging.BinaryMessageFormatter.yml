### YamlMime:ManagedReference
items:
- uid: System.Messaging.BinaryMessageFormatter
  id: BinaryMessageFormatter
  children:
  - System.Messaging.BinaryMessageFormatter.#ctor
  - System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  - System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.Clone
  - System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.TopObjectFormat
  - System.Messaging.BinaryMessageFormatter.TypeFormat
  - System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter
  fullName: System.Messaging.BinaryMessageFormatter
  type: Class
  summary: "Serializuje i deserializuje obiekt lub całego grafu połączonych obiektów, do lub z treści wiadomości MSMQ, przy użyciu formatu binarnego."
  remarks: "BinaryMessageFormatter jest bardzo wydajny i może służyć do serializacji większość obiektów. Wynik jest bardzo compact i szybkie do analizy, ale nie jest możliwe w dla luźno wiadomości jako <xref:System.Messaging.XmlMessageFormatter>jest.</xref:System.Messaging.XmlMessageFormatter> Luźno powiązanych oznacza, że klient i serwer niezależnie można wersja typu, które są wysyłane i odbierane.       Gdy aplikacja wysyła komunikat do kolejki, używając wystąpienia <xref:System.Messaging.MessageQueue>klasy, program formatujący serializuje obiekt do strumienia i wstawia je do treści wiadomości.</xref:System.Messaging.MessageQueue> Podczas czytania z kolejki przy użyciu <xref:System.Messaging.MessageQueue>element formatujący deserializuje dane wiadomości do <xref:System.Messaging.Message.Body%2A>właściwości <xref:System.Messaging.Message>.</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> </xref:System.Messaging.MessageQueue>       BinaryMessageFormatter zapewnia większą przepustowość, niż <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> Za pomocą BinaryMessageFormatter czysty szybkości zamiast luźno wiadomości jest pożądane."
  example:
  - >-
    [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/t-system.messaging.binar_1.cpp)]
     [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/t-system.messaging.binar_1.cs)]
     [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/t-system.messaging.binar_1.vb)]
  syntax:
    content: 'public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> klasy bez określania stylu typu lub zestawu obiektu najwyższego poziomu."
  remarks: "Musisz określić wartości dla <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>Właściwości (który określa układ obiekt główny na wykresie) i <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>Właściwości (który określa sposób umieszczenia opisów typów obiektu układ) przed rozpoczęciem korzystania z wystąpienia <xref:System.Messaging.BinaryMessageFormatter>klasy do serializacji i wysłać wiadomość.</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>"
  syntax:
    content: public BinaryMessageFormatter ();
    parameters: []
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  id: '#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> klasy, określając formatów obiekt główny i opisy typów."
  syntax:
    content: public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);
    parameters:
    - id: topObjectFormat
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "Określa sposób umieszczenia najwyższego (głównego) obiektu wykresu jest w strumieniu serializowanym."
    - id: typeFormat
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "Określa sposób umieszczenia opisów typów są w strumieniu serializowanym."
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Określa, czy element formatujący może wykonywać deserializację treści wiadomości."
  remarks: "Właściwość CanRead zwraca `false` Jeśli treść komunikatu nie jest obiektem binarnego.       Na komputer odbierający właściwość CanRead zwraca `true` Jeśli zestawu dla klasy próba wykonania deserializacji istnieje lokalnie. Zestaw musi znajdować się w globalnej pamięci podręcznej zestawów lub powiązać aplikacji (na przykład, jeśli obiekt reprezentuje niestandardowej klasy)."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref> Do zbadania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element formatujący komunikatu binarnego może zdeserializować wiadomości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.BinaryMessageFormatter.CanRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Tworzy wystąpienie <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> klasy odczytu/zapisu, którego właściwości (główny obiekt i wpisz opis formatów) są takie same jak bieżące <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>."
  remarks: "Ta metoda tworzy kopię elementu formatującego i inicjuje wszystkie właściwości do wartości tym <xref:System.Messaging.BinaryMessageFormatter>.</xref:System.Messaging.BinaryMessageFormatter> Jest używany w przypadku skalowalności, ale nie gwarancji odczytu lub zapisu bezpieczeństwa wątków."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt, którego właściwości są identyczne z to <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>, ale których metadanych nie określa się do wystąpienia klasy elementu formatującego."
  overload: System.Messaging.BinaryMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Odczytuje zawartość z podanym komunikatem i tworzy obiekt, który zawiera komunikat zdeserializowany."
  remarks: "> [!IMPORTANT]> Wywołaniem tej metody z niezaufanych danych stanowi zagrożenie bezpieczeństwa. Wywołanie tej metody tylko z zaufanych danych. Aby uzyskać więcej informacji, zobacz [niezaufanych zagrożenia bezpieczeństwa danych](http://go.microsoft.com/fwlink/?LinkId=330378).       Treści wiadomości musi być w formacie binarnym, a sam serializator musi być używany do deserializacji komunikatu jak te, które początkowo serializowane go. Jeśli treść reprezentuje klasę niestandardową, musi istnieć lokalnie zestawu dla tej klasy."
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>, W formacie binarnym, służącego do deserializacji."
    return:
      type: System.Object
      description: "Zdeserializowana komunikat."
  overload: System.Messaging.BinaryMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Komunikat <xref:System.Messaging.Message.BodyType*>Właściwości nie wskazuje obiekt binarny.</xref:System.Messaging.Message.BodyType*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  id: TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia wartość, która określa sposób umieszczenia najwyższego (głównego) obiektu wykresu jest zdeserializować w odniesieniu do znajdowania i ładowanie jego zestaw."
  remarks: "Obecnie, należy zaakceptować wartości domyślne `AssemblyStyle`."
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "Jeden z <xref href=&quot;System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&quot;> </xref> wartości, które definiuje zachowanie deserializacji."
  overload: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  id: TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia wartość, która określa sposób umieszczenia opisów typów są wyświetlane w strumieniu serializowanym."
  remarks: "Obecnie, należy zaakceptować wartości domyślne `TypesWhenNeeded`."
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "A <xref href=&quot;System.Runtime.Serialization.Formatters.FormatterTypeStyle&quot;> </xref> definiuje format opisu typu."
  overload: System.Messaging.BinaryMessageFormatter.TypeFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Serializuje obiektu na treść komunikatu."
  remarks: "Typ i format obiektu najwyższego poziomu nie muszą być określane do zapisu do kolejki, ponieważ muszą one być podczas odczytu. <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>i <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>Właściwości są używane przez program formatujący tylko wtedy, gdy podczas deserializacji komunikatu.</xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>       <xref:System.Messaging.BinaryMessageFormatter>Może serializować obiektów większości, ale wynik nie jest luźno powiązane.</xref:System.Messaging.BinaryMessageFormatter> Jednak jest niewielki, więc program formatujący to efektywne w przypadku dużych obiektów."
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref> Których <xref:System.Messaging.Message.Body*>Właściwości będzie zawierać Zserializowany obiekt.</xref:System.Messaging.Message.Body*>"
    - id: obj
      type: System.Object
      description: "Obiekt do serializacji w treści wiadomości."
  overload: System.Messaging.BinaryMessageFormatter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
- uid: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterAssemblyStyle
  nameWithType: FormatterAssemblyStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
- uid: System.Runtime.Serialization.Formatters.FormatterTypeStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterTypeStyle
  nameWithType: FormatterTypeStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterTypeStyle
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.BinaryMessageFormatter.Clone
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
- uid: System.Messaging.BinaryMessageFormatter.#ctor*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter
- uid: System.Messaging.BinaryMessageFormatter.CanRead*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: BinaryMessageFormatter.CanRead
- uid: System.Messaging.BinaryMessageFormatter.Clone*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: BinaryMessageFormatter.Clone
- uid: System.Messaging.BinaryMessageFormatter.Read*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read
  nameWithType: BinaryMessageFormatter.Read
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write
  nameWithType: BinaryMessageFormatter.Write
