### YamlMime:ManagedReference
items:
- uid: System.Web.UI.StateManagedCollection
  id: StateManagedCollection
  children:
  - System.Web.UI.StateManagedCollection.#ctor
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.GetKnownTypes
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: StateManagedCollection
  nameWithType: StateManagedCollection
  fullName: System.Web.UI.StateManagedCollection
  type: Class
  summary: "Udostępnia klasę podstawową dla wszystkich zbiorów jednoznacznie, które zarządzają <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> obiektów."
  remarks: "Klasa elementu StateManagedCollection jest klasa podstawowa dla wszystkich zbiorów jednoznacznie, które przechowują <xref:System.Web.UI.IStateManager>elementów, w tym <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>oraz innym osobom.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.StyleCollection> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.DataControlFieldCollection> </xref:System.Web.UI.IStateManager> Kolekcja elementu StateManagedCollection zarządza własną stan, a także stan elementów, które zawiera. W związku z tym wywołaniu <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>zapisuje stan kolekcji i stan wszystkich elementów aktualnie zawarty w kolekcji.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       Są najważniejsze metody, które należy wziąć pod uwagę w przypadku tworzenia klasy pochodnej z klasy elementu StateManagedCollection <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>i <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>.</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> </xref:System.Web.UI.StateManagedCollection.SetDirty%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A> </xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>i <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>metody są używane do przechowywania indeksu w widoku stanu dla typu zawartych w niej element.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> Przechowywanie indeksu, a nie w pełni kwalifikowana nazwa typu poprawia wydajność. <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>Metoda jest wywoływana, gdy elementy kolekcji są manipulacje i sprawdza poprawność elementy zgodnie z regułami biznesowymi.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> Obecnie wdrożenia <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>zabrania metody `null` obiekty znajdują się w kolekcji; jednak mogą przesłaniać tę metodę do zdefiniowania własnych zachowanie weryfikacji w typie pochodnym.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>Metody wymusza całą kolekcję do stanu widoku, zamiast serializacji tylko zmiany wprowadzone od czasu ostatniego stanu została załadowana.</xref:System.Web.UI.StateManagedCollection.SetDirty%2A> <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>Metoda to metoda abstrakcyjna można zaimplementować w celu wykonania tego samego zachowania na poziomie elementu.</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>      > [!IMPORTANT] > Elementu StateManagedCollection przechowuje nazwy typu kwalifikowanego zestawu elementów kolekcji w widoku stanu. Osoba odwiedzająca można dekodować stan widoku i pobrać nazwy typu. Jeśli ten scenariusz tworzy problem dotyczący zabezpieczeń w witrynie sieci Web, nazwa typu można zaszyfrować ręcznie przed wprowadzeniem go do stanu widoku."
  example:
  - "The following code example demonstrates how to derive a strongly typed collection class from StateManagedCollection to contain <xref:System.Web.UI.IStateManager> objects. In this example, the `CycleCollection` is derived to contain instances of the abstract `Cycle` class, which can be either `Bicycle` or `Tricycle` objects. The `Cycle` class implements the <xref:System.Web.UI.IStateManager> interface because it stores the value of the `CycleColor` property in view state.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#1](~/add/codesnippet/csharp/t-system.web.ui.stateman_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.stateman_1.vb)]"
  syntax:
    content: 'public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> klasy."
  remarks: "Klasy pochodne mogą przesłaniać konstruktora do implementacji niestandardowych."
  syntax:
    content: protected StateManagedCollection ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Clear
  id: Clear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Usuwa wszystkie elementy z <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnClear%2A>Metoda jest wywoływana przed wywołaniem metody Clear i <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>Metoda jest wywoływana po zakończeniu wyczyść usuwanie elementów z kolekcji.</xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Kopiuje elementy <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji do tablicy, zaczynając od określonego indeksu tablicy."
  remarks: "Określona tablica musi być zgodne z typem.       Elementy są kopiowane do <xref:System.Array>w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Web.UI.StateManagedCollection>kolekcji.</xref:System.Web.UI.StateManagedCollection> </xref:System.Array>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Jednowymiarowa <xref:System.Array>który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Web.UI.StateManagedCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.  \n  \n \\- or -  \n  \n <code>index</code> is greater than or equal to the length of <code>array</code>.  \n  \n \\- or -  \n  \n The number of elements in the source <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Count
  id: Count
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera liczbę elementów zawartych w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba elementów zawartych w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej tworzy wystąpienia klasy, która implementuje <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>. Typ obiektu utworzonego jest oparty na określonego członka kolekcji zwróconej przez <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>metody.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
  remarks: "Metoda CreateKnownType jest wywoływana wewnętrznie przez <xref:System.Web.UI.StateManagedCollection>kolekcji jego wykonywania <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName>metody.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> </xref:System.Web.UI.StateManagedCollection> Pochodne kolekcje, Zastąp metodę CreateKnownType do zwrócenia domyślnego wystąpienia programu <xref:System.Web.UI.IStateManager>typu identyfikowana na podstawie dostarczonych `index`, zmapowanym na jeden z typów zwracanych przez <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>metody.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.IStateManager>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the CreateKnownType method. The `CycleCollection` implementation of CreateKnownType returns the default instance of either a `Bicycle` or `Tricycle` object, depending on the index passed. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_1_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_1_1.vb)]"
  syntax:
    content: protected virtual object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeks, z listy uporządkowanej typów zwróconych przez <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>, typu <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> do utworzenia.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
    return:
      type: System.Object
      description: "Wystąpienie klasy pochodnej z <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>, zgodnie z do <code> index </code> podane."
  overload: System.Web.UI.StateManagedCollection.CreateKnownType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "We wszystkich przypadkach, gdy nie przesłonięcia w klasie pochodnej."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca iterację, który iteruje po <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Który może służyć do iterowania po <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej pobiera tablicę <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> typy, które <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> Kolekcja może zawierać."
  remarks: "Metoda GetKnownTypes jest wywoływana wewnętrznie przez <xref:System.Web.UI.StateManagedCollection>kolekcji jego wykonywania <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>metody.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> Pochodne kolekcje, Zastąp metodę GetKnownTypes w celu zwraca tablicę <xref:System.Type>obiektów, które reprezentują typy kolekcji może zawierać.</xref:System.Type>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the GetKnownTypes method. The `CycleCollection` implementation of GetKnownTypes returns a <xref:System.Type> array of known types, including `Bicycle` and `Tricycle` types. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_0_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_0_1.vb)]"
  syntax:
    content: protected virtual Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Tablicy uporządkowanej <xref:System.Type>obiektów, które identyfikują typy <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> obiekty mogą zawierać kolekcji.</xref:System.Type> Domyślna implementacja zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClear
  id: OnClear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej, wykonuje dodatkowej pracy przed <xref:System.Web.UI.StateManagedCollection.Clear*>Metoda usuwa wszystkie elementy z kolekcji.</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "Kolekcje pochodzące z <xref:System.Web.UI.StateManagedCollection>można zastąpić metodę OnClear w celu wykonywania dodatkowych działań przed wszystkie elementy są usuwane z kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.Clear%2A>metody.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  id: OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej, wykonuje dodatkowej pracy po <xref:System.Web.UI.StateManagedCollection.Clear*>Metoda zakończy usuwanie wszystkich elementów z kolekcji.</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "Kolekcje pochodzące z <xref:System.Web.UI.StateManagedCollection>można zastąpić metodę OnClearComplete w celu wykonywania dodatkowych działań po usunięciu wszystkich elementów z kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.Clear%2A>metody.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej, wykonuje dodatkowej pracy przed &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; lub &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; metody dodaje element do kolekcji."
  remarks: "Kolekcje pochodzące z <xref:System.Web.UI.StateManagedCollection>można zastąpić metodę OnInsert w celu wykonywania dodatkowych działań przed element zostanie dodany do kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>lub <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>metody.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `value` powinny zostać wstawione przez &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; metody."
    - id: value
      type: System.Object
      description: "Obiekt do wstawienia do <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej, wykonuje dodatkowej pracy po &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; lub &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; metody dodaje element do kolekcji."
  remarks: "Kolekcje pochodzące z <xref:System.Web.UI.StateManagedCollection>można zastąpić metodę OnInsertComplete w celu wykonywania dodatkowych działań po dodaniu elementów do kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>lub <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>metody.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `value` jest wstawiana za &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; metody."
    - id: value
      type: System.Object
      description: "Obiekt wstawiony do <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej, wykonuje dodatkowej pracy przed &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; lub &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; metoda usuwa określony element z kolekcji."
  remarks: "Kolekcje pochodzące z <xref:System.Web.UI.StateManagedCollection>można zastąpić metodę OnRemove w celu wykonywania dodatkowych działań przed usunięciem elementu z kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>lub <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>metody.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemove (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks elementu do usunięcia, które jest używane podczas &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; jest wywoływana."
    - id: value
      type: System.Object
      description: "Obiekt do usunięcia z <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>, który jest używany podczas &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; jest wywoływana."
  overload: System.Web.UI.StateManagedCollection.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej, wykonuje dodatkowej pracy po &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; lub &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; metoda usuwa określony element z kolekcji."
  remarks: "Kolekcje pochodzące z <xref:System.Web.UI.StateManagedCollection>można zastąpić metodę OnRemoveComplete w celu wykonywania dodatkowych działań po usunięciu elementu z kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>lub <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>metody.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks elementu do usunięcia, które jest używane podczas &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; jest wywoływana."
    - id: value
      type: System.Object
      description: "Obiektu usuniętego z <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>, który jest używany podczas &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; jest wywoływana."
  overload: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej weryfikuje element <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  remarks: "Metoda OnValidate jest wywoływane w celu weryfikacji obiektu manipulować za pośrednictwem <xref:System.Web.UI.StateManagedCollection>Implementacja <xref:System.Collections.IList>metod interfejsu.</xref:System.Collections.IList> </xref:System.Web.UI.StateManagedCollection> Domyślna implementacja jest weryfikacja nie jest obiektem manipulować przez kolekcję `null`; jednak kolekcje pochodzące z <xref:System.Web.UI.StateManagedCollection>zastąpić metodę OnValidate, aby wykonać wszelkie dodatkowe sprawdzenie poprawności, takich jak sprawdzanie typu.</xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> Do sprawdzania poprawności."
  overload: System.Web.UI.StateManagedCollection.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirty
  id: SetDirty
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Wymusza całą <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji ma zostać zserializowana do stanu widoku."
  remarks: "Wymusza metody SetDirty <xref:System.Web.UI.StateManagedCollection>kolekcji, aby można było serializować całkowicie (natomiast <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>Metoda zapisuje dane zmian).</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> Jest to przydatne, gdy kolekcja została zmieniona w znaczący sposób i informacje o zmianach jest za mało, aby ponownie utworzyć obiekt w pamięci ze stanu widoku."
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "W przypadku przesłonięcia w klasie pochodnej, powoduje, że <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> zawarty w kolekcji, aby zarejestrować jego całą stanu, aby wyświetlić stan, a nie tylko rejestrowania zmienić informacje."
  remarks: "Metoda SetDirtyObject jest wywoływana wewnętrznie przez <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, i <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>metody.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the abstract SetDirtyObject method. The `CycleCollection` uses a <xref:System.Web.UI.StateBag> object to store its view-state information, and simply delegates the call to the <xref:System.Web.UI.StateBag.SetDirty%2A> method of the <xref:System.Web.UI.StateBag> object. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_2_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_2_1.vb)]"
  syntax:
    content: protected abstract void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> Który powinna Autoserializacja całkowicie."
  overload: System.Web.UI.StateManagedCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera liczbę elementów zawartych w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Liczba elementów w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji jest zsynchronizowany (wielowątkowość). Ta metoda zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> we wszystkich przypadkach."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji. Ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> we wszystkich przypadkach."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca iterację, który iteruje po <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Który może służyć do iterowania po <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Dodaje element do <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>i <xref:System.Web.UI.StateManagedCollection.OnInsert%2A>metody są wywoływane przed element zostanie dodany do kolekcji i <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A>Metoda jest wywoływana po dodaniu elementu.</xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnInsert%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The<xref uid=&quot;langword_csharp_ object &quot; name=&quot; object &quot; href=&quot;&quot;></xref>to add to the <xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "Położenie, w którym dodano nowy element."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Usuwa wszystkie elementy z <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnClear%2A>Metoda jest wywoływana przed <xref:System.Web.UI.StateManagedCollection.Clear%2A>Metoda jest wywoływana i <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>Metoda jest wywoływana po wykonaniu <xref:System.Web.UI.StateManagedCollection.Clear%2A>zakończy usuwanie elementów z kolekcji.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcja zawiera określoną wartość."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>Metoda jest wywoływana w celu zweryfikowania `value` przed zaznaczono kolekcji.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> Do zlokalizowania w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt znajduje się w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Jeśli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> została przekazana dla parametru wartość <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> jest zwracany."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa indeks elementu określonego w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>Metoda jest wywoływana w celu zweryfikowania `value` przed zwróceniem indeksu.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do zlokalizowania w <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "Indeks <code> value </code>, jeśli jest on znaleziony na liście, a w przeciwnym razie wartość -1."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Wstawia element do <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji pod określonym indeksem."
  remarks: "Jeśli `index` wynosi -1, `value` jest dołączany na początku <xref:System.Web.UI.StateManagedCollection>kolekcji.</xref:System.Web.UI.StateManagedCollection> Jeśli `index` jest równa liczbie elementów w kolekcji, `value` jest dołączany na końcu kolekcji."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `value` powinien zostać wstawiony."
    - id: value
      type: System.Object
      description: "Obiekt do wstawienia do <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony <code> index </code> jest poza zakresem kolekcji."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> Jest tylko do odczytu."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcja ma stały rozmiar. Ta metoda zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> we wszystkich przypadkach."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcja jest tylko do odczytu."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> jest tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> element pod określonym indeksem."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks elementu do pobrania."
    return:
      type: System.Object
      description: "Element pod określonym indeksem."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony <code> index </code> jest poza zakresem kolekcji."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Usuwa pierwsze wystąpienie określonego obiektu z <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>Metoda jest wywoływana w celu zweryfikowania `value` przed usunięciem wartość z kolekcji.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>Metoda jest wywoływana przed usunięciem obiektu i <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>Metoda jest wywoływana po usunięciu obiektu.</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do usunięcia z <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> Jest tylko do odczytu."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Usuwa <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> element pod określonym indeksem."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>Metoda jest wywoływana w celu zweryfikowania `value` przed usunięciem wartość z kolekcji.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>Metoda jest wywoływana przed usunięciem obiektu i <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>Metoda jest wywoływana po usunięciu obiektu.</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks elementu do usunięcia."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> Jest tylko do odczytu."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji jest zapisywanie zmian stanu widoku."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolekcja jest oznaczona do zapisania własny stan i stan wszystkich <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> elementów zawiera; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Przywraca stan widoku wcześniej zapisany <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji i <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> zawiera elementy."
  remarks: "Ta metoda przywraca stan widoku informacji zapisanych przez <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>metody.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       Stan widoku jest sumą wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane w formantu serwera <xref:System.Web.UI.Control.ViewState%2A>właściwość, która jest wystąpieniem <xref:System.Web.UI.StateBag>klasy.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Wartość tej właściwości jest następnie trwale obiektowi ciągu po zapisywania stanu etapu cyklu życia serwera kontroli. Aby uzyskać więcej informacji, zobacz [NIB: formanty serwera sieci Web ASP.NET](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).       Ta metoda jest używana głównie przez deweloperów formantu. Można zastąpić tę metodę, aby określić, jak formantu niestandardowego serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Obiekt reprezentujący kolekcję i stan elementy kolekcji do przywrócenia."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zapisuje zmiany <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji oraz wszystkich <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> obiektu zawiera od czasu strony zostało przesłane do serwera."
  remarks: "Ta metoda jest używana głównie przez deweloperów formantu.       Stan widoku jest sumą wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane w formantu serwera <xref:System.Web.UI.Control.ViewState%2A>właściwość, która jest wystąpieniem <xref:System.Web.UI.StateBag>klasy.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Wartość tej właściwości jest następnie trwale obiektowi ciągu po zapisywania stanu etapu cyklu życia serwera kontroli. Aby uzyskać więcej informacji, zobacz [NIB: formanty serwera sieci Web ASP.NET](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).       Po zapisaniu stan widoku, ten obiekt string jest zwracana do klienta jako zmienna, która jest przechowywana w ukrytym elemencie HTML (`<input type=&quot;hidden&quot;>`). Podczas tworzenia niestandardowe kontrolki serwera może poprawić wydajność tej metody i modyfikując formantu serwera <xref:System.Web.UI.Control.ViewState%2A>Właściwości.</xref:System.Web.UI.Control.ViewState%2A> Aby uzyskać więcej informacji, zobacz [NIB: formanty serwera sieci Web ASP.NET](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) i[omówienie zarządzania stanu ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt, który zawiera zmiany stanu widoku <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> i zawiera elementy. Jeśli stan widoku, nie jest skojarzony z kolekcji i jej elementów, ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Powoduje, że <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> kolekcji oraz wszystkich <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> obiekty zawiera do śledzenia zmian w ich stan widoku, aby mógł być trwały żądań dla tej samej stronie."
  remarks: 'View state is the accumulation of the values of a server control''s properties. These values are automatically placed in the server control''s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property''s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).'
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.StateManagedCollection.#ctor
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
- uid: System.Web.UI.StateManagedCollection.Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.StateManagedCollection.Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.StateManagedCollection.OnClear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
- uid: System.Web.UI.StateManagedCollection.SetDirty
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.StateManagedCollection.#ctor*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection
  nameWithType: StateManagedCollection.StateManagedCollection
- uid: System.Web.UI.StateManagedCollection.Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear
  nameWithType: StateManagedCollection.Clear
- uid: System.Web.UI.StateManagedCollection.CopyTo*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo
  nameWithType: StateManagedCollection.CopyTo
- uid: System.Web.UI.StateManagedCollection.Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: StateManagedCollection.CreateKnownType
- uid: System.Web.UI.StateManagedCollection.GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StateManagedCollection.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: StateManagedCollection.GetKnownTypes
- uid: System.Web.UI.StateManagedCollection.OnClear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear
  nameWithType: StateManagedCollection.OnClear
- uid: System.Web.UI.StateManagedCollection.OnClearComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: StateManagedCollection.OnClearComplete
- uid: System.Web.UI.StateManagedCollection.OnInsert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert
  nameWithType: StateManagedCollection.OnInsert
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: StateManagedCollection.OnInsertComplete
- uid: System.Web.UI.StateManagedCollection.OnRemove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove
  nameWithType: StateManagedCollection.OnRemove
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: StateManagedCollection.OnRemoveComplete
- uid: System.Web.UI.StateManagedCollection.OnValidate*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate
  nameWithType: StateManagedCollection.OnValidate
- uid: System.Web.UI.StateManagedCollection.SetDirty*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty
  nameWithType: StateManagedCollection.SetDirty
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: StateManagedCollection.SetDirtyObject
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StateManagedCollection.System.Collections.IList.Add
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: StateManagedCollection.System.Collections.IList.Clear
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StateManagedCollection.System.Collections.IList.Contains
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StateManagedCollection.System.Collections.IList.Insert
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StateManagedCollection.System.Collections.IList.Item
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StateManagedCollection.System.Collections.IList.Remove
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState
