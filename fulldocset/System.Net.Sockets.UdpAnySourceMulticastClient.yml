### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpAnySourceMulticastClient
  id: UdpAnySourceMulticastClient
  children:
  - System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  - System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  - System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  langs:
  - csharp
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient
  type: Class
  summary: "Odbiornik klienta na ruch multiemisji z dowolnego źródła, znana także jako dowolnego źródła multiemisji (ASM) lub Internet standardowe multiemisji (ISM)."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpAnySourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Tworzy nowy <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> UDP klienta, który można subskrybować adres grupy i odbierają datagramy z dowolnego źródła."
  remarks: "Konstruktor UdpAnySourceMulticastClient kojarzy gniazda multiemisji UDP z grupy adres i port, ale nie powiązanie lub w przeciwnym razie użyj gniazda.       `groupAddress` Parametr może być multiemisji IPv6 albo IPv4 adresu.       `localPort` Parametrów nie mogą określać portu mniejszej niż 1024."
  syntax:
    content: public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: groupAddress
      type: System.Net.IPAddress
      description: "Adres grupy multiemisji dla tego odbiornika do subskrybowania."
    - id: localPort
      type: System.Int32
      description: "Port lokalny dla tego odbiornika powiązać."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. Odwołanie"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>jest mniejsza od 0 - lub - <code>localPort</code> jest większy niż 65 535."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Wiąże gniazda i rozpocznie się do grupy multiemisji, aby zezwolić datagramy z dowolnego uczestnika grupy operacji tworzenia sprzężenia."
  remarks: "Metoda BeginJoinGroup wiąże gniazda multiemisji UDP portów lokalnych i tworzy sprzężenie grupy multiemisji, aby umożliwić datagramy z dowolnego uczestnika grupy multiemisji. Port lokalny i adres multiemisji grupy są określone w <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>konstruktora.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>       Metoda określona w `callback` parametru jest wywoływana po wykonaniu operacji na dołączenie do grupy multiemisji.       Jeśli jest to wymagane przez środowisko uruchomieniowe, metoda BeginJoinGroup również przeprowadza sprawdzanie zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywołania zwrotnego do wywołania po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Informacje o stanie opcjonalne do przekazania do `callback` metody dla tej operacji."
    return:
      type: System.IAsyncResult
      description: "Zwraca <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>Który odwołuje się do tej operacji.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji została dołączona lub operacji tworzenia sprzężenia jest obecnie w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Rozpoczyna operację odbierania pakietu z połączonych grup multiemisji i wywołuje określony wywołania zwrotnego, gdy pakiet dotarła od wszystkich nadawców w grupie."
  remarks: "Metoda BeginReceiveFromGroup rozpoczyna operacji odbierania pakietów UDP z dołączonym do grupy multiemisji od dowolnego nadawcy. Port lokalny i adres multiemisji grupy są określone w <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>konstruktora.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> Klienta multiemisji należy również wykonać na przyłączenie do grupy multiemisji.       Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.       Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor do przechowywania odebranych danych."
    - id: offset
      type: System.Int32
      description: "Przesunięcie, w bajtach, od początku `buffer` przechowywania danych."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do pobierania i przechowywania w `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywołania zwrotnego do wywołania po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Informacje o stanie opcjonalne do przekazania do `callback` metody dla tej operacji."
    return:
      type: System.IAsyncResult
      description: "Zwraca <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>Który odwołuje się do tej operacji.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza od 0 - lub - <code>offset</code> jest większa niż długość <code>buffer</code>.       - lub - <code>count</code> jest mniejszy niż 0 - lub - <code>offset</code> plus wartość licznika jest większa niż długość <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  id: BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Rozpoczyna operację wysyłania pakietów emisji pojedynczej do określonej lokalizacji docelowej."
  remarks: "Metoda BeginSendTo rozpoczyna operację wysyłania pakietów UDP do połączonych grup multiemisji.       Klienta należy wykonać na przyłączenie do grupy multiemisji. Adres docelowy określony w `remoteEndPoint` parametr należy już zostało wysłane pakiety multiemisji do tego odbiorcy. Niektóre protokoły dzięki tym informacjom można przekazać sterowanie przepływem jakości usługi statystyk lub odzyskiwania wiadomości.       Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.       Przekazywanie jest dozwolone tylko, jeśli adres określony w `remoteEndPoint` parametru już wysłanych pakietów multiemisji tego odbiornika. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       Jeśli port docelowy określony w `remoteEndPoint` parametr jest mniejsza niż 1024, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor, który zawiera dane do wysłania."
    - id: offset
      type: System.Int32
      description: "Przesunięcie, w bajtach, od początku `buffer` odczytać dane do wysłania."
    - id: count
      type: System.Int32
      description: "Liczba bajtów do wysłania z `buffer`."
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: "Zdalny punkt końcowy, do którego ma być wysłany pakiet."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywołania zwrotnego do wywołania po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Informacje o stanie opcjonalne do przekazania do `callback` metody dla tej operacji."
    return:
      type: System.IAsyncResult
      description: "Zwraca <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>Który odwołuje się do tej operacji.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza od 0 - lub - <code>offset</code> jest większa niż długość <code>buffer</code>.       - lub - <code>count</code> jest mniejszy niż 0 - lub - <code>offset</code> plus wartość licznika jest większa niż długość <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Rozpoczyna operację wysyłania pakietów do dołączonego do grupy multiemisji i wywołuje określony wywołania zwrotnego, jeśli pakiet zostało wysłane do grupy."
  remarks: "Metoda BeginSendToGroup rozpoczyna operację wysyłania pakietów UDP do połączonych grup multiemisji.       Klienta należy wykonać na przyłączenie do grupy multiemisji.       Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.       Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor, który zawiera dane do wysłania."
    - id: offset
      type: System.Int32
      description: "Przesunięcie, w bajtach, od początku `buffer` odczytać dane do wysłania."
    - id: count
      type: System.Int32
      description: "Liczba bajtów do wysłania z `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywołania zwrotnego do wywołania po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Informacje o stanie opcjonalne do przekazania do `callback` metody dla tej operacji."
    return:
      type: System.IAsyncResult
      description: "Zwraca <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>Który odwołuje się do tej operacji.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza od 0 - lub - <code>offset</code> jest większa niż długość <code>buffer</code>.       - lub - <code>count</code> jest mniejszy niż 0 - lub - <code>offset</code> plus wartość licznika jest większa niż długość <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  id: BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Blokuje źródło, aby pochodzącego od niego pakiety multiemisji nie są odbierane."
  remarks: "Metoda BlockSource blokuje pochodzących z określonego adresu źródłowego z nich odbierane pakietów multiemisji. Klienta należy wykonać na przyłączenie do grupy multiemisji.       `sourceAddress` Parametr może mieć adres IPv6 albo IPv4, ale `sourceAddress` parametru musi być zgodna Rodzina adresów grupy multiemisji przyłączone do klienta.       Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.       W przypadku awarii gniazda podczas wykonywania operacji źródła bloku, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void BlockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "Adres źródła do blokowania."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Pozostawia grupy multiemisji i zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> klasy i <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> podstawowa"
  remarks: "Wywołaj metodę Dispose po zakończeniu przy użyciu <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> Metoda Dispose pozostawia <xref:System.Net.Sockets.UdpAnySourceMulticastClient>w stanie uniemożliwiającym jego używanie.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Net.Sockets.UdpAnySourceMulticastClient>, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Net.Sockets.UdpAnySourceMulticastClient>klasy.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> </xref:System.Net.Sockets.UdpAnySourceMulticastClient>       Wywoływanie zawsze Disposebefore wersji ostatniej odwołania do <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Net.Sockets.UdpAnySourceMulticastClient>obiektu <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Wykonuje operację asynchroniczną sprzężenia grupy do grupy multiemisji."
  remarks: "Metoda EndJoinGroup kończy asynchroniczne bind gniazda i Dołącz do operacji do grupy multiemisji.       Jeśli jest to wymagane przez środowisko uruchomieniowe, metoda EndJoinGroup również przeprowadza sprawdzanie zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       W przypadku awarii gniazda podczas wykonywania operacji łączenia grupy, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik operacji asynchronicznej sprzężenia."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  id: EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Kończy operację asynchroniczną odbierania pakietu z połączonych grup multiemisji i zapewnia uzyskanych informacji."
  remarks: "Metoda EndReceiveFromGroup kończy operację asynchroniczną do odbierania pakietów multiemisji w grupie.       W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik asynchronicznej operacji odbioru."
    - id: source
      type: System.Net.IPEndPoint
      description: "Punkt końcowy źródła, gdy pakiet został odebrany z."
    return:
      type: System.Int32
      description: "Długość w bajtach wiadomości przechowywanych w parametrze buforu przekazany do <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>metody.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  id: EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Kończy operację wysyłania pakietów emisji pojedynczej do określonej lokalizacji docelowej."
  remarks: "Metoda EndSendTo kończy operację asynchroniczną wysyłać pakietów do określonej lokalizacji docelowej adresu.       W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendTo (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik operacji asynchronicznej wysyłania."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  id: EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Kończy operację wysyłania pakietów do grupy multiemisji."
  remarks: "Metoda EndSendToGroup kończy operację asynchroniczną wysyłać pakietów do grupy multiemisji.       W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik operacji asynchronicznej wysyłania."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Pobiera lub ustawia wartość określającą, czy wychodzących pakietów multiemisji są dostarczane do aplikację wysyłającą."
  remarks: "Ruch multiemisji jest skalowalna metodą wiele do wielu komunikacji w Internecie. Proces subskrybuje adresu grupy multiemisji. Następnie wszystkie pakiety wysyłane przez proces subskrybowanego do grupy multiemisji są odbierane przez każdy inny proces subskrybuje adres multiemisji. Właściwość MulticastLoopback Określa, czy każdy proces na komputerze lokalnym odbiera pakiety multiemisji wysłanych przez tego klienta do grupy multiemisji."
  syntax:
    content: public bool MulticastLoopback { get; set; }
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean>.</xref:System.Boolean>       Wartość, która wskazuje, czy wychodzących pakietów multiemisji grupy są dostarczane do aplikację wysyłającą."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Pobiera lub ustawia rozmiar w bajtach buforu odbioru z <xref:System.Net.Sockets.Socket>używane dla operacji odbierania multiemisji na tym <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> wystąpienia.</xref:System.Net.Sockets.Socket>"
  remarks: "Właściwość ReceiveBufferSize pobiera lub ustawia rozmiar w bajtach buforu odbioru podstawowych <xref:System.Net.Sockets.Socket>używane dla operacji odbierania multiemisji na tym <xref:System.Net.Sockets.UdpAnySourceMulticastClient>wystąpienia.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> </xref:System.Net.Sockets.Socket> W szczególności właściwość ReceiveBufferSize Określa rozmiar buforu używanych przez stos, kiedy pakiet dociera, ale aplikacja nie została jeszcze wywołana <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>metody.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> Jeśli bufor zapełniane lub pakietów zachować wychodzącego przed wywołaniami aplikacji <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>i <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A>metod, stare pakiety zostaną uzyskać porzucony.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> Aplikacja nigdy nie będzie mogła odbierać pakiety starego, a zamiast tego otrzymają nowsze pakiety, gdy wywołuje <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>metody.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>       Domyślny rozmiar buforu odbioru w systemie Windows jest 8192 bajtów."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>       Rozmiar w bajtach buforu odbioru."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony rozmiar buforu jest mniejszy niż 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Pobiera lub ustawia rozmiar w bajtach buforu wysyłania z <xref:System.Net.Sockets.Socket>używane dla operacji wysyłania multiemisji na tym <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> wystąpienia.</xref:System.Net.Sockets.Socket>"
  remarks: "Właściwość SendBufferSize pobiera lub ustawia rozmiar w bajtach buforu wysyłania podstawowej gniazda używane dla operacji wysyłania multiemisji na tym <xref:System.Net.Sockets.UdpAnySourceMulticastClient>wystąpienia.</xref:System.Net.Sockets.UdpAnySourceMulticastClient>       wywołuje się <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A>lub <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A>będzie dłużej metody do wywołania wywołania zwrotnego, w zależności od wartości właściwości SendBufferSize, jeśli bufor wysyłania jest pełny.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> Właściwość SendBufferSize tylko określa, czy pozostaje buforu użytkownika jest zablokowana w pamięci fizycznej, do momentu ukończenia wysyłania.       Domyślny rozmiar buforu wysyłania w systemie Windows jest 8192 bajtów."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>       Rozmiar w bajtach buforu wysyłania."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony rozmiar buforu jest mniejszy niż 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  id: UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Odblokowuje źródła, która wcześniej została zablokowana przez wywołanie do <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>metody, dzięki czemu mogą być odbierane pochodzącego od niego pakiety multiemisji.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>"
  remarks: "Metoda UnblockSource odblokowuje pochodzących z określonego adresu źródłowego, może zostać odebrany pakietów multiemisji. Określonego adresu źródłowego musi wcześniej zostały zablokowane przez wywołanie do <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>metody.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>       Klienta należy wykonać na przyłączenie do grupy multiemisji.       `sourceAddress` Parametr może być multiemisji IPv6 albo IPv4 adresu.       Jeśli adres określonego źródła w `sourceAddress` parametr nie został wcześniej blokowane przez wywołanie do <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>metody, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>       W przypadku awarii gniazda podczas wykonywania operacji odblokowania źródła, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void UnblockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "Adres źródła, aby odblokować."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource
  nameWithType: UdpAnySourceMulticastClient.BlockSource
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpAnySourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo
  nameWithType: UdpAnySourceMulticastClient.EndSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource
  nameWithType: UdpAnySourceMulticastClient.UnblockSource
