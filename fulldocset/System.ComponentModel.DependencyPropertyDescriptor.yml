### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DependencyPropertyDescriptor
  id: DependencyPropertyDescriptor
  children:
  - System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.Attributes
  - System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.Category
  - System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  - System.ComponentModel.DependencyPropertyDescriptor.Converter
  - System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  - System.ComponentModel.DependencyPropertyDescriptor.Description
  - System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  - System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  - System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  - System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  - System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  - System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  - System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  - System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  - System.ComponentModel.DependencyPropertyDescriptor.Metadata
  - System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  - System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  - System.ComponentModel.DependencyPropertyDescriptor.ToString
  langs:
  - csharp
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
  type: Class
  summary: "Udostępnia rozszerzenie <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> który konta dla właściwości dodatkowe właściwości właściwości zależności."
  remarks: "Ta klasa jest używana głównie przez projektanta aplikacji. Te aplikacje może być konieczne właściwości właściwości zależności za pomocą właściwości systemu windows lub innych narzędzi używanych do edycji wartości właściwości raportu.       Aby sprawdzić konkretnej właściwości, aby ustalić, czy ma ona dostępna jako DependencyPropertyDescriptor <xref:System.ComponentModel.PropertyDescriptor>, albo wywoływać <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>, lub <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>.</xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName> </xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor> Jeśli każda metoda zwraca `null`, a następnie właściwość nie jest właściwością zależności. Jeśli metoda zwraca prawidłową DependencyPropertyDescriptor, właściwość jest właściwością zależności."
  syntax:
    content: 'public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor'
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  - System.ComponentModel.PropertyDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie."
  syntax:
    content: public override void AddValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Element, aby dodać obsługę programu."
    - id: handler
      type: System.EventHandler
      description: "Delegat do dodania jako odbiornik."
  overload: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera kolekcję atrybutów dla tego elementu członkowskiego."
  syntax:
    content: public override System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> Kolekcję atrybutów."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca czy Resetowanie obiektu zmienia jego wartość."
  remarks: "Ta metoda polega na podstawowym <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool CanResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik, aby sprawdzić możliwość resetowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Resetowanie składnika zmienia się wartość; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  id: Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera nazwę kategorii, której należy element członkowski, jak określono w <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Category { get; }
    return:
      type: System.String
      description: "Nazwa kategorii, do której należy element członkowski. W przypadku nie <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>, nazwa kategorii ustawiono domyślnej kategorii <xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera typ składnika, który jest powiązany tej właściwości."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override Type ComponentType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ składnika, ta właściwość jest powiązana.</xref:System.Type> Gdy <> </> *> lub <> </> *> są wywoływane, określony obiekt może być wystąpienia tego typu."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera konwerter typu dla tej właściwości."
  remarks: "Ta właściwość może być `null` w przypadkach, gdy oparte na atrybutach <xref:System.ComponentModel.TypeConverter>jest nie publicznej klasy.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public override System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> używany do przekonwertowania <xref:System.Type>tej właściwości.</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  id: DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca identyfikator właściwości zależności."
  remarks: "Ta właściwość może być `null` Jeśli <xref:System.ComponentModel.DependencyPropertyDescriptor>wystąpienie zostało utworzone dla właściwości, która nie jest właściwością zależności.</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public System.Windows.DependencyProperty DependencyProperty { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "Identyfikator właściwości zależności."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  id: Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera opis elementu członkowskiego, jak określono w <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Description { get; }
    return:
      type: System.String
      description: "Opis elementu członkowskiego. W przypadku nie <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>, wartość właściwości jest równa domyślna, czyli ciąg pusty (&quot;&quot;)."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  id: DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera lub ustawia wywołanie zwrotne, które projektantów Użyj, aby zmodyfikować efektywną wartość właściwości zależności, aby wartość właściwości zależności są przechowywane w aparacie właściwości zależności."
  syntax:
    content: public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }
    return:
      type: System.Windows.CoerceValueCallback
      description: "Wywołanie zwrotne, które projektantów Użyj, aby zmodyfikować efektywną wartość właściwości zależności, aby wartość właściwości zależności są przechowywane w aparacie właściwości zależności."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera informację, czy ten element członkowski należy ustawić tylko w czasie projektowania, jak określono w <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten element członkowski należy ustawić tylko w czasie projektowania; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli element członkowski może zostać ustawione w czasie wykonywania. W przypadku nie <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>, wartość zwracana jest wartość domyślna, czyli <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera nazwę, która może być wyświetlana w oknie, takie jak okna właściwości."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string DisplayName { get; }
    return:
      type: System.String
      description: "Nazwa, aby wyświetlić właściwości."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Porównuje dwa <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> wystąpienia pod kątem równości."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> Do porównania z bieżącym wystąpieniem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartości są równoważne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  id: FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> dla nazwy właściwości podana."
  remarks: "`name` Mogą odwoływać się do właściwości zależności lub dołączona właściwość i jest `name` parametru jako przekazaną do <xref:System.Windows.DependencyProperty.Register%2A>lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A>wywołaniu, które zdefiniowano właściwość zagrożona.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`Typ obiektu, który jest właścicielem właściwości ponownie jako jest przekazywana do <xref:System.Windows.DependencyProperty.Register%2A>lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `targetType`jest to typ obiektu, którego chcesz ustawić właściwość. Dla właściwości zależności `ownerType` i `targetType` są tego samego typu. Dołączone właściwości, które zwykle różnią się."
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);
    parameters:
    - id: name
      type: System.String
      description: "Zarejestrowaną nazwę właściwości zależności lub dołączona właściwość."
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>Obiektu, który jest właścicielem definicji właściwości.</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>Aby ustawić for. właściwości obiektu</xref:System.Type>"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "Żądany <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  id: FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> dla nazwy właściwości podana."
  remarks: "`name` Mogą odwoływać się do właściwości zależności lub dołączona właściwość i jest `name` parametru jako przekazaną do <xref:System.Windows.DependencyProperty.Register%2A>lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A>wywołaniu, które zdefiniowano właściwość zagrożona.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`Typ obiektu, który jest właścicielem właściwości ponownie jako jest przekazywana do <xref:System.Windows.DependencyProperty.Register%2A>lub <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `targetType`jest to typ obiektu, którego chcesz ustawić właściwość. Dla właściwości zależności `ownerType` i `targetType` są tego samego typu. Dołączone właściwości, które zwykle różnią się."
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);
    parameters:
    - id: name
      type: System.String
      description: "Zarejestrowaną nazwę właściwości zależności lub dołączona właściwość."
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>Obiektu, który jest właścicielem definicji właściwości.</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>Aby ustawić for. właściwości obiektu</xref:System.Type>"
    - id: ignorePropertyType
      type: System.Boolean
      description: "Określa, aby zignorować typ właściwości."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "Żądany <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  id: FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> dla podanego <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  remarks: "Ta metoda jest podstawową metodę przez projektanta aplikacji można uzyskać <xref:System.ComponentModel.DependencyPropertyDescriptor>na podstawie sprawdzanie wszystkich właściwości dla <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Do sprawdzenia."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "Jeśli właściwość opisanego przez <code> property </code> właściwości zależności, zwraca prawidłową <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>. W przeciwnym razie zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  id: FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> dla typu właściwości i docelowa podana zależności."
  remarks: "`dependencyProperty` Może odwoływać się do właściwości zależności lub dołączona właściwość. `targetType`jest to typ obiektu, którego chcesz ustawić właściwość. Dla właściwości zależności, które jest odpowiednikiem typu <xref:System.Windows.DependencyProperty.OwnerType%2A>dla `dependencyProperty`.</xref:System.Windows.DependencyProperty.OwnerType%2A> Dla dołączone właściwości `targetType` jest zazwyczaj innymi <xref:System.Windows.DependencyObject>typu.</xref:System.Windows.DependencyObject>"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);
    parameters:
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "Identyfikator właściwości zależności."
    - id: targetType
      type: System.Type
      description: "Typ obiektu, gdy właściwość jest ustawiona."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> dla właściwości zależności podana."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>."
  remarks: "Ta metoda polega na podstawowym <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);
    parameters:
    - id: instance
      type: System.Object
      description: "Składnik można pobrać właściwości."
    - id: filter
      type: System.Attribute[]
      description: "Tablica typu <xref:System.Attribute>do użycia jako filtr.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> z właściwościami, spełniających określone atrybuty dla określonego składnika."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera edytora określonego typu."
  remarks: "Ta metoda polega na podstawowym <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Typ podstawowy edytor, który jest używany w celu rozróżnienia wielu edytory, które obsługuje właściwości."
    return:
      type: System.Object
      description: "Wystąpienie typu żądanego Edytor lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli nie można odnaleźć edytora."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca wartość skrótu dla tego <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  remarks: "Wartość skrótu dla <xref:System.ComponentModel.DependencyPropertyDescriptor>opiera się zarówno na podstawie identyfikatora właściwości zależności, jak i na typ, na którym jest ustawiona.</xref:System.ComponentModel.DependencyPropertyDescriptor> Ta implementacja gwarantuje, że <xref:System.ComponentModel.DependencyPropertyDescriptor>nieprawidłowo nie zwracać taki sam skrót dla właściwości, które są dziedziczone przez wiele klas pochodnych możliwe lub dla właściwości, przypisane w przeciwnym razie ponownie za pomocą właściwości systemu.</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Bieżąca wartość właściwości składnika Resturns."
  remarks: "Ta metoda polega na podstawowym <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Wystąpienie składnika."
    return:
      type: System.Object
      description: "Żądana wartość."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  id: IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy właściwość jest zarejestrowany jako dołączona właściwość i jest on używany przez użycie dołączone."
  syntax:
    content: public bool IsAttached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość jest dołączona właściwość; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera wartość, która wskazuje wartość <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref> we właściwości."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref> została określona we właściwości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy ta właściwość powinna być lokalizowany, jak określono w <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref>."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsLocalizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element członkowski jest oznaczony atrybutem <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref> Konstruktor wartość PRAWDA; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy ta właściwość jest tylko do odczytu."
  remarks: "Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>       Właściwości zależności są rejestrowane jako tylko do odczytu przy użyciu wywołania metody określonej i Konwencja [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] otoki właściwości, które są wyświetlane przez odbicie i deskryptorów właściwości również musi być tylko do odczytu. Jednakże ponieważ jest to Konwencji i nie stanowi wymóg do kompilacji, można dokładnie sprawdzić zależności właściwość identyfikatora tylko do odczytu stanu. Aby to zrobić, należy uzyskać identyfikator (<xref:System.Windows.DependencyProperty>) wartość dla tego <xref:System.ComponentModel.DependencyPropertyDescriptor>, a następnie sprawdź wartość <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</xref:System.Windows.DependencyProperty.ReadOnly%2A> </xref:System.ComponentModel.DependencyPropertyDescriptor> </xref:System.Windows.DependencyProperty> Należy pamiętać, że <xref:System.Windows.DependencyProperty.ReadOnly%2A>jest na podstawie identyfikatora, nie metadanych.</xref:System.Windows.DependencyProperty.ReadOnly%2A>"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość jest tylko do odczytu. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  id: Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera metadane skojarzone z właściwości zależności."
  remarks: "Wartość może być `null` Jeśli brak metadanych nie lub właściwość nie jest właściwością zależności.       Metadane, który posiada odpowiadającego pojęcia związane z [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] atrybutów jest ponownie uwidocznione jako atrybuty w <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>kolekcji.</xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>"
  syntax:
    content: public System.Windows.PropertyMetadata Metadata { get; }
    return:
      type: System.Windows.PropertyMetadata
      description: "Metadane właściwości zależności."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera reprezentowanego <xref:System.Type>Właściwości zależności.</xref:System.Type>"
  remarks: "Ta właściwość zwraca <xref:System.Type>, który został zarejestrowany właściwości zależności.</xref:System.Type>"
  syntax:
    content: public override Type PropertyType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Właściwości zależności.</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Umożliwia inne obiekty, aby otrzymać powiadomienie, gdy ta właściwość ulegnie zmianie."
  remarks: "Ta metoda polega na podstawowym <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void RemoveValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Element, aby dodać obsługę programu."
    - id: handler
      type: System.EventHandler
      description: "Delegat do dodania jako odbiornik."
  overload: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Resetuje wartości dla tej właściwości składnika do wartości domyślnej."
  remarks: "Ta metoda polega na podstawowym <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void ResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik z wartością właściwości, która ma być zresetowane do wartości domyślnej."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Ustawia wartość składnika innej wartości."
  remarks: "Ta metoda polega na podstawowym <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void SetValue (object component, object value);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik, należy ustawić wartość właściwości."
    - id: value
      type: System.Object
      description: "Nowa wartość."
  overload: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Wskazuje, czy wartość tej właściwości musi zostać utrwalony przez procesy serializacji."
  syntax:
    content: public override bool ShouldSerializeValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik razem z właściwością badane trwałości."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość powinna zostać utrwalony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Wskazuje, czy powiadomienia o zmianie wartości dla tej właściwości mogą pochodzić od poza deskryptora właściwości, takie jak ze składnika, lub czy powiadomienia będą pochodzić wyłącznie od bezpośrednie wywołania <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>"
  remarks: "Na przykład w przypadku `true` przypadku może wdrożyć składnik <xref:System.ComponentModel.INotifyPropertyChanged>interfejsu lub mogą mieć jawnego `propertyName``Changed` zdarzeń dla tej właściwości.</xref:System.ComponentModel.INotifyPropertyChanged>       Ta właściwość zależy od źródłowego <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool SupportsChangeEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli powiadomienia dla tej właściwości może pochodzą z poza deskryptora właściwości, takie jak sam składnik. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Jeśli powiadomienia będą pochodzić wyłącznie od bezpośrednie wywołania <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  id: ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Konwertuje wartość tego wystąpienia reprezentacji ciągu równoważne."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Zwraca <xref:System.ComponentModel.MemberDescriptor.Name*>wartość.</xref:System.ComponentModel.MemberDescriptor.Name*>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged
  nameWithType: DependencyPropertyDescriptor.AddValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue
  nameWithType: DependencyPropertyDescriptor.CanResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyDescriptor.Equals
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName
  nameWithType: DependencyPropertyDescriptor.FromName
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty
  nameWithType: DependencyPropertyDescriptor.FromProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties
  nameWithType: DependencyPropertyDescriptor.GetChildProperties
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: DependencyPropertyDescriptor.GetEditor
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyDescriptor.GetHashCode
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue
  nameWithType: DependencyPropertyDescriptor.GetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue
  nameWithType: DependencyPropertyDescriptor.ResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue
  nameWithType: DependencyPropertyDescriptor.SetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString
  nameWithType: DependencyPropertyDescriptor.ToString
