### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityContext
  id: SecurityContext
  children:
  - System.Security.SecurityContext.Capture
  - System.Security.SecurityContext.CreateCopy
  - System.Security.SecurityContext.Dispose
  - System.Security.SecurityContext.IsFlowSuppressed
  - System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  - System.Security.SecurityContext.RestoreFlow
  - System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  - System.Security.SecurityContext.SuppressFlow
  - System.Security.SecurityContext.SuppressFlowWindowsIdentity
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Security.SecurityContext
  type: Class
  summary: "Hermetyzuje i propaguje wszystkie dane związane z zabezpieczeniami dla kontekstów wykonanie przenoszone między wątkami. Ta klasa nie może być dziedziczona."
  remarks: "A SecurityContext object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.  This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the SecurityContext is copied and transferred across asynchronous threads.  \n  \n> [!NOTE]\n>  The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions. Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled=\"true\"/>`). Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed. For more information about flowing unmanaged impersonation across asynchronous points, see [\\&lt;alwaysFlowImpersonationPolicy\\&gt; Element](../Topic/%3CalwaysFlowImpersonationPolicy%3E%20Element.md).  \n  \n The SecurityContext is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityContext.Capture
  id: Capture
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Capture()
  nameWithType: SecurityContext.Capture()
  fullName: System.Security.SecurityContext.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Przechwytuje kontekstu zabezpieczeń dla bieżącego wątku."
  remarks: "Kontekst zabezpieczeń przechwycony może odnosić się do innego wątku. <xref:System.Security.SecurityContext>Składa się z <xref:System.Threading.CompressedStack>i <xref:System.Security.Principal.WindowsIdentity>wykonywania wątku.</xref:System.Security.Principal.WindowsIdentity> </xref:System.Threading.CompressedStack> </xref:System.Security.SecurityContext>"
  syntax:
    content: public static System.Security.SecurityContext Capture ();
    parameters: []
    return:
      type: System.Security.SecurityContext
      description: "Kontekst zabezpieczeń dla bieżącego wątku."
  overload: System.Security.SecurityContext.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.CreateCopy
  id: CreateCopy
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: SecurityContext.CreateCopy()
  fullName: System.Security.SecurityContext.CreateCopy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Tworzy kopię bieżącego kontekstu zabezpieczeń."
  remarks: "Bieżący kontekst musi zostały zakupione w ramach przechwytywania lub operacji kopiowania. Ta metoda jest przydatne w przypadku stosowania przechwyconych <xref:System.Security.SecurityContext>wiele wątków.</xref:System.Security.SecurityContext>"
  syntax:
    content: public System.Security.SecurityContext CreateCopy ();
    parameters: []
    return:
      type: System.Security.SecurityContext
      description: "Kontekst zabezpieczeń dla bieżącego wątku."
  overload: System.Security.SecurityContext.CreateCopy*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Bieżący kontekst zabezpieczeń został wcześniej użyty, został organizowanego między domenami aplikacji lub nie uzyskano za pomocą <xref:System.Security.SecurityContext.Capture*>metody.</xref:System.Security.SecurityContext.Capture*>"
  platform:
  - net462
- uid: System.Security.SecurityContext.Dispose
  id: Dispose
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Security.SecurityContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <xref href=&quot;System.Security.SecurityContext&quot;> </xref> klasy."
  remarks: "Wywołanie `Dispose` po zakończeniu przy użyciu <xref:System.Security.SecurityContext>.</xref:System.Security.SecurityContext> `Dispose` Pozostawia metody <xref:System.Security.SecurityContext>w stanie uniemożliwiającym jego używanie.</xref:System.Security.SecurityContext> Po wywołaniu `Dispose`, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Security.SecurityContext>, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Security.SecurityContext>klasy.</xref:System.Security.SecurityContext> </xref:System.Security.SecurityContext>       Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md) i [implementacja metody Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Wywołanie zawsze `Dispose` przed zwolnieniem ostatniego odwołania do <xref:System.Security.SecurityContext>.</xref:System.Security.SecurityContext> W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Security.SecurityContext>obiektu `Finalize` metody.</xref:System.Security.SecurityContext>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.SecurityContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.IsFlowSuppressed
  id: IsFlowSuppressed
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: IsFlowSuppressed()
  nameWithType: SecurityContext.IsFlowSuppressed()
  fullName: System.Security.SecurityContext.IsFlowSuppressed()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Określa, czy przepływ kontekstu zabezpieczeń została pominięta."
  remarks: "Metoda IsFlowSuppressed służy do określenia, czy należy przesłać przez składniki infrastruktury <xref:System.Security.SecurityContext>informacje podczas operacji asynchronicznych.</xref:System.Security.SecurityContext>"
  syntax:
    content: public static bool IsFlowSuppressed ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli przepływ została pominięta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityContext.IsFlowSuppressed*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  id: IsWindowsIdentityFlowSuppressed
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: IsWindowsIdentityFlowSuppressed()
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed()
  fullName: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Określa, czy przepływ część tożsamości systemu Windows bieżący kontekst zabezpieczeń została pominięta."
  remarks: "Metoda IsWindowsIdentityFlowSuppressed jest używany przez składniki infrastruktury do określenia, czy należy przesłać informacje o tożsamości systemu Windows podczas <xref:System.Security.SecurityContext>migruje podczas operacji asynchronicznych.</xref:System.Security.SecurityContext>"
  syntax:
    content: public static bool IsWindowsIdentityFlowSuppressed ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli przepływ została pominięta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.RestoreFlow
  id: RestoreFlow
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: RestoreFlow()
  nameWithType: SecurityContext.RestoreFlow()
  fullName: System.Security.SecurityContext.RestoreFlow()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Przywraca przepływ kontekstu zabezpieczeń między wątkami asynchronicznego."
  remarks: "Metoda RestoreFlow jest wywoływana przez <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName>metodę, aby cofnąć efekt wcześniej <xref:System.Security.SecurityContext.SuppressFlow%2A>wywołania metody.</xref:System.Security.SecurityContext.SuppressFlow%2A> </xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName>"
  syntax:
    content: public static void RestoreFlow ();
    parameters: []
  overload: System.Security.SecurityContext.RestoreFlow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kontekst zabezpieczeń jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty."
  platform:
  - net462
- uid: System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  id: Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Run(SecurityContext,ContextCallback,Object)
  nameWithType: SecurityContext.Run(SecurityContext,ContextCallback,Object)
  fullName: System.Security.SecurityContext.Run(SecurityContext,ContextCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Uruchamia określonej metody w kontekście zabezpieczeń określonej w bieżącym wątku."
  remarks: "Kontekst zabezpieczeń bieżącego wątku jest zwracana do jego poprzedniego stanu po zakończeniu wywołania metody."
  example:
  - "The following code example shows how to use the Run method to execute a method in a specified security context.  \n  \n [!code-cs[System.Security.SecurityContext.Run#1](~/add/codesnippet/csharp/f32751be-87d3-46b4-a1da-_1.cs)]\n [!code-vb[System.Security.SecurityContext.Run#1](~/add/codesnippet/visualbasic/f32751be-87d3-46b4-a1da-_1.vb)]"
  syntax:
    content: public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);
    parameters:
    - id: securityContext
      type: System.Security.SecurityContext
      description: "Aby ustawić kontekstu zabezpieczeń."
    - id: callback
      type: System.Threading.ContextCallback
      description: "Delegat, który reprezentuje metodę na uruchomienie w kontekście zabezpieczeń określony."
    - id: state
      type: System.Object
      description: "Obiekt do przekazania do metody wywołania zwrotnego."
  overload: System.Security.SecurityContext.Run*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>securityContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>securityContext</code> nie uzyskano za pomocą operacji przechwytywania.       - lub - <code>securityContext</code> został już użyty jako argument w wywołaniu metody wykonywania."
  platform:
  - net462
- uid: System.Security.SecurityContext.SuppressFlow
  id: SuppressFlow
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: SuppressFlow()
  nameWithType: SecurityContext.SuppressFlow()
  fullName: System.Security.SecurityContext.SuppressFlow()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Pomija przepływ kontekstu zabezpieczeń między wątkami asynchronicznego."
  remarks: "Ta metoda służy do pomijania przepływ <xref:System.Security.SecurityContext>informacji na temat bieżącego wątku dla operacji asynchronicznych.</xref:System.Security.SecurityContext>       Środowisko uruchomieniowe języka wspólnego (CLR) ma informacje tylko operacji personifikacji wykonywane przy użyciu kodu zarządzanego. Środowisko CLR nie ma informacji o personifikacji wykonywane poza kodu zarządzanego, takich jak platforma wywołuje do kodu niezarządzanego, który wykonuje Personifikacja lub za pośrednictwem wywołania funkcji Win32. Tożsamość przepływ między punktami asynchroniczne, należy użyć zarządzanej <xref:System.Security.Principal.WindowsIdentity>i <xref:System.Security.Principal.WindowsImpersonationContext>metody.</xref:System.Security.Principal.WindowsImpersonationContext> </xref:System.Security.Principal.WindowsIdentity>       Użyj <xref:System.Threading.AsyncFlowControl.Undo%2A>metody w zwróconym <xref:System.Threading.AsyncFlowControl>struktury do zwrócenia <xref:System.Security.SecurityContext>obiektu do jego poprzedniego stanu.</xref:System.Security.SecurityContext> </xref:System.Threading.AsyncFlowControl> </xref:System.Threading.AsyncFlowControl.Undo%2A>       Ta metoda jest chroniony za pomocą <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>dla <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>uprawnień.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> Składnik pełni zaufany można wywołać tej metody, aby pominąć przepływ <xref:System.Security.SecurityContext>informacje podczas wywołania asynchronicznego.</xref:System.Security.SecurityContext> Gdy strumień jest pominięty, <xref:System.Security.SecurityContext.Capture%2A>Metoda zwraca `null`.</xref:System.Security.SecurityContext.Capture%2A>"
  syntax:
    content: public static System.Threading.AsyncFlowControl SuppressFlow ();
    parameters: []
    return:
      type: System.Threading.AsyncFlowControl
      description: "<xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> Struktury do przywrócenia przepływu."
  overload: System.Security.SecurityContext.SuppressFlow*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity
  id: SuppressFlowWindowsIdentity
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: SuppressFlowWindowsIdentity()
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity()
  fullName: System.Security.SecurityContext.SuppressFlowWindowsIdentity()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Pomija przepływ część tożsamości systemu Windows bieżący kontekst zabezpieczeń między wątkami asynchronicznego."
  remarks: "Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.  \n  \n Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.  \n  \n> [!NOTE]\n>  The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions. Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled=\"true\"/>`). Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed. For more information about flowing unmanaged impersonation across asynchronous points, see [\\<alwaysFlowImpersonationPolicy> Element](../Topic/%3CalwaysFlowImpersonationPolicy%3E%20Element.md)."
  syntax:
    content: public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();
    parameters: []
    return:
      type: System.Threading.AsyncFlowControl
      description: "Struktura do przywrócenia przepływu."
  overload: System.Security.SecurityContext.SuppressFlowWindowsIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityContext.Capture
  parent: System.Security.SecurityContext
  isExternal: false
  name: Capture()
  nameWithType: SecurityContext.Capture()
  fullName: System.Security.SecurityContext.Capture()
- uid: System.Security.SecurityContext
  parent: System.Security
  isExternal: false
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Security.SecurityContext
- uid: System.Security.SecurityContext.CreateCopy
  parent: System.Security.SecurityContext
  isExternal: false
  name: CreateCopy()
  nameWithType: SecurityContext.CreateCopy()
  fullName: System.Security.SecurityContext.CreateCopy()
- uid: System.Security.SecurityContext.Dispose
  parent: System.Security.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Security.SecurityContext.Dispose()
- uid: System.Security.SecurityContext.IsFlowSuppressed
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsFlowSuppressed()
  nameWithType: SecurityContext.IsFlowSuppressed()
  fullName: System.Security.SecurityContext.IsFlowSuppressed()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsWindowsIdentityFlowSuppressed()
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed()
  fullName: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed()
- uid: System.Security.SecurityContext.RestoreFlow
  parent: System.Security.SecurityContext
  isExternal: false
  name: RestoreFlow()
  nameWithType: SecurityContext.RestoreFlow()
  fullName: System.Security.SecurityContext.RestoreFlow()
- uid: System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  parent: System.Security.SecurityContext
  isExternal: false
  name: Run(SecurityContext,ContextCallback,Object)
  nameWithType: SecurityContext.Run(SecurityContext,ContextCallback,Object)
  fullName: System.Security.SecurityContext.Run(SecurityContext,ContextCallback,Object)
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: true
  name: ContextCallback
  nameWithType: ContextCallback
  fullName: System.Threading.ContextCallback
- uid: System.Security.SecurityContext.SuppressFlow
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlow()
  nameWithType: SecurityContext.SuppressFlow()
  fullName: System.Security.SecurityContext.SuppressFlow()
- uid: System.Threading.AsyncFlowControl
  parent: System.Threading
  isExternal: false
  name: AsyncFlowControl
  nameWithType: AsyncFlowControl
  fullName: System.Threading.AsyncFlowControl
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlowWindowsIdentity()
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity()
  fullName: System.Security.SecurityContext.SuppressFlowWindowsIdentity()
- uid: System.Security.SecurityContext.Capture*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Capture
  nameWithType: SecurityContext.Capture
- uid: System.Security.SecurityContext.CreateCopy*
  parent: System.Security.SecurityContext
  isExternal: false
  name: CreateCopy
  nameWithType: SecurityContext.CreateCopy
- uid: System.Security.SecurityContext.Dispose*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
- uid: System.Security.SecurityContext.IsFlowSuppressed*
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsFlowSuppressed
  nameWithType: SecurityContext.IsFlowSuppressed
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed*
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsWindowsIdentityFlowSuppressed
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed
- uid: System.Security.SecurityContext.RestoreFlow*
  parent: System.Security.SecurityContext
  isExternal: false
  name: RestoreFlow
  nameWithType: SecurityContext.RestoreFlow
- uid: System.Security.SecurityContext.Run*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Run
  nameWithType: SecurityContext.Run
- uid: System.Security.SecurityContext.SuppressFlow*
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlow
  nameWithType: SecurityContext.SuppressFlow
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity*
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlowWindowsIdentity
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity
