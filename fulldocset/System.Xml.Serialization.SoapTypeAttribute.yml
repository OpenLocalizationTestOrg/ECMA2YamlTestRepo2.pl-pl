### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapTypeAttribute
  id: SoapTypeAttribute
  children:
  - System.Xml.Serialization.SoapTypeAttribute.#ctor
  - System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)
  - System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  - System.Xml.Serialization.SoapTypeAttribute.Namespace
  - System.Xml.Serialization.SoapTypeAttribute.TypeName
  langs:
  - csharp
  name: SoapTypeAttribute
  nameWithType: SoapTypeAttribute
  fullName: System.Xml.Serialization.SoapTypeAttribute
  type: Class
  summary: "Określa schemat generowane przez <xref:System.Xml.Serialization.XmlSerializer>gdy wystąpienie klasy jest zserializowane jako SOAP zakodowane XML.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Klasa SoapTypeAttribute należy do rodziny atrybutów, która kontroluje sposób <xref:System.Xml.Serialization.XmlSerializer>serializuje i deserializuje obiekt jako zakodowanego protokołu SOAP XML.</xref:System.Xml.Serialization.XmlSerializer> Wynikowy kod XML jest zgodna z sekcji 5 dokumentu konsorcjum World Wide Web (www.w3.org), &quot;Simple Object Access Protocol (SOAP) 1.1&quot;. Pełną listę atrybutów podobne, zobacz [atrybuty że formant zakodowane SOAP serializacji](~/add/includes/ajax-current-ext-md.md).       Można zserializować obiektu jako zakodowanego protokołu SOAP wiadomości, utworzenia <xref:System.Xml.Serialization.XmlSerializer>przy użyciu <xref:System.Xml.Serialization.XmlTypeMapping>utworzone za pomocą <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>metody <xref:System.Xml.Serialization.SoapReflectionImporter>klasy.</xref:System.Xml.Serialization.SoapReflectionImporter> </xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> </xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>       SoapTypeAttribute można zastosować tylko do deklaracji klasy.       <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A>Właściwość określa, czy wynikowy typ elementu XML znajduje się w dokument schematu XML (XSD) dla wygenerowanego strumień XML.</xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> Aby wyświetlić schemat, należy skompilować klasy do pliku DLL. Przekaż plik wynikowy jako argument do [narzędzie definicji schematu XML (Xsd.exe)](~/add/includes/ajax-current-ext-md.md). Narzędzie generuje schematu XML dla tego strumienia XML generowane, gdy klasa jest serializowany przez wystąpienie <xref:System.Xml.Serialization.XmlSerializer>klasy.</xref:System.Xml.Serialization.XmlSerializer>       Ustawienie inną przestrzeń nazw powoduje Xsd.exe napisać plik schematu różnych (XSD) dla tego strumienia XML generowane, gdy klasa jest serializowany."
  example:
  - "The following example serializes a class named `Group`. The SoapTypeAttribute is applied to the class, with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The SoapTypeAttribute is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.serializati_5_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_5_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.serializati_5_1.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)]

      public class SoapTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: SoapTypeAttribute()
  nameWithType: SoapTypeAttribute.SoapTypeAttribute()
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> klasy."
  remarks: "Utwórz <xref:System.Xml.Serialization.SoapTypeAttribute>podczas zastępowania serializacji typu.</xref:System.Xml.Serialization.SoapTypeAttribute> Przypisz obiekt do <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>właściwości <xref:System.Xml.Serialization.SoapAttributes>i dodać <xref:System.Xml.Serialization.SoapAttributes>do <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> Zobacz <xref:System.Xml.Serialization.SoapAttributeOverrides>Przegląd klasy, aby uzyskać więcej informacji o zastępowaniu serializacji SOAP.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_8_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_8_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_8_1.cpp)]"
  syntax:
    content: public SoapTypeAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: SoapTypeAttribute(String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> , określa nazwę typu XML."
  remarks: "Utwórz <xref:System.Xml.Serialization.SoapTypeAttribute>podczas zastępowania serializacji typu.</xref:System.Xml.Serialization.SoapTypeAttribute> Przypisz obiekt do <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>właściwości <xref:System.Xml.Serialization.SoapAttributes>i dodać <xref:System.Xml.Serialization.SoapAttributes>do <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> Zobacz <xref:System.Xml.Serialization.SoapAttributeOverrides>Przegląd klasy, aby uzyskać więcej informacji o zastępowaniu serializacji SOAP.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_11_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_11_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_11_1.cpp)]"
  syntax:
    content: public SoapTypeAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Wpisz nazwę pliku XML, który <xref:System.Xml.Serialization.XmlSerializer>generuje, gdy serializuje wystąpienie klasy (i rozpoznaje, kiedy go deserializuje wystąpienia klasy).</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: SoapTypeAttribute(String,String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String,String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String,String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> , określa nazwę i przestrzeń nazw XML typu."
  remarks: "Utwórz <xref:System.Xml.Serialization.SoapTypeAttribute>podczas zastępowania serializacji typu.</xref:System.Xml.Serialization.SoapTypeAttribute> Przypisz obiekt do <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>właściwości <xref:System.Xml.Serialization.SoapAttributes>i dodać <xref:System.Xml.Serialization.SoapAttributes>do <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> Zobacz <xref:System.Xml.Serialization.SoapAttributeOverrides>Przegląd klasy, aby uzyskać więcej informacji na zastępowanie serializacji SOAP.</xref:System.Xml.Serialization.SoapAttributeOverrides>       Jeśli ustawisz <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>wartość dla więcej niż jeden typ (to znaczy, jeśli zastosuj atrybut do więcej niż jedną klasę z innym <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>wartość dla każdego z nich), [narzędzie definicji schematu XML (Xsd.exe)](~/add/includes/ajax-current-ext-md.md) generuje osobny plik schematu (XSD) dla każdego typu.</xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> </xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> Jest to spowodowane ustawienie inną przestrzeń nazw dla każdego typu renderuje każdego typu różne od innych użytkowników, która umożliwia niezbędnych dla każdego typu należy wpisać jako niezależne jednostki."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/b7d7a27e-07c4-4ae2-8b05-_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/b7d7a27e-07c4-4ae2-8b05-_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/b7d7a27e-07c4-4ae2-8b05-_1.cpp)]"
  syntax:
    content: public SoapTypeAttribute (string typeName, string ns);
    parameters:
    - id: typeName
      type: System.String
      description: "Wpisz nazwę pliku XML, który <xref:System.Xml.Serialization.XmlSerializer>generuje, gdy serializuje wystąpienie klasy (i rozpoznaje, kiedy go deserializuje wystąpienia klasy).</xref:System.Xml.Serialization.XmlSerializer>"
    - id: ns
      type: System.String
      description: "Typ przestrzeni nazw XML."
  overload: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  id: IncludeInSchema
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: IncludeInSchema
  nameWithType: SoapTypeAttribute.IncludeInSchema
  fullName: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać typ w dokumentach schematów XML kodowany w formacie protokołu SOAP."
  remarks: "Zastosuj <xref:System.Xml.Serialization.SoapTypeAttribute>do deklaracji klasy, aby określić, czy mają być typ dokument schematu XML.</xref:System.Xml.Serialization.SoapTypeAttribute> Aby wyświetlić wyniki ustawienie właściwości <xref:System.Xml.Serialization.SoapTypeAttribute>klasy, skompilować aplikację jako plik wykonywalny lub biblioteka DLL, a wynikowy plik do przekazania [narzędzie definicji schematu XML (Xsd.exe)](~/add/includes/ajax-current-ext-md.md).</xref:System.Xml.Serialization.SoapTypeAttribute> Narzędzie zapisuje schematem, w tym definicja typu w strumieniu XML generowane, gdy klasa jest serializowany."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_18_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_18_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_18_1.cpp)]"
  syntax:
    content: public bool IncludeInSchema { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Typ do dokumentów kodowany w formacie protokołu SOAP schematu XML; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: SoapTypeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapTypeAttribute.Namespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Pobiera lub ustawia obszar nazw typu XML."
  remarks: "Jeśli ustawisz wartość Namespace więcej niż jeden typ (jeśli zastosuj atrybut do więcej niż jedną klasę, podając inną wartość Namespace dla każdej z nich), [narzędzie definicji schematu XML (Xsd.exe)](~/add/includes/ajax-current-ext-md.md) generuje osobny plik schematu (XSD) dla każdego typu. Jest to spowodowane ustawienie inną przestrzeń nazw dla każdego typu renderuje każdego typu różne od innych użytkowników, która umożliwia niezbędnych dla każdego typu należy wpisać jako niezależne jednostki."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_2_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_2_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_2_1.cpp)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "Przestrzeń nazw, typu XML. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Xml.Serialization.SoapTypeAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.TypeName
  id: TypeName
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: TypeName
  nameWithType: SoapTypeAttribute.TypeName
  fullName: System.Xml.Serialization.SoapTypeAttribute.TypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Pobiera lub ustawia nazwę typu XML."
  remarks: "Zastosuj <xref:System.Xml.Serialization.SoapTypeAttribute>do klasy, aby określić przestrzeni nazw typu XML, nazwa typu XML i należeć do typu dokumentu schematu XML.</xref:System.Xml.Serialization.SoapTypeAttribute> Aby wyświetlić wyniki ustawienie <xref:System.Xml.Serialization.SoapTypeAttribute>Właściwości obiektu skompilować aplikację jako plik wykonywalny lub biblioteka DLL i przekazać plik wynikowy do [narzędzie definicji schematu XML (Xsd.exe)](~/add/includes/ajax-current-ext-md.md).</xref:System.Xml.Serialization.SoapTypeAttribute> Narzędzie zapisuje schematem, w tym definicji typu."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the TypeName set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the TypeName to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_14_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_14_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_14_1.cpp)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "Nazwa typu XML. Wartość domyślna to nazwa klasy."
  overload: System.Xml.Serialization.SoapTypeAttribute.TypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute()
  nameWithType: SoapTypeAttribute.SoapTypeAttribute()
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute()
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute(String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute(String,String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String,String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String,String)
- uid: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: IncludeInSchema
  nameWithType: SoapTypeAttribute.IncludeInSchema
  fullName: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.SoapTypeAttribute.Namespace
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapTypeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapTypeAttribute.Namespace
- uid: System.Xml.Serialization.SoapTypeAttribute.TypeName
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: TypeName
  nameWithType: SoapTypeAttribute.TypeName
  fullName: System.Xml.Serialization.SoapTypeAttribute.TypeName
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute
  nameWithType: SoapTypeAttribute.SoapTypeAttribute
- uid: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: IncludeInSchema
  nameWithType: SoapTypeAttribute.IncludeInSchema
- uid: System.Xml.Serialization.SoapTypeAttribute.Namespace*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapTypeAttribute.Namespace
- uid: System.Xml.Serialization.SoapTypeAttribute.TypeName*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: TypeName
  nameWithType: SoapTypeAttribute.TypeName
