### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.XmlWriterTraceListener
  id: XmlWriterTraceListener
  children:
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.XmlWriterTraceListener.Close
  - System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  - System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: XmlWriterTraceListener
  nameWithType: XmlWriterTraceListener
  fullName: System.Diagnostics.XmlWriterTraceListener
  type: Class
  summary: "Określa, że śledzenie lub dane wyjściowe debugowania jako dane zakodowane w formacie XML <xref:System.IO.TextWriter>lub <xref:System.IO.Stream>, takich jak <xref href=&quot;System.IO.FileStream&quot;> </xref>.</xref:System.IO.Stream> </xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]\n>  You must have unmanaged code permission to create an instance of the XmlWriterTraceListener class.  \n  \n The XmlWriterTraceListener class converts tracing and debugging information into an XML-encoded text stream. The description of the XML output is shown in the tables that follow. You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.  \n  \n You can enable or disable an XmlWriterTraceListener through the application configuration file and then use the configured XmlWriterTraceListener in your application. Alternately, you can create an XmlWriterTraceListener in your code.  \n  \n To configure an XmlWriterTraceListener, edit the configuration file that corresponds to the name of your application. In this file, you can add or remove a listener, set the properties for a listener, or remove listeners. The configuration file should be formatted like the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"xmlListener\"   \n          type=\"System.Diagnostics.XmlWriterTraceListener\"   \n          initializeData=\"xmlOutput.xml\"   \n          traceOutputOptions=\"ProcessId, DateTime\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The XmlWriterTraceListener class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.  The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.  If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.  \n  \n> [!NOTE]\n>  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \n  \n> [!NOTE]\n>  Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.  The listener methods are not intended to be called directly from application code. The XmlWriterTraceListener listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class. The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.  \n  \n The following table describes the elements and attributes of the XML output.  \n  \n|Element|Attributes|Output|Notes|  \n|-------------|----------------|------------|-----------|  \n|`CallStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|Special characters such as > or < are replaced with escape sequences. See the escaped character translation table that follows.|  \n|`Computer`|None|Always present.|The value of the <xref:System.Environment.MachineName%2A> property.|  \n|`Correlation`|`ActivityID`|Always present|If not specified, the default is an empty GUID.|  \n||`RelatedActivityID`|Depends on the presence of the `relatedActivityId` parameter in the Trace method call.|The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.|  \n|`DataItem`|None|Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.|This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.<br /><br /> The data output uses the `ToString` method of the passed-in data objects.|  \n|`EventID`|None|Always present.|Parameter input (`id`).|  \n|`Execution`|`ProcessName`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n||`ProcessID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>. On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.|  \n||`ThreadID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Level`|None|Always present.|Parameter input (the numeric value of `eventType`). Parameter values greater than 255 are output as 255.|  \n|`LogicalOperationStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.|  \n|`Message`|None|Depends on the presence of a message in the Trace method call.|This element is a formatted message if formatting arguments are provided.|  \n|`Source`|`Name`|Always present.|Parameter input.|  \n|`SubType`|`Name`|Always present.|Parameter input.|  \n|`TimeCreated`|`SystemTime`|Always present.|If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.|  \n|`TimeStamp`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Type`|None|Always present.|Always the value 3.|  \n  \n The following table shows the characters that are escaped in the XML output. Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object. If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.  \n  \n|Escaped character|Value|  \n|-----------------------|-----------|  \n|&|&amp;|  \n|\\<|&lt;|  \n|>|&gt;|  \n|\"|&quot;|  \n|\\|&apos;|  \n|0xD|&\\#xD;|  \n|0xA|&\\#xA;|"
  example:
  - "The following code example shows the use of the XmlWriterTraceListener class to write both escaped and non-escaped data to file logs.  \n  \n [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/add/codesnippet/visualbasic/t-system.diagnostics.xml_1.vb)]\n [!code-cs[System.Diagnostics.XmlWriterTraceListener#1](~/add/codesnippet/csharp/t-system.diagnostics.xml_1.cs)]"
  syntax:
    content: 'public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  - System.Diagnostics.TextWriterTraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Writer
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(Stream)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> przy użyciu określonego obiektu stream jako adresat debugowanie i śledzenie danych wyjściowych."
  remarks: "<xref:System.Diagnostics.TraceListener.Name%2A>Właściwość jest inicjowana na ciąg pusty (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>reprezentujący strumienia zapisuje nasłuchującego śledzenia.</xref:System.IO.Stream>"
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(TextWriter)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> klasy przy użyciu określonego składnika zapisywania jako adresat debugowanie i śledzenie danych wyjściowych."
  remarks: "<xref:System.Diagnostics.TraceListener.Name%2A>Właściwość jest inicjowana na ciąg pusty (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>odbierająca dane wyjściowe z obiektu nasłuchującego śledzenia.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> przy użyciu określonego pliku jako adresat debugowanie i śledzenie danych wyjściowych."
  remarks: "Ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.IO.StreamWriter>klasy dla określonego pliku w określonej ścieżce, przy użyciu <xref:System.Text.Encoding.UTF8%2A>kodowania.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> Jeśli plik istnieje, jest dołączany do. Jeśli plik nie istnieje, jest tworzony nowy plik.      > [!NOTE] > Aby zmniejszyć prawdopodobieństwo wyjątek, zostanie zastąpiony dowolny znak, który może unieważnić dane wyjściowe &quot;?&quot; znaków.       <xref:System.Diagnostics.TraceListener.Name%2A>Właściwość jest inicjowana na ciąg pusty (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do zapisu."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(Stream,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> klasy o określonej nazwie przy użyciu określonego obiektu stream jako adresat debugowanie i śledzenie danych wyjściowych."
  remarks: "Ten konstruktor inicjuje <xref:System.Diagnostics.TraceListener.Name%2A>właściwości `name` wartość parametru lub ciąg pusty (&quot;&quot;) czy `name` jest parametr `null`.</xref:System.Diagnostics.TraceListener.Name%2A> Nazwa może być używana jako indeks w <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>kolekcji programowo zmienić właściwości dla odbiornika.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> Na przykład poniższy kod ustawia <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>Właściwości dla wystąpienia <xref:System.Diagnostics.XmlWriterTraceListener>którego <xref:System.Diagnostics.TraceListener.Name%2A>właściwość jest &quot;xmlListener&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =        TraceOptions.Timestamp   ```"
  syntax:
    content: public XmlWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>reprezentujący strumienia zapisuje nasłuchującego śledzenia.</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "Nazwa nowego wystąpienia."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(TextWriter,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> klasy o określonej nazwie przy użyciu określonego składnika zapisywania jako adresat debugowanie i śledzenie danych wyjściowych."
  remarks: "Ten konstruktor inicjuje <xref:System.Diagnostics.TraceListener.Name%2A>właściwości `name` wartość parametru lub ciąg pusty (&quot;&quot;) czy `name` jest parametr `null`.</xref:System.Diagnostics.TraceListener.Name%2A> Nazwa może być używana jako indeks w <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>kolekcji programowo zmienić właściwości dla odbiornika.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> Na przykład poniższy kod ustawia <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>Właściwości dla wystąpienia <xref:System.Diagnostics.XmlWriterTraceListener>którego <xref:System.Diagnostics.TraceListener.Name%2A>właściwość jest &quot;xmlListener&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =        TraceOptions.Timestamp.   ```"
  syntax:
    content: public XmlWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>odbierająca dane wyjściowe z obiektu nasłuchującego śledzenia.</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "Nazwa nowego wystąpienia."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(String,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> klasy o określonej nazwie przy użyciu określonego pliku jako adresat debugowanie i śledzenie danych wyjściowych."
  remarks: "Ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.IO.StreamWriter>klasy dla określonego pliku w określonej ścieżce, przy użyciu <xref:System.Text.Encoding.UTF8%2A>kodowania.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> Jeśli plik istnieje, jest dołączany do. Jeśli plik nie istnieje, jest tworzony nowy plik.      > [!NOTE] > Aby zmniejszyć prawdopodobieństwo wyjątek, zostanie zastąpiony dowolny znak, który może unieważnić dane wyjściowe &quot;?&quot; znaków.       <xref:System.Diagnostics.TraceListener.Name%2A>Właściwość jest ustawiona na `name` wartość parametru lub ciąg pusty (&quot;&quot;) czy `name` jest parametr `null`.</xref:System.Diagnostics.TraceListener.Name%2A> Nazwa może być używana jako indeks w <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>kolekcji programowo zmienić właściwości dla odbiornika.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> Na przykład poniższy kod ustawia <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>Właściwości dla wystąpienia <xref:System.Diagnostics.XmlWriterTraceListener>którego <xref:System.Diagnostics.TraceListener.Name%2A>właściwość jest &quot;xmlListener&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =       TraceOptions.Timestamp.   ```"
  syntax:
    content: public XmlWriterTraceListener (string filename, string name);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do zapisu."
    - id: name
      type: System.String
      description: "Nazwa nowego wystąpienia."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: XmlWriterTraceListener.Close()
  fullName: System.Diagnostics.XmlWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zamyka <xref:System.Diagnostics.TextWriterTraceListener.Writer*>dla tego odbiornika, tak aby nie będzie już otrzymywać śledzenia lub dane wyjściowe debugowania.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.XmlWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: XmlWriterTraceListener.Fail(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje śledzenia informacji o tym komunikat o błędzie i szczegółowy komunikat o błędzie do pliku lub strumienia."
  remarks: "Domyślnym zachowaniem jest wyświetlany komunikat i komunikatem szczegółowym w oknie komunikatu, gdy aplikacja działa w trybie interfejsu użytkownika, a w <xref:System.Diagnostics.TraceListener>wystąpień w <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>kolekcji.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceListener> Domyślnie kolekcja zawiera wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> To zachowanie można dostosować, dodając lub usuwając <xref:System.Diagnostics.TraceListener>z kolekcji.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "Komunikat o błędzie do zapisania."
    - id: detailMessage
      type: System.String
      description: "Szczegółowy komunikat o błędzie do dołączenia do komunikatu o błędzie."
  overload: System.Diagnostics.XmlWriterTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje informacje o śledzeniu, obiekt danych i informacji o zdarzeniu do pliku lub strumienia."
  remarks: "`eventCache`, `source`, `eventType`, I `id` w nagłówku i stopce śledzenia są używane parametry. `id` Parametru jest konwertowany na liczbę całkowitą bez znaku, zanim tak ujemny `id` wartości są zapisywane jako dużych dodatnią liczbą całkowitą. `data` Parametru są zapisywane jako `DataItem` w węźle `TraceData` elementu. `ToString` Metody obiektu danych służy do konwertowania obiektu na ciąg.      > [!IMPORTANT] > Ta metoda nie jest przeznaczona do wywoływania bezpośrednio przez kod aplikacji.  Jest ona wywoływana przez metody <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, i <xref:System.Diagnostics.TraceSource>klasy do zapisania danych śledzenia.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> zawierający bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: data
      type: System.Object
      description: "Obiekt danych do wysyłania."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje informacje o śledzeniu, obiekty danych i informacji o zdarzeniu do pliku lub strumienia."
  remarks: "`eventCache`, `source`, `eventType`, I `id` w nagłówku i stopce śledzenia są używane parametry. `id` Parametru jest konwertowany na liczbę całkowitą bez znaku, zanim tak ujemny `id` wartości są zapisywane jako dużych dodatnią liczbą całkowitą. Obiekty w `data` tablicy parametrów są zapisywane jako `DataItem` węzłów w `TraceData` elementu. `ToString` Metoda poszczególnych obiektów danych jest używana do obiektu jest skonwertowana do ciągu.      > [!IMPORTANT] > Ta metoda nie jest przeznaczona do wywoływania bezpośrednio przez kod aplikacji.  Jest ona wywoływana przez metody <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, i <xref:System.Diagnostics.TraceSource>klasy do zapisania danych śledzenia.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> zawierający bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: data
      type: System.Object[]
      description: "Tablica obiektów danych do wysyłania."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje śledzenia informacji, wiadomości i informacji o zdarzeniu do pliku lub strumienia."
  remarks: "`eventCache`, `source`, `eventType`, I `id` w nagłówku i stopce śledzenia są używane parametry. `id` Parametru jest konwertowany na liczbę całkowitą bez znaku, zanim tak ujemny `id` wartości są zapisywane jako dużych dodatnią liczbą całkowitą. `message` Parametru są zapisywane jako `Message` elementu.      > [!IMPORTANT] > Ta metoda nie jest przeznaczona do wywoływania bezpośrednio przez kod aplikacji.  Jest ona wywoływana przez metody <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, i <xref:System.Diagnostics.TraceSource>klasy do zapisania danych śledzenia.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> zawierający bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: message
      type: System.String
      description: "Komunikat do zapisania."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje informacje o śledzeniu, sformatowany komunikat i informacji o zdarzeniu do pliku lub strumienia."
  remarks: "The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The [String.Format(String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> zawierający bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: format
      type: System.String
      description: "Ciąg formatu, który zawiera zero lub więcej elementów formatu, które odpowiadają obiektów w `args` tablicy."
    - id: args
      type: System.Object[]
      description: "Tablica obiekt zawierający zero lub więcej obiektów do formatowania."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje śledzenia informacji w tym tożsamość powiązane informacje działania, wiadomości i zdarzeń do pliku lub strumienia."
  remarks: "Metoda TraceTransfer jest używana dla korelacji powiązanych śladów. `eventCache`, `source`, `id`, I `relatedActivityId` w nagłówku i stopce śledzenia są używane parametry. `id` Parametru jest konwertowany na liczbę całkowitą bez znaku, zanim tak ujemny `id` wartości są zapisywane jako dużych dodatnią liczbą całkowitą. `message` Parametru są zapisywane jako `Message` elementu. <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName>Metoda jest wywoływana, aby przekonwertować `relatedActivityId`wartość &quot;B&quot; sformatowany ciąg, który jest wyświetlany w nagłówku.</xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> `SubTypeName` Typ zdarzenia śladu jako <xref:System.Diagnostics.TraceEventType>.</xref:System.Diagnostics.TraceEventType> identyfikuje element w stopce      > [!IMPORTANT] > TraceTransfer — metoda nie może być wywoływany przez kod aplikacji.  Jest on przeznaczony do wywołania przez <xref:System.Diagnostics.TraceSource>obiekt do wysyłania informacji o śledzeniu dla jego <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>— Metoda.</xref:System.Diagnostics.TraceSource.TraceTransfer%2A> </xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> zawierający bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: message
      type: System.String
      description: "Komunikat śledzenia do zapisania."
    - id: relatedActivityId
      type: System.Guid
      description: "A <xref:System.Guid>Struktura, która identyfikuje powiązane działania.</xref:System.Guid>"
  overload: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: XmlWriterTraceListener.Write(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje komunikat dosłownego wyrażenia bez żadnych informacji dodatkowy kontekst do pliku lub strumienia."
  remarks: "Użyj <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>metodę w celu uwzględnienia informacji kontekstu w danych wyjściowych dziennika.</xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Komunikat do zapisania."
  overload: System.Diagnostics.XmlWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: XmlWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Zapisuje komunikat dosłownego wyrażenia bez żadnych informacji dodatkowy kontekst następuje bieżącego terminator wiersza do pliku lub strumienia."
  remarks: "Użyj <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>metodę w celu uwzględnienia informacji kontekstu w danych wyjściowych dziennika.</xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Komunikat do zapisania."
  overload: System.Diagnostics.XmlWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: System.Diagnostics.TextWriterTraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(Stream)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(TextWriter)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(Stream,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(TextWriter,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(String,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String,String)
- uid: System.Diagnostics.XmlWriterTraceListener.Close
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: XmlWriterTraceListener.Close()
  fullName: System.Diagnostics.XmlWriterTraceListener.Close()
- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: XmlWriterTraceListener.Fail(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Fail(String,String)
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: XmlWriterTraceListener.Write(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Write(String)
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: XmlWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener
- uid: System.Diagnostics.XmlWriterTraceListener.Close*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: XmlWriterTraceListener.Close
- uid: System.Diagnostics.XmlWriterTraceListener.Fail*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Fail
  nameWithType: XmlWriterTraceListener.Fail
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData
  nameWithType: XmlWriterTraceListener.TraceData
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: XmlWriterTraceListener.TraceEvent
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: XmlWriterTraceListener.TraceTransfer
- uid: System.Diagnostics.XmlWriterTraceListener.Write*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: XmlWriterTraceListener.Write
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: XmlWriterTraceListener.WriteLine
