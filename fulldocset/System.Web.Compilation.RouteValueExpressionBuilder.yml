### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.RouteValueExpressionBuilder
  id: RouteValueExpressionBuilder
  children:
  - System.Web.Compilation.RouteValueExpressionBuilder.#ctor
  - System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue(System.Web.UI.Page,System.String,System.Type,System.String)
  - System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: RouteValueExpressionBuilder
  nameWithType: RouteValueExpressionBuilder
  fullName: System.Web.Compilation.RouteValueExpressionBuilder
  type: Class
  summary: "Pobiera wartość, która odpowiada określony parametr adresu URL w routerach strony."
  remarks: "Klasa RouteValueExpressionBuilder sprawia, że można użyć znaczników ustawioną wartość jednego z parametrów adresu URL w routerach strony właściwości kontrolki serwera."
  example:
  - "The following example shows how to use markup to display the value of the URL parameter `searchterm`. The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"  \n    text=\"<%$ RouteValue:searchterm %>\">  \n</asp:Label>  \n```  \n  \n If the page is requested with the URL `http://www.contoso.com/search/Bicycles`, the <xref:System.Web.UI.WebControls.Label> control displays \"Bicycles\"."
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteValueExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Routes")]

      public class RouteValueExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers:
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  platform:
  - net462
- uid: System.Web.Compilation.RouteValueExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  langs:
  - csharp
  name: RouteValueExpressionBuilder()
  nameWithType: RouteValueExpressionBuilder.RouteValueExpressionBuilder()
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.RouteValueExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Compilation.RouteValueExpressionBuilder&quot;> </xref> klasy."
  syntax:
    content: public RouteValueExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.RouteValueExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteValueExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Pobiera wartość, która odpowiada kluczowi określonej trasy."
  remarks: "ASP.NET wywołuje tę metodę, gdy wyrażenie w postaci `<%$ RouteValue:urlparameter %>` napotkano na stronie nie kompilacji. Ta metoda zastępuje <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metody przez wywołanie metody <xref:System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue%2A>metody.</xref:System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue%2A> </xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Pobiera <xref:System.Web.UI.Page>obiekt z `context` parametr który pobiera wyrażenie typu formantu i nazwy właściwości ze `entry` parametru.</xref:System.Web.UI.Page>"
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "Formant, który jest powiązany wyrażenie."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Właściwość, która jest powiązana wyrażenie."
    - id: parsedData
      type: System.Object
      description: "(Ten parametr nie jest używany w tej implementacji)."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Właściwości formantu lub strony."
    return:
      type: System.Object
      description: "Wartość, która odpowiada parametr adresu URL, który jest określony dla bieżącej strony. Metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <code> target </code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jeśli nie pochodzi od <xref href=&quot;System.Web.UI.Control&quot;> </xref>."
  overload: System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteValueExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zwraca wyrażenie kodu, które służy do wykonywania przypisanie właściwości w klasie wygenerowanego strony."
  remarks: "Ta metoda jest wywoływana po utworzeniu modelu CodeDOM dla strona lub kontrolka. <xref:System.CodeDom.CodeExpression>Obiekt, który jest zwracany reprezentuje wyrażenie kodu do dodania do przypisania właściwości w klasy wygenerowanego strony.</xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Właściwość, która jest powiązana wyrażenie."
    - id: parsedData
      type: System.Object
      description: "Obiekt, który reprezentuje analizy danych, jak zwracany przez <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Właściwości formantu lub strony."
    return:
      type: System.CodeDom.CodeExpression
      description: "Wyrażenie."
  overload: System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue(System.Web.UI.Page,System.String,System.Type,System.String)
  id: GetRouteValue(System.Web.UI.Page,System.String,System.Type,System.String)
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  langs:
  - csharp
  name: GetRouteValue(Page,String,Type,String)
  nameWithType: RouteValueExpressionBuilder.GetRouteValue(Page,String,Type,String)
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue(Page,String,Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Pobiera wartość, która odpowiada określony parametr adresu URL."
  remarks: "Ta metoda pobiera odpowiednie wartości dla określonego `key` wartość przy użyciu <xref:System.Web.UI.Page.RouteData%2A>Właściwość `page`.</xref:System.Web.UI.Page.RouteData%2A> Następnie używa `controlType` i `propertyName` wartości można znaleźć konwertera odpowiedniego typu, aby można było przekonwertować pobrana wartość poprawnego typu."
  syntax:
    content: public static object GetRouteValue (System.Web.UI.Page page, string key, Type controlType, string propertyName);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "Bieżąca strona."
    - id: key
      type: System.String
      description: "Parametr adresu URL."
    - id: controlType
      type: System.Type
      description: "Typ formantu, który jest powiązany wyrażenie."
    - id: propertyName
      type: System.String
      description: "Nazwa właściwości, która jest ustawiany przez wyrażenie."
    return:
      type: System.Object
      description: "Wartość, która odpowiada określony parametr adresu URL dla bieżącej strony. If <code>page</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, if the <xref:System.Web.UI.Page.RouteData*> property of <code>page</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, or if <code>key</code> is empty or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.Page.RouteData*>"
  overload: System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: RouteValueExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Pobiera wartość wskazującą, czy można oszacować wyrażenia na stronie, która nie jest skompilowany."
  remarks: "Właściwość SupportsEvaluate wskazuje, czy <xref:System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression%2A>Metoda została zaimplementowana w klasie, aby zwrócić wartość wyrażenia strona, która nie jest skompilowany.</xref:System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.RouteValueExpressionBuilder>Klasy można obliczyć wyrażenia w strona, która nie jest skompilowany.</xref:System.Web.Compilation.RouteValueExpressionBuilder> W związku z tym zawsze zwraca `true`."
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.Web.Compilation.RouteValueExpressionBuilder.#ctor
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: RouteValueExpressionBuilder()
  nameWithType: RouteValueExpressionBuilder.RouteValueExpressionBuilder()
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.RouteValueExpressionBuilder()
- uid: System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteValueExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteValueExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue(System.Web.UI.Page,System.String,System.Type,System.String)
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: GetRouteValue(Page,String,Type,String)
  nameWithType: RouteValueExpressionBuilder.GetRouteValue(Page,String,Type,String)
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue(Page,String,Type,String)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteValueExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.RouteValueExpressionBuilder.#ctor*
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: RouteValueExpressionBuilder
  nameWithType: RouteValueExpressionBuilder.RouteValueExpressionBuilder
- uid: System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: RouteValueExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: RouteValueExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue*
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: GetRouteValue
  nameWithType: RouteValueExpressionBuilder.GetRouteValue
- uid: System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.RouteValueExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteValueExpressionBuilder.SupportsEvaluate
