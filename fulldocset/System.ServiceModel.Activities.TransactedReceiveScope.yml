### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.TransactedReceiveScope
  id: TransactedReceiveScope
  children:
  - System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  - System.ServiceModel.Activities.TransactedReceiveScope.Body
  - System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  - System.ServiceModel.Activities.TransactedReceiveScope.Request
  - System.ServiceModel.Activities.TransactedReceiveScope.Variables
  langs:
  - csharp
  name: TransactedReceiveScope
  nameWithType: TransactedReceiveScope
  fullName: System.ServiceModel.Activities.TransactedReceiveScope
  type: Class
  summary: "Działania, która zakresów okres istnienia transakcji, która jest inicjowane przez odebranego komunikatu. Transakcja może przekazane do przepływu pracy w komunikacie inicjujący lub można utworzyć przez Dyspozytor po odebraniu komunikatu."
  remarks: "Działania TransactedReceiveScope umożliwia sterowanie okres istnienia transakcji.      > [!WARNING] > Inicjujący działania TransactedReceiveScope (TransactedReceiveScope, który zawiera <xref:System.ServiceModel.Activities.Receive>działania <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A>ustawioną `true`), przed rozpoczęciem wykonywania działania TransactedReceiveScope środowiska uruchomieniowego tworzenia transakcji.</xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> </xref:System.ServiceModel.Activities.Receive> Ta transakcja nie jest otoczenia w warstwie działania przepływu pracy, ale jest otoczenia w niższych warstwach trwałości. Jeśli wykonanie przepływu pracy napotkał <xref:System.Activities.Statements.Persist>działania przed działania TransactedReceiveScope, środowisko wykonawcze próbuje zachować w obszarze transakcja otoczenia.</xref:System.Activities.Statements.Persist> Ten problem powoduje, że blok do czasu ukończenia transakcji. Ponieważ wykonywania przepływu pracy nie osiągnęła <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A>sekcji, nie może zakończyć transakcji.</xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> Tego zakleszczenia powoduje, że przepływ pracy przestanie odpowiadać, dopóki nie upłynie limit czasu transakcji. Jeśli upłynie limit czasu transakcji, nowo utworzone wystąpienie zostało przerwane.      > [!IMPORTANT] > Przy każdym użyciu TransactedReceiveScope, zaleca się umieścić wszystkie działania Receive w przepływie pracy w ramach działania TransactedReceiveScope.      > [!IMPORTANT] > Przy użyciu TransactedReceiveScope i nadchodzą komunikaty w niepoprawna kolejność, przepływ pracy zostanie przerwany podczas próby dostarczenia pierwszego komunikatu poza kolejnością. Należy się upewnić, że przepływ pracy jest zawsze na spójną punktu zatrzymania podczas idles przepływu pracy. Umożliwi to ponowne uruchomienie przepływu pracy od poprzedniego punktu trwałości powinien przerwanie przepływu pracy."
  example:
  - "The following example shows how to use the TransactedReceiveScope class in a <xref:System.Activities.Statements.Sequence> activity.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Body")]

      public sealed class TransactedReceiveScope : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: TransactedReceiveScope()
  nameWithType: TransactedReceiveScope.TransactedReceiveScope()
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.TransactedReceiveScope()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref> klasy."
  syntax:
    content: public TransactedReceiveScope ();
    parameters: []
  overload: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body
  id: Body
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Body
  nameWithType: TransactedReceiveScope.Body
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Body
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Pobiera lub ustawia <xref href=&quot;System.Activities.Activity&quot;> </xref> składa treści <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref> działania."
  remarks: "Transakcja otoczenia jest cały czas trwania treści."
  example:
  - "The following example shows how to set the Body property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.Activities.Activity Body { get; set; }
    return:
      type: System.Activities.Activity
      description: "Treść zakresu transakcyjne receive."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Body*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "Do dodania."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Do dodania."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request
  id: Request
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Request
  nameWithType: TransactedReceiveScope.Request
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Request
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Pobiera lub ustawia <xref href=&quot;System.ServiceModel.Activities.Receive&quot;> </xref> działania skojarzonych z tym <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref> działania."
  remarks: ''
  example:
  - "The following example shows how to set the Request property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.ServiceModel.Activities.Receive Request { get; set; }
    return:
      type: System.ServiceModel.Activities.Receive
      description: "Działanie receive skojarzeni z zakresem transakcyjne receive."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Request*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  id: Variables
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Pobiera kolekcję <xref href=&quot;System.Activities.Variable&quot;> </xref> skojarzony z tym <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to set the Variables property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "Zmienne skojarzeni z zakresem transakcyjne receive."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Variables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: TransactedReceiveScope()
  nameWithType: TransactedReceiveScope.TransactedReceiveScope()
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.TransactedReceiveScope()
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Body
  nameWithType: TransactedReceiveScope.Body
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Body
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Request
  nameWithType: TransactedReceiveScope.Request
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Request
- uid: System.ServiceModel.Activities.Receive
  parent: System.ServiceModel.Activities
  isExternal: false
  name: Receive
  nameWithType: Receive
  fullName: System.ServiceModel.Activities.Receive
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Variables
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: TransactedReceiveScope
  nameWithType: TransactedReceiveScope.TransactedReceiveScope
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Body
  nameWithType: TransactedReceiveScope.Body
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: CacheMetadata
  nameWithType: TransactedReceiveScope.CacheMetadata
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Execute
  nameWithType: TransactedReceiveScope.Execute
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Request
  nameWithType: TransactedReceiveScope.Request
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
