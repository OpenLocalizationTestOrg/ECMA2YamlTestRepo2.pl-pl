### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService
  id: ComponentSerializationService
  children:
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  langs:
  - csharp
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService
  type: Class
  summary: "Udostępnia klasę podstawową dla serializacji zestaw składników lub obiekty możliwe do serializacji do magazynu serializacji."
  remarks: "ComponentSerializationService serializuje zestaw składników lub obiekty możliwe do serializacji do magazynu serializacji. Magazyn można następnie można przeprowadzić deserializacji później. Klasa ComponentSerializationService różni się od innych systemów serializacji, że format serializacji jest nieprzezroczysta i pozwala dla częściowej serializacji obiektów. Na przykład można serializować tylko wybrane właściwości obiektu.       Ta klasa jest `abstract`. Zazwyczaj <xref:System.ComponentModel.Design.Serialization.DesignerLoader>będzie Podaj konkretną implementację tej klasy, a następnie dodaj go jako usługa na jego <xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface> </xref:System.ComponentModel.Design.Serialization.DesignerLoader> Dzięki temu obiekty do serializacji w formacie najlepiej nadaje się do nich.       Zamienia klasy ComponentSerializationService <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>interfejsu z programu .NET Framework w wersji 1.0, mimo że jego został zachowany na potrzeby zgodności z poprzednimi wersjami.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>"
  syntax:
    content: public abstract class ComponentSerializationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.Serialization.ComponentSerializationService&quot;> </xref> klasy."
  syntax:
    content: protected ComponentSerializationService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  id: CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Tworzy nowy <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>."
  remarks: "Wiele obiektów może być Zserializowany do tego samego magazynu serializacji. Po zakończeniu ze sklepem, można wywołać jej <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A>lub <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A>metody.</xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> </xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> Po zamknięciu, Magazyn serializacji może służyć do deserializacji, lub można go było zapisać do strumienia.       Magazyn serializacji mogą zostać przekazane do różnych metod serializacji do zbudowania stan serializacji dla grupy obiektów."
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();
    parameters: []
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "Nowy magazyn utworzony serializacji."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializuje dany sklepu, aby utworzyć kolekcję obiektów."
  remarks: "Ta metoda deserializuje `store` do tworzenia kolekcji obiektów w nim zawarte. Obiekty są rozszeregować w tej samej kolejności, w którym przeprowadzono serializacji."
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do deserializacji."
    return:
      type: System.Collections.ICollection
      description: "Kolekcja obiektów tworzone zgodnie ze skonfigurowanym przechowywany stan."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>nie zawiera danych w formacie, który może przetwarzać kontenera serializacji."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializuje danego sklepu i wypełnia danego <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> z rozszeregować <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> obiektów."
  remarks: "Ta metoda deserializuje `store` do tworzenia kolekcji obiektów w nim zawarte. Obiekty są rozszeregować w tej samej kolejności, w którym przeprowadzono serializacji.       Utworzone obiekty, które implementują <xref:System.ComponentModel.IComponent>są dodawane do `container`.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do deserializacji."
    - id: container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> Do której <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> obiekty zostaną dodane."
    return:
      type: System.Collections.ICollection
      description: "Kolekcja obiektów tworzone zgodnie ze skonfigurowanym przechowywany stan."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>nie zawiera danych w formacie, który może przetwarzać kontenera serializacji."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializuje dany <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> do danego kontenera."
  remarks: "Deserializuje metody DeserializeTo `store`, ale zamiast produkujących nowe obiekty, stosuje danych w magazynie do istniejącego zestawu obiektów, które są pobierane z podanego kontenera. W związku z tym wywołującego można utworzyć wcześniej obiekt jednak za stosowny. Jeśli obiekt nie ma stanu deserializacja obiektu nie ma nazwy zestawu istniejących obiektów, zostanie utworzony nowy obiekt. Jeśli ten obiekt implementuje również <xref:System.ComponentModel.IComponent>, zostanie ona dodana do `container`.</xref:System.ComponentModel.IComponent> Obiektów w kontenerze muszą mieć nazwy i typy, które odpowiada obiektów w magazynie serializacji w kolejności istniejącego obiektu do użycia."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do deserializacji."
    - id: container
      type: System.ComponentModel.IContainer
      description: "Kontener, do którego <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> obiekty zostaną dodane."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>nie zawiera danych w formacie, który może przetwarzać kontenera serializacji."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializuje dany <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> do danego kontenera, opcjonalnie sprawdzanie poprawności ponownego przetworzenia typów."
  remarks: "<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>Deserializuje metody `store`, ale zamiast produkujących nowe obiekty, stosuje danych w magazynie do istniejącego zestawu obiektów, które są pobierane z podanego kontenera.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> W związku z tym wywołującego można utworzyć wcześniej obiekt jednak za stosowny. Jeśli obiekt nie ma stanu deserializacja obiektu nie ma nazwy zestawu istniejących obiektów, zostanie utworzony nowy obiekt. Jeśli ten obiekt implementuje również <xref:System.ComponentModel.IComponent>, zostanie ona dodana do `container`.</xref:System.ComponentModel.IComponent> Obiektów w kontenerze muszą mieć nazwy i typy, które odpowiada obiektów w magazynie serializacji w kolejności istniejącego obiektu do użycia."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do deserializacji."
    - id: container
      type: System.ComponentModel.IContainer
      description: "Kontener, do którego <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> obiekty zostaną dodane."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zagwarantować, że proces deserializacji będzie działać tylko, jeśli stosowane do tego samego typu obiektu."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>nie zawiera danych w formacie, który może przetwarzać kontenera serializacji."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializuje dany <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> do danego kontenera, opcjonalnie stosowania domyślne wartości właściwości."
  remarks: "<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>Deserializuje metody `store`, ale zamiast produkujących nowe obiekty, stosuje danych w magazynie do istniejącego zestawu obiektów, które są pobierane z podanego kontenera.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> W związku z tym wywołującego można utworzyć wcześniej obiekt jednak za stosowny. Jeśli obiekt nie ma stanu deserializacja obiektu nie ma nazwy zestawu istniejących obiektów, zostanie utworzony nowy obiekt. Jeśli ten obiekt implementuje również <xref:System.ComponentModel.IComponent>, zostanie ona dodana do `container`.</xref:System.ComponentModel.IComponent> Obiektów w kontenerze muszą mieć nazwy i typy, które odpowiada obiektów w magazynie serializacji w kolejności istniejącego obiektu do użycia."
  syntax:
    content: public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do deserializacji."
    - id: container
      type: System.ComponentModel.IContainer
      description: "Kontener, do którego <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> obiekty zostaną dodane."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zagwarantować, że proces deserializacji będzie działać tylko, jeśli stosowane do tego samego typu obiektu."
    - id: applyDefaults
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że powinny być stosowane domyślne wartości właściwości."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>nie zawiera danych w formacie, który może przetwarzać kontenera serializacji."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  id: LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Ładunki <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> ze strumienia."
  remarks: "Zwrócony magazynu można użyć do deserializacji obiektów przez przekazanie jej do jednego z <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>metody.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>"
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>z którym magazyn zostanie załadowany.</xref:System.IO.Stream>"
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "Nowy <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> wystąpienia."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>stream</code>nie zawiera danych zapisywanych przez poprzednie wywołanie <xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Wykonuje serializację danego obiektu do danej <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>."
  remarks: "Magazyn może służyć do serializacji więcej niż jeden obiekt przez wywołanie tej metody więcej niż raz."
  syntax:
    content: public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do którego stan `value` zostanie zapisany."
    - id: value
      type: System.Object
      description: "Obiekt do zserializowania."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>jest zamknięty lub <code>store</code> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Wykonuje serializację danego obiektu dla domyślnych wartości właściwości."
  remarks: "Standardowa serializacji, jako implementowane za pośrednictwem <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A>metody serializuje tylko wartości, które różnią się od elementu stanu domyślnego.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> To zapewnia najbardziej kompaktową mechanizm serializacji, ale przyjęto założenie, że nowo utworzony obiekt będzie używane podczas wykonywania deserializacji. Jeśli istniejący obiekt jest używany, wynikowy zdeserializowany obiekt nie jest gwarantowana mają zostać zduplikowane pierwotnego stanu serializacji obiektu. właściwości, które zawiera podczas serializacji wartości domyślne nie zostaną zresetowane do wartości domyślnych podczas deserializacji.       Metoda SerializeAbsolute nie korzysta z tego skrótu. Wszystkie właściwości obiektu źródłowego go serializuje, aby deserializacji można przywrócić wszystkie właściwości obiektu, niezależnie od stanu domyślnego.       Ta metoda jest szczególnie przydatne w przypadku serializacji kolekcji, ponieważ można zmienić kolejność elementów składowych w kolekcji. W takim przypadku najbezpieczniejszy procesu, aby przywrócić oryginalny stan całą kolekcję ma zastąpić wszystkie elementy ich oryginalnej wartości właściwości."
  syntax:
    content: public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do którego stan `value` będą serializowane."
    - id: value
      type: System.Object
      description: "Obiekt do zserializowania."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>jest zamknięty lub <code>store</code> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Wykonuje serializację danego elementu członkowskiego dla danego obiektu."
  remarks: "Metoda SerializeMember może być wywoływana wiele razy dla tego samego obiektu utworzyć listę serializacji elementów członkowskich w ramach magazynu serializacji. Ogólnie rzecz biorąc element członkowski powinien być właściwości lub zdarzenia."
  syntax:
    content: public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do którego stan `member` będą serializowane."
    - id: owningObject
      type: System.Object
      description: "Obiekt, do którego `member` jest dołączony."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> określenia członka do serializacji."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>jest zamknięty lub <code>store</code> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Wykonuje serializację danego elementu członkowskiego na dany obiekt dla domyślnej wartości właściwości."
  remarks: "Metoda SerializeMemberAbsolute serializuje `member` na `owningObject`, nawet jeśli `member` zawiera domyślną wartość właściwości.       Należy zauważyć, że dla niektórych członków, zawierające wartości domyślnej i przywracanie ustawienie taką samą wartość do elementu Członkowskiego innego pojęcia. Na przykład jeśli właściwość dziedziczy wartości z obiektu nadrzędnego, gdy ustawiono nie wartości lokalnej, ustawiając wartość właściwości nie można co jest potrzebne. Metoda SerializeMemberAbsolute to uwzględnia i spowoduje wyczyszczenie stanu właściwości w tym przypadku."
  syntax:
    content: public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> Do którego stan `member` będą serializowane."
    - id: owningObject
      type: System.Object
      description: "Obiekt, do którego `member` jest dołączony."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "Element członkowski do serializacji."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>jest zamknięty lub <code>store</code> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
- uid: System.ComponentModel.Design.Serialization.SerializationStore
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: SerializationStore
  nameWithType: SerializationStore
  fullName: System.ComponentModel.Design.Serialization.SerializationStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService.ComponentSerializationService
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore
  nameWithType: ComponentSerializationService.CreateStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize
  nameWithType: ComponentSerializationService.Deserialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo
  nameWithType: ComponentSerializationService.DeserializeTo
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore
  nameWithType: ComponentSerializationService.LoadStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize
  nameWithType: ComponentSerializationService.Serialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute
  nameWithType: ComponentSerializationService.SerializeAbsolute
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember
  nameWithType: ComponentSerializationService.SerializeMember
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute
