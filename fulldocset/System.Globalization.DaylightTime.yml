### YamlMime:ManagedReference
items:
- uid: System.Globalization.DaylightTime
  id: DaylightTime
  children:
  - System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  - System.Globalization.DaylightTime.Delta
  - System.Globalization.DaylightTime.End
  - System.Globalization.DaylightTime.Start
  langs:
  - csharp
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
  type: Class
  summary: "Określa okres czasu letniego."
  remarks: "Zmiany czasu jest okres w roku, po zaawansowane zegara, zazwyczaj przez godzinę, przeprowadzać godziny rozszerzonej czasu letniego. Z końcem okresu zegar jest ustawiana dla czasu standardowego.      > [!WARNING] > DaylightTime obiektu zwróconego przez <xref:System.TimeZone.GetDaylightChanges%2A?displayProperty=fullName>metody rozpoznaje tylko strefę czasową korekty zasady, która jest obecnie efekt i ignoruje wszelkie wcześniejsze reguły korekty dla których system ma informacje.</xref:System.TimeZone.GetDaylightChanges%2A?displayProperty=fullName> Zamiast tego dotyczy bieżącej regule dopasowania do tyłu w czasie okresy po jego mogły nie zostać obowiązywać. Aby uzyskać informacje o wszystkich reguł korygowania znane dla określonej strefy czasowej, użyj <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName>metody.</xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DaylightTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  id: '#ctor(System.DateTime,System.DateTime,System.TimeSpan)'
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: DaylightTime(DateTime,DateTime,TimeSpan)
  nameWithType: DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  fullName: System.Globalization.DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Globalization.DaylightTime&quot;> </xref> z datą początkową, zakończenia i informacje różnica czasu."
  remarks: "`start` Parametru staje się wartością <xref:System.Globalization.DaylightTime.Start%2A>Właściwość nowego obiektu.</xref:System.Globalization.DaylightTime.Start%2A> `end` Parametru staje się wartością <xref:System.Globalization.DaylightTime.End%2A>Właściwość nowego obiektu.</xref:System.Globalization.DaylightTime.End%2A> `delta` Parametru staje się wartością <xref:System.Globalization.DaylightTime.Delta%2A>Właściwość nowego obiektu.</xref:System.Globalization.DaylightTime.Delta%2A>"
  syntax:
    content: public DaylightTime (DateTime start, DateTime end, TimeSpan delta);
    parameters:
    - id: start
      type: System.DateTime
      description: "Obiekt reprezentujący datę i godzinę rozpoczęcia czasu letniego. Wartość musi być według czasu lokalnego."
    - id: end
      type: System.DateTime
      description: "Obiekt reprezentujący datę i godzinę zakończenia czasu letniego. Wartość musi być według czasu lokalnego."
    - id: delta
      type: System.TimeSpan
      description: "Obiekt, który reprezentuje różnica między (czas standardowy) i czasu, w znaczniki osi."
  overload: System.Globalization.DaylightTime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.Delta
  id: Delta
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: Delta
  nameWithType: DaylightTime.Delta
  fullName: System.Globalization.DaylightTime.Delta
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera przedział czasu, reprezentujący różnica między (czas standardowy) i czasu letniego."
  remarks: "Ta właściwość odpowiada <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A?displayProperty=fullName> Ogólnie rzecz biorąc <xref:System.TimeZoneInfo>klasy jest źródłem dokładniejszych informacji na temat dopasowania strefy czasowej niż <xref:System.TimeZone>i <xref:System.Globalization.DaylightTime>klasy.</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       Jeśli wartość właściwości jest dodatnia, w momencie rozpoczęcia obowiązywania czasu letniego, czas zegara jest zaawansowane przez czas określony przez tę właściwość. Z końcem okresu obowiązywania czasu letniego czasu zegara ustawiono wstecz przez czas określony przez tę właściwość. Jeśli wartość właściwości jest ujemna, czas zegara jest ustawiana w momencie rozpoczęcia obowiązywania czasu letniego i Zaawansowane na końcu."
  syntax:
    content: public TimeSpan Delta { get; }
    return:
      type: System.TimeSpan
      description: "Przedział czasu, to jest różnicą między (czas standardowy) i czasu letniego."
  overload: System.Globalization.DaylightTime.Delta*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.End
  id: End
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: End
  nameWithType: DaylightTime.End
  fullName: System.Globalization.DaylightTime.End
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera obiekt, który reprezentuje datę i godzinę Uwzględniaj terminu."
  remarks: "Ta właściwość odpowiada <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A?displayProperty=fullName> Ogólnie rzecz biorąc <xref:System.TimeZoneInfo>klasy jest źródłem dokładniejszych informacji na temat dopasowania strefy czasowej niż <xref:System.TimeZone>i <xref:System.Globalization.DaylightTime>klasy.</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       Po zakończeniu okresu Uwzględniaj czasu zegara jest ustawiana dla (czas standardowy)."
  syntax:
    content: public DateTime End { get; }
    return:
      type: System.DateTime
      description: "Obiekt, który reprezentuje datę i godzinę Uwzględniaj terminu. Wartość jest według czasu lokalnego."
  overload: System.Globalization.DaylightTime.End*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.Start
  id: Start
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: Start
  nameWithType: DaylightTime.Start
  fullName: System.Globalization.DaylightTime.Start
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera obiekt reprezentujący datę i godzinę rozpoczęcia Uwzględnij okres czasu."
  remarks: "Ta właściwość odpowiada <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A?displayProperty=fullName> Ogólnie rzecz biorąc <xref:System.TimeZoneInfo>klasy jest źródłem dokładniejszych informacji na temat dopasowania strefy czasowej niż <xref:System.TimeZone>i <xref:System.Globalization.DaylightTime>klasy.</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       Po rozpoczęciu Uwzględniaj okres czasu zegara jest zaawansowane przez ich liczba zdefiniowanych przez <xref:System.Globalization.DaylightTime.Delta%2A>Właściwości przeprowadzać godziny rozszerzonej czasu letniego.</xref:System.Globalization.DaylightTime.Delta%2A>"
  syntax:
    content: public DateTime Start { get; }
    return:
      type: System.DateTime
      description: "Obiekt reprezentujący datę i godzinę rozpoczęcia Uwzględnij okres czasu. Wartość jest według czasu lokalnego."
  overload: System.Globalization.DaylightTime.Start*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: DaylightTime(DateTime,DateTime,TimeSpan)
  nameWithType: DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  fullName: System.Globalization.DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Globalization.DaylightTime.Delta
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Delta
  nameWithType: DaylightTime.Delta
  fullName: System.Globalization.DaylightTime.Delta
- uid: System.Globalization.DaylightTime.End
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: End
  nameWithType: DaylightTime.End
  fullName: System.Globalization.DaylightTime.End
- uid: System.Globalization.DaylightTime.Start
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Start
  nameWithType: DaylightTime.Start
  fullName: System.Globalization.DaylightTime.Start
- uid: System.Globalization.DaylightTime.#ctor*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime.DaylightTime
- uid: System.Globalization.DaylightTime.Delta*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Delta
  nameWithType: DaylightTime.Delta
- uid: System.Globalization.DaylightTime.End*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: End
  nameWithType: DaylightTime.End
- uid: System.Globalization.DaylightTime.Start*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Start
  nameWithType: DaylightTime.Start
