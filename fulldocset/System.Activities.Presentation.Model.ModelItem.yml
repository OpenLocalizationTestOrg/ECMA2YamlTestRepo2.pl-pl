### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.ModelItem
  id: ModelItem
  children:
  - System.Activities.Presentation.Model.ModelItem.#ctor
  - System.Activities.Presentation.Model.ModelItem.Attributes
  - System.Activities.Presentation.Model.ModelItem.BeginEdit
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.Content
  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  - System.Activities.Presentation.Model.ModelItem.ItemType
  - System.Activities.Presentation.Model.ModelItem.Name
  - System.Activities.Presentation.Model.ModelItem.Parent
  - System.Activities.Presentation.Model.ModelItem.Parents
  - System.Activities.Presentation.Model.ModelItem.Properties
  - System.Activities.Presentation.Model.ModelItem.PropertyChanged
  - System.Activities.Presentation.Model.ModelItem.Root
  - System.Activities.Presentation.Model.ModelItem.Source
  - System.Activities.Presentation.Model.ModelItem.Sources
  - System.Activities.Presentation.Model.ModelItem.ToString
  - System.Activities.Presentation.Model.ModelItem.View
  langs:
  - csharp
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
  type: Class
  summary: "Reprezentuje pojedynczy element w modelu do edycji. Element można niczego ze strukturą danych złożonych do kolorów lub liczba całkowita."
  remarks: "Można uzyskać dostępu do właściwości elementu za pomocą jego <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A>kolekcji i upewnij się zmian wartości właściwości.</xref:System.Activities.Presentation.Model.ModelItem.Properties%2A>       ModelItem jest otokę odpowiedni model danych w projektancie. Dostęp można uzyskać odpowiedni model za pośrednictwem <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>metody.</xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>      > [!NOTE] > Wszystkie zmiany wprowadzone do obiektu zwróconego z <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>metody nie zostaną odzwierciedlone przez systemy serializacji i cofania projektanta.</xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>"
  example:
  - "The ModelItem can be thought of as a thin proxy for an object at which it points. First define a simple `Animal` object.  \n  \n```  \n  \npublic class Animal  \n{  \n    // simple property  \n    public string Name { get; set; }  \n    // complex property   \n    public Location Residence { get; set; }   \n    // list   \n    public List<Animal> CloseRelatives { get; set; }  \n    // dictionary  \n    public Dictionary<string, object> Features { get; set; }   \n}  \n  \npublic class Location  \n{  \n    public string StreetAddress { get; set; }  \n    public string City { get; set; }  \n    public string State { get; set; }   \n}  \n  \n```  \n  \n Secondly, create an instance of that `Animal` and a ModelItem that is a proxy for it. The object can then be retrieved by calling <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>. The following code also shows how to use other properties defined by ModelItem.  \n  \n```  \n  \nEditingContext ec = new EditingContext();  \nvar companion1 = new Animal { Name = \"Houdini the parakeet\" };  \nvar companion2 = new Animal { Name = \"Groucho the fish\" };  \nvar animal = new Animal   \n   {  \n      Name = \"Sasha the pug\",  \n      Residence = new Location   \n      {  \n         StreetAddress = \"123 Main Street\",  \n         City = \"AnyTown\",  \n         State = \"Washington\"  \n      },  \n      Features = new Dictionary<string, object> {   \n         {\"noise\", \"snort\" },  \n         {\"MeanTimeUntilNaps\", TimeSpan.FromMinutes(15) }  \n      },  \n      CloseRelatives = new List<Animal> { companion1, companion2 }   \n   };  \nModelTreeManager mtm = new ModelTreeManager(ec);  mtm.Load(animal);  \nModelItem mi = mtm.Root;  \n  \n//Testing other properties of the class  \nModelItem root = mtm.Root;  \nAssert.IsTrue(root.GetCurrentValue() == animal, \"GetCurrentValue() returns same object\");  \nAssert.IsTrue(root.ItemType == typeof(Animal),\"ItemType describes the item\");  \nAssert.IsTrue(root.Parent == null,\"root parent is null\");  \nAssert.IsTrue(root.Source == null, \"root source is null\");  \nAssert.IsTrue(((List<Animal>)root.Properties[\"CloseRelatives\"].ComputedValue)[0] == companion1,   \n   \"ComputedValue of prop == actual object\");  \nAssert.IsFalse(((List<Animal>)root.Properties[\"CloseRelatives\"].ComputedValue)[0] == companion2,   \n   \"ComputedValue of prop == actual object\");  \nAssert.AreEqual(root.Properties[\"Residence\"].  \n   Value.  \n   Properties[\"StreetAddress\"].  \n   Value.GetCurrentValue(), \"123 Main Street\", \"get actual value back out\");  \nAssert.AreEqual(root, root.Properties[\"Residence\"].Parent, \"property points to owner\");  \nModelItem location = root.Properties[\"Residence\"].Value;  \nAssert.AreEqual(root.Properties[\"Residence\"], location.Source, \"sources point to the right place\");  \n  \n```"
  syntax:
    content: 'public abstract class ModelItem : System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: ModelItem()
  nameWithType: ModelItem.ModelItem()
  fullName: System.Activities.Presentation.Model.ModelItem.ModelItem()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> klasy."
  syntax:
    content: protected ModelItem ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Attributes
  id: Attributes
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Attributes
  nameWithType: ModelItem.Attributes
  fullName: System.Activities.Presentation.Model.ModelItem.Attributes
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera atrybuty zadeklarowany w tym elemencie."
  syntax:
    content: public abstract System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Kolekcja, która zawiera atrybuty elementu."
  overload: System.Activities.Presentation.Model.ModelItem.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit
  id: BeginEdit
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: ModelItem.BeginEdit()
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zostanie otwarty do edycji zakresu projektanta. Po otwarciu edycji zakresu wszystkie zmiany dla wszystkich obiektów zostaną zapisane w zakresie do momentu ukończenia transakcji lub cofnięte. Zakresy edycji mogą być zagnieżdżane, ale musi być zatwierdzone w kolejności."
  remarks: "Edytowanie zakresu umożliwia wielu zmian w modelu mają być stosowane jako jedna transakcja. Wszystkie zmiany wprowadzone w zakresie edycji można cofnąć w dowolnym momencie przed zakończeniem transakcji.       Edytowanie zakresów są globalne do projektanta. Edytowanie zakresu mogą być tworzone dla dowolnego elementu w Projektancie nie trzeba tworzyć edycji zakresu dla określonego elementu, który jest zmieniany."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit ();
    parameters: []
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, które muszą być albo zakończone lub cofnięte."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  id: BeginEdit(System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit(Boolean)
  nameWithType: ModelItem.BeginEdit(Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(Boolean)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zostanie otwarty do edycji zakresu projektanta."
  syntax:
    content: public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (bool shouldApplyChangesImmediately);
    parameters:
    - id: shouldApplyChangesImmediately
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że zmiany powinna być stosowana natychmiast; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, które muszą być albo zakończone lub cofnięte."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  id: BeginEdit(System.String)
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit(String)
  nameWithType: ModelItem.BeginEdit(String)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zostanie otwarty do edycji zakresu projektanta. Po otwarciu edycji zakresu wszystkie zmiany dla wszystkich obiektów zostaną zapisane w zakresie do momentu ukończenia transakcji lub cofnięte. Zakresy edycji mogą być zagnieżdżane, ale musi być zatwierdzone w kolejności."
  remarks: "Edytowanie zakresu umożliwia wielu zmian w modelu mają być stosowane jako jedna transakcja. Wszystkie zmiany wprowadzone w zakresie edycji można cofnąć w dowolnym momencie przed zakończeniem transakcji.       Edytowanie zakresów są globalne do projektanta. Edytowanie zakresu mogą być tworzone dla dowolnego elementu w Projektancie nie trzeba tworzyć edycji zakresu dla określonego elementu, który jest zmieniany."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description);
    parameters:
    - id: description
      type: System.String
      description: "Opcjonalny opis tej zmiany. Spowoduje to ustawienie w <xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>Właściwości edycji zakresu.</xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>"
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, które muszą być albo zakończone lub cofnięte."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  id: BeginEdit(System.String,System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit(String,Boolean)
  nameWithType: ModelItem.BeginEdit(String,Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String,Boolean)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zostanie otwarty do edycji zakresu projektanta."
  syntax:
    content: public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description, bool shouldApplyChangesImmediately);
    parameters:
    - id: description
      type: System.String
      description: "Opcjonalny opis tej zmiany. Spowoduje to ustawienie w <xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>Właściwości edycji zakresu.</xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>"
    - id: shouldApplyChangesImmediately
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że zmiany powinna być stosowana natychmiast; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, które muszą być albo zakończone lub cofnięte."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Content
  id: Content
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Content
  nameWithType: ModelItem.Content
  fullName: System.Activities.Presentation.Model.ModelItem.Content
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera <xref uid=&quot;langword_csharp_ContentPropertyAttribute&quot; name=&quot;ContentPropertyAttribute&quot; href=&quot;&quot;> </xref> elementu, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelProperty Content { get; }
    return:
      type: System.Activities.Presentation.Model.ModelProperty
      description: "The <xref uid=&quot;langword_csharp_ContentPropertyAttribute&quot; name=&quot;ContentPropertyAttribute&quot; href=&quot;&quot;></xref> of the item as a <xref href=&quot;System.Activities.Presentation.Model.ModelProperty&quot;></xref>. Jeśli <xref uid=&quot;langword_csharp_ContentPropertyAttribute&quot; name=&quot;ContentPropertyAttribute&quot; href=&quot;&quot;> </xref> nie jest deklarowana przez <xref:System.Activities.Presentation.Model.ModelItem.ItemType*>tego elementu zawartości zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Activities.Presentation.Model.ModelItem.ItemType*>"
  overload: System.Activities.Presentation.Model.ModelItem.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  id: GetCurrentValue
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: GetCurrentValue()
  nameWithType: ModelItem.GetCurrentValue()
  fullName: System.Activities.Presentation.Model.ModelItem.GetCurrentValue()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zwraca bieżącą wartość obiektu podstawowego modelu, który <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> jest zawijania."
  remarks: "Możesz sprawdzić tego obiektu, ale nie należy wprowadzać żadnych zmian do niego. Zmiany wprowadzone w obiekcie zwracanym nie zostaną uwzględnione w projektancie. Metoda GetCurrentValue może zwracać albo istniejącego lub nowego wystąpienia sklonowanego obiektu."
  syntax:
    content: public abstract object GetCurrentValue ();
    parameters: []
    return:
      type: System.Object
      description: "Bieżąca wartość odpowiedni model obiektów, które <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> jest zawijania jako <xref:System.Object>.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItem.GetCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.ItemType
  id: ItemType
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: ItemType
  nameWithType: ModelItem.ItemType
  fullName: System.Activities.Presentation.Model.ModelItem.ItemType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera typ obiektu, który reprezentuje element."
  syntax:
    content: public abstract Type ItemType { get; }
    return:
      type: System.Type
      description: "Typ obiektu, który reprezentuje element."
  overload: System.Activities.Presentation.Model.ModelItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Name
  id: Name
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Name
  nameWithType: ModelItem.Name
  fullName: System.Activities.Presentation.Model.ModelItem.Name
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera lub ustawia nazwę lub identyfikator elementu."
  remarks: "Nie wszystkie elementy muszą mieć nazwy, więc to może zwrócić `null`. W zależności od typu elementu i gdzie znajduje się on w hierarchii może nie zawsze być prawne można ustawić nazwy elementu. Jeśli <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A>tego elementu deklaruje `RuntimeNamePropertyAttribute`, właściwość Name ma bezpośredniego mapowania dla właściwości ustawieniem tego atrybutu.</xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A>"
  syntax:
    content: public abstract string Name { get; set; }
    return:
      type: System.String
      description: "Nazwa lub identyfikator elementu jako <xref:System.String>.</xref:System.String>"
  overload: System.Activities.Presentation.Model.ModelItem.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Parent
  id: Parent
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Parent
  nameWithType: ModelItem.Parent
  fullName: System.Activities.Presentation.Model.ModelItem.Parent
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera element, który jest elementem nadrzędnym tego elementu."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> będący elementem nadrzędnym tego elementu. Jeśli element znajduje się w kolekcji lub słownika, zamiast tego zwrócony obiekt, który jest właścicielem kolekcji lub słownika."
  overload: System.Activities.Presentation.Model.ModelItem.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Parents
  id: Parents
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Parents
  nameWithType: ModelItem.Parents
  fullName: System.Activities.Presentation.Model.ModelItem.Parents
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera wszystkich elementów nadrzędnych tego elementu."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Parents { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "Nadrzędne tego elementu."
  overload: System.Activities.Presentation.Model.ModelItem.Parents*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Properties
  id: Properties
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Properties
  nameWithType: ModelItem.Properties
  fullName: System.Activities.Presentation.Model.ModelItem.Properties
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera właściwości publiczne dla tego elementu."
  remarks: "Zbiór właściwości zwrócił mogą ulec zmianie na podstawie dołączone właściwości lub zmiany do edycji zakresu."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelPropertyCollection Properties { get; }
    return:
      type: System.Activities.Presentation.Model.ModelPropertyCollection
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> zawiera publicznej właściwości tego elementu."
  overload: System.Activities.Presentation.Model.ModelItem.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.PropertyChanged
  id: PropertyChanged
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ModelItem.PropertyChanged
  fullName: System.Activities.Presentation.Model.ModelItem.PropertyChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Implementuje <xref uid=&quot;langword_csharp_INotifyPropertyChanged&quot; name=&quot;INotifyPropertyChanged&quot; href=&quot;&quot;> </xref>. To zdarzenie służy do nasłuchiwania zmian w modelu. Służy to także przez funkcje powiązanie danych WPF."
  remarks: "Odłącz zdarzenia z elementów po zakończeniu pracy z nimi. W przeciwnym razie mogą uniemożliwić moduł garbage collector usuwania elementu, który nie jest już używana."
  syntax:
    content: public abstract event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Root
  id: Root
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Root
  nameWithType: ModelItem.Root
  fullName: System.Activities.Presentation.Model.ModelItem.Root
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera element, który jest elementem głównym tego drzewa."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Root { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> czyli głównego tego drzewa lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli ten element nie jest częścią drzewa."
  overload: System.Activities.Presentation.Model.ModelItem.Root*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Source
  id: Source
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Source
  nameWithType: ModelItem.Source
  fullName: System.Activities.Presentation.Model.ModelItem.Source
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera właściwość podać tę wartość."
  remarks: "Jeśli element reprezentuje katalog główny wykres obiektu, to zwróci `null`. Jeśli element jest elementem członkowskim kolekcji lub słownika, właściwość zwracane ze źródła będzie pseudo-pochodzącymi z kolekcji lub słownika właściwości. Dla wartości innych właściwości Source zwraca właściwość której faktycznie ustawiono wartość. W związku z tym jeśli wartość jest dziedziczone, źródła umożliwia dowiedzieć się, który pierwotnie podana wartość."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelProperty Source { get; }
    return:
      type: System.Activities.Presentation.Model.ModelProperty
      description: "A <xref href=&quot;System.Activities.Presentation.Model.ModelProperty&quot;> </xref> wskazujące źródła tej wartości."
  overload: System.Activities.Presentation.Model.ModelItem.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Sources
  id: Sources
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Sources
  nameWithType: ModelItem.Sources
  fullName: System.Activities.Presentation.Model.ModelItem.Sources
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera właściwości zawierających tę wartość."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelProperty> Sources { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelProperty}
      description: "Źródła tej wartości."
  overload: System.Activities.Presentation.Model.ModelItem.Sources*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.ToString
  id: ToString
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: ToString()
  nameWithType: ModelItem.ToString()
  fullName: System.Activities.Presentation.Model.ModelItem.ToString()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zwraca reprezentację ciągu obiektu podstawowego modelu zawartych w tym elemencie modelu."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Reprezentacja ciągu obiektu podstawowego modelu zawartych w tym elemencie modelu."
  overload: System.Activities.Presentation.Model.ModelItem.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.View
  id: View
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: View
  nameWithType: ModelItem.View
  fullName: System.Activities.Presentation.Model.ModelItem.View
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> graficznie reprezentujący ten element."
  syntax:
    content: public abstract System.Windows.DependencyObject View { get; }
    return:
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> ten element, który reprezentuje graficznie lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> przypadku nie reprezentacji."
  overload: System.Activities.Presentation.Model.ModelItem.View*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.ModelItem.#ctor
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ModelItem()
  nameWithType: ModelItem.ModelItem()
  fullName: System.Activities.Presentation.Model.ModelItem.ModelItem()
- uid: System.Activities.Presentation.Model.ModelItem.Attributes
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Attributes
  nameWithType: ModelItem.Attributes
  fullName: System.Activities.Presentation.Model.ModelItem.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit()
  nameWithType: ModelItem.BeginEdit()
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit()
- uid: System.Activities.Presentation.Model.ModelEditingScope
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelEditingScope
  nameWithType: ModelEditingScope
  fullName: System.Activities.Presentation.Model.ModelEditingScope
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit(Boolean)
  nameWithType: ModelItem.BeginEdit(Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit(String)
  nameWithType: ModelItem.BeginEdit(String)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit(String,Boolean)
  nameWithType: ModelItem.BeginEdit(String,Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String,Boolean)
- uid: System.Activities.Presentation.Model.ModelItem.Content
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Content
  nameWithType: ModelItem.Content
  fullName: System.Activities.Presentation.Model.ModelItem.Content
- uid: System.Activities.Presentation.Model.ModelProperty
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelProperty
  nameWithType: ModelProperty
  fullName: System.Activities.Presentation.Model.ModelProperty
- uid: System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: GetCurrentValue()
  nameWithType: ModelItem.GetCurrentValue()
  fullName: System.Activities.Presentation.Model.ModelItem.GetCurrentValue()
- uid: System.Activities.Presentation.Model.ModelItem.ItemType
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ItemType
  nameWithType: ModelItem.ItemType
  fullName: System.Activities.Presentation.Model.ModelItem.ItemType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.ModelItem.Name
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Name
  nameWithType: ModelItem.Name
  fullName: System.Activities.Presentation.Model.ModelItem.Name
- uid: System.Activities.Presentation.Model.ModelItem.Parent
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parent
  nameWithType: ModelItem.Parent
  fullName: System.Activities.Presentation.Model.ModelItem.Parent
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.ModelItem.Parents
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parents
  nameWithType: ModelItem.Parents
  fullName: System.Activities.Presentation.Model.ModelItem.Parents
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelItem>
  nameWithType: IEnumerable<ModelItem>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItem.Properties
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Properties
  nameWithType: ModelItem.Properties
  fullName: System.Activities.Presentation.Model.ModelItem.Properties
- uid: System.Activities.Presentation.Model.ModelPropertyCollection
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelPropertyCollection
  nameWithType: ModelPropertyCollection
  fullName: System.Activities.Presentation.Model.ModelPropertyCollection
- uid: System.Activities.Presentation.Model.ModelItem.PropertyChanged
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: PropertyChanged
  nameWithType: ModelItem.PropertyChanged
  fullName: System.Activities.Presentation.Model.ModelItem.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Activities.Presentation.Model.ModelItem.Root
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Root
  nameWithType: ModelItem.Root
  fullName: System.Activities.Presentation.Model.ModelItem.Root
- uid: System.Activities.Presentation.Model.ModelItem.Source
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Source
  nameWithType: ModelItem.Source
  fullName: System.Activities.Presentation.Model.ModelItem.Source
- uid: System.Activities.Presentation.Model.ModelItem.Sources
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Sources
  nameWithType: ModelItem.Sources
  fullName: System.Activities.Presentation.Model.ModelItem.Sources
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelProperty}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelProperty>
  nameWithType: IEnumerable<ModelProperty>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelProperty>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelProperty>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelProperty
    name: ModelProperty
    nameWithType: ModelProperty
    fullName: ModelProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItem.ToString
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ToString()
  nameWithType: ModelItem.ToString()
  fullName: System.Activities.Presentation.Model.ModelItem.ToString()
- uid: System.Activities.Presentation.Model.ModelItem.View
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: View
  nameWithType: ModelItem.View
  fullName: System.Activities.Presentation.Model.ModelItem.View
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Activities.Presentation.Model.ModelItem.#ctor*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem.ModelItem
- uid: System.Activities.Presentation.Model.ModelItem.Attributes*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Attributes
  nameWithType: ModelItem.Attributes
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit
  nameWithType: ModelItem.BeginEdit
- uid: System.Activities.Presentation.Model.ModelItem.Content*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Content
  nameWithType: ModelItem.Content
- uid: System.Activities.Presentation.Model.ModelItem.GetCurrentValue*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: GetCurrentValue
  nameWithType: ModelItem.GetCurrentValue
- uid: System.Activities.Presentation.Model.ModelItem.ItemType*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ItemType
  nameWithType: ModelItem.ItemType
- uid: System.Activities.Presentation.Model.ModelItem.Name*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Name
  nameWithType: ModelItem.Name
- uid: System.Activities.Presentation.Model.ModelItem.Parent*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parent
  nameWithType: ModelItem.Parent
- uid: System.Activities.Presentation.Model.ModelItem.Parents*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parents
  nameWithType: ModelItem.Parents
- uid: System.Activities.Presentation.Model.ModelItem.Properties*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Properties
  nameWithType: ModelItem.Properties
- uid: System.Activities.Presentation.Model.ModelItem.Root*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Root
  nameWithType: ModelItem.Root
- uid: System.Activities.Presentation.Model.ModelItem.Source*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Source
  nameWithType: ModelItem.Source
- uid: System.Activities.Presentation.Model.ModelItem.Sources*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Sources
  nameWithType: ModelItem.Sources
- uid: System.Activities.Presentation.Model.ModelItem.ToString*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ToString
  nameWithType: ModelItem.ToString
- uid: System.Activities.Presentation.Model.ModelItem.View*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: View
  nameWithType: ModelItem.View
