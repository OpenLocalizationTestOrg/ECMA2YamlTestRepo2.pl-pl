### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementObjectCollection
  id: ManagementObjectCollection
  children:
  - System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  - System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  - System.Management.ManagementObjectCollection.Count
  - System.Management.ManagementObjectCollection.Dispose
  - System.Management.ManagementObjectCollection.Finalize
  - System.Management.ManagementObjectCollection.GetEnumerator
  - System.Management.ManagementObjectCollection.IsSynchronized
  - System.Management.ManagementObjectCollection.SyncRoot
  - System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ManagementObjectCollection
  nameWithType: ManagementObjectCollection
  fullName: System.Management.ManagementObjectCollection
  type: Class
  summary: "Reprezentuje różne kolekcje obiektów zarządzania pobrane za pośrednictwem usługi WMI. Obiektów w tej kolekcji jest <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref>-pochodnych typów, w tym <xref href=&quot;System.Management.ManagementObject&quot;> </xref> i <xref href=&quot;System.Management.ManagementClass&quot;> </xref>. Kolekcja może być wynik kwerendy usługi WMI wykonywane za pośrednictwem <xref href=&quot;System.Management.ManagementObjectSearcher&quot;> </xref>, lub wyliczenie obiektów zarządzania określonego typu pobierane w drodze <xref href=&quot;System.Management.ManagementClass&quot;> </xref> reprezentujący tego typu. Ponadto może to być kolekcją obiekty powiązane w określony sposób, aby obiekt zarządzania określonymi — w takim przypadku kolekcji może zostać pobrane za pośrednictwem metody takie jak zarządzanie <xref href=&quot;System.Management.ManagementObject.GetRelated&quot;> </xref>. Kolekcja może być udał przy użyciu <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator>i obiektów w nim mogą być kontrolowane lub manipulować dla różnych zadań zarządzania.</xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator>"
  syntax:
    content: 'public class ManagementObjectCollection : IDisposable, System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ManagementObjectCollection.CopyTo(Array,Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Kopiuje kolekcję do tablicy."
  remarks: "##.NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Aby skopiować do tablicy."
    - id: index
      type: System.Int32
      description: "Indeks, aby uruchomić z."
  overload: System.Management.ManagementObjectCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  id: CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: CopyTo(ManagementBaseObject[],Int32)
  nameWithType: ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Kopiuje elementy kolekcji do <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref> tablicy."
  remarks: "##.NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (System.Management.ManagementBaseObject[] objectCollection, int index);
    parameters:
    - id: objectCollection
      type: System.Management.ManagementBaseObject[]
      description: "Tablica docelowa."
    - id: index
      type: System.Int32
      description: "Indeks, aby uruchomić z."
  overload: System.Management.ManagementObjectCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Count
  id: Count
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Count
  nameWithType: ManagementObjectCollection.Count
  fullName: System.Management.ManagementObjectCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Pobiera wartość wskazującą liczbę obiektów w kolekcji."
  remarks: "Ta właściwość jest bardzo kosztowna — wymaga ona, że można wyliczyć wszystkich członków kolekcji.      ## Wartość właściwości Liczba obiektów w kolekcji.      ## .NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>wartość wskazującą liczbę obiektów w kolekcji.</xref:System.Int32>"
  overload: System.Management.ManagementObjectCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Dispose
  id: Dispose
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Dispose()
  nameWithType: ManagementObjectCollection.Dispose()
  fullName: System.Management.ManagementObjectCollection.Dispose()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Zwalnia zasoby skojarzone z tym obiektem. Po wywołaniu tej metody, próba użycia tego obiektu będzie skutkować <xref:System.ObjectDisposedException>został zgłoszony.</xref:System.ObjectDisposedException>"
  remarks: "##.NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Management.ManagementObjectCollection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Finalize
  id: Finalize
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: ManagementObjectCollection.Finalize()
  fullName: System.Management.ManagementObjectCollection.Finalize()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Usuwa zasoby, które posiada obiektu. Jest to destruktor dla obiekt. Finalizatory są wyrażane przy użyciu składni destruktora."
  remarks: "##.NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: ~ManagementObjectCollection ();
    parameters: []
  overload: System.Management.ManagementObjectCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ManagementObjectCollection.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Zwraca moduł wyliczający dla kolekcji."
  remarks: "Można tylko iteracji (jak w języku Visual Basic .NET `For Each` instrukcji lub C# `For` instrukcji) za pośrednictwem tylko do przodu wyliczający jeden raz. Pamięci, zawierającej wystąpienia został wydany przez WMI tak, aby nie może być przewinięta modułu wyliczającego. W związku z tym <xref:System.Management.ManagementObjectCollection.Count%2A>nie można użyć metody, ponieważ wymaga ona przewijanie modułu wyliczającego.</xref:System.Management.ManagementObjectCollection.Count%2A>       Moduły wyliczające tylko do przodu są zwykle dużo szybsze i używają mniej pamięci niż wyliczenia z konwencjonalnej, ale nie zezwalają na wywołania <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>       Jeśli moduł wyliczający jest rewindable, obiektów w kolekcji pozostaną dostępne dla wielu wyliczenia.      ## .NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Management.ManagementObjectCollection.ManagementObjectEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection.ManagementObjectEnumerator
      description: "<xref:System.Collections.IEnumerator>Który może służyć do iterowania po kolekcji.</xref:System.Collections.IEnumerator>"
  overload: System.Management.ManagementObjectCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
  fullName: System.Management.ManagementObjectCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Pobiera wartość wskazującą, czy obiekt jest zsynchronizowany."
  remarks: "##Wartość właściwości `true`, jeśli obiekt jest synchronizowane, w przeciwnym razie `false`.      ## .NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean>wartość wskazującą, czy obiekt jest zsynchronizowany.</xref:System.Boolean>"
  overload: System.Management.ManagementObjectCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
  fullName: System.Management.ManagementObjectCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Pobiera obiekt służący do synchronizacji."
  remarks: "##Wartość właściwości obiektu można używać do synchronizacji.      ## .NET framework zabezpieczeń Pełne zaufanie do bezpośredniego obiektu wywołującego. Nie można użyć tego elementu członkowskiego przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Zwraca <xref:System.Object>wartość, która reprezentuje obiekt do zastosowania w przypadku synchronizacji.</xref:System.Object>"
  overload: System.Management.ManagementObjectCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Zwraca <xref:System.Collections.IEnumerator>który iteruje <xref href=&quot;System.Management.ManagementObjectCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic, C#]       `foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.  W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.       Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.       Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.IEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.IEnumerator.Reset%2A> At to pozycja, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.IEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A>przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A>zwracają również `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A>zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Aby ustawić <xref:System.Collections.IEnumerator.Current%2A>pierwszy element w kolekcji, należy wywołać, <xref:System.Collections.IEnumerator.Reset%2A>następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takich jak dodawanie, modyfikowanie lub usuwanie elementów, spowoduje nieodwracalne unieważnienie modułu wyliczającego i następnego wywołania lub <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A>i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.       Ta metoda jest operacją O(1)."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.ManagementObjectCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ManagementObjectCollection.CopyTo(Array,Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo(ManagementBaseObject[],Int32)
  nameWithType: ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
- uid: System.Management.ManagementBaseObject[]
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject[]
  spec.csharp:
  - uid: System.Management.ManagementBaseObject
    name: ManagementBaseObject
    nameWithType: ManagementBaseObject
    fullName: ManagementBaseObject[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.ManagementObjectCollection.Count
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Count
  nameWithType: ManagementObjectCollection.Count
  fullName: System.Management.ManagementObjectCollection.Count
- uid: System.Management.ManagementObjectCollection.Dispose
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Dispose()
  nameWithType: ManagementObjectCollection.Dispose()
  fullName: System.Management.ManagementObjectCollection.Dispose()
- uid: System.Management.ManagementObjectCollection.Finalize
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Finalize()
  nameWithType: ManagementObjectCollection.Finalize()
  fullName: System.Management.ManagementObjectCollection.Finalize()
- uid: System.Management.ManagementObjectCollection.GetEnumerator
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ManagementObjectCollection.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.GetEnumerator()
- uid: System.Management.ManagementObjectCollection.ManagementObjectEnumerator
  parent: System.Management
  isExternal: false
  name: ManagementObjectCollection+ManagementObjectEnumerator
  nameWithType: ManagementObjectCollection+ManagementObjectEnumerator
  fullName: System.Management.ManagementObjectCollection+ManagementObjectEnumerator
- uid: System.Management.ManagementObjectCollection.IsSynchronized
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
  fullName: System.Management.ManagementObjectCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.ManagementObjectCollection.SyncRoot
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
  fullName: System.Management.ManagementObjectCollection.SyncRoot
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.ManagementObjectCollection.CopyTo*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo
  nameWithType: ManagementObjectCollection.CopyTo
- uid: System.Management.ManagementObjectCollection.Count*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Count
  nameWithType: ManagementObjectCollection.Count
- uid: System.Management.ManagementObjectCollection.Dispose*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Dispose
  nameWithType: ManagementObjectCollection.Dispose
- uid: System.Management.ManagementObjectCollection.Finalize*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Finalize
  nameWithType: ManagementObjectCollection.Finalize
- uid: System.Management.ManagementObjectCollection.GetEnumerator*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ManagementObjectCollection.GetEnumerator
- uid: System.Management.ManagementObjectCollection.IsSynchronized*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
- uid: System.Management.ManagementObjectCollection.SyncRoot*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator
