### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.InPlaceHostingManager
  id: InPlaceHostingManager
  children:
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.CancelAsync
  - System.Deployment.Application.InPlaceHostingManager.Dispose
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  - System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  - System.Deployment.Application.InPlaceHostingManager.Execute
  - System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  - System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  langs:
  - csharp
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager
  fullName: System.Deployment.Application.InPlaceHostingManager
  type: Class
  summary: "Zainstaluj lub zaktualizuj [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] wdrożenia na komputerze."
  remarks: "Umożliwia InPlaceHostingManager programy zapisu, które zainstalować [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacji programowo. Na przykład można użyć tej klasy w środowisku kontrolowany przez system zarządzania oprogramowania (SMS) lub w sytuacjach, w których należy złożonych instalacji, który wykonuje wiele operacji przed instalacją lub po instalacji na komputerze lokalnym. Ogólnie rzecz biorąc, można użyć członków tej klasy w określonej kolejności: 1.  Utwórz nowe wystąpienie klasy InPlaceHostingManager.      2.  Pobierz manifest wdrażania przy użyciu <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>      3.  Sprawdź, czy aplikacja może działać z odpowiednimi uprawnieniami przy użyciu <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>      4.  Pobieranie i instalowanie aplikacji za pomocą <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>      — Jeśli należy wywołać dowolną z tych parametrów poza kolejnością, zgłosi wyjątek.       InPlaceHostingManager można zainstalować [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacji, ale nie można go wykonać. Niektóre metody w tej klasy, takich jak <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, są zarezerwowane do użytku podczas pobierania aplikacji opartych na systemie Windows Presentation Foundation, uruchomioną w przeglądarce sieci Web.</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>       Aby użyć InPlaceHostingManager do pobrania i zainstalowania aplikacji, użytkownik musi upewnij się, że certyfikat podpisywania [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] planujesz zainstalowanie aplikacji jest już zainstalowana na komputerach klienckich jako zaufanego wydawcę. Aby uzyskać więcej informacji o zaufanych wydawców, zobacz [zaufanych Omówienie wdrożenia aplikacji](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Obecnie jest to ograniczenie produktu, który uniemożliwia InPlaceHostingManager działa poprawnie, gdy debugowanie przy użyciu kodu [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]. Jeśli debugowanie aplikacji w [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] przy użyciu klawisza F5, próbki zgłosi brzmieć tajemniczo wyjątki podczas wywoływania <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> Do debugowania za pomocą [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], uruchomienie aplikacji bez debugowania, a następnie dołącz debugera. Alternatywnie można użyć inny debuger, takiego jak WinDbg."
  example:
  - "The following code example shows how to use InPlaceHostingManager to install a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application programmatically on a client computer.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#1)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#1)]"
  syntax:
    content: 'public class InPlaceHostingManager : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref> do pobrania i zainstalowania określona aplikacja oparta na przeglądarce."
  remarks: "Ten konstruktor jest używany, gdy chcesz pobrać aplikacji opartych na systemie Windows Presentation Foundation, obsługiwanej w przeglądarce sieci Web. Aby pobrać aplikacje oparte na formularzach systemu Windows, które są wdrażane za pomocą [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)], użyj <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>konstruktora z `launchInHostProcess` ustawiona `false`.</xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "Uniform Resource Identifier (<xref:System.Uri>) do [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] manifest wdrażania aplikacji.</xref:System.Uri>"
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>może służyć tylko w systemie Windows XP lub nowszymi wersjami systemu operacyjnego Windows."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Nie można przekazać <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla <code> deploymentManifest </code> argumentu."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>wykorzystuje schemat identyfikatora URI, który nie jest obsługiwany przez [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref> pobranie i zainstalowanie określonej aplikacji, która może być autonomicznym aplikacji opartych na formularzach systemu Windows lub aplikacji hostowanej w przeglądarce sieci Web."
  remarks: ''
  example:
  - "The following code example demonstrates how to create an instance of <xref:System.Deployment.Application.InPlaceHostingManager> that allows you to download Windows Forms-based applications deployed using [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)].  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "Identyfikator URI (Uniform Resource) do manifestu wdrożenia aplikacji, który zostanie zainstalowany."
    - id: launchInHostProcess
      type: System.Boolean
      description: "Określa, czy ta aplikacja będzie uruchamiana na hoście, takich jak przeglądarki sieci Web. Dla aplikacji autonomicznej, ustaw tę wartość na <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>może służyć tylko w systemie Windows XP lub nowszymi wersjami systemu operacyjnego Windows."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Nie można przekazać <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla <code> deploymentManifest </code> argumentu."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>wykorzystuje schemat identyfikatora URI, który nie jest obsługiwany przez [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  id: AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Określa, czy [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacja ma odpowiednie uprawnienia i zależności platformy do uruchomienia na komputerze lokalnym."
  remarks: "Należy wywołać metody AssertApplicationRequirements po <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>zwraca pomyślnie.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> Nie należy wywołać <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>o ile nie można wywołać metody AssertApplicationRequirements i zwraca bez błędów.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>"
  example:
  - "The following code example demonstrates the use of AssertApplicationRequirements, which it calls in the body of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void AssertApplicationRequirements ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uruchamiany, jeśli ta metoda jest wywoływana przed <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>metody.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>"
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  id: AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Określa, czy [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacja ma odpowiednie uprawnienia i zależności platformy do uruchomienia na komputerze lokalnym."
  remarks: "Jeśli `grantApplicationTrust` jest `true`, <xref:System.Deployment.Application.InPlaceHostingManager>przyzna aplikacji podniesionych uprawnień, jeśli wymaga ona je.</xref:System.Deployment.Application.InPlaceHostingManager> Jest to możliwe tylko, jeśli <xref:System.Deployment.Application.InPlaceHostingManager>jest możliwość przyznawania tych uprawnień.</xref:System.Deployment.Application.InPlaceHostingManager> Na przykład jeśli [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacji jest instalowany jako część pakietu większych i Instalator ma przyznane pełne zaufanie, <xref:System.Deployment.Application.InPlaceHostingManager>będzie mógł przyznać [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] pełne zaufanie aplikacji.</xref:System.Deployment.Application.InPlaceHostingManager> Jeśli `grantApplicationTrust` jest `false`, aplikacja nie będzie można przyznać uprawnień."
  syntax:
    content: public void AssertApplicationRequirements (bool grantApplicationTrust);
    parameters:
    - id: grantApplicationTrust
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, aplikacja będzie podejmować próby podnieść poziom jego uprawnień do poziomu."
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  id: CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Anuluje operację asynchroniczną pobierania."
  syntax:
    content: public void CancelAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  id: Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref>."
  remarks: "Wywołaj metodę Dispose po zakończeniu przy użyciu <xref:System.Deployment.Application.InPlaceHostingManager>.</xref:System.Deployment.Application.InPlaceHostingManager> Metoda Dispose pozostawia <xref:System.Deployment.Application.InPlaceHostingManager>w stanie uniemożliwiającym jego używanie.</xref:System.Deployment.Application.InPlaceHostingManager> Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Deployment.Application.InPlaceHostingManager>, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Deployment.Application.InPlaceHostingManager>klasy.</xref:System.Deployment.Application.InPlaceHostingManager> </xref:System.Deployment.Application.InPlaceHostingManager> Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md) i [implementacja metody Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Wywołania zawsze dysponować przed zwolnieniem ostatniego odwołania do <xref:System.Deployment.Application.InPlaceHostingManager>.</xref:System.Deployment.Application.InPlaceHostingManager> W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Deployment.Application.InPlaceHostingManager>obiektu `Finalize` metody.</xref:System.Deployment.Application.InPlaceHostingManager>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  id: DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Pobierze aktualizację oprogramowania w tle."
  remarks: "Tej metody należy wywołać po wywołaniu metody <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>"
  example:
  - "The following code example demonstrates the use of DownloadApplicationAsync, which it calls at the end of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void DownloadApplicationAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uruchamiany, jeśli ta metoda jest wywoływana przed <> </> *> i <> </> *> metody."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  id: DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Występuje, gdy aplikacja zakończy pobierania na komputerze lokalnym."
  remarks: "Jeśli instalujesz aplikację oparte na formularzach systemu Windows, należy poinstruować użytkowników, aby uruchomić aplikację. Nie można uruchomić aplikacji opartych na formularzach systemu Windows programowo przy użyciu <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>metody.</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>"
  example:
  - "The following code example demonstrates a handler for the DownloadApplicationCompleted event.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#7)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#7)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs> DownloadApplicationCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  id: DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Występuje, gdy nastąpiła zmiana stanu pobierania aplikacji lub manifestu."
  remarks: "W aplikacji konsoli zdarzenia są przypisane do wątków z puli wątków. W związku z tym może zostać wyświetlony postęp aktualizacji zdarzenia poza kolejnością, o kolejne przedstawiający zmniejszanie w porównaniu z poprzednim zdarzeń. Takie zachowanie w aplikacji formularzy systemu Windows są niewidoczne, ponieważ zdarzeń w formularzach systemu Windows są przetwarzane sekwencyjnie poza kolejki komunikatów w wątku interfejsu użytkownika."
  example:
  - "The following code example demonstrates how to update a <xref:System.Windows.Forms.ToolStripProgressBar> that is contained within a <xref:System.Windows.Forms.StatusStrip>.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#6)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#6)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs> DownloadProgressChanged;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  id: Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Uruchamia [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacji tylko wtedy, gdy jest to aplikacja opartych na systemie Windows Presentation Foundation działającego w przeglądarce sieci Web."
  remarks: "Ta metoda jest prawidłowa tylko dla aplikacji Windows Presentation Foundation, które mogą być hostowane w przeglądarce sieci Web (to znaczy, zdefiniuj ich manifesty wdrożenia `hostInBrowser` — element XML)."
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle Execute ();
    parameters: []
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "<xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> Odpowiadający uruchomionej aplikacji."
  overload: System.Deployment.Application.InPlaceHostingManager.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  id: GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Pobiera manifest wdrażania [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacji w tle i wywołuje zdarzenie po operacji została ukończona lub wystąpił błąd."
  remarks: "Aby otrzymać powiadomienie o po zakończeniu wykonywania tego zdarzenia, utworzyć programu obsługi zdarzeń dla <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>zdarzeń.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Jeśli to zdarzenie jest wywoływane, a błąd nie zostanie zgłoszony przez <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, następnie należy wywołać <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>można zweryfikować, że aplikacja będzie mieć uprawnienia do uruchamiania na komputerze lokalnym.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> </xref:System.Deployment.Application.GetManifestCompletedEventArgs>"
  example:
  - "The following code examples demonstrate how to call the GetManifestAsync method. The handler for the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]  \n  \n [!code-cs[System.Deployment.Application.InPlaceHostingManager#4](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#4)]"
  syntax:
    content: public void GetManifestAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  id: GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Występuje, gdy w manifeście rozmieszczenia została pobrana na komputer lokalny."
  remarks: "Użyj <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>Właściwość <xref:System.Deployment.Application.GetManifestCompletedEventArgs>Aby sprawdzić, czy <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>została ukończona pomyślnie i został zwrócony błąd.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> </xref:System.Deployment.Application.GetManifestCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Jeśli <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>ma wartość null, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>zakończyła się pomyślnie, a można wywołać <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> </xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code examples demonstrate how to call the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> method. The handler for the GetManifestCompleted event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs> GetManifestCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  id: UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Usuwa wcześniej zainstalowanych składników zdefiniowanych przez użytkownika aplikacji."
  syntax:
    content: public static void UninstallCustomAddIn (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "Ciąg, który zawiera identyfikator subskrypcji, co oznacza dodatek do usunięcia."
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subscriptionId</code>nie jest tożsamością ważnej subskrypcji lub nie zawiera nazwy, token klucza publicznego, architektury procesora i numer wersji."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subscriptionId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  id: UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Usuwa [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacja, która zawiera &lt;customUX&gt; elementu."
  remarks: "This method uninstalls a previously installed [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application that uses the `<customUX>` element in the [\\&lt;entryPoint\\&gt; Element](../Topic/%3CentryPoint%3E%20Element%20\\(ClickOnce%20Application\\).md).  \n  \n Custom installers that do not create an Add or Remove Programs entry for the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application must store the subscription identifier found in the <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> property during installation."
  syntax:
    content: public static void UninstallCustomUXApplication (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "Ciąg zawierający identyfikator subskrypcji, która wskazuje [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplikacji do usunięcia."
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
- uid: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadApplicationCompletedEventArgs>
  nameWithType: EventHandler<DownloadApplicationCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadApplicationCompletedEventArgs
    name: DownloadApplicationCompletedEventArgs
    nameWithType: DownloadApplicationCompletedEventArgs
    fullName: DownloadApplicationCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
- uid: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadProgressChangedEventArgs>
  nameWithType: EventHandler<DownloadProgressChangedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: DownloadProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
- uid: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<GetManifestCompletedEventArgs>
  nameWithType: EventHandler<GetManifestCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.GetManifestCompletedEventArgs
    name: GetManifestCompletedEventArgs
    nameWithType: GetManifestCompletedEventArgs
    fullName: GetManifestCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager.InPlaceHostingManager
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync
  nameWithType: InPlaceHostingManager.CancelAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose
  nameWithType: InPlaceHostingManager.Dispose
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Execute*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute
  nameWithType: InPlaceHostingManager.Execute
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync
  nameWithType: InPlaceHostingManager.GetManifestAsync
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication
