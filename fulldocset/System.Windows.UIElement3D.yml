### YamlMime:ManagedReference
items:
- uid: System.Windows.UIElement3D
  id: UIElement3D
  children:
  - System.Windows.UIElement3D.#ctor
  - System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.AllowDrop
  - System.Windows.UIElement3D.AllowDropProperty
  - System.Windows.UIElement3D.AreAnyTouchesCaptured
  - System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement3D.AreAnyTouchesOver
  - System.Windows.UIElement3D.AreAnyTouchesOverProperty
  - System.Windows.UIElement3D.CaptureMouse
  - System.Windows.UIElement3D.CaptureStylus
  - System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement3D.CommandBindings
  - System.Windows.UIElement3D.DragEnter
  - System.Windows.UIElement3D.DragEnterEvent
  - System.Windows.UIElement3D.DragLeave
  - System.Windows.UIElement3D.DragLeaveEvent
  - System.Windows.UIElement3D.DragOver
  - System.Windows.UIElement3D.DragOverEvent
  - System.Windows.UIElement3D.Drop
  - System.Windows.UIElement3D.DropEvent
  - System.Windows.UIElement3D.Focus
  - System.Windows.UIElement3D.Focusable
  - System.Windows.UIElement3D.FocusableChanged
  - System.Windows.UIElement3D.FocusableProperty
  - System.Windows.UIElement3D.GetUIParentCore
  - System.Windows.UIElement3D.GiveFeedback
  - System.Windows.UIElement3D.GiveFeedbackEvent
  - System.Windows.UIElement3D.GotFocus
  - System.Windows.UIElement3D.GotFocusEvent
  - System.Windows.UIElement3D.GotKeyboardFocus
  - System.Windows.UIElement3D.GotKeyboardFocusEvent
  - System.Windows.UIElement3D.GotMouseCapture
  - System.Windows.UIElement3D.GotMouseCaptureEvent
  - System.Windows.UIElement3D.GotStylusCapture
  - System.Windows.UIElement3D.GotStylusCaptureEvent
  - System.Windows.UIElement3D.GotTouchCapture
  - System.Windows.UIElement3D.GotTouchCaptureEvent
  - System.Windows.UIElement3D.InputBindings
  - System.Windows.UIElement3D.InvalidateModel
  - System.Windows.UIElement3D.IsEnabled
  - System.Windows.UIElement3D.IsEnabledChanged
  - System.Windows.UIElement3D.IsEnabledCore
  - System.Windows.UIElement3D.IsEnabledProperty
  - System.Windows.UIElement3D.IsFocused
  - System.Windows.UIElement3D.IsFocusedProperty
  - System.Windows.UIElement3D.IsHitTestVisible
  - System.Windows.UIElement3D.IsHitTestVisibleChanged
  - System.Windows.UIElement3D.IsHitTestVisibleProperty
  - System.Windows.UIElement3D.IsInputMethodEnabled
  - System.Windows.UIElement3D.IsKeyboardFocused
  - System.Windows.UIElement3D.IsKeyboardFocusedChanged
  - System.Windows.UIElement3D.IsKeyboardFocusedProperty
  - System.Windows.UIElement3D.IsKeyboardFocusWithin
  - System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement3D.IsMouseCaptured
  - System.Windows.UIElement3D.IsMouseCapturedChanged
  - System.Windows.UIElement3D.IsMouseCapturedProperty
  - System.Windows.UIElement3D.IsMouseCaptureWithin
  - System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  - System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  - System.Windows.UIElement3D.IsMouseDirectlyOver
  - System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  - System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  - System.Windows.UIElement3D.IsMouseOver
  - System.Windows.UIElement3D.IsMouseOverProperty
  - System.Windows.UIElement3D.IsStylusCaptured
  - System.Windows.UIElement3D.IsStylusCapturedChanged
  - System.Windows.UIElement3D.IsStylusCapturedProperty
  - System.Windows.UIElement3D.IsStylusCaptureWithin
  - System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  - System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  - System.Windows.UIElement3D.IsStylusDirectlyOver
  - System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  - System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  - System.Windows.UIElement3D.IsStylusOver
  - System.Windows.UIElement3D.IsStylusOverProperty
  - System.Windows.UIElement3D.IsVisible
  - System.Windows.UIElement3D.IsVisibleChanged
  - System.Windows.UIElement3D.IsVisibleProperty
  - System.Windows.UIElement3D.KeyDown
  - System.Windows.UIElement3D.KeyDownEvent
  - System.Windows.UIElement3D.KeyUp
  - System.Windows.UIElement3D.KeyUpEvent
  - System.Windows.UIElement3D.LostFocus
  - System.Windows.UIElement3D.LostFocusEvent
  - System.Windows.UIElement3D.LostKeyboardFocus
  - System.Windows.UIElement3D.LostKeyboardFocusEvent
  - System.Windows.UIElement3D.LostMouseCapture
  - System.Windows.UIElement3D.LostMouseCaptureEvent
  - System.Windows.UIElement3D.LostStylusCapture
  - System.Windows.UIElement3D.LostStylusCaptureEvent
  - System.Windows.UIElement3D.LostTouchCapture
  - System.Windows.UIElement3D.LostTouchCaptureEvent
  - System.Windows.UIElement3D.MouseDown
  - System.Windows.UIElement3D.MouseDownEvent
  - System.Windows.UIElement3D.MouseEnter
  - System.Windows.UIElement3D.MouseEnterEvent
  - System.Windows.UIElement3D.MouseLeave
  - System.Windows.UIElement3D.MouseLeaveEvent
  - System.Windows.UIElement3D.MouseLeftButtonDown
  - System.Windows.UIElement3D.MouseLeftButtonDownEvent
  - System.Windows.UIElement3D.MouseLeftButtonUp
  - System.Windows.UIElement3D.MouseLeftButtonUpEvent
  - System.Windows.UIElement3D.MouseMove
  - System.Windows.UIElement3D.MouseMoveEvent
  - System.Windows.UIElement3D.MouseRightButtonDown
  - System.Windows.UIElement3D.MouseRightButtonDownEvent
  - System.Windows.UIElement3D.MouseRightButtonUp
  - System.Windows.UIElement3D.MouseRightButtonUpEvent
  - System.Windows.UIElement3D.MouseUp
  - System.Windows.UIElement3D.MouseUpEvent
  - System.Windows.UIElement3D.MouseWheel
  - System.Windows.UIElement3D.MouseWheelEvent
  - System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.UIElement3D.OnCreateAutomationPeer
  - System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnUpdateModel
  - System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.UIElement3D.PreviewDragEnter
  - System.Windows.UIElement3D.PreviewDragEnterEvent
  - System.Windows.UIElement3D.PreviewDragLeave
  - System.Windows.UIElement3D.PreviewDragLeaveEvent
  - System.Windows.UIElement3D.PreviewDragOver
  - System.Windows.UIElement3D.PreviewDragOverEvent
  - System.Windows.UIElement3D.PreviewDrop
  - System.Windows.UIElement3D.PreviewDropEvent
  - System.Windows.UIElement3D.PreviewGiveFeedback
  - System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  - System.Windows.UIElement3D.PreviewGotKeyboardFocus
  - System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement3D.PreviewKeyDown
  - System.Windows.UIElement3D.PreviewKeyDownEvent
  - System.Windows.UIElement3D.PreviewKeyUp
  - System.Windows.UIElement3D.PreviewKeyUpEvent
  - System.Windows.UIElement3D.PreviewLostKeyboardFocus
  - System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement3D.PreviewMouseDown
  - System.Windows.UIElement3D.PreviewMouseDownEvent
  - System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  - System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  - System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement3D.PreviewMouseMove
  - System.Windows.UIElement3D.PreviewMouseMoveEvent
  - System.Windows.UIElement3D.PreviewMouseRightButtonDown
  - System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement3D.PreviewMouseRightButtonUp
  - System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement3D.PreviewMouseUp
  - System.Windows.UIElement3D.PreviewMouseUpEvent
  - System.Windows.UIElement3D.PreviewMouseWheel
  - System.Windows.UIElement3D.PreviewMouseWheelEvent
  - System.Windows.UIElement3D.PreviewQueryContinueDrag
  - System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  - System.Windows.UIElement3D.PreviewStylusButtonDown
  - System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  - System.Windows.UIElement3D.PreviewStylusButtonUp
  - System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  - System.Windows.UIElement3D.PreviewStylusDown
  - System.Windows.UIElement3D.PreviewStylusDownEvent
  - System.Windows.UIElement3D.PreviewStylusInAirMove
  - System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement3D.PreviewStylusInRange
  - System.Windows.UIElement3D.PreviewStylusInRangeEvent
  - System.Windows.UIElement3D.PreviewStylusMove
  - System.Windows.UIElement3D.PreviewStylusMoveEvent
  - System.Windows.UIElement3D.PreviewStylusOutOfRange
  - System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement3D.PreviewStylusSystemGesture
  - System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement3D.PreviewStylusUp
  - System.Windows.UIElement3D.PreviewStylusUpEvent
  - System.Windows.UIElement3D.PreviewTextInput
  - System.Windows.UIElement3D.PreviewTextInputEvent
  - System.Windows.UIElement3D.PreviewTouchDown
  - System.Windows.UIElement3D.PreviewTouchDownEvent
  - System.Windows.UIElement3D.PreviewTouchMove
  - System.Windows.UIElement3D.PreviewTouchMoveEvent
  - System.Windows.UIElement3D.PreviewTouchUp
  - System.Windows.UIElement3D.PreviewTouchUpEvent
  - System.Windows.UIElement3D.QueryContinueDrag
  - System.Windows.UIElement3D.QueryContinueDragEvent
  - System.Windows.UIElement3D.QueryCursor
  - System.Windows.UIElement3D.QueryCursorEvent
  - System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.ReleaseAllTouchCaptures
  - System.Windows.UIElement3D.ReleaseMouseCapture
  - System.Windows.UIElement3D.ReleaseStylusCapture
  - System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement3D.ShouldSerializeCommandBindings
  - System.Windows.UIElement3D.ShouldSerializeInputBindings
  - System.Windows.UIElement3D.StylusButtonDown
  - System.Windows.UIElement3D.StylusButtonDownEvent
  - System.Windows.UIElement3D.StylusButtonUp
  - System.Windows.UIElement3D.StylusButtonUpEvent
  - System.Windows.UIElement3D.StylusDown
  - System.Windows.UIElement3D.StylusDownEvent
  - System.Windows.UIElement3D.StylusEnter
  - System.Windows.UIElement3D.StylusEnterEvent
  - System.Windows.UIElement3D.StylusInAirMove
  - System.Windows.UIElement3D.StylusInAirMoveEvent
  - System.Windows.UIElement3D.StylusInRange
  - System.Windows.UIElement3D.StylusInRangeEvent
  - System.Windows.UIElement3D.StylusLeave
  - System.Windows.UIElement3D.StylusLeaveEvent
  - System.Windows.UIElement3D.StylusMove
  - System.Windows.UIElement3D.StylusMoveEvent
  - System.Windows.UIElement3D.StylusOutOfRange
  - System.Windows.UIElement3D.StylusOutOfRangeEvent
  - System.Windows.UIElement3D.StylusSystemGesture
  - System.Windows.UIElement3D.StylusSystemGestureEvent
  - System.Windows.UIElement3D.StylusUp
  - System.Windows.UIElement3D.StylusUpEvent
  - System.Windows.UIElement3D.TextInput
  - System.Windows.UIElement3D.TextInputEvent
  - System.Windows.UIElement3D.TouchDown
  - System.Windows.UIElement3D.TouchDownEvent
  - System.Windows.UIElement3D.TouchEnter
  - System.Windows.UIElement3D.TouchEnterEvent
  - System.Windows.UIElement3D.TouchesCaptured
  - System.Windows.UIElement3D.TouchesCapturedWithin
  - System.Windows.UIElement3D.TouchesDirectlyOver
  - System.Windows.UIElement3D.TouchesOver
  - System.Windows.UIElement3D.TouchLeave
  - System.Windows.UIElement3D.TouchLeaveEvent
  - System.Windows.UIElement3D.TouchMove
  - System.Windows.UIElement3D.TouchMoveEvent
  - System.Windows.UIElement3D.TouchUp
  - System.Windows.UIElement3D.TouchUpEvent
  - System.Windows.UIElement3D.Visibility
  - System.Windows.UIElement3D.VisibilityProperty
  langs:
  - csharp
  name: UIElement3D
  nameWithType: UIElement3D
  fullName: System.Windows.UIElement3D
  type: Class
  summary: "UIElement3D jest klasą podstawową dla implementacji poziomu core WPF opierając się na [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] elementów i właściwości podstawowych prezentacji."
  remarks: "UIElement3D jest abstrakcyjna klasa podstawowa, z którego mogą dziedziczyć klasy do reprezentowania określonych elementów 3D.       Większość zachowanie danych wejściowych, koncentrujących się i obsługi zdarzeń dla elementów 3D ogólnie jest zdefiniowany w klasie UIElement3D. W tym zdarzenia klawiatura, mysz i wprowadzania danych piórem i właściwości powiązanych stanu. Wiele z tych zdarzeń jest kierowane zdarzenia i wiele zdarzeń związanych z danych wejściowych ma zarówno propagacji routingu wersji, a także tunelowania wersji zdarzenia. Zdarzenia te pary zazwyczaj są to zdarzenia największe znaczenie dla autorów formantu.       Zawiera również UIElement3D [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] dotyczących [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] modelu zdarzeń, łącznie z metod, które może wiązać się z określonych kierowane zdarzenia, które pochodzą z wystąpienia elementu.       UIElement3D ma następujące możliwości, w szczególności zdefiniowanych przez klasę UIElement3D:-mogą odpowiadać na dane wejściowe użytkownika (włącznie z kontrolą wysyłania danych wejściowych za pośrednictwem obsługi zdarzeń routingu lub routingu poleceń).      -Podnieść kierowane zdarzenia, używane podczas podróży trasę przy użyciu drzewa logicznego elementu.      > [!IMPORTANT] > <xref:System.Windows.UIElement3D.Visibility%2A>obsługi wszystkich danych wejściowych wpływa na stanu przez ten element.</xref:System.Windows.UIElement3D.Visibility%2A> Elementy, które nie są widoczne nie uczestniczą w testowania trafień i nie otrzymują zdarzenia wejściowe, nawet jeśli wskaźnik myszy znajduje się nad granicami gdy jest element jeśli były widoczne.       W odróżnieniu od <xref:System.Windows.UIElement>klasy, klasy UIElement3D nie ma układ.</xref:System.Windows.UIElement> W związku z tym nie ma klasy UIElement3D **miary** lub **Rozmieść** metody.       Klasa, która jest pochodną UIElement3D i obsługuje swoją własną kolekcję obiektów <xref:System.Windows.Media.Media3D.Visual3D>przez zastąpienie <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A>i <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A>nadal należy przekazać nowe <xref:System.Windows.Media.Media3D.Visual3D>obiekty do <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.</xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A> </xref:System.Windows.Media.Media3D.Visual3D> </xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> </xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> </xref:System.Windows.Media.Media3D.Visual3D>       UIElement3D wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to derive from the UIElement3D class to create a `Sphere` class:  \n  \n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \n  \n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044)."
  syntax:
    content: 'public abstract class UIElement3D : System.Windows.Media.Media3D.Visual3D, System.Windows.IInputElement'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Media3D.Visual3D
  implements:
  - System.Windows.IInputElement
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Media.Media3D.Visual3D.AddVisual3DChild(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Media3D.Visual3D.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)
  - System.Windows.Media.Media3D.Visual3D.HasAnimatedProperties
  - System.Windows.Media.Media3D.Visual3D.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.Transform
  - System.Windows.Media.Media3D.Visual3D.TransformProperty
  - System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Media3D.Visual3D.TransformToDescendant(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount
  - System.Windows.Media.Media3D.Visual3D.Visual3DModel
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.UIElement3D.#ctor
  id: '#ctor'
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: UIElement3D()
  nameWithType: UIElement3D.UIElement3D()
  fullName: System.Windows.UIElement3D.UIElement3D()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.UIElement3D&quot;> </xref> klasy."
  remarks: "UIElement3D wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected UIElement3D ();
    parameters: []
  overload: System.Windows.UIElement3D.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu."
  remarks: "Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek. Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane. W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.       Ta metoda używane zwykle do implementacji metody dostępu &quot;add&quot;, dla [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.       AddHandler wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Identyfikator kierowanego zdarzenia mają być obsługiwane."
    - id: handler
      type: System.Delegate
      description: "Odwołanie do implementacji programu obsługi."
  overload: System.Windows.UIElement3D.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu. Określ <code> handledEventsToo </code> jako <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> mają podanego programu obsługi, można wywołać dla kierowanego zdarzenia, który już został oznaczony jako obsługiwany przez inny element wzdłuż trasy zdarzenia."
  remarks: "Przetwarzanie zdarzenia wejściowe niskiego poziomu w praktycznym sposobem jest złożonym zadaniem. Wiele formantów implementuje zachowanie, gdzie określone zdarzenie zostanie oznaczony jako obsługiwany i zastępuje inne zdarzenie bardziej intuicyjne. Ogólnie rzecz biorąc formantu tylko oznaczy zdarzenia wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projektu dla w ten sposób. W niektórych scenariuszach te cele projektu może być wymaga z konkretnym obsługi zdarzenia wejściowego. Jest w tych scenariuszach tego rejestrowanie programów obsługi z `handledEventsToo` jako `true` jest odpowiedni. Jednak użytkownik nie należy tego robić regularnie. Wywoływanie programy obsługi zdarzeń w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwane będzie skomplikować własne przetwarzania logiki zdarzeń aplikacji. W przypadku obsługi logiki znaczny spadek wydajności może zostać wyświetlony. Należy zarezerwować stosowania Dołączanie programów obsługi zdarzeń już obsługiwane w sytuacji, gdy użytkownik ma już odnaleziony podczas procesu projektowania, że niektóre kontrolki są obsługi zdarzeń, które nadal mają być obsługiwane z logiką aplikacji.       Inny technika unikanie klasy zachowania niektórych kombinacji zdarzenie kontroli obsługi polega na użyciu zamiast podglądu tego zdarzenia. Na przykład jeśli <xref:System.Windows.UIElement3D.MouseLeftButtonDown>jest oznaczony jako obsługiwany przez Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>zamiast tego.</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> </xref:System.Windows.UIElement3D.MouseLeftButtonDown>       Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek. Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane. W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.       Ta metoda używane zwykle do implementacji metody dostępu &quot;add&quot;, dla [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.       AddHandler wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Identyfikator kierowanego zdarzenia mają być obsługiwane."
    - id: handler
      type: System.Delegate
      description: "Odwołanie do implementacji programu obsługi."
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet w przypadku, gdy zaznaczono kierowanego zdarzenia przetwarzanych w jego dane zdarzeń; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> rejestrowania programu obsługi z domyślnego warunku, że nie zostanie wywołany, jeśli kierowanego zdarzenia jest już oznaczona obsłużone.       Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Nie rutynowo Pytaj do rehandle kierowanego zdarzenia. Aby uzyskać więcej informacji zobacz uwagi."
  overload: System.Windows.UIElement3D.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  id: AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Dodaje obsługi do określonego <xref href=&quot;System.Windows.EventRoute&quot;> </xref> dla bieżącego <xref href=&quot;System.Windows.UIElement3D&quot;> </xref> kolekcję procedur obsługi zdarzeń."
  remarks: "Tej metody mogą być używane przez elementy zawartości hosta (albo tymi, które implementują <xref:System.Windows.IContentHost>lub nie) można dodać obsługi elementów podrzędnych do <xref:System.Windows.EventRoute>.</xref:System.Windows.EventRoute> </xref:System.Windows.IContentHost>       AddToEventRoute wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);
    parameters:
    - id: route
      type: System.Windows.EventRoute
      description: "Programy obsługi są dodawane do trasy zdarzenia."
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Dane zdarzenia, które służy do dodawania obsługi. Ta metoda używa <xref:System.Windows.RoutedEventArgs.RoutedEvent*>Właściwości danych zdarzeń na potrzeby obsługi.</xref:System.Windows.RoutedEventArgs.RoutedEvent*>"
  overload: System.Windows.UIElement3D.AddToEventRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AllowDrop
  id: AllowDrop
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AllowDrop
  nameWithType: UIElement3D.AllowDrop
  fullName: System.Windows.UIElement3D.AllowDrop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera lub ustawia wartość wskazującą, czy ten element może być użyty jako element docelowy operacji przeciągania i upuszczania."
  remarks: "Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo AllowDrop `true`. Poza tego ustawienia podstawowe zachowanie przeciągania i upuszczania całkowicie zależy od implementacji i nie jest zdefiniowany przez <xref:System.Windows.UIElement3D>lub inne klasy podstawowej elementu</xref:System.Windows.UIElement3D> Niektóre formanty, na przykład <xref:System.Windows.Controls.RichTextBox>, ma domyślne zachowanie.</xref:System.Windows.Controls.RichTextBox> Aby uzyskać więcej informacji dotyczących operacji przeciągania i upuszczania, zobacz [przeciągania i upuszczania omówienie](~/add/includes/ajax-current-ext-md.md).       AllowDrop wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_AllowDrop&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.AllowDropProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.AllowDropProperty>"
  syntax:
    content: public bool AllowDrop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.AllowDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AllowDropProperty
  id: AllowDropProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AllowDropProperty
  nameWithType: UIElement3D.AllowDropProperty
  fullName: System.Windows.UIElement3D.AllowDropProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.AllowDrop*>Właściwości zależności.</xref:System.Windows.UIElement3D.AllowDrop*>"
  remarks: "AllowDropProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty AllowDropProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured
  id: AreAnyTouchesCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCaptured
  nameWithType: UIElement3D.AreAnyTouchesCaptured
  fullName: System.Windows.UIElement3D.AreAnyTouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu."
  syntax:
    content: public bool AreAnyTouchesCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli co najmniej jeden touch są przechwytywane do tego elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.AreAnyTouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  id: AreAnyTouchesCapturedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCapturedProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*>Właściwości zależności.</xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  id: AreAnyTouchesCapturedWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym."
  syntax:
    content: public bool AreAnyTouchesCapturedWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  id: AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*>Właściwości zależności.</xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  id: AreAnyTouchesDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy naciśnięciu dotykowego co najmniej jeden nad tym elementem."
  syntax:
    content: public bool AreAnyTouchesDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli naciśnięciu dotykowego co najmniej jeden nad tym elementem; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  id: AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*>Właściwości zależności.</xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesOver
  id: AreAnyTouchesOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesOver
  nameWithType: UIElement3D.AreAnyTouchesOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy co najmniej jeden touch naciśnięciu za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym."
  syntax:
    content: public bool AreAnyTouchesOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli co najmniej jeden touch jest wciśnięty za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.AreAnyTouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesOverProperty
  id: AreAnyTouchesOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesOverProperty
  nameWithType: UIElement3D.AreAnyTouchesOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.AreAnyTouchesOver*>Właściwości zależności.</xref:System.Windows.UIElement3D.AreAnyTouchesOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.CaptureMouse
  id: CaptureMouse
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CaptureMouse()
  nameWithType: UIElement3D.CaptureMouse()
  fullName: System.Windows.UIElement3D.CaptureMouse()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Próbuje wymusić przechwytywanie myszy do tego elementu."
  remarks: "Można przechwycić elementu musi być włączony. Sprawdź, czy <xref:System.Windows.UIElement3D.IsEnabled%2A>jest `true` przed wywołaniem CaptureMouse.</xref:System.Windows.UIElement3D.IsEnabled%2A>       Jeśli wywołanie zwraca CaptureMouse `true`, następnie <xref:System.Windows.UIElement3D.IsMouseCaptured%2A>jest również `true`.</xref:System.Windows.UIElement3D.IsMouseCaptured%2A>       Jeśli wywołanie zwraca CaptureMouse `true`, a następnie <xref:System.Windows.UIElement3D.GotMouseCapture>i <xref:System.Windows.UIElement3D.IsMouseCapturedChanged>zdarzenia są generowane, z <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>zdarzeń dane raportowane jako elementu, gdy wywoływana jest metoda CaptureMouse.</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName> </xref:System.Windows.UIElement3D.IsMouseCapturedChanged> </xref:System.Windows.UIElement3D.GotMouseCapture> Jeśli wymusisz przechwytywania może zakłócać Przechwytywanie istniejących — szczególnie w przypadku przechwytywania, które dotyczą przeciągania i upuszczania za pomocą myszy.       Aby wyczyścić przechwytywanie myszy wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName>z `element` podać jako parametr `null`.</xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName>       CaptureMouse wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool CaptureMouse ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pomyślnie przechwyceniu myszy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.CaptureMouse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.CaptureStylus
  id: CaptureStylus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CaptureStylus()
  nameWithType: UIElement3D.CaptureStylus()
  fullName: System.Windows.UIElement3D.CaptureStylus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Próbuje wymusić Przechwytywanie pióra do tego elementu."
  remarks: "Domyślna implementacja oparte na podstawowym domyślnego urządzenia pióro zawsze zwraca `true`. Jednak jeśli rozszerzania wejściowych urządzeń, które implementacji urządzenia system wejściowy jest można tworzyć system pióro alternatywną implementację urządzenia, która może zwracać różne wyniki.       Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, gdy pióro znajduje się poza zakresem jej. Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.       Wywołanie tej metody wymaga podstawowej statycznej <xref:System.Windows.Input.Stylus> <xref:System.Windows.Input.Stylus.Capture%2A>.</xref:System.Windows.Input.Stylus.Capture%2A> — metoda</xref:System.Windows.Input.Stylus> Zachowanie rzeczywistych przechwytywania jest implementowany przez pióro active implementacji urządzenia.       Można przechwycić elementu musi być włączony. Sprawdź, czy <xref:System.Windows.UIElement3D.IsEnabled%2A>jest `true` zwrócić przed wywołaniem CaptureStylus.</xref:System.Windows.UIElement3D.IsEnabled%2A>       Jeśli wywołanie zwraca CaptureStylus `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A>jest również `true`.</xref:System.Windows.UIElement3D.IsStylusCaptured%2A>       CaptureStylus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool CaptureStylus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pomyślnie przechwycenia pióra; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.CaptureStylus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)
  id: CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CaptureTouch(TouchDevice)
  nameWithType: UIElement3D.CaptureTouch(TouchDevice)
  fullName: System.Windows.UIElement3D.CaptureTouch(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Próbuje wymusić przechwytywania touch do tego elementu."
  remarks: "Zwraca CaptureTouch `false` Jeśli <xref:System.Windows.Input.TouchDevice>aktualnie przechwycony do innego elementu.</xref:System.Windows.Input.TouchDevice>       Jeśli zwróci CaptureTouch `true`, a następnie <xref:System.Windows.UIElement3D.GotTouchCapture>zdarzenie jest wywoływane.</xref:System.Windows.UIElement3D.GotTouchCapture>       Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, użyj <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A>— Metoda i określ urządzeń dotykowych do zwolnienia.</xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> Aby zwolnić wszystkie poprawki z tego elementu, użyj <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A>metody.</xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A>"
  syntax:
    content: public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "Urządzenie do przechwytywania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określona touch są przechwytywane do tego elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.CaptureTouch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.UIElement3D.CommandBindings
  id: CommandBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CommandBindings
  nameWithType: UIElement3D.CommandBindings
  fullName: System.Windows.UIElement3D.CommandBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> obiekty skojarzone z tym elementem."
  remarks: "A <xref:System.Windows.Input.CommandBinding>Włącza obsługę określonego polecenia dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeń i procedurami obsługi dołączonymi przez ten element.</xref:System.Windows.Input.CommandBinding>       Inny typowy sposób wypełnić kolekcji CommandBindings jest użycie <xref:System.Windows.Input.CommandManager>metody programowo.</xref:System.Windows.Input.CommandManager>       CommandBindings wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlPropertyElementUsage_CommandBindings&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.CommandBindings>       oneOrMoreCommandBindings  </object.CommandBindings>   </object>   ``` <a name=&quot;xamlValues_CommandBindings&quot;> </a> ## wartości XAML *oneOrMoreCommandBindings* co najmniej jeden <xref:System.Windows.Input.CommandBinding>elementy.</xref:System.Windows.Input.CommandBinding>       Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A>atrybut ustawioną znanych poleceń i ustawić atrybuty dla <xref:System.Windows.Input.CommandBinding.CanExecute>i <xref:System.Windows.Input.CommandBinding.Executed>implementacji programu obsługi.</xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.Command%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.</xref:System.Windows.Input.CommandBinding>"
  syntax:
    content: public System.Windows.Input.CommandBindingCollection CommandBindings { get; }
    return:
      type: System.Windows.Input.CommandBindingCollection
      description: "Kolekcja wszystkich <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> obiektów."
  overload: System.Windows.UIElement3D.CommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragEnter
  id: DragEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragEnter
  nameWithType: UIElement3D.DragEnter
  fullName: System.Windows.UIElement3D.DragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby DragEnter jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń DragEnter są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>       DragEnter wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_DragEnter&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.DragEnterEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDragEnter>.</xref:System.Windows.UIElement3D.PreviewDragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DragEnterEvent>      -Override <xref:System.Windows.UIElement3D.OnDragEnter%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnDragEnter%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragEnterEvent
  id: DragEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragEnterEvent
  nameWithType: UIElement3D.DragEnterEvent
  fullName: System.Windows.UIElement3D.DragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.DragEnter&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       DragEnterEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragLeave
  id: DragLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragLeave
  nameWithType: UIElement3D.DragLeave
  fullName: System.Windows.UIElement3D.DragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby DragLeave jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń DragLeave są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>       DragLeave wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_DragLeave&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.DragLeaveEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDragLeave>.</xref:System.Windows.UIElement3D.PreviewDragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DragLeaveEvent>      -Override <xref:System.Windows.UIElement3D.OnDragLeave%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnDragLeave%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragLeaveEvent
  id: DragLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragLeaveEvent
  nameWithType: UIElement3D.DragLeaveEvent
  fullName: System.Windows.UIElement3D.DragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.DragLeave&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       DragLeaveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragOver
  id: DragOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragOver
  nameWithType: UIElement3D.DragOver
  fullName: System.Windows.UIElement3D.DragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania."
  remarks: "To zdarzenie występuje nawet w przypadku przeciągania pochodzi z granicami elementu. Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest wywoływane również, jak również <xref:System.Windows.UIElement3D.DragEnter>i powiązanych zdarzeń w wersji zapoznawczej.</xref:System.Windows.UIElement3D.DragEnter>       To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby DragOver jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń DragOver są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>       DragOver wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_DragOver&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.DragOverEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDragOver>.</xref:System.Windows.UIElement3D.PreviewDragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DragOverEvent>      -Override <xref:System.Windows.UIElement3D.OnDragOver%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnDragOver%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragOverEvent
  id: DragOverEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragOverEvent
  nameWithType: UIElement3D.DragOverEvent
  fullName: System.Windows.UIElement3D.DragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.DragOver&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       DragOverEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Drop
  id: Drop
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Drop
  nameWithType: UIElement3D.Drop
  fullName: System.Windows.UIElement3D.Drop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=fullName>dołączone zdarzenie dla tej klasy, tak że Wrzutnia to część klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.Drop?displayProperty=fullName> Obsługi zdarzeń, które są dołączane do zdarzeń listy są dołączone do odpowiadającego <xref:System.Windows.DragDrop.Drop?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.Drop?displayProperty=fullName>       Upuść wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_Drop&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.DropEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDrop>.</xref:System.Windows.UIElement3D.PreviewDrop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DropEvent>      -Override <xref:System.Windows.UIElement3D.OnDrop%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnDrop%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler Drop;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DropEvent
  id: DropEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DropEvent
  nameWithType: UIElement3D.DropEvent
  fullName: System.Windows.UIElement3D.DropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.Drop&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       DropEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent DropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Focus
  id: Focus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Focus()
  nameWithType: UIElement3D.Focus()
  fullName: System.Windows.UIElement3D.Focus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Próbuje ustawić logiczny fokus w tym elemencie."
  remarks: "Być focusable, <xref:System.Windows.UIElement3D.Focusable%2A>i <xref:System.Windows.UIElement3D.IsEnabled%2A>muszą być `true`.</xref:System.Windows.UIElement3D.IsEnabled%2A> </xref:System.Windows.UIElement3D.Focusable%2A>       Nawet jeśli element jest obsługa zdarzeń focusable i włączone, w obrębie określonego drzewa, (takie jak w przypadku złożonych kontrolek) może odpowiadać, nie zezwalając fokus, Podgląd zdarzeń fokusu w związku z tym ta metoda zwróci `false`.       Jeśli wywołanie zwraca fokus `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>i <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>są również `true`.</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> </xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>       Jeśli powiązane właściwości nie są jeszcze `true`, gdy zgłaszasz fokus, co najmniej jeden z następujących zdarzeń pojawienia się w następującej kolejności: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>(źródłowego jest nazwa nowego docelowego fokus), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus>(źródłowego jest nazwa nowego docelowego fokus).</xref:System.Windows.UIElement3D.GotKeyboardFocus> </xref:System.Windows.UIElement3D.LostKeyboardFocus> </xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> </xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> </xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> </xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>       Aby dla tego wywołania do pomyślnego niektórych innego elementu w aplikacji niezbędnych do wcześniej fokus.       Fokus na ogół podlega dwa oddzielne pojęcia: Klawiatura fokus i logiczny fokus, które nie zawsze są identyczne. Ta metoda ustawia logiczny fokus, a także próbuje ustawić fokus klawiatury. Nie ma programowy sposób ustawić fokus klawiatury w szczególności dzieje się z powodu danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       Fokus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Focus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zarówno logicznych i ustawiono fokus klawiatury do tego elementu; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> jeśli tylko logiczny fokus został ustawiony."
  overload: System.Windows.UIElement3D.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Focusable
  id: Focusable
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Focusable
  nameWithType: UIElement3D.Focusable
  fullName: System.Windows.UIElement3D.Focusable
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus."
  remarks: "Tylko element ukierunkowanych odbiera klawiatury.       Focusable jest [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] metody dostępu właściwości dla co to jest w rzeczywistości właściwości zależności. Ta właściwość zależności określonego dość często ma wartość jawnego &quot;domyślną&quot; ustawione inaczej w klasach element pochodny. Częstą przyczyną w jeden z dwóch sposobów: — właściwość zależności jest dziedziczona przez określonej klasy pochodnej, ale tej klasy pochodnej zastępuje metadane właściwości zależności i zmienia wartość domyślna właściwości.       Focusable wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_Focusable&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.FocusableProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.FocusableProperty>"
  syntax:
    content: public bool Focusable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element jest focusable; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, ale zobacz uwagi."
  overload: System.Windows.UIElement3D.Focusable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.FocusableChanged
  id: FocusableChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: FocusableChanged
  nameWithType: UIElement3D.FocusableChanged
  fullName: System.Windows.UIElement3D.FocusableChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.Focusable*>zmiany właściwości.</xref:System.Windows.UIElement3D.Focusable*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       FocusableChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.FocusableProperty
  id: FocusableProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: FocusableProperty
  nameWithType: UIElement3D.FocusableProperty
  fullName: System.Windows.UIElement3D.FocusableProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.Focusable*>Właściwości zależności.</xref:System.Windows.UIElement3D.Focusable*>"
  remarks: "FocusableProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusableProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GetUIParentCore
  id: GetUIParentCore
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GetUIParentCore()
  nameWithType: UIElement3D.GetUIParentCore()
  fullName: System.Windows.UIElement3D.GetUIParentCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Po przesłonięciu w klasie pochodnej zwraca zamiast [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] nadrzędnego dla tego elementu, jeśli wizualny obiekt nadrzędny nie istnieje."
  remarks: "Zwraca wirtualnego Domyślna implementacja tej metody `null`. <xref:System.Windows.FrameworkElement>udostępnia implementację praktyczne.</xref:System.Windows.FrameworkElement>       Alternatywne nadrzędnych są używane do routingu zdarzeń, w przypadkach, w którym element tworzy alternatywnych nadrzędna struktura tak, aby jego zdarzenia są routingiem w sposób zapewniający diverges od standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego lub w dół w strategii routingu podglądu.       GetUIParentCore wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected System.Windows.DependencyObject GetUIParentCore ();
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: "Obiekt, jeśli połączenie alternatywny nadrzędny do raportu jest implementacja klasy pochodnej."
  overload: System.Windows.UIElement3D.GetUIParentCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GiveFeedback
  id: GiveFeedback
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GiveFeedback
  nameWithType: UIElement3D.GiveFeedback
  fullName: System.Windows.UIElement3D.GiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element."
  remarks: "Zdarzenie GiveFeedback umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania. Wizualny wzmacnia, że operacja przeciągania i upuszczania jest w toku.       To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby GiveFeedback jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń GiveFeedback są dołączone do odpowiadającego <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>       GiveFeedback wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_GiveFeedback&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.GiveFeedbackEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.GiveFeedbackEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.</xref:System.Windows.UIElement3D.PreviewGiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.UIElement3D.GiveFeedbackEvent>      -Override <xref:System.Windows.UIElement3D.OnGiveFeedback%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnGiveFeedback%2A>"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler GiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GiveFeedbackEvent
  id: GiveFeedbackEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GiveFeedbackEvent
  nameWithType: UIElement3D.GiveFeedbackEvent
  fullName: System.Windows.UIElement3D.GiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.GiveFeedback&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       GiveFeedbackEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotFocus
  id: GotFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotFocus
  nameWithType: UIElement3D.GotFocus
  fullName: System.Windows.UIElement3D.GotFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element pobiera fokus logiczny."
  remarks: "Logiczny fokus różni się od fokus klawiatury, jeśli celowo wymusza fokus przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie. W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.UIElement3D.Focus%2A>Metoda jest wywoływana nadal pobiera fokus logiczny.</xref:System.Windows.UIElement3D.Focus%2A>       Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsFocused%2A>Właściwości elementu w trasie została zmieniona z `false` do `true`.</xref:System.Windows.UIElement3D.IsFocused%2A>       Ponieważ to zdarzenie używa propagacji routingu, element, który otrzymuje fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       GotFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_GotFocus&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.GotFocusEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.RoutedEventHandler>|      — Nie ma żadnego odpowiednie zdarzenia tunelowania.</xref:System.Windows.RoutedEventHandler> </xref:System.Windows.UIElement3D.GotFocusEvent>      -Override <xref:System.Windows.UIElement3D.OnGotFocus%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnGotFocus%2A>"
  syntax:
    content: public event System.Windows.RoutedEventHandler GotFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: UIElement3D.GotFocusEvent
  fullName: System.Windows.UIElement3D.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.GotFocus&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       GotFocusEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotKeyboardFocus
  id: GotKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotKeyboardFocus
  nameWithType: UIElement3D.GotKeyboardFocus
  fullName: System.Windows.UIElement3D.GotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy klawiatura ma fokus w tym elemencie."
  remarks: "<xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>jest podobne zdarzenia, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; Zdarzenie GotKeyboardFocus jest wywoływane w tych samych okolicznościach.</xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>       Ponieważ to zdarzenie używa propagacji routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby GotKeyboardFocus jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń GotKeyboardFocus są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>       GotKeyboardFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_GotKeyboardFocus&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.</xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>      -Override <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotKeyboardFocusEvent
  id: GotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotKeyboardFocusEvent
  nameWithType: UIElement3D.GotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.GotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.GotKeyboardFocus&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       GotKeyboardFocusEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotMouseCapture
  id: GotMouseCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotMouseCapture
  nameWithType: UIElement3D.GotMouseCapture
  fullName: System.Windows.UIElement3D.GotMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element przechwytuje mysz."
  remarks: "Gdy element przechwytuje mysz, otrzymuje myszą nawet wtedy, gdy wskaźnik myszy znajduje się poza zakresem jej. Mysz zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.       Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>zdarzeń przechwytywania danych, aby określić rzeczywistego elementu, który ma myszy.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby GotMouseCapture jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń GotMouseCapture są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>       GotMouseCapture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_GotMouseCapture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.MouseEventHandler>|      — Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.GotMouseCaptureEvent>      -Override <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnGotMouseCapture%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler GotMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotMouseCaptureEvent
  id: GotMouseCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotMouseCaptureEvent
  nameWithType: UIElement3D.GotMouseCaptureEvent
  fullName: System.Windows.UIElement3D.GotMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.GotMouseCapture&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       GotMouseCaptureEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotStylusCapture
  id: GotStylusCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotStylusCapture
  nameWithType: UIElement3D.GotStylusCapture
  fullName: System.Windows.UIElement3D.GotStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element przechwytuje pióro."
  remarks: "Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej. Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.       Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w danych zdarzeń, aby określić rzeczywistego elementu, który ma przechwytywania.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, tak aby GotStylusCapture jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> Programy obsługi zdarzeń, które są dołączone do zdarzeń GotStylusCapture są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>       GotStylusCapture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_GotStylusCapture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      — Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.GotStylusCaptureEvent>      -Override <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnGotStylusCapture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler GotStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotStylusCaptureEvent
  id: GotStylusCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotStylusCaptureEvent
  nameWithType: UIElement3D.GotStylusCaptureEvent
  fullName: System.Windows.UIElement3D.GotStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.GotStylusCapture&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       GotStylusCaptureEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotTouchCapture
  id: GotTouchCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotTouchCapture
  nameWithType: UIElement3D.GotTouchCapture
  fullName: System.Windows.UIElement3D.GotTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy touch są przechwytywane do tego elementu."
  remarks: "<a name=&quot;routedEventInfo_GotTouchCapture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>|      -Override <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.GotTouchCaptureEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> GotTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotTouchCaptureEvent
  id: GotTouchCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotTouchCaptureEvent
  nameWithType: UIElement3D.GotTouchCaptureEvent
  fullName: System.Windows.UIElement3D.GotTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.GotTouchCapture&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.InputBindings
  id: InputBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: InputBindings
  nameWithType: UIElement3D.InputBindings
  fullName: System.Windows.UIElement3D.InputBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera kolekcję powiązań wejściowych skojarzonych z tym elementem."
  remarks: "Powiązania wejściowe obsługuje powiązanie polecenia, aby urządzenia wejściowe. Na przykład <xref:System.Windows.Input.MouseBinding>powiązań, które obejmują właściwości dotyczące urządzeń myszy wejściowych implements.</xref:System.Windows.Input.MouseBinding>       Zawiera kolekcję powiązań wejściowych zarówno powiązania wejściowe, które odnoszą się do typu, jak i powiązania wejściowe, które są zadeklarowane w wystąpieniu.       Powiązaną właściwość <xref:System.Windows.UIElement3D.CommandBindings%2A>, utrzymuje kolekcję powiązań polecenia.</xref:System.Windows.UIElement3D.CommandBindings%2A> Te różnią się od powiązania wejściowe reprezentują następny poziom w dół przetwarzania polecenia - akcje, które są powiązane z znanych poleceń.       InputBindings wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlPropertyElementUsage_InputBindings&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.InputBindings>       oneOrMoreInputBindings  </object.InputBindings>   </object>   ``` <a name=&quot;xamlValues_InputBindings&quot;> </a> ## wartości XAML *oneOrMoreInputBindings* co najmniej jeden <xref:System.Windows.Input.InputBinding>elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding>lub <xref:System.Windows.Input.MouseBinding>klas pochodnych).</xref:System.Windows.Input.MouseBinding> </xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.InputBinding>       Każdy z tych powinien mieć <xref:System.Windows.Input.InputBinding.Command%2A>i <xref:System.Windows.Input.InputBinding.Gesture%2A>atrybutu.</xref:System.Windows.Input.InputBinding.Gesture%2A> </xref:System.Windows.Input.InputBinding.Command%2A>"
  syntax:
    content: public System.Windows.Input.InputBindingCollection InputBindings { get; }
    return:
      type: System.Windows.Input.InputBindingCollection
      description: "Kolekcję powiązań wejściowych."
  overload: System.Windows.UIElement3D.InputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.InvalidateModel
  id: InvalidateModel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: InvalidateModel()
  nameWithType: UIElement3D.InvalidateModel()
  fullName: System.Windows.UIElement3D.InvalidateModel()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Unieważnia modelu, który reprezentuje element."
  remarks: "Gdy klasa wyprowadzona z z <xref:System.Windows.UIElement3D>klasy, można użyć tej metody razem z <xref:System.Windows.UIElement3D.OnUpdateModel%2A>metodę, aby odświeżyć modelu elementu.</xref:System.Windows.UIElement3D.OnUpdateModel%2A> </xref:System.Windows.UIElement3D>       Należy wywołać tę metodę w zaawansowanych scenariuszach. Taki scenariusz zaawansowane jest Jeśli klasa pochodna ma wiele właściwości, które mają wpływ na wygląd i chcesz zaktualizować odpowiedni model tylko raz.       InvalidateModel wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:  \n  \n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \n  \n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044)."
  syntax:
    content: public void InvalidateModel ();
    parameters: []
  overload: System.Windows.UIElement3D.InvalidateModel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabled
  id: IsEnabled
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabled
  nameWithType: UIElement3D.IsEnabled
  fullName: System.Windows.UIElement3D.IsEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]."
  remarks: "Należy pamiętać, że ta właściwość ma wpływ implementacje specyficzne <xref:System.Windows.UIElement3D.IsEnabledCore%2A>na poszczególne elementy, często w czasie wykonywania.</xref:System.Windows.UIElement3D.IsEnabledCore%2A> W związku z tym wymienione w tym miejscu wartość domyślna czasami nie jest skuteczne. Próby Ustaw tę wartość, również zostanie przesłonięta przez wartość zwrócona przez <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.</xref:System.Windows.UIElement3D.IsEnabledCore%2A>       Elementy, które nie są włączone nie uczestniczą w testowania trafień lub fokus i dlatego nie będzie źródła zdarzenia wejściowe.       IsEnabled wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsEnabled&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsEnabledProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsEnabledProperty>"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element jest włączony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabledChanged
  id: IsEnabledChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabledChanged
  nameWithType: UIElement3D.IsEnabledChanged
  fullName: System.Windows.UIElement3D.IsEnabledChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsEnabled*>Właściwość zmiany tego elementu.</xref:System.Windows.UIElement3D.IsEnabled*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsEnabledChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabledCore
  id: IsEnabledCore
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabledCore
  nameWithType: UIElement3D.IsEnabledCore
  fullName: System.Windows.UIElement3D.IsEnabledCore
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość, która jest zwracana wartość <xref:System.Windows.UIElement3D.IsEnabled*>w klasach pochodnych.</xref:System.Windows.UIElement3D.IsEnabled*>"
  remarks: "IsEnabledCore wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool IsEnabledCore { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element jest włączony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsEnabledCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: UIElement3D.IsEnabledProperty
  fullName: System.Windows.UIElement3D.IsEnabledProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsEnabled*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsEnabled*>"
  remarks: "IsEnabledProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsFocused
  id: IsFocused
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsFocused
  nameWithType: UIElement3D.IsFocused
  fullName: System.Windows.UIElement3D.IsFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość, która określa, czy ten element ma logiczny fokus."
  remarks: "Logiczny fokus może się różnić od fokus klawiatury, jeśli aplikacja ma wiele podziałów fokus, takich jak między zawartość menu i pozostałej części aplikacji. W tym scenariuszu fokus klawiatury może zawierać tylko jeden element interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus nadal mogą zachować logiczny fokus. Aby uzyskać więcej informacji dotyczących logiczny fokus, zobacz [omówienie fokus](~/add/includes/ajax-current-ext-md.md).       Nie ustawiaj fokus przez ustawienie dla tej właściwości (jest tylko do odczytu). Typowym zastosowaniem dla tej właściwości jest używać go jako właściwość zależności <xref:System.Windows.Setter>lub <xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger> </xref:System.Windows.Setter> Aby ustawić fokus programowo, wywołaj <xref:System.Windows.UIElement3D.Focus%2A>.</xref:System.Windows.UIElement3D.Focus%2A> Fokus można również ustawić przez akcję użytkownika lub przez implementacje kontroli, które obejmować zachowania przechwytywanie myszy.       IsFocused wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsFocused&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsFocusedProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsFocusedProperty>"
  syntax:
    content: public bool IsFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten element ma logiczny fokus; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsFocusedProperty
  id: IsFocusedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsFocusedProperty
  nameWithType: UIElement3D.IsFocusedProperty
  fullName: System.Windows.UIElement3D.IsFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsFocused*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsFocused*>"
  remarks: "IsFocusedProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsHitTestVisible
  id: IsHitTestVisible
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsHitTestVisible
  nameWithType: UIElement3D.IsHitTestVisible
  fullName: System.Windows.UIElement3D.IsHitTestVisible
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera lub ustawia wartość deklarującą, czy ten element może być zwrócony jako wynik testu trafienia z niektórych części zrenderowanej zawartości."
  remarks: "Efektywna wartość tej właściwości jest wpływ względne położenie trafień testować elementy w drzewie logicznym. Na przykład, jeśli element jest elementem podrzędnym element nie osiągnęła testu widoczne, pozostanie wprowadzenia wartości właściwości w elemencie podrzędnym `false`nawet w przypadku próby lokalnie Ustaw tę wartość. Z tego powodu ważne jest, że użytkownik nie należy ustawiać IsHitTestVisible `false` w formancie połączone chyba, że nie ma żadnych danych lub trafień testowania w tym formancie. Aby uzyskać więcej informacji na temat testowania trafień, zobacz [trafień testowania w warstwie Visual](~/add/includes/ajax-current-ext-md.md).       IsHitTestVisible wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsHitTestVisible&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>"
  syntax:
    content: public bool IsHitTestVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten element może zostać zwrócony jako wynik testu trafienia z co najmniej jeden punkt; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsHitTestVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsHitTestVisibleChanged
  id: IsHitTestVisibleChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsHitTestVisibleChanged
  nameWithType: UIElement3D.IsHitTestVisibleChanged
  fullName: System.Windows.UIElement3D.IsHitTestVisibleChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsHitTestVisible*>zmiany właściwości zależności w tym elemencie.</xref:System.Windows.UIElement3D.IsHitTestVisible*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsHitTestVisibleChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsHitTestVisibleProperty
  id: IsHitTestVisibleProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsHitTestVisibleProperty
  nameWithType: UIElement3D.IsHitTestVisibleProperty
  fullName: System.Windows.UIElement3D.IsHitTestVisibleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsHitTestVisible*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsHitTestVisible*>"
  remarks: "IsHitTestVisibleProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsInputMethodEnabled
  id: IsInputMethodEnabled
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsInputMethodEnabled
  nameWithType: UIElement3D.IsInputMethodEnabled
  fullName: System.Windows.UIElement3D.IsInputMethodEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy system IME, takich jak [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)], jest włączony dla przetwarzania danych wejściowych do tego elementu."
  remarks: "Ta właściwość zwraca wartość zwracaną przez dołączona właściwość <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>dla aktualnie włączonego metody wejściowe (klawiatura, mowy, inne urządzenia wejściowe).</xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>       IsInputMethodEnabled wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsInputMethodEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli Metoda wejściowa jest aktywna; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna właściwości dołączonych jest <xref uid=&quot;langword_csharp_true;&quot; name=&quot;true;&quot; href=&quot;&quot;> </xref> , to będzie zależeć od rzeczywisty stan metody wprowadzania tekstu w czasie wykonywania."
  overload: System.Windows.UIElement3D.IsInputMethodEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocused
  id: IsKeyboardFocused
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocused
  nameWithType: UIElement3D.IsKeyboardFocused
  fullName: System.Windows.UIElement3D.IsKeyboardFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy ten element ma fokus klawiatury."
  remarks: "Zmiany na podstawie wartości tej właściwości może towarzyszyć zdarzeń związanych z fokusem.       IsKeyboardFocused i <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>są często używane klasy obsługi zdarzeń dla innych zdarzeń związanych z danych wejściowych, na przykład w celu sprawdzenia, czy element ma już fokus klawiatury, aby oznaczeń, gdy mysz zdarzenia i klawiatury występują w połączeniu.</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>       IsKeyboardFocused wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsKeyboardFocused&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>"
  syntax:
    content: public bool IsKeyboardFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten element ma fokus klawiatury; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsKeyboardFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusedChanged
  id: IsKeyboardFocusedChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusedChanged
  nameWithType: UIElement3D.IsKeyboardFocusedChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsKeyboardFocused*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsKeyboardFocused*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsKeyboardFocusedChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusedProperty
  id: IsKeyboardFocusedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusedProperty
  nameWithType: UIElement3D.IsKeyboardFocusedProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsKeyboardFocused*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsKeyboardFocused*>"
  remarks: "IsKeyboardFocusedProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin
  id: IsKeyboardFocusWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusWithin
  nameWithType: UIElement3D.IsKeyboardFocusWithin
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy fokus klawiatury jest dowolne miejsce w obrębie elementu lub jego elementy podrzędne drzewa wizualnego."
  remarks: "Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A>do pomijania zdarzenia.</xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> </xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>       Ta właściwość nie należy ustawiać bezpośrednio, ale można ustawić fokus do elementu, wywołując <xref:System.Windows.UIElement3D.Focus%2A>, lub tworząc <xref:System.Windows.UIElement3D.MoveFocus%2A>żądania.</xref:System.Windows.UIElement3D.MoveFocus%2A> </xref:System.Windows.UIElement3D.Focus%2A> Jedną z tych wywołań metody mogą ulec zmianie wartość tej właściwości.       <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>i IsKeyboardFocusWithin są zazwyczaj używane w ramach procedury obsługi zdarzeń klasy dla innych zdarzeń związanych z danych wejściowych, na przykład w celu sprawdzenia, czy element ma już fokus klawiatury, aby oznaczeń, gdy mysz zdarzenia i klawiatury występują w połączeniu.</xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>       IsKeyboardFocusWithin wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsKeyboardFocusWithin&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>"
  syntax:
    content: public bool IsKeyboardFocusWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli fokus klawiatury znajduje się na element lub jego elementów podrzędnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsKeyboardFocusWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  id: IsKeyboardFocusWithinChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusWithinChanged
  nameWithType: UIElement3D.IsKeyboardFocusWithinChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsKeyboardFocusWithinChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  id: IsKeyboardFocusWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusWithinProperty
  nameWithType: UIElement3D.IsKeyboardFocusWithinProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>"
  remarks: "IsKeyboardFocusWithinProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptured
  id: IsMouseCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptured
  nameWithType: UIElement3D.IsMouseCaptured
  fullName: System.Windows.UIElement3D.IsMouseCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy wskaźnik myszy jest przechwytywany do tego elementu."
  remarks: "Stan przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.       IsMouseCaptured wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsMouseCaptured&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsMouseCapturedProperty>"
  syntax:
    content: public bool IsMouseCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element ma przechwytywanie myszy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsMouseCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCapturedChanged
  id: IsMouseCapturedChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCapturedChanged
  nameWithType: UIElement3D.IsMouseCapturedChanged
  fullName: System.Windows.UIElement3D.IsMouseCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsMouseCaptured*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsMouseCaptured*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsMouseCapturedChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCapturedProperty
  id: IsMouseCapturedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCapturedProperty
  nameWithType: UIElement3D.IsMouseCapturedProperty
  fullName: System.Windows.UIElement3D.IsMouseCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsMouseCaptured*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsMouseCaptured*>"
  remarks: "IsMouseCapturedProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptureWithin
  id: IsMouseCaptureWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptureWithin
  nameWithType: UIElement3D.IsMouseCaptureWithin
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość określającą, czy przechwytywanie myszy jest przechowywane przez ten element lub elementy podrzędne w jego drzewie wizualnym."
  remarks: "IsMouseCaptureWithin wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsMouseCaptureWithin&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>"
  syntax:
    content: public bool IsMouseCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten element lub zawartych w niej element ma przechwytywanie myszy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsMouseCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  id: IsMouseCaptureWithinChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptureWithinChanged
  nameWithType: UIElement3D.IsMouseCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsMouseCaptureWithinChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  id: IsMouseCaptureWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptureWithinProperty
  nameWithType: UIElement3D.IsMouseCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>"
  remarks: "IsMouseCaptureWithinProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseDirectlyOver
  id: IsMouseDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseDirectlyOver
  nameWithType: UIElement3D.IsMouseDirectlyOver
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy pozycja wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę."
  remarks: "W odróżnieniu od <xref:System.Windows.UIElement3D.IsMouseOver%2A>, ta właściwość jest tylko `true` , gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku teście trafień</xref:System.Windows.UIElement3D.IsMouseOver%2A> Gdy wskaźnik myszy jest nad elementu podrzędnego, ta właściwość będzie `false`. W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.UIElement3D.IsMouseOver%2A>zamiast.</xref:System.Windows.UIElement3D.IsMouseOver%2A>       Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i kursor nie znajduje się za pośrednictwem jego granic.       IsMouseDirectlyOver wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsMouseDirectlyOver&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>"
  syntax:
    content: public bool IsMouseDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Gdy wskaźnik myszy znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsMouseDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  id: IsMouseDirectlyOverChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseDirectlyOverChanged
  nameWithType: UIElement3D.IsMouseDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsMouseDirectlyOverChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  id: IsMouseDirectlyOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseDirectlyOverProperty
  nameWithType: UIElement3D.IsMouseDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>"
  remarks: "IsMouseDirectlyOverProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseOver
  id: IsMouseOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseOver
  nameWithType: UIElement3D.IsMouseOver
  fullName: System.Windows.UIElement3D.IsMouseOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy podrzędne w drzewie wizualnym)."
  remarks: "Formanty są zazwyczaj połączone tak, aby wszystkie różnych elementów wewnątrz formantu (drzewa wizualnego) będzie zgłaszać stanu myszy zawierającego formantu. Na przykład <xref:System.Windows.Controls.ListBox>styl formantu będzie zgłaszać IsMouseOver jako `true` w przypadku myszy dowolnego miejsca za pośrednictwem jego geometry, w tym wszelkie <xref:System.Windows.Controls.ListBoxItem>.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox>       Mimo że podobne zdarzenia &quot;IsMouseOverChanged&quot; nie istnieje, czy kilka podobnych zdarzeń. Na przykład można obsługiwać <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>i <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.</xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> </xref:System.Windows.UIElement3D.MouseMove> </xref:System.Windows.UIElement3D.MouseEnter>       Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik myszy opuszczeniu granic elementu.       Niektóre formanty celowo przechwytywanie myszy na pewne akcje, które nie są bezpośrednio dotyczyć myszy. Może to prowadzić do trwa IsMouseOver `true` mimo że nie przeniósł najwyraźniej myszy.       IsMouseOver wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsMouseOver&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsMouseOverProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsMouseOverProperty>"
  syntax:
    content: public bool IsMouseOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Gdy wskaźnik myszy znajduje się nad elementu lub jego elementów podrzędnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsMouseOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseOverProperty
  id: IsMouseOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseOverProperty
  nameWithType: UIElement3D.IsMouseOverProperty
  fullName: System.Windows.UIElement3D.IsMouseOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsMouseOver*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsMouseOver*>"
  remarks: "IsMouseOverProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptured
  id: IsStylusCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptured
  nameWithType: UIElement3D.IsStylusCaptured
  fullName: System.Windows.UIElement3D.IsStylusCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy pióro są przechwytywane przez ten element."
  remarks: "Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       IsStylusCaptured wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusCaptured&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsStylusCapturedProperty>"
  syntax:
    content: public bool IsStylusCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsStylusCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCapturedChanged
  id: IsStylusCapturedChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCapturedChanged
  nameWithType: UIElement3D.IsStylusCapturedChanged
  fullName: System.Windows.UIElement3D.IsStylusCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsStylusCaptured*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsStylusCaptured*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsStylusCapturedChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCapturedProperty
  id: IsStylusCapturedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCapturedProperty
  nameWithType: UIElement3D.IsStylusCapturedProperty
  fullName: System.Windows.UIElement3D.IsStylusCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsStylusCaptured*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsStylusCaptured*>"
  remarks: "IsStylusCapturedProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptureWithin
  id: IsStylusCaptureWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptureWithin
  nameWithType: UIElement3D.IsStylusCaptureWithin
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość określającą, czy przechwytywanie pióra jest przechowywany przez ten element lub element granice elementu i jego drzewie wizualnym."
  remarks: "Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       IsStylusCaptureWithin wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusCaptureWithin&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>"
  syntax:
    content: public bool IsStylusCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten element lub zawartych w niej element ma Przechwytywanie pióra; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsStylusCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  id: IsStylusCaptureWithinChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptureWithinChanged
  nameWithType: UIElement3D.IsStylusCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>"
  remarks: "Jest to [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsStylusCaptureWithinChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  id: IsStylusCaptureWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptureWithinProperty
  nameWithType: UIElement3D.IsStylusCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>"
  remarks: "IsStylusCaptureWithinProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusDirectlyOver
  id: IsStylusDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusDirectlyOver
  nameWithType: UIElement3D.IsStylusDirectlyOver
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę."
  remarks: "W odróżnieniu od <xref:System.Windows.UIElement3D.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem.</xref:System.Windows.UIElement3D.IsStylusOver%2A> Jeśli pióro jest na element podrzędny lub elementy, które są częścią elementu głębiej składania (drzewa wizualnego), ta właściwość będzie `false`.       Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki. W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.UIElement3D.IsStylusOver%2A>zamiast.</xref:System.Windows.UIElement3D.IsStylusOver%2A>       Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie jest za pośrednictwem jego granic.       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       IsStylusDirectlyOver wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusDirectlyOver&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>"
  syntax:
    content: public bool IsStylusDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wskaźnik Pióro znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsStylusDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  id: IsStylusDirectlyOverChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusDirectlyOverChanged
  nameWithType: UIElement3D.IsStylusDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsStylusDirectlyOverChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  id: IsStylusDirectlyOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusDirectlyOverProperty
  nameWithType: UIElement3D.IsStylusDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>"
  remarks: "IsStylusDirectlyOverProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusOver
  id: IsStylusOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusOver
  nameWithType: UIElement3D.IsStylusOver
  fullName: System.Windows.UIElement3D.IsStylusOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy kursor pióra znajduje się nad tym elementem (w tym elementy podrzędne visual)."
  remarks: "Jeśli ten element ma przechwycenia pióra, ta właściwość będzie w dalszym ciągu zwracać `true` aż do przechwycenia pióra zostaną utracone i kursor znajduje się poza zakresem jej.       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       IsStylusOver wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusOver&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsStylusOverProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsStylusOverProperty>"
  syntax:
    content: public bool IsStylusOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku kursor pióra przez element lub jego elementów podrzędnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsStylusOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusOverProperty
  id: IsStylusOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusOverProperty
  nameWithType: UIElement3D.IsStylusOverProperty
  fullName: System.Windows.UIElement3D.IsStylusOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsStylusOver*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsStylusOver*>"
  remarks: "IsStylusOverProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsVisible
  id: IsVisible
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsVisible
  nameWithType: UIElement3D.IsVisible
  fullName: System.Windows.UIElement3D.IsVisible
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wartość wskazującą, czy ten element jest widoczny w [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]."
  remarks: "Określenie wartości IsVisible uwzględnia wiele czynników. Z kolei <xref:System.Windows.UIElement3D.Visibility%2A>, właściwość można ustawić, tylko wskazuje zamiarze programowo element widoczny lub niewidoczny.</xref:System.Windows.UIElement3D.Visibility%2A>       Zmiana wartości tej właściwości zwykle zostanie podniesiony <xref:System.Windows.UIElement3D.IsVisibleChanged>zdarzeń.</xref:System.Windows.UIElement3D.IsVisibleChanged> Brak pasującego [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] &quot;na *&quot; klasy obsługi zastąpienie metody, która umożliwiałaby niektóre pochodnej klasy do zastąpienia tego zachowania i Obsługa zdarzenia, ale obsługi klasy nadal może zostać dołączony bezpośrednio z <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       Elementy, gdzie jest IsVisible `false` nie uczestniczą w zdarzeniach wejściowych (lub polecenia), czy nie wpływają albo miary lub Rozmieść przekazuje układu, nie są focusable nie znajdują się w sekwencji kartę i nie będą raportowane podczas testowania trafień. Z drugiej strony, elementy gdzie <xref:System.Windows.UIElement3D.IsEnabled%2A>jest `false` nadal będą uczestniczyć w zdarzeniach i poleceń i testowania trafień, ale nie są również focusable.</xref:System.Windows.UIElement3D.IsEnabled%2A>       IsVisible nie jest przeznaczony do użycia jako wyzwalacz stylu. Przy użyciu IsVisible jako wyzwalacz styl może mieć nieprzewidywalne skutki. IsVisible jest przeznaczony dla stanu sprawdzanie przez niższym poziomie implementacje wejściowego.       IsVisible wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsVisible&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.IsVisibleProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.IsVisibleProperty>"
  syntax:
    content: public bool IsVisible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element jest widoczny; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsVisibleChanged
  id: IsVisibleChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsVisibleChanged
  nameWithType: UIElement3D.IsVisibleChanged
  fullName: System.Windows.UIElement3D.IsVisibleChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wartość <xref:System.Windows.UIElement3D.IsVisible*>zmiany właściwości w tym elemencie.</xref:System.Windows.UIElement3D.IsVisible*>"
  remarks: "Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.       IsVisibleChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsVisibleProperty
  id: IsVisibleProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsVisibleProperty
  nameWithType: UIElement3D.IsVisibleProperty
  fullName: System.Windows.UIElement3D.IsVisibleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.IsVisible*>Właściwości zależności.</xref:System.Windows.UIElement3D.IsVisible*>"
  remarks: "IsVisibleProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsVisibleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyDown
  id: KeyDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyDown
  nameWithType: UIElement3D.KeyDown
  fullName: System.Windows.UIElement3D.KeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby KeyDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzenia KeyDown są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>       KeyDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_KeyDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.KeyDownEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.KeyEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewKeyDown>.</xref:System.Windows.UIElement3D.PreviewKeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.KeyDownEvent>      -Override <xref:System.Windows.UIElement3D.OnKeyDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnKeyDown%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyDownEvent
  id: KeyDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyDownEvent
  nameWithType: UIElement3D.KeyDownEvent
  fullName: System.Windows.UIElement3D.KeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.KeyDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       KeyDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyUp
  id: KeyUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyUp
  nameWithType: UIElement3D.KeyUp
  fullName: System.Windows.UIElement3D.KeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby KeyUp jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzenie KeyUp są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>       KeyUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_KeyUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.KeyUpEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.KeyEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewKeyUp>.</xref:System.Windows.UIElement3D.PreviewKeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.KeyUpEvent>      -Override <xref:System.Windows.UIElement3D.OnKeyUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnKeyUp%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyUpEvent
  id: KeyUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyUpEvent
  nameWithType: UIElement3D.KeyUpEvent
  fullName: System.Windows.UIElement3D.KeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.KeyUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       KeyUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostFocus
  id: LostFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostFocus
  nameWithType: UIElement3D.LostFocus
  fullName: System.Windows.UIElement3D.LostFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po utracie fokusu logicznego przez ten element."
  remarks: "Logiczny fokus różni się od fokus klawiatury, gdy fokus celowo wymusza optymalizacji przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie. W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.UIElement3D.Focus%2A>Metoda jest wywoływana nadal pobiera fokus logiczny.</xref:System.Windows.UIElement3D.Focus%2A>       Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsFocused%2A>zmiany właściwości elementu w trasie z `true` do `false`.</xref:System.Windows.UIElement3D.IsFocused%2A>       Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       LostFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_LostFocus&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.LostFocusEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.RoutedEventHandler>|      — Nie ma żadnego odpowiednie zdarzenia tunelowania.</xref:System.Windows.RoutedEventHandler> </xref:System.Windows.UIElement3D.LostFocusEvent>      -Override <xref:System.Windows.UIElement3D.OnLostFocus%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnLostFocus%2A>"
  syntax:
    content: public event System.Windows.RoutedEventHandler LostFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: UIElement3D.LostFocusEvent
  fullName: System.Windows.UIElement3D.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.LostFocus&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       LostFocusEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostKeyboardFocus
  id: LostKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostKeyboardFocus
  nameWithType: UIElement3D.LostKeyboardFocus
  fullName: System.Windows.UIElement3D.LostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy klawiatura nie ma już fokusu w tym elemencie."
  remarks: "Ponieważ to zdarzenie używa propagacji routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby LostKeyboardFocus jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń LostKeyboardFocus są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>       LostKeyboardFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_LostKeyboardFocus&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.</xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>      -Override <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostKeyboardFocusEvent
  id: LostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostKeyboardFocusEvent
  nameWithType: UIElement3D.LostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.LostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.LostKeyboardFocus&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       LostKeyboardFocusEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostMouseCapture
  id: LostMouseCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostMouseCapture
  nameWithType: UIElement3D.LostMouseCapture
  fullName: System.Windows.UIElement3D.LostMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element utraci przechwytywanie myszy."
  remarks: "Gdy element przechwytuje mysz, otrzymuje myszą nawet, jeśli wskaźnik jest poza zakresem jej. Mysz jest zwykle przechwytywane tylko podczas operacji przeciągania i upuszczania.       Ponieważ to zdarzenie używa propagacji routingu, element utraci Przechwytywanie może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w danych zdarzeń, aby określić rzeczywisty element, który utracił przechwytywania.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby LostMouseCapture jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń LostMouseCapture są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>       LostMouseCapture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_LostMouseCapture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.MouseEventHandler>|      — Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.LostMouseCaptureEvent>      -Override <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnLostMouseCapture%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler LostMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostMouseCaptureEvent
  id: LostMouseCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostMouseCaptureEvent
  nameWithType: UIElement3D.LostMouseCaptureEvent
  fullName: System.Windows.UIElement3D.LostMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.LostMouseCapture&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       LostMouseCaptureEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostStylusCapture
  id: LostStylusCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostStylusCapture
  nameWithType: UIElement3D.LostStylusCapture
  fullName: System.Windows.UIElement3D.LostStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element utraci Przechwytywanie pióra."
  remarks: "Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej. Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.       Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby LostStylusCapture jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń LostStylusCapture są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>       LostStylusCapture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_LostStylusCapture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      — Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.LostStylusCaptureEvent>      -Override <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnLostStylusCapture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler LostStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostStylusCaptureEvent
  id: LostStylusCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostStylusCaptureEvent
  nameWithType: UIElement3D.LostStylusCaptureEvent
  fullName: System.Windows.UIElement3D.LostStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.LostStylusCapture&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       LostStylusCaptureEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostTouchCapture
  id: LostTouchCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostTouchCapture
  nameWithType: UIElement3D.LostTouchCapture
  fullName: System.Windows.UIElement3D.LostTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element utraci Przechwytywanie touch."
  remarks: "<a name=&quot;routedEventInfo_LostTouchCapture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      -Override <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.LostTouchCaptureEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> LostTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostTouchCaptureEvent
  id: LostTouchCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostTouchCaptureEvent
  nameWithType: UIElement3D.LostTouchCaptureEvent
  fullName: System.Windows.UIElement3D.LostTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.LostTouchCapture&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseDown
  id: MouseDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseDown
  nameWithType: UIElement3D.MouseDown
  fullName: System.Windows.UIElement3D.MouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby MouseDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do MouseDown — zdarzenie są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       MouseDown — zdarzenie często jest wywoływane z jednej <xref:System.Windows.UIElement3D.MouseLeftButtonDown>lub <xref:System.Windows.UIElement3D.MouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</xref:System.Windows.UIElement3D.MouseRightButtonDown> </xref:System.Windows.UIElement3D.MouseLeftButtonDown> <xref:System.Windows.UIElement3D.MouseLeftButtonDown>i <xref:System.Windows.UIElement3D.MouseRightButtonDown>są również kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement3D.MouseRightButtonDown></xref:System.Windows.UIElement3D.MouseLeftButtonDown> Zobacz uwagi lub <xref:System.Windows.UIElement3D.MouseLeftButtonDown> <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</xref:System.Windows.UIElement3D.MouseRightButtonDown> </xref:System.Windows.UIElement3D.MouseLeftButtonDown>      > [!IMPORTANT] > Niektóre formanty może mieć związanego z używaniem klasy obsługi zdarzenia przycisk myszy. Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie. Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse>zdarzenia klasy jako obsłużone.</xref:System.Windows.Input.Mouse> Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane. Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.       Można rozwiązać ten problem, który jest opisane w poprzednim ważne i nadal odbierać zdarzenia MouseDown dla lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:-dołączyć obsługi <xref:System.Windows.UIElement3D.PreviewMouseDown>zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</xref:System.Windows.UIElement3D.PreviewMouseDown> Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.      -Zarejestrować obsługi w formancie proceduralnie przez wywołanie metody <xref:System.Windows.UIElement3D.AddHandler%2A>i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</xref:System.Windows.UIElement3D.AddHandler%2A>       MouseDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseDownEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseDown>.</xref:System.Windows.UIElement3D.PreviewMouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseDownEvent>      -Override <xref:System.Windows.UIElement3D.OnMouseDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseDown%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseDownEvent
  id: MouseDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseDownEvent
  nameWithType: UIElement3D.MouseDownEvent
  fullName: System.Windows.UIElement3D.MouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseEnter
  id: MouseEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseEnter
  nameWithType: UIElement3D.MouseEnter
  fullName: System.Windows.UIElement3D.MouseEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wskaźnik myszy zostanie umieszczony granic tego elementu."
  remarks: "MouseEnter jest [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.       Mimo że MouseEnter śledzi, gdy wskaźnik myszy zostanie umieszczony granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsMouseOver%2A>zmieniono wartość właściwości z `false` do `true` w tym elemencie.</xref:System.Windows.UIElement3D.IsMouseOver%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby MouseEnter jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń MouseEnter są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>       MouseEnter wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseEnter&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseEnterEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnMouseEnter%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseEnter%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.MouseEnterEvent>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseEnter;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseEnterEvent
  id: MouseEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseEnterEvent
  nameWithType: UIElement3D.MouseEnterEvent
  fullName: System.Windows.UIElement3D.MouseEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseEnter&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseEnterEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeave
  id: MouseLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeave
  nameWithType: UIElement3D.MouseLeave
  fullName: System.Windows.UIElement3D.MouseLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu."
  remarks: "MouseLeave jest [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.       Mimo że MouseLeave śledzi, gdy mysz opuści element, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsMouseOver%2A>zmieniono wartość właściwości z `true` do `false` w tym elemencie.</xref:System.Windows.UIElement3D.IsMouseOver%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby MouseLeave jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń MouseLeave są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>       MouseLeave wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseLeave&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseLeaveEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnMouseLeave%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseLeave%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.MouseLeaveEvent>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseLeave;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeaveEvent
  id: MouseLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeaveEvent
  nameWithType: UIElement3D.MouseLeaveEvent
  fullName: System.Windows.UIElement3D.MouseLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseLeave&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseLeaveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonDown
  id: MouseLeftButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonDown
  nameWithType: UIElement3D.MouseLeftButtonDown
  fullName: System.Windows.UIElement3D.MouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu MouseLeftButtonDown obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Obejmuje to prawdopodobnie wygenerowane klasy obsługi zdarzeń, takich jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.</xref:System.Windows.Controls.Control.MouseDoubleClick>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>      > [!IMPORTANT] > Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse>zdarzenia klasy jako obsłużone.</xref:System.Windows.Input.Mouse> Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane. Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.       Można rozwiązać ten problem, który jest opisane w poprzednim ważne i nadal otrzymywać MouseLeftButtonDown zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:-dołączyć obsługi <xref:System.Windows.UIElement3D.PreviewMouseDown>zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</xref:System.Windows.UIElement3D.PreviewMouseDown> Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.      -Zarejestrować obsługi w formancie proceduralnie przez wywołanie metody <xref:System.Windows.UIElement3D.AddHandler%2A>i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</xref:System.Windows.UIElement3D.AddHandler%2A>       MouseLeftButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseLeftButtonDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonDownEvent
  id: MouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonDownEvent
  nameWithType: UIElement3D.MouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseLeftButtonDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonUp
  id: MouseLeftButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonUp
  nameWithType: UIElement3D.MouseLeftButtonUp
  fullName: System.Windows.UIElement3D.MouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu MouseLeftButtonUp obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>       MouseLeftButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseLeftButtonUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonUpEvent
  id: MouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonUpEvent
  nameWithType: UIElement3D.MouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseLeftButtonUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseMove
  id: MouseMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseMove
  nameWithType: UIElement3D.MouseMove
  fullName: System.Windows.UIElement3D.MouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy wskaźnik myszy porusza się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby MouseMove jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do MouseMove — zdarzenie są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>       MouseMove wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseMoveEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.MouseEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseMove>.</xref:System.Windows.UIElement3D.PreviewMouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.MouseMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnMouseMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseMove%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseMoveEvent
  id: MouseMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseMoveEvent
  nameWithType: UIElement3D.MouseMoveEvent
  fullName: System.Windows.UIElement3D.MouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseMove&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseMoveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonDown
  id: MouseRightButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonDown
  nameWithType: UIElement3D.MouseRightButtonDown
  fullName: System.Windows.UIElement3D.MouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu MouseRightButtonDown obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Obejmuje to prawdopodobnie wygenerowane klasy obsługi zdarzeń, takich jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.</xref:System.Windows.Controls.Control.MouseDoubleClick>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>       Prawy przycisk myszy zdarzeń często ma natywnej obsługi w scenariuszach aplikacji. Na przykład prawym przyciskiem myszy w dół może wyświetlić menu kontekstowe. Zobacz [omówienie ContextMenu](~/add/includes/ajax-current-ext-md.md).       MouseRightButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseRightButtonDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonDownEvent
  id: MouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonDownEvent
  nameWithType: UIElement3D.MouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseRightButtonDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseRightButtonDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonUp
  id: MouseRightButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonUp
  nameWithType: UIElement3D.MouseRightButtonUp
  fullName: System.Windows.UIElement3D.MouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu MouseRightButtonUp obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>       MouseRightButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseRightButtonUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonUpEvent
  id: MouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonUpEvent
  nameWithType: UIElement3D.MouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseRightButtonUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseRightButtonUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseUp
  id: MouseUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseUp
  nameWithType: UIElement3D.MouseUp
  fullName: System.Windows.UIElement3D.MouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby MouseUp jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń MouseUp są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       MouseUp często zdarzenia wraz z albo <xref:System.Windows.UIElement3D.MouseLeftButtonUp>lub <xref:System.Windows.UIElement3D.MouseRightButtonUp>, które odpowiadają wersji jednego z dwóch przycisków standardowej myszki.</xref:System.Windows.UIElement3D.MouseRightButtonUp> </xref:System.Windows.UIElement3D.MouseLeftButtonUp> <xref:System.Windows.UIElement3D.MouseLeftButtonUp>i <xref:System.Windows.UIElement3D.MouseRightButtonUp>są również kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement3D.MouseRightButtonUp></xref:System.Windows.UIElement3D.MouseLeftButtonUp> Zobacz uwagi lub <xref:System.Windows.UIElement3D.MouseLeftButtonUp> <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</xref:System.Windows.UIElement3D.MouseRightButtonUp> </xref:System.Windows.UIElement3D.MouseLeftButtonUp>       MouseUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseUpEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseUp>.</xref:System.Windows.UIElement3D.PreviewMouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseUpEvent>      -Override <xref:System.Windows.UIElement3D.OnMouseUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseUp%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseUpEvent
  id: MouseUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseUpEvent
  nameWithType: UIElement3D.MouseUpEvent
  fullName: System.Windows.UIElement3D.MouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseWheel
  id: MouseWheel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseWheel
  nameWithType: UIElement3D.MouseWheel
  fullName: System.Windows.UIElement3D.MouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli wystąpi zdarzenie MouseWheel z fokusem lub przechwycone elementu wskaźnik myszy może się okazać za pośrednictwem innego elementu.       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby MouseWheel jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń MouseWheel są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>       MouseWheel wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseWheel&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.MouseWheelEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.MouseWheelEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseWheel>.</xref:System.Windows.UIElement3D.PreviewMouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.UIElement3D.MouseWheelEvent>      -Override <xref:System.Windows.UIElement3D.OnMouseWheel%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnMouseWheel%2A>"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler MouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseWheelEvent
  id: MouseWheelEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseWheelEvent
  nameWithType: UIElement3D.MouseWheelEvent
  fullName: System.Windows.UIElement3D.MouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.MouseWheel&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       MouseWheelEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)
  id: MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MoveFocus(TraversalRequest)
  nameWithType: UIElement3D.MoveFocus(TraversalRequest)
  fullName: System.Windows.UIElement3D.MoveFocus(TraversalRequest)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Próbuje Przenieś fokus z tego elementu do innego elementu. Przenieś fokus kierunek jest określany przez kierunek wskazówki jest interpretowana w obrębie organizacji elementu nadrzędnego visual dla tego elementu."
  remarks: "Upewnij się, że należy sprawdzić wartość zwrotną tej metody. Zwracana wartość `false` może być zwrócony, jeśli działa podczas przechodzenia do tabulatora jest definiowana za pomocą formantu kompozycji, a nie żądał żądania przechodzenia do zakodowania.       MoveFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);
    parameters:
    - id: request
      type: System.Windows.Input.TraversalRequest
      description: "Żądanie przechodzenie, zawierającego właściwości, która wskazuje albo tryb przechodzenia w istniejących kolejności tabulacji lub kierunek przenoszenia wizualnie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wykonano żądanej przechodzenie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.MoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  id: OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: UIElement3D.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.UIElement3D.OnAccessKey(AccessKeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zawiera klasy obsługi po klucz dostępu zrozumiały dla tego elementu jest wywoływany."
  remarks: "Nie ma żadnego rzeczywistego zdarzenia AccessKey w <xref:System.Windows.UIElement3D>klasy lub w innych miejscach, który można wywołać lub dołączyć for. obsługi</xref:System.Windows.UIElement3D> Zamiast tego zdarzenia jest pochodzi za pośrednictwem klasy dedykowanych Menedżera <xref:System.Windows.Input.AccessKeyManager>, który przetwarza po wszystkie dane wejściowe do wyszukiwania klucze dostępu, które mają zastosowanie do całego modelu wejściowych.</xref:System.Windows.Input.AccessKeyManager>       OnAccessKey wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.AccessKeyEventArgs
      description: "Dane zdarzenia do zdarzenia klucza dostępu. Raporty danych zdarzeń klucz, do którego została wywołana i wskazać, czy <xref href=&quot;System.Windows.Input.AccessKeyManager&quot;> </xref> obiekt, który kontroluje wysyłanie tych zdarzeń również wysyłane to wywołanie klucza dostępu do innych elementów."
  overload: System.Windows.UIElement3D.OnAccessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: UIElement3D.OnCreateAutomationPeer()
  fullName: System.Windows.UIElement3D.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zwraca specyficzne <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> implementacji dla [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastruktury."
  remarks: "OnCreateAutomationPeer wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "Określonego typu <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> implementacji."
  overload: System.Windows.UIElement3D.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)
  id: OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)
  id: OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)
  id: OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)
  id: OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDrop(DragEventArgs)
  nameWithType: UIElement3D.OnDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "<xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)
  id: OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zgłasza <xref href=&quot;System.Windows.UIElement3D.GotFocus&quot;> </xref> kierowanego zdarzenia przy użyciu dane zdarzenia przekazane."
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes. The OnGotFocus implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event.  \n  \n OnGotFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "A <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> zawierający dane zdarzenia. Te dane zdarzenie musi zawierać identyfikator <xref href=&quot;System.Windows.UIElement3D.GotFocus&quot;> </xref> zdarzeń."
  overload: System.Windows.UIElement3D.OnGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnGotMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGotMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnGotMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnGotStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGotStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnGotStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnGotTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.GotTouchCapture&quot;> </xref> kierowanego zdarzenia, gdy touch są przechwytywane do tego elementu."
  remarks: "Metoda OnGotTouchCapture ma domyślnej implementacji. Zastąpienie OnGotTouchCapture w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.GotTouchCapture>zdarzeń.</xref:System.Windows.UIElement3D.GotTouchCapture> Pamiętaj wywołać metodę OnGotTouchCapture klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnGotTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.IsKeyboardFocusedChanged&quot;> </xref> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>zmiany właściwości zależności.</xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>zdarzenia z tego samego wystąpienia danych zdarzenia.</xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>zdarzenie nie jest kierowanego zdarzenia.</xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.       Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       OnIsKeyboardFocusedChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływana tuż przed <xref href=&quot;System.Windows.UIElement3D.IsKeyboardFocusWithinChanged&quot;> </xref> zdarzenie jest wywoływane przez ten element. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>zmienia się wartość właściwości zależności.</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>zdarzenia z tego samego wystąpienia danych zdarzenia.</xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>zdarzenie nie jest kierowanego zdarzenia.</xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.       Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       OnIsKeyboardFocusWithinChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.IsMouseCapturedChanged&quot;> </xref> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsMouseCaptured%2A>zmienia się wartość właściwości zależności.</xref:System.Windows.UIElement3D.IsMouseCaptured%2A> Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsMouseCapturedChanged>zdarzenia z tego samego wystąpienia danych zdarzenia.</xref:System.Windows.UIElement3D.IsMouseCapturedChanged> Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsMouseCapturedChanged>zdarzenie nie jest kierowanego zdarzenia.</xref:System.Windows.UIElement3D.IsMouseCapturedChanged> W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.       Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       OnIsMouseCapturedChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsMouseCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.IsMouseCaptureWithinChanged&quot;> </xref> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "OnIsMouseCaptureWithinChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.IsMouseDirectlyOverChanged&quot;> </xref> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A>zmienia się wartość właściwości zależności.</xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>zdarzenia z tego samego wystąpienia danych zdarzenia.</xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>zdarzenie nie jest kierowanego zdarzenia.</xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.       Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       OnIsMouseDirectlyOverChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.IsStylusCapturedChanged&quot;> </xref> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsStylusCaptured%2A>zmienia się wartość właściwości zależności.</xref:System.Windows.UIElement3D.IsStylusCaptured%2A> Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsStylusCapturedChanged>zdarzenia z tego samego wystąpienia danych zdarzenia.</xref:System.Windows.UIElement3D.IsStylusCapturedChanged> Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.       Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       OnIsStylusCapturedChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsStylusCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.IsStylusCaptureWithinChanged&quot;> </xref> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A>zmienia się wartość właściwości zależności.</xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged>zdarzenia z tego samego wystąpienia danych zdarzenia.</xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.       Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       OnIsStylusCaptureWithinChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.IsStylusDirectlyOverChanged&quot;> </xref> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A>zmienia się wartość właściwości zależności.</xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged>zdarzenia z tego samego wystąpienia danych zdarzenia.</xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.       Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       OnIsStylusDirectlyOverChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyDown is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyUp is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)
  id: OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zgłasza <xref href=&quot;System.Windows.UIElement3D.LostFocus&quot;> </xref> kierowanego zdarzenia przy użyciu dane zdarzenia, które jest dostępne."
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes. This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event.  \n  \n OnLostFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "A <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> zawierający dane zdarzenia. Te dane zdarzenie musi zawierać identyfikator <xref href=&quot;System.Windows.UIElement3D.LostFocus&quot;> </xref> zdarzeń."
  overload: System.Windows.UIElement3D.OnLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnLostMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnLostMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnLostMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnLostStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnLostStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnLostStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnLostTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.LostTouchCapture&quot;> </xref> kierowanego zdarzenia, gdy ten element utraci Przechwytywanie touch."
  remarks: "Metoda OnLostTouchCapture ma domyślnej implementacji. Zastąpienie OnLostTouchCapture w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.LostTouchCapture>zdarzeń.</xref:System.Windows.UIElement3D.LostTouchCapture> Pamiętaj wywołać metodę OnLostTouchCapture klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnLostTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event as handled, OnMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Te dane zdarzeń raporty szczegółowe informacje o został naciśnięty przycisk myszy i stanie obsłużone."
  overload: System.Windows.UIElement3D.OnMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseEnter(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; dołączone zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.       OnMouseEnter wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeave(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; dołączone zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.       OnMouseLeave wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonDown&quot;> </xref> kierowanego zdarzenia w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.MouseLeftButtonDown>Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.MouseLeftButtonDown> <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>jest podstawowy zdarzenia, które jest kierowane bąbelkowych i każdego <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseLeftButtonDown>.</xref:System.Windows.UIElement3D.MouseLeftButtonDown> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseLeftButtonDown>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.MouseLeftButtonDown> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnMouseLeftButtonDown.</xref:System.Windows.UIElement3D>       Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy, na których jest oczekiwany wywołania OnMouseLeftButtonDown klas. Na przykład może pochodzić od <xref:System.Windows.Controls.Button>i zastąpić OnMouseLeftButtonDown w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak zastąpić to wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click>zdarzeń.</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button>       OnMouseLeftButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy."
  overload: System.Windows.UIElement3D.OnMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonUp&quot;> </xref> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.MouseLeftButtonUp>Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.MouseLeftButtonUp> <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>jest bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseLeftButtonUp>.</xref:System.Windows.UIElement3D.MouseLeftButtonUp> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseLeftButtonUp>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.MouseLeftButtonUp> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnMouseLeftButtonUp.</xref:System.Windows.UIElement3D>       OnMouseLeftButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie lewego przycisku myszy."
  overload: System.Windows.UIElement3D.OnMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.MouseRightButtonDown&quot;> </xref> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.MouseRightButtonDown>Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.MouseRightButtonDown> <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>jest bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</xref:System.Windows.UIElement3D.MouseRightButtonDown> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseRightButtonDown>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.MouseRightButtonDown> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnMouseRightButtonDown.</xref:System.Windows.UIElement3D>       Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy, na których jest oczekiwany wywołania OnMouseRightButtonDown klas. Na przykład może pochodzić od <xref:System.Windows.Controls.Control>i zastąpić OnMouseRightButtonDown w klasie pochodnej bez base wywołujący; jednak to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control>domyślne zachowanie.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control>       OnMouseRightButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy."
  overload: System.Windows.UIElement3D.OnMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.MouseRightButtonUp&quot;> </xref> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.MouseRightButtonUp>Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.MouseRightButtonUp> <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>jest bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</xref:System.Windows.UIElement3D.MouseRightButtonUp> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseRightButtonUp>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.MouseRightButtonUp> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnMouseRightButtonUp.</xref:System.Windows.UIElement3D>       OnMouseRightButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie prawego przycisku myszy."
  overload: System.Windows.UIElement3D.OnMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event as handled, OnMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia raporty, wydanej przycisk myszy."
  overload: System.Windows.UIElement3D.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)
  id: OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)
  id: OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)
  id: OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)
  id: OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "<xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; dołączone kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event as handled, OnPreviewMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej."
  overload: System.Windows.UIElement3D.OnPreviewMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonDown&quot;> </xref> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>bazowe zdarzenie, dla którego jest kierowane tunelu, a każdy <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>.</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnPreviewMouseLeftButtonDown.</xref:System.Windows.UIElement3D>       Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy, na których jest oczekiwany wywołania OnPreviewMouseLeftButtonDown klas. Na przykład może pochodzić od <xref:System.Windows.Controls.Button>i zastąpić OnPreviewMouseLeftButtonDown w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak zastąpić to wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click>zdarzeń.</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button>       OnPreviewMouseLeftButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy."
  overload: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonUp&quot;> </xref> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>bazowe zdarzenie, dla którego jest kierowane tunelu, a każdy <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>.</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnPreviewMouseLeftButtonUp.</xref:System.Windows.UIElement3D>       OnPreviewMouseLeftButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie lewego przycisku myszy."
  overload: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonDown&quot;> </xref> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>bazowe zdarzenie, dla którego jest kierowane tunelu, a każdy <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</xref:System.Windows.UIElement3D.MouseRightButtonDown> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnPreviewMouseRightButtonDown.</xref:System.Windows.UIElement3D>       Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy, na których jest oczekiwany wywołania OnPreviewMouseRightButtonDown klas. Na przykład może pochodzić od <xref:System.Windows.Controls.Control>i zastąpić OnPreviewMouseRightButtonDown w klasie pochodnej bez base wywołujący; jednak to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control>domyślne zachowanie.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control>       OnPreviewMouseRightButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy."
  overload: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany <xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonUp&quot;> </xref> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>bazowe zdarzenie, dla którego jest kierowane tunelu, a każdy <xref:System.Windows.UIElement3D>wzdłuż zdarzenia identyczne, obsługi, aby podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> używa trasy</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.       Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D>nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>i konwertuje ją na odpowiednie zdarzenia lokalne.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.UIElement3D> Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D>przez zastąpienie OnPreviewMouseRightButtonUp.</xref:System.Windows.UIElement3D>       OnPreviewMouseRightButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie prawego przycisku myszy."
  overload: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event as handled, OnPreviewMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnPreviewMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia. Dane zdarzenia raporty wydane jednego lub więcej przycisków myszy."
  overload: System.Windows.UIElement3D.OnPreviewMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "<xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "<xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.PreviewTouchDown&quot;> </xref> kierowanego zdarzenia, gdy touch naciśnie tego elementu."
  remarks: "Metoda OnPreviewTouchDown ma domyślnej implementacji. Zastąpienie OnPreviewTouchDown w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.PreviewTouchDown>zdarzeń.</xref:System.Windows.UIElement3D.PreviewTouchDown> Pamiętaj wywołać metodę OnPreviewTouchDown klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.PreviewTouchMove&quot;> </xref> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu."
  remarks: "Metoda OnPreviewTouchMove ma domyślnej implementacji. Zastąpienie OnPreviewTouchMove w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.PreviewTouchMove>zdarzeń.</xref:System.Windows.UIElement3D.PreviewTouchMove> Pamiętaj wywołać metodę OnPreviewTouchMove klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.PreviewTouchUp&quot;> </xref> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu."
  remarks: "Metoda OnPreviewTouchUp ma domyślnej implementacji. Zastąpienie OnPreviewTouchUp w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.PreviewTouchUp>zdarzeń.</xref:System.Windows.UIElement3D.PreviewTouchUp> Pamiętaj wywołać metodę OnPreviewTouchUp klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnPreviewTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "<xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  id: OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: UIElement3D.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryCursor(QueryCursorEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnQueryCursor is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.QueryCursorEventArgs
      description: "<xref href=&quot;System.Windows.Input.QueryCursorEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnQueryCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  id: OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusEnter(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; dołączone zdarzenie jest zgłaszane przez ten element. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.       OnStylusEnter wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  id: OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusLeave(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; dołączone zdarzenie jest zgłaszane przez ten element. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.       Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.       OnStylusLeave wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy jest to nieobsługiwany &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "<xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref> Zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.TouchDown&quot;> </xref> kierowanego zdarzenia, gdy touch naciśnie wewnątrz tego elementu."
  remarks: "Metoda OnTouchDown ma domyślnej implementacji. Zastąpienie OnTouchDown w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchDown>zdarzeń.</xref:System.Windows.UIElement3D.TouchDown> Pamiętaj wywołać metodę OnTouchDown klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  id: OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchEnter(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.TouchEnter&quot;> </xref> kierowanego zdarzenia, która występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu."
  remarks: "Metoda OnTouchEnter ma domyślnej implementacji. Zastąpienie OnTouchEnter w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchEnter>zdarzeń.</xref:System.Windows.UIElement3D.TouchEnter> Pamiętaj wywołać metodę OnTouchEnter klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnTouchEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  id: OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchLeave(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.TouchLeave&quot;> </xref> kierowanego zdarzenia, która występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu."
  remarks: "Metoda OnTouchLeave ma domyślnej implementacji. Zastąpienie OnTouchLeave w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchLeave>zdarzeń.</xref:System.Windows.UIElement3D.TouchLeave> Pamiętaj wywołać metodę OnTouchLeave klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnTouchLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.TouchMove&quot;> </xref> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu."
  remarks: "Metoda OnTouchMove ma domyślnej implementacji. Zastąpienie OnTouchMove w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchMove>zdarzeń.</xref:System.Windows.UIElement3D.TouchMove> Pamiętaj wywołać metodę OnTouchMove klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Udostępnia klasę obsługi <xref href=&quot;System.Windows.UIElement3D.TouchUp&quot;> </xref> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu."
  remarks: "Metoda OnTouchUp ma domyślnej implementacji. Zastąpienie OnTouchUp w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchUp>zdarzeń.</xref:System.Windows.UIElement3D.TouchUp> Pamiętaj wywołać metodę OnTouchUp klasy podstawowej, dzięki czemu klas podstawowych odbierać zdarzenia."
  syntax:
    content: protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Windows.UIElement3D.OnTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnUpdateModel
  id: OnUpdateModel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnUpdateModel()
  nameWithType: UIElement3D.OnUpdateModel()
  fullName: System.Windows.UIElement3D.OnUpdateModel()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Uczestniczy w renderowania operacji w przypadku przesłonięcia w klasie pochodnej."
  remarks: "Gdy klasa wyprowadzona z z <xref:System.Windows.UIElement3D>klasy, można użyć tej metody razem z <xref:System.Windows.UIElement3D.InvalidateModel%2A>metodę, aby odświeżyć modelu elementu.</xref:System.Windows.UIElement3D.InvalidateModel%2A> </xref:System.Windows.UIElement3D>       Należy wywołać tę metodę w zaawansowanych scenariuszach. Taki scenariusz zaawansowane jest Jeśli klasa pochodna ma wiele właściwości, które mają wpływ na wygląd i chcesz zaktualizować odpowiedni model tylko raz. W metodzie OnUpdateModel można zaktualizować <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A>właściwości <xref:System.Windows.Media.Media3D.Visual3D>klasy.</xref:System.Windows.Media.Media3D.Visual3D> </xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A>       Ta metoda nie ma żadnej implementacji domyślnej w <xref:System.Windows.UIElement3D>klasie.</xref:System.Windows.UIElement3D>       OnUpdateModel wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:  \n  \n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \n  \n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044)."
  syntax:
    content: protected virtual void OnUpdateModel ();
    parameters: []
  overload: System.Windows.UIElement3D.OnUpdateModel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)
  id: OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: UIElement3D.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.UIElement3D.OnVisualParentChanged(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywoływane, gdy element nadrzędny tego <xref href=&quot;System.Windows.UIElement3D&quot;> </xref> raporty zmiany do elementu nadrzędnego visual podstawowej."
  remarks: "OnVisualParentChanged wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);
    parameters:
    - id: oldParent
      type: System.Windows.DependencyObject
      description: "Element nadrzędny poprzedniej. Może to być dostarczone jako <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> nie ma element nadrzędny wcześniej."
  overload: System.Windows.UIElement3D.OnVisualParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  id: PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: UIElement3D.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.UIElement3D.PredictFocus(FocusNavigationDirection)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca element, który będzie fokusu dla kierunku przechodzenie określonego fokus bez faktycznie przeniesienie fokusu do tego elementu."
  remarks: "Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.       PredictFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);
    parameters:
    - id: direction
      type: System.Windows.Input.FocusNavigationDirection
      description: "Kierunek przechodzenie żądanego fokus."
    return:
      type: System.Windows.DependencyObject
      description: "Element otrzymałby fokus <xref:System.Windows.UIElement3D.MoveFocus*>zostały faktycznie wywoływane.</xref:System.Windows.UIElement3D.MoveFocus*>"
  overload: System.Windows.UIElement3D.PredictFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragEnter
  id: PreviewDragEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragEnter
  nameWithType: UIElement3D.PreviewDragEnter
  fullName: System.Windows.UIElement3D.PreviewDragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewDragEnter jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewDragEnter są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>       PreviewDragEnter wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewDragEnter&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.DragEnter>.</xref:System.Windows.UIElement3D.DragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDragEnterEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragEnterEvent
  id: PreviewDragEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragEnterEvent
  nameWithType: UIElement3D.PreviewDragEnterEvent
  fullName: System.Windows.UIElement3D.PreviewDragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewDragEnter&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewDragEnterEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragLeave
  id: PreviewDragLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragLeave
  nameWithType: UIElement3D.PreviewDragLeave
  fullName: System.Windows.UIElement3D.PreviewDragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewDragLeave jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewDragLeave są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>       PreviewDragLeave wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewDragLeave&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.DragLeave>.</xref:System.Windows.UIElement3D.DragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragLeaveEvent
  id: PreviewDragLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragLeaveEvent
  nameWithType: UIElement3D.PreviewDragLeaveEvent
  fullName: System.Windows.UIElement3D.PreviewDragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewDragLeave&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewDragLeaveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragOver
  id: PreviewDragOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragOver
  nameWithType: UIElement3D.PreviewDragOver
  fullName: System.Windows.UIElement3D.PreviewDragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewDragOver jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewDragOver są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>       PreviewDragOver wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewDragOver&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewDragOverEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.DragOver>.</xref:System.Windows.UIElement3D.DragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDragOverEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewDragOver%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragOverEvent
  id: PreviewDragOverEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragOverEvent
  nameWithType: UIElement3D.PreviewDragOverEvent
  fullName: System.Windows.UIElement3D.PreviewDragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewDragOver&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewDragOverEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDrop
  id: PreviewDrop
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDrop
  nameWithType: UIElement3D.PreviewDrop
  fullName: System.Windows.UIElement3D.PreviewDrop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewDrop jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewDrop są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>       PreviewDrop wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewDrop&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewDropEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.DragEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.Drop>.</xref:System.Windows.UIElement3D.Drop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDropEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewDrop%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewDrop%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDrop;
    return:
      type: System.Windows.DragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDropEvent
  id: PreviewDropEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDropEvent
  nameWithType: UIElement3D.PreviewDropEvent
  fullName: System.Windows.UIElement3D.PreviewDropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewDrop&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewDropEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGiveFeedback
  id: PreviewGiveFeedback
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGiveFeedback
  nameWithType: UIElement3D.PreviewGiveFeedback
  fullName: System.Windows.UIElement3D.PreviewGiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy rozpoczęto operację przeciągania i upuszczania."
  remarks: "Zdarzenie PreviewGiveFeedback umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.       To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewGiveFeedback jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewGiveFeedback są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>       PreviewGiveFeedback wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewGiveFeedback&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.GiveFeedbackEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.GiveFeedback>.</xref:System.Windows.UIElement3D.GiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A>"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  id: PreviewGiveFeedbackEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGiveFeedbackEvent
  nameWithType: UIElement3D.PreviewGiveFeedbackEvent
  fullName: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewGiveFeedback&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewGiveFeedbackEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocus
  id: PreviewGotKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGotKeyboardFocus
  nameWithType: UIElement3D.PreviewGotKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy klawiatura ma fokus w tym elemencie."
  remarks: "Ponieważ to zdarzenie używa tunelowania routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewGotKeyboardFocus jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewGotKeyboardFocus są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>       PreviewGotKeyboardFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewGotKeyboardFocus&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.GotKeyboardFocus>.</xref:System.Windows.UIElement3D.GotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  id: PreviewGotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGotKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewGotKeyboardFocus&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewGotKeyboardFocusEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyDown
  id: PreviewKeyDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyDown
  nameWithType: UIElement3D.PreviewKeyDown
  fullName: System.Windows.UIElement3D.PreviewKeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie."
  remarks: "Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst. To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewKeyDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewKeyDown są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>       PreviewKeyDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewKeyDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.KeyEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.KeyDown>.</xref:System.Windows.UIElement3D.KeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.PreviewKeyDownEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyDownEvent
  id: PreviewKeyDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyDownEvent
  nameWithType: UIElement3D.PreviewKeyDownEvent
  fullName: System.Windows.UIElement3D.PreviewKeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewKeyDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewKeyDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyUp
  id: PreviewKeyUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyUp
  nameWithType: UIElement3D.PreviewKeyUp
  fullName: System.Windows.UIElement3D.PreviewKeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie."
  remarks: "Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewKeyUp jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewKeyUp są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>       PreviewKeyUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewKeyUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.KeyEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.KeyUp>.</xref:System.Windows.UIElement3D.KeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.PreviewKeyUpEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyUpEvent
  id: PreviewKeyUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyUpEvent
  nameWithType: UIElement3D.PreviewKeyUpEvent
  fullName: System.Windows.UIElement3D.PreviewKeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewKeyUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewKeyUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocus
  id: PreviewLostKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewLostKeyboardFocus
  nameWithType: UIElement3D.PreviewLostKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy klawiatura nie ma już fokusu w tym elemencie."
  remarks: "Ponieważ to zdarzenie używa tunelowania routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A>w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</xref:System.Windows.RoutedEventArgs.Source%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewLostKeyboardFocus jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewLostKeyboardFocus są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>       PreviewLostKeyboardFocus wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewLostKeyboardFocus&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.LostKeyboardFocus>.</xref:System.Windows.UIElement3D.LostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  id: PreviewLostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewLostKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewLostKeyboardFocus&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewLostKeyboardFocusEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseDown
  id: PreviewMouseDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseDown
  nameWithType: UIElement3D.PreviewMouseDown
  fullName: System.Windows.UIElement3D.PreviewMouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewMouseDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewMouseDown są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       Zdarzenie PreviewMouseDown często jest wywoływane z jednej <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>lub <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> </xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>i <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>są również kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> Zobacz uwagi lub <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> </xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>       PreviewMouseDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseDown>.</xref:System.Windows.UIElement3D.MouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseDownEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseDownEvent
  id: PreviewMouseDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseDownEvent
  nameWithType: UIElement3D.PreviewMouseDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  id: PreviewMouseLeftButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonDown
  nameWithType: UIElement3D.PreviewMouseLeftButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu PreviewMouseLeftButtonDown obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Obejmuje to prawdopodobnie wygenerowane klasy obsługi zdarzeń, takich jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>       PreviewMouseLeftButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  id: PreviewMouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseLeftButtonDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  id: PreviewMouseLeftButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonUp
  nameWithType: UIElement3D.PreviewMouseLeftButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu PreviewMouseLeftButtonUp obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>       PreviewMouseLeftButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  id: PreviewMouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseLeftButtonUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseMove
  id: PreviewMouseMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseMove
  nameWithType: UIElement3D.PreviewMouseMove
  fullName: System.Windows.UIElement3D.PreviewMouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "To zdarzenie zarówno występuje, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy jest przesuwany zachowując nadal w granicach elementu.       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewMouseMove jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewMouseMove są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>       PreviewMouseMove wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.MouseEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseMove>.</xref:System.Windows.UIElement3D.MouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler PreviewMouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseMoveEvent
  id: PreviewMouseMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseMoveEvent
  nameWithType: UIElement3D.PreviewMouseMoveEvent
  fullName: System.Windows.UIElement3D.PreviewMouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseMove&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseMoveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDown
  id: PreviewMouseRightButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonDown
  nameWithType: UIElement3D.PreviewMouseRightButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu PreviewMouseRightButtonDown obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Obejmuje to prawdopodobnie wygenerowane klasy obsługi zdarzeń, takich jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>       PreviewMouseRightButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseRightButtonDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  id: PreviewMouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseRightButtonDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUp
  id: PreviewMouseRightButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonUp
  nameWithType: UIElement3D.PreviewMouseRightButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Mimo że to [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia, który jest uruchamiany i reraised wzdłuż drzewa elementu przez każdy <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>zdarzeń.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</xref:System.Windows.UIElement3D.AddHandler%2A> Po zaznaczeniu PreviewMouseRightButtonUp obsługiwane są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy &quot;Usługa&quot; (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse>klasy).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse>klasy, a nie dla tych na <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse>       PreviewMouseRightButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseRightButtonUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  id: PreviewMouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseRightButtonUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseUp
  id: PreviewMouseUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseUp
  nameWithType: UIElement3D.PreviewMouseUp
  fullName: System.Windows.UIElement3D.PreviewMouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewMouseUp jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewMouseUp są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Zdarzenie PreviewMouseUp często jest wywoływane z jednej <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>lub <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> </xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>i <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>są również kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> Zobacz uwagi lub <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> </xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>       PreviewMouseUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.MouseButtonEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseUp>.</xref:System.Windows.UIElement3D.MouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseUpEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseUpEvent
  id: PreviewMouseUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseUpEvent
  nameWithType: UIElement3D.PreviewMouseUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseWheel
  id: PreviewMouseWheel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseWheel
  nameWithType: UIElement3D.PreviewMouseWheel
  fullName: System.Windows.UIElement3D.PreviewMouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem."
  remarks: "Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli to zdarzenie zostanie wyświetlony w elemencie ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewMouseMove>jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement3D.PreviewMouseMove> </xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewMouseMove>zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> </xref:System.Windows.UIElement3D.PreviewMouseMove>       PreviewMouseWheel wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewMouseWheel&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.MouseWheelEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseWheel>.</xref:System.Windows.UIElement3D.MouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A>"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseWheelEvent
  id: PreviewMouseWheelEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseWheelEvent
  nameWithType: UIElement3D.PreviewMouseWheelEvent
  fullName: System.Windows.UIElement3D.PreviewMouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewMouseWheel&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewMouseWheelEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewQueryContinueDrag
  id: PreviewQueryContinueDrag
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewQueryContinueDrag
  nameWithType: UIElement3D.PreviewQueryContinueDrag
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania."
  remarks: "Zdarzenie PreviewQueryContinueDrag umożliwia źródła przeciągania zadeklarować, czy można anulować operację przeciągania i upuszczania.       To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewQueryContinueDrag jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewQueryContinueDrag są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>       PreviewQueryContinueDrag wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewQueryContinueDrag&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.QueryContinueDragEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.QueryContinueDrag>.</xref:System.Windows.UIElement3D.QueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A>"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  id: PreviewQueryContinueDragEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewQueryContinueDragEvent
  nameWithType: UIElement3D.PreviewQueryContinueDragEvent
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewQueryContinueDrag&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewQueryContinueDragEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonDown
  id: PreviewStylusButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonDown
  nameWithType: UIElement3D.PreviewStylusButtonDown
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusButtonDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewStylusButtonDown są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusButtonDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusButtonEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusButtonDown>.</xref:System.Windows.UIElement3D.StylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  id: PreviewStylusButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonDownEvent
  nameWithType: UIElement3D.PreviewStylusButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusButtonDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusButtonDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonUp
  id: PreviewStylusButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonUp
  nameWithType: UIElement3D.PreviewStylusButtonUp
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusButtonUp jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewStylusButtonUp są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusButtonUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusButtonEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusButtonUp>.</xref:System.Windows.UIElement3D.StylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  id: PreviewStylusButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonUpEvent
  nameWithType: UIElement3D.PreviewStylusButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusButtonUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusButtonUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusDown
  id: PreviewStylusDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusDown
  nameWithType: UIElement3D.PreviewStylusDown
  fullName: System.Windows.UIElement3D.PreviewStylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro dotyka digitizera, gdy znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewStylusDown są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusDownEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusDown>.</xref:System.Windows.UIElement3D.StylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusDownEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusDownEvent
  id: PreviewStylusDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusDownEvent
  nameWithType: UIElement3D.PreviewStylusDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInAirMove
  id: PreviewStylusInAirMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInAirMove
  nameWithType: UIElement3D.PreviewStylusInAirMove
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusInAirMove jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzenie PreviewStylusInAirMove są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusInAirMove wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusInAirMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusInAirMove>.</xref:System.Windows.UIElement3D.StylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  id: PreviewStylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInAirMoveEvent
  nameWithType: UIElement3D.PreviewStylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusInAirMove&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusInAirMoveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInRange
  id: PreviewStylusInRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInRange
  nameWithType: UIElement3D.PreviewStylusInRange
  fullName: System.Windows.UIElement3D.PreviewStylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusInRange jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewStylusInRange są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusInRange wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusInRange&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusInRange>.</xref:System.Windows.UIElement3D.StylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInRangeEvent
  id: PreviewStylusInRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInRangeEvent
  nameWithType: UIElement3D.PreviewStylusInRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusInRange&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusInRangeEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusMove
  id: PreviewStylusMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusMove
  nameWithType: UIElement3D.PreviewStylusMove
  fullName: System.Windows.UIElement3D.PreviewStylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest przemieszczane nad elementem. Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <xref href=&quot;System.Windows.UIElement3D.PreviewStylusInAirMove&quot;> </xref> zgłaszane jest zdarzenie."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusMove jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewStylusMove są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusMove wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusMove>.</xref:System.Windows.UIElement3D.StylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusMoveEvent
  id: PreviewStylusMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusMoveEvent
  nameWithType: UIElement3D.PreviewStylusMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusMove&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusMoveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRange
  id: PreviewStylusOutOfRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusOutOfRange
  nameWithType: UIElement3D.PreviewStylusOutOfRange
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusOutOfRange jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewStylusOutOfRange są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusOutOfRange wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusOutOfRange&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusOutOfRange>.</xref:System.Windows.UIElement3D.StylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  id: PreviewStylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusOutOfRangeEvent
  nameWithType: UIElement3D.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusOutOfRange&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusOutOfRangeEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusSystemGesture
  id: PreviewStylusSystemGesture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusSystemGesture
  nameWithType: UIElement3D.PreviewStylusSystemGesture
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra."
  remarks: "Aby uzyskać informacje o gestów pióra Zobacz <xref:System.Windows.Input.SystemGesture>.</xref:System.Windows.Input.SystemGesture>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewStylusSystemGesture jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewStylusSystemGesture są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusSystemGesture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusSystemGesture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusSystemGestureEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusSystemGesture>.</xref:System.Windows.UIElement3D.StylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  id: PreviewStylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusSystemGestureEvent
  nameWithType: UIElement3D.PreviewStylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusSystemGesture&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusSystemGestureEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusUp
  id: PreviewStylusUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusUp
  nameWithType: UIElement3D.PreviewStylusUp
  fullName: System.Windows.UIElement3D.PreviewStylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusDown>jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement3D.PreviewStylusDown> </xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusDown>zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> </xref:System.Windows.UIElement3D.PreviewStylusDown>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       PreviewStylusUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusUp>.</xref:System.Windows.UIElement3D.StylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusUpEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusUpEvent
  id: PreviewStylusUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusUpEvent
  nameWithType: UIElement3D.PreviewStylusUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewStylusUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewStylusUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTextInput
  id: PreviewTextInput
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTextInput
  nameWithType: UIElement3D.PreviewTextInput
  fullName: System.Windows.UIElement3D.PreviewTextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia."
  remarks: "Zdarzenie PreviewTextInput umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia. Klawiatura jest podstawowy sposób PreviewTextInput; ale mowy, pisma ręcznego i innych urządzeniach wejściowych można również generować PreviewTextInput.       Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.       To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby PreviewTextInput jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń PreviewTextInput są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>       PreviewTextInput wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewTextInput&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewTextInputEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.Windows.Input.TextCompositionEventHandler>|      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TextInput>.</xref:System.Windows.UIElement3D.TextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.UIElement3D.PreviewTextInputEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewTextInput%2A>"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTextInputEvent
  id: PreviewTextInputEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTextInputEvent
  nameWithType: UIElement3D.PreviewTextInputEvent
  fullName: System.Windows.UIElement3D.PreviewTextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewTextInput&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       PreviewTextInputEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchDown
  id: PreviewTouchDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchDown
  nameWithType: UIElement3D.PreviewTouchDown
  fullName: System.Windows.UIElement3D.PreviewTouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem."
  remarks: "Domyślnie PreviewTouchDown i <xref:System.Windows.UIElement3D.TouchDown>zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</xref:System.Windows.UIElement3D.TouchDown> Naciśnięcie przycisku palcem na ekranie i utrzymywać bez przenoszenia go powoduje, że naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</xref:System.Windows.Input.Stylus> Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.       Powoduje PreviewTouchDown i <xref:System.Windows.UIElement3D.TouchDown>zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>dołączona właściwość do `false` dla tego elementu.</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> </xref:System.Windows.UIElement3D.TouchDown>      <a name=&quot;routedEventInfo_PreviewTouchDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TouchDown>.</xref:System.Windows.UIElement3D.TouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.PreviewTouchDownEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchDownEvent
  id: PreviewTouchDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchDownEvent
  nameWithType: UIElement3D.PreviewTouchDownEvent
  fullName: System.Windows.UIElement3D.PreviewTouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewTouchDown&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchMove
  id: PreviewTouchMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchMove
  nameWithType: UIElement3D.PreviewTouchMove
  fullName: System.Windows.UIElement3D.PreviewTouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem."
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TouchMove>.</xref:System.Windows.UIElement3D.TouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchMoveEvent
  id: PreviewTouchMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchMoveEvent
  nameWithType: UIElement3D.PreviewTouchMoveEvent
  fullName: System.Windows.UIElement3D.PreviewTouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewTouchMove&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchUp
  id: PreviewTouchUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchUp
  nameWithType: UIElement3D.PreviewTouchUp
  fullName: System.Windows.UIElement3D.PreviewTouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem."
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|   | Strategii routingu | Tunelowanie |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TouchUp>.</xref:System.Windows.UIElement3D.TouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.PreviewTouchUpEvent>      -Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchUpEvent
  id: PreviewTouchUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchUpEvent
  nameWithType: UIElement3D.PreviewTouchUpEvent
  fullName: System.Windows.UIElement3D.PreviewTouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.PreviewTouchUp&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryContinueDrag
  id: QueryContinueDrag
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryContinueDrag
  nameWithType: UIElement3D.QueryContinueDrag
  fullName: System.Windows.UIElement3D.QueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania."
  remarks: "Zdarzenia QueryContinueDrag umożliwia ustalenie, czy można anulować operację przeciągania i upuszczania źródła przeciągania.       To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby QueryContinueDrag jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń QueryContinueDrag są dołączone do odpowiadającego <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>       QueryContinueDrag wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_QueryContinueDrag&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.QueryContinueDragEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.QueryContinueDragEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.</xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.UIElement3D.QueryContinueDragEvent>      -Override <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A>"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryContinueDragEvent
  id: QueryContinueDragEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryContinueDragEvent
  nameWithType: UIElement3D.QueryContinueDragEvent
  fullName: System.Windows.UIElement3D.QueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.QueryContinueDrag&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       QueryContinueDragEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryCursor
  id: QueryCursor
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryCursor
  nameWithType: UIElement3D.QueryCursor
  fullName: System.Windows.UIElement3D.QueryCursor
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy kursor jest wymagane do wyświetlenia. To zdarzenie jest zgłaszane w elemencie każdym razem, gdy wskaźnik myszy jest przesuwany do nowej lokalizacji, która oznacza, że obiekt kursora może zaistnieć konieczność zmiany na podstawie jego nowego położenia."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby QueryCursor jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń QueryCursor są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>       Kursor jest odwołuje się ta nazwa zdarzenia nie jest kursor tekstu (czasem nazywane punktu wstawiania). Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń związanych z danych wejściowych lub pojęcia związane z [!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)] programowania. Ten obiekt jest reprezentowana przez <xref:System.Windows.Input.Cursor>klasy w [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].</xref:System.Windows.Input.Cursor> [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] System wejściowy umożliwia zmianę tego kursora, gdy reprezentuje na ekranie położenia wskaźnika myszy. Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors>wyliczenia, lub można zadeklarować niestandardowych kursora jako plik obrazu.</xref:System.Windows.Input.Cursors>       Zdarzenie QueryCursor nie jest technikę efektywne zarządzanie kursora. Zamiast tego każdy element powinien definiować własne zachowanie kursor i <xref:System.Windows.FrameworkContentElement.Cursor%2A> <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</xref:System.Windows.FrameworkContentElement.ForceCursor%2A> </xref:System.Windows.FrameworkContentElement.Cursor%2A> QueryCursor powinien zależne tylko, jeśli nie używasz WPF poziomie struktury podstawowych elementów lub w dodatkowej okolicznościach gdy Definiowanie zachowania kursor na podstawie na element nie spełnia Twoje potrzeby. Aby uzyskać więcej informacji o implementacji zachowanie kursora w odpowiedzi na QueryCursor zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.</xref:System.Windows.Input.QueryCursorEventHandler>       QueryCursor wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_QueryCursor&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.QueryCursorEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.QueryCursorEventHandler>|      — Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</xref:System.Windows.Input.QueryCursorEventHandler> </xref:System.Windows.UIElement3D.QueryCursorEvent>      -Override <xref:System.Windows.UIElement3D.OnQueryCursor%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnQueryCursor%2A>"
  syntax:
    content: public event System.Windows.Input.QueryCursorEventHandler QueryCursor;
    return:
      type: System.Windows.Input.QueryCursorEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryCursorEvent
  id: QueryCursorEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryCursorEvent
  nameWithType: UIElement3D.QueryCursorEvent
  fullName: System.Windows.UIElement3D.QueryCursorEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.QueryCursor&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       QueryCursorEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryCursorEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)
  id: RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: UIElement3D.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.RaiseEvent(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wywołuje określone kierowanego zdarzenia. <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> Wygenerowany zostanie zidentyfikowana w <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> wystąpienia, który został dostarczony (jako <xref:System.Windows.RoutedEventArgs.RoutedEvent*>Właściwości danych zdarzeń).</xref:System.Windows.RoutedEventArgs.RoutedEvent*>"
  remarks: "`e` Parametr jest typu jako typu podstawowego wspólne dla wszystkich danych kierowanego zdarzenia; jednak dane zdarzenia powinny być podane specyficzny typem danych zdarzenia, który jest dostępny dla zdarzeń zgłaszanych, ponieważ <xref:System.Windows.RoutedEventArgs>klas pochodnych zawierają właściwości określone dane, które są przeznaczone do określonego zdarzenia, gdy jest on uruchamiany.</xref:System.Windows.RoutedEventArgs>       <xref:System.Windows.RoutedEventArgs>nie jest tylko właściwości stan dla zdarzeń; identyfikuje które kierowanego zdarzenia, aby wywołać.</xref:System.Windows.RoutedEventArgs> Ten wzorzec wywoływanie zdarzeń i danych kierowanego zdarzenia zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle zawierają tylko właściwości, które są powiązane ze zdarzeniem.       RaiseEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void RaiseEvent (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "A <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> zawiera dane zdarzeń i identyfikuje również zdarzeń, aby wywołać."
  overload: System.Windows.UIElement3D.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures
  id: ReleaseAllTouchCaptures
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseAllTouchCaptures()
  nameWithType: UIElement3D.ReleaseAllTouchCaptures()
  fullName: System.Windows.UIElement3D.ReleaseAllTouchCaptures()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zwalnia wszystkie urządzenia touch przechwyconych z tego elementu."
  syntax:
    content: public void ReleaseAllTouchCaptures ();
    parameters: []
  overload: System.Windows.UIElement3D.ReleaseAllTouchCaptures*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseMouseCapture
  id: ReleaseMouseCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseMouseCapture()
  nameWithType: UIElement3D.ReleaseMouseCapture()
  fullName: System.Windows.UIElement3D.ReleaseMouseCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Jeżeli ten element przechwytywania, zwalnia przechwytywanie myszy."
  remarks: "Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia. Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement3D.IsMouseCaptured%2A>przed wywołaniem tej metody.</xref:System.Windows.UIElement3D.IsMouseCaptured%2A>       ReleaseMouseCapture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void ReleaseMouseCapture ();
    parameters: []
  overload: System.Windows.UIElement3D.ReleaseMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseStylusCapture
  id: ReleaseStylusCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseStylusCapture()
  nameWithType: UIElement3D.ReleaseStylusCapture()
  fullName: System.Windows.UIElement3D.ReleaseStylusCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zwalnia Przechwytywanie urządzenia pióra, jeżeli ten element przechwytywania."
  remarks: "Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia. Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement3D.IsStylusCaptured%2A>przed wywołaniem tej metody.</xref:System.Windows.UIElement3D.IsStylusCaptured%2A>       ReleaseStylusCapture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void ReleaseStylusCapture ();
    parameters: []
  overload: System.Windows.UIElement3D.ReleaseStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  id: ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: UIElement3D.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.UIElement3D.ReleaseTouchCapture(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Próbuje zwolnić urządzenia określonego touch z tego elementu."
  syntax:
    content: public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "Urządzenie do zwolnienia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli urządzenie touch zwolnieniu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement3D.ReleaseTouchCapture*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  id: RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.RemoveHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Usuwa obsługi określonego kierowanego zdarzenia z tego elementu."
  remarks: "Najbardziej typowym scenariuszem stosowania to [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] zdarzeń &quot;otoki&quot;, który jest skojarzony z routingiem zdarzenie niestandardowe, w szczególności, gdy należy wdrożyć logikę &quot;Usuń&quot; dla programów obsługi na [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] poziom.       Wywołanie tej metody nie ma znaczenia, jeśli nie było żadnych programów obsługi zarejestrowany z kryteriami zgodnych parametrów wejściowych dla wywołania metody.       Jeśli więcej niż jeden program obsługi jest dołączony pasujących kryteria tylko pierwszego programu obsługi w przypadku obsługi magazyn zostanie usunięty. To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.       Ani `routedEvent` ani `handler` może być `null`. Podjęto próbę podać te wartości jako `null` zgłosi wyjątek.       Ta metoda powoduje ignorowanie `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi został po raz pierwszy dodane z <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>podpisie, który włącza obsługę zdarzeń już obsługiwane.</xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Dowolnego typu program obsługi zostanie usunięta.       RemoveHandler wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Identyfikator kierowanego zdarzenia, dla którego jest umocowana Obsługa."
    - id: handler
      type: System.Delegate
      description: "Implementacja określony program obsługi, aby usunąć z kolekcji programu obsługi zdarzeń w tym elemencie."
  overload: System.Windows.UIElement3D.RemoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings
  id: ShouldSerializeCommandBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ShouldSerializeCommandBindings()
  nameWithType: UIElement3D.ShouldSerializeCommandBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeCommandBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zwraca czy procesy serializacji powinny serializować zawartości <xref:System.Windows.UIElement3D.CommandBindings*>właściwości wystąpienia tej klasy.</xref:System.Windows.UIElement3D.CommandBindings*>"
  remarks: "Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement3D.CommandBindings%2A>lokalnie jest ustawiona.</xref:System.Windows.UIElement3D.CommandBindings%2A>       To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement3D.CommandBindings%2A>właściwość nie ma wartości domyślnej proste.</xref:System.Windows.UIElement3D.CommandBindings%2A> Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę albo opracowywanie projektanta lub opracowanie własnego formantu zawierających <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/add/includes/ajax-current-ext-md.md).       ShouldSerializeCommandBindings wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ShouldSerializeCommandBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.UIElement3D.CommandBindings*>wartość właściwości powinny być serializowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.UIElement3D.CommandBindings*>"
  overload: System.Windows.UIElement3D.ShouldSerializeCommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings
  id: ShouldSerializeInputBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ShouldSerializeInputBindings()
  nameWithType: UIElement3D.ShouldSerializeInputBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeInputBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zwraca czy procesy serializacji powinny serializować zawartości <xref:System.Windows.UIElement3D.InputBindings*>właściwości wystąpienia tej klasy.</xref:System.Windows.UIElement3D.InputBindings*>"
  remarks: "Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement3D.InputBindings%2A>lokalnie jest ustawiona.</xref:System.Windows.UIElement3D.InputBindings%2A>       To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement3D.InputBindings%2A>właściwość nie ma wartości domyślnej proste.</xref:System.Windows.UIElement3D.InputBindings%2A> Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę albo opracowywanie projektanta lub opracowanie własnego formantu zawierających <xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>       Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/add/includes/ajax-current-ext-md.md).       ShouldSerializeInputBindings wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ShouldSerializeInputBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Windows.UIElement3D.InputBindings*>wartość właściwości powinny być serializowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.UIElement3D.InputBindings*>"
  overload: System.Windows.UIElement3D.ShouldSerializeInputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonDown
  id: StylusButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonDown
  nameWithType: UIElement3D.StylusButtonDown
  fullName: System.Windows.UIElement3D.StylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusButtonDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusButtonDown są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusButtonDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusButtonDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusButtonDownEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusButtonEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.</xref:System.Windows.UIElement3D.PreviewStylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.StylusButtonDownEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusButtonDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonDownEvent
  id: StylusButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonDownEvent
  nameWithType: UIElement3D.StylusButtonDownEvent
  fullName: System.Windows.UIElement3D.StylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusButtonDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusButtonDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonUp
  id: StylusButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonUp
  nameWithType: UIElement3D.StylusButtonUp
  fullName: System.Windows.UIElement3D.StylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusButtonUp jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusButtonUp są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusButtonUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusButtonUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusButtonUpEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusButtonEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.</xref:System.Windows.UIElement3D.PreviewStylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.StylusButtonUpEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusButtonUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonUpEvent
  id: StylusButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonUpEvent
  nameWithType: UIElement3D.StylusButtonUpEvent
  fullName: System.Windows.UIElement3D.StylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusButtonUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusButtonUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusDown
  id: StylusDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusDown
  nameWithType: UIElement3D.StylusDown
  fullName: System.Windows.UIElement3D.StylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro dotyka digitizera, gdy pióro znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusDown jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusDown są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusDown wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusDownEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusDownEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusDown>.</xref:System.Windows.UIElement3D.PreviewStylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.UIElement3D.StylusDownEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler StylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusDownEvent
  id: StylusDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusDownEvent
  nameWithType: UIElement3D.StylusDownEvent
  fullName: System.Windows.UIElement3D.StylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusDown&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusDownEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusEnter
  id: StylusEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusEnter
  nameWithType: UIElement3D.StylusEnter
  fullName: System.Windows.UIElement3D.StylusEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po pokonaniu przez pióro granic tego elementu."
  remarks: "Jest StylusEnter [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane. Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.       Mimo że StylusEnter śledzi po pokonaniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsStylusOver%2A>zmieniono wartość właściwości z `false` do `true` w tym elemencie.</xref:System.Windows.UIElement3D.IsStylusOver%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusEnter jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusEnter są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusEnter wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusEnter&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusEnterEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnStylusEnter%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusEnter%2A> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusEnterEvent>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusEnter;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusEnterEvent
  id: StylusEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusEnterEvent
  nameWithType: UIElement3D.StylusEnterEvent
  fullName: System.Windows.UIElement3D.StylusEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusEnter&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusEnterEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInAirMove
  id: StylusInAirMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInAirMove
  nameWithType: UIElement3D.StylusInAirMove
  fullName: System.Windows.UIElement3D.StylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>dołączony zdarzeń dla tej klasy, aby zdarzenie StylusInAirMove jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń zdarzenie StylusInAirMove są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       Zdarzenie StylusInAirMove wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusInAirMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.</xref:System.Windows.UIElement3D.PreviewStylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusInAirMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusInAirMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInAirMoveEvent
  id: StylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInAirMoveEvent
  nameWithType: UIElement3D.StylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.StylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusInAirMove&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusInAirMoveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInRange
  id: StylusInRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInRange
  nameWithType: UIElement3D.StylusInRange
  fullName: System.Windows.UIElement3D.StylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusInRange jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusInRange są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusInRange wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusInRange&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusInRangeEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusInRange>.</xref:System.Windows.UIElement3D.PreviewStylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusInRangeEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusInRange%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusInRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInRangeEvent
  id: StylusInRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInRangeEvent
  nameWithType: UIElement3D.StylusInRangeEvent
  fullName: System.Windows.UIElement3D.StylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusInRange&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusInRangeEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusLeave
  id: StylusLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusLeave
  nameWithType: UIElement3D.StylusLeave
  fullName: System.Windows.UIElement3D.StylusLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po opuszczeniu przez pióro granic elementu przez."
  remarks: "Jest StylusLeave [kierowane Przegląd zdarzeń](~/add/includes/ajax-current-ext-md.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane. Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.       Mimo że StylusLeave śledzi po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsStylusOver%2A>zmieniono wartość właściwości z `true` do `false` w tym elemencie.</xref:System.Windows.UIElement3D.IsStylusOver%2A>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusLeave jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusLeave są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusLeave wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusLeave&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusLeaveEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      -Override <xref:System.Windows.UIElement3D.OnStylusLeave%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusLeave%2A> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusLeaveEvent>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusLeave;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusLeaveEvent
  id: StylusLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusLeaveEvent
  nameWithType: UIElement3D.StylusLeaveEvent
  fullName: System.Windows.UIElement3D.StylusLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusLeave&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusLeaveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusMove
  id: StylusMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusMove
  nameWithType: UIElement3D.StylusMove
  fullName: System.Windows.UIElement3D.StylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest przemieszczane nad tym elementem. Pióro musi dotykać powierzchni dyskretyzatora, aby zgłosić to zdarzenie. W przeciwnym razie <xref href=&quot;System.Windows.UIElement3D.StylusInAirMove&quot;> </xref> zgłaszane jest zdarzenie."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusMove jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusMove są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusMove wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusMoveEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusMove>.</xref:System.Windows.UIElement3D.PreviewStylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusMoveEvent
  id: StylusMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusMoveEvent
  nameWithType: UIElement3D.StylusMoveEvent
  fullName: System.Windows.UIElement3D.StylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusMove&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusMoveEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusOutOfRange
  id: StylusOutOfRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusOutOfRange
  nameWithType: UIElement3D.StylusOutOfRange
  fullName: System.Windows.UIElement3D.StylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusOutOfRange jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusOutOfRange są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusOutOfRange wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusOutOfRange&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.</xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusOutOfRangeEvent
  id: StylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusOutOfRangeEvent
  nameWithType: UIElement3D.StylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.StylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusOutOfRange&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusOutOfRangeEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusSystemGesture
  id: StylusSystemGesture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusSystemGesture
  nameWithType: UIElement3D.StylusSystemGesture
  fullName: System.Windows.UIElement3D.StylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra."
  remarks: "Aby uzyskać więcej informacji na temat gestów pióra Zobacz <xref:System.Windows.Input.SystemGesture>.</xref:System.Windows.Input.SystemGesture>       To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusSystemGesture jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusSystemGesture są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusSystemGesture wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusSystemGesture&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusSystemGestureEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.</xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.UIElement3D.StylusSystemGestureEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusSystemGestureEvent
  id: StylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusSystemGestureEvent
  nameWithType: UIElement3D.StylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.StylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusSystemGesture&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusSystemGestureEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusUp
  id: StylusUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusUp
  nameWithType: UIElement3D.StylusUp
  fullName: System.Windows.UIElement3D.StylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy znajduje się nad tym elementem."
  remarks: "To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby StylusUp jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń StylusUp są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>       Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/add/includes/ajax-current-ext-md.md).       StylusUp wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.StylusUpEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.StylusEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusUp>.</xref:System.Windows.UIElement3D.PreviewStylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusUpEvent>      -Override <xref:System.Windows.UIElement3D.OnStylusUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnStylusUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusUpEvent
  id: StylusUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusUpEvent
  nameWithType: UIElement3D.StylusUpEvent
  fullName: System.Windows.UIElement3D.StylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.StylusUp&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       StylusUpEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TextInput
  id: TextInput
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TextInput
  nameWithType: UIElement3D.TextInput
  fullName: System.Windows.UIElement3D.TextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia."
  remarks: "Zdarzenie TextInput umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia. Klawiatura jest podstawowym elementem używanym TextInput, ale mowy, pisma ręcznego i innych urządzeniach wejściowych może też wiązać TextInput.       Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza może zgłaszać tylko jedno zdarzenie wprowadzania tekstu.       To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>dołączony zdarzeń dla tej klasy, tak aby TextInput jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D>jest dziedziczona jako podstawowy element.</xref:System.Windows.UIElement3D> </xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> Programy obsługi zdarzeń, które są dołączone do zdarzeń TextInput są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>       TextInput wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_TextInput&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.TextInputEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.Windows.Input.TextCompositionEventHandler>|      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTextInput>.</xref:System.Windows.UIElement3D.PreviewTextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.UIElement3D.TextInputEvent>      -Override <xref:System.Windows.UIElement3D.OnTextInput%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnTextInput%2A>"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler TextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TextInputEvent
  id: TextInputEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TextInputEvent
  nameWithType: UIElement3D.TextInputEvent
  fullName: System.Windows.UIElement3D.TextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.TextInput&quot;> </xref> kierowanego zdarzenia."
  remarks: "Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.       Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>       TextInputEvent wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchDown
  id: TouchDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchDown
  nameWithType: UIElement3D.TouchDown
  fullName: System.Windows.UIElement3D.TouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem."
  remarks: "Domyślnie <xref:System.Windows.UIElement3D.PreviewTouchDown>i TouchDown zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</xref:System.Windows.UIElement3D.PreviewTouchDown> Naciśnięcie przycisku palcem na ekranie i utrzymywać bez przenoszenia go powoduje, że naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</xref:System.Windows.Input.Stylus> Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.       Powoduje <xref:System.Windows.UIElement3D.PreviewTouchDown>i TouchDown zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>dołączona właściwość do `false` dla tego elementu.</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> </xref:System.Windows.UIElement3D.PreviewTouchDown>      <a name=&quot;routedEventInfo_TouchDown&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.TouchDownEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTouchDown>.</xref:System.Windows.UIElement3D.PreviewTouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchDownEvent>      -Override <xref:System.Windows.UIElement3D.OnTouchDown%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnTouchDown%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchDownEvent
  id: TouchDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchDownEvent
  nameWithType: UIElement3D.TouchDownEvent
  fullName: System.Windows.UIElement3D.TouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.TouchDown&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchEnter
  id: TouchEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchEnter
  nameWithType: UIElement3D.TouchEnter
  fullName: System.Windows.UIElement3D.TouchEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu."
  remarks: "To zdarzenie jest zawsze zgłaszane, czy urządzenie touch są przechwytywane do tego elementu.      <a name=&quot;routedEventInfo_TouchEnter&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.TouchEnterEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      -Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnTouchEnter%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchEnterEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchEnter;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchEnterEvent
  id: TouchEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchEnterEvent
  nameWithType: UIElement3D.TouchEnterEvent
  fullName: System.Windows.UIElement3D.TouchEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.TouchEnter&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesCaptured
  id: TouchesCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesCaptured
  nameWithType: UIElement3D.TouchesCaptured
  fullName: System.Windows.UIElement3D.TouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCaptured { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Wyliczenie <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> obiektów, które są przechwytywane do tego elementu."
  overload: System.Windows.UIElement3D.TouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesCapturedWithin
  id: TouchesCapturedWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesCapturedWithin
  nameWithType: UIElement3D.TouchesCapturedWithin
  fullName: System.Windows.UIElement3D.TouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCapturedWithin { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Wyliczenie <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> obiektów, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym."
  overload: System.Windows.UIElement3D.TouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesDirectlyOver
  id: TouchesDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesDirectlyOver
  nameWithType: UIElement3D.TouchesDirectlyOver
  fullName: System.Windows.UIElement3D.TouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesDirectlyOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Wyliczenie <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> obiektów znajdujących się nad tym elementem."
  overload: System.Windows.UIElement3D.TouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesOver
  id: TouchesOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesOver
  nameWithType: UIElement3D.TouchesOver
  fullName: System.Windows.UIElement3D.TouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewie wizualnym."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Wyliczenie <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewie wizualnym."
  overload: System.Windows.UIElement3D.TouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchLeave
  id: TouchLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchLeave
  nameWithType: UIElement3D.TouchLeave
  fullName: System.Windows.UIElement3D.TouchLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu."
  remarks: "<a name=&quot;routedEventInfo_TouchLeave&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.TouchLeaveEvent>|   | Strategii routingu | Bezpośrednie |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      -Override <xref:System.Windows.UIElement3D.OnTouchLeave%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnTouchLeave%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchLeaveEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchLeave;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchLeaveEvent
  id: TouchLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchLeaveEvent
  nameWithType: UIElement3D.TouchLeaveEvent
  fullName: System.Windows.UIElement3D.TouchLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.TouchLeave&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchMove
  id: TouchMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchMove
  nameWithType: UIElement3D.TouchMove
  fullName: System.Windows.UIElement3D.TouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem."
  remarks: "<a name=&quot;routedEventInfo_TouchMove&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.TouchMoveEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTouchMove>.</xref:System.Windows.UIElement3D.PreviewTouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchMoveEvent>      -Override <xref:System.Windows.UIElement3D.OnTouchMove%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnTouchMove%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchMoveEvent
  id: TouchMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchMoveEvent
  nameWithType: UIElement3D.TouchMoveEvent
  fullName: System.Windows.UIElement3D.TouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.TouchMove&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchUp
  id: TouchUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchUp
  nameWithType: UIElement3D.TouchUp
  fullName: System.Windows.UIElement3D.TouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem."
  remarks: "<a name=&quot;routedEventInfo_TouchUp&quot;></a>## Przesyłane informacje o zdarzeniach |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.TouchUpEvent>|   | Strategii routingu | Propagacji |   | Delegat | <xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>. |      Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTouchUp>.</xref:System.Windows.UIElement3D.PreviewTouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchUpEvent>      -Override <xref:System.Windows.UIElement3D.OnTouchUp%2A>do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</xref:System.Windows.UIElement3D.OnTouchUp%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchUpEvent
  id: TouchUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchUpEvent
  nameWithType: UIElement3D.TouchUpEvent
  fullName: System.Windows.UIElement3D.TouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref href=&quot;System.Windows.UIElement3D.TouchUp&quot;> </xref> kierowanego zdarzenia."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Visibility
  id: Visibility
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Visibility
  nameWithType: UIElement3D.Visibility
  fullName: System.Windows.UIElement3D.Visibility
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pobiera lub ustawia [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] widoczność tego elementu."
  remarks: "Ustawienie tej właściwości ma wpływ na wartość <xref:System.Windows.UIElement3D.IsVisible%2A>, który z kolei mogą zgłaszać <xref:System.Windows.UIElement3D.IsVisibleChanged>zdarzeń.</xref:System.Windows.UIElement3D.IsVisibleChanged> </xref:System.Windows.UIElement3D.IsVisible%2A> Jednak <xref:System.Windows.UIElement3D.IsVisible%2A>ma inne czynniki, które wpływają go, na przykład ustawień widoczności elementów nadrzędnych, które zawierają go.</xref:System.Windows.UIElement3D.IsVisible%2A>       Elementy, których widoczność nie jest <xref:System.Windows.Visibility>nie uczestniczą w zdarzeniach wejściowych (lub polecenia) i nie są zgłaszane podczas testowania trafień.</xref:System.Windows.Visibility>       Widoczność wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_Visibility&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.UIElement3D.VisibilityProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.UIElement3D.VisibilityProperty>"
  syntax:
    content: public System.Windows.Visibility Visibility { get; set; }
    return:
      type: System.Windows.Visibility
      description: "Wartość wyliczenia. Wartość domyślna to <xref href=&quot;System.Windows.Visibility&quot;> </xref>."
  overload: System.Windows.UIElement3D.Visibility*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.VisibilityProperty
  id: VisibilityProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: VisibilityProperty
  nameWithType: UIElement3D.VisibilityProperty
  fullName: System.Windows.UIElement3D.VisibilityProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identyfikuje <xref:System.Windows.UIElement3D.Visibility*>Właściwości zależności.</xref:System.Windows.UIElement3D.Visibility*>"
  remarks: "VisibilityProperty wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty VisibilityProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Media3D.Visual3D
  isExternal: false
  name: System.Windows.Media.Media3D.Visual3D
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.UIElement3D.#ctor
  parent: System.Windows.UIElement3D
  isExternal: false
  name: UIElement3D()
  nameWithType: UIElement3D.UIElement3D()
  fullName: System.Windows.UIElement3D.UIElement3D()
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
- uid: System.Windows.EventRoute
  parent: System.Windows
  isExternal: false
  name: EventRoute
  nameWithType: EventRoute
  fullName: System.Windows.EventRoute
- uid: System.Windows.RoutedEventArgs
  parent: System.Windows
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.UIElement3D.AllowDrop
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AllowDrop
  nameWithType: UIElement3D.AllowDrop
  fullName: System.Windows.UIElement3D.AllowDrop
- uid: System.Windows.UIElement3D.AllowDropProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AllowDropProperty
  nameWithType: UIElement3D.AllowDropProperty
  fullName: System.Windows.UIElement3D.AllowDropProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: UIElement3D.AreAnyTouchesCaptured
  fullName: System.Windows.UIElement3D.AreAnyTouchesCaptured
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: UIElement3D.AreAnyTouchesOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesOver
- uid: System.Windows.UIElement3D.AreAnyTouchesOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesOverProperty
  nameWithType: UIElement3D.AreAnyTouchesOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesOverProperty
- uid: System.Windows.UIElement3D.CaptureMouse
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureMouse()
  nameWithType: UIElement3D.CaptureMouse()
  fullName: System.Windows.UIElement3D.CaptureMouse()
- uid: System.Windows.UIElement3D.CaptureStylus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureStylus()
  nameWithType: UIElement3D.CaptureStylus()
  fullName: System.Windows.UIElement3D.CaptureStylus()
- uid: System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureTouch(TouchDevice)
  nameWithType: UIElement3D.CaptureTouch(TouchDevice)
  fullName: System.Windows.UIElement3D.CaptureTouch(TouchDevice)
- uid: System.Windows.Input.TouchDevice
  parent: System.Windows.Input
  isExternal: false
  name: TouchDevice
  nameWithType: TouchDevice
  fullName: System.Windows.Input.TouchDevice
- uid: System.Windows.UIElement3D.CommandBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CommandBindings
  nameWithType: UIElement3D.CommandBindings
  fullName: System.Windows.UIElement3D.CommandBindings
- uid: System.Windows.Input.CommandBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: CommandBindingCollection
  nameWithType: CommandBindingCollection
  fullName: System.Windows.Input.CommandBindingCollection
- uid: System.Windows.UIElement3D.DragEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragEnter
  nameWithType: UIElement3D.DragEnter
  fullName: System.Windows.UIElement3D.DragEnter
- uid: System.Windows.DragEventHandler
  parent: System.Windows
  isExternal: false
  name: DragEventHandler
  nameWithType: DragEventHandler
  fullName: System.Windows.DragEventHandler
- uid: System.Windows.UIElement3D.DragEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragEnterEvent
  nameWithType: UIElement3D.DragEnterEvent
  fullName: System.Windows.UIElement3D.DragEnterEvent
- uid: System.Windows.UIElement3D.DragLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragLeave
  nameWithType: UIElement3D.DragLeave
  fullName: System.Windows.UIElement3D.DragLeave
- uid: System.Windows.UIElement3D.DragLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragLeaveEvent
  nameWithType: UIElement3D.DragLeaveEvent
  fullName: System.Windows.UIElement3D.DragLeaveEvent
- uid: System.Windows.UIElement3D.DragOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragOver
  nameWithType: UIElement3D.DragOver
  fullName: System.Windows.UIElement3D.DragOver
- uid: System.Windows.UIElement3D.DragOverEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragOverEvent
  nameWithType: UIElement3D.DragOverEvent
  fullName: System.Windows.UIElement3D.DragOverEvent
- uid: System.Windows.UIElement3D.Drop
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Drop
  nameWithType: UIElement3D.Drop
  fullName: System.Windows.UIElement3D.Drop
- uid: System.Windows.UIElement3D.DropEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DropEvent
  nameWithType: UIElement3D.DropEvent
  fullName: System.Windows.UIElement3D.DropEvent
- uid: System.Windows.UIElement3D.Focus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focus()
  nameWithType: UIElement3D.Focus()
  fullName: System.Windows.UIElement3D.Focus()
- uid: System.Windows.UIElement3D.Focusable
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focusable
  nameWithType: UIElement3D.Focusable
  fullName: System.Windows.UIElement3D.Focusable
- uid: System.Windows.UIElement3D.FocusableChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: FocusableChanged
  nameWithType: UIElement3D.FocusableChanged
  fullName: System.Windows.UIElement3D.FocusableChanged
- uid: System.Windows.DependencyPropertyChangedEventHandler
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventHandler
  nameWithType: DependencyPropertyChangedEventHandler
  fullName: System.Windows.DependencyPropertyChangedEventHandler
- uid: System.Windows.UIElement3D.FocusableProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: FocusableProperty
  nameWithType: UIElement3D.FocusableProperty
  fullName: System.Windows.UIElement3D.FocusableProperty
- uid: System.Windows.UIElement3D.GetUIParentCore
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GetUIParentCore()
  nameWithType: UIElement3D.GetUIParentCore()
  fullName: System.Windows.UIElement3D.GetUIParentCore()
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.UIElement3D.GiveFeedback
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GiveFeedback
  nameWithType: UIElement3D.GiveFeedback
  fullName: System.Windows.UIElement3D.GiveFeedback
- uid: System.Windows.GiveFeedbackEventHandler
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventHandler
  nameWithType: GiveFeedbackEventHandler
  fullName: System.Windows.GiveFeedbackEventHandler
- uid: System.Windows.UIElement3D.GiveFeedbackEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GiveFeedbackEvent
  nameWithType: UIElement3D.GiveFeedbackEvent
  fullName: System.Windows.UIElement3D.GiveFeedbackEvent
- uid: System.Windows.UIElement3D.GotFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotFocus
  nameWithType: UIElement3D.GotFocus
  fullName: System.Windows.UIElement3D.GotFocus
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.UIElement3D.GotFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotFocusEvent
  nameWithType: UIElement3D.GotFocusEvent
  fullName: System.Windows.UIElement3D.GotFocusEvent
- uid: System.Windows.UIElement3D.GotKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotKeyboardFocus
  nameWithType: UIElement3D.GotKeyboardFocus
  fullName: System.Windows.UIElement3D.GotKeyboardFocus
- uid: System.Windows.Input.KeyboardFocusChangedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventHandler
  nameWithType: KeyboardFocusChangedEventHandler
  fullName: System.Windows.Input.KeyboardFocusChangedEventHandler
- uid: System.Windows.UIElement3D.GotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotKeyboardFocusEvent
  nameWithType: UIElement3D.GotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.GotKeyboardFocusEvent
- uid: System.Windows.UIElement3D.GotMouseCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotMouseCapture
  nameWithType: UIElement3D.GotMouseCapture
  fullName: System.Windows.UIElement3D.GotMouseCapture
- uid: System.Windows.Input.MouseEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Input.MouseEventHandler
- uid: System.Windows.UIElement3D.GotMouseCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotMouseCaptureEvent
  nameWithType: UIElement3D.GotMouseCaptureEvent
  fullName: System.Windows.UIElement3D.GotMouseCaptureEvent
- uid: System.Windows.UIElement3D.GotStylusCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotStylusCapture
  nameWithType: UIElement3D.GotStylusCapture
  fullName: System.Windows.UIElement3D.GotStylusCapture
- uid: System.Windows.Input.StylusEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventHandler
  nameWithType: StylusEventHandler
  fullName: System.Windows.Input.StylusEventHandler
- uid: System.Windows.UIElement3D.GotStylusCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotStylusCaptureEvent
  nameWithType: UIElement3D.GotStylusCaptureEvent
  fullName: System.Windows.UIElement3D.GotStylusCaptureEvent
- uid: System.Windows.UIElement3D.GotTouchCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotTouchCapture
  nameWithType: UIElement3D.GotTouchCapture
  fullName: System.Windows.UIElement3D.GotTouchCapture
- uid: System.EventHandler{System.Windows.Input.TouchEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<TouchEventArgs>
  nameWithType: EventHandler<TouchEventArgs>
  fullName: System.EventHandler<System.Windows.Input.TouchEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.TouchEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchEventArgs
    name: TouchEventArgs
    nameWithType: TouchEventArgs
    fullName: TouchEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement3D.GotTouchCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotTouchCaptureEvent
  nameWithType: UIElement3D.GotTouchCaptureEvent
  fullName: System.Windows.UIElement3D.GotTouchCaptureEvent
- uid: System.Windows.UIElement3D.InputBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InputBindings
  nameWithType: UIElement3D.InputBindings
  fullName: System.Windows.UIElement3D.InputBindings
- uid: System.Windows.Input.InputBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: InputBindingCollection
  nameWithType: InputBindingCollection
  fullName: System.Windows.Input.InputBindingCollection
- uid: System.Windows.UIElement3D.InvalidateModel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InvalidateModel()
  nameWithType: UIElement3D.InvalidateModel()
  fullName: System.Windows.UIElement3D.InvalidateModel()
- uid: System.Windows.UIElement3D.IsEnabled
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabled
  nameWithType: UIElement3D.IsEnabled
  fullName: System.Windows.UIElement3D.IsEnabled
- uid: System.Windows.UIElement3D.IsEnabledChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledChanged
  nameWithType: UIElement3D.IsEnabledChanged
  fullName: System.Windows.UIElement3D.IsEnabledChanged
- uid: System.Windows.UIElement3D.IsEnabledCore
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledCore
  nameWithType: UIElement3D.IsEnabledCore
  fullName: System.Windows.UIElement3D.IsEnabledCore
- uid: System.Windows.UIElement3D.IsEnabledProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledProperty
  nameWithType: UIElement3D.IsEnabledProperty
  fullName: System.Windows.UIElement3D.IsEnabledProperty
- uid: System.Windows.UIElement3D.IsFocused
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsFocused
  nameWithType: UIElement3D.IsFocused
  fullName: System.Windows.UIElement3D.IsFocused
- uid: System.Windows.UIElement3D.IsFocusedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsFocusedProperty
  nameWithType: UIElement3D.IsFocusedProperty
  fullName: System.Windows.UIElement3D.IsFocusedProperty
- uid: System.Windows.UIElement3D.IsHitTestVisible
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisible
  nameWithType: UIElement3D.IsHitTestVisible
  fullName: System.Windows.UIElement3D.IsHitTestVisible
- uid: System.Windows.UIElement3D.IsHitTestVisibleChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisibleChanged
  nameWithType: UIElement3D.IsHitTestVisibleChanged
  fullName: System.Windows.UIElement3D.IsHitTestVisibleChanged
- uid: System.Windows.UIElement3D.IsHitTestVisibleProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisibleProperty
  nameWithType: UIElement3D.IsHitTestVisibleProperty
  fullName: System.Windows.UIElement3D.IsHitTestVisibleProperty
- uid: System.Windows.UIElement3D.IsInputMethodEnabled
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: UIElement3D.IsInputMethodEnabled
  fullName: System.Windows.UIElement3D.IsInputMethodEnabled
- uid: System.Windows.UIElement3D.IsKeyboardFocused
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: UIElement3D.IsKeyboardFocused
  fullName: System.Windows.UIElement3D.IsKeyboardFocused
- uid: System.Windows.UIElement3D.IsKeyboardFocusedChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusedChanged
  nameWithType: UIElement3D.IsKeyboardFocusedChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedChanged
- uid: System.Windows.UIElement3D.IsKeyboardFocusedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusedProperty
  nameWithType: UIElement3D.IsKeyboardFocusedProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedProperty
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: UIElement3D.IsKeyboardFocusWithin
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithin
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithinChanged
  nameWithType: UIElement3D.IsKeyboardFocusWithinChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithinProperty
  nameWithType: UIElement3D.IsKeyboardFocusWithinProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
- uid: System.Windows.UIElement3D.IsMouseCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptured
  nameWithType: UIElement3D.IsMouseCaptured
  fullName: System.Windows.UIElement3D.IsMouseCaptured
- uid: System.Windows.UIElement3D.IsMouseCapturedChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCapturedChanged
  nameWithType: UIElement3D.IsMouseCapturedChanged
  fullName: System.Windows.UIElement3D.IsMouseCapturedChanged
- uid: System.Windows.UIElement3D.IsMouseCapturedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCapturedProperty
  nameWithType: UIElement3D.IsMouseCapturedProperty
  fullName: System.Windows.UIElement3D.IsMouseCapturedProperty
- uid: System.Windows.UIElement3D.IsMouseCaptureWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: UIElement3D.IsMouseCaptureWithin
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithin
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithinChanged
  nameWithType: UIElement3D.IsMouseCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithinProperty
  nameWithType: UIElement3D.IsMouseCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
- uid: System.Windows.UIElement3D.IsMouseDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: UIElement3D.IsMouseDirectlyOver
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOver
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOverChanged
  nameWithType: UIElement3D.IsMouseDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOverProperty
  nameWithType: UIElement3D.IsMouseDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
- uid: System.Windows.UIElement3D.IsMouseOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseOver
  nameWithType: UIElement3D.IsMouseOver
  fullName: System.Windows.UIElement3D.IsMouseOver
- uid: System.Windows.UIElement3D.IsMouseOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseOverProperty
  nameWithType: UIElement3D.IsMouseOverProperty
  fullName: System.Windows.UIElement3D.IsMouseOverProperty
- uid: System.Windows.UIElement3D.IsStylusCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptured
  nameWithType: UIElement3D.IsStylusCaptured
  fullName: System.Windows.UIElement3D.IsStylusCaptured
- uid: System.Windows.UIElement3D.IsStylusCapturedChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCapturedChanged
  nameWithType: UIElement3D.IsStylusCapturedChanged
  fullName: System.Windows.UIElement3D.IsStylusCapturedChanged
- uid: System.Windows.UIElement3D.IsStylusCapturedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCapturedProperty
  nameWithType: UIElement3D.IsStylusCapturedProperty
  fullName: System.Windows.UIElement3D.IsStylusCapturedProperty
- uid: System.Windows.UIElement3D.IsStylusCaptureWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: UIElement3D.IsStylusCaptureWithin
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithin
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithinChanged
  nameWithType: UIElement3D.IsStylusCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithinProperty
  nameWithType: UIElement3D.IsStylusCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
- uid: System.Windows.UIElement3D.IsStylusDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: UIElement3D.IsStylusDirectlyOver
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOver
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOverChanged
  nameWithType: UIElement3D.IsStylusDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOverProperty
  nameWithType: UIElement3D.IsStylusDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
- uid: System.Windows.UIElement3D.IsStylusOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusOver
  nameWithType: UIElement3D.IsStylusOver
  fullName: System.Windows.UIElement3D.IsStylusOver
- uid: System.Windows.UIElement3D.IsStylusOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusOverProperty
  nameWithType: UIElement3D.IsStylusOverProperty
  fullName: System.Windows.UIElement3D.IsStylusOverProperty
- uid: System.Windows.UIElement3D.IsVisible
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisible
  nameWithType: UIElement3D.IsVisible
  fullName: System.Windows.UIElement3D.IsVisible
- uid: System.Windows.UIElement3D.IsVisibleChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisibleChanged
  nameWithType: UIElement3D.IsVisibleChanged
  fullName: System.Windows.UIElement3D.IsVisibleChanged
- uid: System.Windows.UIElement3D.IsVisibleProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisibleProperty
  nameWithType: UIElement3D.IsVisibleProperty
  fullName: System.Windows.UIElement3D.IsVisibleProperty
- uid: System.Windows.UIElement3D.KeyDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyDown
  nameWithType: UIElement3D.KeyDown
  fullName: System.Windows.UIElement3D.KeyDown
- uid: System.Windows.Input.KeyEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: System.Windows.Input.KeyEventHandler
- uid: System.Windows.UIElement3D.KeyDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyDownEvent
  nameWithType: UIElement3D.KeyDownEvent
  fullName: System.Windows.UIElement3D.KeyDownEvent
- uid: System.Windows.UIElement3D.KeyUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyUp
  nameWithType: UIElement3D.KeyUp
  fullName: System.Windows.UIElement3D.KeyUp
- uid: System.Windows.UIElement3D.KeyUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyUpEvent
  nameWithType: UIElement3D.KeyUpEvent
  fullName: System.Windows.UIElement3D.KeyUpEvent
- uid: System.Windows.UIElement3D.LostFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostFocus
  nameWithType: UIElement3D.LostFocus
  fullName: System.Windows.UIElement3D.LostFocus
- uid: System.Windows.UIElement3D.LostFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostFocusEvent
  nameWithType: UIElement3D.LostFocusEvent
  fullName: System.Windows.UIElement3D.LostFocusEvent
- uid: System.Windows.UIElement3D.LostKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostKeyboardFocus
  nameWithType: UIElement3D.LostKeyboardFocus
  fullName: System.Windows.UIElement3D.LostKeyboardFocus
- uid: System.Windows.UIElement3D.LostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostKeyboardFocusEvent
  nameWithType: UIElement3D.LostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.LostKeyboardFocusEvent
- uid: System.Windows.UIElement3D.LostMouseCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostMouseCapture
  nameWithType: UIElement3D.LostMouseCapture
  fullName: System.Windows.UIElement3D.LostMouseCapture
- uid: System.Windows.UIElement3D.LostMouseCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostMouseCaptureEvent
  nameWithType: UIElement3D.LostMouseCaptureEvent
  fullName: System.Windows.UIElement3D.LostMouseCaptureEvent
- uid: System.Windows.UIElement3D.LostStylusCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostStylusCapture
  nameWithType: UIElement3D.LostStylusCapture
  fullName: System.Windows.UIElement3D.LostStylusCapture
- uid: System.Windows.UIElement3D.LostStylusCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostStylusCaptureEvent
  nameWithType: UIElement3D.LostStylusCaptureEvent
  fullName: System.Windows.UIElement3D.LostStylusCaptureEvent
- uid: System.Windows.UIElement3D.LostTouchCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostTouchCapture
  nameWithType: UIElement3D.LostTouchCapture
  fullName: System.Windows.UIElement3D.LostTouchCapture
- uid: System.Windows.UIElement3D.LostTouchCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostTouchCaptureEvent
  nameWithType: UIElement3D.LostTouchCaptureEvent
  fullName: System.Windows.UIElement3D.LostTouchCaptureEvent
- uid: System.Windows.UIElement3D.MouseDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseDown
  nameWithType: UIElement3D.MouseDown
  fullName: System.Windows.UIElement3D.MouseDown
- uid: System.Windows.Input.MouseButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventHandler
  nameWithType: MouseButtonEventHandler
  fullName: System.Windows.Input.MouseButtonEventHandler
- uid: System.Windows.UIElement3D.MouseDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseDownEvent
  nameWithType: UIElement3D.MouseDownEvent
  fullName: System.Windows.UIElement3D.MouseDownEvent
- uid: System.Windows.UIElement3D.MouseEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseEnter
  nameWithType: UIElement3D.MouseEnter
  fullName: System.Windows.UIElement3D.MouseEnter
- uid: System.Windows.UIElement3D.MouseEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseEnterEvent
  nameWithType: UIElement3D.MouseEnterEvent
  fullName: System.Windows.UIElement3D.MouseEnterEvent
- uid: System.Windows.UIElement3D.MouseLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeave
  nameWithType: UIElement3D.MouseLeave
  fullName: System.Windows.UIElement3D.MouseLeave
- uid: System.Windows.UIElement3D.MouseLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeaveEvent
  nameWithType: UIElement3D.MouseLeaveEvent
  fullName: System.Windows.UIElement3D.MouseLeaveEvent
- uid: System.Windows.UIElement3D.MouseLeftButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonDown
  nameWithType: UIElement3D.MouseLeftButtonDown
  fullName: System.Windows.UIElement3D.MouseLeftButtonDown
- uid: System.Windows.UIElement3D.MouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonDownEvent
  nameWithType: UIElement3D.MouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonDownEvent
- uid: System.Windows.UIElement3D.MouseLeftButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonUp
  nameWithType: UIElement3D.MouseLeftButtonUp
  fullName: System.Windows.UIElement3D.MouseLeftButtonUp
- uid: System.Windows.UIElement3D.MouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonUpEvent
  nameWithType: UIElement3D.MouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonUpEvent
- uid: System.Windows.UIElement3D.MouseMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseMove
  nameWithType: UIElement3D.MouseMove
  fullName: System.Windows.UIElement3D.MouseMove
- uid: System.Windows.UIElement3D.MouseMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseMoveEvent
  nameWithType: UIElement3D.MouseMoveEvent
  fullName: System.Windows.UIElement3D.MouseMoveEvent
- uid: System.Windows.UIElement3D.MouseRightButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonDown
  nameWithType: UIElement3D.MouseRightButtonDown
  fullName: System.Windows.UIElement3D.MouseRightButtonDown
- uid: System.Windows.UIElement3D.MouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonDownEvent
  nameWithType: UIElement3D.MouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonDownEvent
- uid: System.Windows.UIElement3D.MouseRightButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonUp
  nameWithType: UIElement3D.MouseRightButtonUp
  fullName: System.Windows.UIElement3D.MouseRightButtonUp
- uid: System.Windows.UIElement3D.MouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonUpEvent
  nameWithType: UIElement3D.MouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonUpEvent
- uid: System.Windows.UIElement3D.MouseUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseUp
  nameWithType: UIElement3D.MouseUp
  fullName: System.Windows.UIElement3D.MouseUp
- uid: System.Windows.UIElement3D.MouseUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseUpEvent
  nameWithType: UIElement3D.MouseUpEvent
  fullName: System.Windows.UIElement3D.MouseUpEvent
- uid: System.Windows.UIElement3D.MouseWheel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseWheel
  nameWithType: UIElement3D.MouseWheel
  fullName: System.Windows.UIElement3D.MouseWheel
- uid: System.Windows.Input.MouseWheelEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventHandler
  nameWithType: MouseWheelEventHandler
  fullName: System.Windows.Input.MouseWheelEventHandler
- uid: System.Windows.UIElement3D.MouseWheelEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseWheelEvent
  nameWithType: UIElement3D.MouseWheelEvent
  fullName: System.Windows.UIElement3D.MouseWheelEvent
- uid: System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MoveFocus(TraversalRequest)
  nameWithType: UIElement3D.MoveFocus(TraversalRequest)
  fullName: System.Windows.UIElement3D.MoveFocus(TraversalRequest)
- uid: System.Windows.Input.TraversalRequest
  parent: System.Windows.Input
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
- uid: System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: UIElement3D.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.UIElement3D.OnAccessKey(AccessKeyEventArgs)
- uid: System.Windows.Input.AccessKeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyEventArgs
  nameWithType: AccessKeyEventArgs
  fullName: System.Windows.Input.AccessKeyEventArgs
- uid: System.Windows.UIElement3D.OnCreateAutomationPeer
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: UIElement3D.OnCreateAutomationPeer()
  fullName: System.Windows.UIElement3D.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragEnter(DragEventArgs)
- uid: System.Windows.DragEventArgs
  parent: System.Windows
  isExternal: false
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.DragEventArgs
- uid: System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragLeave(DragEventArgs)
- uid: System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragOver(DragEventArgs)
- uid: System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDrop(DragEventArgs)
  nameWithType: UIElement3D.OnDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDrop(DragEventArgs)
- uid: System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.GiveFeedbackEventArgs
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.GiveFeedbackEventArgs
- uid: System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotFocus(RoutedEventArgs)
- uid: System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.Input.KeyboardFocusChangedEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventArgs
  nameWithType: KeyboardFocusChangedEventArgs
  fullName: System.Windows.Input.KeyboardFocusChangedEventArgs
- uid: System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnGotMouseCapture(MouseEventArgs)
- uid: System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnGotStylusCapture(StylusEventArgs)
- uid: System.Windows.Input.StylusEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventArgs
  nameWithType: StylusEventArgs
  fullName: System.Windows.Input.StylusEventArgs
- uid: System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnGotTouchCapture(TouchEventArgs)
- uid: System.Windows.Input.TouchEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TouchEventArgs
  nameWithType: TouchEventArgs
  fullName: System.Windows.Input.TouchEventArgs
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Input.KeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
- uid: System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyUp(KeyEventArgs)
- uid: System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostFocus(RoutedEventArgs)
- uid: System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnLostMouseCapture(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnLostStylusCapture(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnLostTouchCapture(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseDown(MouseButtonEventArgs)
- uid: System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseEnter(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeave(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseMove(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.Input.MouseWheelEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs
  fullName: System.Windows.Input.MouseWheelEventArgs
- uid: System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragEnter(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragLeave(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragOver(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDrop(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyDown(KeyEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyUp(KeyEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseMove(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.QueryContinueDragEventArgs
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.QueryContinueDragEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.Input.StylusButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventArgs
  nameWithType: StylusButtonEventArgs
  fullName: System.Windows.Input.StylusButtonEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
- uid: System.Windows.Input.StylusDownEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventArgs
  nameWithType: StylusDownEventArgs
  fullName: System.Windows.Input.StylusDownEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.Input.StylusSystemGestureEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventArgs
  nameWithType: StylusSystemGestureEventArgs
  fullName: System.Windows.Input.StylusSystemGestureEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusUp(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
- uid: System.Windows.Input.TextCompositionEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventArgs
  nameWithType: TextCompositionEventArgs
  fullName: System.Windows.Input.TextCompositionEventArgs
- uid: System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchDown(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchMove(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchUp(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: UIElement3D.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryCursor(QueryCursorEventArgs)
- uid: System.Windows.Input.QueryCursorEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventArgs
  nameWithType: QueryCursorEventArgs
  fullName: System.Windows.Input.QueryCursorEventArgs
- uid: System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusDown(StylusDownEventArgs)
- uid: System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusEnter(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInAirMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusLeave(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusUp(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnTextInput(TextCompositionEventArgs)
- uid: System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchDown(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchEnter(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchLeave(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchMove(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchUp(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnUpdateModel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnUpdateModel()
  nameWithType: UIElement3D.OnUpdateModel()
  fullName: System.Windows.UIElement3D.OnUpdateModel()
- uid: System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: UIElement3D.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.UIElement3D.OnVisualParentChanged(DependencyObject)
- uid: System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: UIElement3D.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.UIElement3D.PredictFocus(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.UIElement3D.PreviewDragEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragEnter
  nameWithType: UIElement3D.PreviewDragEnter
  fullName: System.Windows.UIElement3D.PreviewDragEnter
- uid: System.Windows.UIElement3D.PreviewDragEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragEnterEvent
  nameWithType: UIElement3D.PreviewDragEnterEvent
  fullName: System.Windows.UIElement3D.PreviewDragEnterEvent
- uid: System.Windows.UIElement3D.PreviewDragLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragLeave
  nameWithType: UIElement3D.PreviewDragLeave
  fullName: System.Windows.UIElement3D.PreviewDragLeave
- uid: System.Windows.UIElement3D.PreviewDragLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragLeaveEvent
  nameWithType: UIElement3D.PreviewDragLeaveEvent
  fullName: System.Windows.UIElement3D.PreviewDragLeaveEvent
- uid: System.Windows.UIElement3D.PreviewDragOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragOver
  nameWithType: UIElement3D.PreviewDragOver
  fullName: System.Windows.UIElement3D.PreviewDragOver
- uid: System.Windows.UIElement3D.PreviewDragOverEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragOverEvent
  nameWithType: UIElement3D.PreviewDragOverEvent
  fullName: System.Windows.UIElement3D.PreviewDragOverEvent
- uid: System.Windows.UIElement3D.PreviewDrop
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDrop
  nameWithType: UIElement3D.PreviewDrop
  fullName: System.Windows.UIElement3D.PreviewDrop
- uid: System.Windows.UIElement3D.PreviewDropEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDropEvent
  nameWithType: UIElement3D.PreviewDropEvent
  fullName: System.Windows.UIElement3D.PreviewDropEvent
- uid: System.Windows.UIElement3D.PreviewGiveFeedback
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGiveFeedback
  nameWithType: UIElement3D.PreviewGiveFeedback
  fullName: System.Windows.UIElement3D.PreviewGiveFeedback
- uid: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGiveFeedbackEvent
  nameWithType: UIElement3D.PreviewGiveFeedbackEvent
  fullName: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGotKeyboardFocus
  nameWithType: UIElement3D.PreviewGotKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocus
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGotKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
- uid: System.Windows.UIElement3D.PreviewKeyDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyDown
  nameWithType: UIElement3D.PreviewKeyDown
  fullName: System.Windows.UIElement3D.PreviewKeyDown
- uid: System.Windows.UIElement3D.PreviewKeyDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyDownEvent
  nameWithType: UIElement3D.PreviewKeyDownEvent
  fullName: System.Windows.UIElement3D.PreviewKeyDownEvent
- uid: System.Windows.UIElement3D.PreviewKeyUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyUp
  nameWithType: UIElement3D.PreviewKeyUp
  fullName: System.Windows.UIElement3D.PreviewKeyUp
- uid: System.Windows.UIElement3D.PreviewKeyUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyUpEvent
  nameWithType: UIElement3D.PreviewKeyUpEvent
  fullName: System.Windows.UIElement3D.PreviewKeyUpEvent
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewLostKeyboardFocus
  nameWithType: UIElement3D.PreviewLostKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocus
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewLostKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
- uid: System.Windows.UIElement3D.PreviewMouseDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseDown
  nameWithType: UIElement3D.PreviewMouseDown
  fullName: System.Windows.UIElement3D.PreviewMouseDown
- uid: System.Windows.UIElement3D.PreviewMouseDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseDownEvent
  nameWithType: UIElement3D.PreviewMouseDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseDownEvent
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonDown
  nameWithType: UIElement3D.PreviewMouseLeftButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonUp
  nameWithType: UIElement3D.PreviewMouseLeftButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
- uid: System.Windows.UIElement3D.PreviewMouseMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseMove
  nameWithType: UIElement3D.PreviewMouseMove
  fullName: System.Windows.UIElement3D.PreviewMouseMove
- uid: System.Windows.UIElement3D.PreviewMouseMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseMoveEvent
  nameWithType: UIElement3D.PreviewMouseMoveEvent
  fullName: System.Windows.UIElement3D.PreviewMouseMoveEvent
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonDown
  nameWithType: UIElement3D.PreviewMouseRightButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDown
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonUp
  nameWithType: UIElement3D.PreviewMouseRightButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUp
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
- uid: System.Windows.UIElement3D.PreviewMouseUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseUp
  nameWithType: UIElement3D.PreviewMouseUp
  fullName: System.Windows.UIElement3D.PreviewMouseUp
- uid: System.Windows.UIElement3D.PreviewMouseUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseUpEvent
  nameWithType: UIElement3D.PreviewMouseUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseUpEvent
- uid: System.Windows.UIElement3D.PreviewMouseWheel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseWheel
  nameWithType: UIElement3D.PreviewMouseWheel
  fullName: System.Windows.UIElement3D.PreviewMouseWheel
- uid: System.Windows.UIElement3D.PreviewMouseWheelEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseWheelEvent
  nameWithType: UIElement3D.PreviewMouseWheelEvent
  fullName: System.Windows.UIElement3D.PreviewMouseWheelEvent
- uid: System.Windows.UIElement3D.PreviewQueryContinueDrag
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewQueryContinueDrag
  nameWithType: UIElement3D.PreviewQueryContinueDrag
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDrag
- uid: System.Windows.QueryContinueDragEventHandler
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventHandler
  nameWithType: QueryContinueDragEventHandler
  fullName: System.Windows.QueryContinueDragEventHandler
- uid: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewQueryContinueDragEvent
  nameWithType: UIElement3D.PreviewQueryContinueDragEvent
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
- uid: System.Windows.UIElement3D.PreviewStylusButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonDown
  nameWithType: UIElement3D.PreviewStylusButtonDown
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDown
- uid: System.Windows.Input.StylusButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventHandler
  nameWithType: StylusButtonEventHandler
  fullName: System.Windows.Input.StylusButtonEventHandler
- uid: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonDownEvent
  nameWithType: UIElement3D.PreviewStylusButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
- uid: System.Windows.UIElement3D.PreviewStylusButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonUp
  nameWithType: UIElement3D.PreviewStylusButtonUp
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUp
- uid: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonUpEvent
  nameWithType: UIElement3D.PreviewStylusButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
- uid: System.Windows.UIElement3D.PreviewStylusDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusDown
  nameWithType: UIElement3D.PreviewStylusDown
  fullName: System.Windows.UIElement3D.PreviewStylusDown
- uid: System.Windows.Input.StylusDownEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventHandler
  nameWithType: StylusDownEventHandler
  fullName: System.Windows.Input.StylusDownEventHandler
- uid: System.Windows.UIElement3D.PreviewStylusDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusDownEvent
  nameWithType: UIElement3D.PreviewStylusDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusDownEvent
- uid: System.Windows.UIElement3D.PreviewStylusInAirMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInAirMove
  nameWithType: UIElement3D.PreviewStylusInAirMove
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMove
- uid: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInAirMoveEvent
  nameWithType: UIElement3D.PreviewStylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
- uid: System.Windows.UIElement3D.PreviewStylusInRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInRange
  nameWithType: UIElement3D.PreviewStylusInRange
  fullName: System.Windows.UIElement3D.PreviewStylusInRange
- uid: System.Windows.UIElement3D.PreviewStylusInRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInRangeEvent
  nameWithType: UIElement3D.PreviewStylusInRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInRangeEvent
- uid: System.Windows.UIElement3D.PreviewStylusMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusMove
  nameWithType: UIElement3D.PreviewStylusMove
  fullName: System.Windows.UIElement3D.PreviewStylusMove
- uid: System.Windows.UIElement3D.PreviewStylusMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusMoveEvent
  nameWithType: UIElement3D.PreviewStylusMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusMoveEvent
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusOutOfRange
  nameWithType: UIElement3D.PreviewStylusOutOfRange
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRange
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusOutOfRangeEvent
  nameWithType: UIElement3D.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
- uid: System.Windows.UIElement3D.PreviewStylusSystemGesture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusSystemGesture
  nameWithType: UIElement3D.PreviewStylusSystemGesture
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGesture
- uid: System.Windows.Input.StylusSystemGestureEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventHandler
  nameWithType: StylusSystemGestureEventHandler
  fullName: System.Windows.Input.StylusSystemGestureEventHandler
- uid: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusSystemGestureEvent
  nameWithType: UIElement3D.PreviewStylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
- uid: System.Windows.UIElement3D.PreviewStylusUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusUp
  nameWithType: UIElement3D.PreviewStylusUp
  fullName: System.Windows.UIElement3D.PreviewStylusUp
- uid: System.Windows.UIElement3D.PreviewStylusUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusUpEvent
  nameWithType: UIElement3D.PreviewStylusUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusUpEvent
- uid: System.Windows.UIElement3D.PreviewTextInput
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTextInput
  nameWithType: UIElement3D.PreviewTextInput
  fullName: System.Windows.UIElement3D.PreviewTextInput
- uid: System.Windows.Input.TextCompositionEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventHandler
  nameWithType: TextCompositionEventHandler
  fullName: System.Windows.Input.TextCompositionEventHandler
- uid: System.Windows.UIElement3D.PreviewTextInputEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTextInputEvent
  nameWithType: UIElement3D.PreviewTextInputEvent
  fullName: System.Windows.UIElement3D.PreviewTextInputEvent
- uid: System.Windows.UIElement3D.PreviewTouchDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchDown
  nameWithType: UIElement3D.PreviewTouchDown
  fullName: System.Windows.UIElement3D.PreviewTouchDown
- uid: System.Windows.UIElement3D.PreviewTouchDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchDownEvent
  nameWithType: UIElement3D.PreviewTouchDownEvent
  fullName: System.Windows.UIElement3D.PreviewTouchDownEvent
- uid: System.Windows.UIElement3D.PreviewTouchMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchMove
  nameWithType: UIElement3D.PreviewTouchMove
  fullName: System.Windows.UIElement3D.PreviewTouchMove
- uid: System.Windows.UIElement3D.PreviewTouchMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchMoveEvent
  nameWithType: UIElement3D.PreviewTouchMoveEvent
  fullName: System.Windows.UIElement3D.PreviewTouchMoveEvent
- uid: System.Windows.UIElement3D.PreviewTouchUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchUp
  nameWithType: UIElement3D.PreviewTouchUp
  fullName: System.Windows.UIElement3D.PreviewTouchUp
- uid: System.Windows.UIElement3D.PreviewTouchUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchUpEvent
  nameWithType: UIElement3D.PreviewTouchUpEvent
  fullName: System.Windows.UIElement3D.PreviewTouchUpEvent
- uid: System.Windows.UIElement3D.QueryContinueDrag
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryContinueDrag
  nameWithType: UIElement3D.QueryContinueDrag
  fullName: System.Windows.UIElement3D.QueryContinueDrag
- uid: System.Windows.UIElement3D.QueryContinueDragEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryContinueDragEvent
  nameWithType: UIElement3D.QueryContinueDragEvent
  fullName: System.Windows.UIElement3D.QueryContinueDragEvent
- uid: System.Windows.UIElement3D.QueryCursor
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryCursor
  nameWithType: UIElement3D.QueryCursor
  fullName: System.Windows.UIElement3D.QueryCursor
- uid: System.Windows.Input.QueryCursorEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventHandler
  nameWithType: QueryCursorEventHandler
  fullName: System.Windows.Input.QueryCursorEventHandler
- uid: System.Windows.UIElement3D.QueryCursorEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryCursorEvent
  nameWithType: UIElement3D.QueryCursorEvent
  fullName: System.Windows.UIElement3D.QueryCursorEvent
- uid: System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: UIElement3D.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.RaiseEvent(RoutedEventArgs)
- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseAllTouchCaptures()
  nameWithType: UIElement3D.ReleaseAllTouchCaptures()
  fullName: System.Windows.UIElement3D.ReleaseAllTouchCaptures()
- uid: System.Windows.UIElement3D.ReleaseMouseCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseMouseCapture()
  nameWithType: UIElement3D.ReleaseMouseCapture()
  fullName: System.Windows.UIElement3D.ReleaseMouseCapture()
- uid: System.Windows.UIElement3D.ReleaseStylusCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseStylusCapture()
  nameWithType: UIElement3D.ReleaseStylusCapture()
  fullName: System.Windows.UIElement3D.ReleaseStylusCapture()
- uid: System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: UIElement3D.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.UIElement3D.ReleaseTouchCapture(TouchDevice)
- uid: System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.RemoveHandler(RoutedEvent,Delegate)
- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeCommandBindings()
  nameWithType: UIElement3D.ShouldSerializeCommandBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeCommandBindings()
- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeInputBindings()
  nameWithType: UIElement3D.ShouldSerializeInputBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeInputBindings()
- uid: System.Windows.UIElement3D.StylusButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonDown
  nameWithType: UIElement3D.StylusButtonDown
  fullName: System.Windows.UIElement3D.StylusButtonDown
- uid: System.Windows.UIElement3D.StylusButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonDownEvent
  nameWithType: UIElement3D.StylusButtonDownEvent
  fullName: System.Windows.UIElement3D.StylusButtonDownEvent
- uid: System.Windows.UIElement3D.StylusButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonUp
  nameWithType: UIElement3D.StylusButtonUp
  fullName: System.Windows.UIElement3D.StylusButtonUp
- uid: System.Windows.UIElement3D.StylusButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonUpEvent
  nameWithType: UIElement3D.StylusButtonUpEvent
  fullName: System.Windows.UIElement3D.StylusButtonUpEvent
- uid: System.Windows.UIElement3D.StylusDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusDown
  nameWithType: UIElement3D.StylusDown
  fullName: System.Windows.UIElement3D.StylusDown
- uid: System.Windows.UIElement3D.StylusDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusDownEvent
  nameWithType: UIElement3D.StylusDownEvent
  fullName: System.Windows.UIElement3D.StylusDownEvent
- uid: System.Windows.UIElement3D.StylusEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusEnter
  nameWithType: UIElement3D.StylusEnter
  fullName: System.Windows.UIElement3D.StylusEnter
- uid: System.Windows.UIElement3D.StylusEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusEnterEvent
  nameWithType: UIElement3D.StylusEnterEvent
  fullName: System.Windows.UIElement3D.StylusEnterEvent
- uid: System.Windows.UIElement3D.StylusInAirMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInAirMove
  nameWithType: UIElement3D.StylusInAirMove
  fullName: System.Windows.UIElement3D.StylusInAirMove
- uid: System.Windows.UIElement3D.StylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInAirMoveEvent
  nameWithType: UIElement3D.StylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.StylusInAirMoveEvent
- uid: System.Windows.UIElement3D.StylusInRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInRange
  nameWithType: UIElement3D.StylusInRange
  fullName: System.Windows.UIElement3D.StylusInRange
- uid: System.Windows.UIElement3D.StylusInRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInRangeEvent
  nameWithType: UIElement3D.StylusInRangeEvent
  fullName: System.Windows.UIElement3D.StylusInRangeEvent
- uid: System.Windows.UIElement3D.StylusLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusLeave
  nameWithType: UIElement3D.StylusLeave
  fullName: System.Windows.UIElement3D.StylusLeave
- uid: System.Windows.UIElement3D.StylusLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusLeaveEvent
  nameWithType: UIElement3D.StylusLeaveEvent
  fullName: System.Windows.UIElement3D.StylusLeaveEvent
- uid: System.Windows.UIElement3D.StylusMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusMove
  nameWithType: UIElement3D.StylusMove
  fullName: System.Windows.UIElement3D.StylusMove
- uid: System.Windows.UIElement3D.StylusMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusMoveEvent
  nameWithType: UIElement3D.StylusMoveEvent
  fullName: System.Windows.UIElement3D.StylusMoveEvent
- uid: System.Windows.UIElement3D.StylusOutOfRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusOutOfRange
  nameWithType: UIElement3D.StylusOutOfRange
  fullName: System.Windows.UIElement3D.StylusOutOfRange
- uid: System.Windows.UIElement3D.StylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusOutOfRangeEvent
  nameWithType: UIElement3D.StylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.StylusOutOfRangeEvent
- uid: System.Windows.UIElement3D.StylusSystemGesture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusSystemGesture
  nameWithType: UIElement3D.StylusSystemGesture
  fullName: System.Windows.UIElement3D.StylusSystemGesture
- uid: System.Windows.UIElement3D.StylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusSystemGestureEvent
  nameWithType: UIElement3D.StylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.StylusSystemGestureEvent
- uid: System.Windows.UIElement3D.StylusUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusUp
  nameWithType: UIElement3D.StylusUp
  fullName: System.Windows.UIElement3D.StylusUp
- uid: System.Windows.UIElement3D.StylusUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusUpEvent
  nameWithType: UIElement3D.StylusUpEvent
  fullName: System.Windows.UIElement3D.StylusUpEvent
- uid: System.Windows.UIElement3D.TextInput
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TextInput
  nameWithType: UIElement3D.TextInput
  fullName: System.Windows.UIElement3D.TextInput
- uid: System.Windows.UIElement3D.TextInputEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TextInputEvent
  nameWithType: UIElement3D.TextInputEvent
  fullName: System.Windows.UIElement3D.TextInputEvent
- uid: System.Windows.UIElement3D.TouchDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchDown
  nameWithType: UIElement3D.TouchDown
  fullName: System.Windows.UIElement3D.TouchDown
- uid: System.Windows.UIElement3D.TouchDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchDownEvent
  nameWithType: UIElement3D.TouchDownEvent
  fullName: System.Windows.UIElement3D.TouchDownEvent
- uid: System.Windows.UIElement3D.TouchEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchEnter
  nameWithType: UIElement3D.TouchEnter
  fullName: System.Windows.UIElement3D.TouchEnter
- uid: System.Windows.UIElement3D.TouchEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchEnterEvent
  nameWithType: UIElement3D.TouchEnterEvent
  fullName: System.Windows.UIElement3D.TouchEnterEvent
- uid: System.Windows.UIElement3D.TouchesCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCaptured
  nameWithType: UIElement3D.TouchesCaptured
  fullName: System.Windows.UIElement3D.TouchesCaptured
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TouchDevice>
  nameWithType: IEnumerable<TouchDevice>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.TouchDevice>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchDevice
    name: TouchDevice
    nameWithType: TouchDevice
    fullName: TouchDevice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement3D.TouchesCapturedWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: UIElement3D.TouchesCapturedWithin
  fullName: System.Windows.UIElement3D.TouchesCapturedWithin
- uid: System.Windows.UIElement3D.TouchesDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: UIElement3D.TouchesDirectlyOver
  fullName: System.Windows.UIElement3D.TouchesDirectlyOver
- uid: System.Windows.UIElement3D.TouchesOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesOver
  nameWithType: UIElement3D.TouchesOver
  fullName: System.Windows.UIElement3D.TouchesOver
- uid: System.Windows.UIElement3D.TouchLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchLeave
  nameWithType: UIElement3D.TouchLeave
  fullName: System.Windows.UIElement3D.TouchLeave
- uid: System.Windows.UIElement3D.TouchLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchLeaveEvent
  nameWithType: UIElement3D.TouchLeaveEvent
  fullName: System.Windows.UIElement3D.TouchLeaveEvent
- uid: System.Windows.UIElement3D.TouchMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchMove
  nameWithType: UIElement3D.TouchMove
  fullName: System.Windows.UIElement3D.TouchMove
- uid: System.Windows.UIElement3D.TouchMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchMoveEvent
  nameWithType: UIElement3D.TouchMoveEvent
  fullName: System.Windows.UIElement3D.TouchMoveEvent
- uid: System.Windows.UIElement3D.TouchUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchUp
  nameWithType: UIElement3D.TouchUp
  fullName: System.Windows.UIElement3D.TouchUp
- uid: System.Windows.UIElement3D.TouchUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchUpEvent
  nameWithType: UIElement3D.TouchUpEvent
  fullName: System.Windows.UIElement3D.TouchUpEvent
- uid: System.Windows.UIElement3D.Visibility
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Visibility
  nameWithType: UIElement3D.Visibility
  fullName: System.Windows.UIElement3D.Visibility
- uid: System.Windows.Visibility
  parent: System.Windows
  isExternal: false
  name: Visibility
  nameWithType: Visibility
  fullName: System.Windows.Visibility
- uid: System.Windows.UIElement3D.VisibilityProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: VisibilityProperty
  nameWithType: UIElement3D.VisibilityProperty
  fullName: System.Windows.UIElement3D.VisibilityProperty
- uid: System.Windows.UIElement3D.#ctor*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: UIElement3D
  nameWithType: UIElement3D.UIElement3D
- uid: System.Windows.UIElement3D.AddHandler*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddHandler
  nameWithType: UIElement3D.AddHandler
- uid: System.Windows.UIElement3D.AddToEventRoute*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddToEventRoute
  nameWithType: UIElement3D.AddToEventRoute
- uid: System.Windows.UIElement3D.AllowDrop*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AllowDrop
  nameWithType: UIElement3D.AllowDrop
- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: UIElement3D.AreAnyTouchesCaptured
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver
- uid: System.Windows.UIElement3D.AreAnyTouchesOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: UIElement3D.AreAnyTouchesOver
- uid: System.Windows.UIElement3D.CaptureMouse*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureMouse
  nameWithType: UIElement3D.CaptureMouse
- uid: System.Windows.UIElement3D.CaptureStylus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureStylus
  nameWithType: UIElement3D.CaptureStylus
- uid: System.Windows.UIElement3D.CaptureTouch*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureTouch
  nameWithType: UIElement3D.CaptureTouch
- uid: System.Windows.UIElement3D.CommandBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CommandBindings
  nameWithType: UIElement3D.CommandBindings
- uid: System.Windows.UIElement3D.Focus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focus
  nameWithType: UIElement3D.Focus
- uid: System.Windows.UIElement3D.Focusable*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focusable
  nameWithType: UIElement3D.Focusable
- uid: System.Windows.UIElement3D.GetUIParentCore*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GetUIParentCore
  nameWithType: UIElement3D.GetUIParentCore
- uid: System.Windows.UIElement3D.InputBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InputBindings
  nameWithType: UIElement3D.InputBindings
- uid: System.Windows.UIElement3D.InvalidateModel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InvalidateModel
  nameWithType: UIElement3D.InvalidateModel
- uid: System.Windows.UIElement3D.IsEnabled*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabled
  nameWithType: UIElement3D.IsEnabled
- uid: System.Windows.UIElement3D.IsEnabledCore*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledCore
  nameWithType: UIElement3D.IsEnabledCore
- uid: System.Windows.UIElement3D.IsFocused*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsFocused
  nameWithType: UIElement3D.IsFocused
- uid: System.Windows.UIElement3D.IsHitTestVisible*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisible
  nameWithType: UIElement3D.IsHitTestVisible
- uid: System.Windows.UIElement3D.IsInputMethodEnabled*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: UIElement3D.IsInputMethodEnabled
- uid: System.Windows.UIElement3D.IsKeyboardFocused*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: UIElement3D.IsKeyboardFocused
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: UIElement3D.IsKeyboardFocusWithin
- uid: System.Windows.UIElement3D.IsMouseCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptured
  nameWithType: UIElement3D.IsMouseCaptured
- uid: System.Windows.UIElement3D.IsMouseCaptureWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: UIElement3D.IsMouseCaptureWithin
- uid: System.Windows.UIElement3D.IsMouseDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: UIElement3D.IsMouseDirectlyOver
- uid: System.Windows.UIElement3D.IsMouseOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseOver
  nameWithType: UIElement3D.IsMouseOver
- uid: System.Windows.UIElement3D.IsStylusCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptured
  nameWithType: UIElement3D.IsStylusCaptured
- uid: System.Windows.UIElement3D.IsStylusCaptureWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: UIElement3D.IsStylusCaptureWithin
- uid: System.Windows.UIElement3D.IsStylusDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: UIElement3D.IsStylusDirectlyOver
- uid: System.Windows.UIElement3D.IsStylusOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusOver
  nameWithType: UIElement3D.IsStylusOver
- uid: System.Windows.UIElement3D.IsVisible*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisible
  nameWithType: UIElement3D.IsVisible
- uid: System.Windows.UIElement3D.MoveFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MoveFocus
  nameWithType: UIElement3D.MoveFocus
- uid: System.Windows.UIElement3D.OnAccessKey*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnAccessKey
  nameWithType: UIElement3D.OnAccessKey
- uid: System.Windows.UIElement3D.OnCreateAutomationPeer*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: UIElement3D.OnCreateAutomationPeer
- uid: System.Windows.UIElement3D.OnDragEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragEnter
  nameWithType: UIElement3D.OnDragEnter
- uid: System.Windows.UIElement3D.OnDragLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragLeave
  nameWithType: UIElement3D.OnDragLeave
- uid: System.Windows.UIElement3D.OnDragOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragOver
  nameWithType: UIElement3D.OnDragOver
- uid: System.Windows.UIElement3D.OnDrop*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDrop
  nameWithType: UIElement3D.OnDrop
- uid: System.Windows.UIElement3D.OnGiveFeedback*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGiveFeedback
  nameWithType: UIElement3D.OnGiveFeedback
- uid: System.Windows.UIElement3D.OnGotFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotFocus
  nameWithType: UIElement3D.OnGotFocus
- uid: System.Windows.UIElement3D.OnGotKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotKeyboardFocus
  nameWithType: UIElement3D.OnGotKeyboardFocus
- uid: System.Windows.UIElement3D.OnGotMouseCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotMouseCapture
  nameWithType: UIElement3D.OnGotMouseCapture
- uid: System.Windows.UIElement3D.OnGotStylusCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotStylusCapture
  nameWithType: UIElement3D.OnGotStylusCapture
- uid: System.Windows.UIElement3D.OnGotTouchCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotTouchCapture
  nameWithType: UIElement3D.OnGotTouchCapture
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusedChanged
  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged
  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged
- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCapturedChanged
  nameWithType: UIElement3D.OnIsMouseCapturedChanged
- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCaptureWithinChanged
  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged
- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseDirectlyOverChanged
  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged
- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCapturedChanged
  nameWithType: UIElement3D.OnIsStylusCapturedChanged
- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCaptureWithinChanged
  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged
- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusDirectlyOverChanged
  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged
- uid: System.Windows.UIElement3D.OnKeyDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyDown
  nameWithType: UIElement3D.OnKeyDown
- uid: System.Windows.UIElement3D.OnKeyUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyUp
  nameWithType: UIElement3D.OnKeyUp
- uid: System.Windows.UIElement3D.OnLostFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostFocus
  nameWithType: UIElement3D.OnLostFocus
- uid: System.Windows.UIElement3D.OnLostKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostKeyboardFocus
  nameWithType: UIElement3D.OnLostKeyboardFocus
- uid: System.Windows.UIElement3D.OnLostMouseCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostMouseCapture
  nameWithType: UIElement3D.OnLostMouseCapture
- uid: System.Windows.UIElement3D.OnLostStylusCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostStylusCapture
  nameWithType: UIElement3D.OnLostStylusCapture
- uid: System.Windows.UIElement3D.OnLostTouchCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostTouchCapture
  nameWithType: UIElement3D.OnLostTouchCapture
- uid: System.Windows.UIElement3D.OnMouseDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseDown
  nameWithType: UIElement3D.OnMouseDown
- uid: System.Windows.UIElement3D.OnMouseEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseEnter
  nameWithType: UIElement3D.OnMouseEnter
- uid: System.Windows.UIElement3D.OnMouseLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeave
  nameWithType: UIElement3D.OnMouseLeave
- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonDown
  nameWithType: UIElement3D.OnMouseLeftButtonDown
- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonUp
  nameWithType: UIElement3D.OnMouseLeftButtonUp
- uid: System.Windows.UIElement3D.OnMouseMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseMove
  nameWithType: UIElement3D.OnMouseMove
- uid: System.Windows.UIElement3D.OnMouseRightButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonDown
  nameWithType: UIElement3D.OnMouseRightButtonDown
- uid: System.Windows.UIElement3D.OnMouseRightButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonUp
  nameWithType: UIElement3D.OnMouseRightButtonUp
- uid: System.Windows.UIElement3D.OnMouseUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseUp
  nameWithType: UIElement3D.OnMouseUp
- uid: System.Windows.UIElement3D.OnMouseWheel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseWheel
  nameWithType: UIElement3D.OnMouseWheel
- uid: System.Windows.UIElement3D.OnPreviewDragEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragEnter
  nameWithType: UIElement3D.OnPreviewDragEnter
- uid: System.Windows.UIElement3D.OnPreviewDragLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragLeave
  nameWithType: UIElement3D.OnPreviewDragLeave
- uid: System.Windows.UIElement3D.OnPreviewDragOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragOver
  nameWithType: UIElement3D.OnPreviewDragOver
- uid: System.Windows.UIElement3D.OnPreviewDrop*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDrop
  nameWithType: UIElement3D.OnPreviewDrop
- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGiveFeedback
  nameWithType: UIElement3D.OnPreviewGiveFeedback
- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGotKeyboardFocus
  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus
- uid: System.Windows.UIElement3D.OnPreviewKeyDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyDown
  nameWithType: UIElement3D.OnPreviewKeyDown
- uid: System.Windows.UIElement3D.OnPreviewKeyUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyUp
  nameWithType: UIElement3D.OnPreviewKeyUp
- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewLostKeyboardFocus
  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus
- uid: System.Windows.UIElement3D.OnPreviewMouseDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseDown
  nameWithType: UIElement3D.OnPreviewMouseDown
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonDown
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonUp
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp
- uid: System.Windows.UIElement3D.OnPreviewMouseMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseMove
  nameWithType: UIElement3D.OnPreviewMouseMove
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonDown
  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonUp
  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp
- uid: System.Windows.UIElement3D.OnPreviewMouseUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseUp
  nameWithType: UIElement3D.OnPreviewMouseUp
- uid: System.Windows.UIElement3D.OnPreviewMouseWheel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseWheel
  nameWithType: UIElement3D.OnPreviewMouseWheel
- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewQueryContinueDrag
  nameWithType: UIElement3D.OnPreviewQueryContinueDrag
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonDown
  nameWithType: UIElement3D.OnPreviewStylusButtonDown
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonUp
  nameWithType: UIElement3D.OnPreviewStylusButtonUp
- uid: System.Windows.UIElement3D.OnPreviewStylusDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusDown
  nameWithType: UIElement3D.OnPreviewStylusDown
- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInAirMove
  nameWithType: UIElement3D.OnPreviewStylusInAirMove
- uid: System.Windows.UIElement3D.OnPreviewStylusInRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInRange
  nameWithType: UIElement3D.OnPreviewStylusInRange
- uid: System.Windows.UIElement3D.OnPreviewStylusMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusMove
  nameWithType: UIElement3D.OnPreviewStylusMove
- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusOutOfRange
  nameWithType: UIElement3D.OnPreviewStylusOutOfRange
- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusSystemGesture
  nameWithType: UIElement3D.OnPreviewStylusSystemGesture
- uid: System.Windows.UIElement3D.OnPreviewStylusUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusUp
  nameWithType: UIElement3D.OnPreviewStylusUp
- uid: System.Windows.UIElement3D.OnPreviewTextInput*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTextInput
  nameWithType: UIElement3D.OnPreviewTextInput
- uid: System.Windows.UIElement3D.OnPreviewTouchDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchDown
  nameWithType: UIElement3D.OnPreviewTouchDown
- uid: System.Windows.UIElement3D.OnPreviewTouchMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchMove
  nameWithType: UIElement3D.OnPreviewTouchMove
- uid: System.Windows.UIElement3D.OnPreviewTouchUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchUp
  nameWithType: UIElement3D.OnPreviewTouchUp
- uid: System.Windows.UIElement3D.OnQueryContinueDrag*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryContinueDrag
  nameWithType: UIElement3D.OnQueryContinueDrag
- uid: System.Windows.UIElement3D.OnQueryCursor*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryCursor
  nameWithType: UIElement3D.OnQueryCursor
- uid: System.Windows.UIElement3D.OnStylusButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonDown
  nameWithType: UIElement3D.OnStylusButtonDown
- uid: System.Windows.UIElement3D.OnStylusButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonUp
  nameWithType: UIElement3D.OnStylusButtonUp
- uid: System.Windows.UIElement3D.OnStylusDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusDown
  nameWithType: UIElement3D.OnStylusDown
- uid: System.Windows.UIElement3D.OnStylusEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusEnter
  nameWithType: UIElement3D.OnStylusEnter
- uid: System.Windows.UIElement3D.OnStylusInAirMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInAirMove
  nameWithType: UIElement3D.OnStylusInAirMove
- uid: System.Windows.UIElement3D.OnStylusInRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInRange
  nameWithType: UIElement3D.OnStylusInRange
- uid: System.Windows.UIElement3D.OnStylusLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusLeave
  nameWithType: UIElement3D.OnStylusLeave
- uid: System.Windows.UIElement3D.OnStylusMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusMove
  nameWithType: UIElement3D.OnStylusMove
- uid: System.Windows.UIElement3D.OnStylusOutOfRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusOutOfRange
  nameWithType: UIElement3D.OnStylusOutOfRange
- uid: System.Windows.UIElement3D.OnStylusSystemGesture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusSystemGesture
  nameWithType: UIElement3D.OnStylusSystemGesture
- uid: System.Windows.UIElement3D.OnStylusUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusUp
  nameWithType: UIElement3D.OnStylusUp
- uid: System.Windows.UIElement3D.OnTextInput*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTextInput
  nameWithType: UIElement3D.OnTextInput
- uid: System.Windows.UIElement3D.OnTouchDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchDown
  nameWithType: UIElement3D.OnTouchDown
- uid: System.Windows.UIElement3D.OnTouchEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchEnter
  nameWithType: UIElement3D.OnTouchEnter
- uid: System.Windows.UIElement3D.OnTouchLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchLeave
  nameWithType: UIElement3D.OnTouchLeave
- uid: System.Windows.UIElement3D.OnTouchMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchMove
  nameWithType: UIElement3D.OnTouchMove
- uid: System.Windows.UIElement3D.OnTouchUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchUp
  nameWithType: UIElement3D.OnTouchUp
- uid: System.Windows.UIElement3D.OnUpdateModel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnUpdateModel
  nameWithType: UIElement3D.OnUpdateModel
- uid: System.Windows.UIElement3D.OnVisualParentChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnVisualParentChanged
  nameWithType: UIElement3D.OnVisualParentChanged
- uid: System.Windows.UIElement3D.PredictFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PredictFocus
  nameWithType: UIElement3D.PredictFocus
- uid: System.Windows.UIElement3D.RaiseEvent*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RaiseEvent
  nameWithType: UIElement3D.RaiseEvent
- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseAllTouchCaptures
  nameWithType: UIElement3D.ReleaseAllTouchCaptures
- uid: System.Windows.UIElement3D.ReleaseMouseCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseMouseCapture
  nameWithType: UIElement3D.ReleaseMouseCapture
- uid: System.Windows.UIElement3D.ReleaseStylusCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseStylusCapture
  nameWithType: UIElement3D.ReleaseStylusCapture
- uid: System.Windows.UIElement3D.ReleaseTouchCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseTouchCapture
  nameWithType: UIElement3D.ReleaseTouchCapture
- uid: System.Windows.UIElement3D.RemoveHandler*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RemoveHandler
  nameWithType: UIElement3D.RemoveHandler
- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeCommandBindings
  nameWithType: UIElement3D.ShouldSerializeCommandBindings
- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeInputBindings
  nameWithType: UIElement3D.ShouldSerializeInputBindings
- uid: System.Windows.UIElement3D.TouchesCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCaptured
  nameWithType: UIElement3D.TouchesCaptured
- uid: System.Windows.UIElement3D.TouchesCapturedWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: UIElement3D.TouchesCapturedWithin
- uid: System.Windows.UIElement3D.TouchesDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: UIElement3D.TouchesDirectlyOver
- uid: System.Windows.UIElement3D.TouchesOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesOver
  nameWithType: UIElement3D.TouchesOver
- uid: System.Windows.UIElement3D.Visibility*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Visibility
  nameWithType: UIElement3D.Visibility
