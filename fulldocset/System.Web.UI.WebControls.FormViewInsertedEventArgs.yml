### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  id: FormViewInsertedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  langs:
  - csharp
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;> </xref> zdarzeń."
  remarks: "<xref:System.Web.UI.WebControls.FormView>Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserted>zdarzenie, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość &quot;Insert&quot;) w formancie zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView>kontroli wstawia rekordu.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> Umożliwia to metoda obsługi zdarzeń, który wykonuje procedury niestandardowych, takich jak sprawdzanie wyniki operacji wstawiania przy każdym wystąpieniu tego zdarzenia.       Obiekt FormViewInsertedEventArgs jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów oraz wszystkie wyjątki, które mogły wystąpić. Aby określić liczbę rekordów wpływ operacji insert, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>Właściwości w celu określenia, czy wystąpiły wyjątki.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> Można również określić, czy wyjątek został obsłużony w metoda obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Aby uzyskać dostęp do wartości wstawionego rekordu, należy użyć <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       Domyślnie <xref:System.Web.UI.WebControls.FormView>kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>właściwości po wykonaniu operacji wstawiania.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Jeśli wystąpi wyjątek podczas operacji wstawiania, można przechowywać <xref:System.Web.UI.WebControls.FormView>formant w trybie wstawiania, ustawiając <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>właściwości `true`.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>, zobacz <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>konstruktora.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>"
  example:
  - "The following example demonstrates how to use the FormViewInsertedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event to determine whether an exception occurred during an insert operation.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: 'public class FormViewInsertedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref> klasy."
  remarks: "Ten konstruktor umożliwia inicjuje nowe wystąpienie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>klasy.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>       W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>| Wartość `affectedRows` parametru. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>| Obiekt <xref:System.Exception?displayProperty=fullName>znajdujący się w `e` parametru. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>| Zainicjowane do `false`. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>| Zainicjowane do `false`. |      > [!NOTE] > Ten konstruktor jest używany głównie przez deweloperów kontroli, gdy wywoływanie zdarzeń.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewInsertedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "Liczba wierszy wpływ operacji insert."
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>Reprezentujący wyjątek, kiedy została wykonana operacja wstawiania.</xref:System.Exception> Jeśli nie wystąpił wyjątek, użyj <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla tego parametru."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera liczbę wierszy objętych operacji insert."
  remarks: "Użyj właściwości AffectedRows, aby określić liczbę rekordów wpływ operacji insert. Ta właściwość jest najczęściej używany do Sprawdź, czy poprawną liczbę rekordów została umieszczona w następujących sytuacjach:-Sprawdź, czy tylko jeden rekord został wstawiony. Czasami instrukcji insert nieprawidłowo napisane można wstawić wielu rekordów.      -Sprawdź, czy rekord został wstawiony, gdy wystąpi błąd podczas operacji wstawiania, który nie zgłaszał wyjątku.      -Sprawdź, czy rekord został wstawiony podczas kontroli źródła danych obsługującej wykrywania konfliktów (optymistycznej współbieżności), takich jak <xref:System.Web.UI.WebControls.SqlDataSource>i <xref:System.Web.UI.WebControls.ObjectDataSource>formanty, ma swoją <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>ustawioną właściwość `ConflictOptions.CompareAllValues` wartość wyliczenia.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> W obszarze to ustawienie rekordu, który ma taką samą wartość klucza jako rekord przez innego użytkownika jednocześnie może nie można wstawić."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was inserted during the insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_880_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_880_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "Liczba wierszy wpływ operacji insert."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wyjątek (jeśli istnieją) który został zgłoszony podczas operacji wstawiania."
  remarks: "Użyj właściwości wyjątku do określenia wyjątku (jeśli istnieją) który został zgłoszony podczas operacji wstawiania. Jeśli zostały zgłoszone żadne wyjątki, ta właściwość zwraca `null`.      > [!NOTE] > Jeśli zdecydujesz się obsługiwać wyjątek w obsłudze zdarzeń został zgłoszony wyjątek, należy ustawić <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>właściwości `true`; w przeciwnym razie <xref:System.Web.UI.WebControls.FormView>kontroli ponownie zgłasza wyjątek.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception was raised during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_372_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_372_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>Reprezentujący wyjątek zgłoszony podczas operacji wstawiania.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy wyjątek został zgłoszony podczas operacji wstawiania został obsłużony w zdarzeniu programu obsługi."
  remarks: "Jeśli wyjątek jest wywoływane podczas operacji wstawiania, użyj właściwości ExceptionHandled wskazująca, czy wyjątek został obsłużony w zdarzeniu programu obsługi. Jeśli ta właściwość jest równa `true`, wyjątek jest uznawany za obsługiwany i nie zostanie ponownie zgłoszony. Jeśli ta właściwość jest ustawiona na `false`, <xref:System.Web.UI.WebControls.FormView>kontroli ponownie zgłasza wyjątek.</xref:System.Web.UI.WebControls.FormView> Aby określić Wystąpił wyjątek, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_826_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_826_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony wyjątek został obsłużony w przypadku obsługi; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  id: KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> formant może pozostawać w trybie wstawiania po wykonaniu operacji wstawiania."
  remarks: "Domyślnie <xref:System.Web.UI.WebControls.FormView>kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>Właściwości.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Umożliwia określenie właściwości KeepInInsertMode czy <xref:System.Web.UI.WebControls.FormView>formant może pozostawać w trybie wstawiania po wykonaniu operacji wstawiania.</xref:System.Web.UI.WebControls.FormView> Aby zachować <xref:System.Web.UI.WebControls.FormView>sterowania w trybie wstawiania, ustawić tę właściwość na `true`.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Tej właściwości powinno się używać tylko wtedy, gdy jest to sytuacja występuje (na przykład wyjątków zgłaszanych), który wymaga formantu ma zachowywać się inaczej niż w zwykły sposób. Jeśli <xref:System.Web.UI.WebControls.FormView>kontrolka wymaga pozostać w trybie wstawiania domyślnie, ustaw <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>Właściwości zamiast.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInInsertMode property to keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode when an exception occurs during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_181_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_181_1.aspx)]"
  syntax:
    content: public bool KeepInInsertMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>pozostaje w trybie wstawiania po wykonaniu operacji wstawiania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera słownik zawierający pary nazwa/wartość pola wstawionego rekordu."
  remarks: "Aby uzyskać dostęp do wartości pola dla wstawionego rekordu, należy użyć właściwości wartości. Na przykład można te wartości rejestrowanie wstawianych rekordów.       Zwraca właściwości wartości <xref:System.Collections.Specialized.OrderedDictionary>obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interfejsu.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>Zawiera obiekt <xref:System.Collections.DictionaryEntry?displayProperty=fullName>obiekty reprezentujące pola wstawionego rekordu.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>Właściwość <xref:System.Collections.Specialized.OrderedDictionary>obiektu.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Podobnie, mogą korzystać wartości pól za pomocą <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>Właściwości.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary>obiekt, aby uzyskać dostępu do pola wartości bezpośrednio.</xref:System.Collections.Specialized.OrderedDictionary> Zaletą używania indeksatora jest ona zwracanych wartości pól bezpośrednio. Formanty, które opierają się na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pól tylko przez indeks.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to iterate through the items in the Values collection.  \n  \n [!code-vb[FormViewInsertedEventArgsValues#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1339_1.aspx)]\n [!code-cs[FormViewInsertedEventArgsValues#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1339_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> Obiekt, który zawiera słownik par nazwa/wartość pola klucza wstawionego rekordu."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
