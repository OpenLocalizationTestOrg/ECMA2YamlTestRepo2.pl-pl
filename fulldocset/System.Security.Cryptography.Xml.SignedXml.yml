### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.SignedXml
  id: SignedXml
  children:
  - System.Security.Cryptography.Xml.SignedXml.#ctor
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  - System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  - System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  - System.Security.Cryptography.Xml.SignedXml.GetXml
  - System.Security.Cryptography.Xml.SignedXml.KeyInfo
  - System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.m_signature
  - System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.Resolver
  - System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  - System.Security.Cryptography.Xml.SignedXml.Signature
  - System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  - System.Security.Cryptography.Xml.SignedXml.SignatureLength
  - System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  - System.Security.Cryptography.Xml.SignedXml.SignatureValue
  - System.Security.Cryptography.Xml.SignedXml.SignedInfo
  - System.Security.Cryptography.Xml.SignedXml.SigningKey
  - System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  langs:
  - csharp
  name: SignedXml
  nameWithType: SignedXml
  fullName: System.Security.Cryptography.Xml.SignedXml
  type: Class
  summary: "Udostępnia otokę w obiekcie podpisu XML core ułatwiające tworzenie podpisów XML."
  remarks: "Klasa SignedXml jest implementacja .NET Framework w sieci World Wide Web konsorcjum W3C [składni podpisu XML i specyfikacja przetwarzania](http://www.w3.org/TR/xmldsig-core/), znanej również jako XMLDSIG (podpis cyfrowy XML).  XMLDSIG jest oparta na standardach i interoperacyjne sposobem podpisywanie i weryfikowanie całości lub części dokumentu XML lub inne dane, które jest adresowana z zasobów identyfikator URI (Uniform).       Użyj klasy SignedXml, gdy należy udostępnić podpisane dane XML między aplikacji lub organizacje w standardowy sposób.  Wszystkie dane podpisany przy użyciu tej klasy można sprawdzić przy implementacji zgodnych ze specyfikacją W3C XMLDSIG.       Klasa SignedXml umożliwia tworzenie następujące trzy rodzaje podpisy cyfrowe XML: | Podpis typu | Opis elementu |   |--------------------|-----------------|   | Przekształcenie podpisu | Podpis jest zawarty w elemencie XML podpisywana. |   | Podpis obejmujących punkty kontrolne | Podpisem XML znajduje się w obrębie `Signature`> elementu. |   | Wewnętrzny odłączonego podpisu | Podpis i podpisem XML znajdują się w tym samym dokumencie, ale nie zawiera innych. |       Istnieje również czwarty rodzaj podpisu o nazwie zewnętrznych odłączonego podpisu, czyli gdy dane i podpis znajdują się w oddzielnych dokumentów XML. Zewnętrzne odłączyć podpisów nie są obsługiwane przez klasę SignedXml.      ## Tworzy struktury XML podpisu XMLDSIG `Signature`> element, który zawiera podpis cyfrowy dokumentu XML lub innych danych, który jest adresowana z identyfikatora URI.  `Signature`> Element opcjonalnie może zawierać informacje o tym, gdzie znaleźć klucz, który będzie zweryfikować podpisu i który algorytm kryptograficzny został użyty do podpisania. Podstawowa struktura jest następująca: ```xml      <Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;>       <SignedInfo>         <CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;/>         <SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;/>         <Reference URI=&quot;&quot;>           <Transforms>             <Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/>           </Transforms>           <DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;/>           <DigestValue>Base64EncodedValue==</DigestValue>         </Reference>       </SignedInfo>       <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>     </Signature>      ``` głównych części tej struktury są: `CanonicalizationMethod`> element określa zasady ponowne zapisywanie `Signature` element na podstawie tekstu/XML w bajtach Walidacja podpisu. Wartość domyślna w programie .NET Framework jest http://www.w3.org/TR/2001/REC-xml-c14n-20010315, które identyfikuje algorytm godne zaufania. Ten element jest reprezentowana przez <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>Właściwości.</xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>       `SignatureMethod`> Element Określa algorytm używany do generowania podpisu i sprawdzania poprawności, która została zastosowana do `Signature`> elementem wartość `SignatureValue`>. W powyższym przykładzie http://www.w3.org/2000/09/xmldsig#rsa-sha1 wartość identyfikuje podpisu RSA PKCS1 SHA-1. Ten element jest reprezentowana przez <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>       `SignatureValue`> Element Określa podpis kryptograficzny dla `Signature`> elementu. Jeśli podpis nie sprawdza, następnie część `Signature`> bloku został zmodyfikowany, a dokument jest uznawane za nieprawidłowe. Tak długo, jak `CanonicalizationMethod`> wartość jest godne zaufania, ta wartość jest wysoce odporne na próby naruszenia. Ten element jest reprezentowana przez <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>       `URI` Atrybutu `Reference`> element określa obiekt danych przy użyciu identyfikatora URI odwołania. Ten atrybut jest reprezentowana przez <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>Właściwości.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>      -Nieokreślenie `URI` atrybutu, oznacza to, że ustawienie <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>właściwości `null`, oznacza, że aplikacja odbierająca może znać tożsamość obiektu.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> W większości przypadków `null` URI spowodują wyjątek. Nie używaj `null` identyfikatora URI, chyba że aplikacja jest współdziałanie z protokołem, którego wymaga.      -Ustawienie `URI` atrybutu na ciąg pusty oznacza, że element główny dokumentu jest podpisywana, formę przekształcenie podpisu.      — W przypadku wartość `URI` atrybutu rozpoczyna się od #, a następnie wartość musi być rozpoznawana elementu w bieżącym dokumencie. Ten formularz może służyć ze wszystkimi typami obsługiwanych podpisu (transformacjach podpis obejmujące podpisu lub podpis odłączyć wewnętrznego).      -Inaczej jest traktowany jako zasób zewnętrzny podpis odłączony i nie jest obsługiwana przez klasę SignedXml.       `Transforms`> Element zawiera uporządkowaną listę `Transform`> została rozłożona elementy, które opisują sposób osoby podpisującej otrzymanych obiektu danych. Algorytm przekształcenia jest podobna do metody zapewniania kanoniczności, ale zamiast ponowne zapisywanie `Signature`> elementu go ponownie zapisuje zawartość oznaczona `URI` atrybutu `Reference`> elementu. `Transforms`> Element jest reprezentowany przez <xref:System.Security.Cryptography.Xml.TransformChain>klasę.</xref:System.Security.Cryptography.Xml.TransformChain>      -Każdy algorytm przekształcenia jest zdefiniowany jako biorąc jako dane wejściowe XML (zestaw węzłów XPath) lub bajtów. Jeśli format bieżących danych różni się od wymagania wprowadzania przekształcania, są stosowane reguły konwersji.      -Każdy algorytm przekształcenia jest zdefiniowany jako produkujących XML lub bajty jako dane wyjściowe.      — Jeśli dane wyjściowe ostatniego algorytm przekształcenia nie jest zdefiniowany w bajtach (lub nie określono żadnych transformacje), następnie http://www.w3.org/TR/2001/REC-xml-c14n-20010315 metody zapewniania kanoniczności jest używany jako niejawne transformacji (nawet jeśli inny algorytm została określona w `CanonicalizationMethod`> elementu).      — Wartość http://www.w3.org/2000/09/xmldsig#enveloped-signature dla algorytm przekształcenia koduje regułę, która jest interpretowana jako Usuń `Signature`> elementu z dokumentu. W przeciwnym razie wartość weryfikator przekształcenie podpisu będą szyfrowane dokumencie, łącznie z podpisu, ale osoby podpisującej będzie mieć rozłożona dokumentu przed zastosowaniem podpisu, co może prowadzić do różnych odpowiedzi.       `DigestMethod`> Element identyfikuje metody tworzenia skrótu (skrót kryptograficzny) do zastosowania do zawartości po przekształceniu identyfikowane przez `URI` atrybutu `Reference`> elementu. To jest reprezentowana przez <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>Właściwości.</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>      ## Wybieranie metody zapewniania kanoniczności, chyba że współpracy z specyfikacją, która wymaga użycia inną wartość, zalecane jest użycie domyślnej metody zapewniania kanoniczności w programie .NET Framework, która jest algorytm XML C14N 1.0, którego wartość jest http://www.w3.org/TR/2001/REC-xml-c14n-20010315. Algorytm XML C14N 1.0 jest wymagana obsługiwany przez implementacje wszystkich XMLDSIG, szczególnie w przypadku, ponieważ jest on niejawne końcowego przekształcenie do zastosowania.       Dostępne są wersje zapewniania kanoniczności algorytmy, które obsługuje komentarzy zachowania. Zachowywanie komentarz metody zapewniania kanoniczności nie są zalecane, ponieważ ich narusza zasadę &quot;Zaloguj się, co jest widoczne&quot;. Oznacza to, komentarze w `Signature`> elementu nie można zmienić logika przetwarzania dla realizację podpis, jest jedynie jakie podpis wartości. W połączeniu z algorytmem słabych podpisów, umożliwiając komentarze, aby być uwzględniane zapewnia swobody niepotrzebnych atakująca wymusić kolizji wyznaczania wartości skrótu, wprowadzenie zmodyfikowany dokumentu są wyświetlane uzasadnione.  W programie .NET Framework tylko wbudowane canonicalizers są obsługiwane domyślnie. Aby obsługiwać canonicalizers dodatkowe lub niestandardowe, zobacz <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> Jeśli dokument używa metody zapewniania kanoniczności, która nie znajduje się w kolekcji reprezentowany przez <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>Właściwości, a następnie <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metoda zwróci `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      > [!NOTE] > Bardzo obrony aplikacji można usunąć wartości nie oczekuje osoby podpisujące do użycia z <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>kolekcji.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      ## Czy przed naruszeniem wartości odwołania?    Tak, `Reference`> wartości są bezpieczne naruszeniu.  .NET framework sprawdza `SignatureValue`> obliczeń przed przetworzeniem wszystkich `Reference`> wartości skojarzone z nimi przekształca i przerwie wcześnie w celu uniknięcia instrukcji przetwarzania mogą okazać się złośliwe.      ## Wybieranie elementów do podpisania zalecane jest użycie wartości &quot;&quot; dla `URI` atrybutu (lub ustaw <xref:System.Security.Cryptography.Xml.Reference.Uri%2A>pusty ciąg dla właściwości), jeśli to możliwe.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A> Oznacza to, że cały dokument jest uznawany za do obliczeń szyfrowane, co oznacza, że cały dokument jest chroniony przed naruszeniem.       Bardzo często, aby wyświetlić `URI` wartości w formularzu kotwice, takich jak #foo odwołujących się do elementu, którego atrybut ID jest &quot;foo&quot;. Niestety jest łatwy w tym celu niepowołane ponieważ dotyczy tylko zawartość elementu docelowego nie kontekstu. SMTP ta różnica jest znany jako zawijania podpisu XML (XSW).       Aplikacja uwzględnia komentarzy semantyczne (który nie jest typowe w przypadku zajmuje się XML), następnie należy użyć &quot;#xpointer(/)&quot; zamiast &quot;&quot;, a &quot;#xpointer(id(&quot;foo&quot;))&quot; zamiast &quot;#foo&quot;. Wersje #xpointer są interpretowane jako tym komentarzy, gdy formularze nazwa_skrócona wyłączenie się komentarze.       Jeśli użytkownik musi zaakceptować dokumenty, które są tylko częściowo chronione i chcesz zapewnić odczytują tę samą zawartość chroniona podpisu, użyj <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>metody.</xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>      ## Zagadnienia dotyczące zabezpieczeń o elemencie KeyInfo dane w opcjonalnym `KeyInfo`> elementu (oznacza to, <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>Właściwości), który zawiera klucz, aby zweryfikować podpisu, nie należy ufać.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>       W szczególności, <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>wartość reprezentuje systemu od zera klucza publicznego RSA, DSA lub ECDSA, dokument można zostały naruszone, pomimo <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>raportowania jest prawidłowy podpis metody.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>  Może to się zdarzyć jednostki czynności, po prostu naruszeniu ma wygenerowanie nowego klucza i ponowne podpisanie zmodyfikowany dokumentu z tego nowego klucza. Tak chyba że aplikacji sprawdza, czy klucz publiczny jest oczekiwana wartość, dokument powinien być traktowany tak, jakby zostały naruszone. Wymaga to zbadać klucza publicznego osadzony w dokumencie i listę znanych wartości dla kontekstu dokumentu weryfikacji aplikacji. Na przykład jeśli dokument można rozumieć wydawane przez znanych użytkowników, możesz sprawdzić klucza z listą znanych kluczy używanych przez tego użytkownika.       Można również sprawdzić po przetworzeniu dokumentu za pomocą klucza <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A>metody zamiast <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metody.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> Jednak optymalne zabezpieczeń, należy sprawdzić klucz wcześniej.       Alternatywnie należy wziąć pod uwagę użytkownika w trakcie zarejestrowany kluczy publicznych, zamiast odczytywanie `KeyInfo`> elementu.      ## Zagadnienia dotyczące zabezpieczeń dotyczące opcjonalnego elementu X509Data `X509Data`> element jest elementem podrzędnym `KeyInfo`> element i zawiera co najmniej jeden X509 certyfikatów lub identyfikatory X509 certyfikatów. Dane w `X509Data`> element nie należy także dodatkowo z natury zaufanych.       Podczas weryfikowania dokument z osadzonego `X509Data`> elementu, .NET Framework sprawdza tylko że danych jest rozpoznawana jako X509 certyfikatu, którego klucz publiczny pomyślnie można sprawdzić poprawności podpisu dokumentu. W przeciwieństwie do wywoływania <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metody z `verifySignatureOnly` parametru `false`, nie odwołania jest sprawdzane zaznaczono łańcuch zaufania i wygaśnięcia nie jest weryfikowany.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Nawet jeśli sam certyfikat wyodrębnia i przekazuje je do aplikacji <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metody z `verifySignatureOnly` parametru `false`, która jest nadal weryfikacji nie są wystarczające, aby zapobiec modyfikowaniu dokumentu.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Ten certyfikat musi nadal jest weryfikowany jako możliwy odpowiednie dla dokument jest podpisany.       Przy użyciu osadzony certyfikat podpisywania zapewnić strategii przydatne obrotu klucza, czy w `X509Data`> sekcji lub w treści dokumentu. Korzystając z tej metody aplikacja powinna Wyodrębnij certyfikat ręcznie i sprawdzania poprawności podobnie jak: - certyfikat został wystawiony bezpośrednio lub za pośrednictwem łańcucha przez urząd certyfikacji, którego certyfikat publiczny jest osadzony w aplikacji.           Przy użyciu listy zaufania wprowadzone do systemu operacyjnego bez dodatkowe kontrole, takie jak nazwa podmiotu znane, nie jest wystarczające, aby zapobiec modyfikowaniu w SignedXml.      Certyfikat został zweryfikowany nie zostały wygasła w momencie podpisywania dokumentów (lub &quot;teraz&quot; dla niemal przetwarzania dokumentów w czasie rzeczywistym).      — Dla długotrwałe certyfikatów wystawianych przez urząd certyfikacji, który obsługuje odwołań Sprawdź, czy certyfikat nie został odwołany.      -Podmiot certyfikatu jest weryfikowany jako możliwy odpowiednie do bieżącego dokumentu.      ## Wybieranie algorytm przekształcenia, gdy jest współdziałanie ze specyfikacją, który ma być definiowane określone wartości (na przykład XrML), należy postępować zgodnie ze specyfikacją.  Jeśli masz przekształcenie podpisu (takie jak kiedy podpisywania całego dokumentu), a następnie należy użyć http://www.w3.org/2000/09/xmldsig#enveloped-signature (reprezentowany przez <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>klasy).</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Można określić również niejawne transformacji XML C14N, ale nie jest konieczne.  Podpis obejmujących punkty kontrolne lub odłączone niezbędne są nie transformacji. Niejawne transformacji XML C14N odpowiada on za wszystko.       Z zabezpieczeniami zaktualizowane wprowadzone przez [biuletyn zabezpieczeń firmy Microsoft MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), .NET Framework ma ograniczone transformacje, które można używane w dokumencie weryfikacji domyślnie z niezaufanych transformacje powoduje <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>do zawsze zwracają `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> W szczególności transformacje, które wymagają dodatkowych danych wejściowych (określony jako elementy podrzędne w pliku XML) nie są już dozwolone z powodu ich podatności nadużycia złośliwych użytkowników. W3C informacją o tym, unikając transformacje XPath i XSLT, które są dwie główne przekształcenia wpływ tych ograniczeń.      ## Problem z odwołań zewnętrznych, jeśli aplikacja nie Sprawdź, czy odwołań zewnętrznych nie jest odpowiednia dla bieżącego kontekstu, może być użyte w sposób, które zapewniają dla wielu luk w zabezpieczeniach (w tym &quot;odmowa usługi&quot;, rozproszonych odbicia &quot;odmowa usługi&quot;, ujawnienie informacji, obejścia podpisu i zdalne wykonywanie kodu). Nawet jeśli były aplikacji można sprawdzić poprawności odwołania zewnętrznego identyfikatora URI, pozostanie problem zasobu ładowany dwa razy: po podczas aplikacji odczytuje go i po po SignedXml ona odczytana. Ponieważ nie ma żadnej gwarancji, że odczytu aplikacji i zarządzania dokumentami Sprawdź, czy czynności mają taką samą zawartość, podpisu nie zapewnia wiarygodności.       Biorąc pod uwagę ryzyko odwołań zewnętrznych, SignedXml spowoduje zgłoszenie wyjątku po napotkaniu odwołania zewnętrznego.  Aby uzyskać więcej informacji na temat tego problemu, zobacz [artykułu KB 3148821](https://support.microsoft.com/en-us/kb/3148821)."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/t-system.security.crypto_96_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/t-system.security.crypto_96_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_1.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/t-system.security.crypto_96_2.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/t-system.security.crypto_96_2.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_2.vb)]"
  syntax:
    content: public class SignedXml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_88_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_88_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_88_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_88_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_88_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_88_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_3.vb)]"
  syntax:
    content: public SignedXml ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> klasy z określonego dokumentu XML."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_111_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_111_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_111_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_111_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_111_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_111_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_3.vb)]"
  syntax:
    content: public SignedXml (System.Xml.XmlDocument document);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> Obiektu na potrzeby inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>document</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code> document </code> parametru zawiera wartość null <xref:System.Xml.XmlDocument.DocumentElement*>Właściwości.</xref:System.Xml.XmlDocument.DocumentElement*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  id: '#ctor(System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> klasy z określonego <xref href=&quot;System.Xml.XmlElement&quot;> </xref> obiektu."
  syntax:
    content: public SignedXml (System.Xml.XmlElement elem);
    parameters:
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Obiektu na potrzeby inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>elem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Dodaje <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> obiekt do listy obiektów do podpisania."
  remarks: "Dodaje metody AddObject `Object`> element, który reprezentuje obiekt do podpisania `Signature`> — element XML podpisu cyfrowego.       Wewnętrznie wywołuje metodę AddObject <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>metody <xref:System.Security.Cryptography.Xml.Signature>obiektu zamknięte przez <xref:System.Security.Cryptography.Xml.SignedXml>obiektu.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>  Można również dodać <xref:System.Security.Cryptography.Xml.DataObject>obiektu poprzez bezpośrednie wywoływanie <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>metody z <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> </xref:System.Security.Cryptography.Xml.DataObject>       Aby uzyskać więcej informacji na temat podpisy cyfrowe XML zobacz specyfikację XMLDSIG dostępne pod adresem www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example computes and XML signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/csharp/cc2302c9-707b-486f-888b-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/cpp/cc2302c9-707b-486f-888b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/visualbasic/cc2302c9-707b-486f-888b-_1.vb)]"
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> Obiekt do dodania do listy obiektów do podpisania."
  overload: System.Security.Cryptography.Xml.SignedXml.AddObject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  id: AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Dodaje <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> do obiektu <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiekt, który opisano metody tworzenia skrótu, wartość skrótu i przekształcenie służące do tworzenia podpisu cyfrowego XML."
  remarks: "Dodaje metody AddReference `Reference`> elementu <xref:System.Security.Cryptography.Xml.SignedXml>obiekt, który opisano metody tworzenia skrótu, wartość skrótu i przekształcenie służące do tworzenia podpisu cyfrowego XML.</xref:System.Security.Cryptography.Xml.SignedXml>  `Reference`> Element jest podelement `SignedInfo`> elementu.       Wewnętrznie wywołuje metodę AddReference <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>metody <xref:System.Security.Cryptography.Xml.SignedInfo>obiektu zamknięte przez <xref:System.Security.Cryptography.Xml.SignedXml>obiektu.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>  Można również dodać <xref:System.Security.Cryptography.Xml.Reference>obiektu poprzez bezpośrednie wywoływanie <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>metody z <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> </xref:System.Security.Cryptography.Xml.Reference>       Aby uzyskać więcej informacji na temat podpisy cyfrowe XML zobacz specyfikację XMLDSIG dostępne pod adresem www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_3.vb)]"
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);
    parameters:
    - id: reference
      type: System.Security.Cryptography.Xml.Reference
      description: "<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> Obiekt, który opisano metody tworzenia skrótu, wartość skrótu i przekształcenie służące do tworzenia podpisu cyfrowego XML."
  overload: System.Security.Cryptography.Xml.SignedXml.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  id: CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Określa, czy <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwość sprawdza przy użyciu klucza publicznego w podpisie.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Ta metoda również oblicza skrót odwołań i wartości podpisu.       Jeśli dokument XML został podpisany z podpisem X.509, metoda CheckSignature będzie Wyszukaj w sklepie &quot;Książka adresowa&quot; certyfikatów umożliwiających weryfikację. Na przykład, jeśli certyfikat jest wywoływany przez podmiot klucza identyfikator (SKI) <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>— Metoda będzie wybierz certyfikatów przy użyciu tego SKI i spróbuj je po kolei, dopóki nie można sprawdzić certyfikatu.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>"
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_17_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_17_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_17_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_17_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_17_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_17_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_3.vb)]"
  syntax:
    content: public bool CheckSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>sprawdza właściwości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> Właściwość klucza publicznego w podpisie nie pasuje do <> </> *> właściwości.       - lub - nie można utworzyć opisu podpisu.       - lub nie można utworzyć algorytmu wyznaczania wartości skrótu."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Określa, czy <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>sprawdza właściwości dla określonego klucza.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_1.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_1.cs)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Implementacja <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> właściwość, która przechowuje klucz do weryfikowania <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>sprawdza właściwości dla określonego klucza; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> Właściwość <code> key </code> parametr niezgodny <> </> *> właściwości.       - lub - nie można utworzyć opisu podpisu.       - lub nie można utworzyć algorytmu wyznaczania wartości skrótu."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Określa, czy <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwość sprawdza algorytmu określony komunikat uwierzytelniania kodu (MAC).</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "Implementacja <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> przechowuje MAC do weryfikowania <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>sprawdza właściwości dla określonych komputerów MAC; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> Właściwości określonego <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> obiekt jest nieprawidłowy.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - nie można utworzyć transformacja kryptograficzna użytych do sprawdzenia podpisu."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Określa, czy <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>sprawdza właściwości dla określonego <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> obiektu i, opcjonalnie, czy certyfikat jest prawidłowy.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Certyfikat X.509 w wersji 1.1 programu .NET Framework nie został zweryfikowany.  W wersji 2.0 lub nowszej jest weryfikowany certyfikat X.509.       W wersji 2.0 lub nowszej programu .NET Framework metoda CheckSignature będzie Wyszukaj w sklepie &quot;Książka adresowa&quot; certyfikatów umożliwiających weryfikację. Na przykład jeśli certyfikat jest wywoływany przez identyfikator klucza podmiotu (SKI), metoda CheckSignature wybierz certyfikaty z tej SKI i spróbuj je po kolei, dopóki nie można sprawdzić certyfikatu."
  example:
  - "The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.  \n  \n [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/visualbasic/e51a3b72-eabb-4d0b-b51a-_1.vb)]\n [!code-cs[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/csharp/e51a3b72-eabb-4d0b-b51a-_1.cs)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> Obiektu do weryfikowania <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>można zweryfikować podpisu. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> do weryfikowania podpisu i certyfikatów."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli podpis jest nieprawidłowy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - lub - <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli podpisu i certyfikatów są prawidłowe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można utworzyć opisu podpisu dla <code> certificate </code> parametru."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  id: CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Określa, czy <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwość sprawdza przy użyciu klucza publicznego w podpisie.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_1.vb)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_2.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_2.vb)]"
  syntax:
    content: public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);
    parameters:
    - id: signingKey
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Gdy metoda zwróci wartość, zawiera implementację <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> przechowuje klucz publiczny w podpisie. Ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwość sprawdza przy użyciu publicznego klucza w podpisie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> signingKey </code> Parametr ma wartość null."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> Właściwość klucza publicznego w podpisie nie pasuje do <> </> *> właściwości.       - lub - nie można utworzyć opisu podpisu.       - lub nie można utworzyć algorytmu wyznaczania wartości skrótu."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Oblicza podpisu cyfrowego XML."
  remarks: "Metoda ComputeSignature tworzy podpis cyfrowy XML i tworzy wiele elementów XML potrzebne.       Należy ustawić danych do podpisania i <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>Właściwość przed wywołaniem tej metody.</xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>"
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_74_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_74_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_74_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_74_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_2.vb)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <> </> *> właściwość nie jest <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> obiektu lub <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> obiektu.       - lub - nie można załadować klucza."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Oblicza podpis cyfrowy XML przy użyciu algorytmu określony komunikat uwierzytelniania kodu (MAC)."
  remarks: "Metoda ComputeSignature tworzy podpis cyfrowy XML przy użyciu określony algorytm MAC i tworzy wiele elementów XML potrzebne.       Należy ustawić danych do podpisania przed wywołaniem tej metody."
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_2.vb)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "A <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> obiekt przechowujący MAC ma być używany do obliczenia wartości <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>Właściwości.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> Obiekt określony przez <code> macAlg </code> parametr nie jest wystąpieniem <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>.       - lub - <xref:System.Security.Cryptography.HashAlgorithm.HashSize*>Właściwości określonego <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> obiektu jest nieprawidłowa.</xref:System.Security.Cryptography.HashAlgorithm.HashSize*>       - lub - nie można utworzyć transformacja kryptograficzna użytych do sprawdzenia podpisu."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> obiektu, który definiuje reguły przetwarzania XML szyfrowania."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> Obiektu, który definiuje reguły przetwarzania XML szyfrowania."
  overload: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  id: GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Zwraca <xref href=&quot;System.Xml.XmlElement&quot;> </xref> obiektu o określonym identyfikatorze z określonego <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> obiektu."
  syntax:
    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> Obiekt, aby pobrać <xref href=&quot;System.Xml.XmlElement&quot;> </xref> obiekt z."
    - id: idValue
      type: System.String
      description: "Identyfikator <xref href=&quot;System.Xml.XmlElement&quot;> </xref> obiektu pobrać <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> obiektu."
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Obiektu o określonym identyfikatorze z określonego <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> obiekt, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie można go odnaleźć."
  overload: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Zwraca klucz publiczny podpisu."
  remarks: "Zwraca metodę GetPublicKey <xref:System.Security.Cryptography.AsymmetricAlgorithm>obiekt, który zawiera klucz publiczny, który może służyć do weryfikacji podpisu cyfrowego XML.</xref:System.Security.Cryptography.AsymmetricAlgorithm>       Klucz musi być równa albo <xref:System.Security.Cryptography.DSA>lub <xref:System.Security.Cryptography.RSA>klucza.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.DSA>"
  syntax:
    content: protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "<xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> Obiekt, który zawiera klucz publiczny podpisu, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli nie można odnaleźć klucza."
  overload: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>Właściwość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Zwraca reprezentację XML <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "Reprezentacja XML <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> obiektu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  remarks: "Reprezentuje właściwość KeyInfo `KeyInfo`> element podpisu cyfrowego XML przy użyciu <xref:System.Security.Cryptography.Xml.KeyInfo>obiektów zawartych w ramach właściwości.</xref:System.Security.Cryptography.Xml.KeyInfo>  `KeyInfo`> Element jest podelement `Signature`> elementu.       Użyj właściwości wartości KeyInfo wymaganej do osadzenia klucz powiązane informacje, które ułatwiają identyfikację klucz niezbędny do zweryfikowania dokumentu XML.       Aby uzyskać więcej informacji na temat `<KeyInfo>` elementu, zobacz specyfikację XMLDSIG, która jest dostępna w www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_31_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_31_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_31_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_31_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "<xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> Obiektu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ładunki <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> stanu z elementem XML."
  remarks: ''
  example:
  - "The following code example shows how to use the LoadXml method to verify an XML document.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/csharp/m-system.security.crypto_14_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/visualbasic/m-system.security.crypto_14_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/cpp/m-system.security.crypto_14_1.cpp)]"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "Element XML załadować <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> stanu z."
  overload: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code> Parametru nie zawiera prawidłowej <> </> *> właściwości.       - lub - <code> value </code> parametru nie zawiera prawidłowej <> </> *> właściwości."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  id: m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> obiektu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  syntax:
    content: protected System.Security.Cryptography.Xml.Signature m_signature;
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  id: m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje nazwę zainstalowanego klucza ma być używany do podpisywania <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  syntax:
    content: protected string m_strSigningKeyName;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ustawia bieżący <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> obiektu."
  remarks: "<xref:System.Xml.XmlResolver>Klasy rozpoznaje zasobów zewnętrznych XML o nazwie przez zasób identyfikator URI (Uniform).</xref:System.Xml.XmlResolver> Jeśli nie ufasz źródłu pliku XML, możesz nie zezwala na dostęp do zasobów komputera o nazwie przez identyfikator URI pliku XML. Właściwości programu rozpoznawania nazw umożliwia kontrolę dostępu pliki XML do zasobów komputera, określając inną <xref:System.Xml.XmlResolver>obiektów.</xref:System.Xml.XmlResolver> Jeśli nie chcesz zezwolić na dostęp, można ustawić tę właściwość `null` (`Nothing` w języku Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Bieżący <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> obiektu. Wartości domyślne to <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  id: SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]       Pobiera nazwy metody, której algorytmy zapewniania kanoniczności są jawnie dozwolone."
  remarks: "Metody zapewniania kanoniczności przekonwertować dokument XML do postaci kanonicznej. Aby uzyskać więcej informacji na temat canonical XML, zobacz [Canonical XML](http://www.w3.org/TR/xml-c14n) w witrynie sieci Web W3C."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> SafeCanonicalizationMethods { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "Kolekcja nazw metod bezpiecznie powodującymi canonical XML."
  overload: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  id: Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> obiektu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  remarks: "Reprezentuje właściwości podpisu `Signature`> element podpisu cyfrowego XML przy użyciu <xref:System.Security.Cryptography.Xml.Signature>obiektów zawartych w ramach właściwości.</xref:System.Security.Cryptography.Xml.Signature>  `Signature`> Element jest elementem głównym używany do tworzenia podpisu cyfrowego XML i weryfikacji.       Aby pobrać, użyj właściwości podpisu <xref:System.Security.Cryptography.Xml.Signature>obiekt używany przez <xref:System.Security.Cryptography.Xml.SignedXml>obiektu.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature>       Aby uzyskać więcej informacji na temat `<Signature>` elementu, zobacz specyfikację XMLDSIG, która jest dostępna w www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the Signature property to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_9_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_9_1.cpp)]  \n  \n The following code example uses the Signature property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_9_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_9_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "<xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> Obiektu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.Signature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  id: SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera metodę delegowaną, która będzie wywoływana w celu weryfikacji podpisu XML format (nie kryptograficznych zabezpieczeń)."
  remarks: "Ta metoda może służyć do zapewnienia służą tylko do niektórych transformacji lub podpis używany w niektórych algorytmu wyznaczania wartości skrótu i tak dalej.       Ustawienie właściwości `null` usuwa wszystkie Walidacja formatu podpisu z <xref:System.Security.Cryptography.Xml.SignedXml>obiektu.</xref:System.Security.Cryptography.Xml.SignedXml>       Jeśli chcesz, aby uzyskać więcej łańcucha do niego i delegata bieżącego obiektu.       Jeśli konfigurujesz modułu sprawdzania poprawności formatu delegata podasz zostanie wyświetlony jako parametr wejściowy <xref:System.Security.Cryptography.Xml.SignedXml>obiekt weryfikowany i zwraca wartość logiczną — `true` Jeśli format jest dopuszczalna, `false` Jeśli nie jest.</xref:System.Security.Cryptography.Xml.SignedXml> Jeśli delegat zwraca `false` z jakiejkolwiek przyczyny, <xref:System.Security.Cryptography.Xml.SignedXml>obiektu zgłasza, że podpis XML jest nieprawidłowy.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public Func<System.Security.Cryptography.Xml.SignedXml,bool> SignatureFormatValidator { get; set; }
    return:
      type: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli format jest dopuszczalna; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  id: SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera długość podpisu dla bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  syntax:
    content: public string SignatureLength { get; }
    return:
      type: System.String
      description: "Długość podpisu dla bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  id: SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera metodę podpisu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  remarks: "Reprezentuje właściwość elementu SignatureMethod `SignatureMethod`> element podpisu cyfrowego XML za pomocą ciągu identyfikatora URI (Uniform Resource) zawartych w właściwości. `SignatureMethod`> Element jest podelement `SignedInfo`> elementu.       Aby pobrać, użyj właściwości elementu SignatureMethod `SignatureMethod`> identyfikator URI używany przez <xref:System.Security.Cryptography.Xml.SignedXml>obiektu.</xref:System.Security.Cryptography.Xml.SignedXml> Ta właściwość jest tylko do odczytu. Aby uzyskać więcej informacji o określaniu programowo identyfikator URI dla `SignatureMethod`> elementu, zobacz <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>Właściwości.</xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>       Aby uzyskać więcej informacji na temat `<SignatureMethod>` elementu, zobacz specyfikację XMLDSIG, która jest dostępna w www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public string SignatureMethod { get; }
    return:
      type: System.String
      description: "Metoda podpisu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera wartość podpisu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  remarks: "Reprezentuje właściwość SignatureValue `SignatureValue`> element podpisu cyfrowego XML przy użyciu tablicy bajtów zawartych w właściwości.  `SignatureValue`> Element jest podelement `Signature>` elementu.       Właściwość SignatureValue służy do pobierania wartości XML podpisu cyfrowego.  Ta właściwość jest wypełniane automatycznie po wprowadzeniu pomyślnym nawiązaniu połączenia z <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>metody.</xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>       Aby uzyskać więcej informacji na temat `<SignatureValue>` elementu, zobacz specyfikację XMLDSIG, która jest dostępna w www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "Tablica bajtów zawierająca wartość podpisu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> obiektu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  remarks: "Reprezentuje właściwość SignedInfo `SignedInfo`> element podpisu cyfrowego XML przy użyciu tablicy bajtów zawartych w właściwości.  `SignedInfo`> Element jest podelement `Signature>` elementu.       Aby pobrać, użyj właściwości SignedInfo <xref:System.Security.Cryptography.Xml.SignedInfo>obiektu, który jest używany przez <xref:System.Security.Cryptography.Xml.SignedXml>obiekt, aby utworzyć podpis cyfrowy XML.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo>       Aby uzyskać więcej informacji na temat `<SignedInfo>` elementu, zobacz specyfikację XMLDSIG, która jest dostępna w www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "<xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> Obiektu bieżącego <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  id: SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia klucz algorytmu asymetrycznego używany do podpisywania <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  remarks: "Właściwość SigningKey umożliwia określenie klucza asymetrycznego, który ma być używana do tworzenia podpisu cyfrowego XML."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_40_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_40_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_40_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_40_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/p-system.security.crypto_40_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/p-system.security.crypto_40_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_3.vb)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Klucz algorytmu asymetrycznego, używany do podpisywania <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  id: SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia nazwę zainstalowanego klucza ma być używany do podpisywania <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  syntax:
    content: public string SigningKeyName { get; set; }
    return:
      type: System.String
      description: "Nazwa zainstalowanego klucza ma być używany do podpisywania <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  id: XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla transformacji deszyfrowania tryb XML. To pole jest stałą."
  remarks: "Wartość pola XmlDecryptionTransformUrl jest &quot;http://www.w3.org/2002/07/decrypt#XML&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2002/07/decrypt#XML."
  syntax:
    content: public const string XmlDecryptionTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  id: XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla podstawowej transformacji 64. To pole jest stałą."
  remarks: "Wartość pola XmlDsigBase64TransformUrl jest &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigBase64TransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#base64."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/csharp/f-system.security.crypto_0_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_0_1.vb)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/cpp/f-system.security.crypto_0_1.cpp)]"
  syntax:
    content: public const string XmlDsigBase64TransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  id: XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolitego identyfikatora zasobów (URI) dla transformacji XML kanonicznej. To pole jest stałą."
  remarks: "Wartość pola XmlDsigC14NTransformUrl jest &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>pola.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>"
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_4_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_4_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_4_1.vb)]"
  syntax:
    content: public const string XmlDsigC14NTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  id: XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla transformacji Canonical XML, z komentarzami. To pole jest stałą."
  remarks: "Wartość pola XmlDsigC14NWithCommentsTransformUrl jest &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>pola.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>"
  syntax:
    content: public const string XmlDsigC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  id: XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla algorytm kanonizacji standardowe podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigCanonicalizationUrl jest &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigCanonicalizationUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>pola.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  id: XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla algorytm kanonizacji standardowe podpisy cyfrowe XML i zawiera komentarze. To pole jest stałą."
  remarks: "Wartość pola XmlDsigCanonicalizationWithCommentsUrl jest &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigCanonicalizationWithCommentsUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>pola.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationWithCommentsUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  id: XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) standardu <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> algorytm podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigDSAUrl jest &quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#dsa-sha1."
  syntax:
    content: public const string XmlDsigDSAUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  id: XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla transformacji przekształcenie podpisu. To pole jest stałą."
  remarks: "Wartość pola XmlDsigEnvelopedSignatureTransformUrl jest &quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigEnvelopedSignatureTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#enveloped-signature."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/csharp/62dc9f7e-cdc8-4569-bf73-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/cpp/62dc9f7e-cdc8-4569-bf73-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/visualbasic/62dc9f7e-cdc8-4569-bf73-_1.vb)]"
  syntax:
    content: public const string XmlDsigEnvelopedSignatureTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  id: XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) na wyłączność kanonizacji XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigExcC14NTransformUrl jest &quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigExcC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2001/10/xml-exc-c14n#."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/f-system.security.crypto_9_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/f-system.security.crypto_9_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/f-system.security.crypto_9_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  id: XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla wyłącznego kanonizacji XML, z komentarzami. To pole jest stałą."
  remarks: "Wartość pola XmlDsigExcC14NWithCommentsTransformUrl jest &quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigExcC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2001/10/xml-exc-c14n#WithComments."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/csharp/15045a8f-c740-45e0-8c9c-_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/cpp/15045a8f-c740-45e0-8c9c-_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/visualbasic/15045a8f-c740-45e0-8c9c-_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  id: XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) standardu <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> algorytm podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigHMACSHA1Url jest &quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#hmac-sha1."
  syntax:
    content: public const string XmlDsigHMACSHA1Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  id: XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla algorytmu standardowe minimalnego zapewniania kanoniczności dla podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigMinimalCanonicalizationUrl jest &quot;http://www.w3.org/2000/09/xmldsig#minimal&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#minimal."
  syntax:
    content: public const string XmlDsigMinimalCanonicalizationUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  id: XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla standardowych przestrzeni nazw dla podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigNamespaceUrl jest &quot;http://www.w3.org/2000/09/xmldsig#&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#."
  syntax:
    content: public const string XmlDsigNamespaceUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  id: XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) standardu <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> podpis metody podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigRSASHA1Url jest &quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#rsa-sha1."
  syntax:
    content: public const string XmlDsigRSASHA1Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  id: XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) dla <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algorytmu SHA-256 podpis metody odmiana podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigRSASHA256Url jest &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji, zobacz specyfikację sieci World Wide Web konsorcjum W3C w [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more)."
  syntax:
    content: public const string XmlDsigRSASHA256Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  id: XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) dla <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algorytmu SHA-384 podpis metody odmiana podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigRSASHA384Url jest &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji, zobacz specyfikację sieci World Wide Web konsorcjum W3C w [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)."
  syntax:
    content: public const string XmlDsigRSASHA384Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  id: XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) dla <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> SHA-512 podpis metody odmiana podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigRSASHA512Url jest &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji, zobacz specyfikację sieci World Wide Web konsorcjum W3C w [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)."
  syntax:
    content: public const string XmlDsigRSASHA512Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  id: XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) standardu <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> szyfrowanego metodę podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigSHA1Url jest &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/2000/09/xmldsig#sha1."
  syntax:
    content: public const string XmlDsigSHA1Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  id: XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) standardu <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> szyfrowanego metodę podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigSHA256Url jest &quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji, zobacz specyfikację sieci World Wide Web konsorcjum W3C w [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256)."
  syntax:
    content: public const string XmlDsigSHA256Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  id: XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) standardu <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> szyfrowanego metodę podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigSHA384Url jest &quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji, zobacz specyfikację sieci World Wide Web konsorcjum W3C w [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384)."
  syntax:
    content: public const string XmlDsigSHA384Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  id: XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) standardu <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> szyfrowanego metodę podpisy cyfrowe XML. To pole jest stałą."
  remarks: "Wartość pola XmlDsigSHA512Url jest &quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       Aby uzyskać więcej informacji, zobacz specyfikację sieci World Wide Web konsorcjum W3C w [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512)."
  syntax:
    content: public const string XmlDsigSHA512Url;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  id: XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje Uniform Resource Identifier (URI) dla XML Path Language (XPath). To pole jest stałą."
  remarks: "Wartość pola XmlDsigXPathTransformUrl jest &quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigXPathTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/TR/1999/REC-xpath-19991116."
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.  \n  \n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_1_1.vb)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_1_1.cs)]"
  syntax:
    content: public const string XmlDsigXPathTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  id: XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje jednolity identyfikator zasobów (URI) dla przekształceń XSLT. To pole jest stałą."
  remarks: "Wartość pola XmlDsigXsltTransformUrl jest &quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;.       Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>Klasa implementuje przekształcenia opisanego przez pole XmlDsigXsltTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>       Aby uzyskać więcej informacji zobacz specyfikację sieci World Wide Web konsorcjum W3C w http://www.w3.org/TR/1999/REC-xslt-19991116."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_3_1.cpp)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_3_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_3_1.vb)]"
  syntax:
    content: public const string XmlDsigXsltTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  id: XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Reprezentuje identyfikator URI (Uniform Resource) dla algorytmu przekształcenia licencji używać do normalizowania licencji XrML podpisów."
  remarks: "Wartość pola XmlLicenseTransformUrl jest &quot;urn: mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform&quot; Użyj tego pola wygodnie podania wartości do jednego z atrybutów identyfikatora URI używany do XMLDSIG elementu.       <xref:System.Security.Cryptography.Xml.XmlLicenseTransform>Klasa implementuje przekształcenia opisanego przez pole XmlLicenseTransformUrl.</xref:System.Security.Cryptography.Xml.XmlLicenseTransform>"
  syntax:
    content: public const string XmlLicenseTransformUrl;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
- uid: System.Security.Cryptography.Xml.Reference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
- uid: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
  parent: System
  isExternal: true
  name: Func<SignedXml,Boolean>
  nameWithType: Func<SignedXml,Boolean>
  fullName: System.Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.SignedXml
    name: SignedXml
    nameWithType: SignedXml
    fullName: SignedXml
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml
  nameWithType: SignedXml.SignedXml
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject
  nameWithType: SignedXml.AddObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference
  nameWithType: SignedXml.AddReference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature
  nameWithType: SignedXml.CheckSignature
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey
  nameWithType: SignedXml.CheckSignatureReturningKey
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedXml.ComputeSignature
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement
  nameWithType: SignedXml.GetIdElement
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey
  nameWithType: SignedXml.GetPublicKey
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml
  nameWithType: SignedXml.GetXml
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml
  nameWithType: SignedXml.LoadXml
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
- uid: System.Security.Cryptography.Xml.SignedXml.Signature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
