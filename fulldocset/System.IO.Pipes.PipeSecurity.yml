### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeSecurity
  id: PipeSecurity
  children:
  - System.IO.Pipes.PipeSecurity.#ctor
  - System.IO.Pipes.PipeSecurity.AccessRightType
  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeSecurity.AccessRuleType
  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeSecurity.AuditRuleType
  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.IO.Pipes.PipeSecurity.Persist(System.String)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  langs:
  - csharp
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
  type: Class
  summary: "Reprezentuje kontroli dostępu i inspekcji zabezpieczeń dla potoku."
  remarks: "Klasa PipeSecurity określa prawa dostępu do potoku i jak są poddawane inspekcji prób dostępu.  Ta klasa reprezentuje prawa dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowana przez <xref:System.IO.Pipes.PipeAccessRule>obiektu, gdy każda reguła inspekcji jest reprezentowana przez <xref:System.IO.Pipes.PipeAuditRule>obiektu.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       Klasa PipeSecurity jest abstrakcję źródłowy system Microsoft Windows plik zabezpieczeń. W tym systemie każdego potoku ma listy kontroli dostępu (DACL), która kontroluje dostęp do potoku, a system listę kontroli dostępu (SACL), który określa próby kontroli dostępu, które są poddawane inspekcji.  <xref:System.IO.Pipes.PipeAccessRule>i <xref:System.IO.Pipes.PipeAuditRule>klasy są abstrakcje wpisów kontroli dostępu (ACE), które obejmują listy DACL i SACL.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       Klasa PipeSecurity ukrywa wiele informacji poufnych list kontroli dostępu i SACL; nie masz martwić się o ACE porządkowanie lub DACL wartości null.       Aby pobrać, dodać lub zmienić reguł dostępu, które reprezentują DACL i SACL potoku, należy użyć klasy PipeSecurity.       Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do potoku, należy użyć <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>metody.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>metody.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> klasy."
  remarks: "Ten konstruktor tworzy pustą <xref:System.IO.Pipes.PipeSecurity>obiekt, który nie jest oparty na istniejących potoku.</xref:System.IO.Pipes.PipeSecurity> Można wypełnić obiektu o informacje dotyczące kontroli dostępu i zastosować je do potoku.       Można dodawać dostępu i inspekcji reguł <xref:System.IO.Pipes.PipeSecurity>przy użyciu <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>metody.</xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> </xref:System.IO.Pipes.PipeSecurity> Można usunąć dostępu lub przy użyciu zasad inspekcji <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>metody.</xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>       Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do potoku, należy użyć <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>metody.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>metody.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: public PipeSecurity ();
    parameters: []
  overload: System.IO.Pipes.PipeSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  id: AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera <xref:System.Type>zabezpieczanego obiektu, który jest skojarzony z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu.</xref:System.Type>"
  remarks: "Klasy, które pochodzą z <xref:System.Security.AccessControl.ObjectSecurity>klasy zastąpienie <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>Właściwości i zwracany typ przejdą do reprezentowania praw dostępu.</xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> </xref:System.Security.AccessControl.ObjectSecurity> Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu wyliczenia poprawne korzystać z każdego obiektu zabezpieczeń."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "Typ zabezpieczanego obiektu, który jest skojarzony z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  overload: System.IO.Pipes.PipeSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> z określonymi wartościami."
  remarks: "Zalecanym sposobem tworzenia regułami kontroli dostępu jest użycie konstruktorów <xref:System.IO.Pipes.PipeAccessRule>klasy.</xref:System.IO.Pipes.PipeAccessRule>"
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Tożsamość, którego dotyczy reguła dostępu. Musi to być obiekt, który można rzutować jako <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> obiektu."
    - id: accessMask
      type: System.Int32
      description: "Maska dostępu do tej reguły. Maski dostępu jest kolekcją 32-bitowych anonimowe bitów znaczenie jest definiowana za pomocą poszczególnych integratory"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta reguła jest dziedziczona z kontenera nadrzędnego; w przeciwnym razie wartość false."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> wartości, które określa właściwości dziedziczenia reguły dostępu."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> wartości, które określa, czy dostęp dziedziczony reguły są automatycznie propagowane. Flagi propagacji są ignorowane, jeśli `inheritanceFlags` ustawiono <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Określa typ kontroli dostępu prawidłowe."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> Obiekt, który tworzy tę metodę."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, lub <code>type</code> określa nieprawidłową wartość."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>accessMask</code> wynosi zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>nie jest ani typu <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ani typu, takich jak <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, którego można przekonwertować na typ <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera <xref:System.Type>obiektu, który jest skojarzony z zasadami dostępu do bieżącego <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu.</xref:System.Type>"
  remarks: "Klasy, które pochodzą z <xref:System.Security.AccessControl.ObjectSecurity>klasy zastąpienie <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>Właściwości i zwracany typ przejdą do reprezentowania praw dostępu.</xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu wyliczenia poprawne korzystać z każdego obiektu zabezpieczeń."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "Typ obiektu, który jest skojarzony z zasadami dostępu do bieżącego <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Dodaje regułę dostępu do poufnych kontroli dostępu listy (DACL), która jest skojarzona z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: 'Metoda AddAccessRule dodaje nową regułę do listy reguł, które zawiera obiekt <xref:System.IO.Pipes.PipeSecurity>. Jeśli dla określonej reguły listy kontroli dostępu (ACL) już istnieje, metoda AddAccessRule nadal doda reguły, z jednym wyjątkiem: <xref:System.IO.Pipes.PipeAccessRule>obiekt, który został utworzony za pomocą <xref:System.Security.AccessControl.AccessControlType>wartość zastępuje obiekt, który został utworzony za pomocą <xref:System.Security.AccessControl.AccessControlType>wartość.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.IO.Pipes.PipeSecurity>'
  syntax:
    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Reguły dostępu do dodania."
  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Dodaje regułę inspekcji do systemu dostępu formantu listy (SACL) skojarzony z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "AddAuditRule metoda dodaje nową regułę inspekcji do listy reguł, które <xref:System.IO.Pipes.PipeSecurity>obiekt zawiera.</xref:System.IO.Pipes.PipeSecurity>       Jeśli istnieje już reguła inspekcji dla określonej reguły, metoda AddAuditRule nadal doda reguły."
  syntax:
    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Reguła inspekcji, aby dodać."
  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> z określonymi wartościami."
  remarks: "Zalecanym sposobem tworzenia zasady inspekcji jest użycie konstruktorów <xref:System.IO.Pipes.PipeAuditRule>klasy.</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Tożsamość, którego dotyczy reguła dostępu. Musi to być obiekt, który można rzutować jako <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> obiektu."
    - id: accessMask
      type: System.Int32
      description: "Maska dostępu do tej reguły. Maski dostępu jest kolekcją 32-bitowych anonimowe bitów znaczenie jest definiowana za pomocą poszczególnych integratory"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta reguła jest dziedziczona z kontenera nadrzędnego; w przeciwnym razie wartość false."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> wartości, które określa właściwości dziedziczenia reguły dostępu."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> wartości, które określa, czy dostęp dziedziczony reguły są automatycznie propagowane. Flagi propagacji są ignorowane, jeśli `inheritanceFlags` ustawiono <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> wartości, które określa nieprawidłowy dostęp do kontrolowania typu."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> Obiekt, który tworzy tę metodę."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code> accessMask </code> właściwości jest równa zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> Właściwość nie jest ani typu <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ani typu, takich jak <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, którego można przekonwertować na typ <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera <xref:System.Type>obiekt skojarzony z zasadami inspekcji bieżącego <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu.</xref:System.Type>"
  remarks: "Klasy, które pochodzą z <xref:System.Security.AccessControl.ObjectSecurity>klasy zastąpienie <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>Właściwości i zwracany typ przejdą do reprezentowania praw dostępu.</xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu wyliczenia poprawne korzystać z każdego obiektu zabezpieczeń."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "Typ obiektu, który jest skojarzony z zasadami inspekcji bieżącego <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Zapisuje określony sekcje deskryptora zabezpieczeń, która jest skojarzona z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu w magazynie trwałym."
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "Dojście zabezpieczanego obiektu, który bieżącego <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiekt jest skojarzony z."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  id: Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Zapisuje określony sekcje deskryptora zabezpieczeń, która jest skojarzona z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu w magazynie trwałym."
  syntax:
    content: protected void Persist (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa zabezpieczanego obiektu, który bieżącego <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiekt jest skojarzony z."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Usuwa regułę dostępu z DACL kontroli dostępu listy (DACL), która jest skojarzona z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "Metoda RemoveAccessRule usuwa wszystkie dopasowania <xref:System.Security.AccessControl.AccessControlType>reguły dostępu lub wszystkich operacjach dopasowania <xref:System.Security.AccessControl.AccessControlType>reguły dostępu z bieżącego <xref:System.IO.Pipes.PipeSecurity>obiektu.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> Na przykład umożliwia tej metody usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType>reguły dla użytkownika dostępu przez przekazanie <xref:System.IO.Pipes.PipeAccessRule>obiektów utworzonych przy użyciu <xref:System.Security.AccessControl.AccessControlType>wartość <xref:System.IO.Pipes.PipeAccessRights>wartość i konto użytkownika.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> Metoda RemoveAccessRule usuwa żadnych reguł odmowy, które określają <xref:System.IO.Pipes.PipeAccessRights>wartość lub <xref:System.IO.Pipes.PipeAccessRights>wartość.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Reguły dostępu do usunięcia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli operacja zakończy się pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Usuwa regułę dostępu określonego z DACL kontroli dostępu listy (DACL), która jest skojarzona z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>Metoda usuwa wszystkie dopasowania <xref:System.Security.AccessControl.AccessControlType>reguły dostępu lub wszystkich operacjach dopasowania <xref:System.Security.AccessControl.AccessControlType>reguły dostępu z bieżącego <xref:System.IO.Pipes.PipeSecurity>obiektu.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> Na przykład umożliwia tej metody usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType>reguły dla użytkownika dostępu przez przekazanie <xref:System.IO.Pipes.PipeAccessRule>obiektów utworzonych przy użyciu <xref:System.Security.AccessControl.AccessControlType>wartość <xref:System.IO.Pipes.PipeAccessRights>wartość i konto użytkownika.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>Metoda usuwa żadnych reguł odmowy, które określają <xref:System.IO.Pipes.PipeAccessRights>wartość lub <xref:System.IO.Pipes.PipeAccessRights>wartość.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Reguły dostępu do usunięcia."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Usuwa zasady inspekcji z systemu dostępu formantu listy (SACL) skojarzony z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "Metoda RemoveAuditRule usuwa wszystkie dopasowania <xref:System.Security.AccessControl.AccessControlType>zasady inspekcji lub wszystkich operacjach dopasowania <xref:System.Security.AccessControl.AccessControlType>inspekcji reguły z bieżącego <xref:System.IO.Pipes.PipeSecurity>obiektu.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Na przykład umożliwia tej metody usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType>inspekcji zasady dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule>utworzone za pomocą obiektu <xref:System.Security.AccessControl.AccessControlType>wartość, <xref:System.Security.AccessControl.AuditFlags>wartość i konto użytkownika.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Po wykonaniu tej metody RemoveAuditRule usuwa żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags>wartość lub <xref:System.Security.AccessControl.AuditFlags>wartość.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Reguła inspekcji do usunięcia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zasady inspekcji został usunięty; w przeciwnym razie wartość<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Usuwa wszystkie reguły inspekcji, które mają taki sam identyfikator zabezpieczeń jak inspekcji określonej reguły z systemu dostępu formantu listy (SACL) skojarzony z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "Metoda RemoveAuditRuleAll usuwa wszystkie zasady inspekcji dla określonego użytkownika.  Ignoruje wszystkie wartości w <xref:System.IO.Pipes.PipeAuditRule>obiektu, z wyjątkiem konta użytkownika.</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Reguła inspekcji do usunięcia."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Usuwa regułę określonego inspekcji z systemu dostępu formantu listy (SACL) skojarzony z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "Metoda RemoveAuditRuleSpecific usuwa określony dopasowywania <xref:System.Security.AccessControl.AccessControlType>inspekcji reguły lub określony dopasowywania <xref:System.Security.AccessControl.AccessControlType>zasady inspekcji z bieżącego <xref:System.IO.Pipes.PipeSecurity>obiektu.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Na przykład możesz ta metoda służy do usunięcia określonej <xref:System.Security.AccessControl.AccessControlType>zasady inspekcji dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule>obiektów utworzonych przy użyciu <xref:System.Security.AccessControl.AccessControlType>wartość <xref:System.Security.AccessControl.AuditFlags>wartość i konto użytkownika.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Po wykonaniu tej metody RemoveAuditRuleSpecific usuwa tylko reguła odmowy, która określa <xref:System.Security.AccessControl.AuditFlags>wartość.</xref:System.Security.AccessControl.AuditFlags>  Nie powoduje usunięcia żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags>wartość.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Reguła inspekcji do usunięcia."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Usuwa wszystkie reguły dostępu w DACL kontroli dostępu listy (DACL), która jest skojarzona z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiekt, a następnie dodaje regułę dostępu określony."
  remarks: "Metoda ResetAccessRule dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określonego lub spowoduje zastąpienie wszelkich identyczne reguły list kontroli dostępu, zgodne `rule` parametru.  Na przykład jeśli `rule` określa parametr <xref:System.IO.Pipes.PipeAccessRights>wartości, a także metoda ResetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.IO.Pipes.PipeAccessRights>wartość identyczne zasady zostaną zastąpione.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Jeśli metoda ResetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.IO.Pipes.PipeAccessRights>wartość reguły identyczne również zostaną zastąpione.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Reguły dostępu do dodania."
  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ustawia reguły dostępu w DACL kontroli dostępu listy (DACL), która jest skojarzona z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "Metoda SetAccessRule dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określonego lub spowoduje zastąpienie wszelkich identyczne reguły list kontroli dostępu, zgodne <xref:System.IO.Pipes.PipeAccessRights>wartość `rule` parametru.</xref:System.IO.Pipes.PipeAccessRights>  Na przykład jeśli `rule` określa parametr <xref:System.IO.Pipes.PipeAccessRights>wartości, a także metoda SetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.IO.Pipes.PipeAccessRights>wartość identyczne zasady zostaną zastąpione.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Jeśli metoda SetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.IO.Pipes.PipeAccessRights>wartość identyczne reguła nie zostanie zastąpiona.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Reguły można ustawić."
  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ustawia zasady inspekcji w System dostępu formantu listy (SACL) skojarzony z bieżącym <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu."
  remarks: "Metoda SetAuditRule Dodaje regułę określonego inspekcji lub zastępuje żadnych reguł identyczne inspekcji, które pasują <xref:System.IO.Pipes.PipeAccessRights>wartość `rule` parametru.</xref:System.IO.Pipes.PipeAccessRights>  Na przykład jeśli `rule` określa parametr <xref:System.IO.Pipes.PipeAccessRights>wartości, a także metoda SetAuditRule znajdzie identyczne inspekcji regułę, która określa <xref:System.IO.Pipes.PipeAccessRights>wartość identyczne zasady zostaną zastąpione.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Jeśli metoda SetAuditRule znajdzie reguła inspekcji identyczne, który określa <xref:System.IO.Pipes.PipeAccessRights>wartość identyczne reguła nie zostanie zastąpiona.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Reguły można ustawić."
  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Pipes.PipeSecurity.#ctor
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeAccessRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRule
  nameWithType: PipeAccessRule
  fullName: System.IO.Pipes.PipeAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeAuditRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAuditRule
  nameWithType: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.#ctor*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity.PipeSecurity
- uid: System.IO.Pipes.PipeSecurity.AccessRightType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: PipeSecurity.AccessRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: PipeSecurity.AddAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: PipeSecurity.AddAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: PipeSecurity.AuditRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist
  nameWithType: PipeSecurity.Persist
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: PipeSecurity.RemoveAccessRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: PipeSecurity.RemoveAuditRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: PipeSecurity.RemoveAuditRuleAll
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: PipeSecurity.ResetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: PipeSecurity.SetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: PipeSecurity.SetAuditRule
