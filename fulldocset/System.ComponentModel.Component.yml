### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Component
  id: Component
  children:
  - System.ComponentModel.Component.#ctor
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.Finalize
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  langs:
  - csharp
  name: Component
  nameWithType: Component
  fullName: System.ComponentModel.Component
  type: Class
  summary: "Udostępnia podstawową implementację dla <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> obiektu interfejsu i umożliwia udostępnianie między aplikacjami."
  remarks: "Składnik jest klasa podstawowa dla wszystkich składników w środowisko uruchomieniowe języka wspólnego, które kierować przez odwołanie. Składnik może być zastosowana zdalnie i pochodzi od <xref:System.MarshalByRefObject>klasy.</xref:System.MarshalByRefObject> Składnik zawiera implementację <xref:System.ComponentModel.IComponent>interfejsu.</xref:System.ComponentModel.IComponent> <xref:System.ComponentModel.MarshalByValueComponent>Dostarcza implementację tego <xref:System.ComponentModel.IComponent>który marshals przez wartość.</xref:System.ComponentModel.IComponent> </xref:System.ComponentModel.MarshalByValueComponent>       Można hostować składnika w każdym obiekcie, który implementuje <xref:System.ComponentModel.IContainer>interfejs, a zapytanie i Pobierz usługi z jego kontenera.</xref:System.ComponentModel.IContainer> Tworzy kontener <xref:System.ComponentModel.ISite>dla każdego składnika zawiera.</xref:System.ComponentModel.ISite> Kontener używa lokacji do zarządzania składnikiem i jest używany przez składnik do komunikowania się z jego kontenera.       Składnik należy zwolnić zasoby wyraźnie wywołań jego <xref:System.ComponentModel.Component.Dispose%2A>metody, nie trzeba czekać na automatyczne zarządzanie pamięcią za pośrednictwem wywołania niejawnego <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> Gdy <xref:System.ComponentModel.Container>usunięciu wszystkich składników w <xref:System.ComponentModel.Container>są także usuwane.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container>"
  syntax:
    content: >-
      [System.ComponentModel.DesignerCategory("Component")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Component : MarshalByRefObject, IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ComponentModel.Component.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Component&quot;> </xref> klasy."
  syntax:
    content: public Component ();
    parameters: []
  overload: System.ComponentModel.Component.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.CanRaiseEvents
  id: CanRaiseEvents
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy składnik wywołuje zdarzenia."
  remarks: "Domyślna implementacja ta właściwość zawsze zwraca `true`. Klasy, które dziedziczą z <xref:System.ComponentModel.Component>klasy powinny zastępować tej właściwości, aby zapewnić możliwość wyłączania wywoływanie zdarzeń.</xref:System.ComponentModel.Component> Na przykład w <xref:System.Windows.Forms.Control>klasy, jeśli formant jest obsługiwana jako formant ActiveX <xref:System.Windows.Forms.Control.CanRaiseEvents%2A>zwraca `false` Jeśli formant ActiveX ma jego zdarzeń zamrożony.</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Control>"
  syntax:
    content: protected virtual bool CanRaiseEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli składnik może wywoływać zdarzenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.CanRaiseEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Container
  id: Container
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> zawierający <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "Składniki w kontenerze są śledzone na liście pierwszy w, FIFO, określające kolejność elementów w kontenerze. Ostatni składnik dodane jest ostatni składnik na liście."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> Zawierający <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, jeśli istnieje, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.ComponentModel.Component&quot;> </xref> nie są umieszczane w <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.DesignMode
  id: DesignMode
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.ComponentModel.Component&quot;> </xref> jest obecnie w trybie projektowania."
  remarks: "Wskaźnik tryb projektowania są przechowywane w <xref:System.ComponentModel.ISite>; w związku z tym jeśli <xref:System.ComponentModel.Component>nie ma <xref:System.ComponentModel.ISite>skojarzonych z nim, wartość tej właściwości jest `false`.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.ComponentModel.Component&quot;> </xref> jest w trybie projektowania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose
  id: Dispose
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "Wywołaj metodę Dispose po zakończeniu przy użyciu <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> Metoda Dispose pozostawia <xref:System.ComponentModel.Component>w stanie uniemożliwiającym jego używanie.</xref:System.ComponentModel.Component> Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do <xref:System.ComponentModel.Component>, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.ComponentModel.Component>klasy.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md) i [implementacja metody Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Wywołania zawsze dysponować przed zwolnieniem ostatniego odwołania do <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.ComponentModel.Component>obiektu `Finalize` metody.</xref:System.ComponentModel.Component>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.ComponentModel.Component&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Ta metoda jest wywoływana przez metodę publiczną <xref:System.ComponentModel.Component.Dispose%2A>— Metoda i <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> `Dispose()`wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`. <xref:System.Object.Finalize%2A>wywołuje `Dispose` z `disposing` ustawioną `false`.</xref:System.Object.Finalize%2A>       Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.ComponentModel.Component>odwołań.</xref:System.ComponentModel.Component> Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Disposed
  id: Disposed
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Występuje, gdy składnik jest usunięty przez wywołanie do <xref:System.ComponentModel.Component.Dispose*>metody.</xref:System.ComponentModel.Component.Dispose*>"
  remarks: 'Podczas tworzenia usuniętego obiektu delegowanego, należy określić metodę, która obsługuje zdarzenie. Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia delegata zdarzenia. Program obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie, o ile nie usuniesz delegata. Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [NIB: zdarzenia i delegatów](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Events
  id: Events
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera listę programów obsługi zdarzeń, które są dołączone do tego <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: 'Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "<xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref> Zapewnia delegatów dla tego składnika."
  overload: System.ComponentModel.Component.Events*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Finalize
  id: Finalize
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwalnia zasoby niezarządzane, a następnie wykonuje inne operacje oczyszczania przed <xref href=&quot;System.ComponentModel.Component&quot;> </xref> jest odzyskana przez wyrzucanie elementów bezużytecznych."
  remarks: "Ta metoda zastępuje <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A>metody.</xref:System.GC.SuppressFinalize%2A>       Aby uzyskać więcej informacji, zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~Component ();
    parameters: []
  overload: System.ComponentModel.Component.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca obiekt reprezentujący oferowane przez <xref href=&quot;System.ComponentModel.Component&quot;> </xref> lub jego <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  remarks: "Ta metoda może zostać zastąpiona przez klasę pochodną."
  syntax:
    content: protected virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Usługi udostępniane przez <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący oferowane przez <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.ComponentModel.Component&quot;> </xref> nie ma określonej usługi.</xref:System.Object>"
  overload: System.ComponentModel.Component.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Site
  id: Site
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera lub ustawia <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> z <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "<xref:System.ComponentModel.Component>Będą miały, <xref:System.ComponentModel.ISite>Jeśli został dodany <xref:System.ComponentModel.IContainer>, a następnie <xref:System.ComponentModel.IContainer>przypisuje <xref:System.ComponentModel.ISite>do niego.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.IContainer>Jest odpowiedzialny za przypisanie <xref:System.ComponentModel.ISite>do <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> Zmiana wartości elementu <xref:System.ComponentModel.ISite>jest niekoniecznie zmiany nazwy witryny <xref:System.ComponentModel.Component>przydzielono.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> Właściwość lokacji powinna być ustawiona tylko przez <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer>       Wartość właściwości jest `null` Jeśli <xref:System.ComponentModel.Component>zostanie usunięty z jej <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> Przypisywanie `null` do tej właściwości nie zawsze są usuwane <xref:System.ComponentModel.Component>z <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component>       A <xref:System.ComponentModel.Component>może lub nie może mieć nazwę.</xref:System.ComponentModel.Component> Jeśli <xref:System.ComponentModel.Component>jest podana nazwa, nazwa musi być unikatowa wśród innych <xref:System.ComponentModel.Component>obiektów w jego <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.ISite>Przechowuje nazwę <xref:System.ComponentModel.Component>w związku z tym można tylko określić nazwę, <xref:System.ComponentModel.Component>Jeśli ma ona <xref:System.ComponentModel.ISite>skojarzona z nim.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: public virtual System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "<xref href=&quot;System.ComponentModel.ISite&quot;> </xref> Skojarzone z <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.ComponentModel.Component&quot;> </xref> nie są umieszczane w <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>, <xref href=&quot;System.ComponentModel.Component&quot;> </xref> nie ma <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> skojarzone z nią lub <xref href=&quot;System.ComponentModel.Component&quot;> </xref> zostanie usunięty z jej <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Site*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.ToString
  id: ToString
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca <xref:System.String>zawierające nazwę <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, jeśli istnieje.</xref:System.String> Ta metoda nie powinna zostać zastąpiona."
  remarks: "A <xref:System.ComponentModel.Component>może lub nie może mieć nazwę.</xref:System.ComponentModel.Component> Jeśli <xref:System.ComponentModel.Component>jest podana nazwa, nazwa jest unikatowa wśród innych <xref:System.ComponentModel.Component>obiektów w jego <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component>       <xref:System.ComponentModel.ISite>Przechowuje nazwę <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> <xref:System.ComponentModel.Component>Może mieć tylko, <xref:System.ComponentModel.ISite>Jeśli został dodany <xref:System.ComponentModel.IContainer>, a następnie <xref:System.ComponentModel.IContainer>przypisuje <xref:System.ComponentModel.ISite>do niego.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>zawierające nazwę <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, jeśli istnieje, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.ComponentModel.Component&quot;> </xref> jest bez nazwy.</xref:System.String>"
  overload: System.ComponentModel.Component.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ComponentModel.Component.#ctor
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.ComponentModel.Component.Finalize
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Component.#ctor*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component
  nameWithType: Component.Component
- uid: System.ComponentModel.Component.CanRaiseEvents*
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
- uid: System.ComponentModel.Component.DesignMode*
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose
  nameWithType: Component.Dispose
- uid: System.ComponentModel.Component.Events*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
- uid: System.ComponentModel.Component.Finalize*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize
  nameWithType: Component.Finalize
- uid: System.ComponentModel.Component.GetService*
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService
  nameWithType: Component.GetService
- uid: System.ComponentModel.Component.Site*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
- uid: System.ComponentModel.Component.ToString*
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString
  nameWithType: Component.ToString
