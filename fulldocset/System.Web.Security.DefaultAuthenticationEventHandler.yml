### YamlMime:ManagedReference
items:
- uid: System.Web.Security.DefaultAuthenticationEventHandler
  id: DefaultAuthenticationEventHandler
  langs:
  - csharp
  name: DefaultAuthenticationEventHandler
  nameWithType: DefaultAuthenticationEventHandler
  fullName: System.Web.Security.DefaultAuthenticationEventHandler
  type: Delegate
  summary: "Reprezentuje metodę, która obsługuje **DefaultAuthentication_OnAuthenticate** zdarzenie <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref>."
  remarks: "Delegat DefaultAuthenticationEventHandler jest zdefiniowany dla <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>zdarzeń <xref:System.Web.Security.DefaultAuthenticationModule>klasy.</xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> Dostęp można uzyskać <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>zdarzenie <xref:System.Web.Security.DefaultAuthenticationModule>klasy, określając procedury o nazwie **DefaultAuthentication_OnAuthenticate** w pliku Global.asax aplikacji ASP.NET.</xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>Zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.AuthenticateRequest>zdarzeń i służy do zapewnienia, że <xref:System.Web.HttpContext.User%2A>właściwości bieżącego <xref:System.Web.HttpContext>jest wypełniana <xref:System.Security.Principal.IPrincipal>obiektu.</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpApplication.AuthenticateRequest> </xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>       Można użyć <xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>Właściwość <xref:System.Web.Security.DefaultAuthenticationEventArgs>obiekt dostarczony do **DefaultAuthentication_OnAuthenticate** zdarzeń, aby ustawić <xref:System.Web.HttpContext.User%2A>właściwości bieżącego <xref:System.Web.HttpContext>do niestandardowego <xref:System.Security.Principal.IPrincipal>obiektu.</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationEventArgs> </xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A> Jeśli nie określisz wartości <xref:System.Web.HttpContext.User%2A>Właściwość <xref:System.Web.HttpContext>podane podczas **DefaultAuthentication_OnAuthenticate** zdarzenia <xref:System.Web.Security.DefaultAuthenticationModule>ustawia <xref:System.Web.HttpContext.User%2A>Właściwość <xref:System.Web.HttpContext>do <xref:System.Security.Principal.GenericPrincipal>obiekt, który nie zawiera żadnych informacji użytkownika.</xref:System.Security.Principal.GenericPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A>       **DefaultAuthentication_OnAuthenticate** zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.AuthenticateRequest>zdarzeń i przed <xref:System.Web.HttpApplication.AuthorizeRequest>zdarzeń.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.HttpApplication.AuthenticateRequest> Jeśli masz sekcja, która jest zależna od nazwy użytkownika do odmowy lub zezwolić na dostęp do aplikacji, modyfikując <xref:System.Web.HttpContext.User%2A>właściwości bieżącego <xref:System.Web.HttpContext>może wpłynąć na działanie aplikacji.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> Upewnij się, że nazwa użytkownika, należy ustawić podczas **DefaultAuthentication_OnAuthenticate** zdarzeń jest uznawany za po określeniu sekcji konfiguracji."
  example:
  - "The following code example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> is `null`. If the property is `null`, the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> to a <xref:System.Security.Principal.GenericPrincipal> object, where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default\".  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you are ensuring that only authenticated users have access to your site, by using the  section and specifying `<deny users=\"?\" />`, this sample will cause the  element to be ignored, as the user will have a name, which is \"default\". Instead you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/t-system.web.security.de_0_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/t-system.web.security.de_0_1.asax)]"
  syntax:
    content: public delegate void DefaultAuthenticationEventHandler(object sender, DefaultAuthenticationEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
