### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecureConversationServiceCredential
  id: SecureConversationServiceCredential
  children:
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  langs:
  - csharp
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential
  type: Class
  summary: "Zawiera ustawienia poświadczeń dla usługi bezpiecznej konwersacji."
  remarks: "Bezpiecznych konwersacji obejmują wymiany wiele komunikatów i użyj narzędzia zabezpieczeń kontekstu tokenu (SCT) do zapewnienia bezpieczeństwa. SCT współużytkowany komunikującymi się Stronami przez czas ich istnienia sesji komunikacji. Usługa może wystawiać dwóch różnych rodzajów SCTs:-pierwsza to SCT opartymi na sesji, który zawiera unikatowy identyfikator. Tylko identyfikator przenoszenia wiadomości, a usługa zachowuje mapowanie stanu pamięci podręcznej, mapująca się między identyfikatorami SCT i zawartości (na przykład oświadczenia, kluczy zabezpieczeń i tak dalej). Dobrze behaved klient musi wysłać anulowania SCT, aby ułatwić usługi optymalizacji zasobów pamięci podręcznej. Jeśli wystąpienia tej klasy wywołując <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>z `requireCancellation` parametru równa `true`, SCT wystawiony w ten sposób.</xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>      -Drugim jest niezależna SCT, która znajduje się w pliku cookie na komputerze klienckim. Ta SCT zawiera informacje o stanie całego, wymaga stanu zarządzania z usługi ani anulowania SCT od klienta. Jest to czasem nazywane SCT &quot;Tryb plików cookie&quot;. Ponieważ SCT zawiera informacje o stanie całego, jego rozmiar jest większy niż w przypadku opartymi na sesji. Z opartymi na sesji SCTs usługi przechowuje podobne informacje o stanie. Jednak ponieważ jest ona niezależne, można stosować w przypadku istnienia usługi i będzie się powtarzał przez zamknięcie usługi i uruchom ponownie."
  syntax:
    content: public sealed class SecureConversationServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  id: SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Pobiera kolekcję <xref:System.Type>oświadczenia dla pliku cookie serializacji.</xref:System.Type>"
  remarks: "Do serializacji oświadczenia do SCT plików cookie, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] używa <xref:System.Runtime.Serialization.DataContractSerializer>jako domyślny.</xref:System.Runtime.Serialization.DataContractSerializer> Ponieważ zasób oświadczenia jest rozszerzalny, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] umożliwia podanie listy zasoby znanych typów. Pomaga to <xref:System.Runtime.Serialization.DataContractSerializer>podczas deserializacji oświadczeń w pliku cookie, aby przywrócić oryginalny silnie typizowanych obiektów.</xref:System.Runtime.Serialization.DataContractSerializer>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#2](~/add/codesnippet/csharp/e8a69534-ad60-48be-9b2e-_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> SecurityContextClaimTypes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "Kolekcja <xref:System.Type>oświadczenia dla pliku cookie serializacji.</xref:System.Type>"
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  id: SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Pobiera lub ustawia dostosowany <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> kodowania i dekodowania serializacji pliku cookie."
  remarks: "W &quot;Tryb plików cookie&quot; Usługa wystawia klienta token kontekstu zabezpieczeń (SCT) w postaci pliku cookie do klienta, dzięki czemu nie trzeba zachować każdy stan zabezpieczeń. Klient wysyła plik cookie w komunikacie żądania, aby usługa potrafi usunięcia ochrony i sprawdź komunikat żądania. Ponieważ SCT często są przesyłane przez sieć niezabezpieczone, muszą być chronione.       Domyślnie [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] używa <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>klasę, aby chronić plik cookie przy użyciu interfejsu API ochrony danych (DPAPI).</xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> Dla DPAPI do pracy w środowisku farmy sieci Web wszystkie usługi wewnętrznej bazy danych musi działać jako tego samego konta użytkownika domeny. Innymi słowy Jeśli usługa jest obsługiwana w sieci Web, następnie proces roboczy usług Internet Information Services (IIS) musi być skonfigurowana do uruchamiania jako użytkownik domeny.       Ta właściwość umożliwia używanie dostosowany <xref:System.ServiceModel.Security.SecurityStateEncoder>do szyfrowania i odszyfrowywania pliku cookie i nie zależą od DPAPI.</xref:System.ServiceModel.Security.SecurityStateEncoder>"
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#1](~/add/codesnippet/csharp/72c1f567-836b-4b6f-bbcd-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "A <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> obiektu, który jest dostosowanie z <xref href=&quot;System.ServiceModel.Security.DataProtectionSecurityStateEncoder&quot;> </xref>."
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecurityStateEncoder
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
