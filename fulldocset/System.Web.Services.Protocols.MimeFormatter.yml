### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "Udostępnia abstrakcyjną klasę podstawową dla wszystkich czytelników i moduły zapisujące usługi sieci Web i klienci implementowane przy użyciu protokołu HTTP, ale bez protokołu SOAP."
  remarks: "Moduły zapisujące usługi sieci Web i czytników serializacji i deserializacji odpowiednio między obiektami parametr lub zwracane metod sieci Web i strumieni żądania lub odpowiedzi HTTP. Klasa MimeFormatter ustanawia wspólnego interfejsu i funkcje dla składników zapisywania i odczytywania klas, zarówno klient, jak i po stronie serwera.       Klasa MimeFormatter obsługuje wdrożenia programu .NET Framework usług sieci Web za pomocą operacji HTTP GET i POST protokołu HTTP. W operacji HTTP GET parametry żądania są kodowane w żądaniu HTTP URL Uniform Resource Locator (). W operacji POST protokołu HTTP parametry żądania są kodowane w treści żądania HTTP, podobnie jak w przypadku formularza HTML. Z obu implementacji zwracana wartość jest wyświetlana w treści odpowiedzi HTTP jako dokument XML protokołu SOAP.       Projektant zwykle nie trzeba korzystać bezpośrednio MimeFormatter lub jej klas podrzędnych. Zamiast tego podczas narzędzie Wsdl.exe generuje kod serwera proxy klienta zgodnie z implementacji protokołu HTTP GET lub POST protokołu HTTP, ma to zastosowanie <xref:System.Web.Services.Protocols.HttpMethodAttribute>do każdej metody sieci Web i ustawia ten atrybut <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>i <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>właściwości do odpowiedniego typu klasy MimeFormatter</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute> Na serwerze odpowiednie typy pochodne są używane zgodnie z ustawieniami w pliku konfiguracji platformy ASP.NET (Web.config). Na komputerze klienckim odpowiednie typy pochodne są określane w formacie WSDL."
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref> klasy."
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Tworzy i inicjuje wystąpienie konkretną klasę pochodzącą od <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "CreateInstance — metoda tworzy wystąpienie klasy pochodnej i wywołuje implementacji klasy pochodnej z klasy abstrakcyjnej <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> CreateInstance — metoda jest wywoływana w czasie przetwarzania żądania lub odpowiedzi.       Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Inicjator przekazany jako parametr do metody CreateInstance są uzyskiwane z innego wystąpienia klasy pochodnej, wywołując <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>metody podczas inicjowania klienta lub usługi.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "Typ pochodny <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, z których można utworzyć wystąpienia."
    - id: initializer
      type: System.Object
      description: "Obiekt używany do inicjowania wystąpienia uzyskany wcześniej za pomocą implementacji klasy pochodnej <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>metody.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Po przesłonięciu w klasie pochodnej zwraca inicjatora dla określonej metody."
  remarks: "Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Implementacja klasy pochodnej metody wystąpienia GetInitializer jest wywoływana podczas inicjowania klienta lub usługi. Później w czasie przetwarzania żądania lub odpowiedzi, obiekt inicjator jest przekazywany do statycznej <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>metody, która tworzy wystąpienie innego obiektu klasy pochodnej, a następnie do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody zainicjować go.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> </xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Drugi obiekt wykonuje rzeczywiste odczytu lub zapisu."
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> , który określa metody sieci Web, dla którego jest uzyskiwany inicjatora."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający inicjator dla określonej metody.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Zwraca inicjatora dla określonej metody."
  remarks: "Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Statyczna metoda GetInitializer wywołuje klasy pochodnej <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>Metoda niejawne utworzenie wystąpienia klasy pochodnej.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> W czasie przetwarzania żądania lub odpowiedzi obiekt inicjator jest przekazywany do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody inne wystąpienie klasy pochodnej.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Ostatni obiekt wykonuje rzeczywiste odczytu lub zapisu."
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "Typ pochodny <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, — do są uzyskiwane inicjatora."
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> , który określa metody sieci Web, dla którego jest uzyskiwany inicjatora."
    return:
      type: System.Object
      description: "A <xref:System.Object>obiekt, który zawiera inicjator dla określonej metody.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca tablicę inicjatora obiektów odpowiadających tablicy wejściowej definicjami metod."
  remarks: "Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Wywołuje metodę wystąpienia GetInitializers <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>metody wystąpienia dla każdej metody sieci Web wejściowej.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Oznacza to, że wystąpienie klasy pochodnej z <xref:System.Web.Services.Protocols.MimeFormatter>został już utworzony.</xref:System.Web.Services.Protocols.MimeFormatter> W czasie przetwarzania żądania lub odpowiedzi inicjator jest przekazywany do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody inne wystąpienie klasy pochodnej.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Ostatni obiekt wykonuje rzeczywiste odczytu lub zapisu."
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Tablica where, dla każdej metody obiektu odpowiedni indeks w tablicy inicjatora zwracane są uzyskiwane metody sieci Web."
    return:
      type: System.Object[]
      description: "Tablica obiektów inicjatora odpowiadający tablicy wejściowej z definicjami metod."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Zwraca tablicę inicjatora obiektów odpowiadających tablicy wejściowej definicjami metod dla określonej klasy pochodne <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>metody.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Statyczne GetInitializersmethod powoduje wywołanie <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>metoda należąca do klasy pochodnej, określony przez `type` parametru.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "Typ pochodny <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, dla których inicjatory są uzyskiwane."
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Tablica typu <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> , który określa metody sieci Web, dla których są uzyskiwane inicjatory."
    return:
      type: System.Object[]
      description: "Tablica obiektów inicjatora odpowiadający tablicy wejściowej definicji metody dla określonej klasy pochodne <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "W przypadku przesłonięcia w klasie pochodnej inicjuje wystąpienie."
  remarks: "Metoda inicjowania jest wywoływane podczas przetwarzania żądania lub odpowiedzi; jednak inicjatora są uzyskiwane przez wywołanie metody <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>metody w innym wystąpieniu podczas inicjowania klienta lub usługi.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "Obiekt typu odpowiedniego do określonej klasy, która implementuje metody."
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
