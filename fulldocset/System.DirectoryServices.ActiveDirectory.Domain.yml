### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.Domain
  id: Domain
  children:
  - System.DirectoryServices.ActiveDirectory.Domain.Children
  - System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  - System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  - System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Domain.Forest
  - System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  - System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  - System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  - System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.Parent
  - System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  - System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  - System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  langs:
  - csharp
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
  type: Class
  summary: "Klasa domeny reprezentuje domeny usługi Active Directory."
  syntax:
    content: 'public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children
  id: Children
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Children
  nameWithType: Domain.Children
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera domeny, które są podrzędne tej domeny."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainCollection&quot;> </xref> Obiekt, który zawiera domen podrzędnych."
  overload: System.DirectoryServices.ActiveDirectory.Domain.Children*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Tworzy lokalnego po stronie relacji zaufania z określonej domeny."
  remarks: "Ta metoda tworzy jednej stronie relacji zaufania. Relacja zaufania nie zostanie nawiązane, do czasu utworzenia obu stron relacji zaufania.       `trustPassword` Parametr kojarzy hasła z utworzonych relacji zaufania. Po utworzeniu strony relacji zaufania podano to samo hasło, a następnie powiązanych ze sobą dwa zaufania lokalnego.       Aby programowo utworzyć obu stron relacji zaufania w wywołaniu metody pojedynczego, użyj <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName>metody.</xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny relacji zaufania tworzonych za pomocą."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> elementów członkowskich, które określa kierunek zaufania względem tej domeny."
    - id: trustPassword
      type: System.String
      description: "Hasło dla relacji zaufania. Zobacz uwagi poniżej."
  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Istnieje już relacja zaufania."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>lub <code>trustPassword</code> jest pusta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>trustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>nie jest prawidłową <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> wartości."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: CreateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Tworzy obu stron relacji zaufania z określonej domeny."
  remarks: "Ta metoda tworzy obu stron relacji zaufania z wywołaniem pojedynczej metody. <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>Metoda służy do tworzenia tylko po jednej stronie relacji zaufania.</xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiekt, który reprezentuje domenę, w której utworzono relacji zaufania z."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> elementów członkowskich, które określa kierunek zaufania względem tej domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Istnieje już relacja zaufania."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>nie jest prawidłową <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> wartości."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  id: DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Usuwa lokalnego po stronie relacji zaufania."
  remarks: "Po usunięciu jednej stronie relacji zaufania, że istnieje relacja zaufania dłużej.       Aby usunąć obu stron relacji zaufania z jedną metodę wywołania, użyj <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName>metody.</xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteLocalSideOfTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, która istnieje relacja zaufania z domeną."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnych zależności relacji zaufania z <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> określonym przez <code> targetDomainName </code> parametru."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DeleteTrustRelationship(Domain)
  nameWithType: Domain.DeleteTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Usuwa obu stron relacji zaufania."
  remarks: "Aby usunąć tylko po jednej stronie relacji zaufania, użyj <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>metody.</xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiekt, który reprezentuje domenę, w której istnieje relacja zaufania."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnych zależności zaufania z określonym <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  id: DomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainControllers
  nameWithType: Domain.DomainControllers
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera kontrolerów domeny w tej domenie."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> obiekt, który zawiera kontrolery domeny w tej domenie."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  id: DomainMode
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainMode
  nameWithType: Domain.DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera tryb, w którym działają w tej domenie."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainMode
      description: "Jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref> wartości, które wskazuje tryb, w którym działają w tej domenie."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  id: DomainModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera określony poziom ta domena działa w trybie."
  syntax:
    content: public int DomainModeLevel { get; }
    return:
      type: System.Int32
      description: "Poziom trybu domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  id: FindAllDiscoverableDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDiscoverableDomainControllers()
  nameWithType: Domain.FindAllDiscoverableDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Znajduje wszystkie kontrolery domeny wykrywalny w tej domenie."
  remarks: "Kontrolery domeny wykrywalny można znaleźć badając rekordy SRV systemu DNS. Tylko te kontrolery domeny, które rejestrują ogólny, bez określenia witryny, rekord SRV kontroler domeny zostanie zwrócony przez tę metodę."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> zawierający obiektów kontrolera domeny, które zostały znalezione przez tę metodę."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  id: FindAllDiscoverableDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDiscoverableDomainControllers(String)
  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Znajduje wszystkie kontrolery domeny wykrywalny w tej domenie, które również znajdują się w określonej lokacji."
  remarks: "Kontrolery domeny wykrywalny można znaleźć badając rekordy SRV systemu DNS.  Jeśli kontroler domeny nie rejestruje rekord SRV dla określonej lokacji, go nie zwracaną przez tę metodę, nawet jeśli kontroler domeny jest fizycznie zlokalizowany w danej lokacji.       Wszystkie kontrolery domeny, które rejestrują rekordów SRV dla określonej lokacji zostaną zwrócone przez tę metodę, nawet jeśli nie są fizycznie znajduje się w tej lokacji."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Nazwa witryny, aby wyszukać kontrolerów domeny."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> zawierający obiektów kontrolera domeny, które zostały znalezione przez tę metodę."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  id: FindAllDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDomainControllers()
  nameWithType: Domain.FindAllDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Znajduje wszystkie kontrolery domeny w tej domenie."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> zawierający obiektów kontrolera domeny, które zostały znalezione przez tę metodę."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  id: FindAllDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDomainControllers(String)
  nameWithType: Domain.FindAllDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Znajduje wszystkie kontrolery domeny w tej domenie, które również znajdują się w określonej lokacji."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Nazwa witryny, aby wyszukać kontrolerów domeny."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> zawierający obiektów kontrolera domeny, które zostały znalezione przez tę metodę."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  id: FindDomainController
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController()
  nameWithType: Domain.FindDomainController()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Umożliwia znalezienie dowolnego kontrolera domeny w tej domenie."
  remarks: "Ta metoda umożliwia znalezienie dowolnego kontrolera domeny w domenie. Nie ma żadnej gwarancji, że będzie można znaleźć tego samego kontrolera domeny przez inne wywołanie tej metody."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> reprezentujący kontrolera domeny, która znajduje się tą metodą."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie można zlokalizować kontrolera domeny."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(LocatorOptions)
  nameWithType: Domain.FindDomainController(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Umożliwia znalezienie kontrolera domeny w tej domenie, która spełnia określone kryteria."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "Kombinacja co najmniej jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> elementów członkowskich, które definiuje typ kontrolera domeny można znaleźć."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> reprezentujący kontrolera domeny, która znajduje się tą metodą."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie można zlokalizować kontrolera domeny."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> flag </code> Parametrów zawiera nieprawidłową wartość."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  id: FindDomainController(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(String)
  nameWithType: Domain.FindDomainController(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Wyszukuje kontrolera domeny w tej domenie i w określonej lokacji."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Nazwa witryny, aby wyszukać kontrolera domeny."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> obiekt, który reprezentuje kontroler domeny, który znajduje się tą metodą."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie można zlokalizować kontrolera domeny."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(String,LocatorOptions)
  nameWithType: Domain.FindDomainController(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Wyszukuje kontrolera domeny w tej domenie i w określonej lokacji, która spełnia określone kryteria."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: siteName
      type: System.String
      description: "Nazwa witryny, aby wyszukać kontrolera domeny."
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "Kombinacja co najmniej jeden z <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> elementów członkowskich, które definiuje typ kontrolera domeny można znaleźć."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> obiekt, który reprezentuje kontroler domeny, który znajduje się tą metodą."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie można zlokalizować kontrolera domeny."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ten wyjątek zostanie przeprowadzona dla żadnego z następujących powodów.      - <code> siteName </code> jest pustym ciągiem.      - <code> flag </code> zawiera nieprawidłową wartość."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest
  id: Forest
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Forest
  nameWithType: Domain.Forest
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera lasu, który ta domena jest elementem członkowskim."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> obiekt, który reprezentuje lasu, który ta domena jest elementem członkowskim."
  overload: System.DirectoryServices.ActiveDirectory.Domain.Forest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  id: GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetAllTrustRelationships()
  nameWithType: Domain.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera wszystkie relacje zaufania dla tej domeny."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection&quot;> </xref> obiektu, który zawiera wszystkie relacje zaufania dla tej domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  id: GetComputerDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetComputerDomain()
  nameWithType: Domain.GetComputerDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiekt, który reprezentuje domenę, do której jest przyłączany komputer lokalny."
  remarks: "Zwracana wartość metody GetComputerDomain jest <xref:System.DirectoryServices.ActiveDirectory.Domain>obiekt reprezentujący domeny, do której jest dołączony komputerze z uruchomioną aplikacją.</xref:System.DirectoryServices.ActiveDirectory.Domain>  Zwrócona wartość jest niezależna od poświadczeń domeny, w których aplikacja jest uruchomiona. Ta metoda pobiera domeny komputera niezależnie od tego, podane poświadczenia domeny zaufanej konta jest uruchamiana.  Aby pobrać <xref:System.DirectoryServices.ActiveDirectory.Domain>obiekt, który reprezentuje domeny odpowiadającego użytkownikowi skutkuje poświadczeń dla kontekstu zabezpieczeń, na którym uruchomiono aplikację, należy użyć <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A>metody zamiast tego.</xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> </xref:System.DirectoryServices.ActiveDirectory.Domain>"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiekt, który reprezentuje domenę, do której jest dołączony komputer lokalny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie można nawiązać połączenia z domeną."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  id: GetCurrentDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetCurrentDomain()
  nameWithType: Domain.GetCurrentDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiektu dla bieżących poświadczeń użytkownika dla kontekstu zabezpieczeń, w którym aplikacja jest uruchomiona."
  remarks: "Metoda GetCurrentDomain jest określana przez poświadczeń domeny, w których aplikacja jest uruchomiona.  Aby pobrać <xref:System.DirectoryServices.ActiveDirectory.Domain>obiekt reprezentujący domeny, do której komputer z uruchomionym aplikacji jest dołączony, niezależnie od poświadczeń skojarzonych z tej aplikacji, użyj <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>metody zamiast tego.</xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> </xref:System.DirectoryServices.ActiveDirectory.Domain>      ## Zobacz też<xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A></xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiekt, który reprezentuje domeny dla określonego użytkownika w celu poświadczeń dla kontekstu zabezpieczeń, w którym aplikacja jest uruchomiona."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie można nawiązać połączenia w bieżącym kontekście."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: Domain.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> obiekt, który reprezentuje domyślny kontekst nazewnictwa domeny."
  syntax:
    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> obiekt, który reprezentuje domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Bieżący obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetDomain(DirectoryContext)
  nameWithType: Domain.GetDomain(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiektu dla określonego kontekstu."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> Obiekt, który zawiera docelowy i poświadczenia, aby pobrać obiekt. Typ kontekstu musi być serwerem domeny lub katalogu."
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> Obiekt, który reprezentuje domeny dla określonego kontekstu."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Połączenie do wartości określonej w <code> context </code> nie było możliwe."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>nie jest prawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  id: GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Określa typ uwierzytelniania dla ruchu przychodzącego zaufania."
  syntax:
    content: public bool GetSelectiveAuthenticationStatus (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, która z zaufaniem istnieje."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku uwierzytelniania zaufania selektywnego; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> w przypadku uwierzytelniania na poziomie domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnych zależności relacji zaufania z <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> określonym przez <code> targetForestName </code> parametru."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Nie można wywołać LsaQueryTrustedDomainInfoByName. Aby uzyskać więcej informacji, zobacz temat [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) w bibliotece MSDN pod [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library)."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Bieżący obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  id: GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetSidFilteringStatus(String)
  nameWithType: Domain.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Określa identyfikator SID filtrowania stanu zaufania."
  syntax:
    content: public bool GetSidFilteringStatus (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, która istnieje z relacją zaufania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli włączono filtrowanie SID; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnych zależności relacji zaufania z <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> określonym przez <code> targetForestName </code> parametru."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Bieżący obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  id: GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetTrustRelationship(String)
  nameWithType: Domain.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera relacji zaufania między tej domeny i dla określonej domeny."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, z którym istnieje relacja zaufania."
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation&quot;> </xref> obiekt, który reprezentuje relacji zaufania między tej domeny i dla określonej domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnych zależności relacji zaufania z <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> określonym przez <code> targetForestName </code> parametru."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Bieżący obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  id: InfrastructureRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera właściciela roli infrastruktury dla tej domeny."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> Obiekt, który reprezentuje kontroler domeny, który pełni rolę właściciela infrastruktury."
  overload: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent
  id: Parent
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Parent
  nameWithType: Domain.Parent
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera domeny nadrzędnej tej domeny."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> Obiekt, który reprezentuje domeny nadrzędnej tej domeny. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Jeśli ta domena nie ma żadnych domeny nadrzędnej."
  overload: System.DirectoryServices.ActiveDirectory.Domain.Parent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  id: PdcRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> obiektu, w którym jest przechowywana na podstawowym kontrolerze domeny (PDC) dla tej domeny."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> Obiekt, który reprezentuje kontroler domeny, który pełni rolę emulatora podstawowego kontrolera domeny dla tej domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  id: RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RaiseDomainFunctionality(DomainMode)
  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Zgłasza tryb działania dla domeny."
  remarks: "<xref:System.DirectoryServices.ActiveDirectory.DomainMode>Wartość może być uruchamiany, ale nie obniżony.</xref:System.DirectoryServices.ActiveDirectory.DomainMode> Oznacza to, że podnoszenie poziomu funkcjonalności domeny jest nieodwracalna i decyzji w tym celu należy uważnie wprowadzać.       Aby uzyskać więcej informacji na temat trybów operacyjnych domeny, zobacz [funkcjonalności domeny i lasu](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).       W poniższej tabeli opisano prawidłowe wartości dla `domainMode` oparte na bieżącym trybie pracy domeny.      | Bieżący tryb | Tryb może wzrosnąć do |   |------------------|---------------------------|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| <xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode>|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| <xref:System.DirectoryServices.ActiveDirectory.DomainMode>|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| <xref:System.DirectoryServices.ActiveDirectory.DomainMode>|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| None|</xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode>"
  syntax:
    content: public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);
    parameters:
    - id: domainMode
      type: System.DirectoryServices.ActiveDirectory.DomainMode
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref> Wartość wyliczenia, która określa nowy poziom operacji dla domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "W oparciu o bieżący tryb działania domeny, wartość określona dla <code> domainMode </code> jest nieprawidłowy."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>domainMode</code>nie jest prawidłową <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref> wartości wyliczenia."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  id: RaiseDomainFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RaiseDomainFunctionalityLevel(Int32)
  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Podnosi poziom funkcjonalności domeny."
  syntax:
    content: public void RaiseDomainFunctionalityLevel (int domainMode);
    parameters:
    - id: domainMode
      type: System.Int32
      description: "Wartość reprezentującą nowy poziom."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RepairTrustRelationship(Domain)
  nameWithType: Domain.RepairTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Naprawia relacji zaufania."
  remarks: "Ta metoda naprawia zaufanie resetując bezpiecznego kanału dla zaufania. W przypadku niepowodzenia operacji można zresetować bezpiecznego kanału, również go spowoduje zresetowanie hasła zaufania."
  syntax:
    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> Obiekt, który reprezentuje domeny, z którym istnieje relacja zaufania."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnych zależności relacji zaufania z <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> określonym przez <code> targetDomain </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy lub źródłowy jest zajęty lub niedostępny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  id: RidRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Pobiera urządzeniem pełniącym rolę wzorca RID dla tej domeny."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> Obiekt, który reprezentuje kontroler domeny, który pełni rolę głównego identyfikatora względnego (RID) dla tej domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Włącza lub wyłącza selektywnego uwierzytelniania zaufania dla ruchu przychodzącego."
  syntax:
    content: public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, z którym istnieje zaufanie przychodzące."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli jest włączone uwierzytelnianie selektywne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnych zależności zaufania z kontrolerem domeny, który jest określony przez <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Bieżący obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  id: SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Ustawia identyfikator SID filtrowania stanu dla określonej domeny."
  syntax:
    content: public void SetSidFilteringStatus (string targetDomainName, bool enable);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, z którym istnieje relacja zaufania."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli filtrowanie SID musi być włączony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnej zależności zaufania z domeną, który jest określony przez <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Bieżący obiekt został usunięty."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aktualizuje hasło dla lokalnego po stronie relacji zaufania."
  remarks: "Aby ponownie ustanowić zaufanie, należy zaktualizować obu stron relacji zaufania z tego samego hasła."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, z którym istnieje relacja zaufania."
    - id: newTrustPassword
      type: System.String
      description: "Nowe hasło dla relacji zaufania."
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnej zależności zaufania z domeną, który jest określony przez <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>lub <code>newTrustPassword</code> jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>newTrustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aktualizuje kierunek hasło i zaufania dla lokalnej strony relacji zaufania."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, z którym istnieje relacja zaufania."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> Wartość dla nowej kierunek zaufania dla relacji zaufania."
    - id: newTrustPassword
      type: System.String
      description: "Nowe hasło dla relacji zaufania."
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnej zależności zaufania z domeną, który jest określony przez <code> targetDomainName </code> parametru."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>lub <code>newTrustPassword</code> jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>newTrustPassword</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>nie jest prawidłową <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> wartości."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aktualizuje kierunek zaufania dla istniejącej relacji zaufania. Instrukcje zaufania są aktualizowane po obu stronach relacji zaufania."
  syntax:
    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> Obiekt, który reprezentuje domeny, z którym istnieje relacja zaufania."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> Wartość, która określa nowe kierunek zaufania dla relacji zaufania."
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnej zależności zaufania z domeną, który jest określony przez <code> targetDomain </code> parametru."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>nie jest prawidłową <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> wartości."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  id: VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Domain.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Sprawdza, czy wcześniej ustalonych zaufanie wychodzące z określonej domeny jest nieprawidłowy."
  remarks: "Ta metoda jest używana, aby sprawdzić, w pełni ustanowić relacji zaufania. Relacja zaufania nie zostanie nawiązane, do czasu utworzenia obu stron relacji zaufania."
  syntax:
    content: public void VerifyOutboundTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "Nazwa DNS domeny, z którym istnieje relacja zaufania."
  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnej zależności wychodzącego zaufania z domeną, który jest określony przez <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: VerifyTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Sprawdza, czy wcześniej ustalonych relacji zaufania z określonej domeny jest nieprawidłowy."
  remarks: "Ta metoda sprawdza pełni ustanowić relacji zaufania. Relacja zaufania nie zostanie nawiązane, do czasu utworzenia obu stron relacji zaufania."
  syntax:
    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> obiekt, który reprezentuje domeny, z którym istnieje relacja zaufania."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> wartość, która określa kierunek zaufania względem tej domeny."
  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Nie ma żadnej zależności zaufania z domeną, który jest określony przez <code> targetDomain </code> parametr lub do domeny docelowej nie ma kierunek zaufania, który jest określony przez <code> direction </code> parametru."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Wywołanie usługi katalogowej podstawowej zwróciło błąd."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Serwer docelowy jest zajęty lub niedostępny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>nie jest prawidłową <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> wartości."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Obiekt został usunięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Określone konto nie ma uprawnień do wykonania tej operacji."
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectExistsException
  nameWithType: ActiveDirectoryObjectExistsException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Children
  nameWithType: Domain.Children
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children
- uid: System.DirectoryServices.ActiveDirectory.DomainCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainCollection
  nameWithType: DomainCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.TrustDirection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustDirection
  nameWithType: TrustDirection
  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteTrustRelationship(Domain)
  nameWithType: Domain.DeleteTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainControllers
  nameWithType: Domain.DomainControllers
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainControllerCollection
  nameWithType: DomainControllerCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainMode
  nameWithType: Domain.DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.DomainMode
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainMode
  nameWithType: DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers()
  nameWithType: Domain.FindAllDiscoverableDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers(String)
  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers()
  nameWithType: Domain.FindAllDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers(String)
  nameWithType: Domain.FindAllDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController()
  nameWithType: Domain.FindDomainController()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(LocatorOptions)
  nameWithType: Domain.FindDomainController(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(String)
  nameWithType: Domain.FindDomainController(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(String,LocatorOptions)
  nameWithType: Domain.FindDomainController(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Forest
  nameWithType: Domain.Forest
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetAllTrustRelationships()
  nameWithType: Domain.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformationCollection
  nameWithType: TrustRelationshipInformationCollection
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetComputerDomain()
  nameWithType: Domain.GetComputerDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetCurrentDomain()
  nameWithType: Domain.GetCurrentDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: Domain.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDomain(DirectoryContext)
  nameWithType: Domain.GetDomain(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSidFilteringStatus(String)
  nameWithType: Domain.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetTrustRelationship(String)
  nameWithType: Domain.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformation
  nameWithType: TrustRelationshipInformation
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Parent
  nameWithType: Domain.Parent
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionality(DomainMode)
  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionalityLevel(Int32)
  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RepairTrustRelationship(Domain)
  nameWithType: Domain.RepairTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Domain.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Children
  nameWithType: Domain.Children
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateLocalSideOfTrustRelationship
  nameWithType: Domain.CreateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateTrustRelationship
  nameWithType: Domain.CreateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteTrustRelationship
  nameWithType: Domain.DeleteTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainControllers
  nameWithType: Domain.DomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainMode
  nameWithType: Domain.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers
  nameWithType: Domain.FindAllDiscoverableDomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers
  nameWithType: Domain.FindAllDomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController
  nameWithType: Domain.FindDomainController
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Forest
  nameWithType: Domain.Forest
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetAllTrustRelationships
  nameWithType: Domain.GetAllTrustRelationships
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetComputerDomain
  nameWithType: Domain.GetComputerDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetCurrentDomain
  nameWithType: Domain.GetCurrentDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: Domain.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDomain
  nameWithType: Domain.GetDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSelectiveAuthenticationStatus
  nameWithType: Domain.GetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSidFilteringStatus
  nameWithType: Domain.GetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetTrustRelationship
  nameWithType: Domain.GetTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Parent
  nameWithType: Domain.Parent
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionality
  nameWithType: Domain.RaiseDomainFunctionality
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionalityLevel
  nameWithType: Domain.RaiseDomainFunctionalityLevel
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RepairTrustRelationship
  nameWithType: Domain.RepairTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSelectiveAuthenticationStatus
  nameWithType: Domain.SetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSidFilteringStatus
  nameWithType: Domain.SetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateTrustRelationship
  nameWithType: Domain.UpdateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyOutboundTrustRelationship
  nameWithType: Domain.VerifyOutboundTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyTrustRelationship
  nameWithType: Domain.VerifyTrustRelationship
