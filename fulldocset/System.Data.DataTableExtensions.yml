### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableExtensions
  id: DataTableExtensions
  children:
  - System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  - System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  - System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  langs:
  - csharp
  name: DataTableExtensions
  nameWithType: DataTableExtensions
  fullName: System.Data.DataTableExtensions
  type: Class
  summary: "Definiuje metody rozszerzenia umożliwiające <xref href=&quot;System.Data.DataTable&quot;> </xref> klasy. DataTableExtensions jest klasie statycznej."
  syntax:
    content: public static class DataTableExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  id: AsDataView(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsDataView(DataTable)
  nameWithType: DataTableExtensions.AsDataView(DataTable)
  fullName: System.Data.DataTableExtensions.AsDataView(DataTable)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Tworzy i zwraca włączony LINQ <xref href=&quot;System.Data.DataView&quot;> </xref> obiektu."
  remarks: "<xref:System.Data.DataView>Włącza scenariusze wiązania danych [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] i mogą być tworzone z a typizowany lub nietypizowany <xref:System.Data.DataTable>, zapewniając domyślny widok tej tabeli.</xref:System.Data.DataTable></xref:System.Data.DataView> Filtrowanie i sortowanie można ustawić <xref:System.Data.DataView>Po utworzeniu z <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataView> <xref:System.Data.DataView>Jest następnie powiązany formantu interfejsu użytkownika, takie jak <xref:System.Windows.Forms.DataGrid>lub <xref:System.Windows.Forms.DataGridView>, zapewniając modelu danych proste powiązania.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGrid> </xref:System.Data.DataView>       Aby uzyskać dodatkowe informacje i przykłady, zobacz [tworzenia obiektu DataView](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.DataView> from the SalesOrderDetail table and sets it as the data source of a <xref:System.Windows.Forms.BindingSource> object, which acts as a proxy for a <xref:System.Windows.Forms.DataGridView> control:  \n  \n [!code-vb[DP DataView Samples#CreateLDVFromTable](~/add/codesnippet/visualbasic/DataViewSamplesVB/Form1.vb#createldvfromtable)]\n [!code-cs[DP DataView Samples#CreateLDVFromTable](~/add/codesnippet/csharp/DataViewSamples/Form1.cs#createldvfromtable)]"
  syntax:
    content: public static System.Data.DataView AsDataView (this System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Źródło <xref href=&quot;System.Data.DataTable&quot;> </xref> z którego obsługujące LINQ <xref href=&quot;System.Data.DataView&quot;> </xref> jest tworzony."
    return:
      type: System.Data.DataView
      description: "Włączone LINQ <xref href=&quot;System.Data.DataView&quot;> </xref> obiektu."
  overload: System.Data.DataTableExtensions.AsDataView*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  id: AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsDataView(EnumerableRowCollection<T>)
  nameWithType: DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  fullName: System.Data.DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static System.Data.DataView AsDataView<T> (this System.Data.EnumerableRowCollection<T> source) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection{T}
      description: "Do dodania."
    return:
      type: System.Data.DataView
      description: "Do dodania."
  overload: System.Data.DataTableExtensions.AsDataView<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  id: AsEnumerable(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsEnumerable(DataTable)
  nameWithType: DataTableExtensions.AsEnumerable(DataTable)
  fullName: System.Data.DataTableExtensions.AsEnumerable(DataTable)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Zwraca &lt;xref:System.Collections.Generic.IEnumerable%601&gt; obiektu, gdy parametr generyczny <code> T </code> jest <xref href=&quot;System.Data.DataRow&quot;> </xref>. Ten obiekt może być używana w [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] wyrażenie lub metoda zapytania."
  remarks: "[!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)]zapytania działają w źródeł danych, które implementują <xref:System.Collections.Generic.IEnumerable%601>interfejsu lub <xref:System.Query.IQueryable%601>interfejsu.</xref:System.Query.IQueryable%601> </xref:System.Collections.Generic.IEnumerable%601>  <xref:System.Data.DataTable>Klasa nie implementuje albo interfejsu, dlatego należy wywołać metodę AsEnumerable <xref:System.Data.DataTable>jako źródło w `From` klauzuli [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] zapytania.</xref:System.Data.DataTable> </xref:System.Data.DataTable> Możesz również uzyskać operatorów niestandardowych, specyficznego dla domeny, takich jak <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, zwracając <xref:System.Collections.Generic.IEnumerable%601>obiektu.</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Data.DataTableExtensions.CopyToDataTable%2A>       Obiekt wyliczalny, zwracany przez metodę AsEnumerable trwale jest powiązany, <xref:System.Data.DataTable>który wyprodukowanych go.</xref:System.Data.DataTable> Wiele wywołań będzie metody AsEnumerable zwracany wielu niezależnych kolejność obiekty, które są powiązane z źródła <xref:System.Data.DataTable>.</xref:System.Data.DataTable>"
  example:
  - "In the following sample, the `DisplayProducts` method receives a DataTable that contains a DataColumn named `ProductName`, extracts the `ProductName` values and then prints the values.  \n  \n [!code-cs[system.data.DataTableExtensions.AsEnumerable#1](~/add/codesnippet/csharp/m-system.data.datatablee_0_1.cs)]\n [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/add/codesnippet/visualbasic/m-system.data.datatablee_0_1.vb)]"
  syntax:
    content: public static System.Data.EnumerableRowCollection<System.Data.DataRow> AsEnumerable (this System.Data.DataTable source);
    parameters:
    - id: source
      type: System.Data.DataTable
      description: "Źródło <xref href=&quot;System.Data.DataTable&quot;> </xref> być wyliczalny."
    return:
      type: System.Data.EnumerableRowCollection{System.Data.DataRow}
      description: "&lt;Xref:System.Collections.Generic.IEnumerable%601&gt; obiektu, gdy parametr generyczny <code> T </code> jest <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataTableExtensions.AsEnumerable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The source <xref href=&quot;System.Data.DataTable&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static System.Data.DataTable CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "Do dodania."
    return:
      type: System.Data.DataTable
      description: "Do dodania."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "Do dodania."
    - id: table
      type: System.Data.DataTable
      description: "Do dodania."
    - id: options
      type: System.Data.LoadOption
      description: "Do dodania."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "Do dodania."
    - id: table
      type: System.Data.DataTable
      description: "Do dodania."
    - id: options
      type: System.Data.LoadOption
      description: "Do dodania."
    - id: errorHandler
      type: System.Data.FillErrorEventHandler
      description: "Do dodania."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView(DataTable)
  nameWithType: DataTableExtensions.AsDataView(DataTable)
  fullName: System.Data.DataTableExtensions.AsDataView(DataTable)
- uid: System.Data.DataView
  parent: System.Data
  isExternal: false
  name: DataView
  nameWithType: DataView
  fullName: System.Data.DataView
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView(EnumerableRowCollection<T>)
  nameWithType: DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  fullName: System.Data.DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
- uid: System.Data.EnumerableRowCollection{T}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<T>
  nameWithType: EnumerableRowCollection<T>
  fullName: System.Data.EnumerableRowCollection<T>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsEnumerable(DataTable)
  nameWithType: DataTableExtensions.AsEnumerable(DataTable)
  fullName: System.Data.DataTableExtensions.AsEnumerable(DataTable)
- uid: System.Data.EnumerableRowCollection{System.Data.DataRow}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<DataRow>
  nameWithType: EnumerableRowCollection<DataRow>
  fullName: System.Data.EnumerableRowCollection<System.Data.DataRow>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<System.Data.DataRow>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.DataTableExtensions.AsDataView*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView
  nameWithType: DataTableExtensions.AsDataView
- uid: System.Data.DataTableExtensions.AsDataView<T>*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView<T>
  nameWithType: DataTableExtensions.AsDataView<T>
- uid: System.Data.DataTableExtensions.AsEnumerable*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsEnumerable
  nameWithType: DataTableExtensions.AsEnumerable
- uid: System.Data.DataTableExtensions.CopyToDataTable<T>*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>
  nameWithType: DataTableExtensions.CopyToDataTable<T>
