### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaSet
  id: XmlSchemaSet
  children:
  - System.Xml.Schema.XmlSchemaSet.#ctor
  - System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaSet.CompilationSettings
  - System.Xml.Schema.XmlSchemaSet.Compile
  - System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  - System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  - System.Xml.Schema.XmlSchemaSet.Count
  - System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  - System.Xml.Schema.XmlSchemaSet.GlobalElements
  - System.Xml.Schema.XmlSchemaSet.GlobalTypes
  - System.Xml.Schema.XmlSchemaSet.IsCompiled
  - System.Xml.Schema.XmlSchemaSet.NameTable
  - System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Schemas
  - System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  - System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaSet.XmlResolver
  langs:
  - csharp
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
  type: Class
  summary: "Zawiera pamięci podręcznej schematu XML definition language (XSD) schematów."
  remarks: "> [!IMPORTANT]> — Nie używaj schematów z nieznaną lub niezaufaną źródeł lub lokalizacji. W ten sposób spowoduje naruszenie zabezpieczeń kodu.   >-Schematów XML (w tym wbudowane schematy) są z założenia podatne na ataki; nie akceptuje tych postanowień w scenariuszach niezaufanych.   >-Schematu komunikatów o błędach i wyjątków może spowodować ujawnienie poufnych informacji o modelu zawartości lub identyfikator URI ścieżki do pliku schematu. Nie można więc ujawnić te informacje dotyczące obiektów wywołujących niezaufanych.   > — Zagadnienia dotyczące zabezpieczeń są przedstawione w sekcji &quot;Zagadnienia dotyczące zabezpieczeń&quot;.       Zestaw XmlSchemaSet jest pamięci podręcznej lub biblioteka przechowywania schematu XML definition language (XSD) schematów. Zestaw XmlSchemaSet zwiększa wydajność, buforując schematów w pamięci zamiast dostępu do nich z pliku lub adres URL. Każdego schematu jest identyfikowany przez identyfikator URI przestrzeni nazw i lokalizacji, która została określona, jeśli schemat został dodany do zestawu. Możesz użyć <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>na potrzeby sprawdzania poprawności danych należy używać właściwość do przypisania obiekcie XmlSchemaSet modułu odczytującego XML.</xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>      ## Zagadnienia dotyczące zabezpieczeń — nie używaj schematów z nieznaną lub niezaufaną źródeł. W ten sposób spowoduje naruszenie zabezpieczeń kodu. Zewnętrzne przestrzeni nazw lub lokalizacji, do której odwołuje się uwzględnić, importowania i ponowne definiowanie elementów schematu są rozwiązywane względem podstawowy identyfikator URI schematu, która obejmuje lub importowane. Na przykład, jeśli podstawowy identyfikator URI, włączając lub importowanie schematu jest pusta lub `null`, lokalizacji zewnętrznych zostały rozwiązane względem bieżącego katalogu. <xref:System.Xml.XmlUrlResolver>Klasy jest używany do rozpoznawania schematów zewnętrznych domyślnie.</xref:System.Xml.XmlUrlResolver> Aby wyłączyć rozpoznawanie include, importu i ponownie zdefiniować elementów schematu, ustaw <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>właściwości `null`.</xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>      Używa klasy XmlSchemaSet <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>klasę do analizowania i dopasowanie wyrażeń regularnych w schemacie XML.</xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> Sprawdzanie poprawności zestawów reguł wzorca za pomocą wyrażeń regularnych w schemacie XML mogą powodować zwiększone użycie procesora CPU i należy unikać w scenariuszach wysokiej dostępności.      -Wyjątków zgłoszonych w wyniku przy użyciu klasy XmlSchemaSet, takich jak <xref:System.Xml.Schema.XmlSchemaException>klasy mogą zawierać poufne informacje, które nie powinny zostać ujawnione w scenariuszach niezaufane.</xref:System.Xml.Schema.XmlSchemaException> Na przykład <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>Właściwość <xref:System.Xml.Schema.XmlSchemaException>zwraca identyfikator URI ścieżkę do pliku schematu, który spowodował wyjątek.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>Właściwości nie powinny zostać ujawnione w scenariuszach niezaufane.</xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Wyjątki powinny poprawnie obsługiwane tak, aby tymi informacjami poufnymi nie jest uwidaczniana w scenariuszach niezaufanych."
  example:
  - "The following example validates an XML file using schemas stored in the XmlSchemaSet. The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the XmlSchemaSet to use for validation.  \n  \n [!code-cpp[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_0_1.cpp)]\n [!code-cs[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_0_1.vb)]  \n  \n## Input  \n The sample uses the following two input files.  \n  \n **booksSchemaFail.xml:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_2.xml)]  \n  \n **books.xsd:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_3.xsd)]  \n  \n## Output  \n Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'. Expected 'title' in namespace 'urn:bookstore-schema'.  \n  \n Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'. Expected 'first-name' in namespace 'urn:bookstore-schema'."
  syntax:
    content: public class XmlSchemaSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> klasy."
  syntax:
    content: public XmlSchemaSet ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> z określonym <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable> — klasa"
  syntax:
    content: public XmlSchemaSet (System.Xml.XmlNameTable nameTable);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>Obiekt ma być używany.</xref:System.Xml.XmlNameTable>"
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.XmlNameTable>Przekazano obiekt jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlNameTable>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  id: Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Dodaje dany <xref:System.Xml.Schema.XmlSchema>do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  remarks: "Jeśli <xref:System.Xml.Schema.XmlSchema>obiekt już istnieje w <xref:System.Xml.Schema.XmlSchemaSet>, nie działają, metody Add.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchema>       Funkcjonalność ta metoda jest identyczna ze <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metody.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiekt do dodania do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiektu, jeśli schemat jest nieprawidłowy.</xref:System.Xml.Schema.XmlSchema> Jeśli schemat nie jest prawidłowy oraz <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> zostanie określona, przyjmowana <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> jest zwracany i weryfikacji odpowiednie zdarzenie jest wywoływane. W przeciwnym razie <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> jest generowany."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.Schema.XmlSchema>Przekazano obiekt jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  id: Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Dodaje wszystkie schematu XML definition language (XSD) schematów w danym <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Aby można było dodać schematu do <xref:System.Xml.Schema.XmlSchemaSet>, musi on pomyślnie zostanie wstępnie przetworzony.</xref:System.Xml.Schema.XmlSchemaSet> Przetwarzanie wstępne wykonuje następujące zadania podstawowe.      1.  Schemat jest sprawdzany pod kątem strukturalnych ważności, zgodnie z regułami schematu W3C XML, ale schematu nie jest w pełni zweryfikowana.      2.  Odwołania do składników schematu wewnętrznych i zewnętrznych zostały rozwiązane. Zaimportowanych lub dołączone schematów, które zostały pobrane pomyślnie, również są dodawane do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importowane schematy są dodawane jako osobne <xref:System.Xml.Schema.XmlSchema>obiekty i schematy uwzględnione są wprowadzane część tym <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Jeśli <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>Właściwość <xref:System.Xml.Schema.XmlSchemaSet>do dodania jest `true`, wszystkich schematów w <xref:System.Xml.Schema.XmlSchemaSet>do dodania zostaną dodane do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Jeśli <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>Właściwość <xref:System.Xml.Schema.XmlSchemaSet>do dodania jest `false`, wszystkich schematów dodane jest wstępnie przetworzony przed dodaniem.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Ewentualne schematów w nowo dodanym <xref:System.Xml.Schema.XmlSchemaSet>zakończy się niepowodzeniem, który zostanie wstępnie przetworzony, schematy nie są dodawane; zamiast tego <xref:System.Xml.Schema.XmlSchemaException>jest generowany.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet> W związku z tym w poniższym przykładzie dwa kodu nie są równoważne.      ```vb#   &quot; First example   schemaSet.Add(schemaSet1)      &quot; Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```      ```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```W poprzednich przykładach dwóch kodu nie są równoważne. W pierwszym przykładzie, jeśli istnieje nieprawidłowy schemat `schemaSet1` i jego <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>właściwość jest ustawiona na `false`, schematy nie są dodawane do `schemaSet`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> W drugim przykładzie liczba schematów można dodać do `schemaSet` przed napotkano nieprawidłowy schemat i jest zgłaszany wyjątek."
  example:
  - "The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the Add method.  \n  \n```vb#  \nDim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet2.Add(schemaSet1)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet1 = new XmlSchemaSet();  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchemaSet schemaSet2 = new XmlSchemaSet();  \nschemaSet2.Add(schemaSet1);  \n```"
  syntax:
    content: public void Add (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Obiektu."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Przekazano obiekt jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Dodaje schematu (XSD) języka definicji schematu XML na adres URL, aby określić <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Aby można było dodać schematu do <xref:System.Xml.Schema.XmlSchemaSet>, musi on pomyślnie zostanie wstępnie przetworzony.</xref:System.Xml.Schema.XmlSchemaSet> Przetwarzanie wstępne wykonuje następujące zadania podstawowe.      1.  Schemat jest sprawdzany pod kątem strukturalnych ważności, zgodnie z regułami schematu W3C XML, ale schematu nie jest w pełni zweryfikowana.      2.  Odwołania do składników schematu wewnętrznych i zewnętrznych zostały rozwiązane. Zaimportowanych lub dołączone schematów, które zostały pobrane pomyślnie, również są dodawane do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importowane schematy są dodawane jako osobne <xref:System.Xml.Schema.XmlSchema>obiekty i schematy uwzględnione są wprowadzane część tym <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę podczas korzystania z metody Add.      — Dodawanie schematu <xref:System.Xml.Schema.XmlSchemaSet>o takim samym docelowych przestrzeni nazw i schemat adresu URL lokalizacji jako już zawartych w schemacie <xref:System.Xml.Schema.XmlSchemaSet>zwróci oryginalnego obiektu schematu.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      -Gdy nowy schemat został pomyślnie dodany do <xref:System.Xml.Schema.XmlSchemaSet>, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>Właściwość <xref:System.Xml.Schema.XmlSchemaSet>ustawiono `false`.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>      -Include lub importowania elementów w schematu XML są rozwiązywane po wywołaniu metody Add. Rozpoznanie obejmują i zaimportować elementy powoduje ostrzeżenie walidacji schematu i jeśli nie <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>został określony dla <xref:System.Xml.Schema.XmlSchemaSet>obiektu, to ostrzeżenie nie będzie raportowana.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>      — Jeśli schemat o tej samej docelowy obszar nazw jako schematu, która już istnieje w <xref:System.Xml.Schema.XmlSchemaSet>jest dodawany do <xref:System.Xml.Schema.XmlSchemaSet>, są dodawane zarówno schematów.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>          > [!NOTE] > To zachowanie różni się od przestarzałe <xref:System.Xml.Schema.XmlSchemaCollection>obiektu.</xref:System.Xml.Schema.XmlSchemaCollection>      -Dodaj metody <xref:System.Xml.Schema.XmlSchemaSet>ma możliwość używania docelową przestrzeń nazw zdefiniowana w schemacie, bez konieczności docelowego obszaru nazw można określić jako parametru, gdy wywoływana jest metoda Add.</xref:System.Xml.Schema.XmlSchemaSet> Określanie `null` w `targetNamespace` powoduje, że parametr metody Add <xref:System.Xml.Schema.XmlSchemaSet>do użycia docelową przestrzeń nazw zdefiniowana w schemacie, jak pokazano w poniższym przykładzie kodu.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, &quot;books.xsd&quot;)      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;)       schema.Write(Console.Out)   Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;books.xsd&quot;);      foreach(XmlSchema schema in schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;))   {       schema.Write(Console.Out);   }   ```W powyższym przykładzie kodu `null` jest określony jako `targetNamespace` parametr metody Add. W związku z tym `targetNamespace` zdefiniowane w books.xml plik jest używany. W takim przypadku wynikiem wywołania metody Add może być taki sam, http://www.contoso.com/books, jakby określono jako `targetNamespace` parametru.      -Schemat XML W3C umożliwia schematów bez docelowej przestrzeni nazw do uwzględnienia w schematach z docelową przestrzeń nazw zdefiniowana. W takim przypadku schemat bez docelową przestrzeń nazw zdefiniowana jest przekształcić na docelowy obszar nazw schematu uwzględniającego. Dołączonego schematu jest traktowana tak, jakby zawierał tego docelową przestrzeń nazw zdefiniowana. Podobnie, schematów bez docelowego obszaru nazw można dodać do <xref:System.Xml.Schema.XmlSchemaSet>i przekształcić na docelową przestrzeń nazw określona przez metodę Add, jak pokazano w poniższym przykładzie.</xref:System.Xml.Schema.XmlSchemaSet>      ```   <xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>       <xs:element name=&quot;A&quot; type=&quot;xs:string&quot; />   </xs:schema>   ```Jeśli powyższego schematu jest dodawany do <xref:System.Xml.Schema.XmlSchemaSet>z docelowej przestrzeni nazw http://www.contoso.com/new/targetnamespace (jak pokazano w poniższym kodzie), jest traktowana tak, jakby była docelowej przestrzeni nazw, zadeklarowanej w schemacie `http://www.contoso.com/new/targetnamespace`.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;)      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;);   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```"
  example:
  - "The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n```  \n  \n The example uses the `books.xsd` file as input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_3_1.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` właściwości, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> do używania `targetNamespace` określonej w schemacie."
    - id: schemaUri
      type: System.String
      description: "Adres URL, który określa schemat do załadowania."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiektu, jeśli schemat jest nieprawidłowy.</xref:System.Xml.Schema.XmlSchema> Jeśli schemat nie jest prawidłowy oraz <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> zostanie określona, przyjmowana <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> jest zwracany i weryfikacji odpowiednie zdarzenie jest wywoływane. W przeciwnym razie <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> jest generowany."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres URL przekazany jako parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub <xref:System.String.Empty>.</xref:System.String.Empty>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  id: Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Dodaje schematu języka (XSD) definicja schematu XML zawartych w <xref:System.Xml.XmlReader>do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Aby można było dodać schematu do <xref:System.Xml.Schema.XmlSchemaSet>, musi on pomyślnie zostanie wstępnie przetworzony.</xref:System.Xml.Schema.XmlSchemaSet> Przetwarzanie wstępne wykonuje następujące zadania podstawowe.      1.  Schemat jest sprawdzany pod kątem strukturalnych ważności, zgodnie z regułami schematu W3C XML, ale schematu nie jest w pełni zweryfikowana.      2.  Odwołania do składników schematu wewnętrznych i zewnętrznych zostały rozwiązane. Zaimportowanych lub dołączone schematów, które zostały pobrane pomyślnie, również są dodawane do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importowane schematy są dodawane jako osobne <xref:System.Xml.Schema.XmlSchema>obiekty i schematy uwzględnione są wprowadzane część tym <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę podczas korzystania z metody Add.      — Pomyślnie pobrał schematów, zaimportować lub uwzględnionych schematów zawartych w <xref:System.Xml.XmlReader>również są dodawane do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader>      -Jeśli <xref:System.Xml.XmlReader>nie znajduje się w elemencie głównym <xref:System.Xml.Schema.XmlSchemaException>jest generowany, jeśli bieżący element jest elementem.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.XmlReader> Jeśli bieżący element jest `xs:schema` elementu, przeczytaj dokument schematu do <xref:System.Xml.Schema.XmlSchemaSet>; w przeciwnym razie <xref:System.Xml.Schema.XmlSchemaException>jest generowany, gdy schemat jest nieprawidłowy.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet>      -Jeśli <xref:System.Xml.XmlReader>znajduje się za pośrednictwem sekwencję węzłów XML, tylko pierwszy węzeł w sekwencji zostanie dodany.</xref:System.Xml.XmlReader>      — Jeśli schemat został utworzony na podstawie <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>wywołania metody, wartość <xref:System.Xml.Schema.XmlSchemaValidationFlags>właściwość jest ignorowana, ponieważ wbudowanego schematu przetwarzania nie została zastosowana dla dokumentów schematu W3C XML.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>      - <xref:System.Xml.XmlResolver>Właściwość <xref:System.Xml.XmlReader>nie jest używany do rozpoznawania odwołania do przestrzeni nazw lub schematu lokalizacje w obejmują i zaimportować elementy.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlResolver> Zamiast tego <xref:System.Xml.XmlResolver>Właściwość <xref:System.Xml.Schema.XmlSchemaSet>jest używany.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      -Dodaj metody <xref:System.Xml.Schema.XmlSchemaSet>ma możliwość używania docelową przestrzeń nazw zdefiniowana w schemacie, bez konieczności docelowego obszaru nazw można określić jako parametru, gdy wywoływana jest metoda Add.</xref:System.Xml.Schema.XmlSchemaSet> Określanie `null` lub <xref:System.String.Empty?displayProperty=fullName>do dodawania metody powoduje, że <xref:System.Xml.Schema.XmlSchemaSet>do użycia docelową przestrzeń nazw zdefiniowana w schemacie.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.String.Empty?displayProperty=fullName> Na przykład to zachowanie zobacz <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metody.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Pozostałe funkcjonalność ta metoda jest identyczna ze <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metody.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  example:
  - "The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", New XmlTextReader(\"books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", new XmlTextReader(\"books.xsd\");  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` właściwości, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> do używania `targetNamespace` określonej w schemacie."
    - id: schemaDocument
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Obiektu.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiektu, jeśli schemat jest nieprawidłowy.</xref:System.Xml.Schema.XmlSchema> Jeśli schemat nie jest prawidłowy oraz <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> zostanie określona, przyjmowana <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> jest zwracany i weryfikacji odpowiednie zdarzenie jest wywoływane. W przeciwnym razie <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> jest generowany."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.XmlReader>Przekazano obiekt jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  id: CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera lub ustawia <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> dla <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "<xref:System.Xml.Schema.XmlSchemaCompilationSettings>Klasa określa opcje sprawdzania poprawności unikatowy cząstki autorstwa (UPA) dla <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaCompilationSettings> Aby uzyskać więcej informacji na temat włączania sprawdzanie poprawności UPA, zobacz <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>Właściwości.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaCompilationSettings
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;></xref> for the <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>. Wartość domyślna to <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> wystąpienia z <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>ustawioną właściwość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>"
  overload: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  id: Compile
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Kompiluje schematy języka (XSD) definicja schematu XML dodane do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> w jeden schemat logicznego."
  remarks: "Ta metoda jest wywoływana automatycznie, gdy potrzebny jest sprawdzania poprawności i <xref:System.Xml.Schema.XmlSchemaSet>nie został wcześniej skompilowany — na przykład, jeśli <xref:System.Xml.Schema.XmlSchemaSet>służy jako dane wejściowe do tworzenia <xref:System.Xml.XmlReader>obiektu w <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>Właściwość <xref:System.Xml.XmlReaderSettings>obiektu.</xref:System.Xml.XmlReaderSettings> </xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> Jeśli <xref:System.Xml.Schema.XmlSchemaSet>jest już w stanie skompilowane, ta metoda nie skompiluje schematów.</xref:System.Xml.Schema.XmlSchemaSet> Jeśli ta metoda jest wykonywana pomyślnie, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>ma ustawioną właściwość `true`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Schematów, które zostały wcześniej skompilowane przez <xref:System.Xml.Schema.XmlSchemaSet>nie jest ponownie kompilowana.</xref:System.Xml.Schema.XmlSchemaSet> Jednak schematów, które zostały skompilowane przy użyciu metody kompilacji <xref:System.Xml.Schema.XmlSchema>zostaną ponownie skompilowane.</xref:System.Xml.Schema.XmlSchema>      > [!NOTE] > Należy wywołać <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metodę, jeśli zostały zmienione po dodaniu go do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> schematu (lub jeden z jego obejmuje/importów)</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>Metoda będzie sprawdzać schematu strukturalnych ważności, zgodnie z regułami schematu W3C XML.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> Jednak nie zostanie przeprowadzone sprawdzanie poprawności pełna. Może również rozpoznać odwołania do składników schematu wewnętrznych i zewnętrznych. Zaimportowanych lub dołączone schematów, które zostały pobrane pomyślnie, również są dodawane do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importowane schematy są dodawane jako oddzielnych <xref:System.Xml.Schema.XmlSchema>obiektów, podczas gdy schematy uwzględnione są częścią tym <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Jeśli wywołanie ponownie przetworzyć zakończy się pomyślnie, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>właściwość jest ustawiona na wartość false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n```"
  syntax:
    content: public void Compile ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.Compile*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Wystąpił błąd podczas sprawdzania poprawności i kompilowania schematów w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  id: Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Wskazuje, czy schemat schematu XML definicji języka (XSD) z identyfikatorem URI przestrzeni nazw określony element docelowy jest w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Schematy pośrednio dodawanych do <xref:System.Xml.Schema.XmlSchemaSet>są wykrywane przez metodę zawiera; na przykład zaimportować schematów.</xref:System.Xml.Schema.XmlSchemaSet> W związku z tym jeśli schematu dla przestrzeni nazw http://www.contoso.com/retail który importuje schematu dla przestrzeni nazw http://www.contoso.com/books jest dodawany do <xref:System.Xml.Schema.XmlSchemaSet>, wywoływania zawiera z `http://www.contoso.com/books` jako parametru zwraca `true`.</xref:System.Xml.Schema.XmlSchemaSet>"
  syntax:
    content: public bool Contains (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` właściwości."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli schemat o określony element docelowy identyfikator URI przestrzeni nazw jest <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  id: Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Wskazuje, czy określony język definicji schematu XML (XSD) <xref:System.Xml.Schema.XmlSchema>obiekt jest w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  syntax:
    content: public bool Contains (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiektu.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Xml.Schema.XmlSchema>obiekt jest w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Przekazany jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Kopiuje wszystkie <xref:System.Xml.Schema.XmlSchema>obiektów z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> do danej tablicy, zaczynając od danego indeksu.</xref:System.Xml.Schema.XmlSchema>"
  remarks: ''
  example:
  - "The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemas(schemaSet.Count) As XmlSchema  \nschemaSet.CopyTo(schemas, 0)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchema[] schemas = new XmlSchema[schemaSet.Count];  \nschemaSet.CopyTo(schemas, 0);  \n```"
  syntax:
    content: public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchema[]
      description: "Tablicy na skopiowanie obiekty."
    - id: index
      type: System.Int32
      description: "Indeks w tablicy, gdy rozpocznie się kopiowanie."
  overload: System.Xml.Schema.XmlSchemaSet.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Count
  id: Count
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera liczbę definicji schematu XML logicznej schematy języka (XSD) <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Jeśli istnieją dwie schematów dla przestrzeni nazw `http://www.contoso.com` w <xref:System.Xml.Schema.XmlSchemaSet>, właściwość Count zwróci 1, ponieważ schematy są traktowane jako jeden schemat logiczny sprawdzania poprawności.</xref:System.Xml.Schema.XmlSchemaSet> Jednak jeśli schematu dla przestrzeni nazw `http://www.contoso.com/retail` zaimportować schematu dla `http://www.contoso.com/books` przestrzeni nazw, wartość właściwości liczba będzie mieć wartość 2."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba logicznych schematów w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  id: GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera język (XSD) schematy atrybutami globalnymi w definicji schematu XML w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Kolekcja atrybutów globalnych."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  id: GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera wszystkie elementy globalne w definicji schematu XML schematy języka (XSD) w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Kolekcja elementów globalnego."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  id: GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera wszystkie typy proste i złożone globalne w definicji schematu XML schematów języka (XSD) w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Właściwość GlobalTypes zawsze zwraca typ reprezentujący `xs:anyType` typu złożonego."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Kolekcja typów globalnych proste i złożone."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  id: IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera wartość wskazującą, czy schematów schematu XML definition language (XSD) w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zostały skompilowane."
  remarks: "Właściwość IsCompiled nie mają wpływu schematy są edytowane w <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Aktualizacje indywidualnych schematów w <xref:System.Xml.Schema.XmlSchemaSet>nie są śledzone.</xref:System.Xml.Schema.XmlSchemaSet> W związku z tym może być właściwości IsCompiled `true` nawet jednego ze schematów zawartych w <xref:System.Xml.Schema.XmlSchemaSet>zostanie zmieniony, tak długo, jak schematów nie zostały dodane lub usunięte z <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - For an example of the IsCompiled property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.
  syntax:
    content: public bool IsCompiled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli schematów w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> zostały skompilowane od czasu ostatniego schematu zostały dodane lub usunięte z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  id: NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Pobiera domyślny <xref:System.Xml.XmlNameTable>używane przez <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> podczas ładowania nowego schematu XML definition language (XSD) schematów.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "Tabela obiektów atomized ciągu."
  overload: System.Xml.Schema.XmlSchemaSet.NameTable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  id: Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Usuwa określony schemat definicji schematu XML (XSD) języka z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Usuwanie schematu z <xref:System.Xml.Schema.XmlSchemaSet>ustawia <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>właściwości `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the Remove method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.Remove(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.Remove(schema);  \n    }  \n}  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiekt do usunięcia z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiektu usuniętego z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli schemat nie został znaleziony w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Remove*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat nie jest prawidłowym schematem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.Schema.XmlSchema>Przekazany jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  id: RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Usuwa określony schemat schematu XML definition language (XSD) i wszystkich schematów importuje z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Metoda RemoveRecursive usuwa określony schemat i wszystkich schematów importuje z <xref:System.Xml.Schema.XmlSchemaSet>, dopóki nie ma żadnych zależności na schemat lub jego importowane schematy.</xref:System.Xml.Schema.XmlSchemaSet> Jeśli istnieją zależności od schematu lub jego importowanych schematów w <xref:System.Xml.Schema.XmlSchemaSet>, nic nie zostanie usunięty, i zwraca RemoveRecursive `false`.</xref:System.Xml.Schema.XmlSchemaSet> Jeśli `false` jest zwracany i <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>jest zdefiniowana, ostrzeżenie jest wysyłany do obsługi zdarzenia, opisujące zależności.</xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>       Jeśli określony schemat importuje inne schematy i określony schemat został wcześniej usunięty z <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>metody RemoveRecursive — metoda nie spowoduje usunięcia importowane schematy i zwróci `false`.</xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> Na przykład jeśli `parentSchema` importuje `childSchema1` i `childSchema2` następujący kod powoduje tylko usunięcie `parentSchema`, ale nie zaimportowano `childSchema1` i `childSchema2` schematy: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` spowoduje usunięcie następującego kodu `parentSchema` i importowane schematy: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` RemoveRecursive — metoda nie ma wpływu na stan <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>Właściwości.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the RemoveRecursive method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.RemoveRecursive(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.RemoveRecursive(schema);  \n    }  \n}  \n```"
  syntax:
    content: public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);
    parameters:
    - id: schemaToRemove
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiekt do usunięcia z <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Xml.Schema.XmlSchema>obiekt i wszystkie jego Importy zostały pomyślnie usunięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.Schema.XmlSchema>Przekazany jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  id: Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Przetwarza ponownie schematu (XSD) języka definicji schematu XML, który już istnieje w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Ponowne przetwarzanie schematu wykonuje wszystkie przetwarzania wstępnego czynności wykonywanych na schemacie podczas <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>Metoda jest wywoływana.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A> Jeśli wywołanie ponowić zakończy się pomyślnie, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>ma ustawioną właściwość `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Metoda ponowić powinna być używana po schematu w <xref:System.Xml.Schema.XmlSchemaSet>został zmodyfikowany, po <xref:System.Xml.Schema.XmlSchemaSet>wykonał kompilację.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Należy wywołać metodę ponowić Jeśli zmieniono schemat (lub jeden z jego obejmuje/importów) po dodaniu go do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Metoda ponowić sprawdzi schematu strukturalnych ważności, zgodnie z regułami schematu W3C XML. Jednak nie zostanie przeprowadzone sprawdzanie poprawności pełna. Może również rozpoznać odwołania do składników schematu wewnętrznych i zewnętrznych. Zaimportowanych lub dołączone schematów, które zostały pobrane pomyślnie, również są dodawane do <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importowane schematy są dodawane jako oddzielnych <xref:System.Xml.Schema.XmlSchema>obiektów, podczas gdy schematy uwzględnione są częścią tym <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Jeśli wywołanie ponownie przetworzyć zakończy się pomyślnie, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>właściwość jest ustawiona na wartość false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>. After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified. Calling the Reprocess method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nDim schema As XmlSchema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n  \nDim element As XmlSchemaElement = New XmlSchemaElement()  \nschema.Items.Add(element)  \nelement.Name = \"book\"  \nelement.SchemaTypeName = New XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\")  \n  \nschemaSet.Reprocess(schema)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nXmlSchema schema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n  \nXmlSchemaElement element = new XmlSchemaElement();  \nschema.Items.Add(element);  \nelement.Name = \"book\";  \nelement.SchemaTypeName = new XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\");  \n  \nschemaSet.Reprocess(schema);  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Schemat, aby ponownie przetworzyć."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>Obiektu, jeśli schemat jest prawidłowym schematem.</xref:System.Xml.Schema.XmlSchema> Jeśli schemat nie jest prawidłowy oraz <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> jest określony, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> jest zwracany i weryfikacji odpowiednie zdarzenie jest wywoływane. W przeciwnym razie <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> jest generowany."
  overload: System.Xml.Schema.XmlSchemaSet.Reprocess*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.Schema.XmlSchema>Przekazano obiekt jako parametr to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Xml.Schema.XmlSchema>Przekazano obiekt jako parametr nie istnieje już w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  id: Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Zwraca kolekcję wszystkich definicji schematu XML schematów języka (XSD) w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Ta metoda zwraca schematów, które zostały dodane pośrednio do <xref:System.Xml.Schema.XmlSchemaSet>ponieważ zostały one zaimportowane.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Schematów metoda jest odpowiednikiem <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>metody przestarzałe <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Obiektu zawierającego wszystkich schematów, które zostały dodane do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Collections.ICollection> Jeśli schematów nie zostały dodane do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, pustą <xref:System.Collections.ICollection>obiekt jest zwracany.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  id: Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Zwraca kolekcję wszystkich definicji schematu XML schematów języka (XSD) w <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> należących do danej przestrzeni nazw."
  remarks: "Jeśli `targetNamespace` parametr jest `null` lub <xref:System.String.Empty>, zwracana wszystkich schematów bez przestrzeni nazw.</xref:System.String.Empty>       Ta metoda zwraca schematów, które zostały dodane pośrednio do <xref:System.Xml.Schema.XmlSchemaSet>ponieważ zostały one zaimportowane.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Schematów metoda jest odpowiednikiem <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>metody przestarzałe <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` właściwości."
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Obiektu zawierającego wszystkich schematów, które zostały dodane do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> należących do danej przestrzeni nazw.</xref:System.Collections.ICollection> Jeśli schematów nie zostały dodane do <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, pustą <xref:System.Collections.ICollection>obiekt jest zwracany.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Określa program obsługi zdarzeń dla odbieranie informacji o błędy sprawdzania poprawności schematu schematu XML definition language (XSD)."
  remarks: "Ustawia program obsługi zdarzeń do odbierania informacji na temat błędy sprawdzania poprawności schematu podczas <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>lub <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>metody <xref:System.Xml.Schema.XmlSchemaSet>są nazywane.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Jeśli nie zdefiniowano program obsługi zdarzeń, <xref:System.Xml.Schema.XmlSchemaException>jest zgłaszany na wszystkie błędy weryfikacji gdzie <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaException> Błędy sprawdzania poprawności z <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> nie są zgłaszane wyjątki"
  example:
  - "The following code example illustrates adding a ValidationEventHandler to capture errors and warnings when validating an XML document against a schema.  \n  \n [!code-cs[XmlSchemaSetOverall Example#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[XmlSchemaSetOverall Example#1](~/add/codesnippet/cpp/e-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[XmlSchemaSetOverall Example#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_2_1.vb)]  \n  \n The example uses the books.xml file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_2.xml)]  \n  \n The example uses the books.xsd file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ustawia <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> używany do rozpoznawania nazw lub lokalizacji, do której odwołuje się obejmują i importowanie elementów schematu."
  remarks: "<xref:System.Xml.XmlResolver>z <xref:System.Xml.Schema.XmlSchemaSet>jest używany do rozpoznawania przestrzeni nazw lub lokalizacji, do której odwołuje się obejmują i importowanie elementów schematu, ilekroć schematu jest dodawana przy użyciu <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>lub <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metody.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      > [!IMPORTANT] > Zewnętrznych przestrzeni nazw lub lokalizacji, do której odwołuje się uwzględnić, importowania i ponowne definiowanie elementów schematu są rozwiązywane względem podstawowy identyfikator URI schematu, która obejmuje lub importowane. Na przykład, jeśli podstawowy identyfikator URI, włączając lub importowanie schematu jest pusta lub `null`, lokalizacji zewnętrznych zostały rozwiązane względem bieżącego katalogu. <xref:System.Xml.XmlUrlResolver>Klasy jest używany do rozpoznawania schematów zewnętrznych domyślnie.</xref:System.Xml.XmlUrlResolver> Aby wyłączyć rozpoznawania include, importowanie i ponowne definiowanie elementów schematu, ustaw właściwość element XmlResolver `null`."
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Używany do rozpoznawania nazw lub lokalizacji, do której odwołuje się obejmują i importowanie elementów schematu."
  overload: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaCompilationSettings
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaCompilationSettings
  nameWithType: XmlSchemaCompilationSettings
  fullName: System.Xml.Schema.XmlSchemaCompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
- uid: System.Xml.Schema.XmlSchema[]
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchema
    name: XmlSchema
    nameWithType: XmlSchema
    fullName: XmlSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlSchemaSet.Count
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaSet.#ctor*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add
  nameWithType: XmlSchemaSet.Add
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile
  nameWithType: XmlSchemaSet.Compile
- uid: System.Xml.Schema.XmlSchemaSet.Contains*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains
  nameWithType: XmlSchemaSet.Contains
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo
  nameWithType: XmlSchemaSet.CopyTo
- uid: System.Xml.Schema.XmlSchemaSet.Count*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove
  nameWithType: XmlSchemaSet.Remove
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive
  nameWithType: XmlSchemaSet.RemoveRecursive
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess
  nameWithType: XmlSchemaSet.Reprocess
- uid: System.Xml.Schema.XmlSchemaSet.Schemas*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas
  nameWithType: XmlSchemaSet.Schemas
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
