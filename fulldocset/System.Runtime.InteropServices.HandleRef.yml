### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.HandleRef
  id: HandleRef
  children:
  - System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.Handle
  - System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  - System.Runtime.InteropServices.HandleRef.Wrapper
  langs:
  - csharp
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
  type: Struct
  summary: "Zawija wywołania zarządzanego obiektu zawierający dojścia do zasobu, który zostanie przekazany do kodu niezarządzanego, przy użyciu platformy."
  remarks: "> [!IMPORTANT]> W programie .NET Framework 2.0, funkcjonalność klasy element HandleRef został zastąpiony przez <xref:System.Runtime.InteropServices.SafeHandle>klasy i jej klas pochodnych, jak również funkcję <xref:System.Runtime.InteropServices.CriticalHandle>klasy</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle>       Jeśli używasz platformy wywołania do wywołania zarządzanego obiektu i obiekt nie odwołuje się w innym miejscu po wywołaniu wywołanie platformy, istnieje możliwość, że moduł zbierający elementy bezużyteczne w celu sfinalizowania obiektu zarządzanego. Ta akcja zwalnia zasobu i unieważnia uchwytu powoduje platformy wywołania Niepowodzenie wywołania. Zawijanie dojścia z element HandleRef gwarantuje, że obiektu zarządzanego nie jest zakończeniu bezużytecznych do momentu wywołania wywołania platformy. Opis platformy wywołania usług, zobacz [wykorzystywanie niezarządzanych funkcji DLL](~/add/includes/ajax-current-ext-md.md).       Tak samo, jak typ, wartości element HandleRef <xref:System.Runtime.InteropServices.GCHandle>, to specjalny typ rozpoznawane przez organizatora międzyoperacyjnego.</xref:System.Runtime.InteropServices.GCHandle> Normalny, nonpinned <xref:System.Runtime.InteropServices.GCHandle>uniemożliwia także programowi przedwczesnemu wyrzucanie elementów bezużytecznych, ale element HandleRef zapewnia lepszą wydajność.</xref:System.Runtime.InteropServices.GCHandle> Chociaż podtrzymywania obiektu w czasie trwania platformy przy użyciu element HandleRef wywołania wywołanie jest preferowana, można również użyć <xref:System.GC.KeepAlive%2A?displayProperty=fullName>metody w tym samym celu.</xref:System.GC.KeepAlive%2A?displayProperty=fullName>       Konstruktor element HandleRef przyjmuje dwa parametry: <xref:System.Object>reprezentujący otoki i <xref:System.IntPtr>reprezentujący dojścia niezarządzanego.</xref:System.IntPtr> </xref:System.Object> Organizator międzyoperacyjnego przekazuje tylko dojście do kodu niezarządzanego i gwarantuje, że otoka (przekazany jako pierwszego parametru do konstruktora obiektu `HandleRef`) pozostaje aktywne w czasie trwania wywołanie."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct HandleRef
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> klasy z obiektu zawijania i dojścia do zasobu używany przez kod niezarządzany."
  syntax:
    content: public HandleRef (object wrapper, IntPtr handle);
    parameters:
    - id: wrapper
      type: System.Object
      description: "Zwraca obiekt zarządzany, którego powinien zrealizowane, dopóki wywołania wywołania platformy."
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>Wskazuje, że dojście do zasobu.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Handle
  id: Handle
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera dojścia do zasobu."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "Dojście do zasobu."
  overload: System.Runtime.InteropServices.HandleRef.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  id: op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "Do dodania."
    return:
      type: System.IntPtr
      description: "Do dodania."
  overload: System.Runtime.InteropServices.HandleRef.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  id: ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zwraca reprezentację wewnętrzny całkowitą <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> obiektu."
  syntax:
    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "A <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> obiektu można pobrać reprezentacji wewnętrznej liczby całkowitej z."
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>Obiekt, który reprezentuje <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> obiektu.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  id: Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera obiekt zawierający dojście do zasobu."
  syntax:
    content: public object Wrapper { get; }
    return:
      type: System.Object
      description: "Obiekt zawierający dojście do zasobu."
  overload: System.Runtime.InteropServices.HandleRef.Wrapper*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.HandleRef.Handle
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef
  parent: System.Runtime.InteropServices
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
- uid: System.Runtime.InteropServices.HandleRef.#ctor*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.Handle*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit
  nameWithType: HandleRef.op_Explicit
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr
  nameWithType: HandleRef.ToIntPtr
- uid: System.Runtime.InteropServices.HandleRef.Wrapper*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
