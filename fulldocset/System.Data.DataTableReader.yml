### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableReader
  id: DataTableReader
  children:
  - System.Data.DataTableReader.#ctor(System.Data.DataTable)
  - System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  - System.Data.DataTableReader.Close
  - System.Data.DataTableReader.Depth
  - System.Data.DataTableReader.FieldCount
  - System.Data.DataTableReader.GetBoolean(System.Int32)
  - System.Data.DataTableReader.GetByte(System.Int32)
  - System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetChar(System.Int32)
  - System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetDataTypeName(System.Int32)
  - System.Data.DataTableReader.GetDateTime(System.Int32)
  - System.Data.DataTableReader.GetDecimal(System.Int32)
  - System.Data.DataTableReader.GetDouble(System.Int32)
  - System.Data.DataTableReader.GetEnumerator
  - System.Data.DataTableReader.GetFieldType(System.Int32)
  - System.Data.DataTableReader.GetFloat(System.Int32)
  - System.Data.DataTableReader.GetGuid(System.Int32)
  - System.Data.DataTableReader.GetInt16(System.Int32)
  - System.Data.DataTableReader.GetInt32(System.Int32)
  - System.Data.DataTableReader.GetInt64(System.Int32)
  - System.Data.DataTableReader.GetName(System.Int32)
  - System.Data.DataTableReader.GetOrdinal(System.String)
  - System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  - System.Data.DataTableReader.GetSchemaTable
  - System.Data.DataTableReader.GetString(System.Int32)
  - System.Data.DataTableReader.GetValue(System.Int32)
  - System.Data.DataTableReader.GetValues(System.Object[])
  - System.Data.DataTableReader.HasRows
  - System.Data.DataTableReader.IsClosed
  - System.Data.DataTableReader.IsDBNull(System.Int32)
  - System.Data.DataTableReader.Item(System.Int32)
  - System.Data.DataTableReader.Item(System.String)
  - System.Data.DataTableReader.NextResult
  - System.Data.DataTableReader.Read
  - System.Data.DataTableReader.RecordsAffected
  langs:
  - csharp
  name: DataTableReader
  nameWithType: DataTableReader
  fullName: System.Data.DataTableReader
  type: Class
  summary: "Element DataTableReader uzyskuje zawartość jednego lub więcej <xref href=&quot;System.Data.DataTable&quot;> </xref> obiekty w postaci jednego lub więcej zestawów wyników tylko do odczytu, tylko do przodu."
  remarks: "Element DataTableReader działa podobnie do wszelkich innych czytnik danych, takich jak <xref:System.Data.SqlClient.SqlDataReader>ale element DataTableReader zapewnia Iterowanie po wierszy w <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.SqlClient.SqlDataReader> Innymi słowy zapewnia Iterowanie po wierszy w pamięci podręcznej. Buforowane dane można modyfikować, gdy element DataTableReader jest aktywne, a czytnik również automatycznie obsługuje położenia.       Po utworzeniu elementu DataTableReader z <xref:System.Data.DataTable>, jeden zestaw danych o tej samej jako wyników zawiera obiekt wynikowy Element DataTableReader <xref:System.Data.DataTable>z którego został utworzony, z wyjątkiem wszystkie wiersze, które zostały oznaczone jako usunięte.</xref:System.Data.DataTable> </xref:System.Data.DataTable> Kolumny pojawiają się w tej samej kolejności jak w oryginalnym <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Struktura zwrócony wynik jest takie same jak w schemat i dane oryginalne <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Element DataTableReader, która została utworzona przez wywołanie metody <xref:System.Data.DataSet.GetDataReader%2A>metody <xref:System.Data.DataSet>obiekt zawiera wiele zestawów wyników, jeśli <xref:System.Data.DataSet>zawiera więcej niż jedna tabela.</xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Data.DataSet.GetDataReader%2A> Wyniki są w tej samej kolejności jak <xref:System.Data.DataTable>obiekty w <xref:System.Data.DataTableCollection>z <xref:System.Data.DataSet>obiektu.</xref:System.Data.DataSet> </xref:System.Data.DataTableCollection> </xref:System.Data.DataTable>       Zestaw wyników zwrócony zawiera tylko bieżącą wersję każdego <xref:System.Data.DataRow>; są pomijane wiersze, które są oznaczone do usunięcia.</xref:System.Data.DataRow>       `DataTableReader` Zapewnia stabilnego iteratora; oznacza to, że zawartość `DataTableReader` nie zostały unieważnione, jeśli rozmiar kolekcji źródłowej jest modyfikowany podczas iteracji. Na przykład, jeśli jeden lub więcej wierszy w <xref:System.Data.DataTable.Rows%2A>kolekcji zostały usunięte lub usunięte podczas iteracji, bieżącą pozycję w `DataTableReader` są odpowiednio przechowywane i unieważnia iteratora.</xref:System.Data.DataTable.Rows%2A>"
  syntax:
    content: 'public sealed class DataTableReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataTableReader&quot;> </xref> przy użyciu danych z podane <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  syntax:
    content: public DataTableReader (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref> z którego nowy <xref href=&quot;System.Data.DataTableReader&quot;> </xref> uzyskuje jej zestaw wyników."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  id: '#ctor(System.Data.DataTable[])'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataTableReader&quot;> </xref> przy użyciu dostarczonego tablica <xref href=&quot;System.Data.DataTable&quot;> </xref> obiektów."
  remarks: "Jeśli musisz utworzyć <xref:System.Data.DataTableReader>na podstawie wszystkie lub podzbiór tabel w ramach określonej <xref:System.Data.Dataset>, wywołaj `DataSet`w <xref:System.Data.DataSet.GetDataReader%2A>— Metoda.</xref:System.Data.DataSet.GetDataReader%2A> </xref:System.Data.Dataset> </xref:System.Data.DataTableReader> Jeśli chcesz utworzyć nową <xref:System.Data.DataTableReader>wystąpienia na podstawie grupy `DataTable` wystąpień, które nie są w inny sposób powiązane, użyj tego konstruktora.</xref:System.Data.DataTableReader> Mogą również czerpać korzyści z tego konstruktora, aby zmienić kolejność `DataTables` w `DataTableReader`, jeśli ich kolejności w swoim źródłem `DataSet` odpowiada Twoim potrzebom."
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.ctor#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_20_1.vb)]\n [!code-cs[DataWorks DataTableReader.ctor#1](~/add/codesnippet/csharp/m-system.data.datatabler_20_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public DataTableReader (System.Data.DataTable[] dataTables);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "Tablica <xref href=&quot;System.Data.DataTable&quot;> </xref> obiektów, które dostarcza wyniki dla nowego <xref href=&quot;System.Data.DataTableReader&quot;> </xref> obiektu."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Close
  id: Close
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zamyka bieżące <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Wywoływanie `Close()` na zamkniętej `DataTableReader` obiektu nie wygenerował błąd."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.DataTableReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Depth
  id: Depth
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Głębokość zagnieżdżenia bieżącego wiersza <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: '`DataTableReader`nie obsługuje zagnieżdżenia. `Depth` Właściwość zawsze zwraca wartość zero.'
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "Głębokość zagnieżdżenia bieżącego wiersza; zawsze zero."
  overload: System.Data.DataTableReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.FieldCount
  id: FieldCount
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zwraca liczbę kolumn w bieżącym wierszu."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Gdy nie znajduje się w zestawie prawidłowy wynik 0; w przeciwnym razie liczba kolumn w bieżącym wierszu."
  overload: System.Data.DataTableReader.FieldCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nastąpiła próba pobrania liczba pól w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako <xref:System.Boolean>.</xref:System.Boolean>"
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być typu Boolean lub taki sam jak wartość logiczną lub zostanie wygenerowany wyjątek.       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/csharp/m-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Boolean
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetBoolean*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny w postaci bajtów."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi być taki sam jak bajtem lub bajtów.       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_8_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/csharp/m-system.data.datatabler_8_1.cs)]"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Byte
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetByte*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera typu byte."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Odczytuje strumień bajtów, zaczynając od przesunięcia kolumny określony w buforze w postaci tablicy, zaczynając od przesunięcia określony bufor."
  remarks: "`GetBytes`Zwraca liczby dostępnych bajtów w polu. W większości przypadków jest to dokładnie długość pola. Jednak zwrócona liczba może być mniejsza niż wartość true, długość pola Jeśli `GetBytes` został już użyty do uzyskania bajtów z pola. Może to być sprawa, na przykład, jeśli <xref:System.Data.DataTableReader>odczytuje struktury dużej ilości danych do buforu w przypadku przekazania buforu, który jest `null` (`Nothing` w języku Visual Basic), `GetBytes` zwraca długość całe pole w bajtach nie rozmiar pozostałych na podstawie parametru przesunięcia buforu.</xref:System.Data.DataTableReader>       Konwersje nie są wykonywane; w związku z tym dane pobrane już musi być tablica bajtów lub taki sam jak tablicy bajtów."
  example:
  - "The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\\ folder. In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.  \n  \n [!code-cs[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/csharp/ff921727-bdbe-4741-b853-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/visualbasic/ff921727-bdbe-4741-b853-_1.vb)]"
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    - id: dataIndex
      type: System.Int64
      description: "Indeks w polu, w którym można uruchomić operacji odczytu."
    - id: buffer
      type: System.Byte[]
      description: "Bufor, do której mają być odczytywane w strumieniu bajtów."
    - id: bufferIndex
      type: System.Int32
      description: "Indeks w buforze, od którego należy rozpocząć wprowadzania danych."
    - id: length
      type: System.Int32
      description: "Maksymalna długość ma zostać skopiowany do buforu."
    return:
      type: System.Int64
      description: "Rzeczywista liczba bajtów odczytanych."
  overload: System.Data.DataTableReader.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera tablicy bajtów."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako znak."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi być taki sam jak znak lub znak.       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_16_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/csharp/m-system.data.datatabler_16_1.cs)]"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Char
      description: "Wartość kolumny."
  overload: System.Data.DataTableReader.GetChar*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określone pole nie zawiera znaku."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zwraca wartość określonej kolumny w postaci tablicy znaków."
  remarks: "`GetChars`Zwraca liczbę znaków dostępne w tym polu. W większości przypadków jest to dokładnie długość pola. Jednak zwrócona liczba może być mniejsza niż wartość true, długość pola Jeśli `GetChars` został już użyty do uzyskania znaków w polu.       Rzeczywista liczba znaków do odczytu może być mniejsza niż żądana długość, gdy zostanie osiągnięty koniec pola. W przypadku przekazania buforu, który ma wartość null (`Nothing` w języku Visual Basic), `GetChars` zwraca długość pola całego znaków, nie rozmiar pozostałych na podstawie parametru przesunięcia buforu.       Konwersje nie są wykonywane; w związku z tym dane mają zostać pobrane już musi być tablicą znak lub taki sam jak tablicy znaków."
  example:
  - "The following example demonstrates the `GetChars` method. The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second. In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`. `TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.  \n  \n This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array. Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.  \n  \n [!code-cs[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/csharp/299b411e-96a3-40b6-89fc-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/visualbasic/299b411e-96a3-40b6-89fc-_1.vb)]"
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    - id: dataIndex
      type: System.Int64
      description: "Indeks w polu, w którym można uruchomić operacji odczytu."
    - id: buffer
      type: System.Char[]
      description: "Bufor, do której mają być odczytywane w strumieniu znaków."
    - id: bufferIndex
      type: System.Int32
      description: "Indeks w buforze, od którego należy rozpocząć wprowadzania danych."
    - id: length
      type: System.Int32
      description: "Maksymalna długość ma zostać skopiowany do buforu."
    return:
      type: System.Int64
      description: "Rzeczywista liczba znaków do odczytu."
  overload: System.Data.DataTableReader.GetChars*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera tablicy znaków."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera ciąg reprezentujący typ danych dla określonej kolumny."
  remarks: "Metoda GetDataTypeName zawsze zwraca wartość typu bazowego <xref:System.Data.DataColumn>zamiast typu specyficznego dla dostawcy.</xref:System.Data.DataColumn>"
  example:
  - "The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:  \n  \n [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_10_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/csharp/m-system.data.datatabler_10_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \nID: Int32  \nName: String  \n```"
  syntax:
    content: public override string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.String
      description: "Ciąg reprezentujący typ danych kolumny."
  overload: System.Data.DataTableReader.GetDataTypeName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako <xref:System.DateTime>obiektu.</xref:System.DateTime>"
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być <xref:System.DateTime>lub taki sam jak `DataTime`.</xref:System.DateTime>       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_23_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/csharp/m-system.data.datatabler_23_1.cs)]"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.DateTime
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera wartości daty/godziny."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako <xref:System.Decimal>.</xref:System.Decimal>"
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być <xref:System.Decimal>lub taki sam jak `Decimal`.</xref:System.Decimal>       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/csharp/m-system.data.datatabler_4_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_4_1.vb)]"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Decimal
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetDecimal*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość kolumny jako podwójnej precyzji liczba zmiennoprzecinkowa."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być podwójnej precyzji liczba zmiennoprzecinkowa lub musi być taki sam jak podwójnej precyzji liczba zmiennoprzecinkowa.       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/csharp/m-system.data.datatabler_19_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_19_1.vb)]"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera numer kolumny."
    return:
      type: System.Double
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetDouble*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera podwójnej precyzji liczba zmiennoprzecinkowa."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zwraca moduł wyliczający, który może służyć do iterowania po kolekcji elementów."
  remarks: "Moduły wyliczające Zezwalaj tylko do odczytu danych w <xref:System.Data.DataTableReader>.</xref:System.Data.DataTableReader> Wyliczenia nie można zmodyfikować kolekcji źródłowej.       Na początku moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. At to pozycja, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> W związku z tym należy wywołać `MoveNext` można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości `Current`.       `Current`Zwraca <xref:System.Data.Common.DbDataRecord>i zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Data.Common.DbDataRecord> `MoveNext`Ustawia `Current` do następnego elementu.       Po zakończeniu kolekcji jest moduł wyliczający jest rozmieszczanych za ostatnim elementem w kolekcji i wywoływania `MoveNext` zwraca wartość false. Jeśli przez ostatnie wywołanie `MoveNext` zwrócił `false`, wywoływania `Current` zgłasza wyjątek. Ponadto ponieważ <xref:System.Data.DataTableReader>umożliwia dostęp tylko do przodu do jego danych podczas wywoływania <xref:System.Collections.IEnumerator.Reset%2A>metody IEnumerator zgłasza <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Data.DataTableReader>       <xref:System.Data.DataTableReader>Zapewnia stabilny modułu wyliczającego.</xref:System.Data.DataTableReader> Oznacza, że nawet jeśli usunięcia wiersza i dodawania są wykonywane w ramach danych, modułu wyliczającego zwrócony przez wywołanie do GetEnumerator ciągle prawidłowe."
  example:
  - "The following example demonstrates the use of the GetEnumerator method. This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.  \n  \n [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_7_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/csharp/m-system.data.datatabler_7_1.cs)]  \n  \n The procedure displays the following text in the Console window:  \n  \n```  \nPeter  \nMary  \nRuss  \n```"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Obiekt, który reprezentuje kolekcji elementów.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataTableReader.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera <xref:System.Type>obiektu, który jest typem danych.</xref:System.Type>"
  remarks: ''
  example:
  - "Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/csharp/m-system.data.datatabler_13_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_13_1.vb)]"
  syntax:
    content: public override Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu, który jest typem danych.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako pojedynczej precyzji liczba zmiennoprzecinkowa."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być pojedynczej precyzji liczba zmiennoprzecinkowa lub musi pasować do pojedynczej precyzji liczba zmiennoprzecinkowa.       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/csharp/m-system.data.datatabler_11_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_11_1.vb)]"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Single
      description: "Wartość kolumny."
  overload: System.Data.DataTableReader.GetFloat*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera pojedynczej precyzji liczba zmiennoprzecinkowa."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako globalnie unikatowy identyfikator (globalny GUID)."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być <xref:System.Guid>lub taki sam jak `Guid`.</xref:System.Guid>       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/csharp/m-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Guid
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetGuid*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera identyfikatora GUID."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako 16-bitową liczbę całkowitą ze znakiem."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być <xref:System.Int16>lub taki sam jak `Int16`.</xref:System.Int16>       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_1_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/csharp/m-system.data.datatabler_1_1.cs)]"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera kolumny o liczbie porządkowej"
    return:
      type: System.Int16
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetInt16*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera 16-bitową liczbę całkowitą ze znakiem."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako całkowita 32-bitowych."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być <xref:System.Int32>lub taki sam jak `Int32`.</xref:System.Int32>       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/csharp/m-system.data.datatabler_15_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_15_1.vb)]"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera kolumny o liczbie porządkowej"
    return:
      type: System.Int32
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetInt32*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera wartości 32-bitowej liczby całkowitej ze znakiem."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako 64-bitowej podpisanej liczby całkowitej."
  remarks: "Konwersje nie są wykonywane; w związku z tym dane pobrane musi już być <xref:System.Int64>lub taki sam jak `Int64`.</xref:System.Int64>       Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_5_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/csharp/m-system.data.datatabler_5_1.cs)]"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera kolumny o liczbie porządkowej"
    return:
      type: System.Int64
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetInt64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera wartości 64-bitowej podpisanej liczby całkowitej."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako <xref:System.String>.</xref:System.String>"
  remarks: "`GetName` i <xref:System.Data.DataTableReader.GetOrdinal%2A>metody udostępniają funkcje odwrotny.</xref:System.Data.DataTableReader.GetOrdinal%2A> Oznacza to, że wywołanie `GetOrdinal` na wartość zwracana wywołania `GetName` powinien zwrócić pierwotny parametr przekazany do `GetName`; to samo dotyczy wywoływanie procedur w przeciwną kolejności."
  example:
  - "The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetName#1](~/add/codesnippet/csharp/m-system.data.datatabler_6_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_6_1.vb)]"
  syntax:
    content: public override string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera kolumny o liczbie porządkowej"
    return:
      type: System.String
      description: "Nazwa określonej kolumny."
  overload: System.Data.DataTableReader.GetName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera kolumnę porządkowej, otrzymuje nazwę kolumny."
  remarks: "Ponieważ większość metody dostarczone przez <xref:System.Data.DataTableReader>klasy muszą być z liczby porządkowej kolumny, możesz użyć `GetOrdinal` metoda pobierania numer kolumny otrzymuje nazwę kolumny.</xref:System.Data.DataTableReader>       `GetOrdinal`najpierw przeprowadza wyszukiwanie z uwzględnieniem wielkości liter. Jeśli nie powiedzie się, zostanie przeprowadzona drugi wyszukiwania bez uwzględniania wielkości liter. Jeśli nie zostanie znaleziony numer kolumny `IndexOutOfRangeException` jest generowany.       `GetOrdinal`szerokość kana jest rozróżniana wielkość liter.       Ponieważ wyszukiwań na podstawie numer są bardziej efektywne niż nazwanego wyszukiwań, jest nieefektywne wywołać `GetOrdinal` w pętli. Zaoszczędzić czas, przez wywołanie metody `GetOrdinal` jeden raz i przypisywanie wyniki do zmiennej całkowitą do użytku w pętli"
  example:
  - "If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information. In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :  \n  \n [!code-cs[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.datatabler_3_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_3_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa kolumny."
    return:
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
  overload: System.Data.DataTableReader.GetOrdinal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określona nazwa nie jest prawidłową nazwę kolumny."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera typ dla określonej kolumny w formacie specyficznego dla dostawcy."
  remarks: "Ponieważ <xref:System.Data.DataTableReader>zawsze zwraca typ przechowywanych w podstawowej <xref:System.Data.DataColumn>wartość zwracana przez wywołanie metody GetProviderSpecificFieldType zawsze zwraca taki sam typ jako typ przechowywanych w <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Podczas pracy z <xref:System.Data.DataTableReader>klasy, wywołanie metody GetProviderSpecificFieldType zwraca tego samego typu co wywołanie <xref:System.Type.GetType%2A>metody.</xref:System.Type.GetType%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu, który jest typem danych.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetProviderSpecificFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny w formacie specyficznego dla dostawcy."
  remarks: "Ponieważ <xref:System.Data.DataTableReader>zawsze zwraca typ przechowywanych w podstawowej <xref:System.Data.DataColumn>wartość zwracana przez wywołanie metody GetProviderSpecificValue zawsze zwraca dane z tego samego typu co dane przechowywane w ramach <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Podczas pracy z <xref:System.Data.DataTableReader>klasy, wywołanie metody GetProviderSpecificValue zwraca takie same wartości i wpisz co wywołanie <xref:System.Data.DataTableReader.GetValue%2A>metody.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera numer kolumny, którego wartość jest pobierana."
    return:
      type: System.Object
      description: "Wartość określonej kolumny w formacie specyficznego dla dostawcy."
  overload: System.Data.DataTableReader.GetProviderSpecificValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej<xref href=&quot;System.Data.DataTableReader&quot;></xref>"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Wypełnia podanej tablicy przy użyciu informacji o typie specyficznych dla dostawcy dla wszystkich kolumn <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Ponieważ <xref:System.Data.DataTableReader>zawsze zwraca dane typu przechowywane w podstawowej <xref:System.Data.DataColumn>wartości zwracane przez wywołanie metody GetProviderSpecificValues metody jest zawsze takich samych typach danych przechowywanych w <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Podczas pracy z <xref:System.Data.DataTableReader>klasy, wywołanie metody GetProviderSpecificValues zwraca te same wartości i typy co wywołanie <xref:System.Data.DataTableReader.GetValues%2A>metody.</xref:System.Data.DataTableReader.GetValues%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Tablica obiektów w celu wprowadzenia informacji o typie dla kolumn w <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "Liczba wartości w kolumnie skopiować do tablicy."
  overload: System.Data.DataTableReader.GetProviderSpecificValues*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zwraca <xref href=&quot;System.Data.DataTable&quot;> </xref> opisujący metadane kolumny <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Metoda GetSchemaTable zwraca metadane dotyczące każdej kolumny w następującej kolejności: | Kolumna DataReader | Opis elementu |   |-----------------------|-----------------|   | Element ColumnName | Nazwa kolumny, w jakiej jest wyświetlana w <xref:System.Data.DataTable>. |   | ColumnOrdinal | Numer kolumny |   | ColumnSize |-1 Jeśli <xref:System.Data.Common.SchemaTableColumn.ColumnSize>(lub <xref:System.Data.DataColumn.MaxLength%2A>) nie może być określony lub nie jest ważna właściwości <xref:System.Data.DataColumn>; w przeciwnym razie wartość 0 lub dodatnia liczba całkowita zawierające `MaxLength` wartość. |   | NumericPrecision | Jeśli typem kolumny jest typu liczbowego, jest to maksymalna dokładność kolumny.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.MaxLength%2A> </xref:System.Data.Common.SchemaTableColumn.ColumnSize> </xref:System.Data.DataTable> Jeśli typ kolumny nie jest typem danych liczbowych, jest to wartość null. |   | NumericScale | Jeśli typ danych kolumny zawiera składnik skali, zwróć liczba cyfr z prawej strony punktu dziesiętnego. W przeciwnym razie zwraca wartość null. |   | Typ danych | Podstawowy typ kolumny. |   | Typ dostawcy | Wskazuje typ danych kolumny. Jeśli typ danych kolumny może być różna wiersz po wierszu, ta wartość jest <xref:System.Object>.</xref:System.Object> Ta kolumna nie może zawierać wartości null. |   | IsLong | `true` w przypadku typu danych kolumny <xref:System.String>i jego <xref:System.Data.DataColumn.MaxLength%2A>właściwość ma wartość -1.</xref:System.Data.DataColumn.MaxLength%2A> </xref:System.String> W przeciwnym razie `false`. |   | AllowDBNull | `true` Jeśli ograniczenie AllowDbNull jest ustawiona na wartość true dla kolumny, a w przeciwnym razie `false`. |   | IsReadOnly | `true` Jeśli kolumna nie może być zmodyfikowany; w przeciwnym razie `false`. |   | Atrybut IsRowVersion | `false`, dla każdej kolumny. |   | IsUnique | `true`: Żadne dwa wiersze w <xref:System.Data.DataTable>mogą mieć taką samą wartość w tej kolumnie.</xref:System.Data.DataTable> `IsUnique`gwarantuje to wartość true, jeśli kolumna reprezentuje klucz przez siebie lub jeśli istnieje ograniczenie typu UNIQUE, która ma zastosowanie tylko do tej kolumny. `false`: Kolumna może zawierać zduplikowanych wartości w `DataTable`. Domyślnie ta kolumna jest `false`. |   | IsKey | `true`: Kolumna jest jeden zestaw kolumn, które identyfikują razem wiersza w <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Zestaw kolumn z `IsKey` ustawioną `true` musi jednoznacznie identyfikować wiersza w `DataTable`. Nie jest wymagane czy ten zestaw kolumn jest minimalny zestaw kolumn. Ten zestaw kolumn mogą być generowane z `DataTable` klucza podstawowego, unikatowego ograniczenia lub unikatowego indeksu. `false`: Kolumna nie jest wymagana do jednoznacznego identyfikowania wiersza. Ta wartość jest `true` Jeśli kolumna uczestniczy w jednym lub złożonego klucza podstawowego. W przeciwnym razie jego wartość wynosi `false`. |   | IsAutoIncrement | `true`: Kolumna przypisuje wartości do nowych wierszy w stałych odstępach. `false`: Kolumna nie przypisywać wartości do nowych wierszy w stałych odstępach. Domyślnie ta kolumna jest `false`. |   | BaseCatalogName | Nazwa katalogu w magazynie danych, która zawiera kolumny. `Null`Jeśli nie można ustalić nazwy katalogu podstawowego. Wartość domyślna dla tej kolumny jest `null` wartość. |   | BaseSchemaName | Ta wartość jest zawsze `Null`. |   | BaseTableName | Nazwa <xref:System.Data.DataTable>. |   | BaseColumnName | Nazwa kolumny w <xref:System.Data.DataTable>. |   | AutoIncrementSeed | Wartość właściwości <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementSeed%2A>. |   | Elementu AutoIncrementStep | Wartość właściwości <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementStep%2A>. |   | DefaultValue | Wartość właściwości <xref:System.Data.DataColumn> <xref:System.Data.DataColumn.DefaultValue%2A>. |   | Wyrażenie | Ciąg wyrażenia, jeśli bieżąca kolumna jest kolumną wyrażenie i wszystkie kolumny używaną w wyrażeniu muszą należeć do tej samej `T:System.Data.DataTable` zawiera wyrażenie kolumny; w przeciwnym razie `null`. |   | Mapowanie kolumny | <xref:System.Data.MappingType>Wartość skojarzona z <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.MappingType> </xref:System.Data.DataColumn.DefaultValue%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataColumn.AutoIncrementStep%2A> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataTable> Jako typ można określić jedną z `Attribute`, `Element`, `Hidden`, lub `SimpleContent`. Wartość domyślna to `Element`. |   | BaseTableNamespace | Wartość właściwości <xref:System.Data.DataTable> <xref:System.Data.DataTable.Namespace%2A>. |   | BaseColumnNamespace | Wartość <xref:System.Data.DataColumn>w <xref:System.Data.DataColumn.Namespace%2A>Właściwości. |</xref:System.Data.DataColumn.Namespace%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable.Namespace%2A> </xref:System.Data.DataTable>"
  example:
  - "The following console application example retrieves schema information about the specified column. Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/csharp/m-system.data.datatabler_14_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_14_1.vb)]"
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> opisujący metadanych kolumn."
  overload: System.Data.DataTableReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.DataTableReader&quot;> </xref> Jest zamknięty."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny jako ciąg."
  remarks: "Wywołanie <xref:System.Data.DataTableReader.IsDBNull%2A>czy przed wywołaniem tej metody są wartości null.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetString#1](~/add/codesnippet/csharp/m-system.data.datatabler_17_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetString#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_17_1.vb)]"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera kolumny o liczbie porządkowej"
    return:
      type: System.String
      description: "Wartość określonej kolumny."
  overload: System.Data.DataTableReader.GetString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Określona kolumna nie zawiera ciąg."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny w jego formatu macierzystego."
  remarks: "Mimo że można wywołać <xref:System.Data.DataTableReader.IsDBNull%2A>Aby zobaczyć, jeśli występują wartości null przed wywołaniem tej metody, nie trzeba to zrobić.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name. Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.  \n  \n [!code-cs[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/csharp/m-system.data.datatabler_22_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_22_1.vb)]"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera kolumny o liczbie porządkowej"
    return:
      type: System.Object
      description: "Wartość określonej kolumny. Ta metoda zwraca <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> dla kolumn o wartości null."
  overload: System.Data.DataTableReader.GetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nastąpiła próba odczytu ani uzyskiwać dostępu do kolumn w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Wypełnia tablicę obiektów z wartości w kolumnie bieżącego wiersza."
  remarks: "Dla większości aplikacji ta metoda zapewnia skuteczne pobierania wszystkich kolumn, zamiast indywidualnie pobieranie każdej kolumny. Jeśli Twoje zamierzeniu można pobrać wszystkich wartości w kolumnie z wiersza w <xref:System.Data.DataTableReader>, `GetValues` metoda zapewnia najbardziej wydajne rozwiązanie.</xref:System.Data.DataTableReader>       Można przekazać <xref:System.Object>tablicy, która zawiera mniej niż liczba kolumn, które są zawarte w wynikowego wiersza.</xref:System.Object> Ilość danych `Object` Tablica może zawierać jest kopiowany do tablicy. Można również przekazać `Object` tablicy, której długość jest większa niż liczba kolumn, które są zawarte w wynikowego wiersza, w których przypadku elementów tablicy dodatkowe pozostaje bez zmian przez wywołanie metody.       Ta metoda powoduje `DBNull` w tablicy danych wyjściowych dla kolumn o wartości null."
  example:
  - "The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/csharp/m-system.data.datatabler_21_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_21_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Tablica <xref:System.Object>do którego można skopiować wartości w kolumnie z <xref href=&quot;System.Data.DataTableReader&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Liczba wartości w kolumnie skopiować do tablicy."
  overload: System.Data.DataTableReader.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.HasRows
  id: HasRows
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Data.DataTableReader&quot;> </xref> zawiera co najmniej jeden wiersz."
  remarks: "`HasRows` Właściwość zwraca informacje dotyczące bieżącego zestawu wyników. Jeśli <xref:System.Data.DataTableReader>zawiera wiele wyników zestawów, można sprawdzić wartość `HasRows` właściwości natychmiast po wywołaniu metody <xref:System.Data.DataTableReader.NextResult%2A>metody w celu określenia, czy nowy zestaw wyników zawiera wiersze.</xref:System.Data.DataTableReader.NextResult%2A> </xref:System.Data.DataTableReader>       Użyj `HasRows` właściwości, aby uniknąć konieczności wywołania <xref:System.Data.DataTableReader.Read%2A>metody <xref:System.Data.DataTableReader>, jeśli nie ma żadnych wierszy w bieżącym zestawie wyników.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.Read%2A>"
  example:
  - "The following example fills two <xref:System.Data.DataTable> instances with data. The first <xref:System.Data.DataTable> contains one row, and the second contains no rows. The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the HasRows property of each before it makes the call to PrintData.  \n  \n [!code-cs[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/csharp/p-system.data.datatabler_1_1.cs)]\n [!code-vb[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_1_1.vb)]"
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Data.DataTableReader&quot;> </xref> zawiera jeden lub więcej wierszy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.HasRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę pobrania informacji dotyczących zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.IsClosed
  id: IsClosed
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Data.DataTableReader&quot;> </xref> jest zamknięty."
  remarks: "<xref:System.Data.DataTableReader.Close%2A>jest jedyną metodą i `IsClosed` i <xref:System.Data.DataTableReader.RecordsAffected%2A>są tylko właściwości, które są dostępne po <xref:System.Data.DataTableReader>został zamknięty.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.RecordsAffected%2A></xref:System.Data.DataTableReader.Close%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.Data.DataTableReader&quot;> </xref> zamknięte, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy kolumna zawiera nieistniejącą lub brak wartości."
  remarks: "Wywołanie tej metody, jeśli istnieją wartości null kolumny przed wywołaniem metody get typu (na przykład <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>i tak dalej), aby uniknąć zgłaszania błędu.</xref:System.Data.DataTableReader.GetChar%2A> </xref:System.Data.DataTableReader.GetByte%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_18_1.vb)]\n [!code-cs[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/csharp/m-system.data.datatabler_18_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Liczony od zera kolumny o liczbie porządkowej"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość określonej kolumny jest odpowiednikiem <xref href=&quot;System.DBNull&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsDBNull*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny w formacie native podanej liczby porządkowej kolumny."
  remarks: "To przeciążenie dla <xref:System.Data.DataTableReader.Item%2A>zachowuje się tak samo do <xref:System.Data.DataTableReader.GetValue%2A>metody.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>. The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.  \n  \n [!code-vb[DataWorks DataTableReader.Item#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.Item#1](~/add/codesnippet/csharp/p-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Numer porządkowy kolumny liczony od zera."
    return:
      type: System.Object
      description: "Wartość określonej kolumny w jego formatu macierzystego."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Przekazany Indeks wykraczał poza z zakresu od 0 do <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość określonej kolumny w formacie native otrzymuje nazwę kolumny."
  remarks: "Najpierw odbywa się wyszukiwanie z uwzględnieniem wielkości liter. Jeśli nie powiedzie się, zostanie przeprowadzona drugi wyszukiwania bez uwzględniania wielkości liter.       Ta metoda jest kana szerokość nie liter.       Ta wersja przeciążone <xref:System.Data.DataTableReader.Item%2A>odpowiada wywołaniem <xref:System.Data.DataTableReader.GetOrdinal%2A>metody, a następnie wywoływania <xref:System.Data.DataTableReader.GetValue%2A>— Metoda.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.GetOrdinal%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column. Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.  \n  \n [!code-vb[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/csharp/p-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Nazwa kolumny."
    return:
      type: System.Object
      description: "Wartość określonej kolumny w jego formatu macierzystego."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Określona nazwa nie jest prawidłową nazwę kolumny."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Została podjęta próba pobrania danych z usuniętym wierszu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.NextResult
  id: NextResult
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Przesuwa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> do następnego zestawu wyników, jeśli istnieje."
  remarks: "Używane do przetwarzania wiele wyników, które mogą być generowane przez utworzenie <xref:System.Data.DataTableReader>za pośrednictwem <xref:System.Data.DataSet>zawiera co najmniej dwie tabele lub tablicę, która zawiera co najmniej dwóch <xref:System.Data.DataTable>wystąpień.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTableReader>       Nowy <xref:System.Data.DataTableReader>jest ustawiony na pierwszego wyniku.</xref:System.Data.DataTableReader>"
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_9_1.vb)]\n [!code-cs[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/csharp/m-system.data.datatabler_9_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wystąpił inny zestaw wyników; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.NextResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nastąpiła próba do nawigacji w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.Read
  id: Read
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Przesuwa <xref href=&quot;System.Data.DataTableReader&quot;> </xref> do następnego rekordu."
  remarks: "To domyślne położenie <xref:System.Data.DataTableReader>przed pierwszy rekord.</xref:System.Data.DataTableReader> W związku z tym należy wywołać `Read` można uruchomić podczas uzyskiwania dostępu do żadnych danych."
  example:
  - "The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.Read#1](~/add/codesnippet/csharp/m-system.data.datatabler_12_1.cs)]\n [!code-vb[DataWorks DataTableReader.Read#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_12_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nowy wiersz do odczytania. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podjęto próbę odczytu lub uzyskać dostępu do kolumny w zamkniętej <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera liczbę wierszy, wstawiania, zmieniony lub usunięty przez wykonanie instrukcji SQL."
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "<xref href=&quot;System.Data.DataTableReader&quot;> </xref> Nie obsługuje tej właściwości oraz zawsze zwraca wartość 0."
  overload: System.Data.DataTableReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.Close
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
- uid: System.Data.DataTableReader.Depth
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableReader.FieldCount
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.DataTableReader.GetEnumerator
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
- uid: System.Data.DataTableReader.GetName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetSchemaTable
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
- uid: System.Data.DataTableReader.GetString(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
- uid: System.Data.DataTableReader.HasRows
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
- uid: System.Data.DataTableReader.Item(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
- uid: System.Data.DataTableReader.Item(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
- uid: System.Data.DataTableReader.NextResult
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
- uid: System.Data.DataTableReader.Read
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
- uid: System.Data.DataTableReader.RecordsAffected
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
- uid: System.Data.DataTableReader.#ctor*
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader
  nameWithType: DataTableReader.DataTableReader
- uid: System.Data.DataTableReader.Close*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close
  nameWithType: DataTableReader.Close
- uid: System.Data.DataTableReader.Depth*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
- uid: System.Data.DataTableReader.FieldCount*
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean
  nameWithType: DataTableReader.GetBoolean
- uid: System.Data.DataTableReader.GetByte*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte
  nameWithType: DataTableReader.GetByte
- uid: System.Data.DataTableReader.GetBytes*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes
  nameWithType: DataTableReader.GetBytes
- uid: System.Data.DataTableReader.GetChar*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar
  nameWithType: DataTableReader.GetChar
- uid: System.Data.DataTableReader.GetChars*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars
  nameWithType: DataTableReader.GetChars
- uid: System.Data.DataTableReader.GetDataTypeName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DataTableReader.GetDataTypeName
- uid: System.Data.DataTableReader.GetDateTime*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime
  nameWithType: DataTableReader.GetDateTime
- uid: System.Data.DataTableReader.GetDecimal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal
  nameWithType: DataTableReader.GetDecimal
- uid: System.Data.DataTableReader.GetDouble*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble
  nameWithType: DataTableReader.GetDouble
- uid: System.Data.DataTableReader.GetEnumerator*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DataTableReader.GetEnumerator
- uid: System.Data.DataTableReader.GetFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType
  nameWithType: DataTableReader.GetFieldType
- uid: System.Data.DataTableReader.GetFloat*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat
  nameWithType: DataTableReader.GetFloat
- uid: System.Data.DataTableReader.GetGuid*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid
  nameWithType: DataTableReader.GetGuid
- uid: System.Data.DataTableReader.GetInt16*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16
  nameWithType: DataTableReader.GetInt16
- uid: System.Data.DataTableReader.GetInt32*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32
  nameWithType: DataTableReader.GetInt32
- uid: System.Data.DataTableReader.GetInt64*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64
  nameWithType: DataTableReader.GetInt64
- uid: System.Data.DataTableReader.GetName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName
  nameWithType: DataTableReader.GetName
- uid: System.Data.DataTableReader.GetOrdinal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DataTableReader.GetOrdinal
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DataTableReader.GetProviderSpecificFieldType
- uid: System.Data.DataTableReader.GetProviderSpecificValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DataTableReader.GetProviderSpecificValue
- uid: System.Data.DataTableReader.GetProviderSpecificValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DataTableReader.GetProviderSpecificValues
- uid: System.Data.DataTableReader.GetSchemaTable*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DataTableReader.GetSchemaTable
- uid: System.Data.DataTableReader.GetString*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString
  nameWithType: DataTableReader.GetString
- uid: System.Data.DataTableReader.GetValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue
  nameWithType: DataTableReader.GetValue
- uid: System.Data.DataTableReader.GetValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues
  nameWithType: DataTableReader.GetValues
- uid: System.Data.DataTableReader.HasRows*
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull
  nameWithType: DataTableReader.IsDBNull
- uid: System.Data.DataTableReader.Item*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item
  nameWithType: DataTableReader.Item
- uid: System.Data.DataTableReader.NextResult*
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult
  nameWithType: DataTableReader.NextResult
- uid: System.Data.DataTableReader.Read*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read
  nameWithType: DataTableReader.Read
- uid: System.Data.DataTableReader.RecordsAffected*
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
