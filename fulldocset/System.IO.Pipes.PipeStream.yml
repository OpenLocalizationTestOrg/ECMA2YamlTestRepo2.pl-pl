### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  summary: "Przedstawia <xref:System.IO.Stream>obiekt wokół potok, który obsługuje potoki nazwane i anonimowe.</xref:System.IO.Stream>"
  remarks: "Klasa PipeStream udostępnia klasę podstawową dla operacji nazwane i anonimowe potoki w programie .NET Framework. Użyj <xref:System.IO.Pipes.NamedPipeServerStream>i <xref:System.IO.Pipes.NamedPipeClientStream>klasy dla operacji nazwanego potoku.</xref:System.IO.Pipes.NamedPipeClientStream> </xref:System.IO.Pipes.NamedPipeServerStream> Użyj <xref:System.IO.Pipes.AnonymousPipeServerStream>i <xref:System.IO.Pipes.AnonymousPipeClientStream>klasy dla operacje potokowe anonimowego.</xref:System.IO.Pipes.AnonymousPipeClientStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>       Aby uzyskać więcej informacji na temat potoków, zobacz [potoków](~/add/includes/ajax-current-ext-md.md). Na przykład potoków anonimowych zobacz [porady: użycie potoków anonimowych do lokalnej komunikacji międzyprocesowej](~/add/includes/ajax-current-ext-md.md). Na przykład nazwane potoki Zobacz [porady: użycie nazwanych potoków do sieciowej komunikacji międzyprocesowej](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> przy użyciu określonego <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> rozmiar wartość i buforu."
  remarks: "Ten konstruktor korzysta z trybu transmisji potoku <xref:System.IO.Pipes.PipeTransmissionMode>.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Jeden z <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> wartości, które wskazuje kierunek obiekt potoku."
    - id: bufferSize
      type: System.Int32
      description: "Dodatnią <xref:System.Int32>wartość większa niż lub równa 0, który wskazuje rozmiar buforu.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>nie jest prawidłową <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> wartości.       - lub - <code>bufferSize</code> jest mniejszy niż 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> przy użyciu określonego <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>, <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>, a rozmiar buforu."
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Jeden z <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> wartości, które wskazuje kierunek obiekt potoku."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Jeden z <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> wartości, które wskazuje tryb transmisji obiektu potoku."
    - id: outBufferSize
      type: System.Int32
      description: "Dodatnią <xref:System.Int32>wartość większa niż lub równa 0, który wskazuje rozmiar buforu.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>nie jest prawidłową <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> wartości.       - lub - <code>transmissionMode</code> nie jest prawidłową <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> wartości.       - lub - <code>bufferSize</code> jest mniejszy niż 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rozpoczyna operację asynchroniczną odczytu."
  remarks: "Przekaż zwróconego <xref:System.IAsyncResult>do obiektu <xref:System.IO.Pipes.PipeStream.EndRead%2A>metody ustalić liczbę bajtów zostały odczytane i zwolnić zasoby systemu operacyjnego używany do odczytu.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IAsyncResult> <xref:System.IO.Pipes.PipeStream.EndRead%2A>musi być wywołana raz dla każdego wywołania BeginRead.</xref:System.IO.Pipes.PipeStream.EndRead%2A> Można to zrobić w ten sam kod, który wywołuje BeginRead albo w wywołaniu zwrotnym są przekazywane do BeginRead.       Użyj <xref:System.IO.Pipes.PipeStream.CanRead%2A>Umożliwia określenie, czy bieżący <xref:System.IO.Pipes.PipeStream>operacje odczytu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Jeśli potok został zamknięty lub nieprawidłowy argument jest przekazywany do BeginRead, odpowiednich wyjątków pojawienia się natychmiast. Występuje błędów występujących podczas odczytu żądania asynchronicznego na wątku puli wątków, który wykonuje żądanie. Wyjątki są zgłaszane, gdy kod wywołuje <xref:System.IO.Pipes.PipeStream.EndRead%2A>metody.</xref:System.IO.Pipes.PipeStream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor do wczytania danych."
    - id: offset
      type: System.Int32
      description: "Przesunięcie bajtów w `buffer` w którym ma rozpocząć się odczyt."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do odczytania."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywoływana, gdy operacja odczytu asynchronicznego zostanie ukończona."
    - id: state
      type: System.Object
      description: "Obiekt dostarczane przez użytkownika, która odróżnia to asynchroniczne żądanie odczytu z innych żądań."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Odczytu obiektu, który odwołuje się do asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza niż 0.       - lub - <code>count</code> jest mniejszy niż 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>jest większa niż liczba bajtów dostępnych w <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji odczytu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok został odłączony, oczekiwanie na połączenie lub dojście nie zostało ustawione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rozpoczyna operację asynchronicznego zapisu."
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A>musi być wywołana raz dla każdego wywołania BeginWrite.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> Można to zrobić w ten sam kod, który wywołuje BeginWrite albo w wywołaniu zwrotnym są przekazywane do BeginWrite.       Użyj <xref:System.IO.Pipes.PipeStream.CanWrite%2A>Właściwości, aby określić, czy bieżący <xref:System.IO.Pipes.PipeStream>operacji zapisu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Jeśli potok został zamknięty lub nieprawidłowy argument jest przekazywany do BeginWrite, odpowiednich wyjątków pojawienia się natychmiast. Błędów występujących podczas żądania asynchronicznego zapisu są dokonywane na wątku puli wątków, który wykonuje żądanie. Wyjątki są zgłaszane, gdy kod wywołuje <xref:System.IO.Pipes.PipeStream.EndWrite%2A>metody.</xref:System.IO.Pipes.PipeStream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buforu, który zawiera dane do zapisania bieżącego strumienia."
    - id: offset
      type: System.Int32
      description: "Zerze przesunięcie w `buffer` jaką należy zacząć kopiowanie bajtów do bieżącego strumienia."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do zapisania."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda do wywołania po ukończeniu operacji zapis asynchroniczny."
    - id: state
      type: System.Object
      description: "Obiekt dostarczane przez użytkownika, która odróżnia to żądanie określonego zapis asynchroniczny od innych żądań."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt, który odwołuje się do operacji zapisu asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza niż 0.       - lub - <code>count</code> jest mniejszy niż 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>jest większa niż liczba bajtów dostępnych w <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji zapisu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok został odłączony, oczekiwanie na połączenie lub dojście nie zostało ustawione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera wartość wskazującą, czy bieżący strumień obsługuje operacji odczytu."
  remarks: "Jeśli <xref:System.IO.Pipes.PipeStream>obiekt jest zamknięty, ta właściwość zwraca `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obsługuje strumień odczytu operacje; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera wartość wskazującą, czy bieżący strumień obsługuje operacji szukania."
  remarks: "Jeśli <xref:System.IO.Pipes.PipeStream>obiekt jest zamknięty, ta właściwość zwraca `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera wartość wskazującą, czy bieżący strumień obsługuje operacji zapisu."
  remarks: "Jeśli <xref:System.IO.Pipes.PipeStream>obiekt jest zamknięty, ta właściwość zwraca `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku strumienia obsługuje operacje zapisu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Sprawdza, czy potoku jest w odpowiednim stanie do pobierania lub ustawiania właściwości."
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Sprawdza, czy potoku jest w stanie połączenia dla operacji odczytu."
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Sprawdza, czy potoku jest w stanie połączenia dla operacji zapisu."
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Ta metoda jest wywoływana przez metodę publiczną <xref:System.ComponentModel.Component.Dispose%2A>— Metoda i <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>wywołuje metodę Dispose chronionego z `disposing` ustawiono parametr `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>wywołuje metodę Dispose z `disposing` ustawioną `false`.</xref:System.Object.Finalize%2A> Jeśli parametr disposing jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.IO.Pipes.PipeStream>obiektu odwołania.</xref:System.IO.Pipes.PipeStream> Ta metoda wywołuje metodę Dispose dla każdego odwołuje się do obiektu."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Kończy się oczekujące żądanie odczytu asynchronicznego."
  remarks: "Ta metoda zwraca liczbę bajtów odczytanych do tablicy typu byte, określony przez wywołanie wcześniejszych <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Przekaż zwróconego <xref:System.IAsyncResult>w metodzie EndRead można wywołać, aby określić liczbę bajtów zostały odczytane i aby zwolnić zasoby systemu operacyjnego używany do odczytu.</xref:System.IAsyncResult> Funkcję EndRead można wywołać raz dla każdego wywołania <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Można to zrobić w ten sam kod, który wywołał <xref:System.IO.Pipes.PipeStream.BeginRead%2A>lub w wywołaniu zwrotnym, które są przekazywane do <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Użyj <xref:System.IO.Pipes.PipeStream.CanRead%2A>Umożliwia określenie, czy bieżący <xref:System.IO.Pipes.PipeStream>operacje odczytu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Jeśli potok został zamknięty lub nieprawidłowy argument jest przekazywany do <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, odpowiednich wyjątków pojawienia się natychmiast.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Występuje błędów występujących podczas odczytu żądania asynchronicznego na wątku puli wątków, który wykonuje żądanie. Wyjątki są zgłaszane, gdy kod wywołuje metodę EndRead można wywołać."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Odwołanie do oczekującego żądania asynchronicznego."
    return:
      type: System.Int32
      description: "Liczba bajtów, które zostały odczytane. Wartość zwracana 0 wskazuje koniec strumienia (potok został zamknięty)."
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie pochodzi z <xref:System.IO.Pipes.PipeStream.BeginRead*> metody dla bieżącej strumienia."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Strumień jest zamknięty lub wystąpił błąd wewnętrzny."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Kończy żądanie oczekującego zapisu asynchronicznego."
  remarks: "Metoda EndWrite musi być wywołana raz dla każdego wywołania <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Można to zrobić w ten sam kod, który wywołał <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>lub w wywołaniu zwrotnym, które są przekazywane do <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>       Użyj <xref:System.IO.Pipes.PipeStream.CanWrite%2A>Właściwości, aby określić, czy bieżący <xref:System.IO.Pipes.PipeStream>operacji zapisu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Jeśli potok został zamknięty lub nieprawidłowy argument jest przekazywany do <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, odpowiednich wyjątków pojawienia się natychmiast.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Błędów występujących podczas żądania asynchronicznego zapisu są dokonywane na wątku puli wątków, który wykonuje żądanie. Wyjątki są zgłaszane po kod wywołuje element EndWrite metody."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Odwołanie do oczekującego żądania asynchronicznego."
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie pochodzi z <xref:System.IO.Pipes.PipeStream.BeginWrite*> metody dla bieżącej strumienia."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Strumień jest zamknięty lub wystąpił błąd wewnętrzny."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Czyści bufor dla bieżącego strumienia i powoduje, że wszystkie buforowane dane są zapisywane w podstawowej urządzenia."
  remarks: "Metoda Flush nie jest obsługiwana w <xref:System.IO.Pipes.PipeStream>klasy i nie nic, gdy jest wywoływana.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji zapisu."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiekt hermetyzujący listę kontroli dostępu (ACL) wpisy kontroli dostępu dla potoku opisanego przez bieżący <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektu."
  remarks: 'Listy kontroli dostępu (ACL) w tym artykule opisano fizycznych i/lub grup, które ma lub ma prawa do wykonania określonych działań w określonym pliku. Aby uzyskać więcej informacji, zobacz [porady: Dodawanie lub usuwanie pozycji listy kontroli dostępu](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiekt hermetyzujący listę kontroli dostępu (ACL) wpisy kontroli dostępu dla potoku opisanego przez bieżący <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektu."
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Nie można wywołać podstawowej, można ustawić informacji o zabezpieczeniach."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie można wywołać podstawowej, można ustawić informacji o zabezpieczeniach."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nie można wywołać podstawowej, można ustawić informacji o zabezpieczeniach."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera rozmiar w bajtach buforu dla ruchu przychodzącego dla potoku."
  remarks: "Jeśli InBufferSize ma wartość 0, rozmiar buforu jest przydzielane w razie potrzeby."
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: "Wartość całkowitą reprezentującą rozmiar buforu dla ruchu przychodzącego, w bajtach."
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Strumień jest nie można go odczytać."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok oczekuje na połączenie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicjuje <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektu z określonego <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> obiektu."
  remarks: "Jeśli potoku jest w stanie połączenia, ta metoda określa również <xref:System.IO.Pipes.PipeStream.IsConnected%2A>właściwości `true`.</xref:System.IO.Pipes.PipeStream.IsConnected%2A>"
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "<xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> Potoku można zainicjować obiektu."
    - id: isExposed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby udostępnić dojście; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że dojście zostało otwarte asynchronicznie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można powiązać dojścia do potoku."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektów otwarto asynchronicznie lub synchronicznie."
  remarks: "Ta właściwość umożliwia kod, aby używał <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>Właściwości poprawnie.</xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektów otwarto asynchronicznie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiekt jest połączony."
  remarks: "Zwraca właściwości IsConnected `true` tylko wtedy, gdy <xref:System.IO.Pipes.PipeStream>obiekt jest połączony.</xref:System.IO.Pipes.PipeStream> Jeśli ta właściwość zwraca `false`, potoku może być oczekiwanie na połączenie, lub może być odłączony, zamknięte lub uszkodzony."
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiekt jest połączonych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera wartość wskazującą, czy dojścia do <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektu jest widoczna."
  remarks: "Wartość tej właściwości jest ustawiona podczas uzyskiwania dojścia do potoku, który jest hermetyzowany przez bieżące <xref:System.IO.Pipes.PipeStream>obiektu.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dojścia do <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiekt jest narażonych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera wartość wskazującą, czy komunikat zwrócony przez operację odczytu najnowszych jest więcej danych."
  remarks: "Ta właściwość ma zastosowanie jeśli potoku <xref:System.IO.Pipes.PipeStream.ReadMode%2A>właściwości ustawiono <xref:System.IO.Pipes.PipeTransmissionMode>przez wywołanie najnowszych <xref:System.IO.Pipes.PipeStream.Read%2A>lub <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.Read%2A> </xref:System.IO.Pipes.PipeTransmissionMode> </xref:System.IO.Pipes.PipeStream.ReadMode%2A>"
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nie są więcej znaki do odczytu w komunikacie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok nie jest połączony.       - lub - dojścia potoku nie została ustawiona.       - lub - potoku <xref:System.IO.Pipes.PipeStream.ReadMode*>wartość właściwości jest <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>.</xref:System.IO.Pipes.PipeStream.ReadMode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera długość strumienia, w bajtach."
  remarks: "<xref:System.IO.Pipes.PipeStream>Klasa nie obsługuje właściwości Length.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "0 we wszystkich przypadkach."
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera rozmiar w bajtach buforu ruchu wychodzącego dla potoku."
  remarks: "Jeśli OutBufferSize ma wartość 0, rozmiar buforu jest przydzielane w razie potrzeby."
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: "Rozmiar buforu ruchu wychodzącego w bajtach."
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Strumień jest nie do zapisania."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok oczekuje na połączenie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera lub ustawia bieżącą pozycję bieżącego strumienia."
  remarks: "<xref:System.IO.Pipes.PipeStream>Klasa nie obsługuje właściwości Position.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "0 we wszystkich przypadkach."
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Odczytuje blok bajtów ze strumienia i zapisuje dane w buforze określona."
  remarks: "Użyj <xref:System.IO.Pipes.PipeStream.CanRead%2A>Umożliwia określenie, czy bieżący <xref:System.IO.Pipes.PipeStream>operacje odczytu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Wywoływanie metody Read blokuje do `count` bajtów do odczytu lub osiągnięto koniec strumienia. Dla asynchronicznych operacji odczytu zobacz <xref:System.IO.Pipes.PipeStream.BeginRead%2A>i <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>"
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the Read method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cs[System.IO.Pipes.PipeStream#1](~/add/codesnippet/csharp/m-system.io.pipes.pipest_1.cs)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/add/codesnippet/visualbasic/m-system.io.pipes.pipest_1.vb)]\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/add/codesnippet/cpp/m-system.io.pipes.pipest_1.cpp)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Po powrocie z tej metody zawiera określonej tablicy bajtów z wartością pomiędzy `offset` i (`offset`  +  `count` - 1) zastępuje Bajty odczytane z bieżącego źródła."
    - id: offset
      type: System.Int32
      description: "Przesunięcie bajtów w `buffer` tablicy, w której zostaną umieszczone bajtów, które są do odczytu."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do odczytania."
    return:
      type: System.Int32
      description: "Całkowita liczba bajtów, które są do odczytu do <code> buffer </code>. Przyczyną może być mniejsza niż żądana liczba bajtów, jeśli podanej liczby bajtów nie jest obecnie dostępny, lub wpisz 0, gdy zostanie osiągnięty koniec strumienia."
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza niż 0.       - lub - <code>count</code> jest mniejszy niż 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>jest większa niż liczba bajtów dostępnych w <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji odczytu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok został odłączony, oczekiwanie na połączenie lub dojście nie zostało ustawione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd żadnych operacji We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Odczytuje bajt potoku."
  remarks: "Użyj <xref:System.IO.Pipes.PipeStream.CanRead%2A>Umożliwia określenie, czy bieżący <xref:System.IO.Pipes.PipeStream>operacje odczytu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Byte, rzutować <xref:System.Int32>, lub wartość -1 wskazuje koniec strumienia (potok został zamknięty).</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji odczytu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok został odłączony, oczekiwanie na połączenie lub dojście nie zostało ustawione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd żadnych operacji We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera lub ustawia tryb odczyt <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektu."
  remarks: "Potoki anonimowe nie obsługują <xref:System.IO.Pipes.PipeTransmissionMode>Tryb transmisję wiadomości.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Jeden z <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> wartości, które wskazuje sposób <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> odczytuje obiekt z potoku."
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość nie jest prawidłową <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> wartości."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Podana wartość nie jest obsługiwana <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> wartość dla tego strumienia potoku."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dojście nie została ustawiona.       - lub - potoku oczekuje na połączenie z nazwanym klienta."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potoku jest uszkodzony lub wystąpił błąd We/Wy z nazwanym klienta."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera bezpieczne dojście lokalnego końca potoku bieżącego <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> hermetyzuje obiektu."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "A <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> obiektu dla potoku, hermetyzowaną przez bieżące <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektu."
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie ustawiono dojścia potoku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ustawia bieżącą pozycję bieżącego strumienia z podaną wartością."
  remarks: "Metoda dostępu nie jest obsługiwana w potoków i zgłasza <xref:System.NotSupportedException>gdy jest wywoływana.</xref:System.NotSupportedException>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Punkt, względem `origin`, aby rozpocząć wyszukiwanie z."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Określa początek, końcu lub bieżącą pozycję jako punkt odniesienia dla `offset`, za pomocą wartości typu <xref:System.IO.SeekOrigin>.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Nowa pozycja w strumieniu."
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Stosuje listę kontroli dostępu (ACL) wpisów kontroli dostępu określone przez <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiektu do potoku określony przez bieżącą <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> obiektu."
  remarks: 'Listy kontroli dostępu (ACL) w tym artykule opisano fizycznych i/lub grup, które ma lub ma prawa do wykonania określonych działań w określonym pliku. Aby uzyskać więcej informacji, zobacz [porady: Dodawanie lub usuwanie pozycji listy kontroli dostępu](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> obiekt, który określa wpisu listę kontroli dostępu (ACL) kontroli dostępu do zastosowania do bieżącego potoku."
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Nie można wywołać podstawowej, można ustawić informacji o zabezpieczeniach."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie można wywołać podstawowej, można ustawić informacji o zabezpieczeniach."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nie można wywołać podstawowej, można ustawić informacji o zabezpieczeniach."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ustawia długość bieżący strumień do określonej wartości."
  remarks: "<xref:System.IO.Pipes.PipeStream>Klasa nie obsługuje metody SetLength.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Nowe długość strumienia."
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Pobiera tryb transmisji potoku obsługiwane przez bieżący potoku."
  remarks: "Potoki anonimowe nie obsługują <xref:System.IO.Pipes.PipeTransmissionMode>Tryb transmisję wiadomości.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Jeden z <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> wartości, które wskazuje tryb transmisji obsługiwane przez bieżący potoku."
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dojście nie została ustawiona.       - lub - potoku oczekuje na połączenie w przypadku operacji anonimowego klienta/serwera lub za pomocą klienta o nazwie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Czeka na drugim końcu potoku odczytywać wszystkie wysłane bajty."
  remarks: "Bloki metody WaitForPipeDrain, aż po drugiej stronie potoku zapoznał się, że wszystkie wysłane bajty."
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji zapisu."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Zapisuje bieżący strumień przy użyciu danych z bufora bloku bajtów."
  remarks: "Użyj <xref:System.IO.Pipes.PipeStream.CanWrite%2A>Właściwości, aby określić, czy bieżący <xref:System.IO.Pipes.PipeStream>operacji zapisu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Wywoływanie metody zapisu blokuje do `count` bajtów do odczytu lub osiągnięto koniec strumienia. Dla asynchronicznych operacji odczytu zobacz <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>i <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buforu, który zawiera dane do zapisania do potoku."
    - id: offset
      type: System.Int32
      description: "Zerze przesunięcie w `buffer` jaką należy zacząć kopiowanie bajtów do bieżącego strumienia."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do zapisania w strumieniu bieżącej."
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza niż 0.       - lub - <code>count</code> jest mniejszy niż 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>jest większa niż liczba bajtów dostępnych w <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji zapisu."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Zapisuje bieżący strumień bajtów."
  remarks: "Użyj <xref:System.IO.Pipes.PipeStream.CanWrite%2A>Właściwości, aby określić, czy bieżący <xref:System.IO.Pipes.PipeStream>operacji zapisu dla obiekt obsługuje.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Bajtów do zapisania w strumieniu."
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Potok jest zamknięty."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Potok nie obsługuje operacji zapisu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Potok został odłączony, oczekiwanie na połączenie lub dojście nie zostało ustawione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Potok jest uszkodzony lub wystąpił inny błąd We/Wy."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
