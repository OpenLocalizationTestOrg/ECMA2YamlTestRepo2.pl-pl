### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute
  id: InheritanceMappingAttribute
  children:
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  langs:
  - csharp
  name: InheritanceMappingAttribute
  nameWithType: InheritanceMappingAttribute
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute
  type: Class
  summary: "Mapuje w hierarchii dziedziczenia [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] aplikacji."
  remarks: "Jeden InheritanceMappingAttribute jest określona dla każdej klasy mapowane.       Należy pamiętać, że podczas mapowania hierarchii dziedziczenia: — wszystkie klasy w hierarchii musi być zamapowany na pojedynczą tabelę.      -Tabeli hierarchii dziedziczenia musi zostać zadeklarowany w mapowany typ, który znajduje się na szczycie hierarchii. Nie można określić atrybuty tabelę ani mapowanie w klasie pochodzącej z klasy top.      — Można użyć interfejsu w hierarchii, ale [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] nie jest zmapowany.      — Podczas mapowania klas, ale można wykonać zapytanie względem wyłącznie zamapowane klasy można pominąć klasy w hierarchii.       Dla materialization poprawne wartości kodów rozróżniacza muszą być unikatowe i są zgodne z wartościami w bazie danych. Wiersz z wartością kodu dyskryminatora, która jest dokładnie zgodny (nawet przez wielkość liter) tworzy wystąpienie klasy przy użyciu <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A>ustawioną `true`.</xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A>"
  example:
  - "This example shows inheritance mapping for a hierarchy where the top, mapped class (`Shape`) is abstract.  \n  \n [!code-cs[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/add/codesnippet/csharp/inherit/Program.cs#1)]\n [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/add/codesnippet/visualbasic/inherit/Module1.vb#1)]  \n  \n The following example shows the inclusion of unmapped classes. You can put unmapped classes anywhere in the hierarchy.  \n  \n [!code-cs[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/add/codesnippet/csharp/inherit/Program.cs#2)]\n [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/add/codesnippet/visualbasic/inherit/Module1.vb#2)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=false)]

      public sealed class InheritanceMappingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: InheritanceMappingAttribute()
  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute()
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.InheritanceMappingAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Linq.Mapping.InheritanceMappingAttribute&quot;> </xref> klasy."
  syntax:
    content: public InheritanceMappingAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  id: Code
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: Code
  nameWithType: InheritanceMappingAttribute.Code
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Pobiera lub ustawia wartość dyskryminatora kodu w do zamapowanej hierarchii dziedziczenia."
  syntax:
    content: public object Code { get; set; }
    return:
      type: System.Object
      description: "Musi być określone przez użytkownika. Brak wartości domyślnej."
  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  id: IsDefault
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: IsDefault
  nameWithType: InheritanceMappingAttribute.IsDefault
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Pobiera lub ustawia, czy wystąpienia obiektu tego typu w przypadku wartość dyskryminatora jest niezgodna z określoną wartość."
  remarks: "Dokładnie jeden z <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute>atrybutów musi być zadeklarowana z właściwością IsDefault jako `true`.</xref:System.Data.Linq.Mapping.InheritanceMappingAttribute>"
  syntax:
    content: public bool IsDefault { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  id: Type
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: Type
  nameWithType: InheritanceMappingAttribute.Type
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Pobiera lub ustawia typ klasy w hierarchii."
  remarks: "Użyj dowolnego typu nieabstrakcyjna w hierarchii dziedziczenia, w tym typu głównego."
  syntax:
    content: public Type Type { get; set; }
    return:
      type: System.Type
      description: "Musi być określone przez użytkownika. Brak wartości domyślnej."
  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: InheritanceMappingAttribute()
  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute()
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.InheritanceMappingAttribute()
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: Code
  nameWithType: InheritanceMappingAttribute.Code
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: IsDefault
  nameWithType: InheritanceMappingAttribute.IsDefault
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: Type
  nameWithType: InheritanceMappingAttribute.Type
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor*
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: InheritanceMappingAttribute
  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code*
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: Code
  nameWithType: InheritanceMappingAttribute.Code
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault*
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: IsDefault
  nameWithType: InheritanceMappingAttribute.IsDefault
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type*
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: Type
  nameWithType: InheritanceMappingAttribute.Type
