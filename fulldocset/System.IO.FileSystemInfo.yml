### YamlMime:ManagedReference
items:
- uid: System.IO.FileSystemInfo
  id: FileSystemInfo
  children:
  - System.IO.FileSystemInfo.#ctor
  - System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Delete
  - System.IO.FileSystemInfo.Exists
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.Name
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Refresh
  langs:
  - csharp
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: System.IO.FileSystemInfo
  type: Class
  summary: "Udostępnia klasę podstawową dla obu <xref href=&quot;System.IO.FileInfo&quot;> </xref> i <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> obiektów."
  remarks: "The FileSystemInfo class contains methods that are common to file and directory manipulation. A FileSystemInfo object can represent either a file or a directory, thus serving as the basis for <xref:System.IO.FileInfo> or <xref:System.IO.DirectoryInfo> objects. Use this base class when parsing a lot of files and directories.  \n  \n A derived class can inherit from FileSystemInfo only if the derived class has the AllAccess permission from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to loop through all the files and directories, querying some information about each entry.  \n  \n [!code-cs[FileSystemInfo#1](~/add/codesnippet/csharp/t-system.io.filesysteminfo_1.cs)]\n [!code-cpp[FileSystemInfo#1](~/add/codesnippet/cpp/t-system.io.filesysteminfo_1.cpp)]\n [!code-vb[FileSystemInfo#1](~/add/codesnippet/visualbasic/t-system.io.filesysteminfo_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class FileSystemInfo : MarshalByRefObject, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.FileSystemInfo.#ctor
  id: '#ctor'
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FileSystemInfo()
  nameWithType: FileSystemInfo.FileSystemInfo()
  fullName: System.IO.FileSystemInfo.FileSystemInfo()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref> klasy."
  remarks: "Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected FileSystemInfo ();
    parameters: []
  overload: System.IO.FileSystemInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FileSystemInfo(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref> z zserializowanymi danymi."
  remarks: "Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected FileSystemInfo (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>Zawierający informacje kontekstowe dotyczące źródła lub miejsca docelowego.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IO.FileSystemInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Określony <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> ma wartość null."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Attributes
  id: Attributes
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
  fullName: System.IO.FileSystemInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera lub ustawia atrybuty dla bieżącego pliku lub katalogu."
  remarks: "Wartość właściwości atrybutów jest wstępnie pamięci podręcznej, jeśli bieżące wystąpienie klasy <xref:System.IO.FileSystemInfo>Obiekt zwrócony od następujących <xref:System.IO.DirectoryInfo>metody:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>— <xref:System.IO.DirectoryInfo.GetFiles%2A>— <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>— <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>— <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>— <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>Aby uzyskać najnowszą wartość, należy wywołać <xref:System.IO.FileSystemInfo.Refresh%2A>— Metoda.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       Wartość tej właściwości jest kombinacją archiwum skompresowany, katalogu ukryte, system w trybie offline, tylko do odczytu i flagi atrybutów pliku tymczasowego.       Po ustawieniu tej wartości można użyć bitowego operatora OR (`|` w języku C# lub `Or` w języku Visual Basic), aby zastosować więcej niż jedną wartość. Aby zachować wszystkie istniejące wartości właściwości atrybutów, obejmują wartości właściwości atrybutów przypisania. Na przykład:`exampleFile.Attributes = exampleFile.Attributes | FileAttributes.ReadOnly;`"
  example:
  - "The following example demonstrates the Attributes property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_3_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_3_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_3_1.vb)]"
  syntax:
    content: public System.IO.FileAttributes Attributes { get; set; }
    return:
      type: System.IO.FileAttributes
      description: "<xref href=&quot;System.IO.FileAttributes&quot;></xref>bieżącego <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref>."
  overload: System.IO.FileSystemInfo.Attributes*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Określony plik nie istnieje."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Określona ścieżka jest nieprawidłowa; na przykład jest on mapowany dysk."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Obiekt wywołujący podejmuje próbę ustawienia nieprawidłowy atrybut pliku.       - lub - użytkownik próbuje ustawić wartość atrybutu, ale nie ma uprawnień do zapisu."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Nie można zainicjować danych.</xref:System.IO.FileSystemInfo.Refresh*>"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.CreationTime
  id: CreationTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera lub ustawia czas utworzenia bieżącego pliku lub katalogu."
  remarks: "**Uwaga** ta metoda może zwracać wartość niedokładne, ponieważ używa funkcji natywnych, których wartości nie może być stale aktualizowany przez system operacyjny.       Wartość właściwości CreationTime jest wstępnie pamięci podręcznej, jeśli bieżące wystąpienie klasy <xref:System.IO.FileSystemInfo>Obiekt zwrócony od następujących <xref:System.IO.DirectoryInfo>metody:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>— <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>— <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>— <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>— <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>Aby uzyskać najnowszą wartość, należy wywołać <xref:System.IO.FileSystemInfo.Refresh%2A>— Metoda.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       Jeśli plik opisanego w <xref:System.IO.FileSystemInfo>obiekt nie istnieje, to właściwość zostanie zwracany 12:00, a 1 stycznia, 1601 r. N.E.</xref:System.IO.FileSystemInfo> (R) Uniwersalny czas koordynowany (UTC), dostosowane na czas lokalny.       Dysków NTFS może buforować meta-informacje o pliku, takie jak czas utworzenia pliku, w krótkim okresie czasu. Ten proces jest nazywany tunelowania pliku. W związku z tym może być konieczne jawnie ustawiona godzina utworzenia pliku, zastępowanie lub zastąpienie istniejącego pliku.       Wartość tej właściwości jest `null` Jeśli plik zawierający system <xref:System.IO.FileSystemInfo>obiekt nie obsługuje te informacje.</xref:System.IO.FileSystemInfo>"
  example:
  - "The following example demonstrates the CreationTime property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_4_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_4_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_4_1.vb)]"
  syntax:
    content: public DateTime CreationTime { get; set; }
    return:
      type: System.DateTime
      description: "Data i godzina utworzenia bieżącego <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref> obiektu."
  overload: System.IO.FileSystemInfo.CreationTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Nie można zainicjować danych.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Określona ścieżka jest nieprawidłowa; na przykład jest on mapowany dysk."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest częścią systemu Windows NT lub nowszego."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obiekt wywołujący próbuje ustawić czas utworzenia nieprawidłowy."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  id: CreationTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera lub ustawia czas utworzenia w uniwersalnego czasu koordynowanego (UTC), bieżący plik lub katalog."
  remarks: "**Uwaga** ta metoda może zwracać wartość niedokładne, ponieważ używa funkcji natywnych, których wartości nie może być stale aktualizowany przez system operacyjny.       Wartość właściwości CreationTimeUtc jest wstępnie pamięci podręcznej, jeśli bieżące wystąpienie klasy <xref:System.IO.FileSystemInfo>Obiekt zwrócony z następujących <xref:System.IO.DirectoryInfo>metody:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>— <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>— <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>— <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>Aby uzyskać najnowszą wartość, należy wywołać <xref:System.IO.FileSystemInfo.Refresh%2A>— Metoda.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       Jeśli plik opisanego w <xref:System.IO.FileSystemInfo>obiekt nie istnieje, to właściwość zostanie zwracany 12:00, a 1 stycznia, 1601 r. N.E.</xref:System.IO.FileSystemInfo> (R) Uniwersalny czas koordynowany (UTC).       Dysków NTFS może buforować meta-informacje o pliku, takie jak czas utworzenia pliku, w krótkim okresie czasu. Ten proces jest nazywany tunelowania pliku. W związku z tym może być konieczne jawnie ustawiona godzina utworzenia pliku, zastępowanie lub zastąpienie istniejącego pliku.       Wartość tej właściwości jest `null` Jeśli plik zawierający system <xref:System.IO.FileSystemInfo>obiekt nie obsługuje te informacje.</xref:System.IO.FileSystemInfo>"
  syntax:
    content: public DateTime CreationTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "Daty i godziny w formacie UTC bieżącego <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref> obiektu."
  overload: System.IO.FileSystemInfo.CreationTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Nie można zainicjować danych.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Określona ścieżka jest nieprawidłowa; na przykład jest on mapowany dysk."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest częścią systemu Windows NT lub nowszego."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obiekt wywołujący podejmuje próbę ustawienia nieprawidłowy czas dostępu."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Delete
  id: Delete
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Delete()
  nameWithType: FileSystemInfo.Delete()
  fullName: System.IO.FileSystemInfo.Delete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Usuwa plik lub katalog."
  syntax:
    content: public abstract void Delete ();
    parameters: []
  overload: System.IO.FileSystemInfo.Delete*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Określona ścieżka jest nieprawidłowa; na przykład jest on mapowany dysk."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'Jest otwarte dojście do pliku lub katalogu, a systemu operacyjnego Windows XP lub starszym. Ta otwarte dojście może wynikać z wyliczanie katalogów i plików. Aby uzyskać więcej informacji, zobacz [jak: Wyliczanie katalogów i plików](~/add/includes/ajax-current-ext-md.md).'
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Exists
  id: Exists
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Exists
  nameWithType: FileSystemInfo.Exists
  fullName: System.IO.FileSystemInfo.Exists
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera wartość wskazującą, czy istnieje plik lub katalog."
  remarks: "Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public abstract bool Exists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli plik lub katalog istnieje; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.FileSystemInfo.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Extension
  id: Extension
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Extension
  nameWithType: FileSystemInfo.Extension
  fullName: System.IO.FileSystemInfo.Extension
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera ciąg reprezentujący część rozszerzenia pliku."
  remarks: "The `Extension` property returns the <xref:System.IO.FileSystemInfo> extension, including the period (.). For example, for a file c:\\NewFile.txt, this property returns \".txt\".  \n  \n The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/add/includes/ajax-current-ext-md.md)|  \n|Write to a text file.|[How to: Write Text to a File](../Topic/How%20to:%20Write%20Text%20to%20a%20File.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/add/includes/ajax-current-ext-md.md)|  \n|Retrieve the fully qualified path of a file.|<xref:System.IO.Path.GetFullPath%2A>|  \n|Retrieve only the file name a path.|<xref:System.IO.Path.GetFileNameWithoutExtension%2A>|  \n|Retrieve only the directory name from a path.|<xref:System.IO.Path.GetDirectoryName%2A>|  \n|Change the extension of a file.|<xref:System.IO.Path.ChangeExtension%2A>|"
  syntax:
    content: public string Extension { get; }
    return:
      type: System.String
      description: "Ciąg zawierający <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref> rozszerzenia."
  overload: System.IO.FileSystemInfo.Extension*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.FullName
  id: FullName
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FullName
  nameWithType: FileSystemInfo.FullName
  fullName: System.IO.FileSystemInfo.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera pełną ścieżkę pliku lub katalogu."
  remarks: "For example, for a file c:\\NewFile.txt, this property returns \"c:\\NewFile.txt\".  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the FullName property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_0_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_0_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_0_1.vb)]"
  syntax:
    content: public virtual string FullName { get; }
    return:
      type: System.String
      description: "Ciąg zawierający pełną ścieżkę."
  overload: System.IO.FileSystemInfo.FullName*
  exceptions:
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "W pełni kwalifikowana nazwa i ścieżka pliku jest 260 znaków."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.FullPath
  id: FullPath
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FullPath
  nameWithType: FileSystemInfo.FullPath
  fullName: System.IO.FileSystemInfo.FullPath
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Reprezentuje pełną ścieżkę pliku lub katalogu."
  syntax:
    content: protected string FullPath;
    return:
      type: System.String
      description: "Do dodania."
  exceptions:
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Pełna ścieżka jest 260 znaków."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ustawia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> obiektu z nazwą pliku oraz dodatkowe informacje o wyjątku."
  remarks: "Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>Zawierający informacje kontekstowe dotyczące źródła lub miejsca docelowego.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IO.FileSystemInfo.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastAccessTime
  id: LastAccessTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera lub ustawia czas ostatniego udostępnienia do bieżącego pliku lub katalogu."
  remarks: "**Uwaga** ta metoda może zwracać wartość niedokładne, ponieważ używa funkcji natywnych, których wartości nie może być stale aktualizowany przez system operacyjny.       Jeśli plik opisanego w <xref:System.IO.FileSystemInfo>obiekt nie istnieje, to właściwość zostanie zwracany 12:00, a 1 stycznia, 1601 r. N.E.</xref:System.IO.FileSystemInfo> (R) Uniwersalny czas koordynowany (UTC), dostosowane na czas lokalny.       Wartość <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>właściwość jest wstępnie pamięci podręcznej, jeśli bieżące wystąpienie klasy <xref:System.IO.FileSystemInfo>Obiekt zwrócony od następujących <xref:System.IO.DirectoryInfo>metody:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>— <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>— <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>— <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>— <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>Aby uzyskać najnowszą wartość, należy wywołać <xref:System.IO.FileSystemInfo.Refresh%2A>— Metoda.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo> </xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>"
  example:
  - "The following code example demonstrates the updating of the LastAccessTime property through a \"touch\" operation. In this example, the file is \"touched\", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, LastAccessTime and <xref:System.IO.FileSystemInfo.LastWriteTime%2A> properties to the current date and time.  \n  \n [!code-cs[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/csharp/p-system.io.filesystemin_2_1.cs)]\n [!code-vb[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/visualbasic/p-system.io.filesystemin_2_1.vb)]"
  syntax:
    content: public DateTime LastAccessTime { get; set; }
    return:
      type: System.DateTime
      description: "Bieżący plik lub katalog jest czas ostatniego uzyskania dostępu do."
  overload: System.IO.FileSystemInfo.LastAccessTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Nie można zainicjować danych.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest częścią systemu Windows NT lub nowszego."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obiekt wywołujący próbuje ustawić nieprawidłowy czas dostępu"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  id: LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera lub ustawia czas skoordynowany czas uniwersalny (UTC), że bieżący plik lub katalog nastąpił ostatni dostęp do."
  remarks: "**Uwaga** ta metoda może zwracać wartość niedokładne, ponieważ używa funkcji natywnych, których wartości nie może być stale aktualizowany przez system operacyjny.       Wartość właściwości LastAccessTimeUtc jest wstępnie pamięci podręcznej, jeśli bieżące wystąpienie klasy <xref:System.IO.FileSystemInfo>Obiekt zwrócony z następujących <xref:System.IO.DirectoryInfo>metody:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>— <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>— <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>— <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>Aby uzyskać najnowszą wartość, należy wywołać <xref:System.IO.FileSystemInfo.Refresh%2A>— Metoda.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       Jeśli plik opisanego w <xref:System.IO.FileSystemInfo>obiekt nie istnieje, to właściwość zostanie zwracany 12:00, a 1 stycznia, 1601 r. N.E.</xref:System.IO.FileSystemInfo> (R) Uniwersalny czas koordynowany (UTC).       Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public DateTime LastAccessTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "Ostatni dostęp do czasu UTC, który był bieżącego pliku lub katalogu."
  overload: System.IO.FileSystemInfo.LastAccessTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Nie można zainicjować danych.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest częścią systemu Windows NT lub nowszego."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obiekt wywołujący podejmuje próbę ustawienia nieprawidłowy czas dostępu."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastWriteTime
  id: LastWriteTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera lub ustawia czas, gdy bieżący plik lub katalog ostatnio zapisano do."
  remarks: "**Uwaga** ta metoda może zwracać wartość niedokładne, ponieważ używa funkcji natywnych, których wartości nie może być stale aktualizowany przez system operacyjny.       Wartość właściwości LastWriteTime jest wstępnie pamięci podręcznej, jeśli bieżące wystąpienie klasy <xref:System.IO.FileSystemInfo>Obiekt zwrócony z następujących <xref:System.IO.DirectoryInfo>metody:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>— <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>— <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>— <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>Aby uzyskać najnowszą wartość, należy wywołać <xref:System.IO.FileSystemInfo.Refresh%2A>— Metoda.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       Jeśli plik opisanego w <xref:System.IO.FileSystemInfo>obiekt nie istnieje, to właściwość zostanie zwracany 12:00, a 1 stycznia, 1601 r. N.E.</xref:System.IO.FileSystemInfo> (R) Uniwersalny czas koordynowany (UTC), dostosowane na czas lokalny.       Wartość tej właściwości jest `null` Jeśli system plików z plikiem nie obsługuje te informacje."
  example:
  - "The following code example demonstrates the updating of the LastWriteTime property through a \"touch\" operation. In this example, the file is \"touched\", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> and LastWriteTime properties to the current date and time.  \n  \n [!code-cs[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/csharp/p-system.io.filesystemin_1_1.cs)]\n [!code-vb[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/visualbasic/p-system.io.filesystemin_1_1.vb)]"
  syntax:
    content: public DateTime LastWriteTime { get; set; }
    return:
      type: System.DateTime
      description: "Czas ostatniego zapisania bieżącego pliku."
  overload: System.IO.FileSystemInfo.LastWriteTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Nie można zainicjować danych.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest częścią systemu Windows NT lub nowszego."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obiekt wywołujący próbuje ustawić czas nieprawidłowy zapis."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  id: LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera lub ustawia czas skoordynowany czas uniwersalny (UTC), gdy bieżący plik lub katalog został ostatnio zapisany w."
  remarks: "**Uwaga** ta metoda może zwracać wartość niedokładne, ponieważ używa funkcji natywnych, których wartości nie może być stale aktualizowany przez system operacyjny.       Wartość właściwości LastWriteTimeUtc jest wstępnie pamięci podręcznej, jeśli bieżące wystąpienie klasy <xref:System.IO.FileSystemInfo>Obiekt zwrócony od następujących <xref:System.IO.DirectoryInfo>metody:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>— <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>— <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>— <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>— <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>Aby uzyskać najnowszą wartość, należy wywołać <xref:System.IO.FileSystemInfo.Refresh%2A>— Metoda.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileSystemInfo>       Jeśli plik opisanego w <xref:System.IO.FileSystemInfo>obiekt nie istnieje, to właściwość zostanie zwracany 12:00, a 1 stycznia, 1601 r. N.E.</xref:System.IO.FileSystemInfo> (R) Uniwersalny czas koordynowany (UTC).       Wartość tej właściwości jest `null` Jeśli system plików z plikiem nie obsługuje te informacje."
  syntax:
    content: public DateTime LastWriteTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "Czas UTC, kiedy bieżący plik ostatnio zostało zapisane."
  overload: System.IO.FileSystemInfo.LastWriteTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Nie można zainicjować danych.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest częścią systemu Windows NT lub nowszego."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Obiekt wywołujący próbuje ustawić czas nieprawidłowy zapis."
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Name
  id: Name
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Name
  nameWithType: FileSystemInfo.Name
  fullName: System.IO.FileSystemInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Pobiera nazwę pliku dla plików. Katalogi pobiera nazwę katalogu ostatniego w hierarchii, jeśli istnieje hierarchia. W przeciwnym razie <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> właściwości pobiera nazwę katalogu."
  remarks: "For a directory, `Name` returns only the name of the parent directory, such as Dir, not c:\\Dir. For a subdirectory, `Name` returns only the name of the subdirectory, such as Sub1, not c:\\Dir\\Sub1.  \n  \n For a file, `Name` returns only the file name and file name extension, such as MyFile.txt, not c:\\Dir\\Myfile.txt."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "Ciąg, który jest nazwa katalogu nadrzędnego, nazwę ostatniego katalogu w hierarchii lub nazwę pliku, łącznie z rozszerzeniem nazwy pliku."
  overload: System.IO.FileSystemInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.OriginalPath
  id: OriginalPath
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: OriginalPath
  nameWithType: FileSystemInfo.OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ścieżka określona pierwotnie przez użytkownika, czy względną lub bezwzględną."
  remarks: "Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected string OriginalPath;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Refresh
  id: Refresh
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Refresh()
  nameWithType: FileSystemInfo.Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Odświeża stan obiektu."
  remarks: "`FileSystemInfo.Refresh`tworzy migawkę pliku z bieżącego systemu plików. `Refresh`Nie można rozwiązać źródłowy system plików, nawet wtedy, gdy system plików zwraca niepoprawne lub nieaktualne informacje. Może to nastąpić na platformach, na przykład Windows 98.       Wywołania muszą zostać wprowadzone w `Refresh` przed próby pobrania informacji o atrybutów lub informacje będą nieaktualne."
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.IO.FileSystemInfo.Refresh*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Urządzenia, takie jak dysk nie jest gotowa."
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.FileSystemInfo.#ctor
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo()
  nameWithType: FileSystemInfo.FileSystemInfo()
  fullName: System.IO.FileSystemInfo.FileSystemInfo()
- uid: System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.FileSystemInfo.Attributes
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
  fullName: System.IO.FileSystemInfo.Attributes
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.FileSystemInfo.CreationTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
- uid: System.IO.FileSystemInfo.Delete
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Delete()
  nameWithType: FileSystemInfo.Delete()
  fullName: System.IO.FileSystemInfo.Delete()
- uid: System.IO.FileSystemInfo.Exists
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Exists
  nameWithType: FileSystemInfo.Exists
  fullName: System.IO.FileSystemInfo.Exists
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.FileSystemInfo.Extension
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Extension
  nameWithType: FileSystemInfo.Extension
  fullName: System.IO.FileSystemInfo.Extension
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileSystemInfo.FullName
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfo.FullName
  fullName: System.IO.FileSystemInfo.FullName
- uid: System.IO.FileSystemInfo.FullPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullPath
  nameWithType: FileSystemInfo.FullPath
  fullName: System.IO.FileSystemInfo.FullPath
- uid: System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.IO.FileSystemInfo.LastAccessTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
- uid: System.IO.FileSystemInfo.LastWriteTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
- uid: System.IO.FileSystemInfo.Name
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Name
  nameWithType: FileSystemInfo.Name
  fullName: System.IO.FileSystemInfo.Name
- uid: System.IO.FileSystemInfo.OriginalPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: OriginalPath
  nameWithType: FileSystemInfo.OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
- uid: System.IO.FileSystemInfo.Refresh
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Refresh()
  nameWithType: FileSystemInfo.Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
- uid: System.IO.FileSystemInfo.#ctor*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo
  nameWithType: FileSystemInfo.FileSystemInfo
- uid: System.IO.FileSystemInfo.Attributes*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
- uid: System.IO.FileSystemInfo.CreationTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
- uid: System.IO.FileSystemInfo.CreationTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
- uid: System.IO.FileSystemInfo.Delete*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Delete
  nameWithType: FileSystemInfo.Delete
- uid: System.IO.FileSystemInfo.Exists*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Exists
  nameWithType: FileSystemInfo.Exists
- uid: System.IO.FileSystemInfo.Extension*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Extension
  nameWithType: FileSystemInfo.Extension
- uid: System.IO.FileSystemInfo.FullName*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfo.FullName
- uid: System.IO.FileSystemInfo.GetObjectData*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: GetObjectData
  nameWithType: FileSystemInfo.GetObjectData
- uid: System.IO.FileSystemInfo.LastAccessTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
- uid: System.IO.FileSystemInfo.LastWriteTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
- uid: System.IO.FileSystemInfo.Name*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Name
  nameWithType: FileSystemInfo.Name
- uid: System.IO.FileSystemInfo.Refresh*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Refresh
  nameWithType: FileSystemInfo.Refresh
