### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicFilterExpression
  id: DynamicFilterExpression
  children:
  - System.Web.DynamicData.DynamicFilterExpression.#ctor
  - System.Web.DynamicData.DynamicFilterExpression.ControlID
  - System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  langs:
  - csharp
  name: DynamicFilterExpression
  nameWithType: DynamicFilterExpression
  fullName: System.Web.DynamicData.DynamicFilterExpression
  type: Class
  summary: "Modyfikuje zapytania do bazy danych przy użyciu wartości z określonego filtru formantu."
  remarks: "Klasa DynamicFilterExpression umożliwia modyfikację zapytania do bazy danych przy użyciu wartości, które są przypisane w <xref:System.Web.DynamicData.DynamicFilter>kontroli.</xref:System.Web.DynamicData.DynamicFilter> Ten formant deleguje zadanie budowania <xref:System.Linq.IQueryable>zapytania do formantu specjalne takie jak <xref:System.Web.DynamicData.QueryableFilterRepeater>kontroli lub <xref:System.Web.DynamicData.DynamicFilter>kontroli.</xref:System.Web.DynamicData.DynamicFilter> </xref:System.Web.DynamicData.QueryableFilterRepeater> </xref:System.Linq.IQueryable>       Formanty filtru delegować z kolei budynku zapytania do szablonu filtru, które odwołują się do. Następnie wykonać zapytanie przez formant źródła danych, do której odwołuje się <xref:System.Web.UI.WebControls.QueryExtender>kontroli.</xref:System.Web.UI.WebControls.QueryExtender>       Aby używać klasy DynamicFilterExpression na stronie, wykonaj następujące kroki:-Dodaj <xref:System.Web.UI.WebControls.QueryExtender>formantu do strony.</xref:System.Web.UI.WebControls.QueryExtender>      -Ustawienia `TargetControlID` właściwość <xref:System.Web.UI.WebControls.QueryExtender>formantu, aby odwołać formantu źródła danych.</xref:System.Web.UI.WebControls.QueryExtender>      -Dodaj jako element podrzędny obiektu DynamicFilterExpression <xref:System.Web.UI.WebControls.QueryExtender>kontroli.</xref:System.Web.UI.WebControls.QueryExtender>      -Ustawienia `ControlID` właściwości obiektu DynamicFilterExpression, aby odwołać formant filtru.       W poprzednich krokach przyjęto, że filtr powiązanych formantów, formanty powiązane z danymi i kontroli źródła danych są zdefiniowane na stronie."
  example:
  - "The following example shows how to use the DynamicFilterExpression control to select a filter template in a page. The filter template is selected by the <xref:System.Web.DynamicData.DynamicFilter> control that is identified by DynamicFilterExpression control through its `ControID` property.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\"   \n    TargetControlID=\"GridDataSource\" runat=\"server\">  \n    <asp:DynamicFilterExpression ControlID=\"CategoryFilterID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: 'public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: DynamicFilterExpression()
  nameWithType: DynamicFilterExpression.DynamicFilterExpression()
  fullName: System.Web.DynamicData.DynamicFilterExpression.DynamicFilterExpression()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> klasy."
  syntax:
    content: public DynamicFilterExpression ();
    parameters: []
  overload: System.Web.DynamicData.DynamicFilterExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID
  id: ControlID
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
  fullName: System.Web.DynamicData.DynamicFilterExpression.ControlID
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia identyfikator formantu filtru."
  remarks: "Ten identyfikator formantu jest używany przez <xref:System.Web.DynamicData.DynamicFilterExpression>klasy, aby wybrać filtr kontroli, których deleguje zadania tworzenia zapytania, który z kolei jest wykonywana przez formant źródła danych.</xref:System.Web.DynamicData.DynamicFilterExpression>       Formant filtru deleguje zadania tworzenia zapytania do szablonu filtru on odwołania. Następnie wykonać zapytanie przez formant źródła danych, do której odwołuje się <xref:System.Web.UI.WebControls.QueryExtender>kontroli.</xref:System.Web.UI.WebControls.QueryExtender>"
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.DynamicFilterExpression> class to select a filter control in a page.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\"   \n    TargetControlID=\"GridDataSource\" runat=\"server\">  \n    <asp:DynamicFilterExpression ControlID=\"CategoryFilterID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "Identyfikator formantu filtru."
  overload: System.Web.DynamicData.DynamicFilterExpression.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: DynamicFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera zmodyfikowane zapytanie przy użyciu bieżącej wartości filtru."
  remarks: "Metoda GetQueryable deleguje zadania tworzenia zapytania do szablonu filtru odwołuje się formant filtru, który jest określony przez <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A>Właściwości.</xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "Źródła danych zapytania można zmodyfikować."
    return:
      type: System.Linq.IQueryable
      description: "Zapytania źródła danych, które jest modyfikowany przez przy użyciu bieżącej wartości, który jest zawarty w <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> wystąpienia."
  overload: System.Web.DynamicData.DynamicFilterExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje wyrażenia informacje o źródle danych."
  syntax:
    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "Formant zawierający <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> wystąpienia, takich jak <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> formantu."
    - id: context
      type: System.Web.HttpContext
      description: "Bieżący <xref href=&quot;System.Web.HttpContext&quot;> </xref> obiektu."
    - id: dataSource
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "Źródło danych docelowych dla <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> wystąpienia."
  overload: System.Web.DynamicData.DynamicFilterExpression.SetContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: DynamicFilterExpression()
  nameWithType: DynamicFilterExpression.DynamicFilterExpression()
  fullName: System.Web.DynamicData.DynamicFilterExpression.DynamicFilterExpression()
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
  fullName: System.Web.DynamicData.DynamicFilterExpression.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: DynamicFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: DynamicFilterExpression
  nameWithType: DynamicFilterExpression.DynamicFilterExpression
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: GetQueryable
  nameWithType: DynamicFilterExpression.GetQueryable
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: SetContext
  nameWithType: DynamicFilterExpression.SetContext
