### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  id: ECDiffieHellmanKeyDerivationFunction
  children:
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  langs:
  - csharp
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  type: Enum
  summary: "Określa funkcja wyprowadzania klucza, który <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> klasy użyje Aby przekonwertować materiału klucza tajnego umowy."
  remarks: "Wyliczenie ECDiffieHellmanKeyDerivationFunction definiuje typ algorytmu, który będzie używany do transformacji raw tajnej umowy do materiału klucza. Tajnej umowy jest wartość, która jest generowana z kluczem prywatnym i klucz publiczny innych firm, w ramach wymiany kluczy. Jest to wartość inicjatora dla materiału klucza, który jest generowany przez <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>metody.</xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>       <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>Właściwość używa tego wyliczenia można pobrać funkcja wyprowadzania klucza dla <xref:System.Security.Cryptography.ECDiffieHellmanCng>klasy.</xref:System.Security.Cryptography.ECDiffieHellmanCng> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>"
  syntax:
    content: public enum ECDiffieHellmanKeyDerivationFunction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  id: Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Algorytm wyznaczania wartości skrótu służy do generowania materiału klucza. <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*>Właściwość określa nazwę algorytmu do użycia.</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> Jeśli nie zostanie określona nazwa algorytmu, <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> jest używany jako domyślny algorytm."
  remarks: "Można również określić <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>i <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>Właściwości, ale nie są wymagane.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       Ilość materiału klucza, który jest generowany jest odpowiednikiem rozmiar wartość określony algorytm wyznaczania wartości skrótu."
  syntax:
    content: Hash
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  id: Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Algorytm wyznaczania wartości skrótu na podstawie kodu (metoda HMAC Message Authentication) służy do generowania materiału klucza. <> </> *> Właściwość określa klucz do użycia. Albo ta właściwość musi być ustawiona lub <> </> *> musi mieć ustawioną właściwość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; w przeciwnym razie <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> jest generowany, gdy używasz Hmac. Jeśli ustawiono obie właściwości, tajnej umowy jest używany jako klucz HMAC."
  remarks: "Można również określić <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>i <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>Właściwości, ale nie są wymagane.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       Ilość materiału klucza, który jest generowany jest odpowiednikiem rozmiar wartości HMAC."
  syntax:
    content: Hmac
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  id: Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Protokół zabezpieczeń TLS (Transport Layer) jest używany do generowania materiału klucza. <> </> *> I <> </> *> właściwości muszą być ustawione; w przeciwnym razie <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> jest generowany, gdy używasz protokołu Tls."
  remarks: "Ta wartość generuje 160 bitów materiału klucza."
  syntax:
    content: Tls
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
