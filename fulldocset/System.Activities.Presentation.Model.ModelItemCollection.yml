### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.ModelItemCollection
  id: ModelItemCollection
  children:
  - System.Activities.Presentation.Model.ModelItemCollection.#ctor
  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.Clear
  - System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.Count
  - System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  - System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  - System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  - System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  - System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  - System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: ModelItemCollection
  nameWithType: ModelItemCollection
  fullName: System.Activities.Presentation.Model.ModelItemCollection
  type: Class
  summary: "Reprezentuje kolekcję elementów modelu, w których można indywidualnie uzyskać dostęp przez indeks."
  remarks: "Jeśli zmiany zostały wprowadzone do kolekcji elementu podczas edycji zakresu, takich jak w ramach operacji przeciągania i upuszczania <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A>właściwość nie zostanie zaktualizowany dopiero po zakończeniu edycji zakresu.</xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A>"
  syntax:
    content: 'public abstract class ModelItemCollection : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged'
  inheritance:
  - System.Object
  - System.Activities.Presentation.Model.ModelItem
  implements:
  - System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>
  - System.Collections.IList
  - System.Collections.Specialized.INotifyCollectionChanged
  inheritedMembers:
  - System.Activities.Presentation.Model.ModelItem.Attributes
  - System.Activities.Presentation.Model.ModelItem.BeginEdit
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.Content
  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  - System.Activities.Presentation.Model.ModelItem.ItemType
  - System.Activities.Presentation.Model.ModelItem.Name
  - System.Activities.Presentation.Model.ModelItem.Parent
  - System.Activities.Presentation.Model.ModelItem.Parents
  - System.Activities.Presentation.Model.ModelItem.Properties
  - System.Activities.Presentation.Model.ModelItem.PropertyChanged
  - System.Activities.Presentation.Model.ModelItem.Root
  - System.Activities.Presentation.Model.ModelItem.Source
  - System.Activities.Presentation.Model.ModelItem.Sources
  - System.Activities.Presentation.Model.ModelItem.ToString
  - System.Activities.Presentation.Model.ModelItem.View
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: ModelItemCollection()
  nameWithType: ModelItemCollection.ModelItemCollection()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: protected ModelItemCollection ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  id: Add(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Add(ModelItem)
  nameWithType: ModelItemCollection.Add(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Dodaje element modelu do końca <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract void Add (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "Element modelu, który ma zostać dodany do kolekcji."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: ModelItemCollection.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Dodaje element modelu do końca <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  remarks: "Obiekt jako <xref:System.Activities.Presentation.Model.ModelItem>.</xref:System.Activities.Presentation.Model.ModelItem>"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do dodania do kolekcji."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <code>value</code> wrapped in a <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear
  id: Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ModelItemCollection.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Usuwa wszystkie elementy z <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract void Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: ModelItemCollection.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Występuje, gdy zmienia się kolekcja."
  syntax:
    content: public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  id: Contains(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Contains(ModelItem)
  nameWithType: ModelItemCollection.Contains(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Określa, czy <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> zawiera określony element."
  syntax:
    content: public abstract bool Contains (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "Wartość do zlokalizowania w kolekcji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> zawiera element, który ma określoną wartość, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ModelItemCollection.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Określa, czy <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> zawiera określony element."
  syntax:
    content: public abstract bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Wartość do zlokalizowania w kolekcji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> zawiera element, który ma określoną wartość, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  id: CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: CopyTo(ModelItem[],Int32)
  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Kopiuje zawartość kolekcji do podanej tablicy."
  syntax:
    content: public abstract void CopyTo (System.Activities.Presentation.Model.ModelItem[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Activities.Presentation.Model.ModelItem[]
      description: "Tablicy na skopiowanie do kolekcji."
    - id: arrayIndex
      type: System.Int32
      description: "Indeks w tablicy, aby rozpocząć kopiowanie w."
  overload: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>arrayIndex</code>jest poza zakresem, lub nie jest wystarczające miejsce do przechowywania zawartości kolekcji do tablicy."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count
  id: Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: ModelItemCollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zwraca liczbę elementów w kolekcji."
  remarks: "Ta wartość nie jest aktualizowany podczas <xref:System.Activities.Presentation.EditingContext>sesji.</xref:System.Activities.Presentation.EditingContext> Jeśli obiekt jest dodawany do <xref:System.Activities.Presentation.Model.ModelItemCollection>podczas sesji, wartość licznika nie zostanie zaktualizowany do momentu zamknięciu sesji.</xref:System.Activities.Presentation.Model.ModelItemCollection>"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>Liczba elementów w kolekcji.</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ModelItemCollection.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera moduł wyliczający, który iteruje po <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}
      description: "Zwraca &lt;xref:System.Collections.Generic.IEnumerator%601&gt; dla <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  id: IndexOf(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IndexOf(ModelItem)
  nameWithType: ModelItemCollection.IndexOf(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zwraca liczony od zera indeks pierwszego wystąpienia wartości w <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract int IndexOf (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "Obiekt do zlokalizowania w kolekcji."
    return:
      type: System.Int32
      description: "Liczony od zera indeks pierwszego wystąpienia <code> item </code> w obrębie całej <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie wartość -1."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  id: Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Insert(Int32,ModelItem)
  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Wstawia element do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> pod określonym indeksem."
  syntax:
    content: public abstract void Insert (int index, System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `item` powinien zostać wstawiony."
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "Element modelu do wstawienia."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: ModelItemCollection.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Wstawia element do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> pod określonym indeksem."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `value` powinien zostać wstawiony."
    - id: value
      type: System.Object
      description: "Obiekt do wstawienia."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <code>value</code> wrapped in a <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera wartość wskazującą, czy kolekcja ma stały rozmiar."
  remarks: "Domyślna implementacja zwraca `true` Jeśli kolekcja jest tylko do odczytu."
  syntax:
    content: protected virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolekcja ma stały rozmiar; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nie można zmodyfikować kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera wartość wskazującą, czy dostęp do kolekcji jest zsynchronizowany (wielowątkowość)."
  syntax:
    content: protected virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do kolekcji jest synchronizowane (wielowątkowość); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ModelItemCollection.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera lub ustawia element pod danym indeksem w kolekcji."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w kolekcji."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  id: ItemProperty
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: ItemProperty
  nameWithType: ModelItemCollection.ItemProperty
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  type: Field
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Identyfikuje element właściwości zależności."
  remarks: "Właściwość elementu reprezentuje wszystkie elementy w kolekcji i jest zdefiniowany jako typ <xref:System.Activities.Presentation.Model.ModelItem>.</xref:System.Activities.Presentation.Model.ModelItem> Wskazuje właściwość elementu <xref:System.Activities.Presentation.Model.ModelItemCollection>samej siebie.</xref:System.Activities.Presentation.Model.ModelItemCollection>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ItemProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  id: Move(System.Int32,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Move(Int32,Int32)
  nameWithType: ModelItemCollection.Move(Int32,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Przenosi inny indeks elementu w kolekcji."
  syntax:
    content: public abstract void Move (int fromIndex, int toIndex);
    parameters:
    - id: fromIndex
      type: System.Int32
      description: "Indeks elementu do przeniesienia przed przeniesienie."
    - id: toIndex
      type: System.Int32
      description: "Indeks elementu po przeniesieniu."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Move*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Albo <code> fromIndex </code> lub <code> toIndex </code> jest ujemna lub większa niż lub równa <xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>.</xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  id: Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Remove(ModelItem)
  nameWithType: ModelItemCollection.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Usuwa <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> z kolekcji."
  syntax:
    content: public abstract bool Remove (System.Activities.Presentation.Model.ModelItem item);
    parameters:
    - id: item
      type: System.Activities.Presentation.Model.ModelItem
      description: "The <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> został usunięty z kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ModelItemCollection.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Usuwa wartość z kolekcji."
  syntax:
    content: public abstract bool Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość został usunięty z kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ModelItemCollection.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Usuwa element pod danym indeksem."
  syntax:
    content: public abstract void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeks elementu."
  overload: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do kolekcji."
  syntax:
    content: protected virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "Zwraca <xref:System.Object>.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Kopiuje elementy <xref:System.Collections.ICollection>do <xref:System.Array>, rozpoczynając od określonego <xref:System.Array>indeksu.</xref:System.Array> </xref:System.Array> </xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Jednowymiarowa <xref:System.Array>który jest miejscem docelowym elementów kopiowanych z <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera liczbę elementów zawartych w kolekcji."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>wartość, czyli liczbę elementów zawartych w kolekcji.</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Liczba elementów zawartych w <xref:System.Collections.ICollection>jest synchronizowane (wielowątkowość).</xref:System.Collections.ICollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do <xref:System.Collections.ICollection>jest synchronizowane (wielowątkowość); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Zwraca <xref:System.Object>można zsynchronizować dostęp do <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Zwraca moduł wyliczający, który iteruje po kolekcji."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Zwraca <xref:System.Collections.IEnumerator>który może służyć do iterowania po kolekcji.</xref:System.Collections.IEnumerator>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Dodaje element modelu do końca <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do dodania do kolekcji."
    return:
      type: System.Int32
      description: "Zwraca indeks nowo dodany obiekt."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ModelItemCollection.System.Collections.IList.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Usuwa wszystkie elementy z <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Określa, czy <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> zawiera określony element."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do zlokalizowania w <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> zawiera element, który ma określoną wartość, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Określa indeks konkretny element w <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Aby zlokalizować <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>Indeks <code> value </code> jeśli je znaleziono na liście; w przeciwnym razie wartość -1.</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Wstawia element do <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> pod określonym indeksem."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `value` powinien zostać wstawiony."
    - id: value
      type: System.Object
      description: "Obiekt do wstawienia."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera wartość wskazującą, czy <xref:System.Collections.IList>ma stały rozmiar.</xref:System.Collections.IList>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Collections.IList>ma ustalony rozmiar; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera wartość wskazującą, czy <xref:System.Collections.IList>jest tylko do odczytu.</xref:System.Collections.IList>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Collections.IList>jest tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Pobiera lub ustawia element pod określonym indeksem."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks elementu do pobrania lub ustawienia."
    return:
      type: System.Object
      description: "Element pod określonym indeksem."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Usuwa pierwsze wystąpienie określonego obiektu z <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  remarks: "W kolekcji sąsiadujących elementów, takich jak listy elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów. Jeśli `value` nie został znaleziony w <xref:System.Collections.IList>, <xref:System.Collections.IList>pozostaną bez zmian i nie jest wyjątek.</xref:System.Collections.IList> </xref:System.Collections.IList>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Aby usunąć z <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Usuwa <xref:System.Collections.IList>element pod określonym indeksem.</xref:System.Collections.IList>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks elementu do usunięcia."
  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: System.Activities.Presentation.Model.ModelItem
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ModelItemCollection()
  nameWithType: ModelItemCollection.ModelItemCollection()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add(ModelItem)
  nameWithType: ModelItemCollection.Add(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add(Object)
  nameWithType: ModelItemCollection.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Clear()
  nameWithType: ModelItemCollection.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()
- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: ModelItemCollection.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains(ModelItem)
  nameWithType: ModelItemCollection.Contains(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: ModelItemCollection.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CopyTo(ModelItem[],Int32)
  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)
- uid: System.Activities.Presentation.Model.ModelItem[]
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem[]
  spec.csharp:
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Count
  nameWithType: ModelItemCollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ModelItemCollection.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ModelItem>
  nameWithType: IEnumerator<ModelItem>
  fullName: System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IndexOf(ModelItem)
  nameWithType: ModelItemCollection.IndexOf(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert(Int32,ModelItem)
  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: ModelItemCollection.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ModelItemCollection.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ItemProperty
  nameWithType: ModelItemCollection.ItemProperty
  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Move(Int32,Int32)
  nameWithType: ModelItemCollection.Move(Int32,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove(ModelItem)
  nameWithType: ModelItemCollection.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: ModelItemCollection.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ModelItemCollection.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ModelItemCollection.System.Collections.IList.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: ModelItemCollection
  nameWithType: ModelItemCollection.ModelItemCollection
- uid: System.Activities.Presentation.Model.ModelItemCollection.Add*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Add
  nameWithType: ModelItemCollection.Add
- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Clear
  nameWithType: ModelItemCollection.Clear
- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Contains
  nameWithType: ModelItemCollection.Contains
- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: ModelItemCollection.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemCollection.Count*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Count
  nameWithType: ModelItemCollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ModelItemCollection.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IndexOf
  nameWithType: ModelItemCollection.IndexOf
- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Insert
  nameWithType: ModelItemCollection.Insert
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemCollection.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemCollection.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemCollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.Item*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Item
  nameWithType: ModelItemCollection.Item
- uid: System.Activities.Presentation.Model.ModelItemCollection.Move*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Move
  nameWithType: ModelItemCollection.Move
- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: Remove
  nameWithType: ModelItemCollection.Remove
- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ModelItemCollection.RemoveAt
- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemCollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemCollection.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ModelItemCollection.System.Collections.IList.Add
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ModelItemCollection.System.Collections.IList.Clear
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ModelItemCollection.System.Collections.IList.Contains
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ModelItemCollection.System.Collections.IList.Insert
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ModelItemCollection.System.Collections.IList.Item
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ModelItemCollection.System.Collections.IList.Remove
- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*
  parent: System.Activities.Presentation.Model.ModelItemCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt
