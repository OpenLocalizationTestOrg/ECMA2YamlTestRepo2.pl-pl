### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildProvider
  id: BuildProvider
  children:
  - System.Web.Compilation.BuildProvider.#ctor
  - System.Web.Compilation.BuildProvider.CodeCompilerType
  - System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  - System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  - System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  - System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.OpenReader
  - System.Web.Compilation.BuildProvider.OpenReader(System.String)
  - System.Web.Compilation.BuildProvider.OpenStream
  - System.Web.Compilation.BuildProvider.OpenStream(System.String)
  - System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.ReferencedAssemblies
  - System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  - System.Web.Compilation.BuildProvider.VirtualPath
  - System.Web.Compilation.BuildProvider.VirtualPathDependencies
  langs:
  - csharp
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
  type: Class
  summary: "Definiuje zestaw właściwości i metody dla generowania kodu źródłowego w środowisku kompilacji platformy ASP.NET. Ta klasa jest abstrakcyjna."
  remarks: "Środowisko kompilacji platformy ASP.NET używa elementu BuildProvider obiektów do generowania kodu źródłowego dla różnych typów plików w aplikacji. Klasy pochodne od elementu BuildProvider głównie Podaj kod źródłowy dla plików, stron sieci Web, zasobów i inne elementy niestandardowe.       Zazwyczaj użytkownik nie należy tworzyć wystąpienia klasy elementu BuildProvider bezpośrednio. Zamiast tego należy zaimplementować klasę, która jest pochodną elementu BuildProvider i skonfigurować implementacja elementu BuildProvider do użycia w środowisku kompilacji platformy ASP.NET.       Wystąpienia klasy elementu BuildProvider są używane z <xref:System.Web.Compilation.AssemblyBuilder>obiektów, aby utworzyć jeden lub więcej plików w skompilowanym zestawie.</xref:System.Web.Compilation.AssemblyBuilder> Wystąpienie elementu BuildProvider generuje kod źródłowy w odpowiednim języku dla poszczególnych plików i <xref:System.Web.Compilation.AssemblyBuilder>obiektu łączy źródła zamieszczone przez każde wystąpienie elementu BuildProvider w jednym zestawie.</xref:System.Web.Compilation.AssemblyBuilder>       Środowisko kompilacji platformy ASP.NET używa wystąpienia klasy elementu BuildProvider do tworzenia plików w aplikacji. <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>Właściwość klasy elementu BuildProvider wskazuje ścieżkę pliku, który ma zostać utworzony.</xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Rozszerzenie pliku każdego pliku w aplikacji jest zamapowane do odpowiedniego dostawcy kompilacji. Środowisko budowania środowiska ASP.NET inicjuje wystąpienie elementu BuildProvider dla każdego pliku na podstawie rozszerzenia pliku i używa metody elementu BuildProvider do generowania kodu źródłowego dla pliku. Przekazuje środowisko kompilacji platformy ASP.NET <xref:System.Web.Compilation.AssemblyBuilder>obiekt na podstawie kompilatora preferowany język i kontekst pliku do metody elementu BuildProvider podczas kompilowania zestawu z jednego lub więcej plików, tak, aby wystąpienie elementu BuildProvider może przyczynić się kodu źródłowego dla pliku jej do ogólnej zestawu.</xref:System.Web.Compilation.AssemblyBuilder>       Do definiowania niestandardowej kompilacji akcji dla pliku, wpisz w aplikacji ASP.NET można musi wyprowadzenia klasy z elementu BuildProvider implementować członków w klasie pochodnej tworzenia typu pliku i Konfigurowanie dostawcy kompilacji dla odpowiedniego rozszerzenia pliku w pliku konfiguracyjnym aplikacji.       Określa rozszerzenie pliku dla plików obsługiwane oraz czy dostawcy kompilacji obsługuje pliki kodu, pliki sieci Web, pliki zasobów lub wszystkich plików. Użyj `type` atrybutu, aby określić pełną nazwę typu implementacji dostawcy kompilacji. Użyj <xref:System.Web.Compilation.BuildProviderAppliesToAttribute>klasę, aby określić, czy dostawcy kompilacji mają zastosowanie do plików w katalogu App_Code, pliki w katalogu zawartości sieci Web do globalnych lub lokalnych zasobów lub do wszystkich plików.</xref:System.Web.Compilation.BuildProviderAppliesToAttribute> Użyj `extension` Określ rozszerzenie pliku używany do identyfikowania plików, które obsługuje klasy elementu BuildProvider dla atrybutu. Użyj <xref:System.Web.Configuration.BuildProviderCollection>klasy do sprawdzenia kompilacji dostawców w pliku konfiguracji.</xref:System.Web.Configuration.BuildProviderCollection> Aby uzyskać więcej informacji o konfigurowaniu dostawcy kompilacji, zobacz [buildProviders elementu kompilacji (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384).       Do implementowania dostawcy kompilacji, który generuje kod źródłowy niestandardowy typ pliku, wyprowadzenia klasy z elementu BuildProvider i zastąpić <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>do generowania kodu źródłowego dla obsługiwany typ pliku.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Wygenerowany źródło jest dodawane do <xref:System.Web.Compilation.AssemblyBuilder>obiektu w postaci wykresu CodeDOM, lub zawartość, która reprezentuje pliku kodu źródłowego fizycznej.</xref:System.Web.Compilation.AssemblyBuilder> Jeśli dostawcy kompilacji wymaga określonego języka programowania, Zastąp <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>właściwości do zwrócenia <xref:System.Web.Compilation.CompilerType>obiektu dla obsługiwanych języków programowania.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Jeśli dostawcy kompilacji nie wymaga określonego języka programowania, nie zastępują <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>Właściwości; Użyj implementacji klasy podstawowej, co oznacza, że dostawcy kompilacji można użyć dowolnego języka .NET Framework, takich jak Visual Basic lub C#.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>       Do implementowania dostawcy kompilacji, który generuje kod źródłowy dla zawartości sieci Web, wyprowadzenia klasy z elementu BuildProvider i zastąpienie <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>metodę, aby zwrócić <xref:System.Type>dla klasy generowane przez elementu BuildProvider.</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Zastąpienie <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>do generowania kodu źródłowego dla typu zawarty w pliku obsługiwanych.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>      > [!NOTE] > Dodawanie dostosowanego klasy elementu BuildProvider do pliku Web.config działa w witrynie sieci Web programu ASP.NET, ale nie działa w projekcie aplikacji sieci Web ASP.NET. W projekcie aplikacji sieci Web kod, który jest generowany przez klasę elementu BuildProvider nie można uwzględnić w aplikacji. Aby uzyskać więcej informacji, zobacz [omówienie wstępnej kompilacji projektu aplikacji sieci Web ASP.NET](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)."
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract BuildProvider base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/t-system.web.compilation_0_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/t-system.web.compilation_0_1.vb)]"
  syntax:
    content: public abstract class BuildProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> klasy."
  remarks: "Ponieważ <xref:System.Web.Compilation.BuildProvider>Klasa jest abstrakcyjna, nie można utworzyć wystąpienia <xref:System.Web.Compilation.BuildProvider>bezpośrednio za pomocą konstruktora.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       Podczas tworzenia klasy pochodnej z <xref:System.Web.Compilation.BuildProvider>klasy, Zastąp konstruktora, aby zaimplementować akcje niestandardowe inicjowania implementacji dostawcy kompilacji.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected BuildProvider ();
    parameters: []
  overload: System.Web.Compilation.BuildProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  id: CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Reprezentuje typ kompilatora używane przez dostawcę kompilacji do generowania kodu źródłowego dla typu niestandardowego pliku."
  remarks: "Skonfiguruj ustawienia dla kompilowanie kodu źródłowego dla implementacji <xref:System.Web.Compilation.BuildProvider>.</xref:System.Web.Compilation.BuildProvider> za pomocą właściwości CodeCompilerType Właściwość CodeCompilerType jest `null` dostawcy kompilacji nie wymaga języka kodu określonych dla Generowanie i kompilowanie kodu źródłowego.       Aby ustawić wartość <xref:System.Web.Compilation.CompilerType>obiektu w implementacji dostawcy kompilacji, użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>lub <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>metody.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> </xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> </xref:System.Web.Compilation.CompilerType>       <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>Określa właściwość <xref:System.CodeDom.Compiler.CodeDomProvider>implementację, która umożliwia generowanie i kompilowanie kodu źródłowego dla dostawcy kompilacji.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>Właściwość definiuje ustawienia, które są używane do kompilowania kodu źródłowego w zespół.</xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the CodeCompilerType, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/p-system.web.compilation_4_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/p-system.web.compilation_4_1.vb)]"
  syntax:
    content: public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }
    return:
      type: System.Web.Compilation.CompilerType
      description: "Tylko do odczytu <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> generator kodu, kompilator kodu oraz ustawienia kompilatora używany do tworzenia kodu źródłowego dla ścieżki wirtualnej. Zwraca klasę podstawową <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildProvider.CodeCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  id: GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Generuje kod źródłowy dla ścieżki wirtualnej dostawcy kompilacji i dodaje kod źródłowy do konstruktora określonego zestawu."
  remarks: "Aby zaimplementować dostawcę kompilacji, który generuje kod źródłowy dla typu niestandardowego pliku, klasa wyprowadzona z <xref:System.Web.Compilation.BuildProvider>klasy, a zastąpienie metody GenerateCode do generowania kodu źródłowego dla obsługiwany typ pliku.</xref:System.Web.Compilation.BuildProvider>       Zazwyczaj implementacja GenerateCode dostawcy kompilacji odczytuje <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>właściwość, analizuje zawartość i dodaje kod źródłowy wygenerowane do określonego <xref:System.Web.Compilation.AssemblyBuilder>obiektu.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Kod źródłowy może przyczynić się do zestawu w formie <xref:System.IO.TextWriter>obiektu lub wykresu CodeDOM.</xref:System.IO.TextWriter> Aby dodać kod źródłowy do zestawu przy użyciu <xref:System.IO.TextWriter>obiektów, użyj <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>metody.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.IO.TextWriter> Aby dodać kod źródłowy w postaci wykresu CodeDOM do zestawu, użyj <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>metody.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       Jeśli dostawcy kompilacji generuje kod źródłowy w określonym języku programowania, konieczne jest przesłonięcie <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>właściwości do zwrócenia <xref:System.Web.Compilation.CompilerType>obiektu dla obsługiwanych języków programowania.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and GenerateCode members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/fc642c18-5414-4093-bd92-_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/fc642c18-5414-4093-bd92-_1.vb)]"
  syntax:
    content: public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);
    parameters:
    - id: assemblyBuilder
      type: System.Web.Compilation.AssemblyBuilder
      description: "Konstruktor zestawu, który odwołuje się do kodu źródłowego generowany przez dostawcę kompilacji."
  overload: System.Web.Compilation.BuildProvider.GenerateCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  id: GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Reprezentuje kontener dla wygenerowanego wykresu CodeDOM."
  remarks: "Ta metoda może być używana przez <xref:System.Web.Compilation.ClientBuildManager>klasy wyróżnianie składni i projektanta obsługuje w programie Visual Studio.</xref:System.Web.Compilation.ClientBuildManager>"
  syntax:
    content: protected virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "Po powrocie z tej metody zawiera słownik, który zawiera wszystkie numery wierszy skojarzonych i wyrażenia pragma wiersza kodu źródłowego. Ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "Kontener dla wykresu CodeDOM, który jest generowany przez <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> wystąpienia."
  overload: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  id: GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Generuje ciąg w celu jego utrwalenia w skompilowanym zestawie."
  remarks: "<xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>Metody <xref:System.Web.Compilation.BuildManager>obiektu tworzy wystąpienie dostawcy kompilacji dla ścieżki wirtualnej wejściowego i wywołuje metodę GetCustomString <xref:System.Web.Compilation.BuildProvider>obiektu.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildManager> </xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>       Podstawowym <xref:System.Web.Compilation.BuildProvider>klasy zwraca `null` dla metody GetCustomString, wskazujący, że GetCustomString nie jest zaimplementowana.</xref:System.Web.Compilation.BuildProvider>       Można zaimplementować w niektórych implementacjach dostawcy kompilacji GetCustomString zamiast <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>metody.</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> <xref:System.Web.Compilation.BuildProvider>Obiekt zwykle używa <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>do zwrócenia <xref:System.Type>obiektu dla ścieżki wirtualnej.</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> </xref:System.Web.Compilation.BuildProvider> Jednak metoda GetCustomString służy do wskazania, że <xref:System.Web.Compilation.BuildProvider>obiekt może wygenerować wiele typów z ścieżki wirtualnej.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji."
    return:
      type: System.String
      description: "Ciąg utrwalenia w środowisku kompilacji lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> wystąpienia nie implementuje GetCustomString."
  overload: System.Web.Compilation.BuildProvider.GetCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  id: GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zwraca ustawienia kompilatora dla języka domyślnego w aplikacji."
  remarks: "Metoda GetDefaultCompilerType do sprawdzenia domyślny typ kompilatora dla dostawcy kompilacji. Użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>metody do sprawdzenia typu kompilatora skonfigurowane u dostawcy kompilacji dla nazwy określonego języka.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>       Podstawowym <xref:System.Web.Compilation.BuildProvider>klasy określa domyślne kompilatora typu przy użyciu `defaultLanguage` atrybutu wartości w sekcji pliku konfiguracji aplikacji.</xref:System.Web.Compilation.BuildProvider> Jeśli nie ma domyślne ustawienia języka w sekcji kompilacja, ustawić przy użyciu domyślnego typu kompilatora <xref:Microsoft.VisualBasic.VBCodeProvider>dostawcy języka.</xref:Microsoft.VisualBasic.VBCodeProvider>       Podczas tworzenia klasy pochodnej z <xref:System.Web.Compilation.BuildProvider>klasy, można użyć GetDefaultCompilerType można ustawić <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>Właściwości w implementacji.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();
    parameters: []
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> reprezentujący Ustawienia kompilatora dla języka domyślnego w aplikacji. Klasa podstawowa zwraca kompilatora domyślne na podstawie pliku konfiguracji aplikacji."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  id: GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zwraca ustawienia kompilatora dla dostawcy kompilacji na podstawie określonego języka."
  remarks: "Metoda GetDefaultCompilerTypeForLanguage do sprawdzenia typu kompilatora skonfigurowane w dostawcy kompilacji dla nazwy określonego języka. Użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>metody do sprawdzenia domyślny typ kompilatora dla dostawcy kompilacji.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>       Podstawowym <xref:System.Web.Compilation.BuildProvider>klasy określa domyślne kompilatora typu przy użyciu <xref:System.Web.Configuration.Compiler>elementów w <xref:System.Web.Configuration.CompilationSection.Compilers%2A>Właściwość <xref:System.Web.Configuration.CompilationSection>obiektu pliku konfiguracji.</xref:System.Web.Configuration.CompilationSection> </xref:System.Web.Configuration.CompilationSection.Compilers%2A> </xref:System.Web.Configuration.Compiler> </xref:System.Web.Compilation.BuildProvider> Jest to równoważne badanie elementów i elementów w sekcji w pliku konfiguracji. Na przykład w przypadku `language` <xref:System.Web.Compilation.CompilerType>obiektu, który odpowiada skonfigurowane ustawienia dla wystąpienia <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>.</xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName> </xref:System.Web.Compilation.CompilerType> zwraca wartość VB, metody klasy podstawowej       Jeśli pochodzi od <xref:System.Web.Compilation.BuildProvider>klasy, można użyć GetDefaultCompilerTypeForLanguage można ustawić <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>wartości właściwości dla języka obsługiwanego przez implementacji.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);
    parameters:
    - id: language
      type: System.String
      description: "Nazwa języka kodu."
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> reprezentujący Ustawienia kompilatora dla dostawcy kompilacji na podstawie określonego języka. Klasa podstawowa zwraca domyślne ustawienia kompilatora języka na podstawie pliku konfiguracji aplikacji."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>language</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>language</code>nie pasuje kompilatora skonfigurowane dla dostawcy kompilacji."
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  id: GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zwraca typ generowany przez dostawcę kompilacji z ścieżki wirtualnej."
  remarks: "Aby zaimplementować dostawcę kompilacji, który generuje kod źródłowy zawartości sieci Web, takich jak pliki aspx, klasa wyprowadzona z <xref:System.Web.Compilation.BuildProvider>klasy i zastąpić metodę GetGeneratedType, aby zwracany typ generowany przez dostawcę kompilacji.</xref:System.Web.Compilation.BuildProvider>       System kompilacji ASP.NET kompiluje pliki dla każdego dostawcy kompilacji i generuje <xref:System.CodeDom.Compiler.CompilerResults>obiektu, który jest przekazywany do metody GetGeneratedType.</xref:System.CodeDom.Compiler.CompilerResults> Zazwyczaj używa dostawcy kompilacji GetGeneratedType implementacji <xref:System.Reflection.Assembly.GetType%2A>Metoda <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>Właściwości danych wejściowych `results` obiektu do zwrócenia podanego typu.</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> </xref:System.Reflection.Assembly.GetType%2A>"
  syntax:
    content: public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji."
    return:
      type: System.Type
      description: "Typ, który jest generowany przez dostawcę kompilacji dla ścieżki wirtualnej. Zwraca klasę podstawową <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildProvider.GetGeneratedType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  id: GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zwraca wartość wskazującą akcji wymaganych po utworzeniu ścieżki wirtualnej."
  remarks: "Metoda GetResultFlags jest używana przez środowisko kompilacji platformy ASP.NET przy użyciu wystąpienia <xref:System.Web.Compilation.BuildProvider>Klasa do tworzenia plików i załadować skompilowane zestawy.</xref:System.Web.Compilation.BuildProvider>       Podstawowym <xref:System.Web.Compilation.BuildProvider>klasy metoda zwraca <xref:System.Web.Compilation.BuildProviderResultFlags>wartość pola, co oznacza, że żadna specjalna Akcja wymagana podczas tworzenia ścieżki wirtualnej.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider>       Podczas tworzenia klasy pochodnej z <xref:System.Web.Compilation.BuildProvider>klasy, można zaimplementować metodę GetResultFlags do zwrócenia, inną <xref:System.Web.Compilation.BuildProviderResultFlags>wartość dla typu niestandardowego pliku lub ścieżki wirtualnej.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider> Na przykład w przypadku kompilowania ścieżce wirtualnej wymaga zawierający <xref:System.AppDomain>obiekt do załadowania, można powrócić <xref:System.Web.Compilation.BuildProviderResultFlags>wartość wyliczenia z metodę GetResultFlags.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.AppDomain>"
  syntax:
    content: public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji."
    return:
      type: System.Web.Compilation.BuildProviderResultFlags
      description: "A <xref href=&quot;System.Web.Compilation.BuildProviderResultFlags&quot;> </xref> wartość wskazującą, środowisko kompilacji akcji wymaganych po utworzeniu ścieżki wirtualnej w programie ASP.NET."
  overload: System.Web.Compilation.BuildProvider.GetResultFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader
  id: OpenReader
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zostanie otwarty czytnik tekstu do odczytu z ścieżkę wirtualną bieżącego obiektu dostawcy kompilacji."
  remarks: "Użyj <xref:System.IO.TextReader.Read%2A>metody w zwróconym <xref:System.IO.TextReader>obiektu do odczytu zawartości <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>Właściwość <xref:System.Web.Compilation.BuildProvider>obiektu.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       Po wywołaniu metody OpenReader, należy użyć <xref:System.IO.TextReader.Close%2A>metody, aby zamknąć <xref:System.IO.TextReader>obiektu i zwolnić zasobów systemowych skojarzone.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: "Otwórz <xref:System.IO.TextReader>można odczytać zawartości <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> </xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  id: OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Zostanie otwarty czytnik tekstu do odczytu z określonej ścieżki wirtualnej."
  remarks: "Użyj <xref:System.IO.TextReader.Read%2A>metody na zwrócony <xref:System.IO.TextReader>obiekt do odczytu treści ścieżki wirtualnej.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenReader%2A>metody, należy użyć <xref:System.IO.TextReader.Close%2A>metody, aby zamknąć <xref:System.IO.TextReader>obiektu i zwolnić zasobów systemowych skojarzone.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenReader%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Ścieżka wirtualna do odczytu."
    return:
      type: System.IO.TextReader
      description: "Otwórz <xref:System.IO.TextReader>można odczytać zawartości określonej ścieżki wirtualnej.</xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream
  id: OpenStream
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Otwiera strumień do odczytu ścieżkę wirtualną bieżącego obiektu dostawcy kompilacji."
  remarks: "Użyj <xref:System.IO.Stream.Read%2A>metody w zwróconym <xref:System.IO.Stream>obiektu do odczytu treści ścieżkę wirtualną dla <xref:System.Web.Compilation.BuildProvider>obiektu.</xref:System.Web.Compilation.BuildProvider> </xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       Po wywołaniu metody OpenStream, należy użyć <xref:System.IO.Stream.Close%2A>metody, aby zamknąć <xref:System.IO.Stream>obiektu i zwolnić zasobów systemowych skojarzone.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Otwórz <xref:System.IO.Stream>można odczytać zawartości <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> </xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  id: OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Otwiera strumień do odczytu z określonej ścieżki wirtualnej."
  remarks: "Użyj <xref:System.IO.Stream.Read%2A>metody na zwrócony <xref:System.IO.Stream>obiekt do odczytu treści ścieżki wirtualnej.</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenStream%2A>metody, należy użyć <xref:System.IO.Stream.Close%2A>metody, aby zamknąć <xref:System.IO.Stream>obiektu i zwolnić zasobów systemowych skojarzone.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenStream%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Ścieżka wirtualna do odczytu."
    return:
      type: System.IO.Stream
      description: "Otwórz <xref:System.IO.Stream>można odczytać zawartości określonej ścieżki wirtualnej.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  id: ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia przejrzyj komunikaty o błędach kompilatora, dzięki czemu można zmodyfikować je, aby znaleźć więcej informacji."
  remarks: "Dzięki czemu można modyfikować błędy kompilatora, zanim zostaną one wyświetlone w celu wprowadzenia bardziej użyteczne użytkownikowi tekst błędu zwykle przesłonić tę metodę. Jest to przydatne w scenariuszach, w których znane kontekstu określonych błędów i może dostarczyć informacji do użytkownika dotyczące rozwiązywania tych problemów. Oryginalny komunikat o błędzie kompilatora odnoszą się zazwyczaj do konstrukcji konkretnego języka i może nie mieć rzeczywista Przyczyna i rozwiązanie widocznych dla użytkownika.       Błędy mogą korzystać za pomocą <xref:System.CodeDom.Compiler.CompilerResults>obiekt, który jest przekazywany do metody.</xref:System.CodeDom.Compiler.CompilerResults>"
  syntax:
    content: public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Wyniki kompilatora."
  overload: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Reprezentuje zestawów do skompilowania ze źródłem generowany przez dostawcę kompilacji."
  remarks: "ASP.NET kompilacji inicjuje środowisko zbiór zestawów, które są dostępne do użytku przez dostawcę kompilacji. Kod źródłowy generowany przez dostawcę kompilacji w zestawów występujących w odwołaniach służy typy publiczne. Przywoływany zestaw kolekcji składa się z innych zestawów wbudowane w aplikacji ASP.NET i zestawy wymienionych w elemencie w pliku konfiguracji.       Jeśli dostawcy kompilacji generuje kod źródłowy, który odwołuje się do następującej liczby dodatkowych zestawów, dostawcy kompilacji dodaje dodatkowe zestawy za pomocą <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>metody.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> Środowisko budowania środowiska ASP.NET rozpoznaje kompilacji typów zewnętrznych podczas kompilowania zestawu przy użyciu przywoływanych zestawach dodane przez dostawców i domyślną kolekcję zestawów dostępnych dla odwołania.       Referencedassemblies — Kolekcja nie zawiera zestawów, które są dodawane do odwołania przez innych dostawców kompilacji za pośrednictwem <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>metody.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>"
  syntax:
    content: protected System.Collections.ICollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.ICollection
      description: "Kolekcja tylko do odczytu zestawy, które mogą odwoływać się generowany przez dostawcę kompilacji kodu źródłowego."
  overload: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  id: RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Rejestruje dostawcę kompilacji."
  remarks: "Ta metoda służy do rejestrowania dostawcy kompilacji zamiast definiując je w pliku Web.config. Aby uzyskać więcej informacji o dostawcach kompilacji, zobacz <xref:System.Web.Compilation.BuildProvider>klasy i [buildProviders elementu kompilacji (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384).</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public static void RegisterBuildProvider (string extension, Type providerType);
    parameters:
    - id: extension
      type: System.String
      description: "Rozszerzenia nazwy pliku, którego dostawcy kompilacji."
    - id: providerType
      type: System.Type
      description: "Klasa dostawcy kompilacji."
  overload: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  id: VirtualPath
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Reprezentuje plik, który ma zostać utworzony przez tę implementację dostawcy kompilacji."
  remarks: "Ścieżka wirtualna <xref:System.Web.Compilation.BuildProvider>obiekt jest ścieżka do pliku, który jest kompilowany przez dostawcę kompilacji.</xref:System.Web.Compilation.BuildProvider> Na przykład, jeśli skonfigurowano niestandardowy <xref:System.Web.Compilation.BuildProvider>Klasa do tworzenia wszystkie pliki w witrynie sieci Web z niestandardowego rozszerzenia .abc, jeśli witryny sieci Web ma nazwę witryny &quot;website1&quot; i witryny sieci Web zawiera plik o nazwie Example.abc, właściwość VirtualPath zawiera wartość `/WebSite1/Example.abc`.</xref:System.Web.Compilation.BuildProvider>       Rozszerzenie pliku każdego pliku w aplikacji określa typ pliku, a odpowiedni dostawcy kompilacji dla danego typu pliku. Inicjuje środowisko kompilacji platformy ASP.NET <xref:System.Web.Compilation.BuildProvider>obiekt dla każdego pliku na podstawie typu pliku i używa <xref:System.Web.Compilation.BuildProvider>metod do wygenerowania źródła dla każdego pliku.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       Aby uzyskać więcej informacji o konfigurowaniu dostawcy kompilacji, zobacz [buildProviders elementu kompilacji (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)."
  syntax:
    content: protected string VirtualPath { get; }
    return:
      type: System.String
      description: "Ciąg tylko do odczytu, który określa ścieżkę wirtualną pliku, który ma być kompilowana przez tego dostawcę kompilacji."
  overload: System.Web.Compilation.BuildProvider.VirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  id: VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Reprezentuje kolekcję ścieżki wirtualne, które muszą zostać skompilowane zanim dostawcy kompilacji generuje kod."
  remarks: "Właściwość VirtualPathDependencies jest kolekcją ścieżki wirtualne, które muszą być skompilowane przed <xref:System.Web.Compilation.BuildProvider>wystąpienia generuje kod źródłowy.</xref:System.Web.Compilation.BuildProvider> Zestawy z ścieżek wirtualnych w VirtualPathDependencies są dodawane jako odwołania do kompilacji dla <xref:System.Web.Compilation.BuildProvider>wystąpienia.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual System.Collections.ICollection VirtualPathDependencies { get; }
    return:
      type: System.Collections.ICollection
      description: "Kolekcja tylko do odczytu ciągów reprezentujących ścieżki wirtualne, które jest zależny od tego wystąpienia dostawcy kompilacji."
  overload: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildProvider.#ctor
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.CompilerType
  parent: System.Web.Compilation
  isExternal: false
  name: CompilerType
  nameWithType: CompilerType
  fullName: System.Web.Compilation.CompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
- uid: System.Web.Compilation.AssemblyBuilder
  parent: System.Web.Compilation
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerResults
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerResults
  nameWithType: CompilerResults
  fullName: System.CodeDom.Compiler.CompilerResults
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
- uid: System.Web.Compilation.BuildProviderResultFlags
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProviderResultFlags
  nameWithType: BuildProviderResultFlags
  fullName: System.Web.Compilation.BuildProviderResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
- uid: System.Web.Compilation.BuildProvider.OpenStream
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
- uid: System.Web.Compilation.BuildProvider.#ctor*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider.BuildProvider
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode
  nameWithType: BuildProvider.GenerateCode
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit
  nameWithType: BuildProvider.GetCodeCompileUnit
- uid: System.Web.Compilation.BuildProvider.GetCustomString*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString
  nameWithType: BuildProvider.GetCustomString
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType
  nameWithType: BuildProvider.GetDefaultCompilerType
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType
  nameWithType: BuildProvider.GetGeneratedType
- uid: System.Web.Compilation.BuildProvider.GetResultFlags*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags
  nameWithType: BuildProvider.GetResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader
  nameWithType: BuildProvider.OpenReader
- uid: System.Web.Compilation.BuildProvider.OpenStream*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream
  nameWithType: BuildProvider.OpenStream
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors
  nameWithType: BuildProvider.ProcessCompileErrors
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider
  nameWithType: BuildProvider.RegisterBuildProvider
- uid: System.Web.Compilation.BuildProvider.VirtualPath*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
