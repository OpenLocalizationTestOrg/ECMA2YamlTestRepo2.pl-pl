### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Udostępnia strumień używany do komunikacji klient serwer, który korzysta z protokołu zabezpieczeń Secure Socket Layer (SSL) do uwierzytelniania serwera i opcjonalnie klienta."
  remarks: "Protokoły SSL pomoc, aby zagwarantować poufność i sprawdzanie wiadomości przesyłane przy użyciu SslStream integralności. Połączenie SSL, takim jak udostępniany przez SslStream, należy używać podczas przekazywania poufnych informacji między klientem serwerem. Używanie SslStream pomaga uniemożliwia odczytywanie i manipulowanie informacji podczas przesyłania w sieci.       Wystąpienie SslStream przesyła dane przy użyciu wprowadzona podczas tworzenia SslStream strumienia. Jeśli podasz to zasadniczy strumień masz możliwość określenia, czy też zamknięcia SslStream zamyka zasadniczy strumień. Zazwyczaj klasa SslStream jest używana z <xref:System.Net.Sockets.TcpClient>i <xref:System.Net.Sockets.TcpListener>klasy.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> <xref:System.Net.Sockets.TcpClient.GetStream%2A>Metoda zawiera <xref:System.Net.Sockets.NetworkStream>odpowiednie do użycia z klasy SslStream.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       Po utworzeniu SslStream, serwer i opcjonalnie, klient musi zostać uwierzytelniony. Serwer musi dostarczyć X509 certyfikatu, która określa dowodu tożsamości i mogą żądać, że klient także zrobić. Uwierzytelnianie odbywa się przed przesłaniem informacji za pomocą SslStream. Klienci inicjują uwierzytelnianie przy użyciu synchronicznej <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metod, które blokują dopiero po zakończeniu uwierzytelniania, lub asynchroniczną <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metody, które nie blokują oczekiwanie na ukończenie uwierzytelniania.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Serwery inicjującej uwierzytelnianie przy użyciu synchronicznej <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>lub asynchroniczne <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Zarówno klient, jak i serwer muszą inicjować uwierzytelniania.       Uwierzytelnianie jest obsługiwane przez dostawcę kanałów dostawcy obsługi zabezpieczeń (SSPI). Klient jest możliwość kontrolowania weryfikacji certyfikatu serwera, określając <xref:System.Net.Security.RemoteCertificateValidationCallback>delegować podczas tworzenia SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> Serwer można również sterować sprawdzania poprawności, podając <xref:System.Net.Security.RemoteCertificateValidationCallback>delegować.</xref:System.Net.Security.RemoteCertificateValidationCallback> Metoda odwołuje się do delegata zawiera strona zdalna certyfikatu oraz wszelkie błędy podczas sprawdzania poprawności certyfikatu SSPI. Należy pamiętać, że jeśli serwer określa delegata, metoda obiektu delegowanego została wywołana niezależnie od tego, czy serwer zażądał uwierzytelnienia klienta. Jeśli serwer nie przedstawiano żądania uwierzytelniania klienta, metoda obiektu delegowanego serwera otrzymuje certyfikat null i pustą tablicę błędów certyfikatów.       Jeśli serwer wymaga uwierzytelnienia klienta, klient musi określić co najmniej jednego certyfikatu uwierzytelniania. Jeśli klient ma więcej niż jeden certyfikat, klient może dostarczyć <xref:System.Net.Security.LocalCertificateSelectionCallback>pełnomocnika, aby wybrać odpowiedni certyfikat dla serwera.</xref:System.Net.Security.LocalCertificateSelectionCallback> Certyfikaty klienta muszą znajdować się w bieżącym &quot;Mój&quot; magazynu certyfikatów użytkownika. Uwierzytelnianie klienta przy użyciu certyfikatów nie jest obsługiwane dla <xref:System.Security.Authentication.SslProtocols>protokołu (SSL wersja 2).</xref:System.Security.Authentication.SslProtocols>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, i SslStream nie jest już niemożliwe.</xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector.       Podczas procesu uwierzytelniania, znanej także jako uzgadniania protokołu SSL zakończy się powodzeniem, nawiązaniu tożsamości serwera (i opcjonalnie klienta) i może służyć SslStream przez klienta i serwera do wymiany wiadomości. Przed wysyłania i odbierania informacji, klient i serwer należy sprawdzić zabezpieczeń usług i poziomy SslStream, aby ustalić, czy protokół, algorytmów i sile wybrane spełniają ich wymagania dotyczące integralności i poufności. Jeśli bieżące ustawienia nie są wystarczające, należy zamknąć strumienia. Możesz sprawdzić usług zabezpieczeń, używając SslStream <xref:System.Net.Security.SslStream.IsEncrypted%2A>i <xref:System.Net.Security.SslStream.IsSigned%2A>Właściwości.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> W poniższej tabeli przedstawiono elementy, które zgłosiły ustawienia kryptograficzne używane do uwierzytelniania, szyfrowania i podpisywania danych.      | Element | Elementy członkowskie |   |-------------|-------------|   | Protokół zabezpieczeń używany do uwierzytelniania serwera i, opcjonalnie, klient. | Właściwość <xref:System.Net.Security.SslStream.SslProtocol%2A>i wyliczenia skojarzone <xref:System.Security.Authentication.SslProtocols>. |   | Określony algorytm wymiany kluczy. | Właściwość <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>i wyliczenia skojarzone <xref:System.Security.Authentication.ExchangeAlgorithmType>. |   | Algorytm integralności komunikatu. | Właściwość <xref:System.Net.Security.SslStream.HashAlgorithm%2A>i wyliczenia skojarzone <xref:System.Security.Authentication.HashAlgorithmType>. |   | Algorytm poufności komunikat. | Właściwość <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>i wyliczenia skojarzone <xref:System.Security.Authentication.CipherAlgorithmType>. |   | Sile wybrane algorytmy. | <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>i właściwości <xref:System.Net.Security.SslStream.CipherStrength%2A>. |       Po pomyślnym uwierzytelnieniu można wysyłać dane przy użyciu synchronicznej <xref:System.Net.Security.SslStream.Write%2A>lub asynchroniczne <xref:System.Net.Security.SslStream.BeginWrite%2A>metody.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> Użytkownik może odbierać dane przy użyciu synchronicznej <xref:System.Net.Security.SslStream.Read%2A>lub asynchroniczne <xref:System.Net.Security.SslStream.BeginRead%2A>metody.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Jeśli określono, aby <xref:System.Net.Security.SslStream.%23ctor%2A>że zasadniczy strumień należy pozostawić otwarty, jest odpowiedzialny za strumieniu zamknięcia, gdy wszystko będzie gotowe jego użyciem</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] >, Gdy aplikacja, która tworzy obiekt SslStream działa z poświadczeniami zwykłego użytkownika, aplikacja nie będzie mieć możliwość dostępu certyfikaty zainstalowane w magazynie komputera lokalnego, chyba że uprawnienia jawnie przypisany do użytkownika w tym celu.       SslStream przy założeniu, że przekroczono limit wraz ze wszystkimi innymi <xref:System.IO.IOException>po generowany jest jeden ze strumienia wewnętrzny będzie traktowany jako krytyczny przez wywołującego.</xref:System.IO.IOException> Ponowne użycie wystąpienia SslStream po przekroczenie limitu czasu, którą będzie zwracać pamięci. Aplikacja powinna <xref:System.IO.Stream.Close%2A>SslStream i Zgłoś wyjątek w tych przypadkach.</xref:System.IO.Stream.Close%2A>       .NET Framework 4.6 obejmuje nowa funkcja zabezpieczeń, która blokuje niezabezpieczonych szyfrowania i tworzenia skrótów algorytmów dla połączenia. Aplikacji przy użyciu protokołu TLS/SSL za pośrednictwem interfejsów API, takich jak HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, itp. oraz przeznaczonych dla platformy .NET Framework 4.6 uzyskać bardziej bezpiecznych zachowanie domyślne.       Deweloperzy mogą chcesz zrezygnować z tego zachowania, aby zapewnić współdziałanie z ich istniejących SSL3 usług protokołu TLS lub z usługi szyfrowania RC4. [W tym artykule](https://support.microsoft.com/kb/3069494) wyjaśniono, jak zmodyfikować kod, tak aby nowe zachowanie jest wyłączona.       .NET Framework 4.6.3 dodaje nowe przeciążenia dla metod, które uwierzytelniają SslStreams, nie można określić wersji protokołu TLS, ale zamiast tego użyć TLS, wersja zdefiniowany jako domyślny system w [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Użyj tych metod w aplikacji w sposób, aby można było później zmodyfikować ustawienia domyślne jako zmiany najlepsze praktyki wersji protokołu TLS w czasie, bez konieczności ponowne skompilowanie i wdrożenie aplikacji."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> przy użyciu określonego <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Jeśli wartość nie jest określona w pliku konfiguracji encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>Domyślnie <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>dla <xref:System.Net.Security.SslStream>wystąpienia, który jest tworzony.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Korzystanie z szyfrowania Null jest wymagane, gdy zasady szyfrowania jest ustawione na <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>nie jest do odczytu.       - lub - <code>innerStream</code> nie jest zapisywalny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>innerStream</code> jest równa <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> przy użyciu określonego <xref:System.IO.Stream>i przesyłania strumieniowego zachowanie zamknięcia.</xref:System.IO.Stream>"
  remarks: "Po określeniu `true` dla `leaveStreamOpen` parametru zamknięcia <xref:System.Net.Security.SslStream>nie ma wpływu `innerStream` strumienia; należy jawnie zamknąć `innerStream` potrzebne już nim</xref:System.Net.Security.SslStream>       Jeśli wartość nie jest określona w pliku konfiguracji encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>Domyślnie <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>dla <xref:System.Net.Security.SslStream>wystąpienia, który jest tworzony.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Korzystanie z szyfrowania Null jest wymagane, gdy zasady szyfrowania jest ustawione na <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje zachowanie zamknięcia <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream> Ten parametr wskazuje, czy wewnętrzny strumienia pozostanie otwarte."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>nie jest do odczytu.       - lub - <code>innerStream</code> nie jest zapisywalny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>innerStream</code> jest równa <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> przy użyciu określonego <xref:System.IO.Stream>, strumienia zachowanie zamknięcia i certyfikatu weryfikacji delegata.</xref:System.IO.Stream>"
  remarks: "Po określeniu `true` dla `leaveStreamOpen` parametru zamknięcia <xref:System.Net.Security.SslStream>nie ma wpływu `innerStream` strumienia; należy jawnie zamknąć `innerStream` potrzebne już nim</xref:System.Net.Security.SslStream>       `userCertificateValidationCallback` Pełnomocnika `certificateErrors` argument zawiera kody błędów systemu Windows, zwrócony przez kanał interfejsu dostawcy obsługi zabezpieczeń (SSPI). Zwracana wartość metody wywoływane przez `userCertificateValidationCallback` delegata Określa, czy uwierzytelnianie zakończy się pomyślnie.       Protokół zabezpieczeń i algorytmy kryptograficzne są już zaznaczone, gdy `userCertificateValidationCallback` delegata wywołania metody. Metoda służy do ustalenia, czy wybranego algorytmów kryptograficznych i sile są wystarczające dla aplikacji. Jeśli nie, metoda powinna zwrócić `false` zapobiegające <xref:System.Net.Security.SslStream>z tworzona.</xref:System.Net.Security.SslStream>       Jeśli wartość nie jest określona w pliku konfiguracji encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>Domyślnie <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>dla <xref:System.Net.Security.SslStream>wystąpienia, który jest tworzony.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Korzystanie z szyfrowania Null jest wymagane, gdy zasady szyfrowania jest ustawione na <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Framework buforuje sesji SSL, tworzonych i podejmie próbę ponownego użycia pamięci podręcznej sesji dla nowego żądania, jeśli to możliwe. Podczas próby ponownego użycia sesji SSL, platformę używa pierwszego elementu obiektu <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(jeśli istnieje), lub spróbuje ponownie użyć sesji anonimowe, jeśli <xref:System.Net.HttpWebRequest.ClientCertificates%2A>jest pusta.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > Certyfikaty klienta nie są obsługiwane w wersji 2 protokołu SSL."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje zachowanie zamknięcia <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream> Ten parametr wskazuje, czy wewnętrzny strumienia pozostanie otwarte."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegata odpowiedzialne za zatwierdzanie certyfikat dostarczony przez komputer zdalny."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>nie jest do odczytu.       - lub - <code>innerStream</code> nie jest zapisywalny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>innerStream</code> jest równa <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> przy użyciu określonego <xref:System.IO.Stream>, strumienia zachowanie zamknięcia, delegat weryfikacji certyfikatu a obiektem delegowanym wyboru certyfikatu.</xref:System.IO.Stream>"
  remarks: "Po określeniu `true` dla `leaveStreamOpen` parametru zamknięcia <xref:System.Net.Security.SslStream>nie ma wpływu `innerStream` strumienia; należy jawnie zamknąć `innerStream` potrzebne już nim</xref:System.Net.Security.SslStream>       `userCertificateValidationCallback` Pełnomocnika `certificateErrors` argument zawiera kody błędów systemu Windows, zwrócony przez kanał interfejsu dostawcy obsługi zabezpieczeń (SSPI). Zwracana wartość metody wywoływane przez `userCertificateValidationCallback` delegata Określa, czy uwierzytelnianie zakończy się pomyślnie.       Protokół zabezpieczeń i algorytmy kryptograficzne są już zaznaczone, gdy `userCertificateValidationCallback` delegata wywołania metody. Metoda służy do ustalenia, czy wybranego algorytmów kryptograficznych i sile są wystarczające dla aplikacji. Jeśli nie, metoda powinna zwrócić `false` zapobiegające <xref:System.Net.Security.SslStream>z tworzona.</xref:System.Net.Security.SslStream>       `userCertificateSelectionCallback` Delegata jest przydatne, gdy aplikacja ma wiele certyfikatów i dynamicznie musisz wybrać certyfikat. Certyfikaty w magazynie &quot;MY&quot; są przekazywane do metody wywoływane przez delegata.       Jeśli wartość nie jest określona w pliku konfiguracji encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>Domyślnie <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>dla <xref:System.Net.Security.SslStream>wystąpienia, który jest tworzony.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Korzystanie z szyfrowania Null jest wymagane, gdy zasady szyfrowania jest ustawione na <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Framework buforuje sesji SSL, tworzonych i podejmie próbę ponownego użycia pamięci podręcznej sesji dla nowego żądania, jeśli to możliwe. Podczas próby ponownego użycia sesji SSL, platformę używa pierwszego elementu obiektu P:System.Net.HttpWebRequest.ClientCertificates (jeśli istnieje) lub próbuje ponownie wykorzystać anonimowy sesji, jeśli P:System.Net.HttpWebRequest.ClientCertificates jest pusta."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje zachowanie zamknięcia <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream> Ten parametr wskazuje, czy wewnętrzny strumienia pozostanie otwarte."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegata odpowiedzialne za zatwierdzanie certyfikat dostarczony przez komputer zdalny."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegata odpowiedzialny za wybranie certyfikatu służącego do uwierzytelniania."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>nie jest do odczytu.       - lub - <code>innerStream</code> nie jest zapisywalny."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>innerStream</code> jest równa <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> przy użyciu określonego<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "Korzystanie z szyfrowania Null, jest wymagany, gdy `encryptionPolicy` parametr ma wartość <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje zachowanie zamknięcia <xref:System.IO.Stream>obiekt używany przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> do wysyłania i odbierania danych.</xref:System.IO.Stream> Ten parametr wskazuje, czy wewnętrzny strumienia pozostanie otwarte."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegata odpowiedzialne za zatwierdzanie certyfikat dostarczony przez komputer zdalny."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegata odpowiedzialny za wybranie certyfikatu służącego do uwierzytelniania."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>nie jest do odczytu.       - lub - <code>innerStream</code> nie jest zapisywalny.       - lub - <code>encryptionPolicy</code> jest nieprawidłowy."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>innerStream</code> jest równa <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez klientów do uwierzytelniania serwera i opcjonalnie klienta w ramach połączenia klient serwer."
  remarks: "Ta metoda jest uwierzytelniany przy użyciu <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nie certyfikaty klienta są używane w uwierzytelniania. Lista odwołania certyfikatów nie jest sprawdzana podczas uwierzytelniania. Wartość określona dla `targetHost` musi być zgodna z nazwą w certyfikacie serwera.       Jeśli uwierzytelnianie się powiedzie, możesz sprawdzić <xref:System.Net.Security.SslStream.IsEncrypted%2A>i <xref:System.Net.Security.SslStream.IsSigned%2A>Właściwości, aby ustalić, jakie usługi zabezpieczeń są używane przez <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Sprawdź <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Właściwości w celu określenia, czy wystąpiły uwierzytelnianie wzajemne.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Nazwa serwera, które współużytkują to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania serwera za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez klientów do uwierzytelniania serwera i opcjonalnie klienta w ramach połączenia klient serwer. Proces uwierzytelniania używa certyfikatu określonej kolekcji i protokołu SSL."
  remarks: "Jeśli uwierzytelnianie się powiedzie, możesz sprawdzić <xref:System.Net.Security.SslStream.IsEncrypted%2A>i <xref:System.Net.Security.SslStream.IsSigned%2A>Właściwości, aby ustalić, jakie usługi zabezpieczeń są używane przez <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Sprawdź <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Właściwości w celu określenia, czy wystąpiły uwierzytelnianie wzajemne.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector.      > [!NOTE] > Certyfikaty klienta nie są obsługiwane w wersji 2 protokołu SSL."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Nazwa serwera, który będzie udostępniać to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> Zawiera certyfikaty klienta."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Wartość, która reprezentuje protokół używany do uwierzytelniania.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy lista odwołania certyfikatów jest sprawdzana podczas uwierzytelniania.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez klientów do uwierzytelniania serwera i opcjonalnie klienta w przypadku połączenia klient serwer jako operację asynchroniczną."
  remarks: "Ta metoda jest uwierzytelniany przy użyciu <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nie certyfikaty klienta są używane w uwierzytelniania. Lista odwołania certyfikatów nie jest sprawdzana podczas uwierzytelniania. Wartość określona dla `targetHost` musi być zgodna z nazwą w certyfikacie serwera.       Jeśli uwierzytelnianie się powiedzie, możesz sprawdzić <xref:System.Net.Security.SslStream.IsEncrypted%2A>i <xref:System.Net.Security.SslStream.IsSigned%2A>Właściwości, aby ustalić, jakie usługi zabezpieczeń są używane przez <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Sprawdź <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Właściwości w celu określenia, czy wystąpiły uwierzytelnianie wzajemne.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Nazwa serwera, które współużytkują to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Zwraca <xref:System.Threading.Tasks.Task>obiekt zadania reprezentujący operację asynchroniczną.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania serwera za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez klientów do uwierzytelniania serwera i opcjonalnie klienta w przypadku połączenia klient serwer jako operację asynchroniczną. Proces uwierzytelniania używa certyfikatu określonej kolekcji i protokołu SSL."
  remarks: "Jeśli uwierzytelnianie się powiedzie, możesz sprawdzić <xref:System.Net.Security.SslStream.IsEncrypted%2A>i <xref:System.Net.Security.SslStream.IsSigned%2A>Właściwości, aby ustalić, jakie usługi zabezpieczeń są używane przez <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Sprawdź <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Właściwości w celu określenia, czy wystąpiły uwierzytelnianie wzajemne.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector.      > [!NOTE] > Certyfikaty klienta nie są obsługiwane w wersji 2 protokołu SSL."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Nazwa serwera, który będzie udostępniać to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> Zawiera certyfikaty klienta."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Wartość, która reprezentuje protokół używany do uwierzytelniania.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy lista odwołania certyfikatów jest sprawdzana podczas uwierzytelniania.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Zwraca <xref:System.Threading.Tasks.Task>obiekt zadania reprezentujący operację asynchroniczną.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez serwery do uwierzytelniania serwera i opcjonalnie klienta w przypadku połączenia klient serwer przy użyciu określonego certyfikatu."
  remarks: "Ta metoda jest uwierzytelniany przy użyciu <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Lista odwołania certyfikatów nie jest sprawdzana podczas uwierzytelniania. Klient nie jest wymagane do zapewnienia certyfikatu uwierzytelniania.       Ta metoda umożliwia blokowanie przed zakończeniem operacji. Aby uniknąć zablokowania przed zakończeniem operacji, użyj jednej z <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>przeciążenia metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certyfikat używany do uwierzytelniania serwera."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania klienta za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServer*>Metoda nie jest obsługiwana w systemie Windows 95, Windows 98 lub Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez serwery do uwierzytelniania serwera i opcjonalnie klienta w przypadku połączenia klient serwer przy użyciu określonych certyfikatów, wymagania i protokół zabezpieczeń."
  remarks: "Ta metoda umożliwia blokowanie przed zakończeniem operacji. Aby uniknąć zablokowania przed zakończeniem operacji, użyj jednej z <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>przeciążenia metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certyfikacie x&509; używany do uwierzytelniania serwera."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy klient jest podanie certyfikatu dla uwierzytelniania.</xref:System.Boolean> Należy pamiętać, że to tylko żądania — Jeśli żaden certyfikat nie jest podany serwer nadal akceptuje żądania połączenia."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Wartość, która reprezentuje protokół używany do uwierzytelniania.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy lista odwołania certyfikatów jest sprawdzana podczas uwierzytelniania.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>nie jest prawidłową <xref:System.Security.Authentication.SslProtocols> wartość."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania klienta za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServer*>Metoda nie jest obsługiwana w systemie Windows 95, Windows 98 lub Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez serwery do uwierzytelniania serwera i opcjonalnie klienta w przypadku połączenia klient serwer przy użyciu określonego certyfikatu jako operację asynchroniczną."
  remarks: "Ta metoda jest uwierzytelniany przy użyciu <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Lista odwołania certyfikatów nie jest sprawdzana podczas uwierzytelniania. Klient nie jest wymagane do zapewnienia certyfikatu uwierzytelniania.       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certyfikat używany do uwierzytelniania serwera."
    return:
      type: System.Threading.Tasks.Task
      description: "Zwraca <xref:System.Threading.Tasks.Task>obiekt zadania reprezentujący operację asynchroniczną.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania klienta za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>Metoda nie jest obsługiwana w systemie Windows 95, Windows 98 lub Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez serwery do uwierzytelniania serwera i opcjonalnie klienta w przypadku połączenia klient serwer przy użyciu określonych certyfikatów, wymagania i protokół zabezpieczeń jako operację asynchroniczną."
  remarks: "Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certyfikacie x&509; używany do uwierzytelniania serwera."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy klient jest podanie certyfikatu dla uwierzytelniania.</xref:System.Boolean> Należy pamiętać, że to tylko żądania — Jeśli żaden certyfikat nie jest podany serwer nadal akceptuje żądania połączenia."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Wartość, która reprezentuje protokół używany do uwierzytelniania.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy lista odwołania certyfikatów jest sprawdzana podczas uwierzytelniania.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Zwraca <xref:System.Threading.Tasks.Task>obiekt zadania reprezentujący operację asynchroniczną.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez klientów, aby rozpocząć operację asynchroniczną do uwierzytelniania serwera i opcjonalnie klienta."
  remarks: "Ta metoda jest uwierzytelniany przy użyciu <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nie certyfikaty klienta są używane w uwierzytelniania. Lista odwołania certyfikatów nie jest sprawdzana podczas uwierzytelniania.       Wartość określona dla `targetHost` musi być zgodna z nazwą w certyfikacie serwera.       Należy ukończyć operację asynchroniczną uwierzytelniania przez wywołanie metody <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metody.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegowanie.       Ta metoda nie są blokowane podczas operacji. Aby zablokować przed zakończeniem operacji, użyj jednej z <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>przeciążenia metody.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/add/includes/ajax-current-ext-md.md) Jeśli zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Nazwa serwera, które współużytkują to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po zakończeniu uwierzytelniania.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do `asyncCallback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt, który wskazuje stan operacji asynchronicznej.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania serwera za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez klientów, aby rozpocząć operację asynchroniczną do uwierzytelniania serwera i opcjonalnie klienta przy użyciu określonych certyfikatów i protokołu zabezpieczeń."
  remarks: "Wartość określona dla `targetHost` musi być zgodna z nazwą w certyfikacie serwera.       Należy ukończyć operację asynchroniczną uwierzytelniania przez wywołanie metody <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metody.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegowanie.       Ta metoda nie są blokowane podczas operacji. Aby zablokować przed zakończeniem operacji, użyj jednej z <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>przeciążenia metody.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/add/includes/ajax-current-ext-md.md) Jeśli zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector.      > [!NOTE] > Certyfikaty klienta nie są obsługiwane w wersji 2 protokołu SSL."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Nazwa serwera, które współużytkują to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> Zawierające certyfikaty klienta."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Wartość, która reprezentuje protokół używany do uwierzytelniania.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy lista odwołania certyfikatów jest sprawdzana podczas uwierzytelniania.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po zakończeniu uwierzytelniania.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do `asyncCallback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt, który wskazuje stan operacji asynchronicznej.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>nie jest prawidłową <xref:System.Security.Authentication.SslProtocols> wartość."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania serwera za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez serwery, aby rozpocząć operację asynchroniczną do uwierzytelniania klienta i opcjonalnie serwera w przypadku połączenia klient serwer."
  remarks: "Ta metoda jest uwierzytelniany przy użyciu <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Lista odwołania certyfikatów nie jest sprawdzana podczas uwierzytelniania. Klient nie jest wymagane do zapewnienia certyfikatu uwierzytelniania.       Należy ukończyć operację asynchroniczną uwierzytelniania przez wywołanie metody <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metody.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegowanie.       Ta metoda nie są blokowane podczas operacji. Aby zablokować przed zakończeniem operacji, użyj jednej z <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>przeciążenia metody.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/add/includes/ajax-current-ext-md.md) Jeśli zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certyfikacie x&509; używany do uwierzytelniania serwera."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po zakończeniu uwierzytelniania.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do `asyncCallback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt wskazujący stan operacji asynchronicznej.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania klienta za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>Metoda nie jest obsługiwana w systemie Windows 95, Windows 98 lub Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Metoda wywoływana przez serwery, aby rozpocząć operację asynchroniczną do uwierzytelniania serwera i opcjonalnie klienta przy użyciu określonych certyfikatów, wymagania i protokół zabezpieczeń."
  remarks: "Należy ukończyć operację asynchroniczną uwierzytelniania przez wywołanie metody <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegowanie.       Ta metoda nie są blokowane podczas operacji. Aby zablokować przed zakończeniem operacji, użyj jednej z <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>przeciążenia metody.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/add/includes/ajax-current-ext-md.md) Jeśli zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certyfikacie x&509; używany do uwierzytelniania serwera."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy klient jest podanie certyfikatu dla uwierzytelniania.</xref:System.Boolean> Należy pamiętać, że to tylko żądania — Jeśli żaden certyfikat nie jest podany serwer nadal akceptuje żądania połączenia."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Wartość, która reprezentuje protokół używany do uwierzytelniania.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy lista odwołania certyfikatów jest sprawdzana podczas uwierzytelniania.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po zakończeniu uwierzytelniania.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do `asyncCallback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt, który wskazuje stan operacji asynchronicznej.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>nie jest prawidłową <xref:System.Security.Authentication.SslProtocols> wartość."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Błąd już wystąpił uwierzytelniania.       - lub - uwierzytelniania serwera za pomocą tej <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> została wcześniej zainstalowana.       - lub - uwierzytelniania jest już w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>Metoda nie jest obsługiwana w systemie Windows 95, Windows 98 lub Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Rozpoczyna operację asynchroniczną odczytu, która odczytuje dane ze strumienia i zapisuje go w określonej tablicy."
  remarks: "Po włączeniu szyfrowania i podpisywania operacja odczytu odczytuje dane z podstawowego strumienia, sprawdza integralność danych i/lub odszyfrowuje je. Operacja odczytu asynchronicznego musi wykonać wywołanie <xref:System.Net.Security.SslStream.EndRead%2A>metody.</xref:System.Net.Security.SslStream.EndRead%2A> Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegowanie.       Ta metoda nie są blokowane podczas operacji. Aby zablokować przed zakończeniem operacji, należy użyć <xref:System.Net.Security.SslStream.Read%2A>metody.</xref:System.Net.Security.SslStream.Read%2A>       Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/add/includes/ajax-current-ext-md.md) <xref:System.Net.Security.SslStream>Klasa nie obsługuje wiele równoczesnych operacji odczytu.</xref:System.Net.Security.SslStream>       Nie można wywołać tej metody, dopóki pomyślnym uwierzytelnieniu. Do uwierzytelnienia wywołania jedną <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>odczytać tablicy, która odbiera bajtów ze strumienia.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Liczony od zera lokalizacja w `buffer` rozpoczęcia przechowywania danych przeczytanie tego strumienia."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do odczytania ze strumienia."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji odczytu.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji odczytu. Ten obiekt jest przekazywany do `asyncCallback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt, który wskazuje stan operacji asynchronicznej.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; długość <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Operacja odczytu nie powiodła się.       - lub - szyfrowania jest używany, ale nie można odszyfrować danych."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Istnieje już operacja odczytu w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie przeprowadzono uwierzytelniania."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Rozpoczyna operację asynchronicznego zapisu, która zapisuje <xref:System.Byte>s z określonego bufora do strumienia.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która dostarcza bajtów do zapisania w strumieniu.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Liczony od zera lokalizacja w `buffer` w której ma zostać rozpoczęte odczytywanie bajtów do zapisania w strumieniu."
    - id: count
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa liczbę bajtów do odczytu z `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji zapisu.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Obiekt użytkownika, który zawiera informacje na temat operacji zapisu. Ten obiekt jest przekazywany do `asyncCallback` delegować po zakończeniu operacji."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt wskazujący stan operacji asynchronicznej.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; długość <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Operacja zapisu nie powiodła się."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Istnieje już w toku operacji zapisu."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie przeprowadzono uwierzytelniania."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy zasadniczy strumień jest czytelna.</xref:System.Boolean>"
  remarks: "W przypadku pomyślnego uwierzytelnienia, ta właściwość zwraca wartość zwrócona przez wywołanie <xref:System.IO.Stream.CanRead%2A>w strumieniu podstawowym.</xref:System.IO.Stream.CanRead%2A>       Zasadniczy strumień został określony podczas tworzenia wystąpienia <xref:System.Net.Security.SslStream>klasy.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli podczas uwierzytelniania i zasadniczy strumień jest możliwy do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy wyszukiwać źródłowego strumienia.</xref:System.Boolean>"
  remarks: "Nie należy próbować ustawiać pozycja <xref:System.Net.Security.SslStream>obiektu lub jego źródłowego strumienia.</xref:System.Net.Security.SslStream>       Zasadniczy strumień został określony podczas tworzenia wystąpienia <xref:System.Net.Security.SslStream>klasy.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy zasadniczy strumień obsługuje limity czasu.</xref:System.Boolean>"
  remarks: "Ta właściwość zwraca wartość zwrócona przez wywołanie <xref:System.IO.Stream.CanTimeout%2A>w strumieniu podstawowym.</xref:System.IO.Stream.CanTimeout%2A>       Zasadniczy strumień został określony podczas tworzenia wystąpienia <xref:System.Net.Security.SslStream>klasy.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zasadniczy strumień obsługuje limity czasu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy zasadniczy strumień jest zapisywalna.</xref:System.Boolean>"
  remarks: "W przypadku pomyślnego uwierzytelnienia, ta właściwość zwraca wartość zwrócona przez wywołanie <xref:System.IO.Stream.CanWrite%2A>w strumieniu podstawowym.</xref:System.IO.Stream.CanWrite%2A>       Zasadniczy strumień został określony podczas tworzenia wystąpienia <xref:System.Net.Security.SslStream>klasy.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli podczas uwierzytelniania i zasadniczy strumień jest zapisywalny; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy lista odwołania certyfikatów jest sprawdzana w procesie weryfikacji certyfikatu.</xref:System.Boolean>"
  remarks: "Listy odwołania certyfikatów zawiera certyfikaty, które zostały odwołane przez wystawcę. Sprawdzanie listy negatywnie wpływa na wydajność, ale zwiększa bezpieczeństwo aplikacji."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli lista odwołania certyfikatów jest sprawdzana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera wartość, która identyfikuje algorytm szyfrowania zbiorczego używanych przez to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Wartość <xref:System.Security.Authentication.CipherAlgorithmType>dla właściwości CipherAlgorithm jest wymagana podczas <xref:System.Net.Security.EncryptionPolicy>wartość wyliczenia jest używany do tworzenia <xref:System.Net.Security.SslStream>wystąpienia.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]i [!INCLUDE[winxp](~/add/includes/winxp-md.md)] nie obsługują <xref:System.Security.Authentication.CipherAlgorithmType>wartość.</xref:System.Security.Authentication.CipherAlgorithmType> Nawet jeśli <xref:System.Security.Authentication.CipherAlgorithmType>wartość jest używana do konstruowania <xref:System.Net.Security.SslStream>wystąpienie, <xref:System.Net.Security.EncryptionPolicy>właściwość będzie <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> <xref:System.Security.Authentication.CipherAlgorithmType>Zwracana jest wartość tylko w systemie Windows Vista lub nowszy.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "A <xref:System.Security.Authentication.CipherAlgorithmType>wartość.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Właściwość CipherAlgorithm uzyskano przed ukończenia procesu uwierzytelniania lub proces uwierzytelniania nie powiodło się."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera wartość, która identyfikuje siła algorytmu szyfrowania używanych przez to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Wartość tej właściwości wynosi zero, dopóki nie wystąpi uwierzytelniania.       Ta właściwość zwraca jedną z następujących wartości: - 0 - 40-56-80-128-168-192 - 256."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa siła algorytmu, w bitach.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Ta metoda jest wywoływana przez metodę publiczną `Dispose()`— metoda i <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> `Dispose()`wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiona `true`. <xref:System.Object.Finalize%2A>wywołuje `Dispose` z `disposing` ustawioną `false`.</xref:System.Object.Finalize%2A>       Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Net.Security.SslStream>odwołań.</xref:System.Net.Security.SslStream> Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kończy się rozpoczęto uwierzytelniania oczekujących asynchronicznych serwera z poprzedniego wywołania <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  remarks: "Jeśli działanie nie zostało ukończone, ta metoda blokuje, dopóki nie robi. Gdy uwierzytelnienie zakończy się powodzeniem, możesz sprawdzić <xref:System.Net.Security.SslStream.IsEncrypted%2A>i <xref:System.Net.Security.SslStream.IsSigned%2A>Właściwości, aby ustalić, jakie usługi zabezpieczeń są używane przez <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Sprawdź <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Właściwości w celu określenia, czy wystąpiły uwierzytelnianie wzajemne.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector.       Aby wykonać tę operację synchronicznie, użyj jednej z <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Wystąpienie zwracane przez wywołanie do <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie została utworzona przez wywołanie do <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uwierzytelnianie nie jest oczekujący serwera do wykonania."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kończy operację uwierzytelniania oczekujących asynchronicznych klienta, pracy z poprzedniego wywołania <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>"
  remarks: "Jeśli działanie nie zostało ukończone, ta metoda blokuje, dopóki nie robi. Gdy uwierzytelnienie zakończy się powodzeniem, możesz sprawdzić <xref:System.Net.Security.SslStream.IsEncrypted%2A>i <xref:System.Net.Security.SslStream.IsSigned%2A>Właściwości, aby ustalić, jakie usługi zabezpieczeń są używane przez <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Sprawdź <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Właściwości w celu określenia, czy wystąpiły uwierzytelnianie wzajemne.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Jeśli uwierzytelnianie nie powiedzie się, zostanie wyświetlony <xref:System.Security.Authentication.AuthenticationException>, a to <xref:System.Net.Security.SslStream>nie jest już niemożliwe.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Należy zamknąć ten obiekt i usunąć wszystkie odwołania do niego, dzięki czemu mogą być zbierane przez moduł garbage collector.       Aby wykonać tę operację synchronicznie, użyj jednej z <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metody.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Wystąpienie zwracane przez wywołanie do <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie została utworzona przez wywołanie do <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Uwierzytelnianie nie powiodło się i pozostanie w stanie uniemożliwiającym jego używanie tego obiektu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uwierzytelnianie nie jest oczekujący klienta do wykonania."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kończy operację asynchroniczną odczytu pracę z poprzedniego wywołania <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*>"
  remarks: "Jeśli działanie nie zostało ukończone, ta metoda blokuje, dopóki nie robi.       Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Security.SslStream.Read%2A>metody.</xref:System.Net.Security.SslStream.Read%2A>       Nie można wywołać tej metody, dopóki pomyślnym uwierzytelnieniu. Do uwierzytelnienia wywołania jedną <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Wystąpienia zwrócony przez wywołanie do <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>wartość, która określa liczbę bajtów do odczytu strumienia podstawowego.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie została utworzona przez wywołanie do <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie przeprowadzono uwierzytelniania."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Operacja odczytu nie powiodła się."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kończy operację asynchronicznego zapisu pracę z poprzedniego wywołania <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*>"
  remarks: "Jeśli działanie nie zostało ukończone, ta metoda blokuje, dopóki nie robi.       Aplikacji nie można wywołać tej metody do momentu pomyślnym uwierzytelnieniu. W celu uwierzytelnienia wywoływanie jednego z <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Security.SslStream.Write%2A>metody.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Wystąpienia zwrócony przez wywołanie do <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nie została utworzona przez wywołanie do <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie przeprowadzono uwierzytelniania."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Operacja zapisu nie powiodła się."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Powoduje, że wszystkie buforowane dane są zapisywane w podstawowej urządzenia."
  remarks: "Ta metoda wywołuje <xref:System.IO.Stream.Flush%2A>w strumieniu podstawowym.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera algorytm używany do generowania kodów uwierzytelniania wiadomości (Mac)."
  remarks: "Algorytmy uwierzytelniania wiadomości generują wartości skrótu wiadomości i podpisy wykrywać naruszeniu i sfałszowaniem."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "A <xref:System.Security.Authentication.HashAlgorithmType>wartość.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Właściwość HashAlgorithm uzyskano przed ukończenia procesu uwierzytelniania lub proces uwierzytelniania nie powiodło się."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera wartość, która identyfikuje siła algorytmu wyznaczania wartości skrótu używanego przez to wystąpienie."
  remarks: "Wartość tej właściwości wynosi zero, dopóki nie wystąpi uwierzytelniania."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa siłę <xref:System.Security.Authentication.HashAlgorithmType>algorytmu w bitach.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Prawidłowe wartości to 128 lub 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy uwierzytelnianie zakończyło się powodzeniem.</xref:System.Boolean>"
  remarks: "Uwierzytelnianie klientów przez wywołanie metody <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Serwery uwierzytelniania przez wywołanie metody <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wystąpiły pomyślne uwierzytelnienie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość wskazującą, czy to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> używa szyfrowania danych.</xref:System.Boolean>"
  remarks: "Szyfrowanie pomaga chronić prywatność danych, czyli pomaga upewnij się, że gdy dane są przesyłane, go nie może być odszyfrowywane przez osoby trzecie."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane są szyfrowane przed przesyłanych za pośrednictwem sieci i odszyfrować po osiągnięciu zdalny punkt końcowy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy zarówno serwera i klienta zostały uwierzytelnione.</xref:System.Boolean>"
  remarks: "Podczas serwer wymaga od klienta zapewnienia certyfikatu dla uwierzytelniania wzajemnego uwierzytelniania jest określona przez serwer."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli serwer został uwierzytelniony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy lokalny strony połączenia używane przez to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> został uwierzytelniony jako serwer.</xref:System.Boolean>"
  remarks: "Jeśli uwierzytelnianie nie powiodło się lub nie zostało przeprowadzone, ta właściwość zwraca `false`.       Na potrzeby uwierzytelniania, co serwer, należy wywołać <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli lokalny punkt końcowy został pomyślnie uwierzytelniony jako po stronie serwera uwierzytelnionego połączenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Boolean>wartość, która wskazuje, czy dane wysyłane przy użyciu tego strumienia jest podpisany.</xref:System.Boolean>"
  remarks: "Podpisywania danych, pomaga w ochronie integralności danych, czyli pomaga odbiorcy określić, czy dane została naruszona przesyłane."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane podpisu przed przesyłanych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera określony algorytm wymiany kluczy używanych przez to <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Wartość tej właściwości jest <xref:System.Security.Authentication.ExchangeAlgorithmType>dopóki nie wystąpi uwierzytelniania.</xref:System.Security.Authentication.ExchangeAlgorithmType>       Określony algorytm wymiany kluczy chroni informacje używane do generowania kluczy współużytkowanych."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "<xref:System.Security.Authentication.ExchangeAlgorithmType>Wartość.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera wartość, która identyfikuje siła algorytmu wymiany kluczy używanych przez to wystąpienie."
  remarks: "Wartość tej właściwości wynosi zero, dopóki nie wystąpi uwierzytelniania.       W typowych scenariuszy, wartość tej właściwości jest jedną z następujących czynności: - 512 768-1024 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa siłę <xref:System.Security.Authentication.ExchangeAlgorithmType>algorytmu w bitach.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera długość strumienia podstawowego."
  remarks: "Ta właściwość zwraca wartość zwrócona przez wywołanie <xref:System.IO.Stream.Length%2A>w strumieniu podstawowym.</xref:System.IO.Stream.Length%2A> Jeśli nie można wyszukać zasadniczy strumień, tej metody zwykle zgłasza wyjątek. Typ środowiska wykonawczego zasadniczy strumień określa typu run-time wyjątku, który jest generowany."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Długość strumienia podstawowego."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Pobieranie wartości tej właściwości nie jest obsługiwane, gdy strumień podstawowy <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera certyfikat używany do uwierzytelniania lokalnego punktu końcowego."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Obiekt w certyfikacie x&509;, który reprezentuje certyfikatu dla uwierzytelniania lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli żaden certyfikat nie został dostarczony."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uwierzytelnianie nie powiodło się lub nie przeprowadzono."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera lub ustawia bieżącą pozycję w strumieniu podstawowym."
  remarks: "Ta właściwość zwraca wartość zwrócona przez wywołanie <xref:System.IO.Stream.Position%2A>w strumieniu podstawowym.</xref:System.IO.Stream.Position%2A> Jeśli nie można wyszukać zasadniczy strumień, tej metody zwykle zgłasza wyjątek. Typ środowiska wykonawczego zasadniczy strumień określa typu run-time wyjątku, który jest generowany."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Bieżąca pozycja w strumieniu podstawowym."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ustawienie tej właściwości nie jest obsługiwane.       Pobieranie wartości tej właściwości nie jest obsługiwane, gdy strumień podstawowy - lub - <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Odczytuje dane z tego strumienia i zapisuje go w określonej tablicy."
  remarks: "Metoda odczytuje maksymalnie `count` bajtów ze strumienia i zapisuje je w `buffer` począwszy od `offset`. Nie można wykonywać wiele równoczesnych operacji odczytu.       Nie można wywołać tej metody, dopóki pomyślnym uwierzytelnieniu. Do uwierzytelnienia wywołania jedną <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Aby wykonać tę operację asynchronicznie, użyj <xref:System.Net.Security.SslStream.BeginRead%2A>metody.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>tablicy, która odbiera bajty odczytywać tego strumienia.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>zawierający liczony od zera lokalizacja w `buffer` rozpoczęcia przechowywania danych przeczytanie tego strumienia.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>zawiera maksymalną liczbę bajtów do odczytania tego strumienia.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>wartość, która określa liczbę bajtów odczytanych.</xref:System.Int32> Jeśli nie ma więcej danych do odczytu, zwraca wartość 0."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; długość <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Operacja odczytu nie powiodła się. Jeśli jest obecny, aby ustalić przyczynę niepowodzenia, sprawdź wyjątek wewnętrzny."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Istnieje już operacja odczytu w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie przeprowadzono uwierzytelniania."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera lub ustawia czas operacji odczytu blokuje oczekiwanie na dane."
  remarks: "Ta właściwość zwraca wartość zwrócona przez wywołanie <xref:System.IO.Stream.ReadTimeout%2A>w strumieniu podstawowym.</xref:System.IO.Stream.ReadTimeout%2A> W przypadku ustawienia tej właściwości <xref:System.IO.Stream.ReadTimeout%2A>wartość w podstawowym strumieniu jest równa określonej wartości.</xref:System.IO.Stream.ReadTimeout%2A>       Jeśli strumień podstawowy <xref:System.Net.Sockets.NetworkStream>, ReadTimeout jest (w milisekundach) i ma ustawioną wartość <xref:System.Threading.Timeout.Infinite>Domyślnie, który odczytywać operacji, czy nie limitu czasu.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>, który określa czas, jaki upływa zanim synchronicznego odczytać operacja kończy się niepowodzeniem.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera certyfikat używany do uwierzytelniania zdalny punkt końcowy."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Obiekt w certyfikacie x&509;, który reprezentuje certyfikatu dla uwierzytelniania lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli żaden certyfikat nie został dostarczony."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uwierzytelnianie nie powiodło się lub nie przeprowadzono."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Zgłasza wyjątek <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Nie wywołuj tej metody. Jest dziedziczone, ale nie jest obsługiwana przez <xref:System.Net.Security.SslStream>klasę.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Ta wartość jest ignorowana."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Ta wartość jest ignorowana."
    return:
      type: System.Int64
      description: "Zawsze zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wyszukiwanie nie jest obsługiwana przez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> obiektów."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ustawia długość strumienia podstawowego."
  remarks: "Ta metoda wywołuje <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>na zasadniczy strumień określone, jeśli to <xref:System.Net.Security.SslStream>został utworzony.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "<xref:System.Int64>Wartość określająca długość strumienia.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera wartość wskazującą, protokół zabezpieczeń używany do uwierzytelniania tego połączenia."
  remarks: "Protokoły zabezpieczeń obsługiwane są określone podczas <xref:System.Net.Security.SslStream>jest tworzony.</xref:System.Net.Security.SslStream> Jeśli żaden protokół zabezpieczeń został przekazany do konstruktora, wystąpienie jest tworzony przy użyciu <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Rzeczywiste protokół używany do uwierzytelniania jest zaznaczone, oparte na protokoły obsługiwane przez klienta i serwera."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Wartość, która reprezentuje protokół używany do uwierzytelniania.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera <xref:System.Net.TransportContext>używany do uwierzytelniania przy użyciu ochrony rozszerzonej.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "<xref:System.Net.TransportContext>Obiekt, który zawiera token wiązania kanałów (CBT) używane do ochrony rozszerzonej.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Zapisuje określone dane do tego strumienia."
  remarks: "Ta metoda umożliwia blokowanie zakończy działanie. Aby zapobiec blokowanie zakończy działanie, należy użyć <xref:System.Net.Security.SslStream.BeginWrite%2A>metody.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Nie można wywołać tej metody, dopóki pomyślnym uwierzytelnieniu. Do uwierzytelnienia wywołania jedną <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       <xref:System.Net.Security.SslStream>Klasa nie obsługuje wiele równoczesnych zapisu.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która dostarcza zapisanych w strumieniu bajtów.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Operacja zapisu nie powiodła się."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Istnieje już w toku operacji zapisu."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie przeprowadzono uwierzytelniania."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Zapis do określonej liczby miejsc <xref:System.Byte>s do źródłowego strumienia, używając określonego bufora i przesunięcie.</xref:System.Byte>"
  remarks: "Ta metoda umożliwia blokowanie zakończy działanie. Aby zapobiec, blokowanie operacji zakończy działanie zakończy, użyj <xref:System.Net.Security.SslStream.BeginWrite%2A>metody.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Nie można wywołać tej metody, dopóki pomyślnym uwierzytelnieniu. Do uwierzytelnienia wywołania jedną <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, lub <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metody.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       <xref:System.Net.Security.SslStream>Klasa nie obsługuje wiele równoczesnych zapisu.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która dostarcza zapisanych w strumieniu bajtów.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>zawierający liczony od zera lokalizacja w `buffer` w której ma zostać rozpoczęte odczytywanie bajtów do zapisania w strumieniu.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>zawiera liczbę bajtów do odczytu z `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; długość <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Operacja zapisu nie powiodła się."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Istnieje już w toku operacji zapisu."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został zamknięty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie przeprowadzono uwierzytelniania."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Pobiera lub ustawia czas operacji zapisu blokuje oczekiwanie na dane."
  remarks: "Ta właściwość zwraca wartość zwrócona przez wywołanie <xref:System.IO.Stream.WriteTimeout%2A>w strumieniu podstawowym.</xref:System.IO.Stream.WriteTimeout%2A> Operacje na zestawie określona wartość Określa <xref:System.IO.Stream.WriteTimeout%2A>wartość w strumieniu podstawowym.</xref:System.IO.Stream.WriteTimeout%2A>       Jeśli strumień podstawowy <xref:System.Net.Sockets.NetworkStream>, WriteTimeout jest (w milisekundach) i ma ustawioną wartość <xref:System.Threading.Timeout.Infinite>Domyślnie, które zapisują operacji, czy nie limitu czasu.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>, który określa czas, jaki musi upłynąć, zanim operacja zapisu synchronicznego kończy się niepowodzeniem.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
