### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor
  id: SymmetricProofDescriptor
  children:
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  langs:
  - csharp
  name: SymmetricProofDescriptor
  nameWithType: SymmetricProofDescriptor
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor
  type: Class
  summary: "Ta klasa może służyć do wystawiania token na podstawie klucza symetrycznego."
  syntax:
    content: 'public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.ProofDescriptor
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> klasy z określonymi poświadczeniami szyfrowania."
  remarks: "Użyj tego konstruktora STS do używania określonego <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</xref:System.IdentityModel.Tokens.EncryptingCredentials>"
  syntax:
    content: public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "<xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> Do użycia."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> klasy z określonego materiału klucza."
  remarks: "Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do używania określonych bajtów klucza. Dzieje się tak, gdy klient wysyła entropii i usługi STS będzie użyć jako klucza wystawionego tokenu."
  syntax:
    content: public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: key
      type: System.Byte[]
      description: "Klucz symetryczny używany wewnątrz wystawionego tokenu."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Klucz szyfrowania poświadczeń dla jednostki uzależnionej."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> klasy przy użyciu automatycznego generowania klucza."
  remarks: "Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do automatycznego generowania klucza za pomocą generatora liczb losowych, a następnie wysłać je w tokenie potwierdzającym jako sekretu binarnego."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "Rozmiar klucza symetrycznego."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Klucz szyfrowania poświadczeń dla obiektu docelowego żądania."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> klasy przy użyciu automatycznego generowania klucza."
  remarks: "Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do automatycznego generowania klucza, a następnie wysłać je w tokenie potwierdzającym jako zaszyfrowanego klucza. Dwa przypadkach może być objętych za pomocą tego konstruktora: 1.  Klient wysyła entropii, ale serwer odrzuca go.      2.  Klient nie wysyła entropii, więc entropii serwera jest używany."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "Rozmiar klucza symetrycznego."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Klucz szyfrowania poświadczeń dla obiektu docelowego żądania."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Klucz szyfrowania poświadczeń dla obiekt żądający."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>jest mniejsza lub równa zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> klasy na potrzeby wysyłania łączyć entropii."
  remarks: "Użyj tego konstruktora, jeśli chcesz wysłać Scalonej entropii."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "Rozmiar klucza symetrycznego."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Klucz szyfrowania poświadczeń dla obiektu docelowego żądania."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Poświadczenia szyfrowania używany do szyfrowania entropii lub token potwierdzenia obiektu żądającego."
    - id: sourceEntropy
      type: System.Byte[]
      description: "Entropii obiektu żądającego."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceEntropy</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> albo być pustą tablicą."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySize</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ten konstruktor umożliwia ma STS autogenerate klucza, a następnie wyślij ją w tokenie potwierdzającym jako zaszyfrowanego klucza. Dwa przypadki są objęte usługą 1 tutaj. Klient wysyła entropii, ale serwer odrzuca 2. klienta nie wysyłanie entropii, więc wystarczy użyć entropii serwera"
  remarks: "Jeśli `encryptWith` jest algorytm&3;DES, klucz jest gwarantowana nie mają słaby klucza DES.       Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do automatycznego generowania klucza, a następnie wysłać je w tokenie potwierdzającym jako zaszyfrowanego klucza. Dwa przypadkach może być objętych za pomocą tego konstruktora: 1.  Klient wysyła entropii, ale serwer odrzuca go.      2.  Klient nie wysyła entropii, więc entropii serwera jest używany."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "Rozmiar klucza symetrycznego."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Klucz szyfrowania poświadczeń dla jednostki uzależnionej."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Klucz szyfrowania poświadczeń dla obiekt żądający."
    - id: encryptWith
      type: System.String
      description: "Algorytm (URI) określona w <xref uid=&quot;langword_csharp_&lt;EncryptWith&gt;&quot; name=&quot;&lt;EncryptWith&gt;&quot; href=&quot;&quot;> </xref> element RST."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>jest mniejsza lub równa zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> klasy na potrzeby wysyłania łączyć entropii."
  remarks: "Ten konstruktor umożliwia wysłanie Scalonej entropii."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "Rozmiar klucza symetrycznego."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Szyfrowania poświadczeń dla jednostki uzależnionej używany do szyfrowania klucza we właściwości identyfikatora SecurityKeyIdentifier."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Poświadczenia szyfrowania używany do szyfrowania entropii lub token potwierdzenia obiektu żądającego."
    - id: sourceEntropy
      type: System.Byte[]
      description: "Entropii obiektu żądającego."
    - id: encryptWith
      type: System.String
      description: "Identyfikator URI algorytmu służące do szyfrowania klucza potwierdzającego."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>jest mniejsza lub równa zero."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceEntropy</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> albo być pustą tablicą."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  id: ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Modyfikuje określony odpowiedź RSTR zgodnie z ustawieniami w tym potwierdzającego deskryptora."
  remarks: "Ustawia odpowiednie artefaktów, takich jak żądany token potwierdzenia w komunikacie RSTR oparte na zawartość jest widoczna wystąpienia potwierdzającego deskryptora."
  syntax:
    content: public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);
    parameters:
    - id: response
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "Odpowiedź RSTR, do którego należy zastosować potwierdzającego deskryptora."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>response</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  id: GetKeyBytes
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetKeyBytes()
  nameWithType: SymmetricProofDescriptor.GetKeyBytes()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera materiału klucza."
  syntax:
    content: public byte[] GetKeyBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera materiału klucza."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  id: GetSourceEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetSourceEntropy()
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera Źródło entropii w zwykłym bajtów."
  syntax:
    content: protected byte[] GetSourceEntropy ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica bajtów, która zawiera źródło entropii."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  id: GetTargetEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetTargetEntropy()
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera entropii docelowego w zwykłym bajtów"
  syntax:
    content: protected byte[] GetTargetEntropy ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica bajtów zawiera entropii docelowej."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  id: KeyIdentifier
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera identyfikator klucza, który może być używany w wystawionego tokenu, aby zdefiniować klucz. Zazwyczaj jest to sekretu binarnego lub zaszyfrowany klucz;"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Identyfikator klucza."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  id: RequestorEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera obiektu żądającego szyfrowania poświadczeń, które mogą być używane do szyfrowania żądany token potwierdzenia lub entropii w odpowiedzi."
  syntax:
    content: protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Obiektu żądającego szyfrowania poświadczeń."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  id: TargetEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera uzależnionej szyfrowania poświadczeń, które mogą być używane do szyfrowania zabezpieczeń żądanego tokenu w odpowiedzi."
  syntax:
    content: protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Uzależnionej szyfrowania poświadczeń."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: System.IdentityModel.Tokens.ProofDescriptor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetKeyBytes()
  nameWithType: SymmetricProofDescriptor.GetKeyBytes()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetSourceEntropy()
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetTargetEntropy()
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: ApplyTo
  nameWithType: SymmetricProofDescriptor.ApplyTo
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetKeyBytes
  nameWithType: SymmetricProofDescriptor.GetKeyBytes
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetSourceEntropy
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetTargetEntropy
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
