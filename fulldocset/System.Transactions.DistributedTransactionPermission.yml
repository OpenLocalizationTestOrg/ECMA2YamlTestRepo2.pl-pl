### YamlMime:ManagedReference
items:
- uid: System.Transactions.DistributedTransactionPermission
  id: DistributedTransactionPermission
  children:
  - System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Transactions.DistributedTransactionPermission.Copy
  - System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  - System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  - System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  - System.Transactions.DistributedTransactionPermission.IsUnrestricted
  - System.Transactions.DistributedTransactionPermission.ToXml
  - System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DistributedTransactionPermission
  nameWithType: DistributedTransactionPermission
  fullName: System.Transactions.DistributedTransactionPermission
  type: Class
  summary: "Uprawnienie jest wymagany przez <xref href=&quot;System.Transactions&quot;> </xref> podczas zarządzania transakcji jest przekazany do usługi MSDTC. Ta klasa nie może być dziedziczona."
  remarks: "Transakcji lokalnej wykorzystuje tylko zasoby z jednego źródła trwałe lub wiele volatitle źródła. Transakcji rozproszonej, z drugiej strony, ma wchodzić w interakcje z wielu zasobów trwałe, potencjalnie przez sieć. Podczas zarządzania transakcji jest przekazany do usługi MSDTC, kod, który zainicjował eskalacji sprawdza się ma tych uprawnień. Aby uzyskać więcej informacji na temat poziomów zabezpieczeń, zobacz [poziomy zaufania zabezpieczeń podczas uzyskiwania dostępu do zasobów](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51). Aby uzyskać więcej informacji na eskalacji zarządzania transakcji, zobacz [eskalacji zarządzania transakcji](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). Żądanie zabezpieczeń ma wpływ na kod, który zainicjował eskalacji, niekoniecznie kod, który utworzył transakcji lokalnej."
  syntax:
    content: 'public sealed class DistributedTransactionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: DistributedTransactionPermission(PermissionState)
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Transactions.DistributedTransactionPermission&quot;> </xref> klasy."
  syntax:
    content: public DistributedTransactionPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Jeden z <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
  overload: System.Transactions.DistributedTransactionPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Copy
  id: Copy
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DistributedTransactionPermission.Copy()
  fullName: System.Transactions.DistributedTransactionPermission.Copy()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Tworzy i zwraca identyczne kopię bieżącego uprawnień."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Kopię bieżącego uprawnień."
  overload: System.Transactions.DistributedTransactionPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)
  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Rekonstruuje uprawnienie o określonym stanie kodowania XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Kodowanie XML używane do rekonstrukcji uprawnienia."
  overload: System.Transactions.DistributedTransactionPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DistributedTransactionPermission.Intersect(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do intersect z uprawnieniami bieżącego. Go musi być taki sam typ jak bieżące uprawnienia."
    return:
      type: System.Security.IPermission
      description: "Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony. Jest to nowe uprawnienie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli część wspólną jest pusta."
  overload: System.Transactions.DistributedTransactionPermission.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zwraca wartość wskazującą, czy bieżący uprawnienie jest podzbiorem określonego uprawnienia."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do testowania dla relacji podzbioru. To uprawnienie musi być taki sam typ jak bieżące uprawnienia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący <xref href=&quot;System.Security.IPermission&quot;> </xref> jest podzbiorem określonego <xref href=&quot;System.Security.IPermission&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Transactions.DistributedTransactionPermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DistributedTransactionPermission.IsUnrestricted()
  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zwraca wartość wskazującą, czy jest dozwolone nieograniczony dostęp do zasobu, która jest chroniona przez bieżące uprawnienia."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli korzystanie z zasobów chronionych przez nieograniczony uprawnienie jest dozwolony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Transactions.DistributedTransactionPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.ToXml
  id: ToXml
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DistributedTransactionPermission.ToXml()
  fullName: System.Transactions.DistributedTransactionPermission.ToXml()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Tworzy kodowania XML obiektu zabezpieczeń oraz w jego bieżącym stanie."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> zawierający Kodowanie XML obiektu zabezpieczeń, w tym żadnych informacji o stanie."
  overload: System.Transactions.DistributedTransactionPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DistributedTransactionPermission.Union(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Tworzy uprawnienia, które łączy bieżące uprawnienia i określony."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do łączenia z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień."
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Security.IPermission&quot;> </xref> Reprezentujący złożenie bieżące uprawnienia i określony."
  overload: System.Transactions.DistributedTransactionPermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: DistributedTransactionPermission(PermissionState)
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Transactions.DistributedTransactionPermission.Copy
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Copy()
  nameWithType: DistributedTransactionPermission.Copy()
  fullName: System.Transactions.DistributedTransactionPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)
  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DistributedTransactionPermission.Intersect(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DistributedTransactionPermission.IsUnrestricted()
  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()
- uid: System.Transactions.DistributedTransactionPermission.ToXml
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: ToXml()
  nameWithType: DistributedTransactionPermission.ToXml()
  fullName: System.Transactions.DistributedTransactionPermission.ToXml()
- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DistributedTransactionPermission.Union(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)
- uid: System.Transactions.DistributedTransactionPermission.#ctor*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: DistributedTransactionPermission
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission
- uid: System.Transactions.DistributedTransactionPermission.Copy*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Copy
  nameWithType: DistributedTransactionPermission.Copy
- uid: System.Transactions.DistributedTransactionPermission.FromXml*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: FromXml
  nameWithType: DistributedTransactionPermission.FromXml
- uid: System.Transactions.DistributedTransactionPermission.Intersect*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Intersect
  nameWithType: DistributedTransactionPermission.Intersect
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DistributedTransactionPermission.IsSubsetOf
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DistributedTransactionPermission.IsUnrestricted
- uid: System.Transactions.DistributedTransactionPermission.ToXml*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: ToXml
  nameWithType: DistributedTransactionPermission.ToXml
- uid: System.Transactions.DistributedTransactionPermission.Union*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Union
  nameWithType: DistributedTransactionPermission.Union
