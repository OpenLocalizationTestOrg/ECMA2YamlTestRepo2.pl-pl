### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ClientScriptManager
  id: ClientScriptManager
  children:
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  langs:
  - csharp
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
  type: Class
  summary: "Definiuje metody do zarządzania skrypty klienta w aplikacji sieci Web."
  remarks: "Klasa ClientScriptManager jest używana do zarządzania skrypty klienta i dodaj je do aplikacji sieci Web. Można pobrać odwołania do klasy ClientScriptManager z <xref:System.Web.UI.Page.ClientScript%2A>Właściwość <xref:System.Web.UI.Page>obiektu.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.ClientScript%2A>       Przez dołączenie skrypt do kod znaczników HTML strony, można dodać skrypt klienta deklaratywnie do strony sieci Web. Istnieją sytuacje, kiedy dynamiczne dodawanie skrypt po stronie klienta są potrzebne. Aby dodać skrypt dynamicznie, użyj <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metody, <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metody, <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metody lub <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metody, w zależności od tego, kiedy i w jaki sposób chcesz dodać skrypt.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Aby uzyskać więcej informacji, zobacz [porady: Dodawanie klienta skryptu dynamicznie do składnika ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       Klasa ClientScriptManager unikatowo identyfikuje skryptów za pomocą klucza <xref:System.String>i <xref:System.Type>.</xref:System.Type> </xref:System.String> Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Przy użyciu typu skrypt pomaga uniknąć mylące podobne Skrypty formantów innego użytkownika, które mogą być używane na stronie.       Klasa ClientScriptManager może służyć do wywołania zwrotne klienta w sytuacjach, gdy jest pożądane, aby uruchomić kod serwera z klienta bez wykonywania odświeżania strony. Jest to określane jako wykonywania wywołania zwrotnego poza pasmem do serwera. W wywołaniu zwrotnym klienta funkcji skryptu klienta wysyła żądanie asynchroniczne do strony sieci Web ASP.NET. Strony sieci Web uruchamia zmodyfikowanej wersji cyklu życia procesu wywołania zwrotnego. Użyj <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodę, aby otrzymać odwołanie do funkcji klienta, gdy została wywołana, inicjuje wywołania zwrotnego klienta do zdarzeń serwera.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Aby uzyskać więcej informacji, zobacz [implementacja klienta wywołania zwrotne bez ogłaszania zwrotnego](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Wywołania zwrotne skryptu nie będzie działać w starszych przeglądarek, które nie obsługują modelu DOM (Document Object) i wymaga włączenia ECMAScript na kliencie. Aby sprawdzić, czy przeglądarka obsługuje wywołań zwrotnych, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>właściwość, która jest dostępna za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A>Właściwość wewnętrzna ASP.NET <xref:System.Web.HttpContext.Request%2A>obiektu.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       Użyj <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>— Metoda i <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>metodę, aby zdefiniować zdarzenie ogłaszania zwrotnego strony klienta.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Te metody włączyć funkcje skryptu klienta, gdy została wywołana, aby spowodować, że serwer publikowania wróć do strony. Zdarzenie ogłaszania zwrotnego strony klienta różni się od wywołania zwrotnego klienta, w tym strony sieci Web zakończeniu cyklu życia procesu zdarzenia odświeżania strony klienta.      > [!NOTE] > Jeśli używasz <xref:System.Web.UI.WebControls.Button>kontroli i <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>właściwość jest ustawiona na `false`, możesz użyć <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metodę, aby zwrócić klienta ogłaszanie zdarzeń dla <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> </xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button>       <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>Właściwość <xref:System.Web.UI.WebControls.Button>formantu, <xref:System.Web.UI.WebControls.ImageButton>kontroli, i <xref:System.Web.UI.WebControls.LinkButton>formant może służyć do uruchamiania klienta skryptu</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.OnClientClick%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the ClientScriptManager class. Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/t-system.web.ui.clientsc_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/t-system.web.ui.clientsc_1.aspx)]"
  syntax:
    content: public sealed class ClientScriptManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje, kiedy klient wywołania zwrotnego zdarzeń serwera. Funkcja klienta dla tej przeciążonej metody zawiera określony formant, argument, skrypt po stronie klienta i kontekstu."
  remarks: "Metoda GetCallbackEventReference wykonuje wywołanie zwrotne poza pasmem do serwera, który to zmodyfikowana wersja normalnego cyklu życia strony. Aby uzyskać więcej informacji, zobacz [implementacja klienta wywołania zwrotne bez ogłaszania zwrotnego](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Jeśli przeglądarka Microsoft Internet Explorer (w wersji 5.0 lub nowszej), mechanizm wywołania zwrotnego skryptu jest implementowane za pośrednictwem obiektu Microsoft.XmlHttp COM i wymaga przeglądarki, aby ustawić uruchamianie formantów ActiveX. W przypadku innych przeglądarek XMLHttpRequest przy użyciu przeglądarki lokalnego modelu DOM (Document Object) jest używany. Aby sprawdzić, czy przeglądarka obsługuje wywołań zwrotnych klienta, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>Właściwości.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Aby sprawdzić, czy przeglądarka obsługuje XML za pośrednictwem protokołu HTTP, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A>Właściwości.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> Obie właściwości są dostępne za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A>Właściwość wewnętrzna ASP.NET <xref:System.Web.HttpContext.Request%2A>obiektu.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A>       Przeciążenia GetCallbackEventReference <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>Metoda wykonuje wywołanie zwrotne synchronicznie przy użyciu XML za pośrednictwem protokołu HTTP.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Podczas wysyłania danych synchronicznie w scenariuszu wywołania zwrotnego, synchroniczne wywołania zwrotne wróć natychmiast i nie blokują przeglądarki. Bez wywołania zwrotnego dwóch synchroniczne wywołania zwrotne można wykonać w tym samym czasie w przeglądarce. Jeśli drugi synchroniczne wywołania zwrotnego jest wywoływane, gdy jedna jest aktualnie oczekujący, pierwszy anuluje drugie synchroniczne wywołania zwrotnego i zwróci tylko drugi wywołania zwrotnego.       Aby wysyłać dane asynchronicznie, użyj jednego z przeciążeń, które przyjmuje `useAsync` parametr, który jest wartością logiczną wartość kontroli tego zachowania. W scenariuszu asynchroniczne może mieć wielu wywołań zwrotnych oczekujące; kolejności, w którym zwracają nie jest gwarantowana odpowiadające kolejności, w którym zostały zainicjowane.       Ponadto to przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metody określa żadnej funkcji klienta do obsługi w przypadku błędu generowane przez <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Aby określić obsługi wywołania zwrotnego błąd klienta, użyj jednego z przeciążeń, które przyjmuje `clientErrorCallback` parametru.       Metoda GetCallbackEventReference przyjmuje opcjonalny ciąg `argument` parametrów i zwraca wartość typu ciąg. Umożliwia przekazywanie do odbierania wielu wartości złączenia wartości w danych wejściowych lub zwraca ciąg, odpowiednio.      > [!NOTE] > Należy unikać używania stan widoku w celu wykonania strona lub kontrolka właściwości, które muszą zostać zaktualizowane podczas operacji wywołania zwrotnego skryptu. Jeśli po żądań strony właściwości, można użyć stanu sesji."
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/0153bfa5-9a40-4257-b817-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/0153bfa5-9a40-4257-b817-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serwer <xref href=&quot;System.Web.UI.Control&quot;> </xref> obsługująca wywołania zwrotnego klienta. Formant musi implementować <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfejsu i podaj <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Argument przekazywany ze skryptu klienta do serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera."
    - id: context
      type: System.String
      description: "Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego. Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń."
    return:
      type: System.String
      description: "Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> Określonego nie implementuje <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfejsu."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje a klienta wywołania zwrotnego zdarzeń serwera. Funkcja klienta dla tej przeciążonej metody zawiera określony formant, argument, skrypt po stronie klienta, kontekst oraz wartość logiczna."
  remarks: "To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>Metoda wymaga `useAsync` parametr, który umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie przez ustawienie wartości `true`.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Wersje przeciążenie tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie.       Aby uzyskać więcej informacji na tej metody, zobacz uwagi do przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metody.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serwer <xref href=&quot;System.Web.UI.Control&quot;> </xref> obsługująca wywołania zwrotnego klienta. Formant musi implementować <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfejsu i podaj <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Argument przekazywany ze skryptu klienta do serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera."
    - id: context
      type: System.String
      description: "Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego. Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wykonać wywołania zwrotnego asynchronicznie; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> można synchronicznie wykonać wywołania zwrotnego."
    return:
      type: System.String
      description: "Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> Określonego nie implementuje <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfejsu."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje a klienta wywołania zwrotnego zdarzeń serwera. Funkcja klienta dla tej przeciążonej metody zawiera określony element docelowy, argument, skrypt po stronie klienta, kontekstu, program obsługi błędów oraz wartość logiczna."
  remarks: "To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>ma metody `target` ciągu parametru zamiast <xref:System.Web.UI.Control>parametru.</xref:System.Web.UI.Control> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> To przeciążenie należy użyć wywołania zwrotnego, aby powrócić do czegoś innego niż ciąg zawierający <xref:System.Web.UI.Control.UniqueID%2A>formantu.</xref:System.Web.UI.Control.UniqueID%2A>       Ponadto to przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>Metoda wymaga `useAsync` i `clientErrorCallback` parametru.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> `useAsync` Parametr umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie przez ustawienie wartości `true`. Wersje przeciążenie tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie. `clientErrorCallback` Parametrów można zdefiniować nazwę funkcji klienta, która jest wywoływana, gdy program obsługi serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>, zwraca błąd.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Wersje przeciążenie tej metody, które nie wymagają `clientErrorCallback` ustawiona wartość null.       Aby uzyskać więcej informacji na tej metody, zobacz uwagi do przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metody.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/b09113ee-01c3-4887-82a1-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/b09113ee-01c3-4887-82a1-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: target
      type: System.String
      description: "Nazwa serwera <xref href=&quot;System.Web.UI.Control&quot;> </xref> obsługująca wywołania zwrotnego klienta. Formant musi implementować <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfejsu i podaj <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Argument przekazywany ze skryptu klienta do serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera."
    - id: context
      type: System.String
      description: "Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego. Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń."
    - id: clientErrorCallback
      type: System.String
      description: "Nazwa programu obsługi zdarzeń klienta, który odbiera wynik po wystąpieniu błędu w obsłudze zdarzeń serwera."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Aby wykonać wywołania zwrotnego asynchronicznie; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> można synchronicznie wykonać wywołania zwrotnego."
    return:
      type: System.String
      description: "Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje a klienta wywołania zwrotnego zdarzeń serwera. Funkcja klienta dla tej przeciążonej metody obejmuje określonego formantu, argument, skrypt po stronie klienta, kontekstu, program obsługi błędów i wartość logiczną."
  remarks: "To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>Metoda wymaga `useAsync` i `clientErrorCallback` parametru.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> `useAsync` Parametr umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie przez ustawienie wartości `true`. Wersje przeciążenie tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie. `clientErrorCallback` Parametrów można zdefiniować nazwę funkcji klienta, która jest wywoływana, gdy program obsługi serwera ( <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metody) zwraca błąd.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Wersje przeciążenie tej metody, które nie wymagają `clientErrorCallback` ustawiona wartość null.       Aby uzyskać więcej informacji na tej metody, zobacz uwagi do przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metody.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serwer <xref href=&quot;System.Web.UI.Control&quot;> </xref> obsługująca wywołania zwrotnego klienta. Formant musi implementować <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfejsu i podaj <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Argument przekazywany ze skryptu klienta do serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metody.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera."
    - id: context
      type: System.String
      description: "Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego. Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń."
    - id: clientErrorCallback
      type: System.String
      description: "Nazwa programu obsługi zdarzeń klienta, który odbiera wynik po wystąpieniu błędu w obsłudze zdarzeń serwera."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Aby wykonać wywołania zwrotnego asynchronicznie; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> można synchronicznie wykonać wywołania zwrotnego."
    return:
      type: System.String
      description: "Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> Określonego nie implementuje <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfejsu."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera odwołanie, z <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> dołączany na początku, używany w przypadku klienta w publikowania na serwerze dla określonego formantu i z argumentami określone zdarzenie."
  remarks: "Przy użyciu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>Metoda wymaga formantu, który obsługuje ogłaszania zwrotnego do zaimplementowania <xref:System.Web.UI.IPostBackEventHandler>interfejsu.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler>interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example demonstrates the use of the GetPostBackClientHyperlink method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_2.aspx)]"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Kontrolki serwera do przetworzenia ogłaszania zwrotnego."
    - id: argument
      type: System.String
      description: "Parametr przekazany do kontrolki serwera."
    return:
      type: System.String
      description: "Ciąg reprezentujący wywołanie JavaScript do funkcji odświeżania strony, która zawiera argumenty Formant docelowy identyfikator i zdarzeń."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera odwołanie, z <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> dołączany na początku, używanym w przypadku klienta można opublikować na serwerze dla określonego sterować za pomocą określonego zdarzenia argumentów i logiczna wskazuje czy rejestrować post wstecz do weryfikacji zdarzeń."
  remarks: "Przy użyciu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>Metoda wymaga formantu, który obsługuje ogłaszania zwrotnego do zaimplementowania <xref:System.Web.UI.IPostBackEventHandler>interfejsu.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler>interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Kontrolki serwera do przetworzenia ogłaszania zwrotnego."
    - id: argument
      type: System.String
      description: "Parametr przekazany do kontrolki serwera."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zarejestrować zdarzenie ogłaszania zwrotnego strony do weryfikacji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> nie zarejestrować zdarzenie ogłaszania zwrotnego do walidacji."
    return:
      type: System.String
      description: "Ciąg reprezentujący wywołanie JavaScript do funkcji odświeżania strony, która zawiera argumenty Formant docelowy identyfikator i zdarzeń."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca ciąg, który może być używany w przypadku klienta, powoduje odświeżenie strony do serwera. Ciąg odwołania jest zdefiniowany przez określony <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> wystąpienia."
  remarks: "Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler>interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>Metoda może być używana z <xref:System.Web.UI.WebControls.Button>decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>jest właściwość `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> definiuje ogłaszania zwrotnego."
    return:
      type: System.String
      description: "Ciąg znaków, gdy traktowane jako skryptu na komputerze klienckim, ogłaszanie klienta inicjuje."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> Parametru<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca ciąg, który może być używany w przypadku klienta, powoduje odświeżenie strony do serwera. Ciąg odwołania jest określony przez określony formant, który obsługuje ogłaszania zwrotnego i argument ciągu informacji dodatkowych zdarzeń."
  remarks: "Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler>interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>Metoda może być używana z <xref:System.Web.UI.WebControls.Button>decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>jest właściwość `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - "The following code example demonstrates the use of the GetPostBackEventReference method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_2.aspx)]"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serwer <xref href=&quot;System.Web.UI.Control&quot;> </xref> która przetwarza ogłaszania zwrotnego na serwerze."
    - id: argument
      type: System.String
      description: "Parametry opcjonalne argumenty do przekazania do formantu, który przetwarza ogłaszania zwrotnego."
    return:
      type: System.String
      description: "Ciąg znaków, gdy traktowane jako skryptu po stronie klienta, inicjuje ogłaszania zwrotnego."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca ciąg, który może być używany w przypadku klienta, powoduje odświeżenie strony do serwera. Ciąg odwołania jest zdefiniowany przez określony <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> obiektu. Opcjonalnie rejestruje zdarzenia odwołanie do sprawdzania poprawności."
  remarks: "Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler>interfejs na potrzeby <xref:System.Web.UI.Page>obiektów, należy użyć dyrektywy.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>Metoda może być używana z <xref:System.Web.UI.WebControls.Button>decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>jest właściwość `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Jeśli `registerForEventValidation` jest `true`, wywołania metody GetPostBackEventReference <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>Metoda rejestrowania zdarzeń odwołanie do sprawdzania poprawności z identyfikator unikatowy formantu reprezentujący kontrolkę klienta, który generuje zdarzenie.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> definiuje ogłaszania zwrotnego."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zarejestrować zdarzenie odwołanie do weryfikacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Ciąg znaków, gdy traktowane jako skryptu na komputerze klienckim, ogłaszanie klienta inicjuje."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca ciąg do użycia w przypadku klienta powoduje odświeżenie strony do serwera. Ciąg odwołania jest określony przez określony formant, który obsługuje ogłaszania zwrotnego i argument ciągu informacji dodatkowych zdarzeń. Opcjonalnie rejestruje zdarzenia odwołanie do sprawdzania poprawności."
  remarks: "Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler>interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>Metoda może być używana z <xref:System.Web.UI.WebControls.Button>decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>jest właściwość `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button>kontroli.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Jeśli `registerForEventValidation` ma wartość true, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>wywołania metody <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>Metoda rejestrowania zdarzeń odwołanie do sprawdzania poprawności z identyfikator unikatowy formantu reprezentujący kontrolkę klienta, który generuje zdarzenie.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serwer <xref href=&quot;System.Web.UI.Control&quot;> </xref> która przetwarza ogłaszania zwrotnego na serwerze."
    - id: argument
      type: System.String
      description: "Parametry opcjonalne argumenty do przekazania do `control`."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zarejestrować zdarzenie odwołanie do weryfikacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Ciąg znaków, gdy traktowane jako skryptu po stronie klienta, inicjuje ogłaszania zwrotnego."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  id: GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera adres URL odwołania do zasobu w zestawie."
  remarks: "Metoda GetWebResourceUrl zwraca URL odwołania do zasobu osadzonego w zestawie. Zwracane odwołanie nie jest zakodowane w adresie URL. Zasoby mogą być plików skryptów, obrazy lub żadnych plików statycznych. Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu.       Zasób sieci Web zarejestrowane na stronie jest unikatowo identyfikowana przez jego typem i nazwą. Może być zarejestrowany tylko jeden zasób z danego typu i pary nazwa ze stroną. Podjęto próbę zarejestrowania z zasobem, który jest już zarejestrowany nie tworzy duplikat zarejestrowanych zasobów.       Metoda GetWebResourceUrl jest używana w połączeniu z <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>metodę dostępu do zasobów osadzonych w zestawach.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Aby uzyskać więcej informacji o użyciu zasobów w aplikacjach, zobacz [Omówienie zasobów strony sieci Web programu ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the GetWebResourceUrl method. The *type* parameter in this example is set to the type of class in the assembly containing the resource. The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served. Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`. The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object. If you are using [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected. If you are compiling the library at the command line, use the  switch to embed the resource.  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```"
  syntax:
    content: public string GetWebResourceUrl (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Typ zasobu."
    - id: resourceName
      type: System.String
      description: "Pełna nazwa zasobu w zestawie."
    return:
      type: System.String
      description: "Adres URL odwołania do zasobu."
  overload: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The web resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The web resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy blok skryptu klienta jest zarejestrowane w usłudze <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu określonego klucza."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.       Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.       To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>Metoda wywołuje przeciążenia, które przyjmuje zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page>obiekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - >-
    [!code-cs[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_0_1.aspx)]
     [!code-vb[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_0_1.aspx)]
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Klucz do wyszukania bloku skryptu klienta."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  id: IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy blok skryptu klienta jest zarejestrowane w usłudze <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu klucza i typu."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.       Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu. Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu."
  example:
  - "The following code example demonstrates the use of the IsClientScriptBlockRegistered method. Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/b20ef5ac-aa44-4132-8ad3-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/b20ef5ac-aa44-4132-8ad3-_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ bloku skryptu klienta do wyszukiwania."
    - id: key
      type: System.String
      description: "Klucz do wyszukania bloku skryptu klienta."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Typ skryptu klienta jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  id: IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy skrypt po stronie klienta obejmują został zarejestrowany za pomocą <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu określonego klucza."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.       Skrypt po stronie klienta obejmują jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.       To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>Metoda wywołuje przeciążenia, które przyjmuje zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page>obiektu.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Klucz skrypt po stronie klienta obejmują do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dołączysz skrypt po stronie klienta jest zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  id: IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy skrypt po stronie klienta obejmują został zarejestrowany za pomocą <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu klucza i typu."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>zawiera metody w celu uniknięcia rejestrowanie skrypt po stronie klienta duplikatów.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.       Skrypt po stronie klienta obejmują jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu. Na przykład podczas dostępu do zasobu, przy użyciu wystąpienia strony, należy określić `Page` typu."
  example:
  - "The following code example demonstrates the use of the IsClientScriptIncludeRegistered method. Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/1a97f23b-4196-4af6-89d9-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/1a97f23b-4196-4af6-89d9-_1.aspx)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ skryptu klienta obejmują do wyszukania."
    - id: key
      type: System.String
      description: "Klucz skrypt po stronie klienta obejmują do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dołączysz skrypt po stronie klienta jest zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Skrypt po stronie klienta obejmują typ jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  id: IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu określonego klucza."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metody w celu uniknięcia rejestrowanie zduplikowane instrukcje OnSubmit.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Jest to szczególnie ważne, jeśli jest wymagany dużą ilość zasobów serwera w celu utworzenia.       Instrukcja jest unikatowo identyfikowana przez jego klucza i jej typie. Instrukcje z tego samego klucza i typ są traktowane jako duplikaty.       To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>Metoda wywołuje przeciążenia, które przyjmuje zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page>obiekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Klucz instrukcji OnSubmit do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nie zarejestrowano instrukcji OnSubmit; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  id: IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu określonego klucza i typu."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metodę, aby uniknąć zduplikowanych instrukcje rejestrowania.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Jest to szczególnie ważne, jeśli jest wymagany dużą ilość zasobów serwera w celu utworzenia.       Instrukcja jest unikatowo identyfikowana przez jego klucza i jej typie. Instrukcje z tego samego klucza i typ są traktowane jako duplikaty. Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu. Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu."
  example:
  - "The following code example demonstrates the use of the IsOnSubmitStatementRegistered method. A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/081fc7d2-9213-49e8-ad42-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/081fc7d2-9213-49e8-ad42-_1.aspx)]"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ instrukcji OnSubmit do wyszukania."
    - id: key
      type: System.String
      description: "Klucz instrukcji OnSubmit do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nie zarejestrowano instrukcji OnSubmit; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Typ instrukcji OnSubmit jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu określonego klucza."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.       Skrypt uruchamiania jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.       To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>Metoda wywołuje przeciążenia, które przyjmuje zarówno ciąg `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page>obiekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Klucz uruchomienia skryptu do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  id: IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu określonego klucza i typu."
  remarks: "Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.       Skrypt uruchamiania klienta jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty."
  example:
  - "The following code example demonstrates the use of the IsStartupScriptRegistered method. Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/31c56db0-942d-4a34-be1e-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/31c56db0-942d-4a34-be1e-_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ uruchomienia skryptu do wyszukania."
    - id: key
      type: System.String
      description: "Klucz uruchomienia skryptu do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Typ uruchamiania skryptu jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje deklaracji tablicy JavaScript z <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu tablicy nazwy i wartości tablicy."
  remarks: "The RegisterArrayDeclaration checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter. Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed. If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.  \n  \n If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\\\\") in the `arrayValue` parameter. The value of the `arrayValue` parameter should be a single element. If more than one value needs to be added to the array, make multiple calls using the RegisterArrayDeclaration method."
  example:
  - "The following code example demonstrates the use of the RegisterArrayDeclaration and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/fb15aead-cb5d-4924-8be4-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/fb15aead-cb5d-4924-8be4-_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "Nazwa tablicy do zarejestrowania."
    - id: arrayValue
      type: System.String
      description: "Tablica wartości lub wartości do zarejestrowania."
  overload: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>arrayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje klienta skryptu <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu typu, klucz i skryptu literału."
  remarks: "Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy. Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.       Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metodę, aby określić, czy skrypt po stronie klienta z danym kluczem i parę typ jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skrypt.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>       W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metody, należy się upewnić, że skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>       <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>Metoda dodaje blok skryptu na początku renderowanej strony.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane. Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder>do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/csharp/41f57bff-a479-4a3c-91bb-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/visualbasic/41f57bff-a479-4a3c-91bb-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Typ skryptu klienta do rejestracji."
    - id: key
      type: System.String
      description: "Klucz skryptu klienta do rejestracji."
    - id: script
      type: System.String
      description: "Literał zarejestrować skryptu klienta."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje klienta skryptu <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu typu, kluczy skryptu literału i logicznych wartość wskazującą, czy można dodać tagów skryptu."
  remarks: "Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy. Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.       Wywołanie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metodę, aby określić, czy skrypt po stronie klienta z danego typu parę klucz jest już zarejestrowany.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Dzięki temu można uniknąć niepotrzebnego próby dodania skryptu.       W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metody, można określić, czy skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu przy użyciu `addScriptTags` parametru.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Ustawienie `addScriptTags` do `true` wskazuje automatycznie dodawane tagów skryptu.       <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>Metoda dodaje blok skryptu na początku renderowanej strony.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane. Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder>do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method. Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/e4221441-a348-44c8-8a15-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/e4221441-a348-44c8-8a15-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Typ skryptu klienta do rejestracji."
    - id: key
      type: System.String
      description: "Klucz skryptu klienta do rejestracji."
    - id: script
      type: System.String
      description: "Literał zarejestrować skryptu klienta."
    - id: addScriptTags
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy dodać tagi skryptu."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Typ bloku skryptu klienta jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  id: RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje klienta skryptu <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu klucza i adresu URL, który umożliwia uruchomienie skryptu można wywoływać z klienta."
  remarks: "Skrypt po stronie klienta obejmują jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy. Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.       Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>metodę, aby ustalić, czy skrypt po stronie klienta obejmują z danym kluczem oraz pary typu jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skrypt.</xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>      > [!NOTE] > Do rozpoznania adresu URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A>metody.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Ta metoda używa kontekstu adres URL, na którym jest ona wywoływana, aby rozpoznać ścieżki.       To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>Metoda wywołuje przeciążenia, które przyjmuje `key`, `URL`, a `type` parametru.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>       Metoda dodaje blok skryptu w górnej części renderowanej strony."
  example:
  - For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.
  syntax:
    content: public void RegisterClientScriptInclude (string key, string url);
    parameters:
    - id: key
      type: System.String
      description: "Klucz skrypt po stronie klienta obejmują do zarejestrowania."
    - id: url
      type: System.String
      description: "Adres URL skryptu klienta obejmują do zarejestrowania."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  id: RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skrypt po stronie klienta obejmują z rejestrów <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu typu klucza i adres URL."
  remarks: "Tego przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>przyjmuje — metoda *klucza* i *adres url* parametrów, aby określić skrypt, a także `type` obejmują parametr, aby określić identyfikator skryptu klienta.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu. Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu.      > [!NOTE] > Do rozpoznania adresu URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A>metody.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Ta metoda używa kontekstu adres URL, na którym jest ona wywoływana, aby rozpoznać ścieżki.       Ta metoda dodaje blok skryptu w górnej części renderowanej strony."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptInclude method. Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/cbae2904-30a8-438b-9fac-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/cbae2904-30a8-438b-9fac-_1.aspx)]  \n  \n This example requires a JavaScript file named Script_include.js with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public void RegisterClientScriptInclude (Type type, string key, string url);
    parameters:
    - id: type
      type: System.Type
      description: "Typ skryptu klienta obejmują do zarejestrowania."
    - id: key
      type: System.String
      description: "Klucz skrypt po stronie klienta obejmują do zarejestrowania."
    - id: url
      type: System.String
      description: "Adres URL skryptu klienta obejmują do zarejestrowania."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Skrypt po stronie klienta obejmują typ jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The URL is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The URL is empty."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  id: RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje klienta zasobu skryptu z <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu typu i nazwy zasobu."
  remarks: "Metoda RegisterClientScriptResource jest używany podczas uzyskiwania dostępu do zasobów skompilowanego z zestawów przy użyciu programu obsługi WebResource.axd HTTP. Metoda RegisterClientScriptResource rejestruje skryptu <xref:System.Web.UI.Page>obiektu i uniemożliwia zduplikowane skryptów.</xref:System.Web.UI.Page> Ta metoda opakowuje zawartość adresu URL zasobu z `<script>` bloku elementu."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptResource method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```  \n  \n Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class."
  syntax:
    content: public void RegisterClientScriptResource (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Typ zasobu skryptu klienta do rejestracji."
    - id: resourceName
      type: System.String
      description: "Nazwa zasobu skryptu klienta do rejestracji."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The client resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  id: RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) określonego formantu podany identyfikator formantu, atrybut nazwy i wartości atrybutu."
  remarks: "Metoda RegisterExpandoAttribute rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) na określony <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> Atrybut expando ustawiono dynamicznie z poziomu języka JavaScript w celu zachowania zgodności XHTML dla znacznika renderowanych formantu. Cudzysłowy i ukośników odwrotnych w wartości atrybutu niestandardowego (expando) będą miały zmienione znaczenie. Jeśli nie chcesz escape cudzysłowy i ukośników odwrotnych, wywołanie <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>przeciążyć metodę i ustawić `encode` parametr `false`.</xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>       Jeśli nie odnaleziono atrybutu expando lub Dodaj atrybut expando do formantu nie zostanie odnaleziony, nadal jest emitowany skryptu klienta, ale nie wpłynie formantu."
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);
    parameters:
    - id: controlId
      type: System.String
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> Na stronie zawierającej atrybutu niestandardowego."
    - id: attributeName
      type: System.String
      description: "Nazwa atrybutu niestandardowego do zarejestrowania."
    - id: attributeValue
      type: System.String
      description: "Wartość atrybutu niestandardowego."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  id: RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) określonego formantu podany identyfikator formantu, nazwę atrybutu, wartość atrybutu i wartość logiczną wskazującą, czy do kodowania wartości atrybutu."
  remarks: "Metoda RegisterExpandoAttribute rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) na określony <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> Atrybut expando ustawiono dynamicznie z poziomu języka JavaScript w celu zachowania zgodności XHTML dla znacznika renderowanych formantu. Ustaw `encode` parametr `true` Chcąc escape cudzysłowy i ukośników odwrotnych w wartości atrybutu z expando.       Jeśli nie odnaleziono atrybutu expando lub Dodaj atrybut expando do formantu nie zostanie odnaleziony, nadal jest emitowany skryptu klienta, ale nie wpłynie formantu."
  example:
  - "The following code example demonstrates how to use the RegisterExpandoAttribute method of the <xref:System.Web.UI.ClientScriptManager> class. The client script in the rendered page sets the `title` attribute of a `<span>` element.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/visualbasic/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/csharp/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]"
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);
    parameters:
    - id: controlId
      type: System.String
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> Na stronie zawierającej atrybutu niestandardowego."
    - id: attributeName
      type: System.String
      description: "Nazwa atrybutu niestandardowego do zarejestrowania."
    - id: attributeValue
      type: System.String
      description: "Wartość atrybutu niestandardowego."
    - id: encode
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy kodowanie atrybutu niestandardowego do zarejestrowania."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  id: RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje identyfikator unikatowy formantu reprezentujący kontroli klienta generowania zdarzenia odwołanie do zdarzenia do weryfikacji."
  remarks: "Aby uzyskać dodatkowe informacje i przykłady, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metody.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  example:
  - "The following example shows how to use the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_1_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_1_1.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  id: RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje odwołanie do zdarzenia do sprawdzania poprawności z <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>."
  remarks: "Aby uzyskać dodatkowe informacje i przykłady, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metody.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  syntax:
    content: public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> obiekt, który określa, jak jest generowany klienta JavaScript do zainicjowania zdarzenia odświeżania strony."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  id: RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje odwołanie do zdarzenia do walidacji formantu Unikatowy identyfikator zdarzenia argumenty i reprezentujący kontroli klienta generowania zdarzenia."
  remarks: ''
  example:
  - "The following code example demonstrates using the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]  \n  \n The following code example demonstrates using the RegisterForEventValidation method to register a callback for validation.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia."
    - id: argument
      type: System.String
      description: "Przekazano argumentów zdarzenia ze zdarzeniem klienta."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metoda jest wywoływana przed <xref:System.Web.UI.Page.Render*>metody.</xref:System.Web.UI.Page.Render*>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje ukryte wartości z <xref href=&quot;System.Web.UI.Page&quot;> </xref> obiektu."
  remarks: "Metoda RegisterHiddenField tworzy ukryty `<input>` elementu na stronie HTML renderowanych."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and RegisterHiddenField methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/0defa6d5-d8c8-43f1-af03-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/0defa6d5-d8c8-43f1-af03-_1.aspx)]"
  syntax:
    content: public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "Nazwa pola ukrytego do zarejestrowania."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "Wartość początkowa pola, aby zarejestrować."
  overload: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hiddenFieldName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  id: RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje instrukcję OnSubmit z <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu typu klucza i skrypt literału. Podczas wykonywania instrukcji <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> zostało przesłane."
  remarks: "Instrukcja OnSubmit jest unikatowo identyfikowana przez jego klucza i jej typie. Instrukcje z tego samego klucza i typ są traktowane jako duplikaty. Na stronie można zarejestrować tylko jednej instrukcji z danego typu i parę kluczy. Podjęto próbę zarejestrowania instrukcję, która jest już zarejestrowany nie utworzy duplikat instrukcji.       Wywołaj <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>metodę, aby ustalić, czy instrukcji OnSubmit jest już zarejestrowany z daną parą klucza i typ i uniknąć niepotrzebnego próby dodania skrypt.</xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>       `script` Parametru metody RegisterOnSubmitStatement może zawierać wielu poleceń skryptu, jak długo są poprawnie rozdzielone średnikami (;).       RegisterOnSubmitStatement dodaje skrypt, który jest wykonywany przed przesłaniem strony daje możliwość anulowanie przesyłania.       Aby uzyskać więcej informacji na temat formularzy HTML i `OnSubmit` atrybutów, zobacz [witryny sieci Web w sieci World Wide Web konsorcjum W3C](http://go.microsoft.com/fwlink/?linkid=37125)."
  example:
  - "The following code example demonstrates the use of the RegisterOnSubmitStatement method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/597b1063-1251-4d00-82f9-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/597b1063-1251-4d00-82f9-_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Typ instrukcji OnSubmit do zarejestrowania."
    - id: key
      type: System.String
      description: "Klucz instrukcji OnSubmit do zarejestrowania."
    - id: script
      type: System.String
      description: "Literał skryptu instrukcji OnSubmit do zarejestrowania."
  overload: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  id: RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje uruchomienia skryptu <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu typu klucza i skrypt literału."
  remarks: "Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy. Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.       Wywołaj <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodę, aby określić, czy z danym kluczem i parę typ skryptu uruchamiania jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skrypt.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metody, należy się upewnić, że skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>       Blok skryptu dodawany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>Metoda jest wykonywana po stronie zakończeniu ładowania, ale przed stroną <xref:System.Web.UI.Control.OnLoad%2A>zdarzenie jest wywoływane.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane. Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder>do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the beginning and closing script tags are included within the `script` parameter. To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/csharp/77e56a73-ddd0-4c6d-99c5-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/visualbasic/77e56a73-ddd0-4c6d-99c5-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Typ uruchomienia skryptu do zarejestrowania."
    - id: key
      type: System.String
      description: "Klucz uruchomienia skryptu do zarejestrowania."
    - id: script
      type: System.String
      description: "Skrypt uruchamiania literału do zarejestrowania."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  id: RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rejestruje uruchomienia skryptu <xref href=&quot;System.Web.UI.Page&quot;> </xref> przy użyciu typu, klucz skrypt literału i wartość logiczną wskazującą, czy dodać tagi skryptu."
  remarks: "Skrypt uruchamiania jest unikatowo identyfikowana przez jego klucza i jej typie. Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty. Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy. Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.       Wywołaj <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodę, aby określić, czy z danym kluczem i parę typ skryptu uruchamiania jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skrypt.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metody, można określić, czy skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu przy użyciu `addScriptTags` parametru.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Ustawienie `addScriptTags` do `true` wskazuje automatycznie dodawane tagów skryptu.       Blok skryptu dodawany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>Metoda jest wykonywana po stronie zakończeniu ładowania, ale przed stroną <xref:System.Web.UI.Control.OnLoad%2A>zdarzenie jest wywoływane.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane. Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder>do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Typ uruchomienia skryptu do zarejestrowania."
    - id: key
      type: System.String
      description: "Klucz uruchomienia skryptu do zarejestrowania."
    - id: script
      type: System.String
      description: "Skrypt uruchamiania literału do zarejestrowania."
    - id: addScriptTags
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy dodać tagi skryptu."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  id: ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Weryfikuje zdarzenie klienta, który został zarejestrowany dla zdarzeń weryfikacji przy użyciu <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metody.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  syntax:
    content: public void ValidateEvent (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  id: ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Weryfikuje zdarzenie klienta, który został zarejestrowany dla zdarzeń weryfikacji przy użyciu <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metody.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  remarks: ''
  example:
  - "The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the ValidateEvent method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_3_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_3_1.aspx)]"
  syntax:
    content: public void ValidateEvent (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia."
    - id: argument
      type: System.String
      description: "Argumenty przekazywane ze zdarzeniem klienta."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uniqueId</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference
  nameWithType: ClientScriptManager.GetCallbackEventReference
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: ClientScriptManager.GetPostBackEventReference
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl
  nameWithType: ClientScriptManager.GetWebResourceUrl
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: ClientScriptManager.IsStartupScriptRegistered
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: ClientScriptManager.RegisterArrayDeclaration
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: ClientScriptManager.RegisterClientScriptBlock
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude
  nameWithType: ClientScriptManager.RegisterClientScriptInclude
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource
  nameWithType: ClientScriptManager.RegisterClientScriptResource
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute
  nameWithType: ClientScriptManager.RegisterExpandoAttribute
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation
  nameWithType: ClientScriptManager.RegisterForEventValidation
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField
  nameWithType: ClientScriptManager.RegisterHiddenField
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript
  nameWithType: ClientScriptManager.RegisterStartupScript
- uid: System.Web.UI.ClientScriptManager.ValidateEvent*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent
  nameWithType: ClientScriptManager.ValidateEvent
