### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.IApplicationTrustManager
  id: IApplicationTrustManager
  children:
  - System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  langs:
  - csharp
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
  type: Interface
  summary: "Określa, czy mają zostać wykonane aplikacji i który zestaw uprawnień może być przyznany do niego."
  remarks: "Menedżerowie zaufania musi implementować interfejs IApplicationTrustManager. Wywołania hosta <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>metodę, aby określić, czy mają zostać wykonane aplikacji i które uprawnienia do aplikacji.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>       W [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] i nowszych istnieje tylko jeden Menedżera zaufania, który może być niestandardowych implementacji interfejsu IApplicationTrustManager. Domyślna implementacja menedżera zaufania monituje użytkownika o uprawnienia do instalowania aplikacji i podniesienie uprawnień aplikacji. Implementacje Menedżera zaufania może zawierać środowiska innego użytkownika. Implementacja może na przykład sprawdzić listę enterprise zaufanych aplikacji zamiast monitowanie użytkownika o informacje."
  example:
  - "The following example shows a simple implementation of IApplicationTrustManager.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/csharp/t-system.security.policy_3_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/visualbasic/t-system.security.policy_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IApplicationTrustManager : System.Security.ISecurityEncodable
  implements:
  - System.Security.ISecurityEncodable
  platform:
  - net462
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Określa, czy mają zostać wykonane aplikacji i który zestaw uprawnień może być przyznany do niego."
  remarks: "Metoda DetermineApplicationTrust jest wywoływana przez hosta w celu ustalenia, czy aplikacji, które mają zostać wykonane i może być przyznany zestaw uprawnień go. Zwraca DetermineApplicationTrust <xref:System.Security.Policy.ApplicationTrust>obiekt z <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>ustawić właściwość, która zawiera uprawnienie reprezentujący uprawnienia, aby otrzymać do każdego zestawu wykonywania w kontekście aplikacji.</xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> </xref:System.Security.Policy.ApplicationTrust> Uprawnienia nadanego nie dotyczą zestawów w globalnej pamięci podręcznej zestawów. <xref:System.Security.Policy.ApplicationTrust>Obiekt ma również <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>właściwość, która ustawia Menedżera zaufania, aby wskazać, czy aplikacja powinna być zaufane.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> </xref:System.Security.Policy.ApplicationTrust> Jeśli Menedżera zaufania wskazuje, że aplikacja jest zaufany, host aktywuje aplikację i udziela jego zestawów zestawu uprawnień w <xref:System.Security.Policy.ApplicationTrust>kolekcji.</xref:System.Security.Policy.ApplicationTrust>"
  example:
  - "The following example shows an implementation of the DetermineApplicationTrust method for a custom trust manager. This code example is part of a larger example provided for the <xref:System.Security.Policy.IApplicationTrustManager> interface.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/csharp/24b6db65-f82b-47e4-ac93-_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/visualbasic/24b6db65-f82b-47e4-ac93-_1.vb)]"
  syntax:
    content: public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Kontekst aktywacji dla aplikacji."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "Kontekst Menedżera zaufania dla aplikacji."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Obiekt, który zawiera zabezpieczeń decyzji dotyczących aplikacji."
  overload: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust
