### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.CacheItemPolicy
  id: CacheItemPolicy
  children:
  - System.Runtime.Caching.CacheItemPolicy.#ctor
  - System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  - System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  - System.Runtime.Caching.CacheItemPolicy.Priority
  - System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  - System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  - System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  langs:
  - csharp
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy
  fullName: System.Runtime.Caching.CacheItemPolicy
  type: Class
  summary: "Reprezentuje zestaw szczegóły wykluczenia i wygaśnięcia wpisu pamięci podręcznej określonych."
  remarks: "Wystąpienie CacheItemPolicy zawiera informacje, które mogą być skojarzone z wpisu pamięci podręcznej. Na przykład, jeśli wpis pamięci podręcznej jest usunięty z pamięci podręcznej, <xref:System.Runtime.Caching.CacheEntryUpdateArguments>obiekt jest przekazywany do metody wywołania zwrotnego.</xref:System.Runtime.Caching.CacheEntryUpdateArguments> <xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A>Właściwość <xref:System.Runtime.Caching.CacheEntryUpdateArguments>obiekt można przekazać odwołania do wystąpienia CacheItemPolicy, które mogą obejmować szczegóły wykluczenia i wygaśnięcia wpisu pamięci podręcznej.</xref:System.Runtime.Caching.CacheEntryUpdateArguments> </xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A>       Niektóre metody w <xref:System.Runtime.Caching.MemoryCache>i <xref:System.Runtime.Caching.ObjectCache>klasy zaakceptować wystąpieniem CacheItemPolicy do opisu zasady wykluczania lub wygaśnięcia.</xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.MemoryCache>"
  example:
  - "The following example shows how to create an in-memory cache item that monitors the path for a text file. The cache creates a CacheItemPolicy object and sets the <xref:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration%2A> property to evict the cache after 60 seconds.  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub Button1_Click(ByVal sender As Object, _  \n            ByVal e As System.EventArgs) Handles Button1.Click  \n    Dim cache As ObjectCache = MemoryCache.Default  \n    Dim fileContents As String = TryCast(cache(\"filecontents\"), _  \n            String)  \n    If fileContents Is Nothing Then  \n        Dim policy As New CacheItemPolicy()  \n        policy.AbsoluteExpiration = _  \n            DateTimeOffset.Now.AddSeconds(60.0)  \n        Dim filePaths As New List(Of String)()  \n     Dim cachedFilePath As String = Server.MapPath(\"~\") & _  \n         \"\\cacheText.txt\"  \n        filePaths.Add(cachedFilePath)  \n        policy.ChangeMonitors.Add(New _  \n            HostFileChangeMonitor(filePaths))  \n  \n        ' Fetch the file contents.  \n        fileContents = File.ReadAllText(cachedFilePath)  \n        cache.Set(\"filecontents\", fileContents, policy)  \n    End If  \n    Label1.Text = fileContents  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void Button1_Click(object sender, EventArgs e)  \n    {  \n        ObjectCache cache = MemoryCache.Default;  \n            string fileContents = cache[\"filecontents\"] as string;  \n            if (fileContents == null)  \n            {  \n                CacheItemPolicy policy = new CacheItemPolicy();  \n                policy.AbsoluteExpiration =   \n                    DateTimeOffset.Now.AddSeconds(60.0);  \n  \n                List<string> filePaths = new List<string>();  \n             string cachedFilePath = Server.MapPath(\"~\") +   \n                 \"\\\\cacheText.txt\";  \n             filePaths.Add(cachedFilePath);  \n  \n                policy.ChangeMonitors.Add(new   \n                    HostFileChangeMonitor(filePaths));  \n  \n                // Fetch the file contents.  \n                fileContents = File.ReadAllText(cachedFilePath);  \n  \n                cache.Set(\"filecontents\", fileContents, policy);  \n  \n            }  \n  \n            Label1.Text = fileContents;  \n        }  \n```"
  syntax:
    content: public class CacheItemPolicy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: CacheItemPolicy()
  nameWithType: CacheItemPolicy.CacheItemPolicy()
  fullName: System.Runtime.Caching.CacheItemPolicy.CacheItemPolicy()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Caching.CacheItemPolicy&quot;> </xref> klasy."
  syntax:
    content: public CacheItemPolicy ();
    parameters: []
  overload: System.Runtime.Caching.CacheItemPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  id: AbsoluteExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: AbsoluteExpiration
  nameWithType: CacheItemPolicy.AbsoluteExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera lub ustawia wartość wskazującą, czy wykluczyć wpisu pamięci podręcznej po określonym czasie."
  syntax:
    content: public DateTimeOffset AbsoluteExpiration { get; set; }
    return:
      type: System.DateTimeOffset
      description: "Okres czasu, jaki musi minąć, zanim wpis pamięci podręcznej zostanie usunięty. Wartość domyślna to <xref href=&quot;System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&quot;> </xref>, co oznacza, że wpis nie wygaśnie."
  overload: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  id: ChangeMonitors
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: ChangeMonitors
  nameWithType: CacheItemPolicy.ChangeMonitors
  fullName: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera kolekcję <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> obiektów, które są skojarzone z wpisu pamięci podręcznej."
  remarks: "Można dodać do lub usunąć zmiany monitory, które są skojarzone z wpisu pamięci podręcznej. Jednak zestaw monitorów zmiany muszą być ukończone przed przekazujesz <xref:System.Runtime.Caching.CacheItemPolicy>wystąpienie do <xref:System.Runtime.Caching.ObjectCache>implementacji.</xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.CacheItemPolicy> Jeśli zmienisz zestaw monitorów zmiany na <xref:System.Runtime.Caching.CacheItemPolicy>obiektu po <xref:System.Runtime.Caching.CacheItemPolicy>obiekt został przekazany do <xref:System.Runtime.Caching.ObjectCache>implementacji, zmiany nie obowiązują.</xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.CacheItemPolicy> </xref:System.Runtime.Caching.CacheItemPolicy>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Runtime.Caching.ChangeMonitor> ChangeMonitors { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Runtime.Caching.ChangeMonitor}
      description: "Kolekcja monitorów zmiany. Wartość domyślna to pustej kolekcji."
  overload: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.Priority
  id: Priority
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: Priority
  nameWithType: CacheItemPolicy.Priority
  fullName: System.Runtime.Caching.CacheItemPolicy.Priority
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera lub ustawia ustawienie priorytetu, który służy do określenia, czy wykluczyć wpisu pamięci podręcznej."
  remarks: "W programie ASP.NET, wyliczenie priorytet ma tylko dwa możliwe priorytety: <xref:System.Runtime.Caching.CacheItemPriority>(co oznacza brak priorytetu), i <xref:System.Runtime.Caching.CacheItemPriority>(co oznacza, że wpis nie można usunąć).</xref:System.Runtime.Caching.CacheItemPriority> </xref:System.Runtime.Caching.CacheItemPriority> W związku z tym tylko priorytetu, które można ustawić jest, czy wpis pamięci podręcznej może pozostawać w pamięci podręcznej nieskończona.      > [!IMPORTANT] > Dodanie wpisu pamięci podręcznej na poziomie priorytetu <xref:System.Runtime.Caching.CacheItemPriority>może spowodować przepełnienie buforu z wpisów, które nigdy nie można usunąć pamięci podręcznej.</xref:System.Runtime.Caching.CacheItemPriority> Implementacje pamięci podręcznej, należy ustawić <xref:System.Runtime.Caching.CacheItemPriority>priorytet dla wpisu pamięci podręcznej tylko wtedy, gdy implementacja pamięci podręcznej udostępnia metody, aby wykluczyć wpisy z pamięci podręcznej oraz zarządzać liczbę wpisów pamięci podręcznej.</xref:System.Runtime.Caching.CacheItemPriority>"
  syntax:
    content: public System.Runtime.Caching.CacheItemPriority Priority { get; set; }
    return:
      type: System.Runtime.Caching.CacheItemPriority
      description: "Jedna z wartości wyliczenia, które wskazuje priorytet wykluczenia. Domyślna wartość priorytetu <xref href=&quot;System.Runtime.Caching.CacheItemPriority&quot;> </xref>, co oznacza brak priorytetu."
  overload: System.Runtime.Caching.CacheItemPolicy.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  id: RemovedCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: RemovedCallback
  nameWithType: CacheItemPolicy.RemovedCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera lub ustawia odwołanie do <xref href=&quot;System.Runtime.Caching.CacheEntryRemovedCallback&quot;> </xref> delegata, która jest wywoływana po wpis zostanie usunięty z pamięci podręcznej."
  remarks: "Po wpisu pamięci podręcznej został usunięty z pamięci podręcznej, pamięci podręcznej wywołuje obiektu wywołania zwrotnego, do której odwołuje się właściwość RemovedCallback. Implementacja pamięci podręcznej można użyć tego wywołania zwrotnego powiadomiono wywołującego metody wpisu pamięci podręcznej został usunięty."
  syntax:
    content: public System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback { get; set; }
    return:
      type: System.Runtime.Caching.CacheEntryRemovedCallback
      description: "Odwołanie do delegata, który jest wywoływany przez implementację buforu."
  overload: System.Runtime.Caching.CacheItemPolicy.RemovedCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  id: SlidingExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: CacheItemPolicy.SlidingExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera lub ustawia wartość wskazującą, czy wpis pamięci podręcznej powinien zostać wykluczony, jeśli nie była używana w danym przedziale czasu."
  syntax:
    content: public TimeSpan SlidingExpiration { get; set; }
    return:
      type: System.TimeSpan
      description: "Przedział czasu, w którym należy uzyskać wpisu pamięci podręcznej przed wpisu pamięci podręcznej zostanie usunięty z pamięci podręcznej. Wartość domyślna to <xref href=&quot;System.Runtime.Caching.ObjectCache.NoSlidingExpiration&quot;> </xref>, co oznacza że element nie mógł wygasnąć oparte na przedział czasu."
  overload: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  id: UpdateCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: UpdateCallback
  nameWithType: CacheItemPolicy.UpdateCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Pobiera lub ustawia odwołanie do <xref href=&quot;System.Runtime.Caching.CacheEntryUpdateCallback&quot;> </xref> delegata, która jest wywoływana przed wpisem pamięci podręcznej zostanie usunięty z pamięci podręcznej."
  syntax:
    content: public System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback { get; set; }
    return:
      type: System.Runtime.Caching.CacheEntryUpdateCallback
      description: "Odwołanie do delegata, który jest wywoływany przez implementację buforu."
  overload: System.Runtime.Caching.CacheItemPolicy.UpdateCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Caching.CacheItemPolicy.#ctor
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: CacheItemPolicy()
  nameWithType: CacheItemPolicy.CacheItemPolicy()
  fullName: System.Runtime.Caching.CacheItemPolicy.CacheItemPolicy()
- uid: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: AbsoluteExpiration
  nameWithType: CacheItemPolicy.AbsoluteExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: ChangeMonitors
  nameWithType: CacheItemPolicy.ChangeMonitors
  fullName: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
- uid: System.Collections.ObjectModel.Collection{System.Runtime.Caching.ChangeMonitor}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ChangeMonitor>
  nameWithType: Collection<ChangeMonitor>
  fullName: System.Collections.ObjectModel.Collection<System.Runtime.Caching.ChangeMonitor>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Runtime.Caching.ChangeMonitor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.Caching.ChangeMonitor
    name: ChangeMonitor
    nameWithType: ChangeMonitor
    fullName: ChangeMonitor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.CacheItemPolicy.Priority
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: Priority
  nameWithType: CacheItemPolicy.Priority
  fullName: System.Runtime.Caching.CacheItemPolicy.Priority
- uid: System.Runtime.Caching.CacheItemPriority
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItemPriority
  nameWithType: CacheItemPriority
  fullName: System.Runtime.Caching.CacheItemPriority
- uid: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: RemovedCallback
  nameWithType: CacheItemPolicy.RemovedCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
- uid: System.Runtime.Caching.CacheEntryRemovedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryRemovedCallback
  nameWithType: CacheEntryRemovedCallback
  fullName: System.Runtime.Caching.CacheEntryRemovedCallback
- uid: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: SlidingExpiration
  nameWithType: CacheItemPolicy.SlidingExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: UpdateCallback
  nameWithType: CacheItemPolicy.UpdateCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
- uid: System.Runtime.Caching.CacheEntryUpdateCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryUpdateCallback
  nameWithType: CacheEntryUpdateCallback
  fullName: System.Runtime.Caching.CacheEntryUpdateCallback
- uid: System.Runtime.Caching.CacheItemPolicy.#ctor*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy.CacheItemPolicy
- uid: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: AbsoluteExpiration
  nameWithType: CacheItemPolicy.AbsoluteExpiration
- uid: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: ChangeMonitors
  nameWithType: CacheItemPolicy.ChangeMonitors
- uid: System.Runtime.Caching.CacheItemPolicy.Priority*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: Priority
  nameWithType: CacheItemPolicy.Priority
- uid: System.Runtime.Caching.CacheItemPolicy.RemovedCallback*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: RemovedCallback
  nameWithType: CacheItemPolicy.RemovedCallback
- uid: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: SlidingExpiration
  nameWithType: CacheItemPolicy.SlidingExpiration
- uid: System.Runtime.Caching.CacheItemPolicy.UpdateCallback*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: UpdateCallback
  nameWithType: CacheItemPolicy.UpdateCallback
