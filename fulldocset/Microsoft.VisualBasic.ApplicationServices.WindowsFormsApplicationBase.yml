### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  id: WindowsFormsApplicationBase
  children:
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  langs:
  - csharp
  name: WindowsFormsApplicationBase
  nameWithType: WindowsFormsApplicationBase
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  type: Class
  summary: "Udostępnia właściwości, metody i zdarzenia związane z bieżącej aplikacji."
  remarks: "Właściwości udostępniane przez `My.Application` obiektu zwracanego dane, które są skojarzone tylko z bieżącej aplikacji lub DLL. Żadne informacje poziom systemu można zmienić z `My.Application`.       `My.Application` Obiekt składa się z następujących klas:- <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>zawiera elementy członkowskie, które są dostępne we wszystkich projektach.</xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>      -WindowsFormsApplicationBase zawiera elementy członkowskie, które są dostępne w aplikacjach formularzy systemu Windows.      - <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>zawiera elementy członkowskie, które są dostępne w aplikacji konsoli.</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>"
  example:
  - "This example uses a loop to iterate through the application's open forms, selects the forms that can be accessed directly by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. For information about how to access the open forms, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>.  \n  \n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \n  \n This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`."
  syntax:
    content: 'public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: WindowsFormsApplicationBase()
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&quot;> </xref> klasy."
  syntax:
    content: public WindowsFormsApplicationBase ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  id: '#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)'
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: WindowsFormsApplicationBase(AuthenticationMode)
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&quot;> </xref> klasy z określony tryb uwierzytelniania."
  remarks: "Jeśli `authenticationMode` parametr jest <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>wartości wyliczenia, a następnie ten konstruktor próbuje ustawić bieżącego wątku <xref:System.Threading.Thread.CurrentPrincipal%2A>właściwości <xref:System.Security.Principal.WindowsPrincipal>dla bieżącego użytkownika.</xref:System.Security.Principal.WindowsPrincipal> </xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>       Jeśli `authenticationMode` parametr jest <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>wartości wyliczenia, a następnie ten konstruktor pozostawia bieżący wątek <xref:System.Threading.Thread.CurrentPrincipal%2A>Właściwości bez zmian.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode>"
  syntax:
    content: public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);
    parameters:
    - id: authenticationMode
      type: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&quot;></xref>. Określa tryb uwierzytelniania aplikacji."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  id: ApplicationContext
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Pobiera <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> obiektu dla bieżącego wątku aplikacji formularzy systemu Windows."
  remarks: "Jest to zaawansowane elementu członkowskiego; nie ma w funkcji IntelliSense, chyba że kliknięciu **wszystkie** kartę.      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  syntax:
    content: public System.Windows.Forms.ApplicationContext ApplicationContext { get; }
    return:
      type: System.Windows.Forms.ApplicationContext
      description: "Ta właściwość zwraca <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> obiektu dla bieżącego wątku. Ten obiekt zawiera informacje kontekstowe o wątku."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  id: DoEvents
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: DoEvents()
  nameWithType: WindowsFormsApplicationBase.DoEvents()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Przetwarza wszystkie komunikaty systemu Windows w kolejce wiadomości."
  remarks: "`My.Application.DoEvents` Metody umożliwia aplikacji do obsługi innych zdarzeń, które może zostać wywołane, gdy kod działa. `My.Application.DoEvents` Metody zachowanie jest takie samo jak <xref:System.Windows.Forms.Application.DoEvents%2A>metody.</xref:System.Windows.Forms.Application.DoEvents%2A>       Po uruchomieniu aplikacji formularzy systemu Windows, tworzy nowy formularz, który następnie czeka na zdarzeń do obsłużenia. Zawsze formularz obsługi zdarzenia, takie jak kliknij przycisk, przetwarza cały kod skojarzony z tym zdarzeniem. Wszystkie inne zdarzenia oczekiwać w kolejce. Gdy swój kod obsługi zdarzenia, aplikacja nie odpowiada. Na przykład jeśli inne okno zostanie przeciągnięty u góry okna odświeżenia nie.       Jeśli należy wywołać `My.Application.DoEvents` w kodzie, aplikacja może obsługiwać inne zdarzenia. Na przykład, jeśli kod dodaje dane do <xref:System.Windows.Forms.ListBox>w pętli i po każdym kroku pętli wywołuje `My.Application.DoEvents`, odświeża formularza, gdy inne okno zostanie przeciągnięty nad nim</xref:System.Windows.Forms.ListBox> Jeśli usuniesz `My.Application.DoEvents` z poziomu kodu formularza nie będzie odświeżenia dopiero po zakończeniu obsługi zdarzeń kliknięcia przycisku wykonywania.       Zwykle Użyj tej metody w pętli do przetwarzania komunikatów.      > [!NOTE] > `My.Application.DoEvents` — Metoda nie przetwarza zdarzenia w taki sam sposób jak w formularzu. Użycie wielowątkowość formularza bezpośrednio obsługiwać zdarzenia. Aby uzyskać więcej informacji, zobacz [aplikacje wielowątkowe](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] > Jeśli wywołuje metodę, która obsługuje zdarzenie interfejsu użytkownika `My.Application.DoEvents` metody, metoda może być ponownie wprowadzić, przed zakończeniem. Może to się zdarzyć `My.Application.DoEvents` metoda przetwarza komunikatów systemu Windows i komunikatów systemu Windows może wywoływać zdarzenia.       W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Application.DoEvents` metody.      |||   |-|-|   | Aby | Zobacz |   | Zezwalaj na formularzu odpowiedzieć na dane wejściowe podczas zajęty interfejsu użytkownika | [Wskazówki: Obsługa zdarzeń](~/add/includes/ajax-current-ext-md.md)|      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Application.DoEvents` method to allow the UI for `TextBox1` to update.  \n  \n [!code-vb[VbVbalrMyApplication#6](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#6)]  \n  \n This code should be in a form that has a `TextBox1` component with a `Text` property."
  syntax:
    content: public void DoEvents ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  id: EnableVisualStyles
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Określa, czy tej aplikacji będą używać stylów systemu Windows XP do systemu windows, kontrolki itd."
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>Metoda wykorzystuje tę właściwość, aby ustalić, czy wywołać <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>.</xref:System.Windows.Forms.Application.EnableVisualStyles%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected bool EnableVisualStyles { get; set; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która wskazuje, czy ta aplikacja będzie używać stylów systemu Windows XP dla systemu windows, kontrolki itd.</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  id: HideSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: HideSplashScreen()
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Ukrywa ekranu powitalnego aplikacji."
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>Klasy tworzy ekranu powitalnego w oddzielnym wątku.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> Ta metoda marshals wywołanie zorganizuj poprawny wątek.       Ta metoda jest wywoływana po zakończeniu formularz główny ładowania."
  syntax:
    content: protected void HideSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  id: IsSingleInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Określa, czy ta aplikacja jest pojedyncze wystąpienie aplikacji."
  remarks: "<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A>— Metoda używa tej właściwości, aby określić, czy ta aplikacja jest pojedyncze wystąpienie aplikacji.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A>"
  syntax:
    content: protected bool IsSingleInstance { get; set; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która wskazuje, czy ta aplikacja jest pojedyncze wystąpienie aplikacji.</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  id: MainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Pobiera lub ustawia formularz główny dla tej aplikacji."
  remarks: "Użyj `MainForm` właściwości można pobrać lub ustawić <xref:System.Windows.Forms.Form>obiekt używający modelu zamykania uruchamiania aplikacji Visual Basic jako formularz główny aplikacji.</xref:System.Windows.Forms.Form>       Ta właściwość obsługuje [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] modelu zamykania uruchomienia aplikacji. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).       Zmiany w tej właściwości nie są zachowywane po zamknięciu aplikacji. Aby zmienić trwale formularza głównego, należy zmienić ustawienie **projektanta projektu**."
  syntax:
    content: protected System.Windows.Forms.Form MainForm { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "Pobiera lub ustawia formularz główny dla tej aplikacji."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  id: MinimumSplashScreenDisplayTime
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Określa minimalną długość czasu w milisekundach, dla których jest wyświetlany ekran powitalny."
  remarks: "`My.Application.MinimumSplashScreenDisplayTime` Właściwość umożliwia określenie minimalnej długości czasu ekranu powitalnego aplikacji do wyświetlenia. Jeśli formularz główny zakończeniu inicjowania w krótszym czasie niż co to jest określona przez tę właściwość ekranu powitalnego pozostaje do żądanej ilości upływu czasu, po tym czasie zostanie wyświetlony formularz główny. Jeśli aplikacja dłużej, aby rozpocząć, ekran powitalny jest zamknięty, gdy formularz główny staje się aktywny.       Po dodaniu ekranu powitalnego aplikacji przy użyciu narzędzia Projektant projektu ustawia `My.Application.MinimumSplashScreenDisplayTime` właściwości do 2000, podając czas wyświetlania minimalna dwie sekundy.       Ta właściwość obsługuje [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] modelu aplikacji. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).       Należy ustawić `My.Application.MinimumSplashScreenDisplayTime` właściwość w metodę, która zastępuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>lub <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>metody.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> Kod, który zastępuje metody <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>klasy powinny być wprowadzane w pliku ApplicationEvents.vb, który jest domyślnie ukryty.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>      ||   |-|   | Aby uzyskać dostęp do okna edytora kodu dla zastępowanie elementów członkowskich |   |&1;.  Z projektem wybranym **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć edytora kodu.<br />     Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](~/add/includes/ajax-current-ext-md.md). |      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example demonstrates how to set the `My.Application.MinimumSplashScreenDisplayTime` property by overriding the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> property.  \n  \n [!code-vb[VbVbalrMyApplication#51](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#51)]  \n  \n This example requires that the project have a splash screen.  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public int MinimumSplashScreenDisplayTime { get; set; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Minimalna długość czasu w milisekundach, dla których jest wyświetlany ekran powitalny."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  id: NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: NetworkAvailabilityChanged
  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Występuje, gdy dostępność sieci."
  remarks: "Uruchamia aplikację `NetworkAvailabilityChanged` zdarzeń zawsze zmienia dostępność sieci. Można użyć <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>Właściwość `e` parametr, aby uzyskać nowy stan połączenia sieciowego.</xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> Aby uzyskać bieżący stan połączenia sieciowego, należy użyć <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>Właściwości.</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>       To zdarzenie jest wywoływane w wątku głównego aplikacji z innymi zdarzeniami interfejsu użytkownika. Dzięki temu bezpośredni dostęp interfejsu użytkownika aplikacji do obsługi zdarzeń. Jednak jeśli aplikacja jest zajęta, obsługa inne zdarzenie interfejsu użytkownika, gdy to zdarzenie jest zgłaszane, to zdarzenie nie można przetworzyć obsługi zdarzeń zakończenie lub wywołuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>metody.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>       <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged>Zdarzeń zapewnia te same funkcje, ale to zdarzenie jest dostępna dla wszystkich typów aplikacji.</xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged>       Kod `NetworkAvailabilityChanged` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.      ||   |-|   | Aby uzyskać dostęp do okna edytora kodu dla zdarzeń aplikacji |   |&1;.  Projekt wybrany w **Eksploratora rozwiązań.** Kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć edytora kodu.<br />     Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](~/add/includes/ajax-current-ext-md.md). |      > [!NOTE] > Wiele centrów sieci zapewni połączenie sieciowe, nawet jeśli koncentrator jest odłączony od większej sieci. W rezultacie dla połączeń przewodowych to zdarzenie oznacza zmianę połączenia między komputerem a koncentratora.      > [!NOTE] > `NetworkAvailabilityChanged` Zdarzenie nie jest wywoływane przez aplikacji uruchamianych w systemie Windows 95 lub Windows 98 lub gdy są uruchamiane z systemem innym niż administrator w systemie Windows 2000. Jeśli aplikacja może działać w tych systemach operacyjnych, użyj <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>Właściwość do sprawdzenia dostępności sieci.</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example calls the `SetConnectionStatus` method of the default `Form1` class when the network availability changes.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section.  \n  \n The project should have a form named `Form1`. It should have a method named `SetConnectionStatus` that takes a `Boolean` parameter.  \n  \n [!code-vb[VbVbalrMyApplication#9](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#9)]"
  syntax:
    content: public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;
    return:
      type: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  id: OnCreateMainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnCreateMainForm()
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta na emitowanie kodu, który konfiguruje ekran powitalny i ekran główny."
  remarks: "Domyślnie ta metoda nie działa. Jednak po wybraniu formularz główny aplikacji w [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **projektanta projektu**, Projektant przesłonięcia tej metody za pomocą metody, która ustawia <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>Właściwości nowe wystąpienie klasy głównym formularza.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>       Ta metoda jest wywoływana przez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A>metody.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A>"
  syntax:
    content: protected virtual void OnCreateMainForm ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  id: OnCreateSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnCreateSplashScreen()
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta na emitowanie kodu, który inicjuje ekranu powitalnego."
  remarks: "Domyślnie ta metoda nie działa. Jeśli wybierzesz ekranu powitalnego aplikacji w [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Projektant projektu**, Projektant zastępuje metodę OnCreateSplashScreen za pomocą metody, która ustawia <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A>właściwości do nowego wystąpienia formularz ekranu powitalnego.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A>       Ta metoda jest wywoływana przez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>metody.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected virtual void OnCreateSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  id: OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnInitialize(ReadOnlyCollection<String>)
  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Ustawia stylów wizualnych, style wyświetlania tekstu i bieżący podmiot zabezpieczeń dla wątku głównego aplikacji (Jeśli aplikacja używa uwierzytelniania systemu Windows) i inicjuje ekran powitalny, jeśli została zdefiniowana."
  remarks: "Domyślnie ta metoda ustawia stylów wizualnych, style wyświetlania tekstu i bieżący podmiot zabezpieczeń dla wątku głównego aplikacji (Jeśli aplikacja używa uwierzytelniania systemu Windows) i wywołania `ShowSplashScreen` Jeśli żadna `/nosplash` ani `-nosplash` jest używany jako argument wiersza polecenia.       Ta metoda wywołuje następujące metody:- <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>"
  syntax:
    content: protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection<string> commandLineArgs);
    parameters:
    - id: commandLineArgs
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; z <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>, zawierający argumenty wiersza polecenia jako ciągi dla bieżącej aplikacji."
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>wskazującą, czy uruchamiania aplikacji powinno być kontynuowane.</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  id: OnRun
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnRun()
  nameWithType: WindowsFormsApplicationBase.OnRun()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Zapewnia punkt początkowy podczas aplikacji głównej jest gotowy do uruchomienia, uruchomiona po ukończeniu inicjowania."
  remarks: "Domyślnie przed uśpieniem pętli komunikatów formularzy systemu Windows, ta metoda wywołuje `OnCreateMainForm` (Aby utworzyć formularz główny aplikacji) i `HideSplashScreen` (aby zamknąć ekran powitalny) metody:- <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> Umożliwia projektanta na emitowanie kodu, który inicjuje formularz główny.           Domyślnie ta metoda nie działa. Jednak po wybraniu formularz główny aplikacji w [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **projektanta projektu**, zastępuje projektanta <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>metodę za pomocą metody, która ustawia <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>Właściwości nowe wystąpienie klasy głównym formularza.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> </xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A> Jeśli aplikacja ma ekran powitalny zdefiniowany i jest otwarty, ta metoda powoduje zamknięcie ekranu powitalnego.           Domyślnie ta metoda powoduje zamknięcie ekranu powitalnego."
  syntax:
    content: protected virtual void OnRun ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  id: OnShutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnShutdown()
  nameWithType: WindowsFormsApplicationBase.OnShutdown()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia kod wymagany do uruchomienia podczas zamykania aplikacji."
  remarks: "Ta metoda nie działa, jeśli wystąpi nieobsługiwany wyjątek w aplikacji głównej.       Domyślnie ta metoda zgłasza <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown>zdarzeń.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown>"
  syntax:
    content: protected virtual void OnShutdown ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  id: OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnStartup(StartupEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia kod wymagany do uruchomienia podczas uruchamiania aplikacji."
  remarks: "Domyślnie ta metoda zgłasza <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>zdarzeń.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> Można ustawić programu obsługi zdarzeń <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>Właściwości argumentu zdarzenia.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Jeśli <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>jest `True`, ta metoda zwraca `False` anulować uruchamiania aplikacji.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> W przeciwnym razie ta metoda zwraca `True`."
  syntax:
    content: protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);
    parameters:
    - id: eventArgs
      type: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.StartupEventArgs&quot;></xref>. Zawiera argumenty wiersza polecenia aplikacji oraz wskazuje, czy powinno być anulowane uruchamiania aplikacji."
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>Który wskazuje, czy aplikacja powinna nadal uruchomienie.</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  id: OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnStartupNextInstance(StartupNextInstanceEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia kodu do uruchomienia, gdy rozpoczyna się kolejne wystąpienie pojedyncze wystąpienie aplikacji."
  remarks: "Domyślnie ta metoda zgłasza <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>zdarzeń.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> Można ustawić programu obsługi zdarzeń <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>Właściwości argumentu zdarzenia.</xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> Jeśli <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>jest `True`, metoda aktywuje formularz główny.</xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> W przeciwnym razie formularz główny pozostanie w jego bieżącym stanie."
  syntax:
    content: protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);
    parameters:
    - id: eventArgs
      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs&quot;></xref>. Zawiera argumenty wiersza polecenia wystąpienia kolejnych aplikacji oraz wskazuje, czy pierwsze wystąpienie aplikacji powinny być przesunięte na pierwszy plan podczas zamykania programu obsługi wyjątków."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  id: OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OnUnhandledException(UnhandledExceptionEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia kod wymagany do uruchomienia, gdy wystąpi nieobsługiwany wyjątek w aplikacji."
  remarks: "Domyślnie ta metoda zgłasza <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException>Tak długo, jak nie jest dołączony debuger, a użytkownik jest obsługa zdarzeń `UnhandledException` zdarzeń.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> Można ustawić programu obsługi zdarzeń <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>Właściwości.</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> Jeśli <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>jest `False`, lub jeśli zdarzenie nie jest obsługiwane, aplikacja kończy działanie po powrocie z obsługi wyjątków.</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> W przeciwnym razie kontroli aplikacji są zwracane do pętli komunikatów formularzy systemu Windows."
  syntax:
    content: protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);
    parameters:
    - id: e
      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
      description: "<xref href=&quot;Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs&quot;></xref>."
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>wskazujące, czy <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&quot;> </xref> wywołano zdarzenie.</xref:System.Boolean>"
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  id: OpenForms
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Pobiera kolekcję formularzy otwartych wszystkich aplikacji."
  remarks: "`My.Application.OpenForms` Właściwość pobiera kolekcja formularzy otwartych wszystkich aplikacji. Zachowanie jest takie same jak <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName>Właściwości.</xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName>      > [!NOTE] > `My.Application.OpenForms` Właściwość zwraca wszystkie otwarte formularze, niezależnie od tego, które wątku ich otwarcia. Należy sprawdzić <xref:System.Windows.Forms.Control.InvokeRequired%2A>Właściwości każdego formularza przed uzyskaniem dostępu do; w przeciwnym razie może zgłosić <xref:System.InvalidOperationException>wyjątek.</xref:System.InvalidOperationException> </xref:System.Windows.Forms.Control.InvokeRequired%2A>      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example loops over the application's open forms, selects the ones directly accessible by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`.  \n  \n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \n  \n This example loops over the application's open forms and displays their titles in a <xref:System.Windows.Forms.ListBox> control.  \n  \n [!code-vb[VbVbalrMyApplication#11](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#11)]"
  syntax:
    content: public System.Windows.Forms.FormCollection OpenForms { get; }
    return:
      type: System.Windows.Forms.FormCollection
      description: "A <xref href=&quot;System.Windows.Forms.FormCollection&quot;> </xref> obiekt, który zawiera wszystkie otwarte formularze aplikacji."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  id: Run(System.String[])
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Run(String[])
  nameWithType: WindowsFormsApplicationBase.Run(String[])
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Konfiguruje i uruchamia model aplikacji Visual Basic."
  remarks: "`My.Application.Run` Metoda zapewnia obsługę [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] modelu aplikacji. Tę metodę należy wywoływać tylko z poziomu aplikacji `Sub Main`. Domyślnie `Sub Main` formularzy systemu Windows aplikacji wywołuje tę metodę. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  syntax:
    content: public void Run (string[] commandLine);
    parameters:
    - id: commandLine
      type: System.String[]
      description: "Tablica typu <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>. Wiersz polecenia z <xref uid=&quot;langword_csharp_Sub Main&quot; name=&quot;Sub Main&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  id: SaveMySettingsOnExit
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Określa, czy aplikacja zapisuje ustawień użytkownika na wyjściu."
  remarks: "`SaveMySettingsOnExit` Właściwość umożliwia użytkownikowi zmianę, jak aplikacja zapisuje ustawienia w czasie wykonywania. Można jawnie zapisać zmiany w ustawieniach przy użyciu <xref:System.Configuration.ApplicationSettingsBase.Save%2A>metody `My.Settings` obiektu.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> Aby uzyskać więcej informacji na temat zmiany i zapisywania ustawień, zobacz [właściwości aplikacji](~/add/includes/ajax-current-ext-md.md).       Zmiany w tej właściwości nie są zachowywane po zamknięciu aplikacji. Aby zmienić `SaveMySettingsOnExit` właściwości stałe, należy zmienić ustawienie **projektanta projektu**: ||   |-|   | Aby zmienić ustawienia w Projektancie projektu |   |&1;.  Projekt wybrany w **Eksploratora rozwiązań**. Kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Wybierz **zapisywania My.Settings podczas zamykania**. |      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example has two parts.  \n  \n-   The `InitializeSaveMySettingsOnExit` subroutine, which initializes the checked state of a <xref:System.Windows.Forms.CheckBox> control to the current value of the `SaveMySettingsOnExit` property.  \n  \n-   The `SaveMySettingsOnExit_CheckedChanged` subroutine, which handles changes to a <xref:System.Windows.Forms.CheckBox> control to update the `My.Application.SaveMySettingsOnExit` property.  \n  \n [!code-vb[VbVbalrMyApplication#12](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#12)]  \n  \n For this example to work, your application must have a <xref:System.Windows.Forms.CheckBox> control named `SaveMySettingsOnExit`."
  syntax:
    content: public bool SaveMySettingsOnExit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Wskazuje, że aplikacja zapisuje ustawień użytkownika na wyjściu. W przeciwnym razie wartość ustawienia nie są domyślnie zapisywane."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  id: ShowSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ShowSplashScreen()
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Określa, czy aplikacja ma zdefiniowany ekran powitalny, a jeśli tak, wyświetla go."
  remarks: "Domyślnie ta metoda wywołuje `OnCreateSplashScreen` w sposób zapewniający obsługę wielowątkowości.       Metoda ShowSplashScreen zawiera kod, który wyświetla to pozostawienie ekranu powitalnego ekranu dla wyrażony w milisekundach czas określony przez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>Właściwości.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> Aby używać tej funkcji, należy ustawić `My.Application.MinimumSplashScreenDisplayTime` właściwość w metodę, która zastępuje ShowSplashScreen lub <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>metody, lub Dodaj ekran powitalny do swojej aplikacji za pomocą **projektanta projektu**.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> Aby uzyskać więcej informacji zobacz <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>       Ta metoda jest wywoływana przez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>metody.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>"
  syntax:
    content: protected void ShowSplashScreen ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  id: Shutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Shutdown
  nameWithType: WindowsFormsApplicationBase.Shutdown
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Występuje po zamknięciu aplikacji."
  remarks: "Uruchamia aplikację `Shutdown` zdarzeń, aby zakończyć pracę. Dzięki temu można kontrolować, jak aplikacja zamyka jego zasoby. To zdarzenie jest częścią [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] modelu aplikacji. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).       Kod `Shutdown` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.      ||   |-|   | Aby uzyskać dostęp do okna edytora kodu dla zdarzeń aplikacji |   |&1;.  Z projektem wybranym **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć edytora kodu.<br />     Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](~/add/includes/ajax-current-ext-md.md). |      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example logs messages when the application shuts down.  \n  \n [!code-vb[VbVbalrMyApplication#13](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#13)]  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [How to: Log Messages When the Application Starts or Shuts Down](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  id: ShutdownStyle
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Określa, co się stanie po zamknięciu formularza głównego aplikacji."
  remarks: "<xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>Metoda sprawdza wartość tej właściwości, aby określić, czy aplikacja powinna zamknięta po zamknięciu formularza głównego, lub jeśli inny Otwórz formularz należy promować jako nowy formularz główny.</xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>"
  syntax:
    content: protected Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }
    return:
      type: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
      description: "A <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.ShutdownMode&quot;> </xref> wartość wyliczenia wskazująca, co aplikacja powinna wykonać po zamknięciu formularza głównego."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  id: SplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Pobiera lub ustawia ekran powitalny dla tej aplikacji."
  remarks: "`My.Application.SplashScreen` Właściwość służy do pobierania lub ustawiania <xref:System.Windows.Forms.Form>obiekt, który aplikacja używa jako ekran powitalny, pierwszy graficzne formularz, który jest wyświetlany, gdy aplikacja jest uruchamiana.</xref:System.Windows.Forms.Form>       Ta właściwość obsługuje model aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).       Zmiany w tej właściwości nie są zachowywane po zamknięciu aplikacji. Aby zmienić trwale ekran powitalny, należy zmienić ustawienie **projektanta projektu**.      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \n  \n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \n  \n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have a property named `Status` that updates its user interface.  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Forms.Form SplashScreen { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> obiekt, który aplikacja używa jako ekran powitalny."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Tej samej wartości jest przypisany do tej właściwości i <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*>Właściwości.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  id: Startup
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: Startup
  nameWithType: WindowsFormsApplicationBase.Startup
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Występuje podczas uruchamiania aplikacji."
  remarks: "Normalne aplikacji (z systemem innym niż — jednego wystąpienia) zgłasza `Startup` zdarzeń w każdym uruchomieniu. Pojedyncze wystąpienie aplikacji zgłasza `Startup` zdarzeń podczas jej uruchamiania, tylko jeśli aplikacja nie jest jeszcze aktywne, a w przeciwnym, zgłasza `StartupNextInstance` zdarzeń. Aby uzyskać więcej informacji zobacz <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>       To zdarzenie jest częścią [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] modelu aplikacji. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).       Można użyć <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>Właściwość `e` parametr, aby kontrolować ładowanie formularz początkowy aplikacji.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Gdy <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>właściwość jest ustawiona na `True`, nie uruchamia się formularz startowy.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> W takim przypadku kodu powinny wywoływać ścieżka kodu uruchamiania alternatywny.       Można użyć <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>Właściwość `e` parametru lub <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>Właściwości można uzyskać dostępu do argumentów wiersza polecenia aplikacji.</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> </xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>       Kod `Startup` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.      ||   |-|   | Aby uzyskać dostęp do okna edytora kodu dla zdarzeń aplikacji |   |&1;.  Z projektem wybranym **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć edytora kodu.<br /><br /> Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](~/add/includes/ajax-current-ext-md.md). |      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \n  \n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \n  \n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have property named `Status` that updates its user interface.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  id: StartupNextInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: StartupNextInstance
  nameWithType: WindowsFormsApplicationBase.StartupNextInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Występuje, gdy próba uruchomienia pojedynczego wystąpienia aplikacji oraz aplikacja jest już aktywna."
  remarks: "Pojedyncze wystąpienie aplikacji wywołuje zdarzenie StartupNextInstance podczas próby ponownego uruchomienia aplikacji, gdy nie jest już aktywny. Podczas uruchamiania pojedynczego wystąpienia aplikacji po raz pierwszy uruchamia <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>zdarzeń.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> Aby uzyskać więcej informacji zobacz <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>       To zdarzenie jest częścią [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] modelu aplikacji. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).       To zdarzenie jest wywoływane w wątku głównego aplikacji z innymi zdarzeniami interfejsu użytkownika. Dzięki temu bezpośredni dostęp interfejsu użytkownika aplikacji do obsługi zdarzeń. Jednak jeśli aplikacja jest zajęta, obsługa inne zdarzenie interfejsu użytkownika, gdy to zdarzenie jest zgłaszane, to zdarzenie nie można przetworzyć obsługi zdarzeń zakończenie lub wywołuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>metody.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>      > [!NOTE] > `StartupNextInstance` Zdarzenie jest wywoływane tylko w jednym wystąpieniu aplikacji. Aby włączyć zachowanie jednego wystąpienia aplikacji, należy sprawdzić **aplikacja pojedynczego wystąpienia** pole wyboru w Projektancie projektu.      ||   |-|   | Aby pojedynczego wystąpienia aplikacji |   |&1;.  Z projektem wybranym **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Wybierz **aplikacja pojedynczego wystąpienia** pole wyboru. |       Należy użyć <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>Właściwość `e` parametr, aby uzyskać dostępu do argumentów dla kolejnych prób uruchomić pojedyncze wystąpienie aplikacji.</xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>Właściwość zawiera argumenty używane do uruchamiania pierwsze wystąpienie pojedyncze wystąpienie aplikacji.</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>       Kod obsługi zdarzenia StartupNextInstance są przechowywane w pliku ApplicationEvents.vb, który jest domyślnie ukryty.      ||   |-|   | Aby uzyskać dostęp do okna edytora kodu dla zdarzeń aplikacji |   |&1;.  Z projektem wybranym **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć edytora kodu.<br />     Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](~/add/includes/ajax-current-ext-md.md). |       W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Application.StartupNextInstance` zdarzeń.      |||   |-|-|   | Aby | Zobacz |   | Sprawdź, czy argumenty wiersza polecenia, pierwszego wystąpienia aplikacji | <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | Tak |   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>"
  example:
  - "This example uses the `e` parameter of the StartupNextInstance event handler to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \n  \n [!code-vb[VbVbalrMyApplication#15](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#15)]  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  id: UnhandledException
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: UnhandledException
  nameWithType: WindowsFormsApplicationBase.UnhandledException
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Występuje, gdy aplikacja napotka nieobsługiwany wyjątek."
  remarks: "Uruchamia aplikację `UnhandledException` zdarzeń po napotkaniu nieobsługiwany wyjątek. To zdarzenie jest częścią modelu aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/add/includes/ajax-current-ext-md.md).       Można użyć <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A>Właściwość `e` parametr, aby uzyskać dostęp nieobsługiwany wyjątek, który spowodował to zdarzenie.</xref:System.Threading.ThreadExceptionEventArgs.Exception%2A>       Można użyć <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>Właściwość `e` parametru do kontrolowania, czy kończy działanie aplikacji.</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> Domyślnie <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>jest `True`.</xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> W związku z tym aplikacji kończy się po zakończeniu `UnhandledException` obsługi zdarzeń. Wartość można ustawić, `False` w `UnhandledException` obsługi zdarzeń, aby aplikacja była uruchomiona i przywrócić stan oczekiwania.       Kod `UnhandledException` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.      ||   |-|   | Aby uzyskać dostęp do okna edytora kodu dla zdarzeń aplikacji |   |&1;.  Z projektem wybranym **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć edytora kodu. |       Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Kompilatora Visual Basic uniemożliwia aplikacje zaprojektowane do debugowania z wywołaniem tego zdarzenia, aby włączyć debugera do obsługi nieobsługiwanych wyjątków. Oznacza to, że w przypadku testowania aplikacji przez uruchomienie jej w debugerze programu Visual Studio, zintegrowane środowisko programistyczne Twojej `UnhandledException` nie zostanie wywołany program obsługi zdarzeń. Aby uzyskać więcej informacji dotyczących tworzenia aplikacji do debugowania, zobacz [/Debug (Visual Basic)](~/add/includes/ajax-current-ext-md.md).      ## Zadania w poniższej tabeli przedstawiono przykłady zadań, obejmujących `My.Application.UnhandledException` zdarzeń.      |||   |-|-|   | Aby | Zobacz |   | Rejestrowania nieobsługiwanych wyjątków | [Porady: wyjątki rejestru](~/add/includes/ajax-current-ext-md.md)|      ## Dostępność według typu projektu |||   |-|-|   | Typ projektu | Dostępne |   | Aplikacji formularzy systemu Windows | **Yes**|   | Biblioteka klas | Nie |   | Aplikacja konsolowa | Nie |   | Formant formularzy systemu Windows Biblioteka | Nie |   | Biblioteka kontrolek w sieci Web | Nie |   | Usługa systemu Windows | Nie |   | Witryna sieci Web | Nie |"
  example:
  - "This example uses the `My.Application.UnhandledException` event to log any unhandled exceptions.  \n  \n You must enter the code in the Code Editor window for application events. To access this window, follow the procedure found in this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md).  \n  \n Because the `UnhandledException` event is not raised when a debugger is attached to the application, you have to run this example outside the Visual Studio Integrated Development Environment.  \n  \n [!code-vb[VbVbalrMyApplication#17](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#17)]"
  syntax:
    content: public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;
    return:
      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  id: UseCompatibleTextRendering
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  langs:
  - csharp
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "W przypadku przesłonięcia w klasie pochodnej, ta właściwość umożliwia projektanta określić domyślny aparat renderowania tekstu dla formularzy aplikacji."
  remarks: "Domyślnie ta właściwość zwraca `False` z informacją, że tekst GDI aparatu do renderowania [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)] służyć do formularzy aplikacji. Jednak można zastąpić tę właściwość, aby zwrócić `True` i określ, czy formularze aplikacji używa interfejsu GDI + mechanizm renderowania tekstu, który jest używany w języku Visual Basic .NET 2002 i Visual Basic .NET 2003.       Ta właściwość jest wywoływana przez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>konstruktora.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>       Kod, który zastępuje metody <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>klasy powinny być wprowadzane w pliku ApplicationEvents.vb, który jest domyślnie ukryty.</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>      ||   |-|   | Aby uzyskać dostęp do okna edytora kodu dla zastępowanie elementów członkowskich |   |&1;.  Z projektem wybranym **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć edytora kodu.<br />     Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](~/add/includes/ajax-current-ext-md.md). |"
  example:
  - "This example demonstrates how to set the GDI+ text rendering engine as the application's default rendering engine by overriding the UseCompatibleTextRendering property.  \n  \n```  \nProtected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  \n    Get  \n        ' Use the GDI+ text rendering engine.  \n        Return True  \n    End Get  \nEnd Property  \n```  \n  \n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\(Visual%20Basic\\).md)."
  syntax:
    content: protected static bool UseCompatibleTextRendering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Wartość <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> wskazuje, że aplikacja powinna korzysta z aparatu renderowania tekst domyślny dla [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]. Wartość <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> wskazuje, że aplikacja powinna korzystać aparat renderowania tekstu dla języka Visual Basic .NET 2002 i Visual Basic .NET 2003."
  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase()
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase(AuthenticationMode)
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)
- uid: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: AuthenticationMode
  nameWithType: AuthenticationMode
  fullName: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext
- uid: System.Windows.Forms.ApplicationContext
  parent: System.Windows.Forms
  isExternal: false
  name: ApplicationContext
  nameWithType: ApplicationContext
  fullName: System.Windows.Forms.ApplicationContext
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: DoEvents()
  nameWithType: WindowsFormsApplicationBase.DoEvents()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: HideSplashScreen()
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: NetworkAvailabilityChanged
  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged
- uid: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
  parent: Microsoft.VisualBasic.Devices
  isExternal: false
  name: NetworkAvailableEventHandler
  nameWithType: NetworkAvailableEventHandler
  fullName: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateMainForm()
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateSplashScreen()
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnInitialize(ReadOnlyCollection<String>)
  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnRun()
  nameWithType: WindowsFormsApplicationBase.OnRun()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnShutdown()
  nameWithType: WindowsFormsApplicationBase.OnShutdown()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartup(StartupEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupEventArgs
  nameWithType: StartupEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartupNextInstance(StartupNextInstanceEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupNextInstanceEventArgs
  nameWithType: StartupNextInstanceEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnUnhandledException(UnhandledExceptionEventArgs)
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: UnhandledExceptionEventArgs
  nameWithType: UnhandledExceptionEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms
- uid: System.Windows.Forms.FormCollection
  parent: System.Windows.Forms
  isExternal: false
  name: FormCollection
  nameWithType: FormCollection
  fullName: System.Windows.Forms.FormCollection
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Run(String[])
  nameWithType: WindowsFormsApplicationBase.Run(String[])
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShowSplashScreen()
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Shutdown
  nameWithType: WindowsFormsApplicationBase.Shutdown
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown
- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: ShutdownEventHandler
  nameWithType: ShutdownEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle
- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: ShutdownMode
  nameWithType: ShutdownMode
  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownMode
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Startup
  nameWithType: WindowsFormsApplicationBase.Startup
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup
- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupEventHandler
  nameWithType: StartupEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: StartupNextInstance
  nameWithType: WindowsFormsApplicationBase.StartupNextInstance
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance
- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: StartupNextInstanceEventHandler
  nameWithType: StartupNextInstanceEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UnhandledException
  nameWithType: WindowsFormsApplicationBase.UnhandledException
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: UnhandledExceptionEventHandler
  nameWithType: UnhandledExceptionEventHandler
  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: WindowsFormsApplicationBase
  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ApplicationContext
  nameWithType: WindowsFormsApplicationBase.ApplicationContext
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: DoEvents
  nameWithType: WindowsFormsApplicationBase.DoEvents
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: EnableVisualStyles
  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: HideSplashScreen
  nameWithType: WindowsFormsApplicationBase.HideSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: IsSingleInstance
  nameWithType: WindowsFormsApplicationBase.IsSingleInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MainForm
  nameWithType: WindowsFormsApplicationBase.MainForm
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: MinimumSplashScreenDisplayTime
  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateMainForm
  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnCreateSplashScreen
  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnInitialize
  nameWithType: WindowsFormsApplicationBase.OnInitialize
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnRun
  nameWithType: WindowsFormsApplicationBase.OnRun
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnShutdown
  nameWithType: WindowsFormsApplicationBase.OnShutdown
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartup
  nameWithType: WindowsFormsApplicationBase.OnStartup
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnStartupNextInstance
  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OnUnhandledException
  nameWithType: WindowsFormsApplicationBase.OnUnhandledException
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: OpenForms
  nameWithType: WindowsFormsApplicationBase.OpenForms
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: Run
  nameWithType: WindowsFormsApplicationBase.Run
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SaveMySettingsOnExit
  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShowSplashScreen
  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: ShutdownStyle
  nameWithType: WindowsFormsApplicationBase.ShutdownStyle
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: SplashScreen
  nameWithType: WindowsFormsApplicationBase.SplashScreen
- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*
  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  isExternal: false
  name: UseCompatibleTextRendering
  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering
