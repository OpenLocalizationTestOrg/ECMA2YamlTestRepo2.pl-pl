### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  id: CatalogPartCollection
  children:
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  langs:
  - csharp
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  type: Class
  summary: "Zawiera kolekcję <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> formanty używane do zapewnienia katalogi kontrolki serwera sieci Web, które użytkownicy końcowi można dodać do strony sieci Web. Ta klasa nie może być dziedziczona."
  remarks: "Klasa CatalogPartCollection to kolekcja tylko do odczytu <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów, zwykle używane przez <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>strefy, aby śledzić zbiór <xref:System.Web.UI.WebControls.WebParts.CatalogPart>Formanty zawarte w strefie.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>       Gdy strona części sieci Web wprowadza tryb katalogu, strefy tworzy nowy obiekt CatalogPartCollection składające się z <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> Każdy <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formant w kolekcji może zawierać odwołania do zera lub większej liczbą kontrolki serwera sieci Web, które są wyświetlane w postaci katalogu formantów dostępnego serwera.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       Jeśli na przykład, należy wykonać niektóre masowej operacji na zestawie można utworzyć kolekcji CatalogPartCollection formantów na własny użytek programowe <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> Mimo że obiekt CatalogPartCollection jest tylko do odczytu, można dokonać zmian programowe formanty źródłowy występujący w odwołaniu w kolekcji."
  example:
  - "The following code example demonstrates several uses of the CatalogPartCollection class. There are four parts to this code example:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is contained in one of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.  \n  \n-   A Web page that references the `TextDisplayWebPart` control, contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control with two of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls from the Web Parts control set declared in the zone, and contains event-driven code to create and manipulate a CatalogPartCollection object.  \n  \n-   An explanation of how the code example works when you load it in a browser.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md) topic, and place the file in the same folder as the .aspx page in this code example.  \n  \n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md). Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box.  \n  \n [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_1.vb)]\n [!code-cs[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_1.cs)]  \n  \n The third part of the code example is the Web page. Notice that the `<asp:catalogzone>` element for the page contains declarations for two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. These controls become part of a custom CatalogPartCollection object that is created when the `Button1_Click` method executes. The <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control contains Web server controls that have been previously closed by a user at run time. Controls in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control can be added back to a page. The <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control contains a declaration of the custom `TextDisplayWebPart` control. When the page is in catalog mode, a user can add the `TextDisplayWebPart` control to the page so that it can be used in normal browse mode.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_2.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_2.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. You can add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed now appears there. Clicking the **Display CatalogPart Properties** button accesses the CatalogPartCollection object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."
  syntax:
    content: 'public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicjuje nową, pustą wystąpienie <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> klasy."
  remarks: "Konstruktor CatalogPartCollection inicjuje puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>klasy.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> To przeciążenie konstruktora jest używana wewnętrznie przez <xref:System.Web.UI.WebControls.WebParts.CatalogZone>klasy w jego <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A>metodę w celu utworzenia obiektu pustej kolekcji.</xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> </xref:System.Web.UI.WebControls.WebParts.CatalogZone> Strefa tworzy następnie wszystkie wystąpienia <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów zadeklarowany w szablonie strefy podrzędnej, a używa metody wewnętrznej kolekcji je dodać.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       Nie można użyć tego przeciążenia konstruktora CatalogPartCollection do utworzenia nowego wystąpienia <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>i Dodaj <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formanty do niego.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Należy użyć jednego z innych przeciążeń konstruktora CatalogPartCollection zamiast tego."
  syntax:
    content: public CatalogPartCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> klasy, przekazując w <xref:System.Collections.ICollection>Kolekcja <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> formantów.</xref:System.Collections.ICollection>"
  remarks: "Konstruktor CatalogPartCollection inicjuje wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>klasy i przebiegów w kolekcji z <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Jest to jeden przeciążenia konstruktora CatalogPartCollection, który służy do tworzenia nowego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>obiektu i dodawanie <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów do niego.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>       Mimo że <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>utworzonego przez konstruktora wystąpienia jest tylko do odczytu, nadal możesz uzyskać dostępu do poszczególnych <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formanty w kolekcji programowo i Wywołaj ich właściwości i metody.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>       Jeden scenariusz wspólnej za pomocą tego konstruktora będzie, jeśli chcesz wykonać niektórych operacji zbiorczej na cały zestaw <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formanty, takie jak zmiana zawartości, wyglądu lub pozycji powiązanych grupy elementów.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, and perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection even though it is read-only. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates an <xref:System.Collections.ArrayList> object, adds the two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using the CatalogPartCollection constructor. It also demonstrates how you can make batch changes to the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, even though the collection itself is read-only. The code loops through the collection, updating the <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> property of each control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/49bc6c07-48e8-4d4b-abba-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/49bc6c07-48e8-4d4b-abba-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Also, if you position your mouse pointer over the title text within the border of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, you can see the new description text that was added to the control when you clicked the button (the description appears in a ToolTip). If you click the **Page Catalog** link to display the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, you will find that it also has an updated description."
  syntax:
    content: public CatalogPartCollection (System.Collections.ICollection catalogParts);
    parameters:
    - id: catalogParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>z <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> formantów.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  id: '#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> klasy, przekazując w <xref:System.Collections.ICollection>kolekcji istniejącej <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> formantów w strefie i dodatkowe kolekcji formantów.</xref:System.Collections.ICollection>"
  syntax:
    content: public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);
    parameters:
    - id: existingCatalogParts
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "<xref:System.Collections.ICollection>Istniejących <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> formantów w strefie.</xref:System.Collections.ICollection>"
    - id: catalogParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Dodatkowych <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> formantów.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca wartość wskazującą, czy określonego formantu istnieje w kolekcji."
  remarks: "Metoda zawiera umożliwia określenie, czy do określonego <xref:System.Web.UI.WebControls.WebParts.CatalogPart>obiekt jest częścią <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>obiektu.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Contains method to determine whether the `PageCatalogPart1` control exists, and if so, retrieves the control and changes a property value.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/2369b958-e1bb-44dd-9619-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/2369b958-e1bb-44dd-9619-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed has been added to it. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Select the check box next to the server control contained in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, click **Add** to add it back to the page, and then click **Close** to return the page to browse mode. Click the verbs menu again on the control, and note that now the close verb is gone. It was removed by the code in the `Button1_Click` method, when it used the Contains method to check for `PageCatalogPart1`, and then set its <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> property to `false`."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> który jest sprawdzany w celu określenia, czy znajduje się w kolekcji."
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy określonego formantu znajduje się w kolekcji."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kopiuje kolekcję na tablicę <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> obiektów."
  remarks: "Metoda CopyTo jest przydatne, gdy chcesz utworzyć niestandardowe tablica, która może zawierać <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>obiektu lub podzbiór tych kontrolek.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.CatalogPart[]
      description: "Tablica <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> obiektom zawierać skopiowanych kolekcji."
    - id: index
      type: System.Int32
      description: "Punkt początkowy w tablicy, od której ma zostać umieszczony zawartość kolekcji."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  id: Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Odwołuje się do statycznego, tylko do odczytu, puste wystąpienie kolekcji."
  remarks: "Jest statyczny, tylko do odczytu, puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>zmniejsza zużycie pamięci w przypadku gdy ma pustą kolekcję wystąpienia zwracany typ prawidłowego obiektu z metody lub porównania wystąpienia z innym obiektem, ale nie trzeba dodawać członków do wystąpienia.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca pozycję określonego członka kolekcji."
  remarks: "Metoda IndexOf jest przydatna, jeśli istnieje wiele <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów na stronie sieci Web Part, a musi zlokalizować określonego formantu w kolekcji.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine the position of a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection by using its IndexOf property. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the IndexOf property to retrieve the position of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, and then changes a property value on the control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/5504f26f-74ee-431e-9601-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/5504f26f-74ee-431e-9601-_1.aspx)]  \n  \n After you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Click the **Page Catalog** link to display the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Note that it has only a title and no border, because its <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> property value was changed to <xref:System.Web.UI.WebControls.WebParts.PartChromeType> in the code that used the IndexOf property to retrieve the control."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> będący członkiem kolekcji."
    return:
      type: System.Int32
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> będący członkiem <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia element członkowski kolekcji oparte na jej położenie w kolekcji."
  remarks: "Indeksator elementu umożliwia dostęp do podstawowych <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>obiekt przez indeks i zmiany ich wartości właściwości lub wywołać metod.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its index. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. Note that the method uses the Item indexer to retrieve information from the first member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1308_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1308_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indeks określonego <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> w kolekcji."
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> pod określonym indeksem w kolekcji."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca element członkowski kolekcji na podstawie identyfikatora unikatowego ciągu."
  remarks: "Indeksator elementu umożliwia dostęp do podstawowych <xref:System.Web.UI.WebControls.WebParts.CatalogPart>formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>obiektu przy użyciu identyfikatora ciągu.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart> Mimo że <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>obiekt jest tylko do odczytu, można zmienić wartości właściwości lub wywołać metod w formantach podstawowej dostęp indeksatora.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its string ID value. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Item indexer to retrieve information about the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, which is the second member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1244_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1244_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }
    parameters:
    - id: id
      type: System.String
      description: "Unikatowy identyfikator dla konkretnej <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> w kolekcji."
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "Pierwszy <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> w kolekcji o identyfikatorze jest równa wartości <code> id </code>."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.CatalogPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPart[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.CatalogPart
    name: CatalogPart
    nameWithType: CatalogPart
    fullName: CatalogPart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains
  nameWithType: CatalogPartCollection.Contains
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo
  nameWithType: CatalogPartCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf
  nameWithType: CatalogPartCollection.IndexOf
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item
  nameWithType: CatalogPartCollection.Item
