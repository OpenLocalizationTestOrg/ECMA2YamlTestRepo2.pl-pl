### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInEnvironment
  id: AddInEnvironment
  children:
  - System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  - System.AddIn.Hosting.AddInEnvironment.Process
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
  type: Class
  summary: "Zapewnia dostęp do domeny aplikacji i proces dodatku."
  remarks: "Klasa używana do ładowania dodatków do wymagane środowisko, które może być jedną z następujących czynności:-istniejącej domeny aplikacji, dla którego masz <xref:System.AppDomain>obiektu.</xref:System.AppDomain>      -Domeny aplikacji, która została wygenerowana automatycznie aktywować dodatku.      -Istniejącego procesu zewnętrznego.       Aby uzyskać obiekt użyciu środowiska AddInEnvironment dodatku, do konstruktora klasy użyciu środowiska AddInEnvironment przekazać dodatku domeny aplikacji. Alternatywnie można użyć <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>Właściwość <xref:System.AddIn.Hosting.AddInController>klasy uzyskać dodatek dla obiekt użyciu środowiska AddInEnvironment.</xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>       Po uzyskaniu obiektu użyciu środowiska AddInEnvironment, można wykonywać następujące:-przekazać do odpowiedniego obiektu użyciu środowiska AddInEnvironment <xref:System.AddIn.Hosting.AddInToken.Activate%2A>przeciążenie metody.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> Dodatek zostanie uaktywniona procesu reprezentowanego przez obiekt użyciu środowiska AddInEnvironment i domeny aplikacji.      -Użyj <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A>Właściwości w celu uzyskania <xref:System.AddIn.Hosting.AddInProcess>obiektu.</xref:System.AddIn.Hosting.AddInProcess> </xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> Następnie przekazać do odpowiedniego obiektu <xref:System.AddIn.Hosting.AddInToken.Activate%2A>przeciążenie metody.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> Dodatek, będą aktywowane w procesie, który jest reprezentowany przez <xref:System.AddIn.Hosting.AddInProcess>obiektu, ale w nowej domenie aplikacji.</xref:System.AddIn.Hosting.AddInProcess>"
  syntax:
    content: public sealed class AddInEnvironment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  id: '#ctor(System.AppDomain)'
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;> </xref> klasy."
  remarks: "Jeśli masz dostęp do domeny aplikacji, która zawiera dodatek należy można ten konstruktor uzyskać dodatku <xref:System.AddIn.Hosting.AddInEnvironment>obiektu.</xref:System.AddIn.Hosting.AddInEnvironment> W przeciwnym razie można użyć <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>Właściwość <xref:System.AddIn.Hosting.AddInController>klasy uzyskanie <xref:System.AddIn.Hosting.AddInEnvironment>obiektu.</xref:System.AddIn.Hosting.AddInEnvironment> </xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>"
  syntax:
    content: public AddInEnvironment (AppDomain appDomain);
    parameters:
    - id: appDomain
      type: System.AppDomain
      description: "Domeny aplikacji, która zawiera dodatek."
  overload: System.AddIn.Hosting.AddInEnvironment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Wymagane są uprawnienia pełnego zaufania. Obiekt wywołujący w łańcuchu wywołań nie ma wystarczających uprawnień."
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  id: Process
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Pobiera <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> obiekt, który reprezentuje proces, w którym uruchomiony jest dodatek."
  remarks: "Ta właściwość służy do aktywowania wielu dodatków w tym samym procesie, ale w różnych domenach.       Przekaż <xref:System.AddIn.Hosting.AddInProcess>uzyskanego z tą właściwością do odpowiedniego <xref:System.AddIn.Hosting.AddInToken.Activate%2A>przeciążenie metody.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> </xref:System.AddIn.Hosting.AddInProcess>       Jeśli chcesz aktywować je w tej samej domenie w procesie zewnętrznym należy przekazać <xref:System.AddIn.Hosting.AddInEnvironment>bezpośrednio do obiektu <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName>przeciążenie metody.</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> </xref:System.AddIn.Hosting.AddInEnvironment>"
  syntax:
    content: public System.AddIn.Hosting.AddInProcess Process { get; }
    return:
      type: System.AddIn.Hosting.AddInProcess
      description: "Proces, w którym uruchomiony jest dodatek."
  overload: System.AddIn.Hosting.AddInEnvironment.Process*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
- uid: System.AddIn.Hosting.AddInProcess
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment.Process*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
