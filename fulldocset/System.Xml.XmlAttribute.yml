### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlAttribute
  id: XmlAttribute
  children:
  - System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.BaseURI
  - System.Xml.XmlAttribute.CloneNode(System.Boolean)
  - System.Xml.XmlAttribute.InnerText
  - System.Xml.XmlAttribute.InnerXml
  - System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.LocalName
  - System.Xml.XmlAttribute.Name
  - System.Xml.XmlAttribute.NamespaceURI
  - System.Xml.XmlAttribute.NodeType
  - System.Xml.XmlAttribute.OwnerDocument
  - System.Xml.XmlAttribute.OwnerElement
  - System.Xml.XmlAttribute.ParentNode
  - System.Xml.XmlAttribute.Prefix
  - System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.SchemaInfo
  - System.Xml.XmlAttribute.Specified
  - System.Xml.XmlAttribute.Value
  - System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
  type: Class
  summary: "Reprezentuje atrybut. Prawidłowe i domyślne wartości atrybutów są definiowane w definicji typu dokumentu (DTD) lub schematu."
  remarks: "Atrybuty mogą być skojarzone z elementem. Użyj <xref:System.Xml.XmlAttribute.OwnerElement%2A>właściwości do pobrania <xref:System.Xml.XmlElement>do której należy ten atrybut.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlAttribute.OwnerElement%2A>       `XmlElement` Klasa ma kilka metod, które umożliwiają dostęp do węzłów atrybutu (<xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=fullName>, <xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=fullName>, <xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=fullName>i tak dalej).</xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=fullName> </xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=fullName> </xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=fullName> Ponadto można wywołać <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>właściwość, która zwraca <xref:System.Xml.XmlAttributeCollection>umożliwiające dostęp do atrybutów przez nazwę lub indeks z kolekcji.</xref:System.Xml.XmlAttributeCollection> </xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XmlAttribute : System.Xml.XmlNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  platform:
  - net462
- uid: System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: XmlAttribute(String,String,String,XmlDocument)
  nameWithType: XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  fullName: System.Xml.XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> klasy."
  remarks: "Tworzy wystąpienia <xref:System.Xml.XmlAttribute>bezpośrednio; zamiast tego użyj metod takich jak <xref:System.Xml.XmlDocument.CreateAttribute%2A>.</xref:System.Xml.XmlDocument.CreateAttribute%2A> </xref:System.Xml.XmlAttribute>"
  syntax:
    content: protected XmlAttribute (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);
    parameters:
    - id: prefix
      type: System.String
      description: "Prefiks przestrzeni nazw."
    - id: localName
      type: System.String
      description: "Lokalna nazwa atrybutu."
    - id: namespaceURI
      type: System.String
      description: "Przestrzeń nazw jednolitego identyfikatora zasobów (URI)."
    - id: doc
      type: System.Xml.XmlDocument
      description: "Dokument XML nadrzędny."
  overload: System.Xml.XmlAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  id: AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: AppendChild(XmlNode)
  nameWithType: XmlAttribute.AppendChild(XmlNode)
  fullName: System.Xml.XmlAttribute.AppendChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Dodaje określony węzeł na końcu listy węzłów podrzędnych tego węzła."
  remarks: "Jeśli `newChild` jest już w drzewie zostanie najpierw usunięte.       Jeśli węzeł wstawiane został utworzony z innego dokumentu, można użyć <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>można zaimportować węzła do bieżącego dokumentu.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> Następnie można wstawić węzła zaimportowane do bieżącego dokumentu."
  example:
  - For an example of the AppendChild method, see the <xref:System.Xml.XmlNode.AppendChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "The <xref href=&quot;System.Xml.XmlNode&quot;></xref> to add."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Dodane."
  overload: System.Xml.XmlAttribute.AppendChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ten węzeł jest typu, który nie zezwala podrzędnych węzłów typu <code> newChild </code> węzła.       <code> newChild </code> Jest elementem nadrzędnym tego węzła."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> Został utworzony z innego dokumentu niż konto, którego utworzono ten węzeł.       Ten węzeł jest tylko do odczytu."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.BaseURI
  id: BaseURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
  fullName: System.Xml.XmlAttribute.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera podstawowy URI Uniform Resource Identifier () węzła."
  remarks: "Sieciowych dokumentu XML składa się z fragmentów dane zagregowane przy użyciu różnych mechanizmów standardowe włączenia sieci World Wide Web konsorcjum W3C, dlatego zawiera węzły, które pochodzą z różnych miejscach. `BaseURI` Informuje, skąd pochodzą te węzły.       Aby uzyskać dodatkowe informacje na temat `BaseURI` i będzie pracował inne typy węzłów, zobacz <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>.</xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>       Ta właściwość jest rozszerzenie Microsoft do modelu DOM (Document Object)."
  example:
  - "The following example displays information on the attribute node, including its base URI.  \n  \n [!code-cpp[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_7_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_7_1.vb)]\n [!code-cs[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_7_1.cs)]  \n  \n The sample uses the file, `baseuri.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlAttribute.BaseURI Example#2](~/add/codesnippet/xml/p-system.xml.xmlattribut_7_2.xml)]"
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: "Lokalizacja, w którym węzeł został załadowany lub String.Empty, jeśli węzeł nie ma żadnych podstawowy identyfikator URI. Atrybut węzły mają tego samego podstawowego identyfikatora URI jako element ich właściciela. Jeśli węzła atrybutu nie ma elementu właściciela <xref uid=&quot;langword_csharp_BaseURI&quot; name=&quot;BaseURI&quot; href=&quot;&quot;> </xref> zwraca String.Empty."
  overload: System.Xml.XmlAttribute.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlAttribute.CloneNode(Boolean)
  fullName: System.Xml.XmlAttribute.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Tworzy duplikat tego węzła."
  remarks: "Ta metoda służy jako Konstruktor kopiujący dla węzłów. Sklonowany węzeł nie ma nadrzędnego (<xref:System.Xml.XmlAttribute.ParentNode%2A> zwraca `null`).</xref:System.Xml.XmlAttribute.ParentNode%2A>       Klonowanie nieokreślonego atrybutu zwraca wartość określonego atrybutu (<xref:System.Xml.XmlAttribute.Specified%2A> zwraca `true`).</xref:System.Xml.XmlAttribute.Specified%2A>"
  example:
  - "The following example uses `CloneNode` to add an attribute to two different element nodes.  \n  \n [!code-cpp[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_1_1.cpp)]\n [!code-cs[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_1_1.cs)]\n [!code-vb[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_1_1.vb)]  \n  \n The example uses the file, `2elems.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlAttribute.CloneNode Example#2](~/add/codesnippet/xml/m-system.xml.xmlattribut_1_2.xml)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby rekursywnie sklonować poddrzewo w określonym węźle; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> sklonować tylko węzeł"
    return:
      type: System.Xml.XmlNode
      description: "Zduplikowany węzeł."
  overload: System.Xml.XmlAttribute.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InnerText
  id: InnerText
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlAttribute.InnerText
  fullName: System.Xml.XmlAttribute.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ustawia wartości połączonych węzła i wszystkich jego obiektów podrzędnych."
  remarks: "Ustawienie tej właściwości zastępuje wszystkie elementy podrzędne przy użyciu analizowanej zawartości dany ciąg znaków.       Ta właściwość jest rozszerzenie Microsoft do modelu DOM (Document Object)."
  syntax:
    content: public override string InnerText { set; }
    return:
      type: System.String
      description: "Połączonych wartości węzła i wszystkich jego obiektów podrzędnych. Dla atrybutu węzłów, ta właściwość ma te same funkcje co <xref:System.Xml.XmlAttribute.Value*>Właściwości.</xref:System.Xml.XmlAttribute.Value*>"
  overload: System.Xml.XmlAttribute.InnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InnerXml
  id: InnerXml
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
  fullName: System.Xml.XmlAttribute.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ustawia wartość atrybutu."
  remarks: "Ta właściwość jest rozszerzenie Microsoft do modelu DOM (Document Object)."
  syntax:
    content: public override string InnerXml { set; }
    return:
      type: System.String
      description: "Wartość atrybutu."
  overload: System.Xml.XmlAttribute.InnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Kod XML określić, gdy ustawienie dla tej właściwości nie jest poprawnie sformułowany."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InsertAfter(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertAfter(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertAfter(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Wstawia określony węzeł natychmiast po odwołanie do określonego węzła."
  remarks: "Jeśli `refChild` jest `null`, Wstaw `newChild` na początku listy węzłów podrzędnych. Jeśli `newChild` jest <xref:System.Xml.XmlDocumentFragment>obiekt i jego węzły podrzędne są wstawiane, w takiej samej kolejności, po `refChild`.</xref:System.Xml.XmlDocumentFragment> Jeśli `newChild` jest już w drzewie zostanie najpierw usunięte.       Jeśli węzeł wstawiane został utworzony z innego dokumentu, można użyć <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>można zaimportować węzła do bieżącego dokumentu.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> Następnie można wstawić węzła zaimportowane do bieżącego dokumentu.       Ta metoda jest rozszerzeniem firmy Microsoft do modelu DOM (Document Object)."
  example:
  - For an example of the InsertAfter method see the <xref:System.Xml.XmlNode.InsertAfter%2A> method.
  syntax:
    content: public override System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Do wstawienia."
    - id: refChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Będący węzłem odniesienia. `newChild` Jest umieszczany po `refChild`."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Wstawiony."
  overload: System.Xml.XmlAttribute.InsertAfter*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ten węzeł jest typu, który nie zezwala podrzędnych węzłów typu <code> newChild </code> węzła.       <code> newChild </code> Jest elementem nadrzędnym tego węzła."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> Został utworzony z innego dokumentu niż konto, którego utworzono ten węzeł.       <code> refChild </code> Nie jest elementem podrzędnym tego węzła.       Ten węzeł jest tylko do odczytu."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InsertBefore(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertBefore(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertBefore(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Wstawia określony węzeł bezpośrednio przed odwołanie do określonego węzła."
  remarks: "Jeśli `refChild` jest `null`, Wstaw `newChild` na końcu listy węzłów podrzędnych. Jeśli `newChild` jest <xref:System.Xml.XmlDocumentFragment>obiekt węzły podrzędne są wstawiane, w takiej samej kolejności, zanim `refChild`.</xref:System.Xml.XmlDocumentFragment> Jeśli `newChild` jest już w drzewie zostanie najpierw usunięte.       Jeśli węzeł wstawiane został utworzony z innego dokumentu, można użyć <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>można zaimportować węzła do bieżącego dokumentu.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> Następnie można wstawić węzła zaimportowane do bieżącego dokumentu."
  example:
  - For an example of the InsertBefore method, see the <xref:System.Xml.XmlNode.InsertBefore%2A> method.
  syntax:
    content: public override System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Do wstawienia."
    - id: refChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Będący węzłem odniesienia. `newChild` Jest umieszczana przed tego węzła."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Wstawiony."
  overload: System.Xml.XmlAttribute.InsertBefore*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Bieżący węzeł jest typu, który nie zezwala podrzędnych węzłów typu <code> newChild </code> węzła.       <code> newChild </code> Jest elementem nadrzędnym tego węzła."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> Został utworzony z innego dokumentu niż konto, którego utworzono ten węzeł.       <code> refChild </code> Nie jest elementem podrzędnym tego węzła.       Ten węzeł jest tylko do odczytu."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.LocalName
  id: LocalName
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlAttribute.LocalName
  fullName: System.Xml.XmlAttribute.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera nazwę lokalnego węzła."
  remarks: "Jeśli węzeł nie ma prefiksu, `LocalName` jest taka sama jak <xref:System.Xml.XmlAttribute.Name%2A>.</xref:System.Xml.XmlAttribute.Name%2A>"
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_3_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_3_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_3_1.vb)]"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Nazwa węzła atrybutu z prefiksem usunięte. W poniższym przykładzie &lt;książki bk:genre = &quot;Nowa&quot;&gt;, <xref uid=&quot;langword_csharp_LocalName&quot; name=&quot;LocalName&quot; href=&quot;&quot;> </xref> atrybutu jest <xref uid=&quot;langword_csharp_genre&quot; name=&quot;genre&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlAttribute.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Name
  id: Name
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Name
  nameWithType: XmlAttribute.Name
  fullName: System.Xml.XmlAttribute.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera kwalifikowaną nazwę węzła."
  remarks: ''
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_8_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_8_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_8_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Kwalifikowana nazwa węzła atrybutu."
  overload: System.Xml.XmlAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
  fullName: System.Xml.XmlAttribute.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera identyfikator URI tego węzła przestrzeni nazw."
  remarks: "Atrybut nie dziedziczy z elementu, który nie został dołączony do jego przestrzeni nazw. Czy atrybut przestrzeni nazw nie jest jawnie podany, identyfikator URI przestrzeni nazw jest uznawane za String.Empty."
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_1_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_1_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_1_1.vb)]"
  syntax:
    content: public override string NamespaceURI { get; }
    return:
      type: System.String
      description: "Identyfikator URI przestrzeni nazw tego węzła. Jeśli ten atrybut nie jest jawnie podany obszar nazw, ta właściwość zwraca String.Empty."
  overload: System.Xml.XmlAttribute.NamespaceURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.NodeType
  id: NodeType
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlAttribute.NodeType
  fullName: System.Xml.XmlAttribute.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera typ bieżącego węzła."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "Typ węzła dla <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> XmlNodeType.Attribute jest węzłów."
  overload: System.Xml.XmlAttribute.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
  fullName: System.Xml.XmlAttribute.OwnerDocument
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> do której należy ten węzeł."
  remarks: ''
  example:
  - "The following example creates an attribute and displays its `OwnerDocument`.  \n  \n [!code-cs[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_2_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_2_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_2_1.vb)]"
  syntax:
    content: public override System.Xml.XmlDocument OwnerDocument { get; }
    return:
      type: System.Xml.XmlDocument
      description: "Dokument XML, do którego należy ten węzeł."
  overload: System.Xml.XmlAttribute.OwnerDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.OwnerElement
  id: OwnerElement
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
  fullName: System.Xml.XmlAttribute.OwnerElement
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera <xref href=&quot;System.Xml.XmlElement&quot;> </xref> do której należy ten atrybut."
  remarks: ''
  example:
  - "The following example creates an attribute and displays the `OwnerElement` of the attribute.  \n  \n [!code-cs[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_4_1.cs)]\n [!code-vb[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_4_1.vb)]\n [!code-cpp[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_4_1.cpp)]"
  syntax:
    content: public virtual System.Xml.XmlElement OwnerElement { get; }
    return:
      type: System.Xml.XmlElement
      description: "<xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> Należącą do atrybutu lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli ten atrybut nie jest częścią <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlAttribute.OwnerElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.ParentNode
  id: ParentNode
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
  fullName: System.Xml.XmlAttribute.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera element nadrzędny tego węzła. Aby uzyskać <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> węzłów, ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Użyj <xref:System.Xml.XmlAttribute.OwnerElement%2A>właściwości do pobrania <xref:System.Xml.XmlElement>do której należy ten atrybut.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlAttribute.OwnerElement%2A>"
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "Aby uzyskać <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> węzłów, ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlAttribute.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Prefix
  id: Prefix
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlAttribute.Prefix
  fullName: System.Xml.XmlAttribute.Prefix
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera lub ustawia prefiks przestrzeni nazw w tym węźle."
  remarks: "Ponieważ zmiana prefiks atrybutu nie zmienia jego identyfikator URI przestrzeni nazw, zmieniając prefiks atrybutu, który ma wartość domyślną nie tworzy nowy atrybut z wartością domyślną i oryginalnego prefiks."
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_9_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_9_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_9_1.vb)]"
  syntax:
    content: public override string Prefix { get; set; }
    return:
      type: System.String
      description: "Prefiks przestrzeni nazw tego węzła. Jeśli nie ma żadnego prefiksu, ta właściwość zwraca String.Empty."
  overload: System.Xml.XmlAttribute.Prefix*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ten węzeł jest tylko do odczytu."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Określony prefiks zawiera nieprawidłowy znak.       Określony prefiks jest nieprawidłowo sformułowany.       Jego identyfikator namespaceURI tego węzła jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       Określony prefiks jest &quot;xml&quot;, a jego identyfikator namespaceURI tego węzła jest inny niż &quot;http://www.w3.org/XML/1998/namespace&quot;.       Ten węzeł jest atrybut &quot;xmlns&quot; jest określony prefiks i jego identyfikator namespaceURI tego węzła jest inny niż &quot;http://www.w3.org/2000/xmlns/&quot;.       Ten węzeł jest atrybutem i qualifiedName tego węzła jest &quot;xmlns&quot; [przestrzeni nazw]."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  id: PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: PrependChild(XmlNode)
  nameWithType: XmlAttribute.PrependChild(XmlNode)
  fullName: System.Xml.XmlAttribute.PrependChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Dodaje określony węzeł na początku listy węzłów podrzędnych dla tego węzła."
  remarks: "Jeśli `newChild` jest już w drzewie zostanie najpierw usunięte.       Jeśli węzeł wstawiane został utworzony z innego dokumentu, można użyć <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>można zaimportować węzła do bieżącego dokumentu.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> Następnie można wstawić węzła zaimportowane do bieżącego dokumentu.       Ta metoda jest rozszerzeniem firmy Microsoft do modelu DOM (Document Object)."
  example:
  - For an example of the PrependChild method, see the <xref:System.Xml.XmlNode.PrependChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "The <xref href=&quot;System.Xml.XmlNode&quot;></xref> to add. Jeśli jest <xref href=&quot;System.Xml.XmlDocumentFragment&quot;> </xref>, cała zawartość fragment dokumentu zostaną przeniesione do listy podrzędny tego węzła."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Dodane."
  overload: System.Xml.XmlAttribute.PrependChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ten węzeł jest typu, który nie zezwala podrzędnych węzłów typu <code> newChild </code> węzła.       <code> newChild </code> Jest elementem nadrzędnym tego węzła."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> Został utworzony z innego dokumentu niż konto, którego utworzono ten węzeł.       Ten węzeł jest tylko do odczytu."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  id: RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: RemoveChild(XmlNode)
  nameWithType: XmlAttribute.RemoveChild(XmlNode)
  fullName: System.Xml.XmlAttribute.RemoveChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Usuwa określony podrzędnym."
  remarks: ''
  example:
  - For an example of the RemoveChild method, see the <xref:System.Xml.XmlNode.RemoveChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);
    parameters:
    - id: oldChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Do usunięcia."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Usunięte."
  overload: System.Xml.XmlAttribute.RemoveChild*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> oldChild </code> Nie jest elementem podrzędnym tego węzła. Lub ten węzeł jest tylko do odczytu."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  id: ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: ReplaceChild(XmlNode,XmlNode)
  nameWithType: XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Zamienia określony za pomocą nowego węzła podrzędnego określony węzeł podrzędny."
  remarks: "Jeśli `newChild` jest już w drzewie zostanie najpierw usunięte.       Jeśli `newChild` został utworzony z innego dokumentu, można użyć <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>można zaimportować węzła do bieżącego dokumentu.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>"
  example:
  - For an example of the ReplaceChild method, see the <xref:System.Xml.XmlNode.ReplaceChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "Nowy element podrzędny <xref href=&quot;System.Xml.XmlNode&quot;> </xref>."
    - id: oldChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Zamienić."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> Zastąpione."
  overload: System.Xml.XmlAttribute.ReplaceChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ten węzeł jest typu, który nie zezwala podrzędnych węzłów typu <code> newChild </code> węzła.       <code> newChild </code> Jest elementem nadrzędnym tego węzła."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> Został utworzony z innego dokumentu niż konto, którego utworzono ten węzeł.       Ten węzeł jest tylko do odczytu.       <code> oldChild </code> Nie jest elementem podrzędnym tego węzła."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
  fullName: System.Xml.XmlAttribute.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera po-schema-weryfikacji-typu infoset przypisana do tego węzła, w wyniku sprawdzania poprawności schematu."
  remarks: "Właściwość SchemaInfo jest ustawiona, podczas sprawdzania poprawności tego węzła."
  syntax:
    content: public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.IXmlSchemaInfo&quot;> </xref> Zawierającej po-schema-weryfikacji-obiekt typu infoset tego węzła."
  overload: System.Xml.XmlAttribute.SchemaInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Specified
  id: Specified
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Specified
  nameWithType: XmlAttribute.Specified
  fullName: System.Xml.XmlAttribute.Specified
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera wartość wskazującą, czy wartość atrybutu została jawnie ustawiona."
  remarks: "Implementacja jest odpowiedzialny za tę właściwość, a nie użytkownika. Jeśli użytkownik zmieni się wartość atrybutu (nawet jeśli kończy mają taką samą wartość jak wartość domyślną/fixed), następnie określona flaga jest automatycznie odwrócony do `true`. Aby ponownie określić atrybut jako wartość domyślną/fixed z pliku DTD, użytkownik musi usunąć atrybutu. Następnie implementacji udostępnia nowy atrybut określonych do `false` i domyślne/stałe wartości (jeśli istnieje).       Podsumowując: 1.  Jeśli ten atrybut ma przypisaną wartość w dokumencie `Specified` jest `true`, a wartość to przypisanej wartości.      2.  Jeśli ten atrybut nie ma przypisanej wartości w dokumencie i ma wartość domyślną/fixed w definicji DTD, `Specified` jest `false`, a wartość jest wartością domyślną/fixed w definicji DTD.      3.  W przeciwnym razie ten atrybut nie ma modelu strukturę dokumentu."
  syntax:
    content: public virtual bool Specified { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten atrybut został jawnie określoną wartość w oryginalnym dokumencie wystąpienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wskazuje, że wartość atrybutu pochodzi od elementu DTD."
  overload: System.Xml.XmlAttribute.Specified*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Value
  id: Value
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Value
  nameWithType: XmlAttribute.Value
  fullName: System.Xml.XmlAttribute.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera lub ustawia wartość węzła."
  remarks: ''
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_6_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_6_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_6_1.vb)]"
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "Wartość zwracana jest zależna od <xref:System.Xml.XmlNode.NodeType*>węzła.</xref:System.Xml.XmlNode.NodeType*> Aby uzyskać <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> węzłów, ta właściwość jest wartością atrybutu."
  overload: System.Xml.XmlAttribute.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ten węzeł jest tylko do odczytu i nosi nazwę operacji set."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlAttribute.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Zapisuje wszystkie elementy podrzędne węzła do określonego <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Ta metoda jest rozszerzeniem firmy Microsoft do modelu DOM (Document Object). Jest funkcjonalnym odpowiednikiem <xref:System.Xml.XmlAttribute.InnerXml%2A>Właściwości.</xref:System.Xml.XmlAttribute.InnerXml%2A>"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> , Do której ma zostać zapisany."
  overload: System.Xml.XmlAttribute.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlAttribute.WriteTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Zapisuje określony <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> węzła"
  remarks: "Ta metoda jest rozszerzeniem firmy Microsoft do modelu DOM (Document Object). Jest funkcjonalnym odpowiednikiem <xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=fullName>Właściwości.</xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=fullName>"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> , Do której ma zostać zapisany."
  overload: System.Xml.XmlAttribute.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNode
  isExternal: false
  name: System.Xml.XmlNode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: XmlAttribute(String,String,String,XmlDocument)
  nameWithType: XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  fullName: System.Xml.XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: AppendChild(XmlNode)
  nameWithType: XmlAttribute.AppendChild(XmlNode)
  fullName: System.Xml.XmlAttribute.AppendChild(XmlNode)
- uid: System.Xml.XmlAttribute.BaseURI
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
  fullName: System.Xml.XmlAttribute.BaseURI
- uid: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlAttribute.CloneNode(Boolean)
  fullName: System.Xml.XmlAttribute.CloneNode(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlAttribute.InnerText
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerText
  nameWithType: XmlAttribute.InnerText
  fullName: System.Xml.XmlAttribute.InnerText
- uid: System.Xml.XmlAttribute.InnerXml
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
  fullName: System.Xml.XmlAttribute.InnerXml
- uid: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertAfter(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertAfter(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertAfter(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertBefore(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertBefore(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertBefore(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.LocalName
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: LocalName
  nameWithType: XmlAttribute.LocalName
  fullName: System.Xml.XmlAttribute.LocalName
- uid: System.Xml.XmlAttribute.Name
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Name
  nameWithType: XmlAttribute.Name
  fullName: System.Xml.XmlAttribute.Name
- uid: System.Xml.XmlAttribute.NamespaceURI
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
  fullName: System.Xml.XmlAttribute.NamespaceURI
- uid: System.Xml.XmlAttribute.NodeType
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NodeType
  nameWithType: XmlAttribute.NodeType
  fullName: System.Xml.XmlAttribute.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlAttribute.OwnerDocument
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
  fullName: System.Xml.XmlAttribute.OwnerDocument
- uid: System.Xml.XmlAttribute.OwnerElement
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
  fullName: System.Xml.XmlAttribute.OwnerElement
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlAttribute.ParentNode
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
  fullName: System.Xml.XmlAttribute.ParentNode
- uid: System.Xml.XmlAttribute.Prefix
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Prefix
  nameWithType: XmlAttribute.Prefix
  fullName: System.Xml.XmlAttribute.Prefix
- uid: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: PrependChild(XmlNode)
  nameWithType: XmlAttribute.PrependChild(XmlNode)
  fullName: System.Xml.XmlAttribute.PrependChild(XmlNode)
- uid: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: RemoveChild(XmlNode)
  nameWithType: XmlAttribute.RemoveChild(XmlNode)
  fullName: System.Xml.XmlAttribute.RemoveChild(XmlNode)
- uid: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ReplaceChild(XmlNode,XmlNode)
  nameWithType: XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.ReplaceChild(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.SchemaInfo
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
  fullName: System.Xml.XmlAttribute.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlAttribute.Specified
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Specified
  nameWithType: XmlAttribute.Specified
  fullName: System.Xml.XmlAttribute.Specified
- uid: System.Xml.XmlAttribute.Value
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Value
  nameWithType: XmlAttribute.Value
  fullName: System.Xml.XmlAttribute.Value
- uid: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlAttribute.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlAttribute.WriteTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteTo(XmlWriter)
- uid: System.Xml.XmlAttribute.#ctor*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute.XmlAttribute
- uid: System.Xml.XmlAttribute.AppendChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: AppendChild
  nameWithType: XmlAttribute.AppendChild
- uid: System.Xml.XmlAttribute.BaseURI*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
- uid: System.Xml.XmlAttribute.CloneNode*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: CloneNode
  nameWithType: XmlAttribute.CloneNode
- uid: System.Xml.XmlAttribute.InnerText*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerText
  nameWithType: XmlAttribute.InnerText
- uid: System.Xml.XmlAttribute.InnerXml*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
- uid: System.Xml.XmlAttribute.InsertAfter*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertAfter
  nameWithType: XmlAttribute.InsertAfter
- uid: System.Xml.XmlAttribute.InsertBefore*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertBefore
  nameWithType: XmlAttribute.InsertBefore
- uid: System.Xml.XmlAttribute.LocalName*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: LocalName
  nameWithType: XmlAttribute.LocalName
- uid: System.Xml.XmlAttribute.Name*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Name
  nameWithType: XmlAttribute.Name
- uid: System.Xml.XmlAttribute.NamespaceURI*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
- uid: System.Xml.XmlAttribute.NodeType*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NodeType
  nameWithType: XmlAttribute.NodeType
- uid: System.Xml.XmlAttribute.OwnerDocument*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
- uid: System.Xml.XmlAttribute.OwnerElement*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
- uid: System.Xml.XmlAttribute.ParentNode*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
- uid: System.Xml.XmlAttribute.Prefix*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Prefix
  nameWithType: XmlAttribute.Prefix
- uid: System.Xml.XmlAttribute.PrependChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: PrependChild
  nameWithType: XmlAttribute.PrependChild
- uid: System.Xml.XmlAttribute.RemoveChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: RemoveChild
  nameWithType: XmlAttribute.RemoveChild
- uid: System.Xml.XmlAttribute.ReplaceChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ReplaceChild
  nameWithType: XmlAttribute.ReplaceChild
- uid: System.Xml.XmlAttribute.SchemaInfo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
- uid: System.Xml.XmlAttribute.Specified*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Specified
  nameWithType: XmlAttribute.Specified
- uid: System.Xml.XmlAttribute.Value*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Value
  nameWithType: XmlAttribute.Value
- uid: System.Xml.XmlAttribute.WriteContentTo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlAttribute.WriteContentTo
- uid: System.Xml.XmlAttribute.WriteTo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteTo
  nameWithType: XmlAttribute.WriteTo
