### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ActiveDirectoryRole
  id: ActiveDirectoryRole
  children:
  - System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  - System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  - System.Workflow.Activities.ActiveDirectoryRole.GetManager
  - System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  - System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  - System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  - System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  - System.Workflow.Activities.ActiveDirectoryRole.Name
  - System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  - System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  - System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
  type: Class
  summary: "Reprezentuje rolę usługi Active Directory w środowisku macierzystym Windows Workflow Foundation. Ta klasa nie może być dziedziczona."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Zazwyczaj magazynu usługi Active Directory jest używany do przechowywania informacji o organizacji dla pracowników. Głównym celem dla ActiveDirectoryRole jest do tworzenia zapytań dotyczących tych informacji organizacyjnych ze względów biznesowych.       Role usługi Active Directory zwykle odpowiadają funkcję zadania, tytuł lub zadanie umiejętności w kontekście organizacji."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.Workflow.Activities.WorkflowRole
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  id: GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> zawierający wszystkie role, którzy raportują do bieżącej roli, bezpośrednio lub pośrednio."
  remarks: "GetAllReports zwraca wszystkie węzły poniżej bieżącego węzła. Użyj <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>do zwrócenia tylko węzły, które są bezpośrednio poniżej bieżącego węzła.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "A <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> zawierający wszystkie role raportujących albo bezpośrednio lub pośrednio do bieżącej roli."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  id: GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> zawierający wszystkie role, które zgłosiły bezpośrednio do bieżącej roli."
  remarks: "GetDirectReports zwraca tylko węzły, które są bezpośrednio poniżej bieżącego węzła. Aby przywrócić wszystkie węzły poniżej bieżącego węzła za pomocą <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> Zawierający wszystkie role, który bezpośrednio raportować do bieżącej roli."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  id: GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca kolekcję ogólnego, który zawiera wszystkie <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> obiekty skojarzone z bieżącym <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "Rola może być ogólna kolekcję obiektów zabezpieczeń. Tak roli może zawierać wiele tożsamości, na przykład GetEntries zwracać wszystkie obiekty katalogu skojarzone z rolą."
  syntax:
    content: public System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry> GetEntries ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
      description: "Ogólnego <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> kolekcji, która jest skojarzona z bieżącym <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  id: GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Pobiera listę ogólnych kont systemu Windows NT skojarzonych z <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetIdentities uzyskuje wszystkie <xref:System.Security.Principal.SecurityIdentifier>obiekty skojarzone z <xref:System.Workflow.Activities.ActiveDirectoryRole>i konwertuje każdego z nich na wartość typu ciąg.</xref:System.Workflow.Activities.ActiveDirectoryRole> </xref:System.Security.Principal.SecurityIdentifier>"
  syntax:
    content: public override System.Collections.Generic.IList<string> GetIdentities ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Ogólne listy wartości reprezentujące kont systemu Windows NT skojarzonych z <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  id: GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca roli usługi Active Directory, który zawiera informacje dotyczące Menedżera bieżącego <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetManager zwraca bezpośredni manager dla bieżącej roli. Aby przywrócić wszystkie role powyżej bieżącego węzła, użyj <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManager ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> Zawierający informacje dotyczące Menedżera bieżącej roli."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  id: GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca rolę usługi Active Directory, który zawiera informacje o łańcuchu zarządzania skojarzony z bieżącym <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetManagerialChain zwraca wszystkie węzły powyżej bieżącej roli. Aby przywrócić tylko bezpośredniego kierownika bieżącej roli, należy użyć <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "<xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> Zawierający informacje o łańcuchu zarządzania skojarzony z bieżącej roli."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  id: GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca rolę usługi Active Directory, który zawiera informacje o wszystkich operacji katalogu, które są nadzorowane przez Menedżera bieżącego <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "<xref:System.Workflow.Activities.ActiveDirectoryRole>Zwrócona, zawiera informacje z wszystkich obiektów zarządzanych przez menedżera tej roli, ale nie zawiera tych informacji z bieżącej roli.</xref:System.Workflow.Activities.ActiveDirectoryRole>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "A <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> zawierający informacje dotyczące wszystkich operacji katalogu, które są nadzorowane przez Menedżera bieżącego <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  id: GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca listę ogólnego <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> obiekty skojarzone z bieżącym <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetSecurityIdentifiers sprawdza każdego <xref:System.DirectoryServices.DirectoryEntry>zwrócony przez <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A>metody, jeśli wpis ma identyfikator zabezpieczeń w jego <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>kolekcji.</xref:System.DirectoryServices.DirectoryEntry.Properties%2A> </xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> </xref:System.DirectoryServices.DirectoryEntry> Jeśli <xref:System.DirectoryServices.DirectoryEntry>ma takie właściwości dodaje GetSecurityIdentifiers <xref:System.Security.Principal.SecurityIdentifier>do listy zwraca.</xref:System.Security.Principal.SecurityIdentifier> </xref:System.DirectoryServices.DirectoryEntry>"
  syntax:
    content: public System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier> GetSecurityIdentifiers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
      description: "Ogólny listę <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> obiekty skojarzone z bieżącym <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  id: IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwraca wartość wskazującą, czy <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> zawiera określoną tożsamością."
  remarks: "Ponieważ roli jest generalizacji co najmniej jeden obiekt, wiele tożsamości mogą opisanego przez jedną rolę. Użyj IncludesIdentity, aby sprawdzić, czy określona tożsamość jest uwzględniona w obrębie tej roli."
  syntax:
    content: public override bool IncludesIdentity (string identity);
    parameters:
    - id: identity
      type: System.String
      description: "Tożsamość do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że <code> identity </code> znajduje się w <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  id: Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Pobiera lub ustawia nazwę roli usługi Active Directory."
  remarks: "Użyj nazwy do opisywania roli."
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "Nazwa roli usługi Active Directory."
  overload: System.Workflow.Activities.ActiveDirectoryRole.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  id: RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Pobiera głównego węzła usługi Active Directory, skojarzone z <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "Wpis katalogu głównego to rola zapasowej łańcuchu ról ma Brak menedżera."
  syntax:
    content: public System.DirectoryServices.DirectoryEntry RootEntry { get; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> reprezentujący głównego węzła usługi Active Directory, skojarzone z <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Wypełnia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przy użyciu danych wymaganych do zserializowania obiektu docelowego."
  remarks: "Implementacja <xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>umożliwia tego obiektu można było serializować.</xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Do wypełniania danych."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>Lokalizacja docelowa tej serializacji.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: System.Workflow.Activities.WorkflowRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole
  parent: System.Workflow.Activities
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
- uid: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<DirectoryEntry>
  nameWithType: ICollection<DirectoryEntry>
  fullName: System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.DirectoryServices.DirectoryEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.DirectoryEntry
    name: DirectoryEntry
    nameWithType: DirectoryEntry
    fullName: DirectoryEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
- uid: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SecurityIdentifier>
  nameWithType: IList<SecurityIdentifier>
  fullName: System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Security.Principal.SecurityIdentifier>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: SecurityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports
  nameWithType: ActiveDirectoryRole.GetAllReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports
  nameWithType: ActiveDirectoryRole.GetDirectReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries
  nameWithType: ActiveDirectoryRole.GetEntries
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities
  nameWithType: ActiveDirectoryRole.GetIdentities
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager
  nameWithType: ActiveDirectoryRole.GetManager
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain
  nameWithType: ActiveDirectoryRole.GetManagerialChain
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers
  nameWithType: ActiveDirectoryRole.GetPeers
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity
  nameWithType: ActiveDirectoryRole.IncludesIdentity
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData
