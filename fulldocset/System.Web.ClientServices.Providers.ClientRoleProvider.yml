### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.Providers.ClientRoleProvider
  id: ClientRoleProvider
  children:
  - System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  - System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  - System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  - System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  langs:
  - csharp
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider
  type: Class
  summary: "Pobiera informacje o rolach dla aplikacji systemu Windows z [!INCLUDE[ajax_current_short](~/add/includes/ajax-current-short-md.md)] usługi ról."
  remarks: "Usługi aplikacji klienta umożliwia pobieranie informacje o rolach z istniejącej usługi ról przy konfigurowaniu aplikacji do użycia klasy ClientRoleProvider. Po przeprowadzeniu konfiguracji, można określić, czy uwierzytelniony użytkownik jest w określonej roli, wywołując <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metody <xref:System.Security.Principal.IPrincipal>zwrócony przez `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>Właściwości.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> Dla aplikacji, skonfigurowanych do korzystania z usługi aplikacji klienta ta właściwość zwraca <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> Ponieważ ta klasa implementuje <xref:System.Security.Principal.IPrincipal>interfejsu, nie trzeba jawnie odwoływać.</xref:System.Security.Principal.IPrincipal> <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>Wewnętrznie wywołuje metodę <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName>metody.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName> </xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>       Klasa ClientRoleProvider jest dostawcy członkostwa roli tylko do odczytu, który pobiera informacje o rolach dla uwierzytelnionych użytkowników z usługi ról wskazywanym przez <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>Właściwości.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> Wartość <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>Właściwości jest zazwyczaj pobierana z pliku konfiguracji aplikacji oraz innych wartości konfiguracji.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> Aby uzyskać więcej informacji, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/add/includes/ajax-current-ext-md.md).       Można pobrać bieżącego wystąpienia ClientRoleProvider za pośrednictwem `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>Właściwości.</xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>       Klasa ClientRoleProvider obsługuje tylko <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>i <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>metod <xref:System.Web.Security.RoleProvider>klasy abstrakcyjnej.</xref:System.Web.Security.RoleProvider> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> Podczas wywoływania jednej z tych metod dla danego użytkownika dostawcę usługi najpierw sprawdza dane lokalne pamięci podręcznej informacje o rolach. Jeśli pamięci podręcznej nie zawiera żadnych informacji o roli lub wygasł pamięci podręcznej, dostawca usług pobiera informacje o rolach usługi ról i dodaje go do pamięci podręcznej.       Po skonfigurowaniu usługi aplikacji klienta, można określić wartość limitu czasu dla pamięci podręcznej ról. Aby wymusić <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>metody do pobierania danych roli usługi zamiast lokalnej pamięci podręcznej wywołania <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>metody pierwszej.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       Klasa ClientRoleProvider nie można używać do tworzenia lub usuwania ról lub aby zmodyfikować członkostwo ról użytkowników. Aby utworzyć lub zmodyfikować informacje o rolach, należy zmienić konfigurację usługi roli na serwerze."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: 'public class ClientRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref> klasy."
  syntax:
    content: public ClientRoleProvider ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Nie jest używany."
    - id: roleNames
      type: System.String[]
      description: "Nie jest używany."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta właściwość nie jest używana przez tę klasę."
  remarks: "Ustawienie tej właściwości nie ma znaczenia."
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Nazwa aplikacji dla dostawcy."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nie jest używany."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Nie jest używany."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Nie jest używany."
    return:
      type: System.Boolean
      description: "Nie dotyczy. Ta metoda zawsze zwraca wyjątek."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Nie jest używany."
    - id: usernameToMatch
      type: System.String
      description: "Nie jest używany."
    return:
      type: System.String[]
      description: "Nie dotyczy. Ta metoda zawsze zwraca wyjątek."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Nie dotyczy. Ta metoda zawsze zwraca wyjątek."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Pobiera nazwy ról, do których określony użytkownik należy."
  remarks: "Metoda GetRolesForUser pobiera informacje o rolach użytkownika bieżącego, uwierzytelnionym, który należy określić w `username` parametru. Nazwa użytkownika można uzyskać za pomocą `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>Właściwości w następujący sposób: `Thread.CurrentPrincipal.Identity.Name`.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       Dostawcy usług buforuje informacje o rolach o lokalnego systemu plików w celu uniknięcia usługa niepotrzebne wywołania. Aby uzyskać więcej informacji, zobacz <xref:System.Web.ClientServices.Providers.ClientRoleProvider>Przegląd klasy.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to use this method to determine whether the user login has expired before testing role membership. This code assumes that all valid users are associated with one or more roles. In this case, the GetRolesForUser method will not return any roles for a previously-authenticated user whose login has expired. If the user login has expired, this code displays the login dialog box. Otherwise, it calls the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> method to determine whether the user is in the \"manager\" role. The restricted code is in a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika, który można pobrać ról."
    return:
      type: System.String[]
      description: "Nazwy roli, która <code> username </code> należy lub pusta tablica, jeśli użytkownik nie jest uwierzytelniony."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>username</code> nie jest nazwą użytkownika bieżącego, uwierzytelnionego użytkownika."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nie jest używany."
    return:
      type: System.String[]
      description: "Nie dotyczy. Ta metoda zawsze zwraca wyjątek."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Inicjuje dostawcę."
  remarks: "[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] Modelu rozszerzalności wywołuje metodę inicjowania zainicjować <xref:System.Web.ClientServices.Providers.ClientRoleProvider>Korzystając z informacji w pliku konfiguracyjnym aplikacji.</xref:System.Web.ClientServices.Providers.ClientRoleProvider> Ta metoda rozpoznaje następujące atrybuty konfiguracji usługi roli:- `name`       -    `description`       -    `cacheTimeout`       -    `connectionStringName`       -    `serviceUri`       -    `honorCookieExpiry` uzyskać więcej informacji na temat tych atrybutów, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Przyjazna nazwa dostawcy."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Kolekcja par nazw i wartości reprezentujących atrybuty specyficzne dla dostawcy określonego w konfiguracji dla tego dostawcy."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>config</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>jest pusty.       - lub - <code>config</code> zawiera nierozpoznaną wartość. Aby uzyskać więcej informacji zobacz sekcję uwag."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "To <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref> został już zainicjowany."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>config</code>zawiera `cacheTimeout` wartość, która nie znajduje się w poprawnym formacie do konwersji na <xref:System.Int32> wartość."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "<code>config</code>zawiera `cacheTimeout` wartość reprezentującą liczbę mniej niż <xref:System.Int32.MinValue> lub większa niż <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Pobiera wartość wskazującą, czy określony użytkownik ma określoną rolę."
  remarks: "Można określić, czy uwierzytelniony użytkownik jest w określonej roli, wywołując <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metody <xref:System.Security.Principal.IPrincipal>zwrócony przez `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>Właściwości.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> Dla aplikacji, skonfigurowanych do korzystania z usługi aplikacji klienta ta właściwość zwraca <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> Ponieważ ta klasa implementuje <xref:System.Security.Principal.IPrincipal>interfejsu, nie trzeba jawnie odwoływać.</xref:System.Security.Principal.IPrincipal> <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>Metoda wewnętrznie wywołuje metodę IsUserInRole.</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName> W metodzie IsUserInRole <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>metodę, aby określić, czy użytkownik jest wskazane przez `username` jest w roli wskazywanym przez `roleName`.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       Dostawcy usług buforuje informacje o rolach o lokalnego systemu plików w celu uniknięcia usługa niepotrzebne wywołania. Aby uzyskać więcej informacji, zobacz <xref:System.Web.ClientServices.Providers.ClientRoleProvider>Przegląd klasy.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to access this method directly to determine whether the user is in a particular role. This code first tests whether the user login has expired. An explicit <xref:System.Web.ClientServices.Providers.ClientRoleProvider> reference is required to call the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> method, so the same reference is used to call the IsUserInRole method. If the user is in the \"manager\" role, this code calls a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika."
    - id: roleName
      type: System.String
      description: "Nazwa roli."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony użytkownik jest w określonej roli; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , jeśli określony użytkownik nie jest uwierzytelniony, lub nie znajduje się w określonej roli."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>username</code> nie jest nazwą użytkownika bieżącego, uwierzytelnionego użytkownika."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Użytkownik jest już uwierzytelniony.       - lub - usługi ról nie jest dostępna."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Nie jest używany."
    - id: roleNames
      type: System.String[]
      description: "Nie jest używany."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  id: ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Usuwa informacje o pamięci podręcznej rolach i przywraca limitu czasu pamięci podręcznej."
  remarks: "Metoda ResetCache usuwa wszystkie informacje o rolach z lokalnej pamięci podręcznej i powoduje, że pamięć podręczna wygaśnie. Po wywołaniu tej metody następnego wywołania w celu <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>lub <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>— metoda pobiera informacje o rolach z usługi roli skonfigurowanych zamiast lokalnej pamięci podręcznej.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       Ta metoda umożliwia umożliwiają użytkownikom odświeżania pamięci podręcznej ról podczas ich roli został zmodyfikowany, ale nie upłynął jeszcze pamięci podręcznej. Aby uzyskać informacje o tym, jak ustawić interwał limitu czasu pamięci podręcznej ról, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to reset the local roles cache.  \n  \n [!code-vb[ClientApplicationServices#314](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#314)]\n [!code-cs[ClientApplicationServices#314](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#314)]"
  syntax:
    content: public void ResetCache ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Ta metoda nie jest używana przez tę klasę."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nie jest używany."
    return:
      type: System.Boolean
      description: "Nie dotyczy. Ta metoda zawsze zwraca wyjątek."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zawsze generowany."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  id: ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Pobiera lub ustawia identyfikator URI usługi roli."
  remarks: "Można ustawić właściwości ServiceUri w kodzie aplikacji, ale zazwyczaj ustawi wartość w pliku konfiguracyjnym aplikacji. Dzięki temu można zmienić lokalizacji usługi bez konieczności ponownego kompilowania kodu. Aby uzyskać więcej informacji, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/add/includes/ajax-current-ext-md.md).       Po ustawieniu programowo lokalizacji usługi, należy określić usługę pełny identyfikator URI, który zawsze będzie kończyć &quot;Role_JSON_AppService.axd&quot;."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: public string ServiceUri { get; set; }
    return:
      type: System.String
      description: "Usługa roli identyfikatora URI."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podczas pobierania tej właściwości, żadna usługa identyfikatora URI, został znaleziony w pliku konfiguracyjnym aplikacji, a ta właściwość nie została wcześniej ustawiona."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider.ClientRoleProvider
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: ClientRoleProvider.AddUsersToRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: ClientRoleProvider.CreateRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: ClientRoleProvider.DeleteRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: ClientRoleProvider.FindUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: ClientRoleProvider.GetAllRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: ClientRoleProvider.GetRolesForUser
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: ClientRoleProvider.GetUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: ClientRoleProvider.Initialize
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: ClientRoleProvider.IsUserInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache
  nameWithType: ClientRoleProvider.ResetCache
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: ClientRoleProvider.RoleExists
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
