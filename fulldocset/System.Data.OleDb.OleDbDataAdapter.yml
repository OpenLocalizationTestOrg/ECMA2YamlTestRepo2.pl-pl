### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbDataAdapter
  id: OleDbDataAdapter
  children:
  - System.Data.OleDb.OleDbDataAdapter.#ctor
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  - System.Data.OleDb.OleDbDataAdapter.InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.RowUpdated
  - System.Data.OleDb.OleDbDataAdapter.RowUpdating
  - System.Data.OleDb.OleDbDataAdapter.SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  - System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
  type: Class
  summary: "Reprezentuje zestaw poleceń danych i połączenie z bazą danych, które są używane do wypełnienia <xref href=&quot;System.Data.DataSet&quot;> </xref> i zaktualizować źródła danych."
  remarks: "OleDbDataAdapter służy jako mostka między <xref:System.Data.DataSet>i źródła danych do pobierania i zapisywania danych.</xref:System.Data.DataSet> OleDbDataAdapter zapewnia to mostek przy użyciu <xref:System.Data.Common.DbDataAdapter.Fill%2A>do ładowania danych z źródła danych do <xref:System.Data.DataSet>i przy użyciu <xref:System.Data.Common.DbDataAdapter.Update%2A>Aby wysłać zmiany wprowadzone w <xref:System.Data.DataSet>do źródła danych.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Gdy wypełnia OleDbDataAdapter <xref:System.Data.DataSet>, jeśli jeszcze nie istnieje zostanie utworzony odpowiedni tabel i kolumn dla zwracanych danych.</xref:System.Data.DataSet> Jednak informacje o kluczu podstawowym nie wchodzi w schemacie niejawnie tworzonych chyba że <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>właściwość jest ustawiona na <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Ponadto klientowi mogą przysługiwać OleDbDataAdapter tworzony jest schemat <xref:System.Data.DataSet>takie jak informacje o kluczu podstawowym, zanim ją z danymi przy użyciu <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wypełnianie</xref:System.Data.DataSet> Aby uzyskać więcej informacji, zobacz [Dodawanie istniejących ograniczeń do zestawu danych](~/add/includes/ajax-current-ext-md.md).       Należy pamiętać, że niektóre dostawców OLE DB, w tym dostawcy MSDataShape nie zwrócą informacji o tabeli podstawowej lub informacje o kluczu podstawowym. W związku z tym OleDbDataAdapter poprawnie nie można ustawić <xref:System.Data.DataTable.PrimaryKey%2A>Właściwości na wszystkie utworzone <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> W takich sytuacjach należy jawnie określić kluczy podstawowych dla tabel w <xref:System.Data.DataSet>.</xref:System.Data.DataSet>       Zawiera również OleDbDataAdapter <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, i <xref:System.Data.Common.DataAdapter.TableMappings%2A>Właściwości, aby ułatwić ładowanie i aktualizowania danych.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>       Podczas tworzenia wystąpienia elementu OleDbDataAdapter właściwości są ustawiane na wartości początkowe. Aby uzyskać listę tych wartości Zobacz konstruktora elementu OleDbDataAdapter."
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, OleDbDataAdapter and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_7_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_7_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klasy."
  remarks: "Podczas tworzenia wystąpienia <xref:System.Data.OleDb.OleDbDataAdapter>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</xref:System.Data.OleDb.OleDbDataAdapter>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_28_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_28_1.cs)]"
  syntax:
    content: public OleDbDataAdapter ();
    parameters: []
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  id: '#ctor(System.Data.OleDb.OleDbCommand)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klasy z określonym <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> jako <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>Właściwości.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Ta implementacja <xref:System.Data.OleDb.OleDbDataAdapter>Ustawia konstruktora <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>właściwości do wartości określonej w `selectCommand` parametru.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter>       Podczas tworzenia wystąpienia <xref:System.Data.OleDb.OleDbDataAdapter>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</xref:System.Data.OleDb.OleDbDataAdapter>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_17_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_17_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> Jest wybierz instrukcji lub procedury składowanej, a jest ustawiana jako <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>Właściwość <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> z <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*> — klasa"
  remarks: "Ta implementacja <xref:System.Data.OleDb.OleDbDataAdapter>Otwiera i zamyka <xref:System.Data.OleDb.OleDbConnection>Jeśli nie jest już otwarty.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataAdapter> Może to być przydatne w aplikacji, który musi wywołać <xref:System.Data.Common.DbDataAdapter.Fill%2A>metodę dla co najmniej dwa <xref:System.Data.OleDb.OleDbDataAdapter>obiektów.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Jeśli <xref:System.Data.OleDb.OleDbConnection>jest już otwarty, użytkownik musi jawnie wywołać <xref:System.Data.OleDb.OleDbConnection.Close%2A>lub **Dispose** aby zamknąć jego</xref:System.Data.OleDb.OleDbConnection.Close%2A> </xref:System.Data.OleDb.OleDbConnection>       Podczas tworzenia wystąpienia <xref:System.Data.OleDb.OleDbDataAdapter>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</xref:System.Data.OleDb.OleDbDataAdapter>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/visualbasic/f3cd089b-2d52-49c5-b101-_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/csharp/f3cd089b-2d52-49c5-b101-_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Ciąg znaków będący SQL SELECT instrukcji lub procedury składowanej, który będzie używany przez <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>Właściwość <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> Reprezentujący połączenie."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> z <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*> — klasa"
  remarks: "To przeciążenie metody <xref:System.Data.OleDb.OleDbDataAdapter>Konstruktor korzysta `selectConnectionString` parametr, aby ustawić <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>Właściwości.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter> Połączenie nie są jednak otworzyć. Nadal trzeba jawnie otwierania połączenia.       Podczas tworzenia wystąpienia <xref:System.Data.OleDb.OleDbDataAdapter>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</xref:System.Data.OleDb.OleDbDataAdapter>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_4_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_4_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Ciąg znaków będący SQL SELECT instrukcji lub procedury składowanej, który będzie używany przez <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>Właściwość <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "Parametry połączenia."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Do dodania."
    - id: command
      type: System.Data.IDbCommand
      description: "Do dodania."
    - id: statementType
      type: System.Data.StatementType
      description: "Do dodania."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Do dodania."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Do dodania."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Do dodania."
    - id: command
      type: System.Data.IDbCommand
      description: "Do dodania."
    - id: statementType
      type: System.Data.StatementType
      description: "Do dodania."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Do dodania."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Do dodania."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Pobiera lub ustawia instrukcję SQL lub procedurę składowaną usuwania rekordów z zestawu danych."
  remarks: "Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, gdy ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>elementu DeleteCommand mogą być generowane automatycznie, jeśli <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>Właściwość i użyj <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Następnie dowolne dodatkowe polecenia, które nie zostały ustawione są generowane przez <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Gdy element DeleteCommand jest przypisany do wcześniej utworzonego <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>nie został sklonowany.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> Odwołanie do utworzonego wcześniej przechowuje elementu DeleteCommand <xref:System.Data.OleDb.OleDbCommand>obiektu.</xref:System.Data.OleDb.OleDbCommand>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> Używane podczas <xref:System.Data.Common.DbDataAdapter.Update*>usunąć rekordy w źródle danych, które odpowiadają usuniętych wierszy w <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  id: Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Dodaje lub odświeża wierszy w <xref href=&quot;System.Data.DataTable&quot;> </xref> do odpowiadają ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> lub <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataTable&quot;> </xref> oraz obiektów ADO."
  remarks: "Powiązanie obiektów ADO (ActiveX Data) i ADO.NET jest Operacja jednokierunkowa, w tym można skopiować danych z ADO do <xref:System.Data.DataSet>, ale wszelkie zmiany danych musi być obsługiwane przez ADO.NET.</xref:System.Data.DataSet>       To przeciążenie metody Fill nie zamyka danych wejściowych `Recordset` po zakończeniu operacji Fill.       Podczas przetwarzania wsadowego instrukcji SQL, które zwracają wiele wartości, ta implementacja wypełnienia i <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>dla informacji o schemacie dla pierwszego wyniku pobiera OLE DB.NET Framework dostawcę danych.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Operacja Fill dodaje wiersze do określonej lokalizacji docelowej <xref:System.Data.DataTable>obiektu w <xref:System.Data.DataSet>, tworzenie <xref:System.Data.DataTable>obiektu, jeśli go jeszcze nie istnieje.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> Po utworzeniu <xref:System.Data.DataTable>obiektu, operacja Fill zwykle tworzy tylko metadane nazwy kolumny.</xref:System.Data.DataTable> Jednak jeśli <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>właściwość jest ustawiona na `AddWithKey`, również są tworzone odpowiednie klucze podstawowe i ograniczeń.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       Możesz użyć metody Fill wiele razy w tym samym <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Jeśli klucz podstawowy istnieje, przychodzących wierszy są scalane z pasujących wierszy, które już istnieją. Jeśli klucz podstawowy istnieje, przychodzących wierszy są dołączane do <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Jeśli informacje o kluczu podstawowym jest obecny, wszystkie zduplikowane wiersze są uzgadniane i są wyświetlane tylko jeden raz w <xref:System.Data.DataTable>odpowiadającej <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Informacje o kluczu podstawowym można konfigurować za pośrednictwem <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, określając <xref:System.Data.DataTable.PrimaryKey%2A>Właściwość <xref:System.Data.DataTable>, albo ustawiając <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>właściwości `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Jeśli <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>zwraca wyniki OUTER JOIN `DataAdapter` nie ustawia <xref:System.Data.DataTable.PrimaryKey%2A>wartości wynikowej <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> Zdefiniuj jawnie klucz podstawowy, aby upewnić się, że zduplikowane wiersze są rozpoznawane poprawnie. Aby uzyskać więcej informacji, zobacz [Definiowanie kluczy podstawowych](~/add/includes/ajax-current-ext-md.md).       Do poprawnego działania z .NET Framework Data Provider for OLE DB, `AddWithKey` wymaga uzyskuje wymagane informacje o kluczu podstawowym przez ustawienie właściwości DBPROP_UNIQUEROWS macierzystych dostawców OLE DB i określa, które kolumny będą głównej kolumny klucza, sprawdzając DBCOLUMN_KEYCOLUMN w `IColumnsRowset`. Użytkownik może również jawnie ustawiona ograniczeń klucza podstawowego w każdym <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Dzięki temu, że przychodzące rekordów, które spełniają istniejące rekordy są aktualizowane zamiast dołączane.       Jeśli <xref:System.Data.OleDb.OleDbDataAdapter>napotka zduplikowane kolumny podczas wypełniania <xref:System.Data.DataTable>, generuje nazwy dla kolejnych kolumn, używania wzorca &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot; i tak dalej.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> Pusta kolumna nazw są dodawane do <xref:System.Data.DataTable>, przy użyciu pustego ciągu dla pierwszej kolumny, a następnie &quot;1&quot;, &quot;2&quot;, &quot;3&quot; i tak dalej dla kolejnych puste kolumny.</xref:System.Data.DataTable>       Wartości w ADO `Recordset` lub `Record` obiekty są konwertowane na popularne typy środowiska wykonawczego języka dla magazynu w <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!CAUTION] > Tego przeciążenia metody Fill nie niejawnie wywołuje `Close` obiektu ADO po zakończeniu operacji fill. W związku z tym wywoływanie zawsze `Close` po zakończeniu przy użyciu ADO `Recordset` lub `Record` obiektów. Dzięki temu podstawowego połączenia ze źródłem danych jest opublikowane w odpowiednim czasie i uniemożliwia także programowi naruszenia zasad dostępu możliwe z powodu niezarządzane obiekty ADO zostanie odzyskana przez wyrzucanie elementów bezużytecznych, gdy nadal istnieją odwołania istniejących.       Podczas wywoływania `TableMappings.Add` metoda `DataAdapter` i jawnie mapować parametr tabeli źródłowej na pusty ciąg, zestaw danych jest pomyślnie za pomocą tabeli źródłowej, ale zestaw danych zostanie wypełniona nothing. Na przykład w poniższym przykładzie `rDataSet` zostanie wypełniona nothing.      ```   rAdapter.TableMappings.Add(&quot;source table&quot;, &quot;&quot;);   rAdapter.Fill(rDataSet, &quot;source table&quot;);      ```Ten przykład przedstawia, jak można pominąć wyniku podczas pracy nad wiele wyników.       W poniższym przykładzie użyto <xref:System.Data.OleDb.OleDbDataAdapter>do wypełnienia <xref:System.Data.DataTable>przy użyciu ADO `Recordset`.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> W tym przykładzie przyjęto założenie, że utworzono ADO `Recordset`.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable(&quot;Customers&quot;)        custTable.Columns.Add(&quot;CustomerID&quot;, Type.GetType(&quot;System.String&quot;))        custTable.Columns.Add(&quot;CompanyName&quot;, Type.GetType(&quot;System.String&quot;))        custDS.Tables.Add(custTable)        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable(&quot;Customers&quot;);        custTable.Columns.Add(&quot;CustomerID&quot;, typeof(String));        custTable.Columns.Add(&quot;CompanyName&quot;, typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> umożliwia wypełnienie rekordów i, jeśli jest to wymagane, schematu."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    return:
      type: System.Int32
      description: "Liczba wierszy pomyślnie odświeżane <xref href=&quot;System.Data.DataTable&quot;> </xref>. Nie zawiera wierszy objętych instrukcji, które niezwracanie wierszy."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  id: Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Dodaje lub odświeża wierszy w <xref href=&quot;System.Data.DataSet&quot;> </xref> do odpowiadają ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> lub <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataSet&quot;> </xref>, obiekt ADO i nazwy tabeli źródłowej."
  remarks: "Powiązanie obiektów ADO (ActiveX Data) i ADO.NET jest Operacja jednokierunkowa, w tym można skopiować danych z ADO do <xref:System.Data.DataSet>, ale wszelkie zmiany danych musi być obsługiwane przez ADO.NET.</xref:System.Data.DataSet>       <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>Metody iteruje wiele wyników przez wywołanie metody `NextRecordset` metoda `Recordset`, zamykanie danych wejściowych `Recordset` po zakończeniu <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>operacji.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>Operacji dodaje wiersze do określonej lokalizacji docelowej <xref:System.Data.DataTable>obiektu w <xref:System.Data.DataSet>, tworzenie <xref:System.Data.DataTable>obiektu, jeśli go jeszcze nie istnieje.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> Po utworzeniu <xref:System.Data.DataTable>obiektu <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>operacji zwykle tworzy tylko metadane nazwy kolumny.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.DataTable> Jednak jeśli <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>właściwość jest ustawiona na `AddWithKey`, również są tworzone odpowiednie klucze podstawowe i ograniczeń.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       Jeśli informacje o kluczu podstawowym jest obecny, wszystkie zduplikowane wiersze są uzgadniane i są wyświetlane tylko jeden raz w <xref:System.Data.DataTable>odpowiadającej <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Informacje o kluczu podstawowym można konfigurować za pośrednictwem <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, określając <xref:System.Data.DataTable.PrimaryKey%2A>Właściwość <xref:System.Data.DataTable>, albo ustawiając <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>właściwości `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Do poprawnego działania z .NET Framework Data Provider for OLE DB, `AddWithKey` wymaga macierzystych dostawców OLE DB uzyskać wymagane informacje o kluczu podstawowym przez ustawienie właściwości DBPROP_UNIQUEROWS, a następnie określenie kolumny, które są podstawowej kolumny klucza, sprawdzając DBCOLUMN_KEYCOLUMN w **IColumnsRowset**. Użytkownik może również jawnie ustawiona ograniczeń klucza podstawowego w każdym <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Dzięki temu, że przychodzące rekordów, które spełniają istniejące rekordy są aktualizowane zamiast dołączane.       Jeśli <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>zwraca wyniki OUTER JOIN `DataAdapter` nie ustawia <xref:System.Data.DataTable.PrimaryKey%2A>wartości wynikowej <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> Zdefiniuj jawnie klucz podstawowy, aby upewnić się, że zduplikowane wiersze są rozpoznawane poprawnie. Aby uzyskać więcej informacji, zobacz [Definiowanie kluczy podstawowych](~/add/includes/ajax-current-ext-md.md).       Jeśli `Recordset` jest zamknięty przed rozpoczęciem <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>Operacja, nie zwróciło żadnych wyników błędu.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> Jest to wymagane do obsługi wielu wyników, ponieważ zapytań, które nie zwracają wierszy są wskazane przez zamkniętej `Recordset`. <xref:System.Data.OleDb.OleDbDataAdapter>Po prostu wywołuje `NextRecordset` na zamkniętym `Recordset` , aby kontynuować przetwarzania.</xref:System.Data.OleDb.OleDbDataAdapter>       Jeśli wystąpi błąd podczas wypełniania zestawu danych, dodany przed wystąpieniem błędu wierszy pozostają w <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Pozostałe operacja została przerwana.       Jeśli <xref:System.Data.Common.DbDataAdapter>obiektu wykryje zduplikowane kolumny podczas wypełniania <xref:System.Data.DataTable>, generuje nazwy dla kolejnych kolumn, używania wzorca &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot; i tak dalej.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Jeśli dane przychodzące zawiera kolumny bez nazwy, są umieszczane w <xref:System.Data.DataSet>zgodnie ze wzorcem &quot;Kolumna1&quot;, &quot;Column2&quot; i tak dalej.</xref:System.Data.DataSet> Jeśli wiele zestawów wyników są dodawane do <xref:System.Data.DataSet>Każdy zestaw wyników znajduje się w osobnej tabeli.</xref:System.Data.DataSet> Zestawy wyników dodatkowe są nazywane przez dołączenie wartości całkowitych na wartości do nazwy określonej tabeli (na przykład &quot;Table&quot;, &quot;Table1&quot;, &quot;Tabela2&quot; itd.). Aplikacje używające nazwy kolumn i tabel upewnij się, że nie występują konflikty z tych wzorców nazewnictwa.       Wartości w ADO `Recordset` lub `Record` obiekty są konwertowane na popularne typy środowiska wykonawczego języka dla magazynu w <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!NOTE] > Tego przeciążenia <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>niejawnie wywołuje metodę `Close` obiektu ADO po zakończeniu operacji fill.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       W poniższym przykładzie użyto <xref:System.Data.OleDb.OleDbDataAdapter>do wypełnienia <xref:System.Data.DataSet>przy użyciu ADO `Recordset` czyli ADO `Record` obiektu.</xref:System.Data.DataSet> </xref:System.Data.OleDb.OleDbDataAdapter> W tym przykładzie przyjęto założenie, że utworzono ADO `RecordSet` i `Record` obiektu.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, &quot;Customers&quot;)        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, &quot;Customers&quot;);        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> umożliwia wypełnienie rekordów i, jeśli jest to wymagane, schematu."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    - id: srcTable
      type: System.String
      description: "Tabela źródłowa używany do mapowania tabeli."
    return:
      type: System.Int32
      description: "Liczba wierszy pomyślnie dodane do lub odświeżenia w <xref href=&quot;System.Data.DataSet&quot;> </xref>. Nie zawiera wierszy objętych instrukcji, które niezwracanie wierszy."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Tabela źródłowa jest nieprawidłowa."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Pobiera lub ustawia instrukcję SQL lub procedurę składowaną służy do wstawiania nowych rekordów do źródła danych."
  remarks: "Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, gdy ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>InsertCommand mogą być generowane automatycznie, jeśli <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>Właściwość i użyj <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Następnie dowolne dodatkowe polecenia, które nie zostały ustawione są generowane przez <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Jeśli przypisano metody InsertCommand do wcześniej utworzonego <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>nie został sklonowany.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> Element InsertCommand przechowuje odwołanie do utworzonego wcześniej <xref:System.Data.OleDb.OleDbCommand>obiektu.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze mogą być dodawane do <xref:System.Data.DataSet>w zależności od tego, jak ustawić <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>Właściwość <xref:System.Data.OleDb.OleDbCommand>obiektu.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> Używane podczas <xref:System.Data.Common.DbDataAdapter.Update*>do wstawiania rekordów w źródle danych, które odpowiadają nowych wierszy w <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Do dodania."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Do dodania."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Występuje w ciągu <xref:System.Data.Common.DbDataAdapter.Update*>po wykonaniu polecenia względem źródła danych.</xref:System.Data.Common.DbDataAdapter.Update*> Próba aktualizacji. W związku z tym zdarzeniu."
  remarks: "Jeśli używasz <xref:System.Data.Common.DbDataAdapter.Update%2A>, istnieją dwa zdarzenia występujące w wierszu danych zaktualizowane.</xref:System.Data.Common.DbDataAdapter.Update%2A> Kolejność wykonywania jest następująca: 1.  Wartości w <xref:System.Data.DataRow>zostaną przeniesione do wartości parametrów.</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>Zdarzenie jest wywoływane.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Wykonuje polecenia.      4.  Jeśli polecenie ma ustawioną wartość `FirstReturnedRecord`, pierwszy zwrócony wynik jest umieszczany w <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  W przypadku parametrów wyjściowych są umieszczane w <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>Zdarzenie jest wywoływane.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>jest wywoływana.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and RowUpdated events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.OleDb.OleDbRowUpdatedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Występuje w ciągu <xref:System.Data.Common.DbDataAdapter.Update*>przed wykonaniem polecenia względem źródła danych.</xref:System.Data.Common.DbDataAdapter.Update*> Próba aktualizacji. W związku z tym zdarzeniu."
  remarks: "Jeśli używasz <xref:System.Data.Common.DbDataAdapter.Update%2A>, istnieją dwa zdarzenia występujące w wierszu danych zaktualizowane.</xref:System.Data.Common.DbDataAdapter.Update%2A> Kolejność wykonywania jest następująca: 1.  Wartości w <xref:System.Data.DataRow>zostaną przeniesione do wartości parametrów.</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>Zdarzenie jest wywoływane.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Wykonuje polecenia.      4.  Jeśli polecenie ma ustawioną wartość `FirstReturnedRecord`, pierwszy zwrócony wynik jest umieszczany w <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  W przypadku parametrów wyjściowych są umieszczane w <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>Zdarzenie jest wywoływane.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>jest wywoływana.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the RowUpdating and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.OleDb.OleDbRowUpdatingEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Pobiera lub ustawia instrukcję SQL lub procedurę składowaną, aby wybrać rekordy w źródle danych."
  remarks: "Gdy SelectCommand jest przypisany do wcześniej utworzonego <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>nie został sklonowany.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> Polecenia SelectCommand przechowuje odwołanie do utworzonego wcześniej <xref:System.Data.OleDb.OleDbCommand>obiektu.</xref:System.Data.OleDb.OleDbCommand>       Jeśli polecenia SelectCommand nie zwraca żadnych wierszy, tabele nie są dodawane do <xref:System.Data.DataSet>, i nie jest zgłaszany wyjątek nie.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the SelectCommand and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> Używany podczas <xref:System.Data.Common.DbDataAdapter.Fill*>Aby wybrać rekordy ze źródła danych do umieszczenia w <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.OleDb.OleDbDataAdapter>wystąpienia jest rzutowane na <xref:System.Data.IDbDataAdapter>interfejsu.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> Używane podczas aktualizacji, aby usunąć rekordy w źródle danych dla usuniętych wierszy w zestawie danych."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.OleDb.OleDbDataAdapter>wystąpienia jest rzutowane na <xref:System.Data.IDbDataAdapter>interfejsu.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> Używany podczas aktualizacji do wstawiania rekordów ze źródła danych do umieszczenia w zestawie danych."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.OleDb.OleDbDataAdapter>wystąpienia jest rzutowane na <xref:System.Data.IDbDataAdapter>interfejsu.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> Używany podczas operacji update, aby wybrać rekordy ze źródła danych do umieszczenia w zestawie danych."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.OleDb.OleDbDataAdapter>wystąpienia jest rzutowane na <xref:System.Data.IDbDataAdapter>interfejsu.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> Używane podczas aktualizacji update rekordy w źródle danych na potrzeby zmodyfikowanych wierszy w zestawie danych."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.OleDb.OleDbDataAdapter>wystąpienia jest rzutowane na <xref:System.ICloneable>interfejsu.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowy <xref:System.Object>czyli kopię tego wystąpienia.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Pobiera lub ustawia instrukcję SQL lub procedurę składowaną używane do aktualizowania rekordów w źródle danych."
  remarks: "Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, gdy ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>elementu UpdateCommand mogą być generowane automatycznie, jeśli <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>Właściwość i użyj <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Następnie dowolne dodatkowe polecenia, które nie zostały ustawione są generowane przez <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Gdy UpdateCommand jest przypisany do wcześniej utworzonego <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>nie został sklonowany.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> Odwołanie do utworzonego wcześniej przechowuje elementu UpdateCommand <xref:System.Data.OleDb.OleDbCommand>obiektu.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze może być scalone z <xref:System.Data.DataSet>w zależności od tego, jak ustawić <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>Właściwość <xref:System.Data.OleDb.OleDbCommand>obiektu.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> Używane podczas <xref:System.Data.Common.DbDataAdapter.Update*>do aktualizowania rekordów w źródle danych, które odpowiadają zmodyfikowanych wierszy w <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
- uid: System.Data.OleDb.OleDbRowUpdatedEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatedEventHandler
  nameWithType: OleDbRowUpdatedEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatedEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
- uid: System.Data.OleDb.OleDbRowUpdatingEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatingEventHandler
  nameWithType: OleDbRowUpdatingEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatingEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill
  nameWithType: OleDbDataAdapter.Fill
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OleDbDataAdapter.OnRowUpdated
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OleDbDataAdapter.OnRowUpdating
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
