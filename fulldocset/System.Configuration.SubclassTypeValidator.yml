### YamlMime:ManagedReference
items:
- uid: System.Configuration.SubclassTypeValidator
  id: SubclassTypeValidator
  children:
  - System.Configuration.SubclassTypeValidator.#ctor(System.Type)
  - System.Configuration.SubclassTypeValidator.CanValidate(System.Type)
  - System.Configuration.SubclassTypeValidator.Validate(System.Object)
  langs:
  - csharp
  name: SubclassTypeValidator
  nameWithType: SubclassTypeValidator
  fullName: System.Configuration.SubclassTypeValidator
  type: Class
  summary: "Sprawdza, czy obiekt jest klasa pochodna określonego typu."
  remarks: "Klasa SubclassTypeValidator służy do zapewnienia, że obiekt ma spełnia określone kryteria. Kryteria weryfikacji jest określana podczas tworzenia wystąpienia klasy SubclassTypeValidator.       <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A>Metoda określa, czy typ obiektu, sprawdzana jest w rzeczywistości <xref:System.Type>.</xref:System.Type> </xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> Obiekt sprawdzany został przekazany jako parametr <xref:System.Configuration.SubclassTypeValidator.Validate%2A>metody.</xref:System.Configuration.SubclassTypeValidator.Validate%2A> Ta metoda sprawdza najpierw, nie jest obiektem do zweryfikowania `null`, a następnie sprawdza, czy obiekt jest klasa pochodna oczekiwanego typu."
  syntax:
    content: 'public sealed class SubclassTypeValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SubclassTypeValidator.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Configuration.SubclassTypeValidator
  langs:
  - csharp
  name: SubclassTypeValidator(Type)
  nameWithType: SubclassTypeValidator.SubclassTypeValidator(Type)
  fullName: System.Configuration.SubclassTypeValidator.SubclassTypeValidator(Type)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.SubclassTypeValidator&quot;> </xref> klasy."
  remarks: "Kryteria weryfikacji jest oparta na `baseClass` parametru."
  syntax:
    content: public SubclassTypeValidator (Type baseClass);
    parameters:
    - id: baseClass
      type: System.Type
      description: "Klasa podstawowa na potrzeby sprawdzania poprawności."
  overload: System.Configuration.SubclassTypeValidator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseClass</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.SubclassTypeValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.SubclassTypeValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: SubclassTypeValidator.CanValidate(Type)
  fullName: System.Configuration.SubclassTypeValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Określa, czy obiekt może być weryfikowane na podstawie typu."
  remarks: "Metoda CanValidate Określa, czy typ obiektu, sprawdzana jest w rzeczywistości <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Typ obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> type </code> parametru zgodny typ, który może być zweryfikowany, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SubclassTypeValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SubclassTypeValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.SubclassTypeValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: SubclassTypeValidator.Validate(Object)
  fullName: System.Configuration.SubclassTypeValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Określa, czy wartość obiektu jest nieprawidłowy."
  remarks: "Gdy wystąpienie klasy <xref:System.Configuration.SubclassTypeValidator>utworzyć klasy, klasy podstawowej ma być dostarczana i używać jako kryteriów oceny.</xref:System.Configuration.SubclassTypeValidator> Obiekt do sprawdzania poprawności został przekazany jako parametr metody sprawdzania poprawności. Ta metoda wykonuje sprawdzanie poprawności między klasą bazową i obiektu parameter."
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Wartość obiektu."
  overload: System.Configuration.SubclassTypeValidator.Validate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>nie jest <xref:System.Type> mogą być uzyskane z <code>baseClass</code> zgodnie z definicją w konstruktorze."
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SubclassTypeValidator.#ctor(System.Type)
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: SubclassTypeValidator(Type)
  nameWithType: SubclassTypeValidator.SubclassTypeValidator(Type)
  fullName: System.Configuration.SubclassTypeValidator.SubclassTypeValidator(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.SubclassTypeValidator.CanValidate(System.Type)
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: SubclassTypeValidator.CanValidate(Type)
  fullName: System.Configuration.SubclassTypeValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SubclassTypeValidator.Validate(System.Object)
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: SubclassTypeValidator.Validate(Object)
  fullName: System.Configuration.SubclassTypeValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.SubclassTypeValidator.#ctor*
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: SubclassTypeValidator
  nameWithType: SubclassTypeValidator.SubclassTypeValidator
- uid: System.Configuration.SubclassTypeValidator.CanValidate*
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: CanValidate
  nameWithType: SubclassTypeValidator.CanValidate
- uid: System.Configuration.SubclassTypeValidator.Validate*
  parent: System.Configuration.SubclassTypeValidator
  isExternal: false
  name: Validate
  nameWithType: SubclassTypeValidator.Validate
