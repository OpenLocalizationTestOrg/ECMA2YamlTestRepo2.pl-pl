### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  id: SrgsDocument
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)
  - System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase
  langs:
  - csharp
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  type: Class
  summary: "Definiuje obiekt czasu projektowania, który jest używany do tworzenia gramatyki jednoznacznie środowiska uruchomieniowego, które są zgodne z [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://www.w3.org/TR/speech-grammar/)."
  remarks: "Możesz utworzyć puste wystąpienie SrgsDocument i kompilacji gramatyki przez dodanie wystąpienia klas, które reprezentują SRGS elementów, takich jak <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>,<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>i <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> </xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> </xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Można również utworzyć wystąpienie SrgsDocument z istniejącego pliku gramatyki XML zgodnego ze SRGS, z wystąpienia programu <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, lub z wystąpienia <xref:System.Speech.Recognition.GrammarBuilder>.</xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>       Po utworzeniu obiektu SrgsDocument, może być załadowany do <xref:System.Speech.Recognition.Grammar>obiekt lub opracowane przez <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>, jej odczytanie przez włączenie <xref:System.Speech.Recognition.Grammar>obiektu.</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler> </xref:System.Speech.Recognition.Grammar>       Zobacz [utworzyć SrgsGrammar przy użyciu gramatyki](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) w [systemu mowy Programming Guide dla programu .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043) dodatkowe informacje i przykłady."
  syntax:
    content: public class SrgsDocument
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: SrgsDocument()
  nameWithType: SrgsDocument.SrgsDocument()
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  remarks: "Ten konstruktor tworzy pustą <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>wystąpienia.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Do tworzenia gramatyki w pustą <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>wystąpienia, należy dodać wystąpienia klas, które reprezentują SRGS elementów, takich jak <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>i <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> </xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>"
  example:
  - "The following example creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> object and then creates a public rule named `winnerRule`. It then creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> that consists of the string \"A nation that has won the world cup is:\", and adds this item to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> property of the rule. The example then creates two more rules (`ruleEurope` and `ruleSAmerica`), each of which is an <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object that contains three <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objects. After that, another <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object is created that contains <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> objects that refer to `ruleEurope` and `ruleSAmerica`. The new <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object is then added to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> property of `winnerRule`. After this, all three rules (`winnerRule`, `ruleEurope`, and `ruleSAmerica`) are added to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> property of <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>. Finally, the three rules are compiled into a binary representation of the grammar.  \n  \n```c#  \npublic void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"),   \n    new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"),   \n    new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n  \n  String fileName = Path.GetTempFileName();  \n  using (FileStream stream = new FileStream(fileName, FileMode.Create))   \n  {   \n  \n    // Compile the grammar to a binary format.  \n    SrgsGrammarCompiler.Compile(document, stream);   \n  }  \n}  \n```"
  syntax:
    content: public SrgsDocument ();
    parameters: []
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: SrgsDocument(GrammarBuilder)
  nameWithType: SrgsDocument.SrgsDocument(GrammarBuilder)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasę z <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> obiektu."
  remarks: ''
  example:
  - "The following example builds a grammar in a <xref:System.Speech.Recognition.GrammarBuilder> instance using <xref:System.Speech.Recognition.Choices> objects. It then creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \nGrammarBuilder builder = null;  \n  \n// Create new Choices objects and add countries, and create GrammarBuilder objects.  \nChoices choicesEurope = new Choices(new string[] { \"England\", \"France\", \"Germany\", \"Italy\" });  \nGrammarBuilder europe = new GrammarBuilder(choicesEurope);  \n  \nChoices choicesSAmerica = new Choices(new string[] { \"Argentina\", \"Brazil\", \"Uruguay\" });  \nGrammarBuilder sAmerica = new GrammarBuilder(choicesSAmerica);  \n  \nChoices worldCupWinnerChoices = new Choices(new GrammarBuilder[] {choicesEurope, choicesSAmerica});  \n  \n// Create new GrammarBuilder from a Choices object.  \nbuilder = new GrammarBuilder(worldCupWinnerChoices);  \n  \n// Create an SrgsDocument object from a GrammarBuilder object.  \nSrgsDocument document = new SrgsDocument(builder);  \n```"
  syntax:
    content: public SrgsDocument (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> Obiekt używany do tworzenia <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>builder</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: SrgsDocument(SrgsRule)
  nameWithType: SrgsDocument.SrgsDocument(SrgsRule)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(SrgsRule)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> , określa <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRule&quot;> </xref> była reguły głównego gramatyki."
  remarks: "Ten konstruktor dodaje określonej reguły <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>z <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>obiektu i ustawia go jako <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A>Reguła gramatyki.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>"
  example:
  - "The following example creates two rules (`chooseCities` and `destCities`) for choosing origin and destination cities for a flight. The example initializes the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance using the `chooseCities` rule as an argument. The example writes the contents  of the rules collection and the name of the root rule to the console.  \n  \n```c#  \n// Create a rule that contains a list of destination cities.  \nSrgsRule destCities = new SrgsRule(\"Destination\");  \nSrgsOneOf toCities = new SrgsOneOf(new string[] { \"New York\", \"Seattle\", \"Denver\" });  \ndestCities.Add(toCities);  \n  \n// Create a list of origin cities and supporting phrases.  \nSrgsOneOf fromCities = new SrgsOneOf(new SrgsItem[] {   \n  new SrgsItem(\"Dallas\"), new SrgsItem(\"Miami\"), new SrgsItem(\"Chicago\") });  \nSrgsItem intro = new SrgsItem(\"I want to fly from\");  \nSrgsItem to = new SrgsItem(\"to\");  \n  \n// Create the root rule of the grammar, and assemble the components.  \nSrgsRule chooseCities = new SrgsRule(\"Trip\");  \nchooseCities.Add(intro);  \nchooseCities.Add(fromCities);  \nchooseCities.Add(to);  \nchooseCities.Add(new SrgsRuleRef(destCities));  \n  \n// Create the SrgsDocument and specify the root rule to add.  \nSrgsDocument bookFlight = new SrgsDocument(chooseCities);  \n  \n// Add the rule for the destination cities to the document's rule collection.  \nbookFlight.Rules.Add(new SrgsRule[] { destCities });  \n  \n// Display the contents of the Rules collection and the name of the root rule.  \nforeach (SrgsRule rule in bookFlight.Rules)  \n{  \n  Console.WriteLine(\"Rule \" + rule.Id + \" is in the rules collection\");  \n}  \nConsole.WriteLine(\"Root Rule \" + bookFlight.Root.Id);  \n  \n// Create a Grammar object and load it to the recognizer.  \nGrammar g = new Grammar(bookFlight);  \ng.Name = (\"City Chooser\");  \nrecognizer.LoadGrammarAsync(g);  \n  \n```"
  syntax:
    content: public SrgsDocument (System.Speech.Recognition.SrgsGrammar.SrgsRule grammarRootRule);
    parameters:
    - id: grammarRootRule
      type: System.Speech.Recognition.SrgsGrammar.SrgsRule
      description: "The <xref uid=&quot;langword_csharp_root rule&quot; name=&quot;root rule&quot; href=&quot;&quot;></xref> in the <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref> object."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>grammarRootRule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: SrgsDocument(String)
  nameWithType: SrgsDocument.SrgsDocument(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy określający lokalizację pliku XML dokumentu, który jest używany do wypełnienia <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> from the file named \"srgsDocumentFile.xml\".  \n  \n```c#  \nstring srgsDocumentFile = Path.Combine(Path.GetTempPath(), \"srgsDocumentFile.xml\");  \nSrgsDocument document = null;  \n  \nif (File.Exists(srgsDocumentFile))  \n   document = new SrgsDocument(srgsDocumentFile);  \n```"
  syntax:
    content: public SrgsDocument (string path);
    parameters:
    - id: path
      type: System.String
      description: "Lokalizacja pliku SRGS XML."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>jest pustym ciągiem."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)
  id: '#ctor(System.Xml.XmlReader)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: SrgsDocument(XmlReader)
  nameWithType: SrgsDocument.SrgsDocument(XmlReader)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(XmlReader)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy z wystąpienia <xref:System.Xml.XmlReader>który odwołuje się do pliku gramatyki XML format.</xref:System.Xml.XmlReader>"
  remarks: ''
  example:
  - "The following example creates a new instance of <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> from an instance of <xref:System.Xml.XmlReader> that references the file \"srgsDocumentFile.xml\".  \n  \n```c#  \nstring srgsDocumentFile = Path.Combine(Path.GetTempPath(), \"srgsDocumentFile.xml\");  \nSrgsDocument document = null;  \n  \nif (File.Exists(srgsDocumentFile))  \n{  \n  XmlReader reader = XmlReader.Create(srgsDocumentFile);  \n  document = new SrgsDocument(reader);  \n  reader.Close();  \n}  \n```"
  syntax:
    content: public SrgsDocument (System.Xml.XmlReader srgsGrammar);
    parameters:
    - id: srgsGrammar
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Obiekt, który został utworzony z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienie XML.</xref:System.Xml.XmlReader>"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsGrammar</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences
  id: AssemblyReferences
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: AssemblyReferences
  nameWithType: SrgsDocument.AssemblyReferences
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera zestaw informacje o <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> AssemblyReferences { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "Właściwość właściwości AssemblyReferences zwraca kolekcję ciąg zawierający listę odwołań do zestawów."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind
  id: CodeBehind
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: CodeBehind
  nameWithType: SrgsDocument.CodeBehind
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera informacje związane z kodem o <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> CodeBehind { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "Właściwość plik CodeBehind zwraca kolekcję ciąg zawierający listę dokumentów związane z kodem."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture
  id: Culture
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Culture
  nameWithType: SrgsDocument.Culture
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia informacje o ustawieniach kulturowych dla <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia."
  remarks: "Microsoft Windows i interfejsu API System.Speech zaakceptować wszystkie prawidłowe kody języka kraju. Aby przeprowadzić rozpoznawanie mowy przy użyciu języka określonego we właściwości kultury, aparat rozpoznawania mowy, który obsługuje kod kraju języka muszą zostać zainstalowane. Aparatów rozpoznawania mowy dostarczonych z programem Microsoft Windows 7 skontaktować się z następujących kodów kraju języka.      -en-GB. Angielski (brytyjski) - en US. Angielski (Stany Zjednoczone) - de-DE. Niemiecki (Niemcy) - es-ES. Hiszpański (Hiszpania) - np. Francuski (Francja) - ja-JP. Japoński (Japonia) - zh-CN. Chiński (Chiny) - zh-TW. Chiński (Tajwan) dwuliterowych kodów języków przykład &quot;en&quot;, &quot;fr&quot; lub &quot;es&quot; również jest dozwolone."
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>obiekt zawierający informacje o bieżącej kultury dla <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>.</xref:System.Globalization.CultureInfo>"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość jest przypisywany do kultury jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość jest przypisywany do kultury jest <xref:System.Globalization.CultureInfo.InvariantCulture*>.</xref:System.Globalization.CultureInfo.InvariantCulture*>"
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug
  id: Debug
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Debug
  nameWithType: SrgsDocument.Debug
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia, czy numery wierszy powinny zostać dodane do wbudowanych skryptach."
  syntax:
    content: public bool Debug { get; set; }
    return:
      type: System.Boolean
      description: "Zwraca właściwości debugowania <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli numery wierszy powinny zostać dodane do debugowania; w przeciwnym razie wartość właściwości zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces
  id: ImportNamespaces
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: ImportNamespaces
  nameWithType: SrgsDocument.ImportNamespaces
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera powiązane przestrzeni nazw dla bieżącej <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> ImportNamespaces { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "Właściwość ImportNamespaces zwraca kolekcję ciąg zawierający listę powiązanych przestrzeni nazw w <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language
  id: Language
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Language
  nameWithType: SrgsDocument.Language
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia język programowania używany do kodu wbudowanego w <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  syntax:
    content: public string Language { get; set; }
    return:
      type: System.String
      description: "Właściwość języka zwraca język programowania, do którego <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> nie jest aktualnie ustawione."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode
  id: Mode
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Mode
  nameWithType: SrgsDocument.Mode
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia tryb <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  remarks: "Właściwość Mode zwraca element członkowski <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode>określający typ danych wejściowych, które <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>oczekuje.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode> Dwa możliwe wartości to `Voice` reakcję mowy i `Dtmf` reakcję dźwięków sygnału podwójnego wielu częstotliwość (DTMF), które są zwykle skojarzone z telefonu."
  syntax:
    content: public System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode { get; set; }
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode
      description: "Tryb rozpoznawania <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace
  id: Namespace
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Namespace
  nameWithType: SrgsDocument.Namespace
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia obszar nazw <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "Właściwość Namespace zwraca obszar nazw dla bieżącej <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet
  id: PhoneticAlphabet
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: PhoneticAlphabet
  nameWithType: SrgsDocument.PhoneticAlphabet
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia alfabet fonetyczny z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  remarks: "Alfabetach fonetyczny składają się z telefonów, które składają się z liter, cyfr lub znaków czasami w połączeniu. Każdy telefon opisuje unikatowy dźwięk mowy. Dzięki temu nie trzeba alfabetu łacińskiego, dla którego dowolnej litery może reprezentować wiele dźwięków rozmowy. Należy wziąć pod uwagę różne wymowy litery &quot;c&quot; w wyrazy &quot;candy&quot; i &quot;zaprzestanie&quot; lub inną wymowy kombinacji litery &quot;th&quot; w wyrazy &quot;ID&quot; i &quot;te&quot;.       W System.Speech, można użyć dowolnej z trzech alfabetach fonetyczny do określenia wymowy niestandardowe: alfabetu Phone międzynarodowych (IPA), uniwersalnych ustawić telefonu (UPS) lub SAPI phone zestawu. Określony alfabet fonetyczny Określa, który zestaw telefonu będą używane do definiowania wymowy wbudowanego <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>obiektów.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> Telefony określone w <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>musi odpowiadać alfabet fonetyczny określone w PhoneticAlphabet.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>       Zobacz [leksykonów i małych liter fonetyczny](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) Aby uzyskać więcej informacji."
  syntax:
    content: public System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet { get; set; }
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet
      description: "Zwraca alfabet fonetyczny, który musi być używany do określenia wymowy niestandardowych w <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> obiektu."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root
  id: Root
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Root
  nameWithType: SrgsDocument.Root
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia główna reguła z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  remarks: "<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>Obiekt już musi należeć do dokumentu <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>przed może mieć wartości **główna reguła**.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>       Można również ustawić główna reguła dla <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>obiektu przy użyciu <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>obiektu jako argument <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>konstruktora.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>"
  example:
  - "The following example creates a rule named `winnerRule`, and then creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> object named `document`. The example then calls the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> method to add the rule to the document. Finally, the example sets the document's Root property to `winnerRule`, thereby making it the `root rule` for the grammar defined by the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> object.  \n  \n```c#  \nSrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \nwinnerRule.Scope = SrgsRuleScope.Public;  \n  \nSrgsDocument document = new SrgsDocument();  \n  \ndocument.Rules.Add(winnerRule);  \ndocument.Root = winnerRule;   \n```"
  syntax:
    content: public System.Speech.Recognition.SrgsGrammar.SrgsRule Root { get; set; }
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRule
      description: "Zwraca regułę, która jest oznaczony jako główna reguła z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules
  id: Rules
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Rules
  nameWithType: SrgsDocument.Rules
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera kolekcję reguł, które są obecnie zdefiniowane dla <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  remarks: "Możesz dodać <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>obiekty do <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>przy użyciu <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A>metody we właściwości reguły.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Jeśli inicjowanie <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>obiektu i określić <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>obiekt jako argument <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>jest automatycznie dodawany do <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>dla <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>"
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. The example creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> object, and then creates a public rule named `winnerRule`. After adding a string to the rule `winnerRule`, the example creates two more rules (`ruleEurope` and `ruleSAmerica`), each containing a list of countries. Using the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> method, the example adds all three rules (`winnerRule`, `ruleEurope`, and `ruleSAmerica`) to the Rules property of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>.  \n  \n```c#  \npublic void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"),   \n    new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"),   \n    new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules { get; }
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection
      description: "Zwraca reguły zdefiniowane dla <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> obiektu."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script
  id: Script
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: Script
  nameWithType: SrgsDocument.Script
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia język skryptów .NET dla <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  remarks: >-
    > [!NOTE]

    >  This property has been deprecated. Its use is no longer recommended.
  syntax:
    content: public string Script { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Script&quot; name=&quot;Script&quot; href=&quot;&quot;> </xref> Właściwość zwraca bieżący język skryptów .NET dla <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Podejmowana jest próba można ustawić właściwości skryptu na wartość null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podejmowana jest próba można ustawić właściwości skryptu na pusty ciąg."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)
  id: WriteSrgs(System.Xml.XmlWriter)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: WriteSrgs(XmlWriter)
  nameWithType: SrgsDocument.WriteSrgs(XmlWriter)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(XmlWriter)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Zapisuje zawartość <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> obiekt do pliku gramatyki formatu XML, który odpowiada [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> object, and then creates a public rule named `winnerRule`. It then creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> that consists of the string \"A nation that has won the world cup is:\", and adds this item to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> property of the rule. The example then creates two more rules (`ruleEurope` and `ruleSAmerica`), each of which is an <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object that contains three <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objects. After that, another <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object is created that contains <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> objects that refer to `ruleEurope` and `ruleSAmerica`. The new <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object is then added to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> property of `winnerRule`. After this, all three rules (`winnerRule`, `ruleEurope`, and `ruleSAmerica`) are added to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> property of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>. Finally, the example creates an empty XML file and an instance of <xref:System.Xml.XmlWriter>.  The WriteSrgs method uses the <xref:System.Xml.XmlWriter> instance to write the contents of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> to the XML file.  \n  \n```c#  \npublic void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"),   \n    new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"),   \n    new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n  \n  // Create a string object with the path to the file to use.  \n  string srgsDocumentFile = Path.Combine(Path.GetTempPath(), \"srgsDocumentFile.xml\");  \n  \n  // Create an XmlWriter object and pass the file path.  \n  XmlWriter writer = XmlWriter.Create(srgsDocumentFile);  \n  \n  // Write the contents of the XmlWriter object to an SRGS-compatible XML file.  \n  document.WriteSrgs(writer);  \n  writer.Close();  \n}  \n```"
  syntax:
    content: public void WriteSrgs (System.Xml.XmlWriter srgsGrammar);
    parameters:
    - id: srgsGrammar
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Używany do zapisywania <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> wystąpienia.</xref:System.Xml.XmlWriter>"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsGrammar</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase
  id: XmlBase
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  langs:
  - csharp
  name: XmlBase
  nameWithType: SrgsDocument.XmlBase
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia podstawowy identyfikator URI <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> klasy."
  remarks: 'Właściwość XmlBase pobiera wartość, która jest używana do rozpoznawania względne identyfikatory URI w <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>obiektu.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Załóżmy, że wartość XmlBase jest &quot;http://www.contoso.com/&quot; i <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>zawiera względne reguła odwołanie do innego dokumentu, na przykład `SrgsRuleRef(&quot;ExternalGrammar.grxml&quot;)`.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Spowoduje to utworzenie następującej ścieżki bezwzględnej do zewnętrznego dokumentu: `http://www.contoso.com/ExternalGrammar.grxml`.'
  syntax:
    content: public Uri XmlBase { get; set; }
    return:
      type: System.Uri
      description: "Bieżący podstawowy identyfikator URI <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: SrgsDocument()
  nameWithType: SrgsDocument.SrgsDocument()
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument()
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: SrgsDocument(GrammarBuilder)
  nameWithType: SrgsDocument.SrgsDocument(GrammarBuilder)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: SrgsDocument(SrgsRule)
  nameWithType: SrgsDocument.SrgsDocument(SrgsRule)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(SrgsRule)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsRule
  nameWithType: SrgsRule
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: SrgsDocument(String)
  nameWithType: SrgsDocument.SrgsDocument(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: SrgsDocument(XmlReader)
  nameWithType: SrgsDocument.SrgsDocument(XmlReader)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.SrgsDocument(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: AssemblyReferences
  nameWithType: SrgsDocument.AssemblyReferences
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: CodeBehind
  nameWithType: SrgsDocument.CodeBehind
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Culture
  nameWithType: SrgsDocument.Culture
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Debug
  nameWithType: SrgsDocument.Debug
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: ImportNamespaces
  nameWithType: SrgsDocument.ImportNamespaces
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Language
  nameWithType: SrgsDocument.Language
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Mode
  nameWithType: SrgsDocument.Mode
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode
- uid: System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsGrammarMode
  nameWithType: SrgsGrammarMode
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Namespace
  nameWithType: SrgsDocument.Namespace
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: PhoneticAlphabet
  nameWithType: SrgsDocument.PhoneticAlphabet
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet
- uid: System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsPhoneticAlphabet
  nameWithType: SrgsPhoneticAlphabet
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Root
  nameWithType: SrgsDocument.Root
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Rules
  nameWithType: SrgsDocument.Rules
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsRulesCollection
  nameWithType: SrgsRulesCollection
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Script
  nameWithType: SrgsDocument.Script
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: WriteSrgs(XmlWriter)
  nameWithType: SrgsDocument.WriteSrgs(XmlWriter)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: XmlBase
  nameWithType: SrgsDocument.XmlBase
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument.SrgsDocument
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: AssemblyReferences
  nameWithType: SrgsDocument.AssemblyReferences
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: CodeBehind
  nameWithType: SrgsDocument.CodeBehind
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Culture
  nameWithType: SrgsDocument.Culture
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Debug
  nameWithType: SrgsDocument.Debug
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: ImportNamespaces
  nameWithType: SrgsDocument.ImportNamespaces
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Language
  nameWithType: SrgsDocument.Language
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Mode
  nameWithType: SrgsDocument.Mode
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Namespace
  nameWithType: SrgsDocument.Namespace
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: PhoneticAlphabet
  nameWithType: SrgsDocument.PhoneticAlphabet
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Root
  nameWithType: SrgsDocument.Root
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Rules
  nameWithType: SrgsDocument.Rules
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: Script
  nameWithType: SrgsDocument.Script
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: WriteSrgs
  nameWithType: SrgsDocument.WriteSrgs
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  isExternal: false
  name: XmlBase
  nameWithType: SrgsDocument.XmlBase
