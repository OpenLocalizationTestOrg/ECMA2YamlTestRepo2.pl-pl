### YamlMime:ManagedReference
items:
- uid: System.UriParser
  id: UriParser
  children:
  - System.UriParser.#ctor
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  langs:
  - csharp
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
  type: Class
  summary: "Analizuje nowy schemat identyfikatora URI. To jest klasą abstrakcyjną."
  remarks: "Klasa UriParser umożliwia tworzenie analizatory składni dla nowego schematy identyfikatorów URI. Te analizatory składni może zapisywać w całości lub analizatory składni mogą pochodzić z dobrze znanych schematów (HTTP, FTP i inne systemy oparte na protokołach sieciowych). Jeśli chcesz utworzyć zupełnie nowy analizator dziedziczyć <xref:System.GenericUriParser>.</xref:System.GenericUriParser> Jeśli chcesz utworzyć analizatora, rozszerzający dobrze znanego schemat identyfikatora URI, dziedziczą z <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, lub <xref:System.LdapStyleUriParser>.</xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FileStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.FtpStyleUriParser>       Firma Microsoft zaleca użycie analizatora składni dostarczone z programu .NET Framework. Tworzenie własnych analizator zwiększa stopnia złożoności aplikacji i nie będzie wykonywać oraz dostarczana analizatory składni."
  syntax:
    content: public abstract class UriParser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.UriParser.#ctor
  id: '#ctor'
  parent: System.UriParser
  langs:
  - csharp
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "Tworzy domyślnego analizatora składni identyfikatora URI."
  syntax:
    content: protected UriParser ();
    parameters: []
  overload: System.UriParser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  id: GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  langs:
  - csharp
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Pobiera składniki z identyfikatora URI."
  remarks: "Określ wartość różnych części identyfikatora URI, takich jak przy użyciu metody GetComponents <xref:System.UriComponents>, <xref:System.UriComponents>, lub <xref:System.UriComponents>.</xref:System.UriComponents> </xref:System.UriComponents> </xref:System.UriComponents>       Składniki są zwracane w kolejności ich występowania w identyfikatorze URI. Na przykład jeśli <xref:System.UriComponents>jest określona, zostanie wyświetlony pierwszy.</xref:System.UriComponents>"
  syntax:
    content: protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);
    parameters:
    - id: uri
      type: System.Uri
      description: "Identyfikator URI do przeanalizowania."
    - id: components
      type: System.UriComponents
      description: "<xref:System.UriComponents>Pobrać `uri`.</xref:System.UriComponents>"
    - id: format
      type: System.UriFormat
      description: "Jeden z <xref:System.UriFormat>wartości, które kontroluje sposób specjalne znaki będą miały zmienione znaczenie.</xref:System.UriFormat>"
    return:
      type: System.String
      description: "Ciąg, który zawiera składniki."
  overload: System.UriParser.GetComponents*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>uriFormat</code> is invalid.  \n  \n \\- or -  \n  \n <code>uriComponents</code> is not a combination of valid <xref:System.UriComponents> values."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>uri</code> requires user-driven parsing  \n  \n \\- or -  \n  \n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method."
  platform:
  - net462
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  id: InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Inicjowanie stanu analizatora składni i sprawdzić poprawność identyfikatora URI."
  remarks: "Zawsze ma zostać wywołana metoda InitializeAndValidate <xref:System.Uri>zostanie uruchomiony.</xref:System.Uri>"
  syntax:
    content: protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);
    parameters:
    - id: uri
      type: System.Uri
      description: "T:System.Uri do sprawdzania poprawności."
    - id: parsingError
      type: System.UriFormatException
      description: "Ewentualne błędy sprawdzania poprawności."
  overload: System.UriParser.InitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  id: IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Określa, czy <code> baseUri </code> jest podstawowy identyfikator URI dla <code> relativeUri </code>."
  syntax:
    content: protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI."
    - id: relativeUri
      type: System.Uri
      description: "Identyfikator URI do testowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.UriParser.IsBaseOf*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsKnownScheme(System.String)
  id: IsKnownScheme(System.String)
  parent: System.UriParser
  langs:
  - csharp
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Wskazuje, czy analizator dla schemat jest zarejestrowany."
  syntax:
    content: public static bool IsKnownScheme (string schemeName);
    parameters:
    - id: schemeName
      type: System.String
      description: "Nazwa schematu do sprawdzenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> schemeName </code> został zarejestrowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.UriParser.IsKnownScheme*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> schemeName </code> Parametr ma wartość null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> schemeName </code> Parametr jest nieprawidłowy."
  platform:
  - net462
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  id: IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Wskazuje, czy identyfikator URI jest poprawnie sformułowany."
  remarks: "Metoda IsWellFormedOriginalString zwróci wartość false, jeśli:-ciąg nie jest prawidłowo wpisywany na RFC 2396.      -Ciąg reprezentuje bezwzględnym identyfikatorem URI odwołuje się do pliku niejawne identyfikatora URI.      -Ciąg reprezentuje bezwzględnym identyfikatorem URI brakuje ukośnik przed składnika ścieżki.      -Ciąg zawiera niezmienionym znaczeniu ukośników odwrotnych, nawet wtedy, gdy będą one traktowane jako kreskami ukośnymi."
  syntax:
    content: protected virtual bool IsWellFormedOriginalString (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Identyfikator URI do sprawdzenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> uri </code> jest poprawnie sformułowanym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.UriParser.IsWellFormedOriginalString*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnNewUri
  id: OnNewUri
  parent: System.UriParser
  langs:
  - csharp
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Wywoływane przez <xref:System.Uri>konstruktora, aby pobrać <xref href=&quot;System.UriParser&quot;> </xref> wystąpienia</xref:System.Uri>"
  remarks: "Domyślna implementacja zwraca takie same <xref:System.UriParser>wystąpienia.</xref:System.UriParser> Należy przesłonić tę metodę i zwraca inną <xref:System.UriParser>dla każdego wywołania, gdy pracujesz w środowisku wielowątkowym.</xref:System.UriParser>"
  syntax:
    content: protected virtual UriParser OnNewUri ();
    parameters: []
    return:
      type: System.UriParser
      description: "A <xref href=&quot;System.UriParser&quot;> </xref> dla skonstruowane <xref:System.Uri>.</xref:System.Uri>"
  overload: System.UriParser.OnNewUri*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  id: OnRegister(System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Wywoływane przez platformę, gdy <xref href=&quot;System.UriParser&quot;> </xref> metody jest zarejestrowany."
  syntax:
    content: protected virtual void OnRegister (string schemeName, int defaultPort);
    parameters:
    - id: schemeName
      type: System.String
      description: "Schemat, który jest skojarzony z tym <xref href=&quot;System.UriParser&quot;> </xref>."
    - id: defaultPort
      type: System.Int32
      description: "Numer portu schematu."
  overload: System.UriParser.OnRegister*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  id: Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Kojarzy schemat i numer portu <xref href=&quot;System.UriParser&quot;> </xref>."
  remarks: "Jeśli `defaultPort` ustawiona jest wartość -1, metody Register rejestruje ma wartości domyślnej dla numeru portu."
  syntax:
    content: public static void Register (UriParser uriParser, string schemeName, int defaultPort);
    parameters:
    - id: uriParser
      type: System.UriParser
      description: "Aby zarejestrować analizatora identyfikatorów URI."
    - id: schemeName
      type: System.String
      description: "Nazwa schematu, który jest skojarzony z tym analizatora."
    - id: defaultPort
      type: System.Int32
      description: "Domyślny numer portu dla określonego schematu."
  overload: System.UriParser.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriParser</code> parameter is null  \n  \n \\- or -  \n  \n <code>schemeName</code> parameter is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>schemeName</code> parameter is not valid  \n  \n \\- or -  \n  \n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534."
  platform:
  - net462
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  id: Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Wywoływane przez <xref:System.Uri>konstruktory i &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; rozwiązywać względnym identyfikatorem URI.</xref:System.Uri>"
  remarks: "<xref:System.Uri>Konstruktory i <xref:System.Uri.TryCreate%2A?displayProperty=fullName>Użyj rozwiązanie do utworzenia identyfikatora URI z `baseUri` i `relativeUri`.</xref:System.Uri.TryCreate%2A?displayProperty=fullName></xref:System.Uri>       Analiza kodu błędu, zwracany ciąg dla rozpoznać względnej <xref:System.Uri>ma wartość null.</xref:System.Uri>"
  syntax:
    content: protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI."
    - id: relativeUri
      type: System.Uri
      description: "Względnym identyfikatorem URI."
    - id: parsingError
      type: System.UriFormatException
      description: "Błędy podczas procesu rozwiązanie, jeśli istnieją."
    return:
      type: System.String
      description: "Ciąg rozpoznać względnej <xref:System.Uri>.</xref:System.Uri>"
  overload: System.UriParser.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>baseUri</code> parameter is not an absolute <xref:System.Uri>  \n  \n \\- or -  \n  \n <code>baseUri</code> parameter requires user-driven parsing."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UriParser.#ctor
  parent: System.UriParser
  isExternal: false
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  isExternal: false
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.UriComponents
  parent: System
  isExternal: true
  name: UriComponents
  nameWithType: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: true
  name: UriFormat
  nameWithType: UriFormat
  fullName: System.UriFormat
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
- uid: System.UriFormatException
  parent: System
  isExternal: true
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UriParser.IsKnownScheme(System.String)
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
- uid: System.UriParser.OnNewUri
  parent: System.UriParser
  isExternal: false
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
- uid: System.UriParser
  parent: System
  isExternal: false
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
- uid: System.UriParser.#ctor*
  parent: System.UriParser
  isExternal: false
  name: UriParser
  nameWithType: UriParser.UriParser
- uid: System.UriParser.GetComponents*
  parent: System.UriParser
  isExternal: false
  name: GetComponents
  nameWithType: UriParser.GetComponents
- uid: System.UriParser.InitializeAndValidate*
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate
  nameWithType: UriParser.InitializeAndValidate
- uid: System.UriParser.IsBaseOf*
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf
  nameWithType: UriParser.IsBaseOf
- uid: System.UriParser.IsKnownScheme*
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme
  nameWithType: UriParser.IsKnownScheme
- uid: System.UriParser.IsWellFormedOriginalString*
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString
  nameWithType: UriParser.IsWellFormedOriginalString
- uid: System.UriParser.OnNewUri*
  parent: System.UriParser
  isExternal: false
  name: OnNewUri
  nameWithType: UriParser.OnNewUri
- uid: System.UriParser.OnRegister*
  parent: System.UriParser
  isExternal: false
  name: OnRegister
  nameWithType: UriParser.OnRegister
- uid: System.UriParser.Register*
  parent: System.UriParser
  isExternal: false
  name: Register
  nameWithType: UriParser.Register
- uid: System.UriParser.Resolve*
  parent: System.UriParser
  isExternal: false
  name: Resolve
  nameWithType: UriParser.Resolve
