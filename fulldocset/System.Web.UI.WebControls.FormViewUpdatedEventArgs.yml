### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  id: FormViewUpdatedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  langs:
  - csharp
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdated&quot;> </xref> zdarzeń."
  remarks: "<xref:System.Web.UI.WebControls.FormView>Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdated>zdarzenie, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość &quot;Update&quot;) w formancie zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView>kontroli aktualizacji rekordu.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie wyników operacji aktualizacji, przy każdym wystąpieniu tego zdarzenia.       Obiekt FormViewUpdatedEventArgs jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów oraz wszystkie wyjątki, które mogły wystąpić. Aby określić liczbę rekordów dotyczy operacji aktualizacji, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>Właściwości w celu określenia, czy wystąpiły wyjątki.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> Można również określić, czy wyjątek został obsłużony w metoda obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> Jeśli potrzebujesz dostępu oryginalnej wartości pola klucza zaktualizowany rekord, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Oryginalne wartości pola klucza jest możliwy za pomocą <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> Zaktualizowane wartości (w tym wartości pól kluczy zaktualizowany, jeśli zezwolisz użytkownikom na edytowanie pola klucza) są dostępne przy użyciu <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>       Domyślnie <xref:System.Web.UI.WebControls.FormView>kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>właściwości po wykonaniu operacji aktualizacji.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Podczas obsługi wyjątku, który wystąpił podczas operacji update, można zachować <xref:System.Web.UI.WebControls.FormView>formant w trybie edycji przez ustawienie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>właściwości `true`.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormView>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Aby uzyskać listę początkowe wartości właściwości dla wystąpienia klasy FormViewUpdatedEventArgs, zobacz <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>konstruktora.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewUpdatedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemUpdated> event to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_148_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_148_1.aspx)]"
  syntax:
    content: 'public class FormViewUpdatedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: FormViewUpdatedEventArgs(Int32,Exception)
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.FormViewUpdatedEventArgs&quot;> </xref> klasy."
  remarks: "Ten konstruktor umożliwia inicjuje nowe wystąpienie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>klasy.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>       W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>klasy.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>| Wartość `affectedRows` parametru. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>| Obiekt <xref:System.Exception?displayProperty=fullName>znajdujący się w `e` parametru. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>| Zainicjowane do `false`. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>| Zainicjowane do `false`. |      > [!NOTE] > Ten konstruktor jest używany głównie przez deweloperów kontroli, gdy wywoływanie zdarzeń.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewUpdatedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "Liczba wierszy dotyczy operacji aktualizacji."
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>Reprezentujący wyjątek, kiedy została wykonana operacja aktualizacji.</xref:System.Exception> Jeśli nie wystąpił wyjątek, użyj <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla tego parametru."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera liczbę wierszy dotyczy operacji aktualizacji."
  remarks: "Użyj właściwości AffectedRows, aby określić liczbę rekordów dotyczy operacji aktualizacji. Ta właściwość jest najczęściej używany do Zweryfikuj, że poprawną liczbę rekordów został zaktualizowany w następujących sytuacjach:-Sprawdź, czy tylko jeden rekord został zaktualizowany. Czasami instrukcji update nieprawidłowo napisane można zaktualizować wielu rekordów.      -Sprawdź, czy rekord został zaktualizowany po wystąpieniu błędu podczas operacji aktualizacji, który nie zgłaszał wyjątku.      -Sprawdź, czy rekord został zaktualizowany, gdy formant źródła danych, który obsługuje wykrywanie konfliktów (optymistycznego sprawdzania współbieżności), takich jak <xref:System.Web.UI.WebControls.SqlDataSource>i <xref:System.Web.UI.WebControls.ObjectDataSource>formanty, ma swoją <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>ustawioną właściwość `ConflictOptions.CompareAllValues` wartość wyliczenia.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> W obszarze to ustawienie nie mogły zostać zaktualizowane rekordu, który został zmodyfikowany przez innego użytkownika jednocześnie."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was updated.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1281_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1281_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "Liczba wierszy dotyczy operacji aktualizacji."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wyjątek (jeśli istnieją) który został zgłoszony podczas operacji update."
  remarks: "Użyj właściwości wyjątku do określenia wyjątku (jeśli istnieją) który został zgłoszony podczas operacji update. Jeśli zostały zgłoszone żadne wyjątki, ta właściwość zwraca `null`.      > [!NOTE] > Jeśli zdecydujesz się obsługiwać wyjątek w obsłudze zdarzeń został zgłoszony wyjątek, należy ustawić <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>właściwości `true`; w przeciwnym razie wyjątku ponownie przez <xref:System.Web.UI.WebControls.FormView>kontroli.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_564_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_564_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>Obiekt, który reprezentuje wyjątek zgłoszony podczas operacji update.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy wyjątek został zgłoszony podczas operacji update został obsłużony w zdarzeniu programu obsługi."
  remarks: "Jeśli wyjątek jest wywoływane podczas operacji aktualizacji, użyj właściwości ExceptionHandled wskazująca, czy wyjątek został obsłużony w zdarzeniu programu obsługi. Jeśli ta właściwość jest skonfigurowana `true`, wyjątek jest uznawany za obsługiwany i nie jest generowany ponownie przez <xref:System.Web.UI.WebControls.FormView>kontroli.</xref:System.Web.UI.WebControls.FormView> Jeśli ta właściwość jest ustawiona na `false`, wyjątku ponownie. Aby określić Wystąpił wyjątek, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_345_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_345_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony wyjątek został obsłużony w przypadku obsługi; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  id: KeepInEditMode
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> formant może pozostawać w trybie edycji po wykonaniu operacji aktualizacji."
  remarks: "Domyślnie <xref:System.Web.UI.WebControls.FormView>kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>właściwości po wykonaniu operacji aktualizacji.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Umożliwia określenie właściwości KeepInEditMode czy <xref:System.Web.UI.WebControls.FormView>formant może pozostawać w trybie edycji.</xref:System.Web.UI.WebControls.FormView> Aby zachować <xref:System.Web.UI.WebControls.FormView>sterowania w trybie edycji, ustawić tę właściwość na `true`.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Tej właściwości powinno się używać tylko wtedy, gdy jest to sytuacja występuje (na przykład wyjątków zgłaszanych), który wymaga formantu ma zachowywać się inaczej niż w zwykły sposób. Jeśli <xref:System.Web.UI.WebControls.FormView>kontrolka wymaga pozostać w trybie edycji domyślnie, ustaw <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>Właściwości zamiast.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInEditMode property to keep a <xref:System.Web.UI.WebControls.FormView> control in edit mode when an exception occurs.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1052_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1052_1.aspx)]"
  syntax:
    content: public bool KeepInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pozostać w trybie edycji po wykonaniu operacji aktualizacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera słownik zawierający oryginalnego pary nazwa/wartość pola klucza zaktualizowane rekordu."
  remarks: "Właściwość kluczy zawiera oryginalnych wartości pól kluczy na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>Właściwość <xref:System.Web.UI.WebControls.FormView>kontroli.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Aby uzyskać dostęp do wartości pola klucza dla zaktualizowany rekord, należy użyć właściwości kluczy. Na przykład służy te wartości do przechowywania dziennika zaktualizowanych rekordów.      > [!NOTE] > Zezwolenie użytkownika zaktualizować wartości pól kluczy <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>właściwość zawiera oryginalnej wartości pól kluczy.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Zaktualizowane wartości są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       Zwraca właściwości kluczy <xref:System.Collections.Specialized.OrderedDictionary>obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interfejsu.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>Zawiera obiekt <xref:System.Collections.DictionaryEntry?displayProperty=fullName>obiekty reprezentujące pola zaktualizowany rekord.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>Właściwość <xref:System.Collections.Specialized.OrderedDictionary>obiektu.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Podobnie, mogą korzystać wartości pól za pomocą <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>Właściwości.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary>obiekt, aby uzyskać dostępu do pola wartości bezpośrednio.</xref:System.Collections.Specialized.OrderedDictionary> Formanty, które opierają się na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pól tylko przez indeks.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the Keys property to access the values of the key field for an updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_531_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_531_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> Zawiera słownik oryginalnego pary nazwa/wartość pola klucza zaktualizowane rekordu."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera słownik zawierający nowe pary nazwa/wartość pola rekordu zaktualizowane."
  remarks: "Właściwość NewValues umożliwia dostęp do nowej wartości pól rekordu zaktualizowane. Na przykład służy te wartości do przechowywania dziennika zaktualizowanych rekordów.      > [!NOTE] > Zezwolenie użytkownika zaktualizować wartości pól kluczy <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>właściwość zawiera oryginalnej wartości pól kluczy.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Zaktualizowane wartości są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       Zwraca właściwości NewValues <xref:System.Collections.Specialized.OrderedDictionary>obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interfejsu.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>Zawiera obiekt <xref:System.Collections.DictionaryEntry?displayProperty=fullName>obiekty reprezentujące pola zaktualizowany rekord.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>Właściwość <xref:System.Collections.Specialized.OrderedDictionary>obiektu.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Podobnie, mogą korzystać wartości pól za pomocą <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>Właściwości.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary>obiekt, aby uzyskać dostępu do pola wartości bezpośrednio.</xref:System.Collections.Specialized.OrderedDictionary> Formanty, które opierają się na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pól tylko przez indeks.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the NewValues property to access the new values entered by the user for the non-key fields of the updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_253_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_253_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> Zawiera słownik nowe pary nazwa/wartość pola rekordu zaktualizowane."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera słownik zawierający oryginalnego pary nazwa/wartość pola klucza zaktualizowane rekordu."
  remarks: "Właściwość OldValues umożliwia dostęp do oryginalnych wartości pola klucza zaktualizowane rekordu. Na przykład służy te wartości do przechowywania dziennika zaktualizowanych rekordów. Formant źródła danych, który obsługuje wykrywanie konfliktów (optymistycznego sprawdzania współbieżności), takich jak <xref:System.Web.UI.WebControls.SqlDataSource>i <xref:System.Web.UI.WebControls.ObjectDataSource>formantów z jego <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>ustawioną właściwość `ConflictOptions.CompareAllValues` także porównanie tych oryginalnych wartości przed rekord w bazie danych, przed wykonaniem operacji aktualizacji.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Jeśli rekord został zmodyfikowany przez innego użytkownika współbieżnie, rekord nie jest aktualizowany.      > [!NOTE] > <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>Właściwość nie zawiera pola klucza.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> Jeśli zezwolisz na użytkownika zaktualizować wartości pól kluczy, oryginalnej wartości pól kluczy są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Zaktualizowane wartości są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>Właściwości.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>Zwraca <xref:System.Collections.Specialized.OrderedDictionary>obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interfejsu.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> <xref:System.Collections.Specialized.OrderedDictionary>Zawiera obiekt <xref:System.Collections.DictionaryEntry?displayProperty=fullName>obiekty reprezentujące pola zaktualizowany rekord.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>Właściwość <xref:System.Collections.Specialized.OrderedDictionary>obiektu.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Podobnie, mogą korzystać wartości pól za pomocą <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>Właściwości.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary>obiekt, aby uzyskać dostępu do pola wartości bezpośrednio.</xref:System.Collections.Specialized.OrderedDictionary> Formanty, które opierają się na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pól tylko przez indeks.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the OldValues property to access the original values of the non-key fields for the updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_164_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_164_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> Zawiera słownik oryginalnego pary nazwa/wartość pola rekordu zaktualizowane."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: FormViewUpdatedEventArgs(Int32,Exception)
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
