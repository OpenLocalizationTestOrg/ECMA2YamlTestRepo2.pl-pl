### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection
  id: DsmlSoapConnection
  children:
  - System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor
  - System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession
  - System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession
  - System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId
  - System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader
  langs:
  - csharp
  name: DsmlSoapConnection
  nameWithType: DsmlSoapConnection
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection
  type: Class
  summary: "Klasa DsmlSoapConnection jest klasą abstrakcyjną, która nie można utworzyć wystąpienia. Umożliwia on bezstanowe i stanowe protokołów, które mają być obsługiwane podobnie dzięki takim funkcjom zorientowane na sesji."
  syntax:
    content: 'public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection'
  inheritance:
  - System.Object
  - System.DirectoryServices.Protocols.DirectoryConnection
  implements: []
  inheritedMembers:
  - System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  - System.DirectoryServices.Protocols.DirectoryConnection.Credential
  - System.DirectoryServices.Protocols.DirectoryConnection.Directory
  - System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  - System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  langs:
  - csharp
  name: DsmlSoapConnection()
  nameWithType: DsmlSoapConnection.DsmlSoapConnection()
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.DsmlSoapConnection()
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Konstruktor DsmlSoapConnection inicjuje nowe wystąpienie klasy <xref href=&quot;System.DirectoryServices.Protocols.DsmlSoapConnection&quot;> </xref> klasy."
  syntax:
    content: protected DsmlSoapConnection ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession
  id: BeginSession
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  langs:
  - csharp
  name: BeginSession()
  nameWithType: DsmlSoapConnection.BeginSession()
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession()
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Metoda BeginSession powoduje, że serwer DSML, aby uruchomić nową sesję."
  remarks: "Metoda będzie blokować podczas oczekiwania na odpowiedź z serwera DSML i będzie limitu czasu zgodnie z <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A>Właściwości.</xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A>"
  syntax:
    content: public abstract void BeginSession ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Element zgłaszany, gdy sesja jest już otwarty w połączeniu."
  - type: System.DirectoryServices.Protocols.DsmlInvalidDocumentException
    commentId: T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException
    description: "Element zgłaszany, gdy nie jest poprawnie sformułowany kod XML zwrócony z serwera w odpowiedzi na BeginSession."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Element zgłaszany, gdy występuje błąd komunikacji z serwerem DSML."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession
  id: EndSession
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  langs:
  - csharp
  name: EndSession()
  nameWithType: DsmlSoapConnection.EndSession()
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession()
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Metoda EndSession kończy się sesja z serwerem DSML i czyści <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*>Właściwości.</xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*>"
  remarks: "Metoda będzie blokować podczas oczekiwania na odpowiedź z serwera DSML i będzie limitu czasu zgodnie z <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A>Właściwości.</xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A>       Jeśli serwer DSML kończy sesję, <xref:System.Net.WebException>jest generowany.</xref:System.Net.WebException> Jeśli <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A>jest nadal ważny po wyjątku, żądanie nie jest nigdy osiągany serwera i połączenie nadal jest uznawane za prawidłowe.</xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A>"
  syntax:
    content: public abstract void EndSession ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Element zgłaszany, gdy wystąpi błąd komunikacji z serwerem DSML."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Element zgłaszany, gdy jest nie otwartych sesji."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId
  id: SessionId
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  langs:
  - csharp
  name: SessionId
  nameWithType: DsmlSoapConnection.SessionId
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Właściwości SessionId zawiera identyfikator aktywnej sesji."
  remarks: "Wartość null oznacza brak aktywnej sesji."
  syntax:
    content: public abstract string SessionId { get; }
    return:
      type: System.String
      description: "Identyfikator aktywnej sesji."
  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader
  id: SoapRequestHeader
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  langs:
  - csharp
  name: SoapRequestHeader
  nameWithType: DsmlSoapConnection.SoapRequestHeader
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Właściwość SoapRequestHeader zawiera nagłówek SOAP dołączony do żądania wychodzącego."
  remarks: "Używa interfejsu API <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A>i <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A>śledzić okres istnienia sesji.</xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> </xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A>       **Uwaga** dołączenie nagłówka EndSession do SoapRequestHeader powoduje, że interfejs API niespójność z połączeniem i należy unikać."
  syntax:
    content: public System.Xml.XmlNode SoapRequestHeader { get; set; }
    return:
      type: System.Xml.XmlNode
      description: "Nagłówek protokołu SOAP dołączyć do żądania wychodzącego."
  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader*
  exceptions: []
  platform:
  - net462
references:
- uid: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: System.DirectoryServices.Protocols.DirectoryConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.Protocols.DsmlInvalidDocumentException
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DsmlInvalidDocumentException
  nameWithType: DsmlInvalidDocumentException
  fullName: System.DirectoryServices.Protocols.DsmlInvalidDocumentException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: DsmlSoapConnection()
  nameWithType: DsmlSoapConnection.DsmlSoapConnection()
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.DsmlSoapConnection()
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: BeginSession()
  nameWithType: DsmlSoapConnection.BeginSession()
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession()
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: EndSession()
  nameWithType: DsmlSoapConnection.EndSession()
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession()
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: SessionId
  nameWithType: DsmlSoapConnection.SessionId
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: SoapRequestHeader
  nameWithType: DsmlSoapConnection.SoapRequestHeader
  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor*
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: DsmlSoapConnection
  nameWithType: DsmlSoapConnection.DsmlSoapConnection
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession*
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: BeginSession
  nameWithType: DsmlSoapConnection.BeginSession
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession*
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: EndSession
  nameWithType: DsmlSoapConnection.EndSession
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: SessionId
  nameWithType: DsmlSoapConnection.SessionId
- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader*
  parent: System.DirectoryServices.Protocols.DsmlSoapConnection
  isExternal: false
  name: SoapRequestHeader
  nameWithType: DsmlSoapConnection.SoapRequestHeader
