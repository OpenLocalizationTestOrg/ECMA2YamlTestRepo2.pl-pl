### YamlMime:ManagedReference
items:
- uid: System.TimeZone
  id: TimeZone
  children:
  - System.TimeZone.#ctor
  - System.TimeZone.CurrentTimeZone
  - System.TimeZone.DaylightName
  - System.TimeZone.GetDaylightChanges(System.Int32)
  - System.TimeZone.GetUtcOffset(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  - System.TimeZone.StandardName
  - System.TimeZone.ToLocalTime(System.DateTime)
  - System.TimeZone.ToUniversalTime(System.DateTime)
  langs:
  - csharp
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
  type: Class
  summary: "Reprezentuje strefę czasową."
  remarks: "Strefa czasowa to region geograficzny, w którym jest używana standardowa jednocześnie.      > [!IMPORTANT] > Jeśli to możliwe, należy użyć <xref:System.TimeZoneInfo>klasy zamiast klasy strefy czasowej.</xref:System.TimeZoneInfo>       Można użyć klasy strefy czasowej, aby pobrać informacje o bieżącej strefy czasowej i Konwertowanie godzin od lokalnego czasu uniwersalnego czasu koordynowanego (UTC) lub na odwrót. Jednak nie można użyć klasy strefy czasowej, do reprezentowania stref czasowych niż lokalnej strefy lub do obsługi konwersji daty i godziny między strefami czasowymi do innego. W tym celu należy użyć <xref:System.TimeZoneInfo>klasy.</xref:System.TimeZoneInfo> Ta klasa służy do pobierania informacji o dowolnej strefy czasowej zdefiniowane w systemie lokalnym, do tworzenia niestandardowych stref czasowych i Konwertowanie godzin między strefami czasowymi do innego.       Klasa strefy czasowej obsługuje tylko pojedynczy czasu letniego reguła korekty w lokalnej strefie czasowej. W związku z tym dokładnie klasy strefy czasowej zgłaszać informacji o czasu letniego lub konwersji między czasem UTC a lokalnym tylko dla okresu, w którym najnowsze reguła korekty jest włączona. Z kolei <xref:System.TimeZoneInfo>klasa obsługuje wiele reguł korygowania, co umożliwia do pracy z danych historycznych strefę czasową.</xref:System.TimeZoneInfo>"
  example:
  - "The following example references and displays selected `TimeZone` class elements.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/t-system.timezone_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/t-system.timezone_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/t-system.timezone_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TimeZone
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.TimeZone.#ctor
  id: '#ctor'
  parent: System.TimeZone
  langs:
  - csharp
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.TimeZone&quot;> </xref> klasy."
  syntax:
    content: protected TimeZone ();
    parameters: []
  overload: System.TimeZone.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.CurrentTimeZone
  id: CurrentTimeZone
  parent: System.TimeZone
  langs:
  - csharp
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera strefy czasowej bieżącego komputera."
  remarks: "Właściwość CurrentTimeZone odpowiada <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>"
  example:
  - "The following example references the `CurrentTimeZone` property and displays the names for standard time and daylight saving time for the local time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.curren_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.curren_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.curren_1.cs)]"
  syntax:
    content: public static TimeZone CurrentTimeZone { get; }
    return:
      type: System.TimeZone
      description: "A <xref href=&quot;System.TimeZone&quot;> </xref> obiekt, który reprezentuje bieżącej strefy czasu lokalnego."
  overload: System.TimeZone.CurrentTimeZone*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.DaylightName
  id: DaylightName
  parent: System.TimeZone
  langs:
  - csharp
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera nazwę strefy czasu letniego."
  remarks: "Jeśli czas letni nie jest używany w strefie czasowej, ciąg pusty (&quot;&quot;) jest zwracany.       Właściwość DaylightName odpowiada <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `DaylightName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.daylig_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.daylig_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.daylig_1.cs)]"
  syntax:
    content: public abstract string DaylightName { get; }
    return:
      type: System.String
      description: "Nazwa strefy czasu letniego."
  overload: System.TimeZone.DaylightName*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  id: GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zwraca okres czasu letniego dla danego roku."
  remarks: "Jest obsługiwana tylko jedna okresu czasu letniego.       Jeśli czas letni nie jest używana w bieżącej strefy czasowej, jest zwracana wartość <xref:System.Globalization.DaylightTime>obiektu, gdy wartość <xref:System.Globalization.DaylightTime.Start%2A>i <xref:System.Globalization.DaylightTime.End%2A>jest <xref:System.DateTime.MinValue?displayProperty=fullName>i wartość <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName>jest <xref:System.TimeSpan>ustawiana na 0 taktami.</xref:System.TimeSpan> </xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> </xref:System.DateTime.MinValue?displayProperty=fullName> </xref:System.Globalization.DaylightTime.End%2A> </xref:System.Globalization.DaylightTime.Start%2A> </xref:System.Globalization.DaylightTime>"
  syntax:
    content: public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Rok, którego dotyczy okresu czasu letniego."
    return:
      type: System.Globalization.DaylightTime
      description: "A <xref href=&quot;System.Globalization.DaylightTime&quot;> </xref> obiekt, który zawiera datę początkową i końcową dla czasu letniego w <code> year </code>."
  overload: System.TimeZone.GetDaylightChanges*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest mniejsza niż 1 lub większą niż 9999."
  platform:
  - net462
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  id: GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zwraca przesunięcie uniwersalny czas koordynowany (UTC) dla określonego czasu lokalnego."
  remarks: "Ta metoda zwraca przesunięcie lub różnicę między `time` parametr i uniwersalny czas koordynowany (UTC). To znaczy: `time` = UTC + przesunięcie strefy czasowej będą interpretowane przez metodę `time` na podstawie jego <xref:System.DateTime.Kind%2A>Właściwości.</xref:System.DateTime.Kind%2A> Jeśli wartość <xref:System.DateTime.Kind%2A>jest właściwość <xref:System.DateTimeKind?displayProperty=fullName>lub <xref:System.DateTimeKind?displayProperty=fullName>, metoda zwraca przesunięcie w lokalnej strefie czasowej.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> Jeśli wartość <xref:System.DateTime.Kind%2A>Właściwości jest <xref:System.DateTimeKind?displayProperty=fullName>, metoda zwraca przesunięcie równe <xref:System.TimeSpan.Zero?displayProperty=fullName>.</xref:System.TimeSpan.Zero?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       Jeśli w lokalnej strefie czasowej przestrzega czasu letniego, GetUtcOffset dotyczy bieżącej regule dopasowania do `time` podczas określania przesunięcie w lokalnej strefie czasowej. Oznacza to, przesunięcie zwrócony przez GetUtcOffset odzwierciedla czy `time` znajduje się w strefie czasowej (czas standardowy) lub jego czasu letniego.      > [!NOTE] > GetUtcOffset metody rozpoznaje tylko dla bieżącego czasu letniego korekty reguły w lokalnej strefie czasowej. W związku z tym będzie gwarancji, aby dokładnie zwrócić UTC przesunięcie czasu lokalnego tylko w okresie, w którym najnowsze reguła korekty jest włączona. Jeśli może zwrócić wyniki niedokładne `time` jest historyczny wartość daty i godziny który podlegał poprzedniej reguła korekty.       Metoda GetUtcOffset odpowiada <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>metody.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>metody.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>       Ponieważ wartość daty i godziny reprezentowany przez `time` wartość czasu może zwracać różne wartości przesunięcia podczas uruchamiania na różnych komputerach lub uruchomienia na tym samym komputerze w różnych strefach czasowych i przesunięcie tej wartości od czasu UTC są nie ściśle powiązane, datę lokalnego lub nieokreślona. Jeśli to zachowanie jest niepożądane, użyj <xref:System.DateTimeOffset>wartość zmiennej.</xref:System.DateTimeOffset> <xref:System.DateTimeOffset>— Typ danych ściśle couples wartość daty i godziny z jego przesunięcie od czasu UTC.</xref:System.DateTimeOffset>"
  syntax:
    content: public abstract TimeSpan GetUtcOffset (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Wartość daty i godziny."
    return:
      type: System.TimeSpan
      description: "Przesunięcie uniwersalny czas koordynowany (UTC) z <code> time </code>."
  overload: System.TimeZone.GetUtcOffset*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  id: IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zwraca wartość wskazującą, czy jest określoną datę i godzinę w określonym przedziale czasu."
  remarks: "Rok, którego dotyczy okresu czasu letniego jest pochodną `time` parametru.       Ponieważ <xref:System.TimeZone>klasa obsługuje reguła korekty pojedynczego czasu letniego, metoda IsDaylightSavingTime dotyczy dowolną datę, niezależnie od tego, czy reguła korekty była obowiązująca w tej daty bieżącej regule korekty.</xref:System.TimeZone> Przy założeniu, że system operacyjny zawiera dane dokładne historycznych czasu letniego, lepszych wyników jest dostępna za pomocą <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metody.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metody.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public virtual bool IsDaylightSavingTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Data i godzina."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> time </code> w Uwzględniaj czas okresu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  id: IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zwraca wartość wskazującą, czy w określonym przedziale czasu określonym jest określoną datą i godziną."
  remarks: "<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>Metoda zapewnia te same funkcje co tego przeciążenia metody IsDaylightSavingTime.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metody.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);
    parameters:
    - id: time
      type: System.DateTime
      description: "Data i godzina."
    - id: daylightTimes
      type: System.Globalization.DaylightTime
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>time</code> is in <code>daylightTimes</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>daylightTimes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.TimeZone.StandardName
  id: StandardName
  parent: System.TimeZone
  langs:
  - csharp
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera nazwę strefy (czas standardowy)."
  remarks: "Właściwość StandardName odpowiada <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>Właściwości.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `StandardName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.standa_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.standa_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.standa_1.cs)]"
  syntax:
    content: public abstract string StandardName { get; }
    return:
      type: System.String
      description: "Nazwa strefy (czas standardowy)."
  overload: System.TimeZone.StandardName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Podjęto próbę ustawienia tej właściwości <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  id: ToLocalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zwraca określoną datę i godzinę czasu lokalnego, która odpowiada."
  remarks: "W poniższej tabeli przedstawiono relacje między `time` parametru i <xref:System.DateTime>wartość zwrócona przez tę metodę.</xref:System.DateTime>      | `time` parametr | Zachowanie | Wartość zwracana |   |----------------------|--------------|------------------|   | Czas uniwersalny czas koordynowany (UTC) (<xref:System.DateTimeKind?displayProperty=fullName>). | Konwertuje czas UTC na czas lokalny. | Obiekt <xref:System.DateTime>, którego wartość jest czasu lokalnego, który odpowiada `time`. |   | Czas lokalny (<xref:System.DateTimeKind?displayProperty=fullName>). | Konwersja nie jest konieczne. | Reprezentowane przez tę samą wartość <xref:System.DateTime> `time` parametru. |   | Czas nieokreślony (<xref:System.DateTimeKind?displayProperty=fullName>). | Założono, że czas UTC jest i konwertuje ją od czasu UTC na czas lokalny. | Obiekt <xref:System.DateTime>, którego wartość jest czasu lokalnego, który odpowiada `time`. |       Jeśli w lokalnej strefie czasowej przestrzega czasu letniego, ToLocalTime dotyczy bieżącej regule dopasowania do `time` podczas wykonywania konwersji.</xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName>      > [!NOTE] > ToLocalTime metody rozpoznaje tylko dla bieżącego czasu letniego korekty reguły w lokalnej strefie czasowej. W związku z tym jest gwarantowana dokładnie zwraca czas lokalny odpowiadający określonym czasie UTC tylko w okresie, w którym najnowsze reguła korekty jest włączona. Jeśli może zwrócić wyniki niedokładne `time` jest historyczny wartość daty i godziny który podlegał poprzedniej reguła korekty.       Metoda ToLocalTime odpowiada <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>metody z jego `destinationTimeZone` ustawiona <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> </xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>metody.</xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToLocalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Czas uniwersalny czas koordynowany (UTC)."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>obiektu, którego wartość jest czasu lokalnego, który odpowiada <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToLocalTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  id: ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zwraca uniwersalny czas koordynowany (UTC) odpowiadający określonym czasie."
  remarks: "Jeśli w lokalnej strefie czasowej przestrzega czasu letniego, ToUniversalTime dotyczy bieżącej regule dopasowania do `time` parametru podczas wykonywania konwersji.      > [!NOTE] > ToUniversalTime metody rozpoznaje tylko dla bieżącego czasu letniego korekty reguły w lokalnej strefie czasowej. W związku z tym będzie gwarancji, aby dokładnie zwrócić uniwersalny czas koordynowany (UTC) odpowiadającego danego czasu lokalnego tylko w okresie, w którym najnowsze reguła korekty jest włączona. Jeśli może zwrócić wyniki niedokładne `time` jest historyczny wartość daty i godziny który podlegał poprzedniej reguła korekty.       Jeśli `time` parametr jest niejednoznaczny czas, metoda zakłada, że jej czas standardowy. (Niejednoznaczny czas jest taki, który można zamapować na czas standardowy lub czas letni w lokalnej strefie czasowej). Jeśli `time` jest nieprawidłowa godzina metoda po prostu odejmuje czas lokalny z lokalnej strefy czasowej UTC przesunięcie do zwrócenia UTC. (Nieprawidłowa godzina jest taki, który nie istnieje z powodu stosowania czasu letniego reguł korygowania).       Ponieważ `time` jest interpretowana w odniesieniu do bieżącej strefy czasowej w systemie, datę i godzinę zwracane przez tę metodę mogą się różnić, jeśli aplikacja jest uruchamiana z różnych strefach czasowych na różnych komputerach lub w tym samym komputerze. W przypadkach, w których wartość daty i godziny musi reprezentować pojedynczego, jednoznaczne punkt w czasie, należy użyć <xref:System.DateTimeOffset>wartość reprezentują czas lokalny.</xref:System.DateTimeOffset>       Metoda ToUniversalTime odpowiada <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>przeciążenie metody z <xref:System.DateTime>parametru którego <xref:System.DateTime.Kind%2A>Właściwości nie jest równa <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> </xref:System.DateTime> </xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> Jeśli to możliwe, użyj <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>przeciążenie metody.</xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToUniversalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Data i godzina."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>obiektu, którego wartość jest uniwersalny czas koordynowany (UTC) umożliwiająca <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToUniversalTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.TimeZone.#ctor
  parent: System.TimeZone
  isExternal: false
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
- uid: System.TimeZone.CurrentTimeZone
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
- uid: System.TimeZone
  parent: System
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
- uid: System.TimeZone.DaylightName
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
- uid: System.Globalization.DaylightTime
  parent: System.Globalization
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
- uid: System.TimeZone.StandardName
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
- uid: System.TimeZone.#ctor*
  parent: System.TimeZone
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone.TimeZone
- uid: System.TimeZone.CurrentTimeZone*
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
- uid: System.TimeZone.DaylightName*
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
- uid: System.TimeZone.GetDaylightChanges*
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges
  nameWithType: TimeZone.GetDaylightChanges
- uid: System.TimeZone.GetUtcOffset*
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset
  nameWithType: TimeZone.GetUtcOffset
- uid: System.TimeZone.IsDaylightSavingTime*
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime
  nameWithType: TimeZone.IsDaylightSavingTime
- uid: System.TimeZone.StandardName*
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime
  nameWithType: TimeZone.ToLocalTime
- uid: System.TimeZone.ToUniversalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime
  nameWithType: TimeZone.ToUniversalTime
