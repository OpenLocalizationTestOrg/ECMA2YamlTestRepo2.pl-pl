### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.RemotingServices
  id: RemotingServices
  children:
  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  - System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  - System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  - System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  - System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  - System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  - System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  - System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  - System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  langs:
  - csharp
  name: RemotingServices
  nameWithType: RemotingServices
  fullName: System.Runtime.Remoting.RemotingServices
  type: Class
  summary: "Zapewnia kilka metod przy użyciu i publikowania zdalny obiektów i serwerów proxy. Ta klasa nie może być dziedziczona."
  remarks: "Jeśli jesteś dostawcą usług dotyczących problemów, takich jak aktywacji, zarządzanie okresem istnienia lub transakcji jest konieczne rozróżnienia odwołuje się do serwera proxy i odwołania do obiektów. W zdalnej infrastrukturze używa przezroczysty serwerów proxy, które dają pogląd, że obiektów zdalnych znajdują się w obszarze klienta. Serwery proxy można to osiągnąć poprzez przesłanie wywołania na nich rzeczywistych obiektów w lokalizacjach zdalnych."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class RemotingServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  id: Connect(System.Type,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Connect(Type,String)
  nameWithType: RemotingServices.Connect(Type,String)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Tworzy serwer proxy dla obiekt dobrze znanego <xref:System.Type>i adres URL.</xref:System.Type>"
  remarks: "Obiekt zwrócony proxy wskazuje obsługiwana przez określony obiekt dobrze znanego punktu końcowego. Nie komunikaty są wysyłane za pośrednictwem sieci, dopóki metoda jest wywoływana na serwerze proxy."
  example:
  - "The following code example demonstrates how to use the Connect method to create a proxy to a well-known object.  \n  \n [!code-cpp[RemotingServices.BasicSample#1](~/add/codesnippet/cpp/m-system.runtime.remotin_104_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#1](~/add/codesnippet/csharp/m-system.runtime.remotin_104_1.cs)]\n [!code-vb[RemotingServices.BasicSample#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_104_1.vb)]"
  syntax:
    content: public static object Connect (Type classToProxy, string url);
    parameters:
    - id: classToProxy
      type: System.Type
      description: "<xref:System.Type>Dobrze znanego obiektu po stronie serwera, z którym chcesz się połączyć.</xref:System.Type>"
    - id: url
      type: System.String
      description: "Adres URL serwera klasy."
    return:
      type: System.Object
      description: "Serwer proxy do obiektu zdalnego, która wskazuje punkt końcowy obsługiwana przez określony obiekt dobrze znany."
  overload: System.Runtime.Remoting.RemotingServices.Connect*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  id: Connect(System.Type,System.String,System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Connect(Type,String,Object)
  nameWithType: RemotingServices.Connect(Type,String,Object)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Tworzy serwer proxy dla obiekt dobrze znanego <xref:System.Type>, adres URL i dane specyficzne dla kanału.</xref:System.Type>"
  remarks: "Obiekt zwrócony proxy wskazuje obsługiwana przez określony obiekt dobrze znanego punktu końcowego. Nie komunikaty są wysyłane za pośrednictwem sieci, dopóki metoda jest wywoływana na serwerze proxy.       `data` Obiektu służy do przekazywania informacji do kanału i jest przekazywana do <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName>metody.</xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName>"
  syntax:
    content: public static object Connect (Type classToProxy, string url, object data);
    parameters:
    - id: classToProxy
      type: System.Type
      description: "<xref:System.Type>Dobrze znanego obiektu, z którym chcesz się połączyć.</xref:System.Type>"
    - id: url
      type: System.String
      description: "Adres URL dobrze znanego obiektu."
    - id: data
      type: System.Object
      description: "Kanał określonych danych. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Serwer proxy, który wskazuje punktu końcowego, który jest obsługiwana przez dobrze znanego żądanego obiektu."
  overload: System.Runtime.Remoting.RemotingServices.Connect*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  id: Disconnect(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Disconnect(MarshalByRefObject)
  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zatrzymuje obiektu odbieranie wszelkich dalsze komunikaty za pośrednictwem kanałów zarejestrowanych usług zdalnych."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Disconnect method to disconnect an object from the remoting channels.  \n  \n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/m-system.runtime.remotin_81_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/m-system.runtime.remotin_81_1.cs)]\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_81_1.vb)]"
  syntax:
    content: public static bool Disconnect (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Obiekt, aby rozłączyć kanału."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt został odłączony od zdalnych zarejestrowanych kanałów pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.Disconnect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> obj </code> Parametr jest serwer proxy."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  id: ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Łączy do określonego obiektu zdalnego i wykonuje dostarczonych <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodCallMessage&quot;> </xref> na nim."
  remarks: "Bieżącej metody jest używany do przekazywania określonej metody wywołania do innego, prawdopodobnie zdalnego obiektu w szczególnych przypadkach przez serwer. Ta metoda może być wywołana tylko wtedy, gdy obiekt wywołujący w odpowiedniego kontekstu."
  example:
  - "The following code example demonstrates how to use the ExecuteMessage method to forward method calls to remote objects.  \n  \n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/491f5c62-582d-42d8-b526-_1.cs)]\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/491f5c62-582d-42d8-b526-_1.cpp)]\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/491f5c62-582d-42d8-b526-_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage (MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg);
    parameters:
    - id: target
      type: System.MarshalByRefObject
      description: "Zdalnego obiekt, którego chcesz wywołać metodę."
    - id: reqMsg
      type: System.Runtime.Remoting.Messaging.IMethodCallMessage
      description: "— Metoda komunikat wywołanie do metody określonego obiektu zdalnego."
    return:
      type: System.Runtime.Remoting.Messaging.IMethodReturnMessage
      description: "Odpowiedź metody zdalnego."
  overload: System.Runtime.Remoting.RemotingServices.ExecuteMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Metoda została wywołana w kontekście innym niż w macierzystym kontekście obiektu."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  id: GetEnvoyChainForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetEnvoyChainForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca łańcuch wychwytywanie wysłannika, które powinny być używane podczas wysyłania wiadomości do zdalnego obiektu reprezentowanego przez określony serwer proxy."
  remarks: "Wychwytywanie wysłannika są wychwytywanie wysłane razem z <xref:System.Runtime.Remoting.ObjRef>obiektu, który jest używany podczas zwracania komunikaty do tego obiektu.</xref:System.Runtime.Remoting.ObjRef> Bieżąca metoda zwraca wychwytywanie wysłannika, które są używane podczas komunikacji między serwerem proxy obiektu, a sam obiekt."
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Serwer proxy żądanym wychwytywanie wysłannika obiektu zdalnego są skojarzone z."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "Łańcuch wychwytywanie wysłannika skojarzone z określonym serwerem proxy."
  overload: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  id: GetLifetimeService(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetLifetimeService(MarshalByRefObject)
  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca obiekt usługi okres istnienia, który określa okres istnienia zasad określonego obiektu."
  remarks: "Dla domyślnego okresu istnienia usługa zwrócony obiekt będzie <xref:System.Runtime.Remoting.Lifetime.ILease>.</xref:System.Runtime.Remoting.Lifetime.ILease> typu obiektu Jeśli `obj` parametr jest `null`, metoda zwraca `null`."
  example:
  - "The following code example demonstrates how to use the GetLifetimeService method to get a lifetime lease for the specified object.  \n  \n [!code-cpp[RemotingServices.TimerSample#1](~/add/codesnippet/cpp/a7d2891c-3dad-448c-949c-_1.cpp)]\n [!code-cs[RemotingServices.TimerSample#1](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_1.cs)]\n [!code-vb[RemotingServices.TimerSample#1](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_1.vb)]  \n  \n To compile and run this example, you will need to compile and run a server, timerserver.exe, and compile a shared library, timerservice.dll.  \n  \n The source for timerserver.exe follows:  \n  \n [!code-vb[RemotingServices.TimerSample#2](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_2.vb)]\n [!code-cs[RemotingServices.TimerSample#2](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_2.cs)]  \n  \n The source for timerservice.dll follows:  \n  \n [!code-vb[RemotingServices.TimerSample#3](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_3.vb)]\n [!code-cs[RemotingServices.TimerSample#3](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_3.cs)]"
  syntax:
    content: public static object GetLifetimeService (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Obiekt uzyskać usługę okres istnienia."
    return:
      type: System.Object
      description: "Obiekt, który określa okres istnienia <code> obj </code>."
  overload: System.Runtime.Remoting.RemotingServices.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetMethodBaseFromMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca metodę podstawową z danym <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref>."
  remarks: "Określa podstawowy z metody <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, i <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A>właściwości <xref:System.Runtime.Remoting.Messaging.IMethodMessage>i jest używany przez Implementacja klasy <xref:System.Runtime.Remoting.Messaging.IMethodMessage>interfejsu.</xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A> Kto jest odbiorcą docelowym <xref:System.Runtime.Remoting.Messaging.IMethodMessage>klas powinien odwoływać <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName>Właściwości.</xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Messaging.IMethodMessage>"
  syntax:
    content: public static System.Reflection.MethodBase GetMethodBaseFromMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "Metoda komunikat do wyodrębniania metody podstawowej z."
    return:
      type: System.Reflection.MethodBase
      description: "Base — metoda wyodrębniony z <code> msg </code> parametru."
  overload: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury albo co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do pobierania informacji o typie niepublicznych elementów członkowskich."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjectData(Object,SerializationInfo,StreamingContext)
  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Serializuje określony kierowanie przez obiekt odwołania do dostarczonego <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  syntax:
    content: public static void GetObjectData (object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do zserializowania."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Do którego serializowany jest obiekt."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Źródło i miejsce docelowe serializacji."
  overload: System.Runtime.Remoting.RemotingServices.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> or <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  id: GetObjectUri(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjectUri(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Pobiera identyfikator URI dla określonego obiektu."
  remarks: ''
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/visualbasic/318892c3-7b62-40bd-9e3b-_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/csharp/318892c3-7b62-40bd-9e3b-_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/cpp/318892c3-7b62-40bd-9e3b-_1.cpp)]
  syntax:
    content: public static string GetObjectUri (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "<xref href=&quot;System.MarshalByRefObject&quot;> </xref> Dla jest żądany identyfikator URI."
    return:
      type: System.String
      description: "Identyfikator URI określony obiekt, jeśli istnieje, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli obiekt nie ma jeszcze zorganizować."
  overload: System.Runtime.Remoting.RemotingServices.GetObjectUri*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  id: GetObjRefForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjRefForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> reprezentujący obiektu zdalnego z określonego serwera proxy."
  remarks: "A <xref:System.Runtime.Remoting.ObjRef>jest możliwy do serializacji reprezentację obiekt używany do przesyłania odwołanie do obiektu granicy domeny aplikacji.</xref:System.Runtime.Remoting.ObjRef> Tworzenie <xref:System.Runtime.Remoting.ObjRef>dla obiekt nosi nazwę organizowanie.</xref:System.Runtime.Remoting.ObjRef> <xref:System.Runtime.Remoting.ObjRef>Mogą być transferowane za pośrednictwem kanału do innej domeny aplikacji (prawdopodobnie na inny proces lub komputer).</xref:System.Runtime.Remoting.ObjRef> Raz w innej domenie aplikacji <xref:System.Runtime.Remoting.ObjRef>musi być analizowana do utworzenia serwera proxy dla obiekt zazwyczaj podłączone do rzeczywistego obiektu.</xref:System.Runtime.Remoting.ObjRef> Ta operacja nosi nazwę unmarshaling. Podczas unmarshaling, <xref:System.Runtime.Remoting.ObjRef>jest analizowany w celu wyodrębnienia informacji metody obiektu zdalnego i obu przezroczystego obiektu pośredniczącego i <xref:System.Runtime.Remoting.Proxies.RealProxy>obiekty są tworzone.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef>       A <xref:System.Runtime.Remoting.ObjRef>zawiera informacje opisujące <xref:System.Type>i klasa obiektu są przekazywane, identyfikator URI, który unikatowo identyfikuje wystąpienie określonego obiektu i komunikacja powiązane informacje o możliwości dotarcia aplikacji zdalnej, w którym znajduje się obiekt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>"
  example:
  - "The following code example demonstrates how to get a <xref:System.Runtime.Remoting.ObjRef> instance for the specified object.  \n  \n [!code-cpp[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/cpp/d6ce9a9a-8ec9-4559-9b2d-_1.cpp)]\n [!code-vb[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/visualbasic/d6ce9a9a-8ec9-4559-9b2d-_1.vb)]\n [!code-cs[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/csharp/d6ce9a9a-8ec9-4559-9b2d-_1.cs)]"
  syntax:
    content: public static System.Runtime.Remoting.ObjRef GetObjRefForProxy (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Połączony serwer proxy do obiektu, którego chcesz utworzyć <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> dla."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "A <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> reprezentujący obiektu zdalnego jest połączony określonego serwera proxy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli obiekt lub serwer proxy nie mają zorganizowany."
  overload: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  id: GetRealProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetRealProxy(Object)
  nameWithType: RemotingServices.GetRealProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca rzeczywistego obiektu pośredniczącego, tworzenie kopii określonego przezroczystego obiektu pośredniczącego."
  remarks: "Klient, który używa obiektu na dowolny rodzaj granic komunikacji zdalnej jest rzeczywiście przy użyciu przezroczystego obiektu pośredniczącego dla obiekt. Przezroczystego obiektu pośredniczącego daje wrażenie, że rzeczywistego obiektu znajduje się w obszarze klienta. Go osiąga to poprzez przesłanie wywołania na nim rzeczywistego obiektu przy użyciu infrastruktury komunikacji zdalnej.       Przezroczystego obiektu pośredniczącego nie jest obsługiwana przez wystąpienie klasy zarządzanego środowiska wykonawczego typu <xref:System.Runtime.Remoting.Proxies.RealProxy>.</xref:System.Runtime.Remoting.Proxies.RealProxy> <xref:System.Runtime.Remoting.Proxies.RealProxy>Zaimplementowano część funkcji potrzebnych do przekazywania operacje z przezroczystego obiektu pośredniczącego.</xref:System.Runtime.Remoting.Proxies.RealProxy>       Obiekt serwera proxy dziedziczy semantykę skojarzone obiekty zarządzane, takie jak wyrzucanie elementów bezużytecznych, obsługuje metod i elementów członkowskich i może zostać rozszerzony do formularza nowych klas. Serwer proxy działa jako obiekt tej samej klasy do obiektu zdalnego (przezroczystego obiektu pośredniczącego) i jest również zarządzanego obiektu."
  syntax:
    content: public static System.Runtime.Remoting.Proxies.RealProxy GetRealProxy (object proxy);
    parameters:
    - id: proxy
      type: System.Object
      description: "Przezroczystego obiektu pośredniczącego."
    return:
      type: System.Runtime.Remoting.Proxies.RealProxy
      description: "Wystąpienie rzeczywistego obiektu pośredniczącego kopii przezroczystego obiektu pośredniczącego."
  overload: System.Runtime.Remoting.RemotingServices.GetRealProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  id: GetServerTypeForUri(System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetServerTypeForUri(String)
  nameWithType: RemotingServices.GetServerTypeForUri(String)
  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca <xref:System.Type>obiektu z określonym identyfikatorem URI.</xref:System.Type>"
  remarks: "Ponieważ remoting identyfikuje punktów końcowych przy użyciu identyfikatorów URI, metoda GetServerTypeForUri jest przydatne w przypadku plug w zdalnej infrastrukturze (na przykład wychwytywanie kanału, dynamiczne wychwytywanie i kontekstu wychwytywanie) używające <xref:System.Runtime.Remoting.Messaging.IMessage>obiektów, ponieważ bieżąca metoda zwróci obiekt typu skojarzonego z identyfikatora URI.</xref:System.Runtime.Remoting.Messaging.IMessage>"
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/visualbasic/m-system.runtime.remotin_84_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/csharp/m-system.runtime.remotin_84_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/cpp/m-system.runtime.remotin_84_1.cpp)]
  syntax:
    content: public static Type GetServerTypeForUri (string URI);
    parameters:
    - id: URI
      type: System.String
      description: "Identyfikator URI obiektu, którego <xref:System.Type>zażądano.</xref:System.Type>"
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu z określonym identyfikatorem URI.</xref:System.Type>"
  overload: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury albo co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do pobierania informacji o typie niepublicznych elementów członkowskich."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetSessionIdForMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Pobiera identyfikator sesji dla wiadomości."
  remarks: "Ten sam identyfikator sesji może być zwrócony dla obiektów w tej samej aplikacji, ale ta metoda zwróci nigdy tego samego Identyfikatora sesji dla dwóch obiektów w innych aplikacjach zdalnego.       Aby uzyskać więcej informacji na temat identyfikowania sesji i identyfikatory sesji, zobacz ASP.Net [przegląd stanu sesji ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to get the session ID string for the current session.  \n  \n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/b83444fc-48c3-47e9-b264-_1.cs)]\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/b83444fc-48c3-47e9-b264-_1.cpp)]\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/b83444fc-48c3-47e9-b264-_1.vb)]"
  syntax:
    content: public static string GetSessionIdForMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "<xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref> Dla jest żądany identyfikator sesji."
    return:
      type: System.String
      description: "Ciąg Identyfikatora sesji, który unikatowo identyfikuje bieżącej sesji."
  overload: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsMethodOverloaded(IMethodMessage)
  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca wartość logiczną, wskazującą, czy w podanym komunikatem metody jest przeciążona."
  syntax:
    content: public static bool IsMethodOverloaded (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "Komunikat, który zawiera wywołanie metody zagrożona."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli metoda jest wywoływana <code> msg </code> jest przeciążony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  id: IsObjectOutOfAppDomain(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsObjectOutOfAppDomain(Object)
  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca wartość logiczną, wskazującą, czy obiekt określony przez dany przezroczystego obiektu pośredniczącego znajduje się w domenie aplikacji innej niż obiekt, który wywołał bieżącej metody."
  remarks: "Aby uzyskać informacji o domenach aplikacji, zobacz [domen aplikacji](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)."
  example:
  - >-
    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_103_1.cpp)]
     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_103_1.vb)]
     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_103_1.cs)]
  syntax:
    content: public static bool IsObjectOutOfAppDomain (object tp);
    parameters:
    - id: tp
      type: System.Object
      description: "Obiekt do sprawdzenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt jest poza bieżącej domeny aplikacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  id: IsObjectOutOfContext(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsObjectOutOfContext(Object)
  nameWithType: RemotingServices.IsObjectOutOfContext(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca wartość logiczną, wskazującą, czy obiekt reprezentowany przez dany serwer proxy znajduje się w innym kontekście niż obiekt, który wywołuje bieżącej metody."
  remarks: "Kontekst jest uporządkowana sekwencja właściwości, które definiują środowisko dla obiektów, które znajdują się w nim. Konteksty są tworzone w procesie aktywacji dla obiektów, które są skonfigurowane do żądania niektóre automatyczne usługi takie synchronizacji, transakcje, w czasie aktywacji, zabezpieczeń i tak dalej. Wiele obiektów na żywo można w kontekście."
  example:
  - >-
    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_37_1.cpp)]
     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_37_1.vb)]
     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_37_1.cs)]
  syntax:
    content: public static bool IsObjectOutOfContext (object tp);
    parameters:
    - id: tp
      type: System.Object
      description: "Obiekt do sprawdzenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt jest poza bieżącym kontekście; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  id: IsOneWay(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsOneWay(MethodBase)
  nameWithType: RemotingServices.IsOneWay(MethodBase)
  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca wartość logiczną, wskazującą, czy klient, który wywołał metodę określone w tego komunikatu oczekuje na zakończenie przetwarzania metody przed kontynuowaniem wykonywania serwera."
  remarks: "Po wywołaniu metody jednokierunkowe klienta nie oczekuje na zakończenie przetwarzania komunikatu serwera. Zwraca metodę klienta stosowanie nie wie, czy serwer pomyślnie przetworzy komunikat. Metody są oznaczone jako jeden ze sposobów przy użyciu <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>.</xref:System.Runtime.Remoting.Messaging.OneWayAttribute>       Metody jednokierunkowe nie mogą mieć wartości zwracanej ani żadnych parametrów wyjściowych."
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/visualbasic/e9c4a9fc-d92a-4e43-97a5-_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/csharp/e9c4a9fc-d92a-4e43-97a5-_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/cpp/e9c4a9fc-d92a-4e43-97a5-_1.cpp)]
  syntax:
    content: public static bool IsOneWay (System.Reflection.MethodBase method);
    parameters:
    - id: method
      type: System.Reflection.MethodBase
      description: "Metoda zagrożona."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli metoda jest jednokierunkowa; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsOneWay*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  id: IsTransparentProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsTransparentProxy(Object)
  nameWithType: RemotingServices.IsTransparentProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Zwraca wartość logiczną, wskazującą, czy dany obiekt jest przezroczystego obiektu pośredniczącego lub rzeczywistego obiektu."
  remarks: "Klient, który używa obiektu na dowolny rodzaj granic komunikacji zdalnej jest rzeczywiście przy użyciu przezroczystego obiektu pośredniczącego dla obiekt. Przezroczystego obiektu pośredniczącego daje wrażenie, że rzeczywistego obiektu znajduje się w obszarze klienta. Go osiąga to poprzez przesłanie wywołania na nim rzeczywistego obiektu przy użyciu infrastruktury komunikacji zdalnej.       Przezroczystego obiektu pośredniczącego jest przechowywanych przez wystąpienie klasy zarządzanego środowiska wykonawczego typu <xref:System.Runtime.Remoting.Proxies.RealProxy>.</xref:System.Runtime.Remoting.Proxies.RealProxy> <xref:System.Runtime.Remoting.Proxies.RealProxy>Zaimplementowano część funkcji potrzebnych do przekazywania operacje z przezroczystego obiektu pośredniczącego.</xref:System.Runtime.Remoting.Proxies.RealProxy> Obiekt serwera proxy dziedziczy semantykę skojarzone obiekty zarządzane, takie jak wyrzucanie elementów bezużytecznych, obsługuje metod i elementów członkowskich i może zostać rozszerzony do formularza nowych klas. W związku z tym serwer proxy ma charakter podwójną; z jednej strony wymaga do działania jako obiekt o tej samej klasy do obiektu zdalnego (przezroczystego obiektu pośredniczącego), a w drugim jest samego obiektu zarządzanego.       Obiekt serwera proxy można niezależnie jakiekolwiek podziały komunikacji zdalnej w ramach <xref:System.AppDomain>.</xref:System.AppDomain> Aplikacje muszą rozróżnia odwołuje się do serwera proxy i odwołania do obiektów. Jednak usługodawców dotyczących problemów, takich jak aktywacja Zarządzanie okresem istnienia i transakcji konieczne dokonanie takiego rozróżnienia."
  example:
  - "The following code example demonstrates the use of the IsTransparentProxy method to determine whether an object is a proxy or a real object. For the complete example code, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.  \n  \n [!code-cpp[AsyncResult.NewExamples#6](~/add/codesnippet/cpp/m-system.runtime.remotin_47_1.cpp)]\n [!code-vb[AsyncResult.NewExamples#6](~/add/codesnippet/visualbasic/m-system.runtime.remotin_47_1.vb)]\n [!code-cs[AsyncResult.NewExamples#6](~/add/codesnippet/csharp/m-system.runtime.remotin_47_1.cs)]"
  syntax:
    content: public static bool IsTransparentProxy (object proxy);
    parameters:
    - id: proxy
      type: System.Object
      description: "Odwołanie do obiektu do sprawdzenia."
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy obiekt określony w <code> proxy </code> parametru czy przezroczystego obiektu pośredniczącego rzeczywistego obiektu."
  overload: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  id: LogRemotingStage(System.Int32)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: LogRemotingStage(Int32)
  nameWithType: RemotingServices.LogRemotingStage(Int32)
  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Rejestruje etap w zdalnych w programie exchange zewnętrznego debugera."
  remarks: "A `&quot;REMOTING_PERF&quot;` przetwarzania wstępnego symbol jest stosowana do metody przy użyciu <xref:System.Diagnostics.ConditionalAttribute>atrybutu.</xref:System.Diagnostics.ConditionalAttribute>"
  syntax:
    content: public static void LogRemotingStage (int stage);
    parameters:
    - id: stage
      type: System.Int32
      description: "Wewnętrznie zdefiniowaną stałą, identyfikujący etapem exchange komunikacji zdalnej."
  overload: System.Runtime.Remoting.RemotingServices.LogRemotingStage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  id: Marshal(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Przyjmuje <xref href=&quot;System.MarshalByRefObject&quot;> </xref>, rejestruje go w zdalnej infrastrukturze i konwertuje ją na wystąpienie <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasy."
  remarks: "A <xref:System.Runtime.Remoting.ObjRef>jest możliwy do serializacji reprezentację obiekt używany do przesyłania odwołanie do obiektu granicy domeny aplikacji.</xref:System.Runtime.Remoting.ObjRef> Tworzenie <xref:System.Runtime.Remoting.ObjRef>dla obiekt nosi nazwę organizowanie.</xref:System.Runtime.Remoting.ObjRef> <xref:System.Runtime.Remoting.ObjRef>Mogą być transferowane za pośrednictwem kanału do innej domeny aplikacji (prawdopodobnie na inny proces lub komputer).</xref:System.Runtime.Remoting.ObjRef> Raz w innej domenie aplikacji <xref:System.Runtime.Remoting.ObjRef>musi być analizowana do utworzenia serwera proxy dla obiekt zazwyczaj podłączone do rzeczywistego obiektu.</xref:System.Runtime.Remoting.ObjRef> Ta operacja nosi nazwę unmarshaling.       A <xref:System.Runtime.Remoting.ObjRef>zawiera informacje opisujące <xref:System.Type>i klasa obiektu są przekazywane, identyfikator URI, który unikatowo identyfikuje wystąpienie określonego obiektu i komunikacja powiązane informacje o możliwości dotarcia części usług zdalnych, w którym znajduje się obiekt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Podczas przekazywania międzyprocesowego, kontekst z bieżącym wątku jest używany, nie kontekst który był aktywny podczas tworzenia obiektu. Jeśli identyfikator URI nie została jawnie ustawiona przez <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A>metody, jest ona generowana automatycznie przez infrastrukturę tożsamości usług zdalnych.</xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A>       Nie można skojarzyć identyfikatora URI z serwera proxy dla jednej z dwóch powodów: identyfikator URI został wygenerowany po stronie serwera dla obiekt reprezentuje albo obiekt jest dobrze znany, w którym to przypadku jest znany identyfikator URI. Dlatego jeśli `Obj` parametr jest serwer proxy, zostanie wygenerowany wyjątek. Dla niestandardowych proxy to ograniczenie jest rozluźnić, ponieważ przezroczystego obiektu pośredniczącego jest traktowane jako obiektu serwera."
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Obiekt do konwersji."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Wystąpienie <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasa, która reprezentuje obiekt określony w <code> Obj </code> parametru."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code> Obj </code> Parametr jest obiekt serwera proxy."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  id: Marshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Konwertuje dany <xref href=&quot;System.MarshalByRefObject&quot;> </xref> w wystąpienie klasy <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasy z określonym identyfikatorem URI."
  remarks: "A <xref:System.Runtime.Remoting.ObjRef>jest możliwy do serializacji reprezentację obiekt używany do przesyłania odwołanie do obiektu granicy domeny aplikacji.</xref:System.Runtime.Remoting.ObjRef> Tworzenie <xref:System.Runtime.Remoting.ObjRef>dla obiekt nosi nazwę organizowanie.</xref:System.Runtime.Remoting.ObjRef> <xref:System.Runtime.Remoting.ObjRef>Mogą być transferowane za pośrednictwem kanału do innej domeny aplikacji (prawdopodobnie na inny proces lub komputer).</xref:System.Runtime.Remoting.ObjRef> Raz w innej domenie aplikacji <xref:System.Runtime.Remoting.ObjRef>musi być analizowana do utworzenia serwera proxy dla obiekt zazwyczaj podłączone do rzeczywistego obiektu.</xref:System.Runtime.Remoting.ObjRef> Ta operacja nosi nazwę unmarshaling.       A <xref:System.Runtime.Remoting.ObjRef>zawiera informacje opisujące <xref:System.Type>i klasa obiektu są przekazywane, identyfikator URI, który unikatowo identyfikuje wystąpienie określonego obiektu i komunikacja powiązane informacje o możliwości dotarcia części usług zdalnych, w którym znajduje się obiekt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Podczas przekazywania międzyprocesowego, kontekst z bieżącym wątku jest używany, nie kontekst który był aktywny podczas tworzenia obiektu.       Nie można skojarzyć identyfikatora URI z serwera proxy dla jednej z dwóch powodów: identyfikator URI został wygenerowany po stronie serwera dla obiekt reprezentuje albo obiekt jest dobrze znany, w którym to przypadku jest znany identyfikator URI. Dlatego jeśli `Obj` parametr jest serwer proxy, zostanie wygenerowany wyjątek. Dla niestandardowych proxy to ograniczenie jest rozluźnić, ponieważ przezroczystego obiektu pośredniczącego jest traktowane jako obiektu serwera."
  example:
  - "The following code example demonstrates how to use the current <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method to marshal a specified object.  \n  \n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/01236a8e-f8c3-4b7b-875d-_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/01236a8e-f8c3-4b7b-875d-_1.cs)]\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/01236a8e-f8c3-4b7b-875d-_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string URI);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Obiekt do konwersji."
    - id: URI
      type: System.String
      description: "Określony identyfikator URI, z którą ma zostać zainicjować nowe <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Wystąpienie <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasa, która reprezentuje obiekt określony w <code> Obj </code> parametru."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>Obj</code>jest serwer proxy obiektu i <code>URI</code> parametr nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  id: Marshal(System.MarshalByRefObject,System.String,System.Type)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject,String,Type)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Przyjmuje <xref href=&quot;System.MarshalByRefObject&quot;> </xref> i konwertuje ją na wystąpienie <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasy z określonym identyfikatorem URI, a podana <xref:System.Type>.</xref:System.Type>"
  remarks: "A <xref:System.Runtime.Remoting.ObjRef>jest możliwy do serializacji reprezentację obiekt używany do przesyłania odwołanie do obiektu granicy domeny aplikacji.</xref:System.Runtime.Remoting.ObjRef> Tworzenie <xref:System.Runtime.Remoting.ObjRef>dla obiekt nosi nazwę organizowanie.</xref:System.Runtime.Remoting.ObjRef> <xref:System.Runtime.Remoting.ObjRef>Mogą być transferowane za pośrednictwem kanału do innej domeny aplikacji (prawdopodobnie na inny proces lub komputer).</xref:System.Runtime.Remoting.ObjRef> Raz w innej domenie aplikacji <xref:System.Runtime.Remoting.ObjRef>musi być analizowana do utworzenia serwera proxy dla obiekt zazwyczaj podłączone do rzeczywistego obiektu.</xref:System.Runtime.Remoting.ObjRef> Ta operacja nosi nazwę unmarshaling.       A <xref:System.Runtime.Remoting.ObjRef>zawiera informacje opisujące <xref:System.Type>i klasa obiektu są przekazywane, identyfikator URI, który unikatowo identyfikuje wystąpienie określonego obiektu i komunikacja powiązane informacje o możliwości dotarcia części usług zdalnych, w którym znajduje się obiekt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Określony <xref:System.Type>jest używany przez w zdalnej infrastrukturze, aby ograniczyć zakres hierarchii typów uwidocznione.</xref:System.Type> Na przykład jeśli obiekt A pochodzi z obiektu B, który pochodzi z obiektu C, a <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>jest wywoływana, klienta można rzutować proxy między C i B, ale nie do serwera A.       Podczas przekazywania międzyprocesowego, kontekst z bieżącym wątku jest używany, nie kontekst który był aktywny podczas tworzenia obiektu.</xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>       Nie można skojarzyć identyfikatora URI z serwera proxy dla jednej z dwóch powodów: identyfikator URI został wygenerowany po stronie serwera dla obiekt reprezentuje albo obiekt jest dobrze znany, w którym to przypadku jest znany identyfikator URI. Dlatego jeśli `Obj` parametr jest serwer proxy, zostanie wygenerowany wyjątek. Dla niestandardowych proxy to ograniczenie jest rozluźnić, ponieważ przezroczystego obiektu pośredniczącego jest traktowane jako obiektu serwera."
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string ObjURI, Type RequestedType);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Obiekt do przekonwertowania na <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>."
    - id: ObjURI
      type: System.String
      description: "Obiekt określony w identyfikatorze URI `Obj` parametru jest przekazywane z. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: RequestedType
      type: System.Type
      description: "<xref:System.Type> `Obj` Jest przekazywane jako.</xref:System.Type> Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Wystąpienie <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasa, która reprezentuje obiekt określony w <code> Obj </code> parametru."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>Obj</code>Serwer proxy obiektu zdalnego i <code>ObjUri</code> parametr nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  id: SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: SetObjectUriForMarshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Ustawia identyfikator URI dla kolejne wywołania <xref:System.Runtime.Remoting.RemotingServices.Marshal*>metody.</xref:System.Runtime.Remoting.RemotingServices.Marshal*>"
  remarks: "The URI set by the current method is used when marshaling the given object.  \n  \n After marshaling, the URI of the specified object is set to the string in the `uri` parameter appended onto the <xref:System.Guid> of the current <xref:System.AppDomain>.  \n  \n If the current application is listening on an HTTP port, then both the string specified in the `uri` parameter and the `uri` string appended onto the <xref:System.Guid> of the current <xref:System.AppDomain> route to the specified object. For example, if the application is listening on HTTP port 9000, then both http://localhost:9000/objectUri, and http://localhost:9000/\\<appdomainguid>/objectUri route to the object specified in the `obj` parameter."
  example:
  - "The following code example demonstrates how to set the URI that will be used by the <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method when marshaling the specified object.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/2ed6d271-806d-4778-95aa-_1.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/2ed6d271-806d-4778-95aa-_1.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/2ed6d271-806d-4778-95aa-_1.vb)]"
  syntax:
    content: public static void SetObjectUriForMarshal (MarshalByRefObject obj, string uri);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Można ustawić identyfikator URI dla obiekt."
    - id: uri
      type: System.String
      description: "Identyfikator URI, można przypisać do określonego obiektu."
  overload: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>obj</code>jest lokalny obiekt, został już zorganizowany lub bieżącej metody została już wywołana dla."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  id: Unmarshal(System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Unmarshal(ObjRef)
  nameWithType: RemotingServices.Unmarshal(ObjRef)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Przyjmuje <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> i tworzy obiekt serwera proxy od niego."
  remarks: "A <xref:System.Runtime.Remoting.ObjRef>jest możliwy do serializacji reprezentację obiekt używany do przesyłania odwołanie do obiektu granicy domeny aplikacji.</xref:System.Runtime.Remoting.ObjRef> Tworzenie <xref:System.Runtime.Remoting.ObjRef>dla obiekt nosi nazwę organizowanie.</xref:System.Runtime.Remoting.ObjRef> <xref:System.Runtime.Remoting.ObjRef>Mogą być transferowane za pośrednictwem kanału do innej domeny aplikacji (prawdopodobnie na inny proces lub komputer).</xref:System.Runtime.Remoting.ObjRef> Raz w innej domenie aplikacji <xref:System.Runtime.Remoting.ObjRef>musi być analizowana do utworzenia serwera proxy dla obiekt zazwyczaj podłączone do rzeczywistego obiektu.</xref:System.Runtime.Remoting.ObjRef> Ta operacja nosi nazwę unmarshaling. Podczas unmarshaling, <xref:System.Runtime.Remoting.ObjRef>jest analizowany w celu wyodrębnienia informacji metody obiektu zdalnego i obu przezroczystego obiektu pośredniczącego i <xref:System.Runtime.Remoting.Proxies.RealProxy>obiekty są tworzone.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef> Zawartość przeanalizowany <xref:System.Runtime.Remoting.ObjRef>dodaniu przezroczystego obiektu pośredniczącego przed przezroczystego obiektu pośredniczącego został zarejestrowany za pomocą środowiska CLR.</xref:System.Runtime.Remoting.ObjRef>       A <xref:System.Runtime.Remoting.ObjRef>zawiera informacje opisujące <xref:System.Type>i klasa obiektu są przekazywane, identyfikator URI, który unikatowo identyfikuje wystąpienie określonego obiektu i komunikacja powiązane informacje o możliwości dotarcia części usług zdalnych, w którym znajduje się obiekt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>"
  example:
  - "The following code example demonstrates how to unmarshal an object.  \n  \n [!code-vb[RemotingServices.Unmarshal#2](~/add/codesnippet/visualbasic/b4be8871-533a-4641-8763-_1.vb)]\n [!code-cpp[RemotingServices.Unmarshal#2](~/add/codesnippet/cpp/b4be8871-533a-4641-8763-_1.cpp)]\n [!code-cs[RemotingServices.Unmarshal#2](~/add/codesnippet/csharp/b4be8871-533a-4641-8763-_1.cs)]"
  syntax:
    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef);
    parameters:
    - id: objectRef
      type: System.Runtime.Remoting.ObjRef
      description: "<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> Reprezentujący obiektu zdalnego, dla której utworzona jest serwer proxy."
    return:
      type: System.Object
      description: "Serwer proxy do obiektu który danego <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> reprezentuje."
  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> Określonym w wystąpieniu <code> objectRef </code> parametru nie jest poprawnie sformułowany."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  id: Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Unmarshal(ObjRef,Boolean)
  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Przyjmuje <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> i tworzy obiekt serwera proxy poza, uściślenie jej typ na serwerze."
  remarks: "A <xref:System.Runtime.Remoting.ObjRef>jest możliwy do serializacji reprezentację obiekt używany do przesyłania odwołanie do obiektu granicy domeny aplikacji.</xref:System.Runtime.Remoting.ObjRef> Tworzenie <xref:System.Runtime.Remoting.ObjRef>dla obiekt nosi nazwę organizowanie.</xref:System.Runtime.Remoting.ObjRef> <xref:System.Runtime.Remoting.ObjRef>Mogą być transferowane za pośrednictwem kanału do innej domeny aplikacji (prawdopodobnie na inny proces lub komputer).</xref:System.Runtime.Remoting.ObjRef> Raz w innej domenie aplikacji <xref:System.Runtime.Remoting.ObjRef>musi być analizowana do utworzenia serwera proxy dla obiekt zazwyczaj podłączone do rzeczywistego obiektu.</xref:System.Runtime.Remoting.ObjRef> Ta operacja nosi nazwę unmarshaling. Podczas unmarshaling, <xref:System.Runtime.Remoting.ObjRef>jest analizowany w celu wyodrębnienia informacji metody obiektu zdalnego i obu przezroczystego obiektu pośredniczącego i <xref:System.Runtime.Remoting.Proxies.RealProxy>obiekty są tworzone.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef> Zawartość przeanalizowany <xref:System.Runtime.Remoting.ObjRef>dodaniu przezroczystego obiektu pośredniczącego przed przezroczystego obiektu pośredniczącego został zarejestrowany za pomocą środowiska CLR.</xref:System.Runtime.Remoting.ObjRef>       A <xref:System.Runtime.Remoting.ObjRef>zawiera informacje opisujące <xref:System.Type>i klasa obiektu są przekazywane, identyfikator URI, który unikatowo identyfikuje wystąpienie określonego obiektu i komunikacja powiązane informacje o możliwości dotarcia części usług zdalnych, w którym znajduje się obiekt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Po pierwszym utworzeniu serwera proxy jest typu <xref:System.MarshalByRefObject>.</xref:System.MarshalByRefObject> Jak rzutować go do różnych typów w zdalnej infrastrukturze przechowuje informacje o najczęściej używanych typu, aby uniknąć obciążania typ niepotrzebnie."
  syntax:
    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef, bool fRefine);
    parameters:
    - id: objectRef
      type: System.Runtime.Remoting.ObjRef
      description: "<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> Reprezentujący obiektu zdalnego, dla której utworzona jest serwer proxy."
    - id: fRefine
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uściślić serwera proxy do typu na serwerze; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Serwer proxy do obiektu który danego <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> reprezentuje."
  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> Określonym w wystąpieniu <code> objectRef </code> parametru nie jest poprawnie sformułowany."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect(Type,String)
  nameWithType: RemotingServices.Connect(Type,String)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect(Type,String,Object)
  nameWithType: RemotingServices.Connect(Type,String,Object)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)
- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Disconnect(MarshalByRefObject)
  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
- uid: System.Runtime.Remoting.Messaging.IMethodReturnMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodReturnMessage
  nameWithType: IMethodReturnMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodReturnMessage
- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodCallMessage
  nameWithType: IMethodCallMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodCallMessage
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetEnvoyChainForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetLifetimeService(MarshalByRefObject)
  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetMethodBaseFromMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.Messaging.IMethodMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodMessage
  nameWithType: IMethodMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectData(Object,SerializationInfo,StreamingContext)
  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectUri(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjRefForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetRealProxy(Object)
  nameWithType: RemotingServices.GetRealProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)
- uid: System.Runtime.Remoting.Proxies.RealProxy
  parent: System.Runtime.Remoting.Proxies
  isExternal: false
  name: RealProxy
  nameWithType: RealProxy
  fullName: System.Runtime.Remoting.Proxies.RealProxy
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetServerTypeForUri(String)
  nameWithType: RemotingServices.GetServerTypeForUri(String)
  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetSessionIdForMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsMethodOverloaded(IMethodMessage)
  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfAppDomain(Object)
  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfContext(Object)
  nameWithType: RemotingServices.IsObjectOutOfContext(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsOneWay(MethodBase)
  nameWithType: RemotingServices.IsOneWay(MethodBase)
  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsTransparentProxy(Object)
  nameWithType: RemotingServices.IsTransparentProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: LogRemotingStage(Int32)
  nameWithType: RemotingServices.LogRemotingStage(Int32)
  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject,String,Type)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: SetObjectUriForMarshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal(ObjRef)
  nameWithType: RemotingServices.Unmarshal(ObjRef)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal(ObjRef,Boolean)
  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)
- uid: System.Runtime.Remoting.RemotingServices.Connect*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect
  nameWithType: RemotingServices.Connect
- uid: System.Runtime.Remoting.RemotingServices.Disconnect*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Disconnect
  nameWithType: RemotingServices.Disconnect
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: ExecuteMessage
  nameWithType: RemotingServices.ExecuteMessage
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetEnvoyChainForProxy
  nameWithType: RemotingServices.GetEnvoyChainForProxy
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetLifetimeService
  nameWithType: RemotingServices.GetLifetimeService
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetMethodBaseFromMethodMessage
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectData
  nameWithType: RemotingServices.GetObjectData
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectUri
  nameWithType: RemotingServices.GetObjectUri
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjRefForProxy
  nameWithType: RemotingServices.GetObjRefForProxy
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetRealProxy
  nameWithType: RemotingServices.GetRealProxy
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetServerTypeForUri
  nameWithType: RemotingServices.GetServerTypeForUri
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetSessionIdForMethodMessage
  nameWithType: RemotingServices.GetSessionIdForMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsMethodOverloaded
  nameWithType: RemotingServices.IsMethodOverloaded
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfAppDomain
  nameWithType: RemotingServices.IsObjectOutOfAppDomain
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfContext
  nameWithType: RemotingServices.IsObjectOutOfContext
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsOneWay
  nameWithType: RemotingServices.IsOneWay
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsTransparentProxy
  nameWithType: RemotingServices.IsTransparentProxy
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: LogRemotingStage
  nameWithType: RemotingServices.LogRemotingStage
- uid: System.Runtime.Remoting.RemotingServices.Marshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal
  nameWithType: RemotingServices.Marshal
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: SetObjectUriForMarshal
  nameWithType: RemotingServices.SetObjectUriForMarshal
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal
  nameWithType: RemotingServices.Unmarshal
