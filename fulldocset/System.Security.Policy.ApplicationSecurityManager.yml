### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityManager
  id: ApplicationSecurityManager
  children:
  - System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  - System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  - System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  langs:
  - csharp
  name: ApplicationSecurityManager
  nameWithType: ApplicationSecurityManager
  fullName: System.Security.Policy.ApplicationSecurityManager
  type: Class
  summary: "Zarządza zaufania decyzje dotyczące aktywowana w manifeście aplikacji."
  remarks: "Klasa ApplicationSecurityManager informacje niezbędne do wykonania na podstawie manifestu aplikacji. <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>Właściwość identyfikuje Menedżera zaufania odpowiedzialna za określenie, czy aplikacja jest zaufany.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A>Metoda wywołuje zaufanie aplikacji Menedżera w celu ustalenia, czy aplikacja jest zaufany.</xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>Właściwość zawiera decyzje zaufania pamięci podręcznej dla użytkownika.</xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class ApplicationSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  id: ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera bieżący Menedżer zaufania aplikacji."
  remarks: "W bieżącej wersji jest tylko jeden Menedżera zaufania, który może być implementacja niestandardowa z <xref:System.Security.Policy.IApplicationTrustManager>interfejsu.</xref:System.Security.Policy.IApplicationTrustManager> Domyślna implementacja menedżera zaufania monituje użytkownika o uprawnienia do instalowania aplikacji i podnieść uprawnienia do aplikacji. Implementacje Menedżera zaufania mogą mieć różnych użytkowników. Implementacja może na przykład sprawdzić listy przedsiębiorstwa zaufane aplikacje, a nie monitowanie użytkownika o informacje."
  syntax:
    content: public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }
    return:
      type: System.Security.Policy.IApplicationTrustManager
      description: "<xref href=&quot;System.Security.Policy.IApplicationTrustManager&quot;> </xref> Reprezentujący bieżący Menedżera zaufania."
  overload: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Zasady w tej aplikacji nie ma Menedżera zaufania."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Określa, czy użytkownik zatwierdza określonej aplikacji, które można wykonać przy użyciu zestawu żądane uprawnienie."
  remarks: "DetermineApplicationTrust używa skonfigurowanego <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>Właściwości w celu określenia, czy zezwalać na wykonanie określonej aplikacji z uprawnień ustawić żądanego w manifeście aplikacji.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> Działania Menedżera zaufania zależy od implementacji Menedżera zaufania i przekazane informacje `context` parametru. Domyślne zachowanie Menedżera zaufania jest ustanowienie okno dialogowe interfejsu użytkownika, aby określić użytkownika o zgodę. Jednak Menedżera zaufania można także określić stanu zaufania aplikacji na podstawie innych kryteriów, takich jak decyzje udostępniane przez bazę danych firmowych. Decyzja dotycząca zaufania może zostać utrwalona, w zależności od `context` właściwości parametrów, jak i implementację Menedżera zaufania. Jeśli zaufania dla aplikacji jest trwały decyzji na podstawie w oknie dialogowym użytkownika, przyszłości wywołań <xref:System.Security.Policy.ApplicationSecurityManager>nie wyświetli okno dialogowe interfejsu użytkownika dla każdego żądania dla tej aplikacji.</xref:System.Security.Policy.ApplicationSecurityManager> DetermineApplicationTrust jest wywoływana po manifestu, ale przed aplikacji pobrana do systemu lokalnego."
  syntax:
    content: public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "<xref href=&quot;System.ActivationContext&quot;> </xref> Identyfikowanie kontekstu aktywacji dla aplikacji."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "A <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> identyfikowanie kontekstu Menedżera zaufania dla aplikacji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do wykonania określonej aplikacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>activationContext</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  id: UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera kolekcję zaufania aplikacji, która zawiera decyzje zaufania pamięci podręcznej dla użytkownika."
  remarks: "Decyzje zaufania w kolekcji są obsługiwane przy użyciu metody pobierania, takich jak <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>metody lub <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>metody.</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> </xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>"
  syntax:
    content: public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> Zawierający decyzje zaufania pamięci podręcznej dla użytkownika."
  overload: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.IApplicationTrustManager
  parent: System.Security.Policy
  isExternal: false
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
