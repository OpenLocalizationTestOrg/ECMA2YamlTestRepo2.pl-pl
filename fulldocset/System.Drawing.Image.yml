### YamlMime:ManagedReference
items:
- uid: System.Drawing.Image
  id: Image
  children:
  - System.Drawing.Image.Clone
  - System.Drawing.Image.Dispose
  - System.Drawing.Image.Dispose(System.Boolean)
  - System.Drawing.Image.Finalize
  - System.Drawing.Image.Flags
  - System.Drawing.Image.FrameDimensionsList
  - System.Drawing.Image.FromFile(System.String)
  - System.Drawing.Image.FromFile(System.String,System.Boolean)
  - System.Drawing.Image.FromHbitmap(System.IntPtr)
  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  - System.Drawing.Image.FromStream(System.IO.Stream)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  - System.Drawing.Image.GetEncoderParameterList(System.Guid)
  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.GetPropertyItem(System.Int32)
  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  - System.Drawing.Image.Height
  - System.Drawing.Image.HorizontalResolution
  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.Palette
  - System.Drawing.Image.PhysicalDimension
  - System.Drawing.Image.PixelFormat
  - System.Drawing.Image.PropertyIdList
  - System.Drawing.Image.PropertyItems
  - System.Drawing.Image.RawFormat
  - System.Drawing.Image.RemovePropertyItem(System.Int32)
  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  - System.Drawing.Image.Save(System.String)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  - System.Drawing.Image.Size
  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Image.Tag
  - System.Drawing.Image.VerticalResolution
  - System.Drawing.Image.Width
  langs:
  - csharp
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
  type: Class
  summary: "Abstrakcyjna klasa podstawowa, która udostępnia funkcje <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> i <xref href=&quot;System.Drawing.Imaging.Metafile&quot;> </xref> podrzędne klasy."
  remarks: "Aby rysowania obrazu na formularzu systemu Windows, należy użyć jednej z <xref:System.Drawing.Graphics.DrawImage%2A>metody.</xref:System.Drawing.Graphics.DrawImage%2A>"
  example:
  - "The following code example is designed for use with Windows Forms. It is a handler for the <xref:System.Windows.Forms.Control.Paint> event. A <xref:System.Drawing.Graphics> object is passed to the event and is used to draw the image on the form. The code performs the following actions:  \n  \n-   Creates an image from a file named SampImag.jpg. This file must be located in the same folder as the application executable file.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image on the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/cpp/t-system.drawing.image_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/csharp/t-system.drawing.image_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/visualbasic/t-system.drawing.image_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.ImageEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.ImmutableObject(true)]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Image.Clone
  id: Clone
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy dokładną kopię to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> Ta metoda tworzy, rzutowany jako obiekt."
  overload: System.Drawing.Image.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose
  id: Dispose
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwalnia wszelkie zasoby używane przez to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Wywołanie metody Dispose umożliwia zasoby używane przez to <xref:System.Drawing.Image>odbiorczego do innych celów.</xref:System.Drawing.Image>       Wywołaj metodę Dispose po zakończeniu przy użyciu <xref:System.Drawing.Image>.</xref:System.Drawing.Image> Metoda Dispose pozostawia <xref:System.Drawing.Image>w stanie uniemożliwiającym jego używanie.</xref:System.Drawing.Image> Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Drawing.Image>, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Drawing.Image>klasy.</xref:System.Drawing.Image> </xref:System.Drawing.Image> Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md) i [implementacja metody Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Wywołania zawsze dysponować przed zwolnieniem ostatniego odwołania do <xref:System.Drawing.Image>.</xref:System.Drawing.Image> W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Drawing.Image>obiektu `Finalize` metody.</xref:System.Drawing.Image>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.Drawing.Image&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: >-
    > [!NOTE]

    >  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Finalize
  id: Finalize
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych."
  syntax:
    content: ~Image ();
    parameters: []
  overload: System.Drawing.Image.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Flags
  id: Flags
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera atrybut flagi danych pikseli <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Wartość całkowita zwracane z tej metody odpowiada sumę <xref:System.Drawing.Imaging.ImageFlags>, zgodnie z opisem w poniższej tabeli.</xref:System.Drawing.Imaging.ImageFlags>      | Wartość ImageFlag | Reprezentacja |   |---------------------|----------------------------|   | `ImageFlagsNone`|0|   | `ImageFlagsScalable`|1|   | `ImageFlagsHasAlpha`|2|   | `ImageFlagsHasTranslucent`|4|   | `ImageFlagsPartiallyScalable`|8|   | `ImageFlagsColorSpaceRGB`|16|   | `ImageFlagsColorSpaceCMYK`|32|   | `ImageFlagsColorSpaceGRAY`|64|   | `ImageFlagsColorSpaceYCBCR`|128|   | `ImageFlagsColorSpaceYCCK`|256|   | `ImageFlagsHasRealDPI`|4096|   | `ImageFlagsHasRealPixelSize`|8192|   | `ImageFlagsReadOnly`| 65536 |   | `ImageFlagsCaching`| 131072 |       Na przykład, jeśli właściwość flagi obrazu zwrócił 77960 <xref:System.Drawing.Imaging.ImageFlags>obrazu może być <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>i <xref:System.Drawing.Imaging.ImageFlags>.</xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags>"
  syntax:
    content: public int Flags { get; }
    return:
      type: System.Int32
      description: "Liczbę całkowitą przedstawiającą bitowe połączenie <xref href=&quot;System.Drawing.Imaging.ImageFlags&quot;> </xref> tego <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FrameDimensionsList
  id: FrameDimensionsList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera tablicę identyfikatorów GUID, które reprezentują wymiary ramki w ramach tego <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Ta metoda zwraca informacje na temat ramki wiele obrazów, które są dostępne w dwóch style: wiele stron i wielu rozdzielczości.       Obraz strony wielu jest obraz, który zawiera więcej niż jeden obraz. Każdej strony zawiera jeden obraz (lub ramki). Te strony (lub obrazów lub ramki) zazwyczaj są wyświetlane w przedziale czasu, aby utworzyć animację, takich jak animowanych plików GIF.       Obraz wielu rozpoznawania jest obraz, który zawiera więcej niż jedną kopię obrazu na różne metody rozwiązywania. Jest ona powszechnie stosowana przez mapowanie MCI gdzie rozmiar obrazu wyświetlanego Określa rozdzielczość obrazu używanych na rysunku. [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]może obsługiwać dowolnej liczby stron (lub obrazów lub ramki), a także dowolnej liczby rozwiązania. Właściwości <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension> są zdefiniowane wymiary"
  syntax:
    content: public Guid[] FrameDimensionsList { get; }
    return:
      type: System.Guid[]
      description: "Tablicę identyfikatorów GUID, które określają wymiary ramki w ramach tego <xref href=&quot;System.Drawing.Image&quot;> </xref> od najważniejszych do najmniej znaczący."
  overload: System.Drawing.Image.FrameDimensionsList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String)
  id: FromFile(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.Image&quot;> </xref> z określonego pliku."
  remarks: "Zarządzanym GDI + ma wbudowane kodeków obsługujących następujące typy plików: - BMP - GIF - JPEG - PNG - TIFF, plik jest zablokowany do momentu <xref:System.Drawing.Image>został usunięty.</xref:System.Drawing.Image>       Jeśli plik nie ma prawidłowego formatu obrazu lub [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] nie obsługuje format pikseli z plików, ta metoda zgłasza <xref:System.OutOfMemoryException>wyjątek.</xref:System.OutOfMemoryException>      > [!NOTE] > <xref:System.Drawing.Image>Klasa nie obsługuje alfa przezroczystości bitmap.</xref:System.Drawing.Image> Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel."
  example:
  - "The following code example demonstrates how to use the FromFile<xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.f_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.f_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.f_0_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Ciąg zawierający nazwę pliku, z którym ma zostać utworzony <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> Ta metoda tworzy."
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Plik nie ma prawidłowego formatu obrazu.       - lub - [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] nie obsługuje format piksela pliku."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Określony plik nie istnieje."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  id: FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.Image&quot;> </xref> z określonego pliku przy użyciu osadzonych informacji o zarządzaniu kolorów w tym pliku."
  remarks: "Zarządzanym GDI + ma wbudowane kodeków obsługujących następujące typy plików: - BMP - GIF - JPEG - PNG - TIFF, jeśli plik nie ma prawidłowego formatu obrazu lub [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] nie obsługuje format piksela pliku, ta metoda zgłasza <xref:System.OutOfMemoryException>wyjątek.</xref:System.OutOfMemoryException>       Plik jest zablokowany do momentu <xref:System.Drawing.Image>został usunięty.</xref:System.Drawing.Image>       `useEmbeddedColorManagement` Parametr określa, czy nowe <xref:System.Drawing.Image>stosuje korekcji kolorów zgodnie z informacji zarządzania kolor osadzonych w pliku obrazu.</xref:System.Drawing.Image> Osadzone informacje mogą uwzględniać profile konsorcjum kolor międzynarodowych (ICC), wartości gamma i trójchromatyczna informacji.      > [!NOTE] > <xref:System.Drawing.Image>Klasa nie obsługuje alfa przezroczystości bitmap.</xref:System.Drawing.Image> Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel."
  example:
  - "The following code example demonstrates how to obtain a new bitmap using the FromFile method. It also demonstrates a <xref:System.Drawing.TextureBrush>.  \n  \n This example is designed to be used with Windows Forms. Create a form containing a button named `Button2`. Paste the code into the form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#2](~/add/codesnippet/csharp/m-system.drawing.image.f_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#2](~/add/codesnippet/cpp/m-system.drawing.image.f_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#2](~/add/codesnippet/visualbasic/m-system.drawing.image.f_1_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);
    parameters:
    - id: filename
      type: System.String
      description: "Ciąg zawierający nazwę pliku, z którym ma zostać utworzony <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "Wartość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> używanie informacji dotyczących zarządzania kolor osadzone w pliku obrazu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> Ta metoda tworzy."
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Plik nie ma prawidłowego formatu obrazu.       - lub - [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] nie obsługuje format piksela pliku."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Określony plik nie istnieje."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  id: FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> z dojściem do mapy bitowej GDI."
  remarks: "Metoda FromHbitmap tworzy kopię [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] mapy bitowej; aby można było wydać przychodzącego [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmap przy użyciu [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` metody natychmiast po utworzeniu nowego <xref:System.Drawing.Image>.</xref:System.Drawing.Image>"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] Dojścia mapy bitowej, z którym ma zostać utworzony <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref> Ta metoda tworzy."
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  id: FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> z dojściem do mapy bitowej GDI i dojścia do palety GDI."
  remarks: "Metoda FromHbitmap tworzy kopię [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] mapy bitowej; aby można było wydać przychodzącego [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmap przy użyciu [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` metody natychmiast po utworzeniu nowego <xref:System.Drawing.Image>.</xref:System.Drawing.Image>"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] Dojścia mapy bitowej, z którym ma zostać utworzony <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: hpalette
      type: System.IntPtr
      description: "Dojście do [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] palety używane do definiowania kolorów mapy bitowej, jeśli określono mapy bitowej `hBitmap` parametr nie jest mapą bitową niezależnych od urządzenia (DIB)."
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref> Ta metoda tworzy."
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  id: FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.Image&quot;> </xref> ze strumienia określone dane."
  remarks: "Należy pozostawić strumienia otwarte przez czas ich istnienia <xref:System.Drawing.Image>.</xref:System.Drawing.Image>       Strumień jest resetowany do zera, jeśli ta metoda jest wywoływana kolejno z tego samego strumienia.      > [!NOTE] > <xref:System.Drawing.Image>Klasa nie obsługuje alfa przezroczystości bitmap.</xref:System.Drawing.Image> Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>zawiera dane dla tego <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> Ta metoda tworzy."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Strumień nie ma prawidłowego formatu obrazu - lub - <code> stream </code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.Image&quot;> </xref> ze strumienia określone dane, opcjonalnie używając osadzonych informacji o zarządzaniu kolorów w strumieniu."
  remarks: "Należy pozostawić strumienia otwarte przez czas ich istnienia <xref:System.Drawing.Image>.</xref:System.Drawing.Image>       `useEmbeddedColorManagement` Parametr określa, czy nowe <xref:System.Drawing.Image>stosuje korekcji kolorów zgodnie z informacji zarządzania kolor osadzonych w strumieniu danych.</xref:System.Drawing.Image> Osadzone informacje mogą uwzględniać profile konsorcjum kolor międzynarodowych (ICC), wartości gamma i trójchromatyczna informacji.       Strumień jest resetowany do zera, jeśli ta metoda jest wywoływana kolejno z tego samego strumienia.      > [!NOTE] > <xref:System.Drawing.Image>Klasa nie obsługuje alfa przezroczystości bitmap.</xref:System.Drawing.Image> Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>zawiera dane dla tego <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby użyć informacji o zarządzaniu kolor osadzone w strumieniu danych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> Ta metoda tworzy."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Strumień nie ma prawidłowego formatu obrazu - lub - <code> stream </code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.Image&quot;> </xref> ze strumienia określone dane, opcjonalnie używając osadzonych informacji o zarządzaniu kolorów i sprawdzanie poprawności danych obrazu."
  remarks: "`useEmbeddedColorManagement` Parametr określa, czy nowe <xref:System.Drawing.Image>stosuje korekcji kolorów zgodnie z informacji zarządzania kolor osadzonych w strumieniu danych.</xref:System.Drawing.Image> Osadzone informacje mogą uwzględniać profile konsorcjum kolor międzynarodowych (ICC), wartości gamma i trójchromatyczna informacji.      > [!NOTE] > <xref:System.Drawing.Image>Klasa nie obsługuje alfa przezroczystości bitmap.</xref:System.Drawing.Image> Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>zawiera dane dla tego <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby użyć informacji o zarządzaniu kolor osadzone w strumieniu danych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: validateImageData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby sprawdzić poprawność danych obrazu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> Ta metoda tworzy."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Strumień nie ma prawidłowego formatu obrazu."
  platform:
  - net462
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  id: GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera granicami obrazu w określonych jednostkach."
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle, using the <xref:System.Drawing.GraphicsUnit> enumeration, and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/m-system.drawing.image.g_1_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/m-system.drawing.image.g_1_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/m-system.drawing.image.g_1_1.cpp)]"
  syntax:
    content: public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);
    parameters:
    - id: pageUnit
      type: System.Drawing.GraphicsUnit
      description: "Jeden z <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> wskazaniem jednostki miary prostokątem wartości."
    return:
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> Reprezentujący granicami obrazu, w określonej jednostce."
  overload: System.Drawing.Image.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  id: GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwraca informacje na temat parametrów obsługiwanych przez koder określonego obrazu."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);
    parameters:
    - id: encoder
      type: System.Guid
      description: "Identyfikator GUID, który określa kodera obrazu."
    return:
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> Zawierający tablicę <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> obiektów. Każdy <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> zawiera informacje o jeden z parametrów obsługiwanych przez koder określonego obrazu."
  overload: System.Drawing.Image.GetEncoderParameterList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  id: GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwraca liczbę ramek określonego wymiaru."
  remarks: "Ta metoda zwraca informacje na temat ramki wiele obrazów, które są dostępne w dwóch style: wiele stron i wielu rozdzielczości.       Obraz strony wielu jest obraz, który zawiera więcej niż jeden obraz. Każdej strony zawiera jeden obraz (lub ramki). Te strony (lub obrazów lub ramki) zazwyczaj są wyświetlane w przedziale czasu, aby utworzyć animację, takich jak animowanych plików GIF.       Obraz wielu rozpoznawania jest obraz, który zawiera więcej niż jedną kopię obrazu na różne metody rozwiązywania. Jest ona powszechnie stosowana przez mapowanie MCI gdzie rozmiar obrazu wyświetlanego Określa rozdzielczość obrazu używanych na rysunku. [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]może obsługiwać dowolnej liczby stron (lub obrazów lub ramki), a także dowolnej liczby rozwiązania. Właściwości <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension> są zdefiniowane wymiary"
  syntax:
    content: public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "A <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref> , który określa tożsamość do typu wymiaru."
    return:
      type: System.Int32
      description: "Liczba ramek w określonym wymiarze."
  overload: System.Drawing.Image.GetFrameCount*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  id: GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwraca liczbę bitów na piksel podanym formacie pikseli głębi kolorów."
  syntax:
    content: public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> Elementu członkowskiego, który określa format, dla której ma zostać znaleziony rozmiar."
    return:
      type: System.Int32
      description: "Głębi kolorów podanym formacie pikseli."
  overload: System.Drawing.Image.GetPixelFormatSize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  id: GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera element określonej właściwości z tego <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Aby uzyskać listę właściwości elementu identyfikatorów i łącza do dodatkowych informacji zobacz <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.</xref:System.Drawing.Imaging.PropertyItem.Id%2A>       Trudno jest ustawiona właściwość elementów, ponieważ <xref:System.Drawing.Imaging.PropertyItem>Klasa nie ma publicznych konstruktorów.</xref:System.Drawing.Imaging.PropertyItem> Jednym ze sposobów obejść to ograniczenie jest uzyskanie <xref:System.Drawing.Imaging.PropertyItem>pobierając <xref:System.Drawing.Image.PropertyItems%2A>wartość właściwości lub wywołanie metody GetPropertyItem <xref:System.Drawing.Image>ma już elementów właściwości.</xref:System.Drawing.Image> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> Następnie można ustawić pola <xref:System.Drawing.Imaging.PropertyItem>i przekaż go do <xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A> </xref:System.Drawing.Imaging.PropertyItem>"
  example:
  - "The following code example demonstrates how to use the GetPropertyItem and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example calls GetPropertyItem passing an ID value. For a list of ID values see, <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.g_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.g_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.g_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "Identyfikator elementu właściwości do pobrania."
    return:
      type: System.Drawing.Imaging.PropertyItem
      description: "<xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> Pobiera tej metody."
  overload: System.Drawing.Image.GetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Format obrazu tego obrazu nie obsługuje elementów właściwości."
  platform:
  - net462
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  id: GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);
    parameters:
    - id: thumbWidth
      type: System.Int32
      description: "Do dodania."
    - id: thumbHeight
      type: System.Int32
      description: "Do dodania."
    - id: callback
      type: System.Drawing.Image.GetThumbnailImageAbort
      description: "Do dodania."
    - id: callbackData
      type: System.IntPtr
      description: "Do dodania."
    return:
      type: System.Drawing.Image
      description: "Do dodania."
  overload: System.Drawing.Image.GetThumbnailImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Height
  id: Height
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera wysokość w pikselach <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> and Height properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.h_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.h_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.h_1.vb)]"
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "Wysokość w pikselach <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.HorizontalResolution
  id: HorizontalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera rozdzielczość pozioma w pikseli na cal to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public float HorizontalResolution { get; }
    return:
      type: System.Single
      description: "Rozdzielczość w poziomie w pikseli na cal to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.HorizontalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwraca wartość wskazującą, czy wybrano format to <xref href=&quot;System.Drawing.Image&quot;> </xref> zawiera informacje alfa."
  syntax:
    content: public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> Do testowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> pixfmt </code> zawiera informacje alfa; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Image.IsAlphaPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwraca wartość wskazującą, czy 32 bity na piksel w formacie pikseli."
  remarks: "Format pikseli canonical wskazuje formacie pikseli 32 bity na piksel. Ten format Określa głębokość 24-bitowe i kanał alfa 8-bitową."
  syntax:
    content: public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> Do testowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> pixfmt </code> canonical a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Image.IsCanonicalPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwraca wartość wskazującą, czy 64 bity na piksel w formacie pikseli."
  syntax:
    content: public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> Wyliczenie do testowania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>pixfmt</code> is extended; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Image.IsExtendedPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Palette
  id: Palette
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub ustawia paletę kolorów używaną w tym <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Ta właściwość zwraca <xref:System.Drawing.Imaging.ColorPalette>obiekt używany przez ten <xref:System.Drawing.Image>.</xref:System.Drawing.Image> </xref:System.Drawing.Imaging.ColorPalette> kopii"
  syntax:
    content: public System.Drawing.Imaging.ColorPalette Palette { get; set; }
    return:
      type: System.Drawing.Imaging.ColorPalette
      description: "A <xref href=&quot;System.Drawing.Imaging.ColorPalette&quot;> </xref> reprezentujący paletę kolorów używaną w tym <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Palette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PhysicalDimension
  id: PhysicalDimension
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera szerokość i wysokość obrazu."
  remarks: "Jeśli obraz jest mapą bitową, zwracane są szerokość i wysokość w pikselach. Jeśli obraz jest metaplik, szerokość i wysokość są zwracane w 0,01 milimetra jednostki."
  syntax:
    content: public System.Drawing.SizeF PhysicalDimension { get; }
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> strukturę, która reprezentuje szerokość i wysokość tego <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.PhysicalDimension*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PixelFormat
  id: PixelFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera format piksela dla <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the PixelFormat property.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.p_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.p_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.p_1_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; }
    return:
      type: System.Drawing.Imaging.PixelFormat
      description: "A <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> reprezentujący format piksela dla tego <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.PixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyIdList
  id: PropertyIdList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera identyfikatory elementów właściwości przechowywanych w tym <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Jeśli obraz nie zawiera żadnych elementów właściwości lub format obrazu nie obsługuje właściwości elementów właściwości PropertyIdList zwraca pustą tablicę (to znaczy tablicy o zerowej długości)."
  syntax:
    content: public int[] PropertyIdList { get; }
    return:
      type: System.Int32[]
      description: "Tablica właściwości identyfikatory, po jednej dla każdego elementu właściwości przechowywanych w tym obrazie."
  overload: System.Drawing.Image.PropertyIdList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyItems
  id: PropertyItems
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera wszystkie właściwości elementów (elementy metadanych) przechowywane w tym <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Jeśli obraz nie zawiera żadnych elementów właściwości lub format obrazu nie obsługuje właściwości elementów PropertyItems zwraca pustą tablicę (to znaczy tablicy o zerowej długości)."
  example:
  - "The following code example demonstrates how to read and display the metadata in an image file using the <xref:System.Drawing.Imaging.PropertyItem?displayProperty=fullName> class and the PropertyItems property.  \n  \n This example is designed to be used a Windows Form that imports the <xref:System.Drawing.Imaging?displayProperty=fullName> namespace. Paste the code into the form and change the path to `fakePhoto.jpg` to point to an image file on your system. Call the `ExtractMetaData` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#6](~/add/codesnippet/csharp/p-system.drawing.image.p_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#6](~/add/codesnippet/cpp/p-system.drawing.image.p_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#6](~/add/codesnippet/visualbasic/p-system.drawing.image.p_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }
    return:
      type: System.Drawing.Imaging.PropertyItem[]
      description: "Tablica <xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> obiektów, dla każdej właściwości elementu przechowywane w obrazie."
  overload: System.Drawing.Image.PropertyItems*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RawFormat
  id: RawFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera format pliku <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public System.Drawing.Imaging.ImageFormat RawFormat { get; }
    return:
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref> Reprezentujący format pliku <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.RawFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  id: RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Usuwa element określonej właściwości z tego <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Trudno jest ustawiona właściwość elementów, ponieważ <xref:System.Drawing.Imaging.PropertyItem>Klasa nie ma publicznych konstruktorów.</xref:System.Drawing.Imaging.PropertyItem> Jednym ze sposobów obejść to ograniczenie jest uzyskanie <xref:System.Drawing.Imaging.PropertyItem>pobierając <xref:System.Drawing.Image.PropertyItems%2A>wartość właściwości lub wywołania <xref:System.Drawing.Image.GetPropertyItem%2A>metody <xref:System.Drawing.Image>ma już elementów właściwości.</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> Następnie można ustawić pola <xref:System.Drawing.Imaging.PropertyItem>i przekaż go do <xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A> </xref:System.Drawing.Imaging.PropertyItem>"
  syntax:
    content: public void RemovePropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "Identyfikator właściwości elementu do usunięcia."
  overload: System.Drawing.Image.RemovePropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Obraz nie zawiera elementu żądanej właściwości.       - lub - format obrazu dla tego obrazu nie obsługuje elementów właściwości."
  platform:
  - net462
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  id: RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obraca, przerzucania, lub obraca i Przerzuca <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Metoda RotateFlip obrót do ruchu wskazówek zegara.       Jeśli chcesz korzystać po został obrócony obraz, należy zawsze pobierać nowy obiekt grafiki z obrazu, w przeciwnym razie może wystąpić wyjątek."
  example:
  - "The following code example demonstrates how to call the RotateFlip method on an <xref:System.Drawing.Image> and the <xref:System.Drawing.RotateFlipType> enumeration.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1` and a button named `Button1`. Paste the code into a form, call `InitializeBitmap` from the form's constructor, and associate `Button1_Click` with the button's <xref:System.Windows.Forms.Control.Click> event. Ensure the file path to the bitmap is valid on your system.  \n  \n [!code-cs[System.Drawing.BitmapMembers#3](~/add/codesnippet/csharp/m-system.drawing.image.r_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#3](~/add/codesnippet/visualbasic/m-system.drawing.image.r_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#3](~/add/codesnippet/cpp/m-system.drawing.image.r_1.cpp)]"
  syntax:
    content: public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);
    parameters:
    - id: rotateFlipType
      type: System.Drawing.RotateFlipType
      description: "A <xref href=&quot;System.Drawing.RotateFlipType&quot;> </xref> elementu członkowskiego, który określa typ obracanie i przerzucanie do zastosowania do obrazu."
  overload: System.Drawing.Image.RotateFlip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String)
  id: Save(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Powoduje to zapisanie <xref href=&quot;System.Drawing.Image&quot;> </xref> do określonego pliku lub strumienia."
  remarks: "Jeśli format pliku obrazu nie kodera, koder Portable Network Graphics (PNG) jest używany. Korzystając z metody Zapisz Aby zapisać obraz w formacie Windows Metafile Format (WMF) lub Format rozszerzony metaplik (EMF), wynikowy plik jest zapisywany w formacie Portable Network Graphics (PNG). Ten problem występuje, ponieważ [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] składnika [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] nie ma koder, który służy do zapisywania plików jako .wmf lub .emf plików.       Zapisywanie do tego samego pliku, który został skonstruowany z obrazu nie jest dozwolone i zgłasza wyjątek."
  example:
  - "The following code example demonstrates how to call the Save method. This example is designed to be used with Windows Forms. Create a form that contains a button named `Button5`. Paste the code into the form, and associate the method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#5](~/add/codesnippet/csharp/m-system.drawing.image.s_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#5](~/add/codesnippet/cpp/m-system.drawing.image.s_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#5](~/add/codesnippet/visualbasic/m-system.drawing.image.s_0_1.vb)]"
  syntax:
    content: public void Save (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Ciąg zawierający nazwę pliku, w którym chcesz zapisać to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>jest<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Obraz został zapisany w formacie nieprawidłowy obraz.       - lub - obraz został zapisany do tego samego pliku, który został utworzony."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ten obraz jest zapisywany do określonego strumienia w określonym formacie."
  remarks: "Należy unikać zapisywania obrazu w strumieniu, którego użyto do jego utworzenia. W ten sposób może spowodować uszkodzenie strumienia.       Obraz należy zapisać w strumieniu przy przesunięciu zero. Jeśli wszelkie dodatkowe dane zostały zapisane w strumieniu przed zapisaniem obrazu, dane obrazu w strumieniu zostanie uszkodzony."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>Którym zostanie zapisany obraz.</xref:System.IO.Stream>"
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref> , Który określa format obrazu zapisane."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>format</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Obraz został zapisany w formacie zły obraz"
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  id: Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Powoduje to zapisanie <xref href=&quot;System.Drawing.Image&quot;> </xref> do określonego pliku w określonym formacie."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a bitmap from a type, and how to use the Save method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event, and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \n  \n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/cpp/m-system.drawing.image.s_1_1.cpp)]\n [!code-cs[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/csharp/m-system.drawing.image.s_1_1.cs)]\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/visualbasic/m-system.drawing.image.s_1_1.vb)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: filename
      type: System.String
      description: "Ciąg zawierający nazwę pliku, w którym chcesz zapisać to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>format</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Obraz został zapisany w formacie nieprawidłowy obraz.       - lub - obraz został zapisany do tego samego pliku, który został utworzony."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ten obraz jest zapisywany do określonego strumienia z kodera określony i parametry kodera obrazu."
  remarks: "Nie zapisuj obrazu na strumieniu, który został użyty do utworzenia obrazu. W ten sposób może spowodować uszkodzenie strumienia.       Obraz należy zapisać w strumieniu przy przesunięciu zero. Jeśli wszelkie dodatkowe dane zostały zapisane w strumieniu przed zapisaniem obrazu, dane obrazu w strumieniu zostanie uszkodzony."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>Którym zostanie zapisany obraz.</xref:System.IO.Stream>"
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> , Który określa parametry używane przez koder obrazu."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Obraz został zapisany w formacie nieprawidłowy obraz."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Powoduje to zapisanie <xref href=&quot;System.Drawing.Image&quot;> </xref> do określonego pliku, z określonymi parametrami koder i koder obrazu."
  remarks: "Zapisywanie do tego samego pliku, który został skonstruowany z obrazu nie jest dozwolone i zgłasza wyjątek."
  example:
  - "The following example creates a <xref:System.Drawing.Bitmap> object from a BMP file. The code saves the bitmap to three JPEG files, each with a different quality level.  \n  \n [!code-cs[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/csharp/e093e484-33cc-46d5-936c-_1.cs)]\n [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/visualbasic/e093e484-33cc-46d5-936c-_1.vb)]\n [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/cpp/e093e484-33cc-46d5-936c-_1.cpp)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: filename
      type: System.String
      description: "Ciąg zawierający nazwę pliku, w którym chcesz zapisać to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "An <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;></xref> to use for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>encoder</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Obraz został zapisany w formacie nieprawidłowy obraz.       - lub - obraz został zapisany do tego samego pliku, który został utworzony."
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Dodaje do pliku lub strumienia określone w wywołaniu poprzedniej ramki <xref:System.Drawing.Image.Save*>metody.</xref:System.Drawing.Image.Save*> Użyj tej metody, aby zapisać wybrane ramki za pomocą obrazu ramki wielu do innego obrazu ramki wielu."
  syntax:
    content: public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> Przechowuje parametrów wymaganych przez koder obrazu, który jest używany przez operacji dodawania Zapisz."
  overload: System.Drawing.Image.SaveAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Dodaje do pliku lub strumienia określone w wywołaniu poprzedniej ramki <xref:System.Drawing.Image.Save*>metody.</xref:System.Drawing.Image.Save*>"
  syntax:
    content: public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> Zawiera ramki do dodania."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> Przechowuje parametrów wymaganych przez koder obrazu, który jest używany przez operacji dodawania Zapisz."
  overload: System.Drawing.Image.SaveAdd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  id: SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Wybiera określony przez wymiarów i indeksu ramki."
  remarks: "Możliwe wartości `dimensionID` parametru są właściwościami <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension> Mogą one używane do identyfikowania obrazu na podstawie czasu, rozwiązania lub numer strony.       Wywołanie tej metody powoduje, że wszystkie zmiany wprowadzone do poprzedniej ramki do usunięcia. Przed wybraniem innej ramki, należy zapisać wszystkie zmiany wprowadzone do bieżącej ramki, łącznie ze zmianą właściwości i wartości pikseli. Jeśli wywołanie do metody SelectActiveFrame zakończy się pomyślnie (wyjątek występuje), metoda zwraca wartość 0."
  syntax:
    content: public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "A <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref> , który określa tożsamość do typu wymiaru."
    - id: frameIndex
      type: System.Int32
      description: "Indeks aktywną ramkę."
    return:
      type: System.Int32
      description: "Zawsze zwraca wartość 0."
  overload: System.Drawing.Image.SelectActiveFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  id: SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zapisuje element właściwości (element metadanych) w tym <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Jeśli format obrazu nie obsługuje właściwości elementów, ta metoda zgłasza <xref:System.ArgumentException>z komunikatem &quot;właściwość nieobsługiwana.&quot;</xref:System.ArgumentException> Jeśli format obrazu obsługuje właściwości elementów, ale nie obsługuje określonej właściwości, którą próbujesz ustawić, ta metoda ignoruje próby, ale nie zgłasza wyjątek.       Trudno jest ustawiona właściwość elementów, ponieważ <xref:System.Drawing.Imaging.PropertyItem>Klasa nie ma publicznych konstruktorów.</xref:System.Drawing.Imaging.PropertyItem> Jednym ze sposobów obejść to ograniczenie jest uzyskanie <xref:System.Drawing.Imaging.PropertyItem>pobierając <xref:System.Drawing.Image.PropertyItems%2A>wartość właściwości lub wywołania <xref:System.Drawing.Image.GetPropertyItem%2A>metody <xref:System.Drawing.Image>ma już elementów właściwości.</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> Następnie można ustawić pola <xref:System.Drawing.Imaging.PropertyItem>i przekaż ją do SetPropertyItem.</xref:System.Drawing.Imaging.PropertyItem>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and SetPropertyItem methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.s_2_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.s_2_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.s_2_1.vb)]"
  syntax:
    content: public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);
    parameters:
    - id: propitem
      type: System.Drawing.Imaging.PropertyItem
      description: "<xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> Mają być przechowywane."
  overload: System.Drawing.Image.SetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Format obrazu tego obrazu nie obsługuje elementów właściwości."
  platform:
  - net462
- uid: System.Drawing.Image.Size
  id: Size
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera szerokość i wysokość w pikselach, ten obraz."
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> strukturę, która reprezentuje szerokość i wysokość w pikselach tego obrazu."
  overload: System.Drawing.Image.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Image
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Wypełnia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> z dane potrzebne do zserializowania obiektu docelowego."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Do wypełniania danych."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Miejsce docelowe (zobacz <xref:System.Runtime.Serialization.StreamingContext>) tej serializacji.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Tag
  id: Tag
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub ustawia obiekt, który udostępnia dodatkowe dane dotyczące obrazu."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>Zapewniający dodatkowe dane dotyczące obrazu.</xref:System.Object>"
  overload: System.Drawing.Image.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.VerticalResolution
  id: VerticalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera rozdzielczość w pionie w pikseli na cal to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public float VerticalResolution { get; }
    return:
      type: System.Single
      description: "Rozdzielczość w pionie w pikseli na cal to <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.VerticalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Width
  id: Width
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera szerokość w pikselach <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new <xref:System.Drawing.Bitmap> from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, Width, and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.w_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.w_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.w_1.vb)]"
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "Szerokość w pikselach <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.InteropServices.ExternalException
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ExternalException
  nameWithType: ExternalException
  fullName: System.Runtime.InteropServices.ExternalException
- uid: System.Drawing.Image.Clone
  parent: System.Drawing.Image
  isExternal: false
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Image.Dispose
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
- uid: System.Drawing.Image.Dispose(System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Image.Finalize
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
- uid: System.Drawing.Image.Flags
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Image.FrameDimensionsList
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
- uid: System.Guid[]
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid[]
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.FromFile(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
- uid: System.Drawing.Imaging.EncoderParameters
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameters
  nameWithType: EncoderParameters
  fullName: System.Drawing.Imaging.EncoderParameters
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
- uid: System.Drawing.Imaging.FrameDimension
  parent: System.Drawing.Imaging
  isExternal: false
  name: FrameDimension
  nameWithType: FrameDimension
  fullName: System.Drawing.Imaging.FrameDimension
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
- uid: System.Drawing.Imaging.PropertyItem
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
- uid: System.Drawing.Image.GetThumbnailImageAbort
  parent: System.Drawing
  isExternal: false
  name: Image+GetThumbnailImageAbort
  nameWithType: Image+GetThumbnailImageAbort
  fullName: System.Drawing.Image+GetThumbnailImageAbort
- uid: System.Drawing.Image.Height
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
- uid: System.Drawing.Image.HorizontalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
- uid: System.Drawing.Image.Palette
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
- uid: System.Drawing.Imaging.ColorPalette
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
- uid: System.Drawing.Image.PhysicalDimension
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Image.PixelFormat
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.PropertyItems
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
- uid: System.Drawing.Imaging.PropertyItem[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem[]
  spec.csharp:
  - uid: System.Drawing.Imaging.PropertyItem
    name: PropertyItem
    nameWithType: PropertyItem
    fullName: PropertyItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.RawFormat
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
- uid: System.Drawing.RotateFlipType
  parent: System.Drawing
  isExternal: false
  name: RotateFlipType
  nameWithType: RotateFlipType
  fullName: System.Drawing.RotateFlipType
- uid: System.Drawing.Image.Save(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Imaging.ImageCodecInfo
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageCodecInfo
  nameWithType: ImageCodecInfo
  fullName: System.Drawing.Imaging.ImageCodecInfo
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
- uid: System.Drawing.Image.Size
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Image.Tag
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
- uid: System.Drawing.Image.VerticalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
- uid: System.Drawing.Image.Width
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
- uid: System.Drawing.Image.Clone*
  parent: System.Drawing.Image
  isExternal: false
  name: Clone
  nameWithType: Image.Clone
- uid: System.Drawing.Image.Dispose*
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose
  nameWithType: Image.Dispose
- uid: System.Drawing.Image.Finalize*
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize
  nameWithType: Image.Finalize
- uid: System.Drawing.Image.Flags*
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
- uid: System.Drawing.Image.FrameDimensionsList*
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
- uid: System.Drawing.Image.FromFile*
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile
  nameWithType: Image.FromFile
- uid: System.Drawing.Image.FromHbitmap*
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap
  nameWithType: Image.FromHbitmap
- uid: System.Drawing.Image.FromStream*
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream
  nameWithType: Image.FromStream
- uid: System.Drawing.Image.GetBounds*
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds
  nameWithType: Image.GetBounds
- uid: System.Drawing.Image.GetEncoderParameterList*
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList
  nameWithType: Image.GetEncoderParameterList
- uid: System.Drawing.Image.GetFrameCount*
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount
  nameWithType: Image.GetFrameCount
- uid: System.Drawing.Image.GetPixelFormatSize*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize
  nameWithType: Image.GetPixelFormatSize
- uid: System.Drawing.Image.GetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem
  nameWithType: Image.GetPropertyItem
- uid: System.Drawing.Image.GetThumbnailImage*
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage
  nameWithType: Image.GetThumbnailImage
- uid: System.Drawing.Image.Height*
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
- uid: System.Drawing.Image.HorizontalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
- uid: System.Drawing.Image.IsAlphaPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat
  nameWithType: Image.IsAlphaPixelFormat
- uid: System.Drawing.Image.IsCanonicalPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat
  nameWithType: Image.IsCanonicalPixelFormat
- uid: System.Drawing.Image.IsExtendedPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat
  nameWithType: Image.IsExtendedPixelFormat
- uid: System.Drawing.Image.Palette*
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
- uid: System.Drawing.Image.PhysicalDimension*
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
- uid: System.Drawing.Image.PixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
- uid: System.Drawing.Image.PropertyItems*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
- uid: System.Drawing.Image.RawFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
- uid: System.Drawing.Image.RemovePropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem
  nameWithType: Image.RemovePropertyItem
- uid: System.Drawing.Image.RotateFlip*
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip
  nameWithType: Image.RotateFlip
- uid: System.Drawing.Image.Save*
  parent: System.Drawing.Image
  isExternal: false
  name: Save
  nameWithType: Image.Save
- uid: System.Drawing.Image.SaveAdd*
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd
  nameWithType: Image.SaveAdd
- uid: System.Drawing.Image.SelectActiveFrame*
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame
  nameWithType: Image.SelectActiveFrame
- uid: System.Drawing.Image.SetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem
  nameWithType: Image.SetPropertyItem
- uid: System.Drawing.Image.Size*
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Image.Tag*
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
- uid: System.Drawing.Image.VerticalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
- uid: System.Drawing.Image.Width*
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
