### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "Reprezentuje kontroli dostępu i inspekcji zabezpieczeń dla pliku lub katalogu."
  remarks: "Klasa FileSystemSecurity jest klasą bazową dla <xref:System.Security.AccessControl.FileSecurity>i <xref:System.Security.AccessControl.DirectorySecurity>klasy.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Te klasy reprezentujące wszystkie prawa dostępu do plików systemowych lub katalogu i zdefiniuj, jak są poddawane inspekcji prób dostępu.       Klasa FileSystemSecurity reprezentuje prawa dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAccessRule>obiektu, gdy każda reguła inspekcji jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAuditRule>obiektu.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Klasa FileSystemSecurity jest abstrakcję źródłowy system Microsoft Windows plik zabezpieczeń. W tym systemie każdego pliku lub katalogu ma listy kontroli dostępu (DACL), która kontroluje dostęp do pliku lub katalogu, a system listę kontroli dostępu (SACL), który określa próby kontroli dostępu, które są poddawane inspekcji.  <xref:System.Security.AccessControl.FileSystemAccessRule>i <xref:System.Security.AccessControl.FileSystemAuditRule>klasy są abstrakcje wpisów kontroli dostępu (ACE), które obejmują listy DACL i SACL.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Klasa FileSystemSecurity ukrywa wiele elementów listy DACL i SACL; nie masz martwić się o ACE porządkowanie lub DACL wartości null.       Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A>lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metody.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Pobiera wyliczenie, który <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> klasa używana do reprezentowania praw dostępu."
  remarks: "Klasy, które pochodzą z <xref:System.Security.AccessControl.FileSystemSecurity>klasy zastępować właściwość AccessRightType i zwracany typ przejdą do reprezentowania praw dostępu.</xref:System.Security.AccessControl.FileSystemSecurity> Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu wyliczenia poprawne korzystać z każdego obiektu zabezpieczeń."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>reprezentujący obiekt <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> wyliczenie.</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> klasę reprezentującą nowe reguły kontroli dostępu dla określonego użytkownika z określonego uprawnienia kontroli dostępu i flagi."
  remarks: "Zalecanym sposobem tworzenia regułami kontroli dostępu jest użycie konstruktorów <xref:System.Security.AccessControl.FileSystemAccessRule>klasy.</xref:System.Security.AccessControl.FileSystemAccessRule>       Klasa podstawowa jest zwracany typ metody AccessRuleFactory <xref:System.Security.AccessControl.AccessRule>, ale wartość zwracaną mogą bezpiecznie rzutowane do klasy pochodnej.</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, który reprezentuje konto użytkownika."
    - id: accessMask
      type: System.Int32
      description: "Liczba całkowita, która określa typ dostępu."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli reguła dostępu jest dziedziczona; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> wartości, które określa, jak Propagacja maski dostępu do obiektów podrzędnych."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> wartości, które określa sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> wartości, które określa, czy dostęp jest dozwolony lub zabroniony."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "Nowy <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiekt, który reprezentuje nową regułę kontroli dostępu dla określonego użytkownika z określonego uprawnienia kontroli dostępu i flagi."
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code> accessMask </code> parametru wynosi zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> Parametru nie jest ani typu <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, ani typu, takich jak <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> którego można przekonwertować na typ <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Pobiera wyliczenie, który <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> klasa używana do reprezentowania zasad dostępu."
  remarks: "Klasy, które pochodzą z <xref:System.Security.AccessControl.FileSystemSecurity>klasy zastępować właściwość AccessRuleType i zwracany typ przejdą do reprezentowania zasad dostępu.</xref:System.Security.AccessControl.FileSystemSecurity> Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu reguły dostępu do użycia z każdego obiektu zabezpieczeń."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>reprezentujący obiekt <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> klasy</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Dodaje uprawnienie listę kontroli dostępu (ACL) kontroli dostępu określonego bieżącego pliku lub katalogu."
  remarks: "Metoda AddAccessRule dodaje nową regułę do listy reguł zawartych w <xref:System.Security.AccessControl.FileSystemSecurity>obiektu.</xref:System.Security.AccessControl.FileSystemSecurity>       Jeśli dla określonej reguły listy kontroli dostępu (ACL) już istnieje, metoda AddAccessRule nadal doda reguły, z jednym wyjątkiem: <xref:System.Security.AccessControl.FileSystemAccessRule>utworzone za pomocą obiektu <xref:System.Security.AccessControl.AccessControlType>wartość wyliczenia zastępuje obiekt, który został utworzony przy użyciu <xref:System.Security.AccessControl.AccessControlType>wartość wyliczenia.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A>lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metody.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights>flagę <xref:System.Security.AccessControl.FileSystemRights>flagi zostanie automatycznie dodany do reguły.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights>flagę flagi zostaną automatycznie usunięte.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu można dodać do pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Reguła inspekcji określonej dodaje do bieżącego pliku lub katalogu."
  remarks: "Metoda AddAuditRule dodaje nową regułę inspekcji listę reguł zawartych w <xref:System.Security.AccessControl.FileSystemSecurity>obiektu.</xref:System.Security.AccessControl.FileSystemSecurity>       Jeśli istnieje już reguła inspekcji dla określonej reguły, metoda AddAuditRule nadal doda reguły."
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> obiekt, który reprezentuje zasady inspekcji można dodać do pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> Klasa reprezentująca reguła określonego inspekcji dla określonego użytkownika."
  remarks: "Zalecanym sposobem tworzenia zasady inspekcji jest użycie konstruktorów <xref:System.Security.AccessControl.FileSystemAuditRule>klasy.</xref:System.Security.AccessControl.FileSystemAuditRule>       Klasa podstawowa jest zwracany typ metody AuditRuleFactory <xref:System.Security.AccessControl.AuditRule>, ale wartość zwracaną mogą bezpiecznie rzutowane do klasy pochodnej.</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Obiekt, który reprezentuje konto użytkownika."
    - id: accessMask
      type: System.Int32
      description: "Liczba całkowita, która określa typ dostępu."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli reguła dostępu jest dziedziczona; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> wartości, które określa, jak Propagacja maski dostępu do obiektów podrzędnych."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> wartości, które określa sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> wartości, które określa rodzaj inspekcji do wykonania."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "Nowy <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> obiekt reprezentujący reguła określonego inspekcji dla określonego użytkownika."
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code> accessMask </code> właściwości jest równa zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> Właściwość nie jest ani typu <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, ani typu, takich jak <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> którego można przekonwertować na typ <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Pobiera typ, który <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> klasa używana do reprezentowania zasad inspekcji."
  remarks: "Klasy, które pochodzą z <xref:System.Security.AccessControl.FileSystemSecurity>klasy zastępować właściwość AuditRuleType i zwracany typ przejdą do reprezentowania prawa inspekcji.</xref:System.Security.AccessControl.FileSystemSecurity> Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu reguły poprawne inspekcji do użycia z każdego obiektu zabezpieczeń."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>reprezentujący obiekt <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> klasy</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie pasujące akceptować lub odrzucać kontroli dostępu (uprawnienia listy ACL) z bieżącego pliku lub katalogu."
  remarks: "Metoda RemoveAccessRule usuwa wszystkie dopasowania <xref:System.Security.AccessControl.AccessControlType>reguły dostępu lub wszystkich operacjach dopasowania <xref:System.Security.AccessControl.AccessControlType>reguły dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity>obiektu.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Na przykład umożliwia tej metody usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType>reguły dla użytkownika dostępu przez przekazanie <xref:System.Security.AccessControl.FileSystemAccessRule>obiektów utworzonych przy użyciu <xref:System.Security.AccessControl.AccessControlType>wartość <xref:System.Security.AccessControl.FileSystemRights>wartość i konto użytkownika.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Po wykonaniu tej metody RemoveAccessRule usuwa żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.FileSystemRights>wartość lub <xref:System.Security.AccessControl.FileSystemRights>wartość.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A>lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metody.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights>flagę <xref:System.Security.AccessControl.FileSystemRights>flagi zostanie automatycznie dodany do reguły.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights>flagę flagi zostaną automatycznie usunięte.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu do usuwania pliku lub katalogu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli usunięto regułę dostępu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie uprawnienia listę kontroli dostępu (ACL) kontroli dostępu dla określonego użytkownika z bieżącego pliku lub katalogu."
  remarks: "Metoda RemoveAccessRuleAll usuwa wszystkie uprawnienia listę kontroli dostępu (ACL) kontroli dostępu dla określonego użytkownika.  Metoda ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAccessRule>obiektu, z wyjątkiem konta użytkownika.</xref:System.Security.AccessControl.FileSystemAccessRule>       Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A>lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metody.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights>flagę <xref:System.Security.AccessControl.FileSystemRights>flagi zostanie automatycznie dodany do reguły.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights>flagę flagi zostaną automatycznie usunięte.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiekt, który określa użytkownika, do których dostęp kontrolować listę kontroli dostępu (ACL) uprawnień powinna zostać usunięta z pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa jeden pasujący Zezwalaj lub Odmów uprawnień listę kontroli dostępu (ACL) kontroli dostępu z bieżącego pliku lub katalogu."
  remarks: "Metoda RemoveAccessRuleSpecific Usuwa określoną <xref:System.Security.AccessControl.AccessControlType>dostępu zasady lub określony dopasowywania <xref:System.Security.AccessControl.AccessControlType>reguły dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity>obiektu.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Na przykład możesz ta metoda służy do usunięcia określonej <xref:System.Security.AccessControl.AccessControlType>reguły dostępu dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAccessRule>utworzone za pomocą obiektu <xref:System.Security.AccessControl.AccessControlType>wartość, <xref:System.Security.AccessControl.FileSystemRights>wartość i konto użytkownika.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Po wykonaniu tej metody RemoveAccessRuleSpecific usuwa reguła odmowy, która określa <xref:System.Security.AccessControl.FileSystemRights>wartość.</xref:System.Security.AccessControl.FileSystemRights>  Nie powoduje usunięcia żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.FileSystemRights>wartość.</xref:System.Security.AccessControl.FileSystemRights>       Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A>lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metody.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights>flagę <xref:System.Security.AccessControl.FileSystemRights>flagi zostanie automatycznie dodany do reguły.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights>flagę flagi zostaną automatycznie usunięte.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiekt, który określa użytkownika, do których dostęp kontrolować listę kontroli dostępu (ACL) uprawnień powinna zostać usunięta z pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie pasujące akceptować lub odrzucać zasady inspekcji z bieżącego pliku lub katalogu."
  remarks: "Metoda RemoveAuditRule usuwa wszystkie dopasowania <xref:System.Security.AccessControl.AccessControlType>zasady inspekcji lub wszystkich operacjach dopasowania <xref:System.Security.AccessControl.AccessControlType>inspekcji reguły z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity>obiektu.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Na przykład umożliwia tej metody usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType>inspekcji zasady dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule>utworzone za pomocą obiektu <xref:System.Security.AccessControl.AccessControlType>wartość, <xref:System.Security.AccessControl.AuditFlags>wartość i konto użytkownika.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Po wykonaniu tej metody RemoveAuditRule usuwa żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags>wartość lub <xref:System.Security.AccessControl.AuditFlags>wartość.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> obiekt, który reprezentuje reguła inspekcji, aby usunąć z pliku lub katalogu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zasady inspekcji został usunięty; w przeciwnym razie wartość<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa wszystkie zasady inspekcji dla określonego użytkownika z bieżącego pliku lub katalogu."
  remarks: "Metoda RemoveAuditRuleAll usuwa wszystkie zasady inspekcji dla określonego użytkownika.  Ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAuditRule>obiektu, z wyjątkiem konta użytkownika.</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> obiekt, który określa użytkownika, którego zasady inspekcji powinna zostać usunięta z pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Usuwa jeden pasujący akceptować lub odrzucać reguła inspekcji z bieżącego pliku lub katalogu."
  remarks: "Metoda RemoveAuditRuleSpecific usuwa określony dopasowywania <xref:System.Security.AccessControl.AccessControlType>inspekcji reguły lub określony dopasowywania <xref:System.Security.AccessControl.AccessControlType>zasady inspekcji z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity>obiektu.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Na przykład możesz ta metoda służy do usunięcia określonej <xref:System.Security.AccessControl.AccessControlType>zasady inspekcji dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule>obiektów utworzonych przy użyciu <xref:System.Security.AccessControl.AccessControlType>wartość <xref:System.Security.AccessControl.AuditFlags>wartość i konto użytkownika.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Po wykonaniu tej metody RemoveAuditRuleSpecific usuwa tylko reguła odmowy, która określa <xref:System.Security.AccessControl.AuditFlags>wartość.</xref:System.Security.AccessControl.AuditFlags>  Nie powoduje usunięcia żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags>wartość.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> obiekt, który reprezentuje reguła inspekcji, aby usunąć z pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Dodaje uprawnienie listę kontroli dostępu (ACL) kontroli dostępu określonego bieżącego pliku lub katalogu i usuwa wszystkie uprawnienia ACL dopasowania."
  remarks: "Metoda ResetAccessRule dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określonego lub spowoduje zastąpienie wszelkich identyczne reguły list kontroli dostępu, zgodne `rule` parametru.  Na przykład jeśli `rule` określa parametr <xref:System.Security.AccessControl.FileSystemRights>wartości, a także metoda ResetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights>wartość identyczne zasady zostaną zastąpione.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Jeśli metoda ResetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights>wartość reguły identyczne również zostaną zastąpione.</xref:System.Security.AccessControl.FileSystemRights>       Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A>lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metody.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu można dodać do pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ustawia uprawnienia dostępu do określonego formantu listę kontroli dostępu (ACL) dla bieżącego pliku lub katalogu."
  remarks: "Metoda SetAccessRule dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określonego lub spowoduje zastąpienie wszelkich identyczne reguły list kontroli dostępu, zgodne <xref:System.Security.AccessControl.FileSystemRights>wartość `rule` parametru.</xref:System.Security.AccessControl.FileSystemRights>  Na przykład jeśli `rule` określa parametr <xref:System.Security.AccessControl.FileSystemRights>wartości, a także metoda SetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights>wartość identyczne zasady zostaną zastąpione.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Jeśli metoda SetAccessRule znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights>wartość identyczne reguła nie zostanie zastąpiona.</xref:System.Security.AccessControl.FileSystemRights>       Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A>lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metody.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> obiekt, który reprezentuje uprawnienia listę kontroli dostępu (ACL) kontroli dostępu, aby ustawić dla pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ustawia zasady inspekcji określony dla bieżącego pliku lub katalogu."
  remarks: "Metoda SetAuditRule Dodaje regułę określonego inspekcji lub zastępuje żadnych reguł identyczne inspekcji, które pasują <xref:System.Security.AccessControl.FileSystemRights>wartość `rule` parametru.</xref:System.Security.AccessControl.FileSystemRights>  Na przykład jeśli `rule` określa parametr <xref:System.Security.AccessControl.FileSystemRights>wartości, a także metoda SetAuditRule znajdzie identyczne inspekcji regułę, która określa <xref:System.Security.AccessControl.FileSystemRights>wartość identyczne zasady zostaną zastąpione.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Jeśli metoda SetAuditRule znajdzie reguła inspekcji identyczne, który określa <xref:System.Security.AccessControl.FileSystemRights>wartość identyczne reguła nie zostanie zastąpiona.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> obiekt, który reprezentuje zasady inspekcji można ustawić dla pliku lub katalogu."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
