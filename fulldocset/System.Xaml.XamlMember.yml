### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlMember
  id: XamlMember
  children:
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.GetHashCode
  - System.Xaml.XamlMember.GetXamlNamespaces
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupCustomAttributeProvider
  - System.Xaml.XamlMember.LookupDeferringLoader
  - System.Xaml.XamlMember.LookupDependsOn
  - System.Xaml.XamlMember.LookupInvoker
  - System.Xaml.XamlMember.LookupIsAmbient
  - System.Xaml.XamlMember.LookupIsEvent
  - System.Xaml.XamlMember.LookupIsReadOnly
  - System.Xaml.XamlMember.LookupIsReadPublic
  - System.Xaml.XamlMember.LookupIsUnknown
  - System.Xaml.XamlMember.LookupIsWriteOnly
  - System.Xaml.XamlMember.LookupIsWritePublic
  - System.Xaml.XamlMember.LookupTargetType
  - System.Xaml.XamlMember.LookupType
  - System.Xaml.XamlMember.LookupTypeConverter
  - System.Xaml.XamlMember.LookupUnderlyingGetter
  - System.Xaml.XamlMember.LookupUnderlyingMember
  - System.Xaml.XamlMember.LookupUnderlyingSetter
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.ToString
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  langs:
  - csharp
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
  type: Class
  summary: "Udostępnia identyfikatora systemowego typu XAML dla elementów członkowskich typu XAML. Identyfikator jest używany przez czytelników XAML i zapisywania XAML podczas przetwarzania elementu członkowskiego węzłów (gdy czytnik XAML jest ustawiony na <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>), a także na ogólne logiki system typu XAML."
  remarks: "XamlMember służy do zwracania informacji dotyczących składnika XAML trzy metody: standardowy wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) odbicia; technika odbicia tylko odwołanie do wywoływania wewnętrznych interfejsów API tego bit użycie zoptymalizowanych flagi; lub wywołanie wirtualnej zastąpień o `Lookup*` interfejsu API, który jest zapewniana przez podklasy XamlMember możliwe. Dla większości używa interfejsów API architektury .NET Framework XAML usług i interfejsu API XamlMember możesz użyć domyślny kontekst schematu XAML. Domyślny kontekst schematu XAML dla programu .NET Framework XAML Services używa kopii systemu typu CLR. Dzięki temu czytników XAML i zapisywania XAML do pracy z dowolnego typu lub elementu członkowskiego, który jest zdefiniowany w lub w inny sposób dostępne do, środowiska CLR i jego technik odbicia.      ## Interfejsy API wyszukiwania * i XamlMember klas pochodnych XamlMember definiuje kilka wirtualnych elementów członkowskich, które klasy pochodne mogą zastąpić. Członkowie mają nazwy, zawsze rozpoczynających się od ciągu `Lookup`. W pozostałej części interfejsu API nazwę odwołania następnie właściwość, która wpływa na metodę wirtualną. Na przykład klasy pochodnej XamlMember mogą zastąpić <xref:System.Xaml.XamlMember.LookupTargetType%2A>kontrolować, jakie właściwości zdefiniowane base <xref:System.Xaml.XamlMember.TargetType%2A>zwraca w klasie pochodnej.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A> Można przewidzieć zwracanych wartości dla właściwości XamlMember lub istniejące klasy pochodne przeczytaj dokumentację, aby uzyskać odpowiednie `Lookup*` metody.       Celem `Lookup*` metod jest zapewnienie metody rozszerzenia system typu XAML, która zawiera klasę podstawową XamlMember. Wyprowadzanie z XamlMember i zastępowanie `Lookup` wirtualne elementy członkowskie, można zdefiniować pojęcie elementu członkowskiego XAML dla schematu XAML w systemie typów języka XAML nie będąc związanym z charakterystykę bazowego typu systemu lub technologii. Można również użyć podany kontekst schematu XAML w ramach tego programu i nadal zwracania wyników, który ma.       Na przykład należy wziąć pod uwagę właściwości XamlMember <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Ta właściwość informuje wywołań tej operacji, takich jak przy użyciu <xref:System.Xaml.XamlWriter>dla serializacji można zapisać wartości dla tego elementu członkowskiego na obiekcie docelowym.</xref:System.Xaml.XamlWriter> W implementacji domyślnej określenie, czy element członkowski jest zapisywalny jest nawiązywane za pomocą techniki odbicia przed zapasowy CLR <xref:System.Type>i jej elementów członkowskich ( <xref:System.Reflection.MemberInfo>).</xref:System.Reflection.MemberInfo> </xref:System.Type> W związku z tym domyślnie system typów języka XAML zależy od system typów CLR. Jednak usunąć tę zależność potrzeby system typu XAML raportu z <xref:System.Xaml.XamlMember.IsWritePublic%2A>przez zastąpienie interfejsu API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> </xref:System.Xaml.XamlMember.IsWritePublic%2A> W ramach zastąpienia możesz użyć innych oznaczeń, takich jak metadanych, które dotyczą technologii, z tabeli odnośników głównego jest zoptymalizowana pod kątem stałym słownictwa XAML lub różne inne strategie do ustalania, czy element członkowski XAML jest zapisywalny w słownictwa XAML.      ## Konstruowanie XamlMember bez XAML schematu kontekstu najbardziej wymagają konstruktorów XamlMember <xref:System.Xaml.XamlSchemaContext>jako część ich inicjowania.</xref:System.Xaml.XamlSchemaContext> <xref:System.Xaml.XamlSchemaContext>Jest także niezbędne dla wielu wewnętrzny <xref:System.Xaml.XamlSchemaContext>operacji, takich jak uzyskanie informacji, które są przekazywane z zapasowego typu.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlSchemaContext> Podczas pracy z interfejsem API XamlMember zwykle masz <xref:System.Xaml.XamlSchemaContext>dostępnej z otaczającym konstrukcji, takich jak <xref:System.Xaml.XamlWriter>.</xref:System.Xaml.XamlWriter> </xref:System.Xaml.XamlSchemaContext> W takim przypadku można przekazać <xref:System.Xaml.XamlSchemaContext>odwoływać się do wszystkich XAML typu wywołań systemowych wymagających kontekst schematu XAML.</xref:System.Xaml.XamlSchemaContext>       Jeden konstruktor określonych <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>wymaga <xref:System.Xaml.XamlSchemaContext>.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Jednak XamlMember, który jest tworzony z <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>zwraca podpis `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>       Dla ścieżki obciążenia, która obejmuje <xref:System.Xaml.XamlObjectWriter>, taki element członkowski nie może zostać zapisany do obiektu wykresu.</xref:System.Xaml.XamlObjectWriter> Przy użyciu implementacji usługi .NET Framework XAML, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>wywołać zgłasza <xref:System.Xaml.XamlObjectWriterException>po XamlMember odpowiednich raportów `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Nie należy konstruować XamlMember, który ma wartość `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>chyba, że wdrożenie może obsłużyć wyjątki od <xref:System.Xaml.XamlObjectWriter>, lub w inny sposób, aby dopasować <xref:System.Xaml.XamlObjectWriter>zachowanie.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> Na przykład jeden lub więcej z następujących czynności może mieć wartość true implementacji:-kontekst schematu XAML jest dostępny później.      — Użyj wzorca wywołujący element członkowski.      -Świadomie przesłonić <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>w niestandardowych zapisywania XAML.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlMember>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> przy użyciu systemu typów CLR <xref:System.Reflection.EventInfo>i <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.EventInfo>"
  remarks: "Użyj tego konstruktora, jeśli element członkowski reprezentuje zdarzenie (właściwość punktu połączenia programu obsługi zdarzeń)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "System typów CLR <xref:System.Reflection.EventInfo>reprezentujący element członkowski zdarzeń.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> przy użyciu systemu typów CLR <xref:System.Reflection.PropertyInfo>i <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  remarks: "Użyj tego konstruktora, jeśli element członkowski reprezentuje właściwość (a w szczególności nie jest połączenie programu obsługi zdarzeń)."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "System typów CLR <xref:System.Reflection.PropertyInfo>reprezentujący elementu właściwości.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> przy użyciu systemu typów CLR <xref:System.Reflection.EventInfo>i <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, takie jak <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informacji.</xref:System.Reflection.EventInfo>"
  remarks: "Użyj tego konstruktora, jeśli element członkowski reprezentuje zdarzenia (lub punktu połączenia właściwością programu obsługi zdarzeń)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "System typów CLR <xref:System.Reflection.EventInfo>reprezentujący element członkowski zdarzeń.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> Implementację, która obsługuje w czasie wykonywania odbicia wywołuje przed <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> przy użyciu odbicia <xref:System.Reflection.PropertyInfo>i <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, takie jak <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informacji.</xref:System.Reflection.PropertyInfo>"
  remarks: "Ten konstruktor należy używać tylko wtedy, gdy element członkowski reprezentuje właściwości i jeśli nie jest połączenie programu obsługi zdarzeń."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "System typów CLR <xref:System.Reflection.PropertyInfo>reprezentujący elementu właściwości.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> Wywołuje implementację, która obsługuje wywołania środowiska wykonawczego przed <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasy dla <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentujący zdarzenie możliwe do dołączenia."
  remarks: "Użyj tego konstruktora, jeśli element członkowski reprezentuje elementu członkowskiego zdarzenia możliwe do dołączenia."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "Nazwa ciągu możliwej zdarzenia."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "System typów CLR <xref:System.Reflection.MethodInfo>obsługi <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> metody dołączalny element członkowski na tworzenie kopii implementacji.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasy za pomocą nazwy ciągu i typ deklarujący <xref href=&quot;System.Xaml.XamlType&quot;> </xref> informacji. A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> który jest tworzony z tym podpis ma zasadnicze ograniczenia; zobacz uwagi."
  remarks: "A <xref:System.Xaml.XamlMember>który jest tworzony z XamlMember zwraca podpis `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember>       Dla ścieżki obciążenia, która obejmuje <xref:System.Xaml.XamlObjectWriter>, taki element członkowski nie może zostać zapisany do obiektu wykresu.</xref:System.Xaml.XamlObjectWriter> Przy użyciu implementacji usług .NET Framework XAML <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>wywołać zgłasza <xref:System.Xaml.XamlObjectWriterException>podczas odpowiedniego <xref:System.Xaml.XamlMember>Raporty `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Nie należy konstruować <xref:System.Xaml.XamlMember>z <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` chyba, że wdrożenie może obsłużyć wyjątki od <xref:System.Xaml.XamlObjectWriter>, lub w inny sposób, aby dopasować <xref:System.Xaml.XamlObjectWriter>zachowanie.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> Na przykład jeden lub więcej z następujących czynności może mieć wartość true implementacji:-kontekst schematu XAML jest dostępny później.      — Użyj wzorca wywołujący element członkowski.      -Świadomie przesłonić <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>w niestandardowych zapisywania XAML.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa ciągu elementu członkowskiego."
    - id: declaringType
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> Informacje dotyczące typu deklarującego."
    - id: isAttachable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że element członkowski jest możliwy do dołączenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>declaringType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasy dla <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentujący dołączalna właściwość."
  remarks: "Jeśli element członkowski reprezentuje dołączalna właściwość, należy użyć tego konstruktora."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "Nazwa ciągu właściwości z możliwością dołączenia."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "System typów CLR <xref:System.Reflection.MethodInfo>dla <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "System typów CLR <xref:System.Reflection.MethodInfo>dla <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasy dla <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentujący możliwej zdarzenia, w tym <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informacji."
  remarks: "Użyj tego konstruktora, jeśli element członkowski reprezentuje elementu członkowskiego zdarzenia możliwe do dołączenia."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "Nazwa ciągu możliwej zdarzenia."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "System typów CLR <xref:System.Reflection.MethodInfo>obsługi <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> metody dołączalny element członkowski na tworzenie kopii implementacji.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> Wywołuje implementację, która obsługuje wywołania środowiska wykonawczego przed <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasy dla <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentujący dołączalna właściwość, w tym <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informacji."
  remarks: "Użyj tego konstruktora, jeśli element członkowski reprezentuje dołączalna właściwość elementu członkowskiego."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "Nazwa ciągu właściwości z możliwością dołączenia."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "System typów CLR <xref:System.Reflection.MethodInfo>dla <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "System typów CLR <xref:System.Reflection.MethodInfo>dla <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> Kontekstu, które kwalifikują się element członkowski."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> Wywołuje implementację, która obsługuje wywołania środowiska wykonawczego przed <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeclaringType
  id: DeclaringType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera <xref href=&quot;System.Xaml.XamlType&quot;> </xref> dla typu, który deklaruje element członkowski, który jest skojarzony z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ta wartość jest zwykle ustawiana tylko podczas inicjowania i zazwyczaj nie jest `null`.      > [!IMPORTANT] > Właściwości DeclaringType informacje mogą być przekazywane w przez konstruktorów dla inicjowania. Wywołanie bezpośrednio konstruktory podstawowe, inicjowanie dla <xref:System.Xaml.XamlMember>pochodnej klasy można pominąć niektóre wartości testy, które zostały wprowadzone w klasie podstawowej.</xref:System.Xaml.XamlMember> Inicjowanie pochodnej można zmienić informacje dotyczące relacji zgłoszone członka typu elementu członkowskiego XAML, tak, aby go już wyrównane w oczekiwany sposób informacje o systemie typu jego podstawowej deklaracji CLR. Wszelkie kontroli krytyczny dla zabezpieczeń deklarowanie informacji o typie w zamian użyj podstawowego typu środowiska CLR."
  syntax:
    content: public System.Xaml.XamlType DeclaringType { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> Dla typu, który deklaruje element członkowski, który jest skojarzony z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; obiektów zadeklarowany jako obiekt, który służy do ładowanie odłożone języka XAML."
  remarks: "Wywoływanie DeferringLoader wywołuje <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> Dzieje się to w przypadkach, w którym logiki początkowego odbicia wewnętrznych nie już ustawiona informacje."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; z <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> ograniczenie ogólnego."
  overload: System.Xaml.XamlMember.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DependsOn
  id: DependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera listę <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> obiektów. Raport tych elementów członkowskich, do których istnieją relacje zależności dla kolejność inicjowania względem to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Wywoływanie DependsOn wywołuje <xref:System.Xaml.XamlMember.LookupDependsOn%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupDependsOn%2A> Dzieje się to w przypadkach, w którym logiki początkowego odbicia wewnętrznych nie już ustawiona informacje.       `DependsOn` Można zastosować wzorca do przypadków modelu obiektów, które celowo są sprzeczne z ogólną zasadą XAML. Ogólną zasadą XAML jest, że elementy członkowskie typu, które nie są przekazywane jako tekst inicjowania (lub metody fabryki w XAML 2009) musi mieć możliwość można przypisać w dowolnej kolejności. Stosując `DependsOn` wzorca do elementu członkowskiego, można nakazać autorów XAML zawsze przetworzyć przywoływany element członkowski przed tego elementu członkowskiego. Można zastosować tego wzorca w sytuacjach, gdy wartość bieżącego elementu członkowskiego wymaga kontekstu lub inne informacje, które są dostępne tylko po ustawieniu innego członka.       `DependsOn` Wzorzec powinny być stosowane rozważnie i zarezerwowane dla scenariuszy właściwości tam, gdzie służy architektury cel. Dużej liczby zależności mieć możliwość spowolnić jej przetwarzanie XAML. Ponadto można uzyskać zależności cykliczne jest, w takim przypadku zachowanie przetwarzania XAML jest niezdefiniowany.       Przykład `DependsOn` z WPF scenariusze niektórych właściwości na <xref:System.Windows.Controls.ControlTemplate>i <xref:System.Windows.DataTemplate>na <xref:System.Windows.Trigger>, a na <xref:System.Windows.Setter>.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> </xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Lista <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> obiektów."
  overload: System.Xaml.XamlMember.DependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do porównania z tym obiektem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący obiekt jest taki sam <code> obj </code> parametru; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  id: Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt tego samego typu."
  syntax:
    content: public bool Equals (System.Xaml.XamlMember other);
    parameters:
    - id: other
      type: System.Xaml.XamlMember
      description: "Obiekt do porównania z tym obiektem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący obiekt jest taki sam <code> other </code> parametru; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca wartość skrótu dla tego obiektu."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Liczba całkowita wartość skrótu."
  overload: System.Xaml.XamlMember.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca listę przestrzeni nazw XAML, gdzie może istnieć tego elementu członkowskiego XAML."
  remarks: "Domyślna implementacja zwraca <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>wynik, <xref:System.Xaml.XamlMember.DeclaringType%2A>który jest skojarzony z tym <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.DeclaringType%2A> wywołania</xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Lista identyfikatorów przestrzeni nazw XAML jako ciągi."
  overload: System.Xaml.XamlMember.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Invoker
  id: Invoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementację, która jest skojarzona z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "`Invoker` Wzorzec jest zaawansowane techniki rozszerzenia system typu XAML. `Invoker` Wzorzec umożliwia wstrzyknąć zachowanie mapowania typu innego schematu, używając nadal definicji system typu XAML z usługami .NET Framework XAML.       Jeśli <xref:System.Xaml.XamlMember.LookupInvoker%2A>zastąpienia zwraca `null`, lub Jeśli domyślna implementacja zwraca `null` ponieważ brakuje w nim <xref:System.Xaml.XamlMember.UnderlyingMember%2A>dla tej <xref:System.Xaml.XamlMember>Właściwości wywołujący zwraca <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupInvoker%2A>       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>jest ustawieniem domyślnym.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> Jest tak w przypadku większości operacji korzystające z usług .NET Framework XAML i domyślny kontekst schematu XAML i gdzie zastąpienia nie określonych `Invoker` wzorce są przekazywane do tworzenia obiektów systemowych typu XAML.       Wywoływanie wywołujący wywołuje <xref:System.Xaml.XamlMember.LookupInvoker%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> Implementację, która jest skojarzona z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> został zgłoszony jako właściwością otoczenia."
  remarks: "Wywoływanie IsAmbient wywołuje <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Dzieje się to w implementacjach gdzie logiki początkowego odbicia wewnętrznych nie już ustawiona informacje.       Sprawdzanie właściwości otaczających jest zwykle są częścią logika przetwarzania XAML, aby upewnić się, że wartości, które opierają się na użycie otoczenia kwalifikację typu obiektów i może działać prawidłowo. Interfejsy API usług .NET Framework XAML i domyślny kontekst schematu XAML wypełnia tej wartości w oparciu o autorstwa z <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> Domyślna implementacja <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>wykorzystuje istniejące tego <xref:System.Windows.Markup.AmbientAttribute>technika który zwraca `true` Jeśli <xref:System.Windows.Markup.AmbientAttribute>istnieje w deklaracji elementu członkowskiego.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute> </xref:System.Xaml.XamlMember.LookupIsAmbient%2A>       <xref:System.Windows.Markup.AmbientAttribute>znajduje się na elementach członkowskich kilka typów WPF, która obejmuje <xref:System.Windows.Application>, <xref:System.Windows.Setter>i <xref:System.Windows.Style>.</xref:System.Windows.Style> </xref:System.Windows.Setter> </xref:System.Windows.Application></xref:System.Windows.Markup.AmbientAttribute> Również znajduje się na <xref:System.Windows.ResourceDictionary>typu, który connotes, że każdy członek używającą <xref:System.Windows.ResourceDictionary>zgodnie z jego typ należy traktować jako otoczenia nawet wtedy, gdy element członkowski nie jest przypisana w szczególności.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jest zgłoszone jako właściwość otoczenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAttachable
  id: IsAttachable
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jest dołączalny element członkowski."
  remarks: "Wartość IsAttachable jest zainicjowany konstruktor, który został użyty do utworzenia <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> w oparciu"
  syntax:
    content: public bool IsAttachable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jest dołączalny element członkowski; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAttachable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsDirective
  id: IsDirective
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jest dyrektywą XAML."
  remarks: "Wartość IsDirective jest zainicjowany konstruktor, który został użyty do utworzenia <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> w oparciu Podstawowym <xref:System.Xaml.XamlMember>konstruktorów zainicjować tak, aby IsDirective `false`.</xref:System.Xaml.XamlMember> Jednak <xref:System.Xaml.XamlDirective>klasy ( <xref:System.Xaml.XamlMember>klasy) inicjuje tak, aby IsDirective `true`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlDirective>       Jeśli chcesz zgłosić IsDirective jako `true` wywołań niestandardowej klasy schematu XAML dla członków XAML, upewnij się, pochodzi z <xref:System.Xaml.XamlDirective>ponieważ jest to jedyny sposób włączania tego zachowania.</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public bool IsDirective { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jest XAML dyrektywy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsDirective*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsEvent
  id: IsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje elementu członkowskiego zdarzenia."
  remarks: "Wywoływanie IsEvent wywołuje <xref:System.Xaml.XamlMember.LookupIsEvent%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupIsEvent%2A>"
  syntax:
    content: public bool IsEvent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje zdarzenie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jest inicjowany z prawidłowym <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> ciągu jako jego <xref:System.Xaml.XamlMember.Name*>.</xref:System.Xaml.XamlMember.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jest inicjowany z prawidłowym <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> , ciąg; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadOnly
  id: IsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje element członkowski tylko do odczytu."
  remarks: "Wywoływanie IsReadOnly wywołuje <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje element członkowski tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadPublic
  id: IsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje element członkowski o można wywołać publicznej <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> metody dostępu."
  remarks: "IsReadPublic wartość sprawdza, czy <xref:System.Xaml.XamlMember.DeclaringType%2A>jest publiczny.</xref:System.Xaml.XamlMember.DeclaringType%2A> Jeśli <xref:System.Xaml.XamlMember.DeclaringType%2A>jest niepubliczne, `get` metody dostępu nie można wywołać w praktycznym sposobem, a zwraca IsReadPublic `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Wywoływanie IsReadPublic wywołuje <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>Metody jest wirtualna i w związku z tym może zostać zastąpiona.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR. Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR."
  syntax:
    content: public bool IsReadPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje można wywołać publicznej <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> akcesor; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy element członkowski nie jest rozpoznawana przez bazowego systemu, który jest używany do rozpoznawania typu i element członkowski."
  remarks: "A <xref:System.Xaml.XamlMember>który jest tworzony z <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>zwraca podpis `true` dla IsUnknown.</xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> </xref:System.Xaml.XamlMember>       Dla ścieżki obciążenia, która obejmuje <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember>z `true` dla IsUnknown nie można zapisać do obiektu wykresu.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriter> W domyślnej implementacji w .NET Framework XAML usług API <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>wywołać zgłasza <xref:System.Xaml.XamlObjectWriterException>podczas odpowiedniego <xref:System.Xaml.XamlMember>Raporty `true` dla IsUnknown.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Nie należy konstruować <xref:System.Xaml.XamlMember>, który ma wartość `true` dla IsUnknown chyba, że wdrożenie może obsłużyć wyjątki od <xref:System.Xaml.XamlObjectWriter>, lub w inny sposób, aby dopasować <xref:System.Xaml.XamlObjectWriter>zachowanie.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember>       Wywoływanie IsUnknown wywołuje <xref:System.Xaml.XamlMember.LookupIsUnknown%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupIsUnknown%2A>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element członkowski nie jest rozwiązywana; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli element członkowski jest rozpoznawana."
  overload: System.Xaml.XamlMember.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWriteOnly
  id: IsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje tylko do zapisu elementu członkowskiego."
  remarks: "Wywoływanie IsWriteOnly wywołuje <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>"
  syntax:
    content: public bool IsWriteOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje tylko do zapisu elementu członkowskiego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWritePublic
  id: IsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera wartość wskazującą, czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje element członkowski, który ma można wywołać publicznej <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> metody dostępu."
  remarks: "Uwzględnia wartość IsWritePublic czy <xref:System.Xaml.XamlMember.DeclaringType%2A>jest publiczny w ramach określania.</xref:System.Xaml.XamlMember.DeclaringType%2A> Jeśli <xref:System.Xaml.XamlMember.DeclaringType%2A>jest niepubliczne, `set` metody dostępu nie można wywołać w praktycznym sposobem, a zwraca IsWritePublic `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Wywoływanie IsWritePublic wywołuje <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>Metody jest wirtualna i w związku z tym może zostać zastąpiona.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR. Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR."
  syntax:
    content: public bool IsWritePublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje można wywołać publicznej <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> akcesor; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Po zaimplementowaniu w klasie pochodnej zwraca <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementacji."
  remarks: "Przesłonić tę metodę, aby zapewnić wewnętrzny odbicia z alternatywny sposób uzyskiwania wartości atrybutów CLR. W przypadku braku przesłonięcie wewnętrznego reflektora używa typowe logiki odbicia CLR, takie jak wywołania <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>       Domyślna implementacja zwraca `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "<xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> Implementacji."
  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; obiektów zadeklarowany jako obiekt, który służy do ładowanie odłożone języka XAML."
  remarks: "Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.DeferringLoader%2A>Właściwości.</xref:System.Xaml.XamlMember.DeferringLoader%2A> Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlMember.DeferringLoader%2A>Aby zwrócić wartość, która różni się od wartości, który został włączony przez domyślny odbicia wewnętrznych, i również udostępniając niestandardowe <xref:System.Xaml.Schema.XamlMemberInvoker>informacji.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DeferringLoader%2A>       Domyślna implementacja zwraca obiekt albo odczytując <xref:System.Windows.Markup.XamlDeferLoadAttribute>lub przy użyciu <xref:System.Xaml.XamlDeferringLoader>z typ deklarujący.</xref:System.Xaml.XamlDeferringLoader> </xref:System.Windows.Markup.XamlDeferLoadAttribute> Jeśli żaden obiekt jest dostępny, ta metoda może zwracać `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; mający <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> ograniczenie ogólnego."
  overload: System.Xaml.XamlMember.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca listę <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> obiektów. Elementy na liście raportu elementów członkowskich, do których istnieją relacje zależności dla kolejność inicjowania względem to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.DependsOn%2A>Właściwości.</xref:System.Xaml.XamlMember.DependsOn%2A> Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlMember.DependsOn%2A>Aby zwrócić wartość, która różni się od wartości, który został włączony przez domyślny odbicia wewnętrznych, i również udostępniając niestandardowe <xref:System.Xaml.Schema.XamlMemberInvoker>informacji.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DependsOn%2A>       To miejsce w przypadku <xref:System.Windows.Markup.DependsOnAttribute>.</xref:System.Windows.Markup.DependsOnAttribute> atrybutu implementacji składników zapisywania i odczytywania WPF XAML Domyślna implementacja używa tego istniejących <xref:System.Windows.Markup.DependsOnAttribute>technika.</xref:System.Windows.Markup.DependsOnAttribute>       Przesłonić tę metodę, jeśli nie używasz <xref:System.Windows.Markup.DependsOnAttribute>dla tego celu i mają zamiar zastąpić technika tego wskazująca kolejność przetwarzania właściwości własnych technice.</xref:System.Windows.Markup.DependsOnAttribute> Jeśli nie zamierzasz obsługuje kolejność przetwarzania właściwości, można użyć w implementacji domyślnej, ponieważ go nie zwróciło żadnych wyników, który jest odpowiedni.       Lista jest tylko do odczytu."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Lista <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> obiektów."
  overload: System.Xaml.XamlMember.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> skojarzonego z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ta metoda jest wywoływana przez wywołania <xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A>       Domyślna implementacja nie wymaga, aby <xref:System.Xaml.XamlMember>być skonstruowany przy użyciu jednego z konstruktorów, które przekazać początkowego <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember> Jednak <xref:System.Xaml.XamlMember.UnderlyingMember%2A>wartości musi istnieć dla <xref:System.Xaml.XamlMember>; w przeciwnym razie wartość domyślna implementacja zwraca `null`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ta metoda musi również pochodzić z <xref:System.Xaml.Schema.XamlMemberInvoker>i zamierzony zwracany typ klasy pochodnej.</xref:System.Xaml.Schema.XamlMemberInvoker> Jeśli `null`, <xref:System.Xaml.XamlMember.Invoker%2A>zwraca <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>dotyczące obiektów wywołujących.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "The <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref> information for this <xref href=&quot;System.Xaml.XamlMember&quot;></xref>; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlMember.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> został zgłoszony jako właściwością otoczenia."
  remarks: "Ta metoda jest wywoływana przez wewnętrzny wywołania, które Sprawdź, czy informacje o właściwościach otaczającego XAML. Właściwość otoczenia zachowanie jest uwzględnione w publicznych działanie interfejsu API czytników XAML i zapisywania XAML. Wewnętrzny wywołania, które odwołują się LookupIsAmbient są zazwyczaj część logiki przetwarzania XAML, aby upewnić się, że wartości, które opierają się na użycie otoczenia kwalifikację typu obiektów i może działać prawidłowo. Domyślna implementacja usługi XAML .NET Framework używa przypisywanie uzyskać te informacje z odbicia przez tworzenie kopii typów CLR. W szczególności Domyślna implementacja sprawdza, czy <xref:System.Windows.Markup.AmbientAttribute>i zwraca `true` dla LookupIsAmbient Jeśli <xref:System.Windows.Markup.AmbientAttribute>istnieje w definicji elementu członkowskiego.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute>       Przesłonić tę metodę, jeśli nie używasz <xref:System.Windows.Markup.AmbientAttribute>dla tego celu i zamierzasz zamienić technika tego wskazująca właściwości otaczających XAML z własnych technika.</xref:System.Windows.Markup.AmbientAttribute>       Przykład interfejsy API z atrybutu z <xref:System.Windows.Markup.AmbientAttribute>i <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.</xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName> </xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> </xref:System.Windows.Markup.AmbientAttribute> WPF"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zgłosić to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jako właściwość otoczenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje zdarzenie."
  remarks: "Implementacja domyślnych operacji sprawdzania czy <xref:System.Xaml.XamlMember.UnderlyingMember%2A>jest typu <xref:System.Reflection.EventInfo>, a jeśli tak jest, zwraca `true`.</xref:System.Reflection.EventInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.IsEvent%2A>.</xref:System.Xaml.XamlMember.IsEvent%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny dostępnych metadanych, który może zostać zinterpretowany ustalenie XAML typu oświadczenia systemu na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w raporcie tego <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje zdarzenie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje właściwość przeznaczone tylko do odczytu."
  remarks: "Domyślna implementacja zwraca `true` Jeśli <xref:System.Xaml.XamlMember.UnderlyingMember%2A>istnieje, ale publiczny `set` akcesor nie istnieje dla niego, zgodnie z ustaleniami odbicia wewnętrznych.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</xref:System.Xaml.XamlMember.IsReadOnly%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny dostępnych metadanych, który może zostać zinterpretowany ustalenie XAML typu oświadczenia systemu na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zgłosić to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jako zamierzone właściwość tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje właściwość, która ma publiczny <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> metody dostępu."
  remarks: "Domyślna implementacja zwraca wyniki na podstawie odbicia wewnętrznych lub Negacja <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, w tej kolejności przetwarzania.</xref:System.Xaml.XamlMember.IsWriteOnly%2A>       LookupIsReadPublic zwraca czy ten element członkowski jest publiczny; Zwraca `true` dla publicznego elementu członkowskiego na nonpublic, typem deklarującym. Użyj <xref:System.Xaml.XamlMember.IsReadPublic%2A>zamiast tego, jeśli chcesz również wziąć pod uwagę widoczność typ deklarujący.</xref:System.Xaml.XamlMember.IsReadPublic%2A>       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</xref:System.Xaml.XamlMember.IsReadPublic%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > LookupIsReadPublic metody jest wirtualna i w związku z tym może zostać zastąpiona. Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR. Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR."
  syntax:
    content: protected virtual bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje właściwość, która ma publiczny <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> akcesor; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje element członkowski, który nie jest rozpoznawana przez bazowego systemu, który jest używany do rozpoznawania typu i element członkowski."
  remarks: "Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> Domyślna implementacja zwraca wyniki, które są oparte na obu odbicia wewnętrznych lub Sprawdzanie, czy dla `null` wartość <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, w tej kolejności przetwarzania.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje nie można rozpoznać elementu członkowskiego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje element członkowski, który ma publicznego <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> , ale nie publiczny akcesor <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> metody dostępu."
  remarks: "Domyślna implementacja zwraca `true` Jeśli <xref:System.Xaml.XamlMember.UnderlyingMember%2A>istnieje mający publiczny `set` metody dostępu i nonpublic `get` dostępu, zgodnie z ustaleniami odbicia wewnętrznych.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</xref:System.Xaml.XamlMember.IsWriteOnly%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje tylko do zapisu elementu członkowskiego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca czy to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje element członkowski, który ma publicznego <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> metody dostępu."
  remarks: "Domyślna implementacja zwraca wyniki na podstawie odbicia wewnętrznych lub Negacja <xref:System.Xaml.XamlMember.IsReadOnly%2A>, w tej kolejności przetwarzania.</xref:System.Xaml.XamlMember.IsReadOnly%2A>       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > LookupIsWritePublic metody jest wirtualna i w związku z tym może zostać zastąpiona. Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR. Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR."
  syntax:
    content: protected virtual bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> reprezentuje zapisu elementu członkowskiego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca <xref href=&quot;System.Xaml.XamlType&quot;> </xref> typu gdzie <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> może istnieć."
  remarks: "Domyślna implementacja rozróżnia możliwej i niedołączalnego elementów członkowskich. Dla członków niedołączalnego LookupTargetType zawsze zwraca <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> Dla członków możliwej LookupTargetType zwraca wynik oparte na sprawdzenie <xref:System.Xaml.XamlMember.UnderlyingMember%2A>Typ parametru metody dostępu i interpretuje, że typ oparty na kontekst schematu XAML.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.TargetType%2A>.</xref:System.Xaml.XamlMember.TargetType%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Typ gdzie <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> może istnieć. Zobacz uwagi."
  overload: System.Xaml.XamlMember.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupType
  id: LookupType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca <xref href=&quot;System.Xaml.XamlType&quot;> </xref> typu, który jest używany przez element członkowski. Zobacz uwagi."
  remarks: "Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlMember.Type%2A>Aby zwrócić wartość, która różni się od wartości, który został włączony przez domyślny odbicia wewnętrznych, i również udostępniając niestandardowe <xref:System.Xaml.Schema.XamlMemberInvoker>informacji.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.Type%2A>       Domyślna implementacja używa różne ścieżki i pojęciach znaczenie dla zwróconego <xref:System.Xaml.XamlType>opartego na czy to <xref:System.Xaml.XamlMember>reprezentuje właściwości, metody lub zdarzenia.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>      — Dla właściwości, zwracana <xref:System.Xaml.XamlType>jest typ, który ustawia właściwość jest zwracana przez właściwość.</xref:System.Xaml.XamlType>      -Na zdarzenie, zwracana <xref:System.Xaml.XamlType>jest typem obsługi zdarzeń wymagane (delegata w implementacji środowiska CLR).</xref:System.Xaml.XamlType>      — W przypadku metody <xref:System.Xaml.XamlType>jest zwracany typ.</xref:System.Xaml.XamlType>       W każdym przypadku kontekst schematu XAML jest używany do oceny typu XAML z podstawowego typu systemu.       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> Typu, który jest używany przez element członkowski. Zobacz uwagi."
  overload: System.Xaml.XamlMember.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca implementacji konwertera typu, który jest skojarzony z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Domyślna implementacja używa następującą logiką i kolejność przetwarzania: - Jeśli przypisywanie istnieje na poziomie elementu członkowskiego (<xref:System.ComponentModel.TypeConverterAttribute>), informacje o atrybutach służy do wywołania <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>przed kontekst schematu XAML.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.ComponentModel.TypeConverterAttribute>      -Jeśli <xref:System.Xaml.XamlMember.Type%2A>jest prawidłowy, jest zwracany konwertera typów, który jest skojarzony z typem.</xref:System.Xaml.XamlMember.Type%2A>      — Jeśli element członkowski jest zdarzenie, zwracany jest specyficzna dla zdarzenia typu konwertera.       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.TypeConverter%2A>.</xref:System.Xaml.XamlMember.TypeConverter%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; wystąpienia z <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> ograniczenia; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> dostępu, który jest skojarzony z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Domyślna implementacja interpretuje <xref:System.Xaml.XamlMember.UnderlyingMember%2A>właściwość jako <xref:System.Reflection.PropertyInfo>i zwraca wartość <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName>(z parametrem ustawioną `true`), która oznacza, że zwrócony metoda może być niepubliczne.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> To zachowanie może spowodować `null` określonych przypadkach. w tym przypadkach, gdy istnieje nie skojarzone metody dostępu lub element członkowski nie jest właściwością.       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartości z <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>właściwości skojarzonych <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember> Upewnij się, że wdrożenie LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, i <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>Tak, aby wszystkie zwracają wyniki skorelowane.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>Skojarzonych z nim <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> akcesor; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca system typów CLR <xref:System.Reflection.MemberInfo>skojarzonego z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  remarks: "Domyślna implementacja zwraca informacje elementu członkowskiego podstawowej, opartej na konstrukcji. Jeśli <xref:System.Reflection.MemberInfo>obiekt jest tworzony za pomocą podpisu, który nie ma wystarczającej ilości informacji do ustawienia podstawowego elementu członkowskiego, ta metoda zwraca `null`.</xref:System.Reflection.MemberInfo>       Jeśli element członkowski podstawowej została ustawiona podczas konstruowania, należy nie należy wywołać tę metodę.       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember> Upewnij się, że wdrożenie <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, i LookupUnderlyingMember tak, aby wszystkie zwracają wyniki skorelowane.</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "System typów CLR <xref:System.Reflection.MemberInfo>obiekt, który jest skojarzony z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> dostępu, który jest skojarzony z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Domyślna implementacja interpretuje <xref:System.Xaml.XamlMember.UnderlyingMember%2A>jako <xref:System.Reflection.PropertyInfo>i zwraca wartość <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName>(z parametrem ustawioną `true`), która oznacza, że zwrócony metoda może być niepubliczne.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Może to spowodować `null` dla niektórych przypadkach, także w przypadkach, gdy jest nie takiego dostępu, lub element członkowski nie jest właściwością.       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> <xref:System.Xaml.Schema.XamlMemberInvoker>skojarzone. Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember> </xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> Upewnij się, że wdrożenie <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, i <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>Tak, aby wszystkie zwracają wyniki skorelowane.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>Skojarzonych z nim <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> akcesor; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca implementację serializator wartość, która jest skojarzona z tym <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Domyślna implementacja używa następującą logiką i kolejność przetwarzania: - Jeśli przypisywanie istnieje na poziomie elementu członkowskiego (<xref:System.Windows.Markup.ValueSerializerAttribute>), informacje o atrybutach służy do wywołania <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>przed kontekst schematu XAML.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.Windows.Markup.ValueSerializerAttribute>      -Jeśli <xref:System.Xaml.XamlMember.Type%2A>jest prawidłowy, jest zwracany konwerter wartości, który jest skojarzony z typem.</xref:System.Xaml.XamlMember.Type%2A>      — Jeśli poprzednie warunki nie są stosowane, `null` jest zwracany.       Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</xref:System.Xaml.XamlMember.ValueSerializer%2A> Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember>klasy, lub jeśli znajduje się specjalistyczny metadanych dostępne, aby określić to na poszczególnych przypadków.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; wystąpienia z <xref:System.Windows.Markup.ValueSerializer>ograniczenie lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Name
  id: Name
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> Nazwa ciągu, który deklaruje to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ta wartość jest zawsze ustawiana podczas konstruowania. Konstruktory, które są implementowane przez <xref:System.Xaml.XamlMember>zwykle Zgłoś wyjątek, jeśli nie określono nazwy początkowej; w związku z tym nie będzie tę właściwość, aby być `null` lub ciąg pusty, jeśli używasz domyślnej implementacji usług .NET Framework XAML.</xref:System.Xaml.XamlMember>       [Xamlname — gramatyka](~/add/includes/ajax-current-ext-md.md) i reguły nazewnictwa dla typu CLR i elementów członkowskich nie są dokładnie intersect. Istnieje możliwość deklaruje nazwę elementu członkowskiego, który jest dozwolony w obszarze CLR, ale nie jest prawidłowy w obszarze nazw XAML. Jeśli to możliwe należy unikać tej sytuacji."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> Nazwa ciągu, który deklaruje to <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Określa, czy dwa określone <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> obiekty mają taką samą wartość."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość <code> xamlMember1 </code> jest taka sama jak wartość <code> xamlMember2 </code>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Określa, czy dwa określone <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> obiekty mają różne wartości."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość <code> xamlMember1 </code> różni się od wartości <code> xamlMember2 </code>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera jedna przestrzeń nazw XAML identyfikator URI, który identyfikuje głównej przestrzeni nazw XAML dla tego <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Właściwość PreferredXamlNamespace zapewnia taką samą wartość jak wywołanie <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>, a następnie uzyskiwanie pierwszy ciąg wartości na liście zwracanych.</xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> Preferowanym przestrzeni nazw XAML powinien być używany podczas zapisywania elementu członkowskiego z powrotem tekst lub inne oświadczenia, które zachowują informacje o przestrzeni nazw XAML."
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "Identyfikator dla głównej przestrzeni nazw XAML dla tego <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>, jako łańcuch znaków."
  overload: System.Xaml.XamlMember.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.SerializationVisibility
  id: SerializationVisibility
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> wartość, która wskazuje, jak powinna ona przetwarzać element członkowski wizualnego projektanta."
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "Wartość <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> wyliczenia. Wartość domyślna to <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref>."
  overload: System.Xaml.XamlMember.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TargetType
  id: TargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera <xref href=&quot;System.Xaml.XamlType&quot;> </xref> typu gdzie <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> może istnieć."
  remarks: "Zwrócona wartość różni się możliwe do dołączenia i niedołączalnego elementów członkowskich. Dla członków niedołączalnego TargetType zwraca <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> Dla członków możliwej <xref:System.Xaml.XamlMember.LookupTargetType%2A>zwraca wyniku, który jest oparty na tę logikę: — Jeśli odbicia nie można rozpoznać zapasowy (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), ta metoda zwraca wewnętrzny stała, który reprezentuje typ obiektu ogólnego.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A>      — Jeśli poprzednich warunków nie ma zastosowania, <xref:System.Xaml.XamlMember.LookupTargetType%2A>jest wywoływana.</xref:System.Xaml.XamlMember.LookupTargetType%2A> Domyślna implementacja zwraca <xref:System.Xaml.XamlType>opartego na sprawdzenie metod, które implementują `get` i `set` metody dostępu.</xref:System.Xaml.XamlType> Klasy mogą zastąpić <xref:System.Xaml.XamlMember.LookupTargetType%2A>do użycia inaczej, takie jak metadanych innych formularzy, które może raportować typy elementów docelowych dla członków możliwe do dołączenia.</xref:System.Xaml.XamlMember.LookupTargetType%2A>"
  syntax:
    content: public System.Xaml.XamlType TargetType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Typ gdzie <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> może istnieć. Zobacz uwagi."
  overload: System.Xaml.XamlMember.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ToString
  id: ToString
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Zwraca reprezentację ciągu tego <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ta implementacja zwraca <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Reprezentacja ciągu tego <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Type
  id: Type
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera <xref href=&quot;System.Xaml.XamlType&quot;> </xref> typu, który jest używany przez element członkowski."
  remarks: "Wywołanie typu wywołuje <xref:System.Xaml.XamlMember.LookupType%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupType%2A> Dzieje się tak, gdy logiki początkowego odbicia wewnętrznych już nie ustawiono informacji.       Zachowanie domyślne (nie <xref:System.Xaml.XamlMember.LookupType%2A>zastąpienia), zwracana <xref:System.Xaml.XamlType>może mieć inną funkcję koncepcyjny.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember.LookupType%2A> Stosuje który znaczenia zależy od tego, czy to <xref:System.Xaml.XamlMember>reprezentuje właściwości, metody lub zdarzenia, jak przedstawiono na poniższej liście: - dla właściwości, zwracana <xref:System.Xaml.XamlType>jest typ, który ustawia właściwość jest zwracana przez właściwość.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember>      -Na zdarzenie, zwracana <xref:System.Xaml.XamlType>jest typem obsługi zdarzeń wymagane (delegata w implementacji środowiska CLR).</xref:System.Xaml.XamlType>      — W przypadku metody <xref:System.Xaml.XamlType>jest typ zwrotny tej metody, które mogą być `null`.</xref:System.Xaml.XamlType>       W każdym przypadku kontekst schematu XAML jest używany do oceny typu XAML z zapasowego typu."
  syntax:
    content: public System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> Typu, który jest używany przez element członkowski. Zobacz uwagi."
  overload: System.Xaml.XamlMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; obiektu, który może służyć do tworzenia konwersji typu XAML zadeklarowany obiektów."
  remarks: "Wywoływanie funkcji TypeConverter wywołuje <xref:System.Xaml.XamlMember.LookupTypeConverter%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A> Dzieje się tak, gdy logiki początkowego odbicia wewnętrznych już nie ustawiono informacji.       Implementacje, które zwracają wartość inną niż null właściwości dla obiektu TypeConverter niekoniecznie pracy <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Poniżej przedstawiono listę możliwych wartości zwracane inną niż null dla TypeConverter i reprezentują te wartości:-wartość zwracaną raporty konwerter typu, który ma atrybut specjalnie do tego elementu członkowskiego lub ogólnie na typ docelowy konwertera. To zachowanie jest zazwyczaj jakie większość systemów typu XAML i procesorów XAML, poszukaj w celu utworzenia wystąpienia typu konwertera i wywołanie jego metody.      — Wartość zwracaną raporty konwertera wartości wbudowanych. Istnieje konwerterów dla pewnych operacji wewnętrznych, wykonywanych przez moduł zapisujący XAML. W szczególności konwerterów wartości wbudowanych konwertowanie wartości ciągu nieprzetworzonego atrybutu podstawowych poziom języka XAML. Dla implementacji usług .NET Framework XAML te konwersje typu wbudowanego często przesyła konwertera typów, który jest zdefiniowany w zestawie systemu. Na przykład konwersji dla <xref:System.Int32>wartość zawiera wbudowane przekazywane konwersji i dlatego <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A>wartość odwołania <xref:System.ComponentModel.Int32Converter>.</xref:System.ComponentModel.Int32Converter> </xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> </xref:System.Int32>      — Wartość zwracaną raporty szczególnych przypadkach modelu nieograniczonego obiektów; oznacza to, że <xref:System.Xaml.XamlMember>ma <xref:System.Xaml.XamlMember.Type%2A>wartość <xref:System.Object>.</xref:System.Object> </xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember> W takim przypadku <xref:System.Xaml.Schema.XamlValueConverter%601>zgłasza, że <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName>jest {`Object}`.</xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlValueConverter%601> Jednak <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>jest `null` , ponieważ nie rzeczywisty typ wystąpienia jest ani dostępne, aby wykonać tę konwersję.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> Zamiast tego zachowania modelu obiektu nie można określić do czasu wykonywania, gdy środowisko uruchomieniowe określonych technologii określa obsługi jego wykres obiektu.       Jeśli dostęp do działającego <xref:System.ComponentModel.TypeConverter>z <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, można wywołać metody konwersji.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> </xref:System.ComponentModel.TypeConverter> Jednak wiele metod konwersji zależne od kontekstu usługi. Jeśli nie ma tego samego kontekstu usługi dostępne, że konwerter typów oczekuje dla swojej roli typowe zapisywania obiektów dla wykresów obiektów, metod konwertera można zgłaszają wyjątki."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; wartości, z <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> ograniczenie ogólnego. Zobacz uwagi."
  overload: System.Xaml.XamlMember.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.UnderlyingMember
  id: UnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera system typów CLR <xref:System.Reflection.MemberInfo>dostępnej dla elementu członkowskiego, który jest tworzony przez <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, lub <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.Reflection.MethodInfo> </xref:System.Reflection.PropertyInfo> </xref:System.Reflection.MemberInfo>"
  remarks: "Wywoływanie UnderlyingMember wywołuje <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>"
  syntax:
    content: public System.Reflection.MemberInfo UnderlyingMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "System typów CLR <xref:System.Reflection.MemberInfo>informacji jako rzutowanie z parametrami konstruktora początkowej.</xref:System.Reflection.MemberInfo> A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> który jest tworzony z &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; zwraca podpis <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.UnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Pobiera &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; obiektu, który jest używany do serializacji wartości XAML zadeklarowany obiektów."
  remarks: "Wywoływanie ValueSerializer wywołuje <xref:System.Xaml.XamlMember.LookupValueSerializer%2A>lub określonego zastąpienia tej metody.</xref:System.Xaml.XamlMember.LookupValueSerializer%2A> Dzieje się tak, gdy logiki początkowego odbicia wewnętrznych już nie ustawiono informacji.       Nie wszystkie przypadków, które zwracają wartość inną niż null właściwości dla ValueSerializer niekoniecznie są pracy <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer> Zobacz uwagi w <xref:System.Xaml.XamlMember.TypeConverter%2A>; te same kwestie ValueSerializer.</xref:System.Xaml.XamlMember.TypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; z <xref:System.Windows.Markup.ValueSerializer>ograniczenie ogólnej.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.DeclaringType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.DependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Equals(System.Object)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlMember.GetHashCode
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Invoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
- uid: System.Xaml.XamlMember.LookupDependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
- uid: System.Xaml.XamlMember.LookupInvoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
- uid: System.Xaml.XamlMember.LookupIsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
- uid: System.Xaml.XamlMember.LookupIsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
- uid: System.Xaml.XamlMember.LookupIsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
- uid: System.Xaml.XamlMember.LookupTargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
- uid: System.Xaml.XamlMember.LookupType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
- uid: System.Xaml.XamlMember.LookupTypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
- uid: System.Xaml.XamlMember.LookupValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Name
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.Xaml.XamlMember.TargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
- uid: System.Xaml.XamlMember.Type
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
- uid: System.Xaml.XamlMember.#ctor*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember.XamlMember
- uid: System.Xaml.XamlMember.DeclaringType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
- uid: System.Xaml.XamlMember.DependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
- uid: System.Xaml.XamlMember.Equals*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals
  nameWithType: XamlMember.Equals
- uid: System.Xaml.XamlMember.GetHashCode*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode
  nameWithType: XamlMember.GetHashCode
- uid: System.Xaml.XamlMember.GetXamlNamespaces*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlMember.GetXamlNamespaces
- uid: System.Xaml.XamlMember.Invoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlMember.LookupCustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlMember.LookupDeferringLoader
- uid: System.Xaml.XamlMember.LookupDependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlMember.LookupDependsOn
- uid: System.Xaml.XamlMember.LookupInvoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlMember.LookupInvoker
- uid: System.Xaml.XamlMember.LookupIsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlMember.LookupIsAmbient
- uid: System.Xaml.XamlMember.LookupIsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlMember.LookupIsEvent
- uid: System.Xaml.XamlMember.LookupIsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlMember.LookupIsReadOnly
- uid: System.Xaml.XamlMember.LookupIsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlMember.LookupIsReadPublic
- uid: System.Xaml.XamlMember.LookupIsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlMember.LookupIsUnknown
- uid: System.Xaml.XamlMember.LookupIsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlMember.LookupIsWriteOnly
- uid: System.Xaml.XamlMember.LookupIsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlMember.LookupIsWritePublic
- uid: System.Xaml.XamlMember.LookupTargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlMember.LookupTargetType
- uid: System.Xaml.XamlMember.LookupType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType
  nameWithType: XamlMember.LookupType
- uid: System.Xaml.XamlMember.LookupTypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlMember.LookupTypeConverter
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlMember.LookupUnderlyingGetter
- uid: System.Xaml.XamlMember.LookupUnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlMember.LookupUnderlyingMember
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlMember.LookupUnderlyingSetter
- uid: System.Xaml.XamlMember.LookupValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlMember.LookupValueSerializer
- uid: System.Xaml.XamlMember.Name*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality
  nameWithType: XamlMember.op_Equality
- uid: System.Xaml.XamlMember.op_Inequality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality
  nameWithType: XamlMember.op_Inequality
- uid: System.Xaml.XamlMember.PreferredXamlNamespace*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
- uid: System.Xaml.XamlMember.TargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString
  nameWithType: XamlMember.ToString
- uid: System.Xaml.XamlMember.Type*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
