### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IWsdlExportExtension
  id: IWsdlExportExtension
  children:
  - System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  - System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  langs:
  - csharp
  name: IWsdlExportExtension
  nameWithType: IWsdlExportExtension
  fullName: System.ServiceModel.Description.IWsdlExportExtension
  type: Interface
  summary: "Definiuje zachowania punktu końcowego lub kontraktu, które można wyeksportować niestandardowych metadanych."
  remarks: "Do modyfikacji i rozszerzenia sieci Web Services Description Language (WSDL) wyeksportowany przez <xref:System.ServiceModel.Description.WsdlExporter>obiektów, zaimplementuj interfejs IWsdlExportExtension zachowania punktu końcowego, umowy lub operacji (obiekt, który implementuje albo <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior>, lub <xref:System.ServiceModel.Description.IOperationBehavior>) i Dodaj zachowania <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>, lub <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>Właściwości.</xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> </xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> </xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> </xref:System.ServiceModel.Description.IOperationBehavior> </xref:System.ServiceModel.Description.IEndpointBehavior> </xref:System.ServiceModel.Description.IContractBehavior> </xref:System.ServiceModel.Description.WsdlExporter> Ponadto można też wdrożyć IWsdlExportExtension na <xref:System.ServiceModel.Channels.BindingElement>.</xref:System.ServiceModel.Channels.BindingElement>      > [!NOTE] > Implementacje IWsdlExportExtension nigdy nie są wywoływane, jeśli zostały zaimplementowane jako <xref:System.ServiceModel.Description.IServiceBehavior>.</xref:System.ServiceModel.Description.IServiceBehavior>       IWsdlExportExtension eksportowanie mimo że niestandardowych asercji zasad [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] eksportuje potwierdzeń zasad niestandardowego powiązania do odpowiedniego elementu w języku WSDL. Aby wyeksportować niestandardowych asercji zasad, należy wdrożyć <xref:System.ServiceModel.Description.IPolicyExportExtension>interfejsu.</xref:System.ServiceModel.Description.IPolicyExportExtension>       Rozpocznie się proces Publikowanie metadanych przez wywołanie metody <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=fullName>które z kolei wywołuje <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=fullName>dla każdego punktu końcowego.</xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=fullName>       Punkt końcowy jest eksportowany przez pierwszy eksportu kontraktu. Podczas eksportowania kontrakt <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=fullName>wywołania <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=fullName>metody na wszystkich implementacji IWsdlExportExtension na kontrakt i operacja zachowania dla tego kontraktu.</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlExporter?displayProperty=fullName> Operacji korzystających z symboli wieloznacznych akcje nie są eksportowane w metadanych, więc implementacje IWsdlExportExtension na operację zachowania te operacje nie są eksportowane.       Po wyeksportowaniu kontraktu, port i powiązania są eksportowane i eksportować zasady, które są dołączone wyrażenia.       Zarówno <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>i <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>metody zapewniają dostęp do <xref:System.ServiceModel.Description.WsdlExporter>Tak, aby zgłosić implementacje IWsdlExportExtension nieodwracalny błędy i ostrzeżenia za pośrednictwem <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>Właściwości.</xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> </xref:System.ServiceModel.Description.WsdlExporter> </xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> </xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> Przekazane do obu metod obiektów kontekstu zapewniają wygodne mapowania z wyeksportowanego elementy WSDL do właściwości <xref:System.ServiceModel.Description.ContractDescription>i <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów.</xref:System.ServiceModel.Description.ServiceEndpoint> </xref:System.ServiceModel.Description.ContractDescription>       Jeśli implementacja IWsdlExportExtension zgłasza wyjątek w obiekcie eksportu, wygenerowanego metadanych jest w stanie niespójnym i <xref:System.ServiceModel.Description.WsdlExporter>obiektu powinny zostać odrzucone.</xref:System.ServiceModel.Description.WsdlExporter>      > [!NOTE] > Rozszerzenia eksportu niestandardowe muszą zostać uruchomione po wbudowanych serializator wypełnia opisu usługi."
  example:
  - "The following code example shows an IWsdlExportExtension that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public interface IWsdlExportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  id: ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  langs:
  - csharp
  name: ExportContract(WsdlExporter,WsdlContractConversionContext)
  nameWithType: IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Zapisuje elementy niestandardowe Web Services Description Language (WSDL) w wygenerowanym pliku WSDL dla kontraktu."
  remarks: "Metoda ExportContract jest wywoływane, gdy system eksportu metadanych jest eksportu kontraktu. Tylko zachowania kontrakt i operacja implementowania <xref:System.ServiceModel.Description.IWsdlExportExtension>uzyskania połączenia ExportContract.</xref:System.ServiceModel.Description.IWsdlExportExtension> Wszystkie zachowania implementacja <xref:System.ServiceModel.Description.IWsdlExportExtension>uzyskać <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>wywołań.</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> </xref:System.ServiceModel.Description.IWsdlExportExtension>       Użyj `context` parametr, aby zmodyfikować WSDL do wyeksportowania. Na przykład zobacz sekcję przykład."
  example:
  - "The following code example shows an <xref:System.ServiceModel.Description.IWsdlExportExtension> that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: "<xref href=&quot;System.ServiceModel.Description.WsdlExporter&quot;> </xref> Który Eksportuje informacje kontraktu."
    - id: context
      type: System.ServiceModel.Description.WsdlContractConversionContext
      description: "Zawiera mapowania z wyeksportowanego elementy WSDL Opis kontraktu."
  overload: System.ServiceModel.Description.IWsdlExportExtension.ExportContract*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  id: ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  langs:
  - csharp
  name: ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  nameWithType: IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Zapisuje elementy niestandardowe Web Services Description Language (WSDL) w wygenerowanym pliku WSDL dla punktu końcowego."
  remarks: "Zaimplementuj metodę ExportEndpoint, aby zmodyfikować WSDL wyeksportowane dla punktu końcowego. Ta metoda jest wywoływana po wyeksportowaniu kontrakt przez <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>"
  example:
  - "The following code example shows an <xref:System.ServiceModel.Description.IWsdlExportExtension> that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: "<xref href=&quot;System.ServiceModel.Description.WsdlExporter&quot;> </xref> Który Eksportuje informacje o punkcie końcowym."
    - id: context
      type: System.ServiceModel.Description.WsdlEndpointConversionContext
      description: "Zawiera mapowania z wyeksportowanego elementy WSDL w opisie punktu końcowego."
  overload: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportContract(WsdlExporter,WsdlContractConversionContext)
  nameWithType: IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
- uid: System.ServiceModel.Description.WsdlExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlExporter
  nameWithType: WsdlExporter
  fullName: System.ServiceModel.Description.WsdlExporter
- uid: System.ServiceModel.Description.WsdlContractConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlContractConversionContext
  nameWithType: WsdlContractConversionContext
  fullName: System.ServiceModel.Description.WsdlContractConversionContext
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  nameWithType: IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
- uid: System.ServiceModel.Description.WsdlEndpointConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlEndpointConversionContext
  nameWithType: WsdlEndpointConversionContext
  fullName: System.ServiceModel.Description.WsdlEndpointConversionContext
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract*
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportContract
  nameWithType: IWsdlExportExtension.ExportContract
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint*
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportEndpoint
  nameWithType: IWsdlExportExtension.ExportEndpoint
