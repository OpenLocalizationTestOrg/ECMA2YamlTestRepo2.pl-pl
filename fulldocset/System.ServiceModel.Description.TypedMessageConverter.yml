### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.TypedMessageConverter
  id: TypedMessageConverter
  children:
  - System.ServiceModel.Description.TypedMessageConverter.#ctor
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  - System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  langs:
  - csharp
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter
  fullName: System.ServiceModel.Description.TypedMessageConverter
  type: Class
  summary: "Konwertuje komunikatu o określonym typie komunikat bez typu lub do komunikatu o określonym typie komunikat bez typu."
  remarks: "Ta klasa udostępnia funkcje, aby przekonwertować komunikatu o określonym typie komunikat bez typu lub do komunikatu o określonym typie komunikat bez typu. Komunikatu o określonym typie jest wystąpieniem typu, który ma <xref:System.ServiceModel.MessageContractAttribute>atrybutu adnotacji.</xref:System.ServiceModel.MessageContractAttribute> Komunikat bez typu to taki, który jest wystąpieniem <xref:System.ServiceModel.Channels.Message>klasy.</xref:System.ServiceModel.Channels.Message>  Można dodawać adnotacje do typu z <xref:System.ServiceModel.MessageContractAttribute>Tworzenie typu niestandardowy komunikat, a następnie użycie metody dostarczone przez tę klasę przekonwertować go bez typu <xref:System.ServiceModel.Channels.Message>wystąpienia.</xref:System.ServiceModel.Channels.Message> </xref:System.ServiceModel.MessageContractAttribute>"
  syntax:
    content: public abstract class TypedMessageConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: TypedMessageConverter()
  nameWithType: TypedMessageConverter.TypedMessageConverter()
  fullName: System.ServiceModel.Description.TypedMessageConverter.TypedMessageConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> klasy."
  syntax:
    content: protected TypedMessageConverter ();
    parameters: []
  overload: System.ServiceModel.Description.TypedMessageConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  id: Create(System.Type,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String)
  nameWithType: TypedMessageConverter.Create(Type,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Reprezentuje statyczną metodę, która zwraca <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Typ kontraktu komunikatu, który jest <xref:System.Type>adnotacjami z <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Ciąg akcji."
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Argumenty<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ kontraktu określony komunikat nie ma MessageContractAttribute stosowane"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  id: Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Reprezentuje statyczną metodę, która zwraca <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.DataContractFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Typ kontraktu komunikatu, który jest <xref:System.Type>adnotacjami z <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Ciąg akcji."
    - id: formatterAttribute
      type: System.ServiceModel.DataContractFormatAttribute
      description: "A <xref:System.ServiceModel.DataContractFormatAttribute>, który określa program formatujący, który ma być używany.</xref:System.ServiceModel.DataContractFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Argumenty<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ kontraktu określony komunikat nie ma MessageContractAttribute stosowane"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  id: Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Reprezentuje statyczną metodę, która zwraca <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Typ kontraktu komunikatu, który jest <xref:System.Type>adnotacjami z <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Ciąg akcji."
    - id: formatterAttribute
      type: System.ServiceModel.XmlSerializerFormatAttribute
      description: "A <xref:System.ServiceModel.XmlSerializerFormatAttribute>, który określa program formatujący, który ma być używany.</xref:System.ServiceModel.XmlSerializerFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Argumenty<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ kontraktu określony komunikat nie ma MessageContractAttribute stosowane"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  id: Create(System.Type,System.String,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String)
  nameWithType: TypedMessageConverter.Create(Type,String,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Reprezentuje statyczną metodę, która zwraca <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Typ kontraktu komunikatu, który jest <xref:System.Type>adnotacjami z <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Ciąg akcji."
    - id: defaultNamespace
      type: System.String
      description: "Przestrzeń nazw."
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Argumenty<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ kontraktu określony komunikat nie ma MessageContractAttribute stosowane"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  id: Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Reprezentuje statyczną metodę, która zwraca <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.DataContractFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Typ kontraktu komunikatu, który jest <xref:System.Type>adnotacjami z <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Ciąg akcji."
    - id: defaultNamespace
      type: System.String
      description: "Przestrzeń nazw."
    - id: formatterAttribute
      type: System.ServiceModel.DataContractFormatAttribute
      description: "A <xref:System.ServiceModel.DataContractFormatAttribute>, który określa program formatujący, który ma być używany.</xref:System.ServiceModel.DataContractFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Argumenty<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ kontraktu określony komunikat nie ma MessageContractAttribute stosowane"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  id: Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Reprezentuje statyczną metodę, która zwraca <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Typ kontraktu komunikatu, który jest <xref:System.Type>adnotacjami z <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Ciąg akcji."
    - id: defaultNamespace
      type: System.String
      description: "Przestrzeń nazw."
    - id: formatterAttribute
      type: System.ServiceModel.XmlSerializerFormatAttribute
      description: "A <xref:System.ServiceModel.XmlSerializerFormatAttribute>, który określa program formatujący, który ma być używany.</xref:System.ServiceModel.XmlSerializerFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "A <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> wystąpienia."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Argumenty<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ kontraktu określony komunikat nie ma MessageContractAttribute stosowane"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  id: FromMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: FromMessage(Message)
  nameWithType: TypedMessageConverter.FromMessage(Message)
  fullName: System.ServiceModel.Description.TypedMessageConverter.FromMessage(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Tworzy komunikatu o określonym typie z określonego <xref:System.ServiceModel.Channels.Message>wystąpienia.</xref:System.ServiceModel.Channels.Message>"
  remarks: "Ta metoda przyjmuje bez typu [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] komunikatu, oznacza to, że wystąpienie <xref:System.ServiceModel.Channels.Message>i konwertuje je do komunikatu o określonym typie, oznacza to, że wystąpienie typu, który jest oznaczony przez <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract object FromMessage (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Komunikat bez typu."
    return:
      type: System.Object
      description: "Obiekt będący komunikatu o określonym typie."
  overload: System.ServiceModel.Description.TypedMessageConverter.FromMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  id: ToMessage(System.Object)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: ToMessage(Object)
  nameWithType: TypedMessageConverter.ToMessage(Object)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Tworzy <xref:System.ServiceModel.Channels.Message>wystąpienia określonego typu komunikatu.</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage);
    parameters:
    - id: typedMessage
      type: System.Object
      description: "Komunikatu o określonym typie."
    return:
      type: System.ServiceModel.Channels.Message
      description: "A <xref:System.ServiceModel.Channels.Message>wystąpienia.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  id: ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: ToMessage(Object,MessageVersion)
  nameWithType: TypedMessageConverter.ToMessage(Object,MessageVersion)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object,MessageVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Tworzy <xref:System.ServiceModel.Channels.Message>wystąpienie z określonym wpisany komunikat przy użyciu określonej wersji.</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage, System.ServiceModel.Channels.MessageVersion version);
    parameters:
    - id: typedMessage
      type: System.Object
      description: "Komunikatu o określonym typie."
    - id: version
      type: System.ServiceModel.Channels.MessageVersion
      description: "A <xref:System.ServiceModel.Channels.MessageVersion>, który określa wersji SOAP i WS-Addressing skojarzony z komunikatem.</xref:System.ServiceModel.Channels.MessageVersion>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "A <xref:System.ServiceModel.Channels.Message>wystąpienia.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: TypedMessageConverter()
  nameWithType: TypedMessageConverter.TypedMessageConverter()
  fullName: System.ServiceModel.Description.TypedMessageConverter.TypedMessageConverter()
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String)
  nameWithType: TypedMessageConverter.Create(Type,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String)
- uid: System.ServiceModel.Description.TypedMessageConverter
  parent: System.ServiceModel.Description
  isExternal: false
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter
  fullName: System.ServiceModel.Description.TypedMessageConverter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
- uid: System.ServiceModel.DataContractFormatAttribute
  parent: System.ServiceModel
  isExternal: true
  name: DataContractFormatAttribute
  nameWithType: DataContractFormatAttribute
  fullName: System.ServiceModel.DataContractFormatAttribute
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
- uid: System.ServiceModel.XmlSerializerFormatAttribute
  parent: System.ServiceModel
  isExternal: true
  name: XmlSerializerFormatAttribute
  nameWithType: XmlSerializerFormatAttribute
  fullName: System.ServiceModel.XmlSerializerFormatAttribute
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String)
  nameWithType: TypedMessageConverter.Create(Type,String,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String)
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: FromMessage(Message)
  nameWithType: TypedMessageConverter.FromMessage(Message)
  fullName: System.ServiceModel.Description.TypedMessageConverter.FromMessage(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage(Object)
  nameWithType: TypedMessageConverter.ToMessage(Object)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object)
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage(Object,MessageVersion)
  nameWithType: TypedMessageConverter.ToMessage(Object,MessageVersion)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object,MessageVersion)
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter.TypedMessageConverter
- uid: System.ServiceModel.Description.TypedMessageConverter.Create*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create
  nameWithType: TypedMessageConverter.Create
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: FromMessage
  nameWithType: TypedMessageConverter.FromMessage
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage
  nameWithType: TypedMessageConverter.ToMessage
